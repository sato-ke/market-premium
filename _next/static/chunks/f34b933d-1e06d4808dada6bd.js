"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[793],{12:(e,t,i)=>{i.d(t,{A:()=>d});var s=i(3261),r=i(8119),a=i(3675),o=i(6077),n=i(5432);class d extends s.A{describe(){return this.deepExtend(super.describe(),{id:"delta",name:"Delta Exchange",countries:["VC"],rateLimit:300,version:"v2",has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!0,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!0,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:void 0,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchFundingRates:!0,fetchGreeks:!0,fetchIndexOHLCV:!0,fetchLedger:!0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarginMode:!0,fetchMarginModes:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenOrders:!0,fetchOption:!0,fetchOptionChain:!1,fetchOrderBook:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTransfer:void 0,fetchTransfers:void 0,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawal:void 0,fetchWithdrawals:void 0,reduceMargin:!0,setLeverage:!0,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","1d":"1d","7d":"7d","1w":"1w","2w":"2w","1M":"30d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/99450025-3be60a00-2931-11eb-9302-f4fd8d8589aa.jpg",test:{public:"https://testnet-api.delta.exchange",private:"https://testnet-api.delta.exchange"},api:{public:"https://api.delta.exchange",private:"https://api.delta.exchange"},www:"https://www.delta.exchange",doc:["https://docs.delta.exchange"],fees:"https://www.delta.exchange/fees",referral:"https://www.delta.exchange/app/signup/?code=IULYNB"},api:{public:{get:["assets","indices","products","products/{symbol}","tickers","tickers/{symbol}","l2orderbook/{symbol}","trades/{symbol}","stats","history/candles","history/sparklines","settings"]},private:{get:["orders","products/{product_id}/orders/leverage","positions/margined","positions","orders/history","fills","fills/history/download/csv","wallet/balances","wallet/transactions","wallet/transactions/download","wallets/sub_accounts_transfer_history","users/trading_preferences","sub_accounts","profile","deposits/address","orders/leverage"],post:["orders","orders/bracket","orders/batch","products/{product_id}/orders/leverage","positions/change_margin","positions/close_all","wallets/sub_account_balance_transfer","orders/cancel_after","orders/leverage"],put:["orders","orders/bracket","orders/batch","positions/auto_topup","users/update_mmp","users/reset_mmp"],delete:["orders","orders/all","orders/batch"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100"),this.parseNumber("0.0013")],[this.parseNumber("250"),this.parseNumber("0.0013")],[this.parseNumber("1000"),this.parseNumber("0.001")],[this.parseNumber("5000"),this.parseNumber("0.0009")],[this.parseNumber("10000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("100"),this.parseNumber("0.001")],[this.parseNumber("250"),this.parseNumber("0.0009")],[this.parseNumber("1000"),this.parseNumber("0.00075")],[this.parseNumber("5000"),this.parseNumber("0.0006")],[this.parseNumber("10000"),this.parseNumber("0.0005")],[this.parseNumber("20000"),this.parseNumber("0.0005")]]}}},options:{networks:{TRC20:"TRC20(TRON)",BEP20:"BEP20(BSC)"}},features:{default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!0},triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:{triggerPriceType:void 0,price:!0},timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5},fetchOrder:void 0,fetchOpenOrders:{marginMode:!1,limit:100,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:500,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:2e3}},spot:{extends:"default"},swap:{linear:{extends:"default"},inverse:{extends:"default"}},future:{linear:{extends:"default"},inverse:{extends:"default"}}},precisionMode:a.kb,requiredCredentials:{apiKey:!0,secret:!0},exceptions:{exact:{insufficient_margin:r.InsufficientFunds,order_size_exceed_available:r.InvalidOrder,risk_limits_breached:r.BadRequest,invalid_contract:r.BadSymbol,immediate_liquidation:r.InvalidOrder,out_of_bankruptcy:r.InvalidOrder,self_matching_disrupted_post_only:r.InvalidOrder,immediate_execution_post_only:r.InvalidOrder,bad_schema:r.BadRequest,invalid_api_key:r.AuthenticationError,invalid_signature:r.AuthenticationError,open_order_not_found:r.OrderNotFound,unavailable:r.ExchangeNotAvailable},broad:{}}})}createExpiredOptionMarket(e){let t,i,s;let r="USDT",a=e.split("-"),o=e.split("/");e.indexOf("/")>-1?(t=this.safeString(o,0),i=this.safeString(a,1),s=this.safeString(a,3)):(t=this.safeString(a,1),i=this.safeString(a,3),s=this.safeString(a,0));let n=this.safeString(a,2),d=this.convertExpireDate(i),h=this.parse8601(d);return{id:s+"-"+t+"-"+n+"-"+i,symbol:t+"/"+r+":"+r+"-"+i+"-"+n+"-"+s,base:t,quote:r,settle:r,baseId:t,quoteId:r,settleId:r,active:!1,type:"option",linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!0,margin:!1,contract:!0,contractSize:this.parseNumber("1"),expiry:h,expiryDatetime:d,optionType:"C"===s?"call":"put",strike:this.parseNumber(n),precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0}}safeMarket(e,t,i,s){return void 0!==e&&(e.endsWith("-C")||e.endsWith("-P")||e.startsWith("C-")||e.startsWith("P-"))&&!(e in this.markets_by_id)?this.createExpiredOptionMarket(e):super.safeMarket(e,t,i,s)}async fetchTime(e={}){let t=await this.publicGetSettings(e),i=this.safeDict(t,"result",{});return this.safeIntegerProduct(i,"server_time",.001)}async fetchStatus(e={}){let t=await this.publicGetSettings(e),i=this.safeDict(t,"result",{});return{status:"true"===this.safeString(i,"under_maintenance")?"maintenance":"ok",updated:this.safeIntegerProduct(i,"server_time",.001,this.milliseconds()),eta:void 0,url:void 0,info:t}}async fetchCurrencies(e={}){let t=await this.publicGetAssets(e),i=this.safeList(t,"result",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"symbol"),a=this.safeInteger(t,"id"),o=this.safeCurrencyCode(r),n=this.safeString(t,"deposit_status"),d=this.safeString(t,"withdrawal_status"),h="enabled"===n,l="enabled"===d,c=h&&l;s[o]={id:r,numericId:a,code:o,name:this.safeString(t,"name"),info:t,active:c,deposit:h,withdraw:l,fee:this.safeNumber(t,"base_withdrawal_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(t,"min_withdrawal_amount"),max:void 0}},networks:{}}}return s}async loadMarkets(e=!1,t={}){let i=await super.loadMarkets(e,t);return(void 0===this.safeDict(this.options,"currenciesByNumericId")||e)&&(this.options.currenciesByNumericId=this.indexByStringifiedNumericId(this.currencies)),(void 0===this.safeDict(this.options,"marketsByNumericId")||e)&&(this.options.marketsByNumericId=this.indexByStringifiedNumericId(this.markets)),i}indexByStringifiedNumericId(e){let t={};if(void 0===e)return;let i=Object.keys(e);for(let s=0;s<i.length;s++){let r=e[i[s]],a=this.safeString(r,"numericId");void 0!==a&&(t[a]=r)}return t}async fetchMarkets(e={}){let t=await this.publicGetProducts(e),i=this.safeList(t,"result",[]),s=[];for(let e=0;e<i.length;e++){let t,r;let a=i[e],o=this.safeString(a,"contract_type");if("options_combos"===o)continue;let n=this.safeDict(a,"quoting_asset",{}),d=this.safeDict(a,"underlying_asset",{}),h=this.safeDict(a,"settling_asset"),l=this.safeDict(a,"product_specs",{}),c=this.safeString(d,"symbol"),m=this.safeString(n,"symbol"),u=this.safeString(h,"symbol"),p=this.safeString(a,"symbol"),f=this.safeInteger(a,"id"),g=this.safeCurrencyCode(c),b=this.safeCurrencyCode(m),y=this.safeCurrencyCode(u),v="call_options"===o,_="put_options"===o,k="move_options"===o,w="spot"===o,S="perpetual_futures"===o,N="futures"===o,M=v||_||k,O=this.safeString(a,"strike_price"),P=this.safeString(a,"settlement_time"),x=this.parse8601(P),I=this.safeNumber(a,"contract_value");t=w?this.parseNumber(this.parsePrecision(this.safeString(l,"underlying_precision"))):this.parseNumber("1");let T=y===b,D=g+"/"+b;if(S||N||M){if(D=D+":"+y,N||M){if(D=D+"-"+this.yymmdd(x),M){o="option";let e="C";r="call",_?(e="P",r="put"):k&&(e="M",r="move"),D=D+"-"+O+"-"+e}else o="future"}else o="swap"}let C=this.safeString(a,"state");s.push({id:p,numericId:f,symbol:D,base:g,quote:b,settle:y,baseId:c,quoteId:m,settleId:u,type:o,spot:w,margin:!!w&&void 0,swap:S,future:N,option:M,active:"live"===C,contract:!w,linear:w?void 0:T,inverse:w?void 0:!T,taker:this.safeNumber(a,"taker_commission_rate"),maker:this.safeNumber(a,"maker_commission_rate"),contractSize:I,expiry:x,expiryDatetime:P,strike:this.parseNumber(O),optionType:r,precision:{amount:t,price:this.safeNumber(a,"tick_size")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber("1"),max:this.safeNumber(a,"position_size_limit")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(a,"min_size"),max:void 0}},created:this.parse8601(this.safeString(a,"launch_time")),info:a})}return s}parseTicker(e,t){let i=this.safeIntegerProduct(e,"timestamp",.001),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeString(e,"close"),o=this.safeDict(e,"quotes",{});return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeNumber(e,"high"),low:this.safeNumber(e,"low"),bid:this.safeNumber(o,"best_bid"),bidVolume:this.safeNumber(o,"bid_size"),ask:this.safeNumber(o,"best_ask"),askVolume:this.safeNumber(o,"ask_size"),vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeNumber(e,"volume"),quoteVolume:this.safeNumber(e,"turnover"),markPrice:this.safeNumber(e,"mark_price"),indexPrice:this.safeNumber(e,"spot_price"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetTickersSymbol(this.extend(s,t)),a=this.safeDict(r,"result",{});return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetTickers(t),s=this.safeList(i,"result",[]),r={};for(let e=0;e<s.length;e++){let t=this.parseTicker(s[e]);r[t.symbol]=t}return this.filterByArrayTickers(r,"symbol",e)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.depth=t);let a=await this.publicGetL2orderbookSymbol(this.extend(r,i)),o=this.safeDict(a,"result",{});return this.parseOrderBook(o,s.symbol,void 0,"buy","sell","price","size")}parseTrade(e,t){let i;let s=this.safeString(e,"id"),r=this.safeString(e,"order_id"),a=this.parse8601(this.safeString(e,"created_at"));a=this.safeIntegerProduct(e,"timestamp",.001,a);let o=this.safeString(e,"price"),n=this.safeString(e,"size"),d=this.safeDict(e,"product",{}),h=this.safeString(d,"symbol"),l=this.safeSymbol(h,t),c=this.safeString(e,"seller_role"),m=this.safeString(e,"side");void 0===m&&("taker"===c?m="sell":"maker"===c&&(m="buy"));let u=this.safeString(e,"role"),p=this.safeDict(e,"meta_data",{}),f=this.safeString(p,"order_type");void 0!==f&&(f=f.replace("_order",""));let g=this.safeString(e,"commission");if(void 0!==g){let e=this.safeDict(d,"settling_asset",{}),t=this.safeString(e,"symbol");i={cost:g,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:s,order:r,timestamp:a,datetime:this.iso8601(a),symbol:l,type:f,side:m,price:o,amount:n,cost:void 0,takerOrMaker:u,fee:i,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id},o=await this.publicGetTradesSymbol(this.extend(a,s)),n=this.safeList(o,"result",[]);return this.parseTrades(n,r,t,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={resolution:this.safeString(this.timeframes,t,t)},n=this.parseTimeframe(t);s=s||2e3;let d=this.safeIntegerProduct(r,"until",.001),h=void 0!==d;if(h&&(d=this.parseToInt(d)),void 0===i){let e=h?d:this.seconds();o.end=e,o.start=e-s*n}else{let e=this.parseToInt(i/1e3);o.start=e,o.end=h?d:this.sum(e,s*n)}let l=this.safeString(r,"price");"mark"===l?o.symbol="MARK:"+a.id:"index"===l?o.symbol=a.info.spot_index.symbol:o.symbol=a.id,r=this.omit(r,["price","until"]);let c=await this.publicGetHistoryCandles(this.extend(o,r)),m=this.safeList(c,"result",[]);return this.parseOHLCVs(m,a,t,i,s)}parseBalance(e){let t=this.safeList(e,"result",[]),i={info:e},s=this.safeDict(this.options,"currenciesByNumericId",{});for(let e=0;e<t.length;e++){let r=t[e],a=this.safeString(r,"asset_id"),o=this.safeDict(s,a),n=void 0===o?a:o.code,d=this.account();d.total=this.safeString(r,"balance"),d.free=this.safeString(r,"available_balance"),i[n]=d}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetWalletBalances(e);return this.parseBalance(t)}async fetchPosition(e,t={}){await this.loadMarkets();let i=this.market(e),s={product_id:i.numericId},r=await this.privateGetPositions(this.extend(s,t)),a=this.safeDict(r,"result",{});return this.parsePosition(a,i)}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.privateGetPositionsMargined(t),s=this.safeList(i,"result",[]);return this.parsePositions(s,e)}parsePosition(e,t){let i;let s=this.safeString(e,"product_symbol"),r=(t=this.safeMarket(s,t)).symbol,a=this.safeIntegerProduct(e,"timestamp",.001),n=this.safeString(e,"size");return void 0!==n&&(o.Y.stringGt(n,"0")?i="buy":o.Y.stringLt(n,"0")&&(i="sell")),this.safePosition({info:e,id:void 0,symbol:r,notional:void 0,marginMode:void 0,liquidationPrice:this.safeNumber(e,"liquidation_price"),entryPrice:this.safeNumber(e,"entry_price"),unrealizedPnl:void 0,percentage:void 0,contracts:this.parseNumber(n),contractSize:this.safeNumber(t,"contractSize"),markPrice:void 0,side:i,hedged:void 0,timestamp:a,datetime:this.iso8601(a),maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:void 0,marginRatio:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}parseOrderStatus(e){return this.safeString({open:"open",pending:"open",closed:"closed",cancelled:"canceled"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"id"),r=this.safeString(e,"client_order_id"),a=this.parse8601(this.safeString(e,"created_at")),o=this.safeString(e,"product_id"),n=this.safeDict(this.options,"marketsByNumericId",{}),d=void 0===(t=this.safeValue(n,o,t))?o:t.symbol,h=this.parseOrderStatus(this.safeString(e,"state")),l=this.safeString(e,"side"),c=this.safeString(e,"order_type");c=c.replace("_order","");let m=this.safeString(e,"limit_price"),u=this.safeString(e,"size"),p=this.safeString(e,"unfilled_size"),f=this.safeString(e,"average_fill_price"),g=this.safeString(e,"paid_commission");if(void 0!==g){let e;if(void 0!==t){let i=this.safeDict(t.info,"settling_asset",{}),s=this.safeString(i,"symbol");e=this.safeCurrencyCode(s)}i={cost:g,currency:e}}return this.safeOrder({info:e,id:s,clientOrderId:r,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:d,type:c,side:l,price:m,amount:u,cost:void 0,average:f,filled:void 0,remaining:p,status:h,fee:i,trades:void 0},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n={product_id:o.numericId,size:this.amountToPrecision(o.symbol,s),side:i,order_type:t+"_order"};"limit"===t&&(n.limit_price=this.priceToPrecision(o.symbol,r));let d=this.safeString2(a,"clientOrderId","client_order_id");a=this.omit(a,["clientOrderId","client_order_id"]),void 0!==d&&(n.client_order_id=d);let h=this.safeBool(a,"reduceOnly");h&&(n.reduce_only=h,a=this.omit(a,"reduceOnly"));let l=await this.privatePostOrders(this.extend(n,a)),c=this.safeDict(l,"result",{});return this.parseOrder(c,o)}async editOrder(e,t,i,s,r,a,o={}){await this.loadMarkets();let n=this.market(t),d={id:parseInt(e),product_id:n.numericId};void 0!==r&&(d.size=parseInt(this.amountToPrecision(t,r))),void 0!==a&&(d.limit_price=this.priceToPrecision(t,a));let h=await this.privatePutOrders(this.extend(d,o)),l=this.safeDict(h,"result");return this.parseOrder(l,n)}async cancelOrder(e,t,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),a={id:parseInt(e),product_id:s.numericId},o=await this.privateDeleteOrders(this.extend(a,i)),n=this.safeDict(o,"result");return this.parseOrder(n,s)}async cancelAllOrders(e,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();let i={product_id:this.market(e).numericId},s=this.privateDeleteOrdersAll(this.extend(i,t));return[this.safeOrder({info:s})]}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersWithMethod("privateGetOrders",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersWithMethod("privateGetOrdersHistory",e,t,i,s)}async fetchOrdersWithMethod(e,t,i,s,r={}){let a,o;await this.loadMarkets();let n={};void 0!==t&&(a=this.market(t),n.product_ids=a.numericId),void 0!==i&&(n.start_time=i.toString()+"000"),void 0!==s&&(n.page_size=s),"privateGetOrders"===e?o=await this.privateGetOrders(this.extend(n,r)):"privateGetOrdersHistory"===e&&(o=await this.privateGetOrdersHistory(this.extend(n,r)));let d=this.safeList(o,"result",[]);return this.parseOrders(d,a,i,s)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.product_ids=r.numericId),void 0!==t&&(a.start_time=t.toString()+"000"),void 0!==i&&(a.page_size=i);let o=await this.privateGetFills(this.extend(a,s)),n=this.safeList(o,"result",[]);return this.parseTrades(n,r,t,i)}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.asset_id=r.numericId),void 0!==i&&(a.page_size=i);let o=await this.privateGetWalletTransactions(this.extend(a,s)),n=this.safeList(o,"result",[]);return this.parseLedger(n,r,t,i)}parseLedgerEntryType(e){return this.safeString({pnl:"pnl",deposit:"transaction",withdrawal:"transaction",commission:"fee",conversion:"trade",referral_bonus:"referral",commission_rebate:"rebate"},e,e)}parseLedgerEntry(e,t){let i;let s=this.safeString(e,"uuid"),r=this.safeDict(e,"meta_data",{}),a=this.safeString(r,"transaction_id"),n=this.safeString(e,"transaction_type");"deposit"===n||"commission_rebate"===n||"referral_bonus"===n||"pnl"===n||"withdrawal_cancellation"===n||"promo_credit"===n?i="in":("withdrawal"===n||"commission"===n||"conversion"===n||"perpetual_futures_funding"===n)&&(i="out"),n=this.parseLedgerEntryType(n);let d=this.safeString(e,"asset_id"),h=this.safeDict(this.options,"currenciesByNumericId"),l=void 0===(t=this.safeValue(h,d,t))?void 0:t.code,c=this.safeString(e,"amount"),m=this.parse8601(this.safeString(e,"created_at")),u=this.safeString(e,"balance"),p=o.Y.stringMax("0",o.Y.stringSub(u,c));return this.safeLedgerEntry({info:e,id:s,direction:i,account:void 0,referenceId:a,referenceAccount:void 0,type:n,currency:l,amount:this.parseNumber(c),before:this.parseNumber(p),after:this.parseNumber(u),status:"ok",timestamp:m,datetime:this.iso8601(m),fee:void 0},t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={asset_symbol:i.id},r=this.safeStringUpper(t,"network");void 0!==r&&(s.network=this.networkCodeToId(r,e),t=this.omit(t,"network"));let a=await this.privateGetDepositsAddress(this.extend(s,t)),o=this.safeDict(a,"result",{});return this.parseDepositAddress(o,i)}parseDepositAddress(e,t){let i=this.safeString(e,"address"),s=this.safeString(e,"asset_symbol"),r=this.safeString(e,"network");return this.checkAddress(i),{info:e,currency:this.safeCurrencyCode(s,t),network:this.networkIdToCode(r),address:i,tag:this.safeString(e,"memo")}}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");let s={symbol:i.id},a=await this.publicGetTickersSymbol(this.extend(s,t)),o=this.safeDict(a,"result",{});return this.parseFundingRate(o,i)}async fetchFundingRates(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetTickers(this.extend({contract_types:"perpetual_futures"},t)),s=this.safeList(i,"result",[]);return this.parseFundingRates(s,e)}parseFundingRate(e,t){let i=this.safeIntegerProduct(e,"timestamp",.001),s=this.safeString(e,"symbol"),r=this.safeString(e,"funding_rate"),a=o.Y.stringDiv(r,"100");return{info:e,symbol:this.safeSymbol(s,t),markPrice:this.safeNumber(e,"mark_price"),indexPrice:this.safeNumber(e,"spot_price"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:i,datetime:this.iso8601(i),fundingRate:this.parseNumber(a),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"reduce",i)}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);t=t.toString(),"reduce"===i&&(t=o.Y.stringMul(t,"-1"));let a={product_id:r.numericId,delta_margin:t},n=await this.privatePostPositionsChangeMargin(this.extend(a,s)),d=this.safeDict(n,"result",{});return this.parseMarginModification(d,r)}parseMarginModification(e,t){let i=this.safeString(e,"product_symbol");return{info:e,symbol:(t=this.safeMarket(i,t)).symbol,type:void 0,marginMode:"isolated",amount:void 0,total:this.safeNumber(e,"margin"),code:void 0,status:void 0,timestamp:void 0,datetime:void 0}}async fetchOpenInterest(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.contract)throw new r.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");let s={symbol:i.id},a=await this.publicGetTickersSymbol(this.extend(s,t)),o=this.safeDict(a,"result",{});return this.parseOpenInterest(o,i)}parseOpenInterest(e,t){let i=this.safeIntegerProduct(e,"timestamp",.001),s=this.safeString(e,"symbol");return this.safeOpenInterest({symbol:this.safeSymbol(s,t),baseVolume:this.safeNumber(e,"oi_value"),quoteVolume:this.safeNumber(e,"oi_value_usd"),openInterestAmount:this.safeNumber(e,"oi_contracts"),openInterestValue:this.safeNumber(e,"oi"),timestamp:i,datetime:this.iso8601(i),info:e},t)}async fetchLeverage(e,t={}){await this.loadMarkets();let i=this.market(e),s={product_id:i.numericId},r=await this.privateGetProductsProductIdOrdersLeverage(this.extend(s,t)),a=this.safeDict(r,"result",{});return this.parseLeverage(a,i)}parseLeverage(e,t){let i=this.safeString(e,"index_symbol"),s=this.safeInteger(e,"leverage");return{info:e,symbol:this.safeSymbol(i,t),marginMode:this.safeStringLower(e,"margin_mode"),longLeverage:s,shortLeverage:s}}async setLeverage(e,t,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();let s={product_id:this.market(t).numericId,leverage:e};return await this.privatePostProductsProductIdOrdersLeverage(this.extend(s,i))}async fetchSettlementHistory(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={states:"expired"};void 0!==i&&(a.page_size=i);let o=await this.publicGetProducts(this.extend(a,s)),n=this.safeList(o,"result",[]),d=this.parseSettlements(n,r),h=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(h,r.symbol,t,i)}parseSettlement(e,t){let i=this.safeString(e,"settlement_time"),s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t),price:this.safeNumber(e,"settlement_price"),timestamp:this.parse8601(i),datetime:i}}parseSettlements(e,t){let i=[];for(let s=0;s<e.length;s++)i.push(this.parseSettlement(e[s],t));return i}async fetchGreeks(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetTickersSymbol(this.extend(s,t)),a=this.safeDict(r,"result",{});return this.parseGreeks(a,i)}parseGreeks(e,t){let i=this.safeIntegerProduct(e,"timestamp",.001),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeDict(e,"greeks",{}),o=this.safeDict(e,"quotes",{});return{symbol:r,timestamp:i,datetime:this.iso8601(i),delta:this.safeNumber(a,"delta"),gamma:this.safeNumber(a,"gamma"),theta:this.safeNumber(a,"theta"),vega:this.safeNumber(a,"vega"),rho:this.safeNumber(a,"rho"),bidSize:this.safeNumber(o,"bid_size"),askSize:this.safeNumber(o,"ask_size"),bidImpliedVolatility:this.safeNumber(o,"bid_iv"),askImpliedVolatility:this.safeNumber(o,"ask_iv"),markImpliedVolatility:this.safeNumber(o,"mark_iv"),bidPrice:this.safeNumber(o,"best_bid"),askPrice:this.safeNumber(o,"best_ask"),markPrice:this.safeNumber(e,"mark_price"),lastPrice:void 0,underlyingPrice:this.safeNumber(e,"spot_price"),info:e}}async closeAllPositions(e={}){await this.loadMarkets();let t=await this.privatePostPositionsCloseAll(this.extend({close_all_portfolio:!0,close_all_isolated:!0},e));return[this.parsePosition(this.safeDict(t,"result",{}))]}async fetchMarginMode(e,t={}){let i;await this.loadMarkets(),void 0!==e&&(i=this.market(e));let s=await this.privateGetProfile(t),r=this.safeDict(s,"result",{});return this.parseMarginMode(r,i)}parseMarginMode(e,t){let i;return void 0!==t&&(i=t.symbol),{info:e,symbol:i,marginMode:this.safeString(e,"margin_mode")}}async fetchOption(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetTickersSymbol(this.extend(s,t)),a=this.safeDict(r,"result",{});return this.parseOption(a,void 0,i)}parseOption(e,t,i){let s=this.safeString(e,"symbol");i=this.safeMarket(s,i);let r=this.safeDict(e,"quotes",{}),a=this.safeIntegerProduct(e,"timestamp",.001);return{info:e,currency:void 0,symbol:i.symbol,timestamp:a,datetime:this.iso8601(a),impliedVolatility:this.safeNumber(r,"mark_iv"),openInterest:this.safeNumber(e,"oi"),bidPrice:this.safeNumber(r,"best_bid"),askPrice:this.safeNumber(r,"best_ask"),midPrice:this.safeNumber(r,"impact_mid_price"),markPrice:this.safeNumber(e,"mark_price"),lastPrice:void 0,underlyingPrice:this.safeNumber(e,"spot_price"),change:void 0,percentage:void 0,baseVolume:this.safeNumber(e,"volume"),quoteVolume:void 0}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.version+"/"+this.implodeParams(e,s),d=this.urls.api[t]+o,h=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(h).length&&(d+="?"+this.urlencode(h));else if("private"===t){this.checkRequiredCredentials();let e=this.seconds().toString();r={"api-key":this.apiKey,timestamp:e};let t=i+e+o;if("GET"===i){if(Object.keys(h).length){let e="?"+this.urlencode(h);t+=e,d+=e}}else t+=a=this.json(h),r["Content-Type"]="application/json";let s=this.hmac(this.encode(t),this.encode(this.secret),n.s);r.signature=s}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o,n,d,h){if(void 0===n)return;let l=this.safeDict(n,"error",{}),c=this.safeString(l,"code");if(void 0!==c){let e=this.id+" "+o;throw this.throwExactlyMatchedException(this.exceptions.exact,c,e),this.throwBroadlyMatchedException(this.exceptions.broad,c,e),new r.ExchangeError(e)}}}}}]);