(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[846],{5714:e=>{!function(){var t={675:function(e,t){"use strict";t.byteLength=function(e){var t=h(e),i=t[0],s=t[1];return(i+s)*3/4-s},t.toByteArray=function(e){var t,i,a=h(e),n=a[0],o=a[1],d=new r((n+o)*3/4-o),l=0,c=o>0?n-4:n;for(i=0;i<c;i+=4)t=s[e.charCodeAt(i)]<<18|s[e.charCodeAt(i+1)]<<12|s[e.charCodeAt(i+2)]<<6|s[e.charCodeAt(i+3)],d[l++]=t>>16&255,d[l++]=t>>8&255,d[l++]=255&t;return 2===o&&(t=s[e.charCodeAt(i)]<<2|s[e.charCodeAt(i+1)]>>4,d[l++]=255&t),1===o&&(t=s[e.charCodeAt(i)]<<10|s[e.charCodeAt(i+1)]<<4|s[e.charCodeAt(i+2)]>>2,d[l++]=t>>8&255,d[l++]=255&t),d},t.fromByteArray=function(e){for(var t,s=e.length,r=s%3,a=[],n=0,o=s-r;n<o;n+=16383)a.push(function(e,t,s){for(var r,a=[],n=t;n<s;n+=3)a.push(i[(r=(e[n]<<16&0xff0000)+(e[n+1]<<8&65280)+(255&e[n+2]))>>18&63]+i[r>>12&63]+i[r>>6&63]+i[63&r]);return a.join("")}(e,n,n+16383>o?o:n+16383));return 1===r?a.push(i[(t=e[s-1])>>2]+i[t<<4&63]+"=="):2===r&&a.push(i[(t=(e[s-2]<<8)+e[s-1])>>10]+i[t>>4&63]+i[t<<2&63]+"="),a.join("")};for(var i=[],s=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n=0,o=a.length;n<o;++n)i[n]=a[n],s[a.charCodeAt(n)]=n;function h(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");var i=e.indexOf("=");-1===i&&(i=t);var s=i===t?0:4-i%4;return[i,s]}s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63},72:function(e,t,i){"use strict";var s=i(675),r=i(783),a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function n(e){if(e>0x7fffffff)throw RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,o.prototype),t}function o(e,t,i){if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return l(e)}return h(e,t,i)}function h(e,t,i){if("string"==typeof e)return function(e,t){if(("string"!=typeof t||""===t)&&(t="utf8"),!o.isEncoding(t))throw TypeError("Unknown encoding: "+t);var i=0|f(e,t),s=n(i),r=s.write(e,t);return r!==i&&(s=s.slice(0,r)),s}(e,t);if(ArrayBuffer.isView(e))return c(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(A(e,ArrayBuffer)||e&&A(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(A(e,SharedArrayBuffer)||e&&A(e.buffer,SharedArrayBuffer)))return function(e,t,i){var s;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(i||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(s=void 0===t&&void 0===i?new Uint8Array(e):void 0===i?new Uint8Array(e,t):new Uint8Array(e,t,i),o.prototype),s}(e,t,i);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');var s=e.valueOf&&e.valueOf();if(null!=s&&s!==e)return o.from(s,t,i);var r=function(e){if(o.isBuffer(e)){var t,i=0|u(e.length),s=n(i);return 0===s.length||e.copy(s,0,0,i),s}return void 0!==e.length?"number"!=typeof e.length||(t=e.length)!=t?n(0):c(e):"Buffer"===e.type&&Array.isArray(e.data)?c(e.data):void 0}(e);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return o.from(e[Symbol.toPrimitive]("string"),t,i);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function d(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function l(e){return d(e),n(e<0?0:0|u(e))}function c(e){for(var t=e.length<0?0:0|u(e.length),i=n(t),s=0;s<t;s+=1)i[s]=255&e[s];return i}function u(e){if(e>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}function f(e,t){if(o.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||A(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var i=e.length,s=arguments.length>2&&!0===arguments[2];if(!s&&0===i)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":return I(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return P(e).length;default:if(r)return s?-1:I(e).length;t=(""+t).toLowerCase(),r=!0}}function p(e,t,i){var r,a,n=!1;if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===i||i>this.length)&&(i=this.length),i<=0||(i>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,i){var s=e.length;(!t||t<0)&&(t=0),(!i||i<0||i>s)&&(i=s);for(var r="",a=t;a<i;++a)r+=C[e[a]];return r}(this,t,i);case"utf8":case"utf-8":return v(this,t,i);case"ascii":return function(e,t,i){var s="";i=Math.min(e.length,i);for(var r=t;r<i;++r)s+=String.fromCharCode(127&e[r]);return s}(this,t,i);case"latin1":case"binary":return function(e,t,i){var s="";i=Math.min(e.length,i);for(var r=t;r<i;++r)s+=String.fromCharCode(e[r]);return s}(this,t,i);case"base64":return r=t,a=i,0===r&&a===this.length?s.fromByteArray(this):s.fromByteArray(this.slice(r,a));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,i){for(var s=e.slice(t,i),r="",a=0;a<s.length;a+=2)r+=String.fromCharCode(s[a]+256*s[a+1]);return r}(this,t,i);default:if(n)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function m(e,t,i){var s=e[t];e[t]=e[i],e[i]=s}function g(e,t,i,s,r){var a;if(0===e.length)return -1;if("string"==typeof i?(s=i,i=0):i>0x7fffffff?i=0x7fffffff:i<-0x80000000&&(i=-0x80000000),(a=i=+i)!=a&&(i=r?0:e.length-1),i<0&&(i=e.length+i),i>=e.length){if(r)return -1;i=e.length-1}else if(i<0){if(!r)return -1;i=0}if("string"==typeof t&&(t=o.from(t,s)),o.isBuffer(t))return 0===t.length?-1:y(e,t,i,s,r);if("number"==typeof t)return(t&=255,"function"==typeof Uint8Array.prototype.indexOf)?r?Uint8Array.prototype.indexOf.call(e,t,i):Uint8Array.prototype.lastIndexOf.call(e,t,i):y(e,[t],i,s,r);throw TypeError("val must be string, number or Buffer")}function y(e,t,i,s,r){var a,n=1,o=e.length,h=t.length;if(void 0!==s&&("ucs2"===(s=String(s).toLowerCase())||"ucs-2"===s||"utf16le"===s||"utf-16le"===s)){if(e.length<2||t.length<2)return -1;n=2,o/=2,h/=2,i/=2}function d(e,t){return 1===n?e[t]:e.readUInt16BE(t*n)}if(r){var l=-1;for(a=i;a<o;a++)if(d(e,a)===d(t,-1===l?0:a-l)){if(-1===l&&(l=a),a-l+1===h)return l*n}else -1!==l&&(a-=a-l),l=-1}else for(i+h>o&&(i=o-h),a=i;a>=0;a--){for(var c=!0,u=0;u<h;u++)if(d(e,a+u)!==d(t,u)){c=!1;break}if(c)return a}return -1}function v(e,t,i){i=Math.min(e.length,i);for(var s=[],r=t;r<i;){var a,n,o,h,d=e[r],l=null,c=d>239?4:d>223?3:d>191?2:1;if(r+c<=i)switch(c){case 1:d<128&&(l=d);break;case 2:(192&(a=e[r+1]))==128&&(h=(31&d)<<6|63&a)>127&&(l=h);break;case 3:a=e[r+1],n=e[r+2],(192&a)==128&&(192&n)==128&&(h=(15&d)<<12|(63&a)<<6|63&n)>2047&&(h<55296||h>57343)&&(l=h);break;case 4:a=e[r+1],n=e[r+2],o=e[r+3],(192&a)==128&&(192&n)==128&&(192&o)==128&&(h=(15&d)<<18|(63&a)<<12|(63&n)<<6|63&o)>65535&&h<1114112&&(l=h)}null===l?(l=65533,c=1):l>65535&&(l-=65536,s.push(l>>>10&1023|55296),l=56320|1023&l),s.push(l),r+=c}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);for(var i="",s=0;s<t;)i+=String.fromCharCode.apply(String,e.slice(s,s+=4096));return i}(s)}function b(e,t,i){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>i)throw RangeError("Trying to access beyond buffer length")}function w(e,t,i,s,r,a){if(!o.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<a)throw RangeError('"value" argument is out of bounds');if(i+s>e.length)throw RangeError("Index out of range")}function k(e,t,i,s,r,a){if(i+s>e.length||i<0)throw RangeError("Index out of range")}function S(e,t,i,s,a){return t=+t,i>>>=0,a||k(e,t,i,4,34028234663852886e22,-34028234663852886e22),r.write(e,t,i,s,23,4),i+4}function O(e,t,i,s,a){return t=+t,i>>>=0,a||k(e,t,i,8,17976931348623157e292,-17976931348623157e292),r.write(e,t,i,s,52,8),i+8}t.Buffer=o,t.SlowBuffer=function(e){return+e!=e&&(e=0),o.alloc(+e)},t.INSPECT_MAX_BYTES=50,t.kMaxLength=0x7fffffff,o.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),o.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(o.prototype,"parent",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.buffer}}),Object.defineProperty(o.prototype,"offset",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.byteOffset}}),o.poolSize=8192,o.from=function(e,t,i){return h(e,t,i)},Object.setPrototypeOf(o.prototype,Uint8Array.prototype),Object.setPrototypeOf(o,Uint8Array),o.alloc=function(e,t,i){return(d(e),e<=0)?n(e):void 0!==t?"string"==typeof i?n(e).fill(t,i):n(e).fill(t):n(e)},o.allocUnsafe=function(e){return l(e)},o.allocUnsafeSlow=function(e){return l(e)},o.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==o.prototype},o.compare=function(e,t){if(A(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),A(t,Uint8Array)&&(t=o.from(t,t.offset,t.byteLength)),!o.isBuffer(e)||!o.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var i=e.length,s=t.length,r=0,a=Math.min(i,s);r<a;++r)if(e[r]!==t[r]){i=e[r],s=t[r];break}return i<s?-1:s<i?1:0},o.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(e,t){if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return o.alloc(0);if(void 0===t)for(i=0,t=0;i<e.length;++i)t+=e[i].length;var i,s=o.allocUnsafe(t),r=0;for(i=0;i<e.length;++i){var a=e[i];if(A(a,Uint8Array)&&(a=o.from(a)),!o.isBuffer(a))throw TypeError('"list" argument must be an Array of Buffers');a.copy(s,r),r+=a.length}return s},o.byteLength=f,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)m(this,t,t+1);return this},o.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},o.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},o.prototype.toString=function(){var e=this.length;return 0===e?"":0==arguments.length?v(this,0,e):p.apply(this,arguments)},o.prototype.toLocaleString=o.prototype.toString,o.prototype.equals=function(e){if(!o.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===o.compare(this,e)},o.prototype.inspect=function(){var e="",i=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,i).replace(/(.{2})/g,"$1 ").trim(),this.length>i&&(e+=" ... "),"<Buffer "+e+">"},a&&(o.prototype[a]=o.prototype.inspect),o.prototype.compare=function(e,t,i,s,r){if(A(e,Uint8Array)&&(e=o.from(e,e.offset,e.byteLength)),!o.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===i&&(i=e?e.length:0),void 0===s&&(s=0),void 0===r&&(r=this.length),t<0||i>e.length||s<0||r>this.length)throw RangeError("out of range index");if(s>=r&&t>=i)return 0;if(s>=r)return -1;if(t>=i)return 1;if(t>>>=0,i>>>=0,s>>>=0,r>>>=0,this===e)return 0;for(var a=r-s,n=i-t,h=Math.min(a,n),d=this.slice(s,r),l=e.slice(t,i),c=0;c<h;++c)if(d[c]!==l[c]){a=d[c],n=l[c];break}return a<n?-1:n<a?1:0},o.prototype.includes=function(e,t,i){return -1!==this.indexOf(e,t,i)},o.prototype.indexOf=function(e,t,i){return g(this,e,t,i,!0)},o.prototype.lastIndexOf=function(e,t,i){return g(this,e,t,i,!1)},o.prototype.write=function(e,t,i,s){if(void 0===t)s="utf8",i=this.length,t=0;else if(void 0===i&&"string"==typeof t)s=t,i=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(i)?(i>>>=0,void 0===s&&(s="utf8")):(s=i,i=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var r,a,n,o,h,d,l,c,u,f,p,m,g=this.length-t;if((void 0===i||i>g)&&(i=g),e.length>0&&(i<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");s||(s="utf8");for(var y=!1;;)switch(s){case"hex":return function(e,t,i,s){i=Number(i)||0;var r=e.length-i;s?(s=Number(s))>r&&(s=r):s=r;var a=t.length;s>a/2&&(s=a/2);for(var n=0;n<s;++n){var o=parseInt(t.substr(2*n,2),16);if(o!=o)break;e[i+n]=o}return n}(this,e,t,i);case"utf8":case"utf-8":return h=t,d=i,M(I(e,this.length-h),this,h,d);case"ascii":return l=t,c=i,M(x(e),this,l,c);case"latin1":case"binary":return r=this,a=e,n=t,o=i,M(x(a),r,n,o);case"base64":return u=t,f=i,M(P(e),this,u,f);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return p=t,m=i,M(function(e,t){for(var i,s,r=[],a=0;a<e.length&&!((t-=2)<0);++a)s=(i=e.charCodeAt(a))>>8,r.push(i%256),r.push(s);return r}(e,this.length-p),this,p,m);default:if(y)throw TypeError("Unknown encoding: "+s);s=(""+s).toLowerCase(),y=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},o.prototype.slice=function(e,t){var i=this.length;e=~~e,t=void 0===t?i:~~t,e<0?(e+=i)<0&&(e=0):e>i&&(e=i),t<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e);var s=this.subarray(e,t);return Object.setPrototypeOf(s,o.prototype),s},o.prototype.readUIntLE=function(e,t,i){e>>>=0,t>>>=0,i||b(e,t,this.length);for(var s=this[e],r=1,a=0;++a<t&&(r*=256);)s+=this[e+a]*r;return s},o.prototype.readUIntBE=function(e,t,i){e>>>=0,t>>>=0,i||b(e,t,this.length);for(var s=this[e+--t],r=1;t>0&&(r*=256);)s+=this[e+--t]*r;return s},o.prototype.readUInt8=function(e,t){return e>>>=0,t||b(e,1,this.length),this[e]},o.prototype.readUInt16LE=function(e,t){return e>>>=0,t||b(e,2,this.length),this[e]|this[e+1]<<8},o.prototype.readUInt16BE=function(e,t){return e>>>=0,t||b(e,2,this.length),this[e]<<8|this[e+1]},o.prototype.readUInt32LE=function(e,t){return e>>>=0,t||b(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+0x1000000*this[e+3]},o.prototype.readUInt32BE=function(e,t){return e>>>=0,t||b(e,4,this.length),0x1000000*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},o.prototype.readIntLE=function(e,t,i){e>>>=0,t>>>=0,i||b(e,t,this.length);for(var s=this[e],r=1,a=0;++a<t&&(r*=256);)s+=this[e+a]*r;return s>=(r*=128)&&(s-=Math.pow(2,8*t)),s},o.prototype.readIntBE=function(e,t,i){e>>>=0,t>>>=0,i||b(e,t,this.length);for(var s=t,r=1,a=this[e+--s];s>0&&(r*=256);)a+=this[e+--s]*r;return a>=(r*=128)&&(a-=Math.pow(2,8*t)),a},o.prototype.readInt8=function(e,t){return(e>>>=0,t||b(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},o.prototype.readInt16LE=function(e,t){e>>>=0,t||b(e,2,this.length);var i=this[e]|this[e+1]<<8;return 32768&i?0xffff0000|i:i},o.prototype.readInt16BE=function(e,t){e>>>=0,t||b(e,2,this.length);var i=this[e+1]|this[e]<<8;return 32768&i?0xffff0000|i:i},o.prototype.readInt32LE=function(e,t){return e>>>=0,t||b(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},o.prototype.readInt32BE=function(e,t){return e>>>=0,t||b(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},o.prototype.readFloatLE=function(e,t){return e>>>=0,t||b(e,4,this.length),r.read(this,e,!0,23,4)},o.prototype.readFloatBE=function(e,t){return e>>>=0,t||b(e,4,this.length),r.read(this,e,!1,23,4)},o.prototype.readDoubleLE=function(e,t){return e>>>=0,t||b(e,8,this.length),r.read(this,e,!0,52,8)},o.prototype.readDoubleBE=function(e,t){return e>>>=0,t||b(e,8,this.length),r.read(this,e,!1,52,8)},o.prototype.writeUIntLE=function(e,t,i,s){if(e=+e,t>>>=0,i>>>=0,!s){var r=Math.pow(2,8*i)-1;w(this,e,t,i,r,0)}var a=1,n=0;for(this[t]=255&e;++n<i&&(a*=256);)this[t+n]=e/a&255;return t+i},o.prototype.writeUIntBE=function(e,t,i,s){if(e=+e,t>>>=0,i>>>=0,!s){var r=Math.pow(2,8*i)-1;w(this,e,t,i,r,0)}var a=i-1,n=1;for(this[t+a]=255&e;--a>=0&&(n*=256);)this[t+a]=e/n&255;return t+i},o.prototype.writeUInt8=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,1,255,0),this[t]=255&e,t+1},o.prototype.writeUInt16LE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeUInt16BE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeUInt32LE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,4,0xffffffff,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},o.prototype.writeUInt32BE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,4,0xffffffff,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeIntLE=function(e,t,i,s){if(e=+e,t>>>=0,!s){var r=Math.pow(2,8*i-1);w(this,e,t,i,r-1,-r)}var a=0,n=1,o=0;for(this[t]=255&e;++a<i&&(n*=256);)e<0&&0===o&&0!==this[t+a-1]&&(o=1),this[t+a]=(e/n>>0)-o&255;return t+i},o.prototype.writeIntBE=function(e,t,i,s){if(e=+e,t>>>=0,!s){var r=Math.pow(2,8*i-1);w(this,e,t,i,r-1,-r)}var a=i-1,n=1,o=0;for(this[t+a]=255&e;--a>=0&&(n*=256);)e<0&&0===o&&0!==this[t+a+1]&&(o=1),this[t+a]=(e/n>>0)-o&255;return t+i},o.prototype.writeInt8=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},o.prototype.writeInt16LE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},o.prototype.writeInt16BE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},o.prototype.writeInt32LE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,4,0x7fffffff,-0x80000000),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},o.prototype.writeInt32BE=function(e,t,i){return e=+e,t>>>=0,i||w(this,e,t,4,0x7fffffff,-0x80000000),e<0&&(e=0xffffffff+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},o.prototype.writeFloatLE=function(e,t,i){return S(this,e,t,!0,i)},o.prototype.writeFloatBE=function(e,t,i){return S(this,e,t,!1,i)},o.prototype.writeDoubleLE=function(e,t,i){return O(this,e,t,!0,i)},o.prototype.writeDoubleBE=function(e,t,i){return O(this,e,t,!1,i)},o.prototype.copy=function(e,t,i,s){if(!o.isBuffer(e))throw TypeError("argument should be a Buffer");if(i||(i=0),s||0===s||(s=this.length),t>=e.length&&(t=e.length),t||(t=0),s>0&&s<i&&(s=i),s===i||0===e.length||0===this.length)return 0;if(t<0)throw RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw RangeError("Index out of range");if(s<0)throw RangeError("sourceEnd out of bounds");s>this.length&&(s=this.length),e.length-t<s-i&&(s=e.length-t+i);var r=s-i;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,i,s);else if(this===e&&i<t&&t<s)for(var a=r-1;a>=0;--a)e[a+t]=this[a+i];else Uint8Array.prototype.set.call(e,this.subarray(i,s),t);return r},o.prototype.fill=function(e,t,i,s){if("string"==typeof e){if("string"==typeof t?(s=t,t=0,i=this.length):"string"==typeof i&&(s=i,i=this.length),void 0!==s&&"string"!=typeof s)throw TypeError("encoding must be a string");if("string"==typeof s&&!o.isEncoding(s))throw TypeError("Unknown encoding: "+s);if(1===e.length){var r,a=e.charCodeAt(0);("utf8"===s&&a<128||"latin1"===s)&&(e=a)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<i)throw RangeError("Out of range index");if(i<=t)return this;if(t>>>=0,i=void 0===i?this.length:i>>>0,e||(e=0),"number"==typeof e)for(r=t;r<i;++r)this[r]=e;else{var n=o.isBuffer(e)?e:o.from(e,s),h=n.length;if(0===h)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(r=0;r<i-t;++r)this[r+t]=n[r%h]}return this};var T=/[^+/0-9A-Za-z-_]/g;function I(e,t){t=t||1/0;for(var i,s=e.length,r=null,a=[],n=0;n<s;++n){if((i=e.charCodeAt(n))>55295&&i<57344){if(!r){if(i>56319||n+1===s){(t-=3)>-1&&a.push(239,191,189);continue}r=i;continue}if(i<56320){(t-=3)>-1&&a.push(239,191,189),r=i;continue}i=(r-55296<<10|i-56320)+65536}else r&&(t-=3)>-1&&a.push(239,191,189);if(r=null,i<128){if((t-=1)<0)break;a.push(i)}else if(i<2048){if((t-=2)<0)break;a.push(i>>6|192,63&i|128)}else if(i<65536){if((t-=3)<0)break;a.push(i>>12|224,i>>6&63|128,63&i|128)}else if(i<1114112){if((t-=4)<0)break;a.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}else throw Error("Invalid code point")}return a}function x(e){for(var t=[],i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}function P(e){return s.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(T,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function M(e,t,i,s){for(var r=0;r<s&&!(r+i>=t.length)&&!(r>=e.length);++r)t[r+i]=e[r];return r}function A(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}var C=function(){for(var e="0123456789abcdef",t=Array(256),i=0;i<16;++i)for(var s=16*i,r=0;r<16;++r)t[s+r]=e[i]+e[r];return t}()},783:function(e,t){t.read=function(e,t,i,s,r){var a,n,o=8*r-s-1,h=(1<<o)-1,d=h>>1,l=-7,c=i?r-1:0,u=i?-1:1,f=e[t+c];for(c+=u,a=f&(1<<-l)-1,f>>=-l,l+=o;l>0;a=256*a+e[t+c],c+=u,l-=8);for(n=a&(1<<-l)-1,a>>=-l,l+=s;l>0;n=256*n+e[t+c],c+=u,l-=8);if(0===a)a=1-d;else{if(a===h)return n?NaN:1/0*(f?-1:1);n+=Math.pow(2,s),a-=d}return(f?-1:1)*n*Math.pow(2,a-s)},t.write=function(e,t,i,s,r,a){var n,o,h,d=8*a-r-1,l=(1<<d)-1,c=l>>1,u=23===r?5960464477539062e-23:0,f=s?0:a-1,p=s?1:-1,m=t<0||0===t&&1/t<0?1:0;for(isNaN(t=Math.abs(t))||t===1/0?(o=isNaN(t)?1:0,n=l):(n=Math.floor(Math.log(t)/Math.LN2),t*(h=Math.pow(2,-n))<1&&(n--,h*=2),n+c>=1?t+=u/h:t+=u*Math.pow(2,1-c),t*h>=2&&(n++,h/=2),n+c>=l?(o=0,n=l):n+c>=1?(o=(t*h-1)*Math.pow(2,r),n+=c):(o=t*Math.pow(2,c-1)*Math.pow(2,r),n=0));r>=8;e[i+f]=255&o,f+=p,o/=256,r-=8);for(n=n<<r|o,d+=r;d>0;e[i+f]=255&n,f+=p,n/=256,d-=8);e[i+f-p]|=128*m}}},i={};function s(e){var r=i[e];if(void 0!==r)return r.exports;var a=i[e]={exports:{}},n=!0;try{t[e](a,a.exports,s),n=!1}finally{n&&delete i[e]}return a.exports}s.ab="//";var r=s(72);e.exports=r}()},6735:e=>{"use strict";e.exports=function(){throw Error("ws does not work in the browser. Browser clients must use the native WebSocket object")}},7407:e=>{"use strict";var t=String.prototype.replace,i=/%20/g;e.exports={default:"RFC3986",formatters:{RFC1738:function(e){return t.call(e,i,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},5743:(e,t,i)=>{"use strict";var s=i(2780),r=i(7066),a=i(7407);e.exports={formats:a,parse:r,stringify:s}},7066:(e,t,i)=>{"use strict";var s=i(1104),r=Object.prototype.hasOwnProperty,a={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:s.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},n=function(e,t){var i={},n=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,o=t.parameterLimit===1/0?void 0:t.parameterLimit,h=n.split(t.delimiter,o),d=-1,l=t.charset;if(t.charsetSentinel)for(c=0;c<h.length;++c)0===h[c].indexOf("utf8=")&&("utf8=%E2%9C%93"===h[c]?l="utf-8":"utf8=%26%2310003%3B"===h[c]&&(l="iso-8859-1"),d=c,c=h.length);for(c=0;c<h.length;++c)if(c!==d){var c,u,f,p=h[c],m=p.indexOf("]="),g=-1===m?p.indexOf("="):m+1;-1===g?(u=t.decoder(p,a.decoder,l),f=t.strictNullHandling?null:""):(u=t.decoder(p.slice(0,g),a.decoder,l),f=t.decoder(p.slice(g+1),a.decoder,l)),f&&t.interpretNumericEntities&&"iso-8859-1"===l&&(f=f.replace(/&#(\d+);/g,function(e,t){return String.fromCharCode(parseInt(t,10))})),f&&t.comma&&f.indexOf(",")>-1&&(f=f.split(",")),r.call(i,u)?i[u]=s.combine(i[u],f):i[u]=f}return i},o=function(e,t,i){for(var s=t,r=e.length-1;r>=0;--r){var a,n=e[r];if("[]"===n&&i.parseArrays)a=[].concat(s);else{a=i.plainObjects?Object.create(null):{};var o="["===n.charAt(0)&&"]"===n.charAt(n.length-1)?n.slice(1,-1):n,h=parseInt(o,10);i.parseArrays||""!==o?!isNaN(h)&&n!==o&&String(h)===o&&h>=0&&i.parseArrays&&h<=i.arrayLimit?(a=[])[h]=s:a[o]=s:a={0:s}}s=a}return s},h=function(e,t,i){if(e){var s=i.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,a=/(\[[^[\]]*])/g,n=/(\[[^[\]]*])/.exec(s),h=n?s.slice(0,n.index):s,d=[];if(h){if(!i.plainObjects&&r.call(Object.prototype,h)&&!i.allowPrototypes)return;d.push(h)}for(var l=0;null!==(n=a.exec(s))&&l<i.depth;){if(l+=1,!i.plainObjects&&r.call(Object.prototype,n[1].slice(1,-1))&&!i.allowPrototypes)return;d.push(n[1])}return n&&d.push("["+s.slice(n.index)+"]"),o(d,t,i)}},d=function(e){if(!e)return a;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw Error("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?a.charset:e.charset;return{allowDots:void 0===e.allowDots?a.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:a.allowPrototypes,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:a.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:a.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:a.comma,decoder:"function"==typeof e.decoder?e.decoder:a.decoder,delimiter:"string"==typeof e.delimiter||s.isRegExp(e.delimiter)?e.delimiter:a.delimiter,depth:"number"==typeof e.depth?e.depth:a.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:a.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:a.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:a.strictNullHandling}};e.exports=function(e,t){var i=d(t);if(""===e||null==e)return i.plainObjects?Object.create(null):{};for(var r="string"==typeof e?n(e,i):e,a=i.plainObjects?Object.create(null):{},o=Object.keys(r),l=0;l<o.length;++l){var c=o[l],u=h(c,r[c],i);a=s.merge(a,u,i)}return s.compact(a)}},2780:(e,t,i)=>{"use strict";var s=i(1104),r=i(7407),a=Object.prototype.hasOwnProperty,n={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},o=Array.isArray,h=Array.prototype.push,d=function(e,t){h.apply(e,o(t)?t:[t])},l=Date.prototype.toISOString,c={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:s.encode,encodeValuesOnly:!1,formatter:r.formatters[r.default],indices:!1,serializeDate:function(e){return l.call(e)},skipNulls:!1,strictNullHandling:!1},u=function e(t,i,r,a,n,h,l,u,f,p,m,g,y){var v,b=t;if("function"==typeof l?b=l(i,b):b instanceof Date?b=p(b):"comma"===r&&o(b)&&(b=b.join(",")),null===b){if(a)return h&&!g?h(i,c.encoder,y):i;b=""}if("string"==typeof b||"number"==typeof b||"boolean"==typeof b||s.isBuffer(b))return h?[m(g?i:h(i,c.encoder,y))+"="+m(h(b,c.encoder,y))]:[m(i)+"="+m(String(b))];var w=[];if(void 0===b)return w;if(o(l))v=l;else{var k=Object.keys(b);v=u?k.sort(u):k}for(var S=0;S<v.length;++S){var O=v[S];n&&null===b[O]||(o(b)?d(w,e(b[O],"function"==typeof r?r(i,O):i,r,a,n,h,l,u,f,p,m,g,y)):d(w,e(b[O],i+(f?"."+O:"["+O+"]"),r,a,n,h,l,u,f,p,m,g,y)))}return w},f=function(e){if(!e)return c;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw TypeError("Encoder has to be a function.");var t=e.charset||c.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var i=r.default;if(void 0!==e.format){if(!a.call(r.formatters,e.format))throw TypeError("Unknown format option provided.");i=e.format}var s=r.formatters[i],n=c.filter;return("function"==typeof e.filter||o(e.filter))&&(n=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:c.addQueryPrefix,allowDots:void 0===e.allowDots?c.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:c.charsetSentinel,delimiter:void 0===e.delimiter?c.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:c.encode,encoder:"function"==typeof e.encoder?e.encoder:c.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:c.encodeValuesOnly,filter:n,formatter:s,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:c.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:c.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:c.strictNullHandling}};e.exports=function(e,t){var i,s,r=e,a=f(t);"function"==typeof a.filter?r=(0,a.filter)("",r):o(a.filter)&&(i=a.filter);var h=[];if("object"!=typeof r||null===r)return"";s=t&&t.arrayFormat in n?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var l=n[s];i||(i=Object.keys(r)),a.sort&&i.sort(a.sort);for(var c=0;c<i.length;++c){var p=i[c];a.skipNulls&&null===r[p]||d(h,u(r[p],p,l,a.strictNullHandling,a.skipNulls,a.encode?a.encoder:null,a.filter,a.sort,a.allowDots,a.serializeDate,a.formatter,a.encodeValuesOnly,a.charset))}var m=h.join(a.delimiter),g=!0===a.addQueryPrefix?"?":"";return a.charsetSentinel&&("iso-8859-1"===a.charset?g+="utf8=%26%2310003%3B&":g+="utf8=%E2%9C%93&"),m.length>0?g+m:""}},1104:e=>{"use strict";var t=Object.prototype.hasOwnProperty,i=Array.isArray,s=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),r=function(e){for(;e.length>1;){var t=e.pop(),s=t.obj[t.prop];if(i(s)){for(var r=[],a=0;a<s.length;++a)void 0!==s[a]&&r.push(s[a]);t.obj[t.prop]=r}}},a=function(e,t){for(var i=t&&t.plainObjects?Object.create(null):{},s=0;s<e.length;++s)void 0!==e[s]&&(i[s]=e[s]);return i};e.exports={arrayToObject:a,assign:function(e,t){return Object.keys(t).reduce(function(e,i){return e[i]=t[i],e},e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],i=[],s=0;s<t.length;++s)for(var a=t[s],n=a.obj[a.prop],o=Object.keys(n),h=0;h<o.length;++h){var d=o[h],l=n[d];"object"==typeof l&&null!==l&&-1===i.indexOf(l)&&(t.push({obj:n,prop:d}),i.push(l))}return r(t),e},decode:function(e,t,i){var s=e.replace(/\+/g," ");if("iso-8859-1"===i)return s.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(s)}catch(e){return s}},encode:function(e,t,i){if(0===e.length)return e;var r="string"==typeof e?e:String(e);if("iso-8859-1"===i)return escape(r).replace(/%u[0-9a-f]{4}/gi,function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"});for(var a="",n=0;n<r.length;++n){var o=r.charCodeAt(n);if(45===o||46===o||95===o||126===o||o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122){a+=r.charAt(n);continue}if(o<128){a+=s[o];continue}if(o<2048){a+=s[192|o>>6]+s[128|63&o];continue}if(o<55296||o>=57344){a+=s[224|o>>12]+s[128|o>>6&63]+s[128|63&o];continue}n+=1,a+=s[240|(o=65536+((1023&o)<<10|1023&r.charCodeAt(n)))>>18]+s[128|o>>12&63]+s[128|o>>6&63]+s[128|63&o]}return a},isBuffer:function(e){return!!e&&"object"==typeof e&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},merge:function e(s,r,n){if(!r)return s;if("object"!=typeof r){if(i(s))s.push(r);else{if(!s||"object"!=typeof s)return[s,r];(n&&(n.plainObjects||n.allowPrototypes)||!t.call(Object.prototype,r))&&(s[r]=!0)}return s}if(!s||"object"!=typeof s)return[s].concat(r);var o=s;return(i(s)&&!i(r)&&(o=a(s,n)),i(s)&&i(r))?(r.forEach(function(i,r){if(t.call(s,r)){var a=s[r];a&&"object"==typeof a&&i&&"object"==typeof i?s[r]=e(a,i,n):s.push(i)}else s[r]=i}),s):Object.keys(r).reduce(function(i,s){var a=r[s];return t.call(i,s)?i[s]=e(i[s],a,n):i[s]=a,i},o)}}},8559:(e,t,i)=>{"use strict";i.d(t,{YE:()=>r.Y,Ay:()=>r3});var s=i(937),r=i(6077),a=i(7411),n=i(8119);class o extends s.k{}let h=o;var d=i(3675),l=i(5432);class c extends h{describe(){return this.deepExtend(super.describe(),{id:"ace",name:"ACE",countries:["TW"],version:"v2",rateLimit:100,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!1,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!1,ws:!1},timeframes:{"1m":1,"5m":5,"10m":10,"30m":10,"1h":60,"2h":120,"4h":240,"8h":480,"12h":720,"1d":24,"1w":70,"1M":31},urls:{logo:"https://github.com/user-attachments/assets/115f1e4a-0fd0-4b76-85d5-a49ebf64d1c8",api:{public:"https://ace.io/polarisex",private:"https://ace.io/polarisex/open"},www:"https://ace.io/",doc:["https://github.com/ace-exchange/ace-offical-api-docs"],fees:"https://helpcenter.ace.io/hc/zh-tw/articles/360018609132-%E8%B2%BB%E7%8E%87%E8%AA%AA%E6%98%8E"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["oapi/v2/list/tradePrice","oapi/v2/list/marketPair","open/v2/public/getOrderBook"]},private:{post:["v2/coin/customerAccount","v2/kline/getKline","v2/order/order","v2/order/cancel","v2/order/getOrderList","v2/order/showOrderStatus","v2/order/showOrderHistory","v2/order/getTradeList"]}},fees:{trading:{percentage:!0,maker:this.parseNumber("0.0005"),taker:this.parseNumber("0.001")}},options:{brokerId:"ccxt"},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:500,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:2e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{2003:n.InvalidOrder,2004:n.InvalidOrder,2005:n.InvalidOrder,2021:n.InsufficientFunds,2036:n.InvalidOrder,2039:n.InvalidOrder,2053:n.InvalidOrder,2061:n.BadRequest,2063:n.InvalidOrder,9996:n.BadRequest,10012:n.AuthenticationError,20182:n.AuthenticationError,20183:n.InvalidOrder},broad:{}},commonCurrencies:{}})}async fetchMarkets(e={}){let t=await this.publicGetOapiV2ListMarketPair();return this.parseMarkets(t)}parseMarket(e){let t=this.safeString(e,"baseCurrencyId"),i=this.safeCurrencyCode(this.safeString(e,"base")),s=this.safeString(e,"quoteCurrencyId"),r=this.safeCurrencyCode(this.safeString(e,"quote"));return{id:this.safeString(e,"symbol"),uppercaseId:void 0,symbol:i+"/"+r,base:i,baseId:t,quote:r,quoteId:s,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:{amount:{min:this.safeNumber(e,"minLimitBaseAmount"),max:this.safeNumber(e,"maxLimitBaseAmount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},leverage:{min:void 0,max:void 0}},precision:{price:this.parseNumber(this.parsePrecision(this.safeString(e,"quotePrecision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(e,"basePrecision")))},active:void 0,created:void 0,info:e}}parseTicker(e,t){let i=this.safeString(e,"id"),s=this.safeSymbol(i,t);return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"last_price"),last:this.safeString(e,"last_price"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"base_volume"),quoteVolume:this.safeString(e,"quote_volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetOapiV2ListTradePrice(t),r=i.id,a=this.safeDict(s,r,{});return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetOapiV2ListTradePrice(),s=[],r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],a=this.safeMarket(t),n=this.safeDict(i,t,{}),o=this.parseTicker(n,a);s.push(o)}return this.filterByArrayTickers(s,"symbol",e)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={quoteCurrencyId:s.quoteId,baseCurrencyId:s.baseId};void 0!==t&&(r.depth=t);let a=await this.publicGetOpenV2PublicGetOrderBook(this.extend(r,i)),n=this.safeDict(a,"attachment");return this.parseOrderBook(n,s.symbol,void 0,"bids","asks",1,0)}parseOHLCV(e,t){let i=this.safeString(e,"createTime"),s=this.parse8601(i);return void 0!==s&&(s-=288e5),[s,this.safeNumber(e,"openPrice"),this.safeNumber(e,"highPrice"),this.safeNumber(e,"lowPrice"),this.safeNumber(e,"closePrice"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={duration:this.timeframes[t],quoteCurrencyId:a.quoteId,baseCurrencyId:a.baseId};void 0!==s&&(n.limit=s),void 0!==i&&(n.startTime=i);let o=await this.privatePostV2KlineGetKline(this.extend(n,r)),h=this.safeList(o,"attachment",[]);return this.parseOHLCVs(h,a,t,i,s)}parseOrderStatus(e){return this.safeString({0:"open",1:"open",2:"closed",4:"canceled",5:"canceled"},e,void 0)}parseOrder(e,t){let i,s,r,a,n,o,h,d,l,c,u;if("string"==typeof e)i=e;else{if(i=this.safeString(e,"orderNo"),void 0===(s=this.safeInteger(e,"orderTimeStamp"))){let t=this.safeString(e,"orderTime");void 0!==t&&(s=this.parse8601(t)-288e5)}let t=this.safeString(e,"buyOrSell");void 0!==t&&(o="1"===t?"buy":"sell"),n=this.safeString(e,"num"),a=this.safeString(e,"price");let f=this.safeString(e,"quoteCurrencyName"),p=this.safeString(e,"baseCurrencyName");void 0!==f&&void 0!==p&&(r=p+"/"+f);let m=this.safeString(e,"type");void 0!==m&&(h="1"===m?"limit":"market"),l=this.safeString(e,"tradeNum"),c=this.safeString(e,"remainNum"),d=this.parseOrderStatus(this.safeString(e,"status")),u=this.safeString(e,"averagePrice")}return this.safeOrder({id:i,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:r,type:h,timeInForce:void 0,postOnly:void 0,side:o,price:a,triggerPrice:void 0,amount:n,cost:void 0,average:u,filled:l,remaining:c,status:d,fee:void 0,trades:void 0,info:e},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=t.toUpperCase(),h=i.toUpperCase(),d={baseCurrencyId:n.baseId,quoteCurrencyId:n.quoteId,type:"LIMIT"===o?1:2,buyOrSell:"BUY"===h?1:2,num:this.amountToPrecision(e,s)};"limit"===t&&(d.price=this.priceToPrecision(e,r));let l=await this.privatePostV2OrderOrder(this.extend(d,a)),c=this.safeDict(l,"attachment");return this.parseOrder(c,n)}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostV2OrderCancel(this.extend({orderNo:e},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostV2OrderShowOrderStatus(this.extend({orderNo:e},i)),r=this.safeDict(s,"attachment");return this.parseOrder(r,void 0)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={quoteCurrencyId:r.quoteId,baseCurrencyId:r.baseId};void 0!==i&&(a.size=i);let o=await this.privatePostV2OrderGetOrderList(this.extend(a,s)),h=this.safeList(o,"attachment");return this.parseOrders(h,r,t,i)}parseTrade(e,t){let i,s;let a=this.safeString(e,"tradeNo"),n=this.safeString(e,"price"),o=this.safeString(e,"num"),h=this.safeInteger(e,"tradeTimestamp");if(void 0===h){let t=this.safeString2(e,"time","tradeTime");h=this.parse8601(t)-288e5}let d=t.symbol,l=this.safeString(e,"quoteCurrencyName"),c=this.safeString(e,"baseCurrencyName");void 0!==l&&void 0!==c&&(d=c+"/"+l);let u=this.safeInteger(e,"buyOrSell");void 0!==u&&(i=1===u?"buy":"sell");let f=this.safeString(e,"fee");if(void 0!==f){let t=this.safeString(e,"feeSave");s={cost:r.Y.stringSub(f,t),currency:l}}return this.safeTrade({info:e,id:a,order:this.safeString(e,"orderNo"),symbol:d,side:i,type:void 0,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:s,timestamp:h,datetime:this.iso8601(h)},t)}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=this.safeMarket(t),n=await this.privatePostV2OrderShowOrderHistory(this.extend({orderNo:e},r)),o=this.safeDict(n,"attachment"),h=this.safeList(o,"trades",[]);return this.parseTrades(h,a,i,s)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.safeMarket(e),a={};void 0!==r.id&&(a.quoteCurrencyId=r.quoteId,a.baseCurrencyId=r.baseId),void 0!==i&&(a.size=i);let n=await this.privatePostV2OrderGetTradeList(this.extend(a,s)),o=this.safeList(n,"attachment",[]);return this.parseTrades(o,r,t,i)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currencyName"),a=this.safeCurrencyCode(r),n=this.safeString(s,"amount"),o={free:this.safeString(s,"cashAmount"),total:n};t[a]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostV2CoinCustomerAccount(e),i=this.safeList(t,"attachment",[]);return this.parseBalance(i)}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if(void 0===r&&(r={}),"private"===t){this.checkRequiredCredentials();let e=this.milliseconds(),t="ACE_SIGN"+this.secret,n=this.extend({apiKey:this.apiKey,timeStamp:this.numberToString(e)},s),o=Object.values(this.keysort(n)),h=[];for(let e=0;e<o.length;e++){let t=o[e].toString();h.push(t)}t+=h.join("");let d=this.hash(this.encode(t),l.s,"hex");if(n.signKey=d,r={"Content-Type":"application/x-www-form-urlencoded"},"POST"===i){let e=this.safeString(this.options,"brokerId");void 0!==e&&(r.Referer=e)}a=this.urlencode(n)}else"public"===t&&"GET"===i&&Object.keys(o).length&&(n+="?"+this.urlencode(o));return{url:n=this.urls.api[t]+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,h){if(void 0===n)return;let d=this.id+" "+a,l=this.safeNumber(n,"status",200);if(l>200){let e=l.toString();this.throwExactlyMatchedException(this.exceptions.exact,e,d),this.throwBroadlyMatchedException(this.exceptions.broad,e,d)}}}class u extends s.k{}let f=u;class p extends f{describe(){return this.deepExtend(super.describe(),{id:"alpaca",name:"Alpaca",countries:["US"],rateLimit:333,hostname:"alpaca.markets",pro:!0,urls:{logo:"https://github.com/user-attachments/assets/e9476df8-a450-4c3e-ab9a-1a7794219e1b",www:"https://alpaca.markets",api:{broker:"https://broker-api.{hostname}",trader:"https://api.{hostname}",market:"https://data.{hostname}"},test:{broker:"https://broker-api.sandbox.{hostname}",trader:"https://paper-api.{hostname}",market:"https://data.{hostname}"},doc:"https://alpaca.markets/docs/",fees:"https://docs.alpaca.markets/docs/crypto-fees"},has:{CORS:!1,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchClosedOrders:!0,fetchCurrencies:!1,fetchDepositAddress:!0,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchL1OrderBook:!0,fetchL2OrderBook:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!0,sandbox:!0,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!0},api:{broker:{},trader:{private:{get:["v2/account","v2/orders","v2/orders/{order_id}","v2/positions","v2/positions/{symbol_or_asset_id}","v2/account/portfolio/history","v2/watchlists","v2/watchlists/{watchlist_id}","v2/watchlists:by_name","v2/account/configurations","v2/account/activities","v2/account/activities/{activity_type}","v2/calendar","v2/clock","v2/assets","v2/assets/{symbol_or_asset_id}","v2/corporate_actions/announcements/{id}","v2/corporate_actions/announcements","v2/wallets","v2/wallets/transfers"],post:["v2/orders","v2/watchlists","v2/watchlists/{watchlist_id}","v2/watchlists:by_name","v2/wallets/transfers"],put:["v2/orders/{order_id}","v2/watchlists/{watchlist_id}","v2/watchlists:by_name"],patch:["v2/orders/{order_id}","v2/account/configurations"],delete:["v2/orders","v2/orders/{order_id}","v2/positions","v2/positions/{symbol_or_asset_id}","v2/watchlists/{watchlist_id}","v2/watchlists:by_name","v2/watchlists/{watchlist_id}/{symbol}"]}},market:{public:{get:["v1beta3/crypto/{loc}/bars","v1beta3/crypto/{loc}/latest/bars","v1beta3/crypto/{loc}/latest/orderbooks","v1beta3/crypto/{loc}/latest/quotes","v1beta3/crypto/{loc}/latest/trades","v1beta3/crypto/{loc}/quotes","v1beta3/crypto/{loc}/snapshots","v1beta3/crypto/{loc}/trades"]},private:{get:["v1beta1/corporate-actions","v1beta1/forex/latest/rates","v1beta1/forex/rates","v1beta1/logos/{symbol}","v1beta1/news","v1beta1/screener/stocks/most-actives","v1beta1/screener/{market_type}/movers","v2/stocks/auctions","v2/stocks/bars","v2/stocks/bars/latest","v2/stocks/meta/conditions/{ticktype}","v2/stocks/meta/exchanges","v2/stocks/quotes","v2/stocks/quotes/latest","v2/stocks/snapshots","v2/stocks/trades","v2/stocks/trades/latest","v2/stocks/{symbol}/auctions","v2/stocks/{symbol}/bars","v2/stocks/{symbol}/bars/latest","v2/stocks/{symbol}/quotes","v2/stocks/{symbol}/quotes/latest","v2/stocks/{symbol}/snapshot","v2/stocks/{symbol}/trades","v2/stocks/{symbol}/trades/latest"]}}},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1H","2h":"2H","4h":"4H","6h":"6H","8h":"8H","12h":"12H","1d":"1D","3d":"3D","1w":"1W","1M":"1M"},precisionMode:d.kb,requiredCredentials:{apiKey:!0,secret:!0},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0015"),taker:this.parseNumber("0.0025"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0022")],[this.parseNumber("500000"),this.parseNumber("0.0020")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("10000000"),this.parseNumber("0.0015")],[this.parseNumber("25000000"),this.parseNumber("0.0013")],[this.parseNumber("50000000"),this.parseNumber("0.0012")],[this.parseNumber("100000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.0012")],[this.parseNumber("500000"),this.parseNumber("0.001")],[this.parseNumber("1000000"),this.parseNumber("0.0008")],[this.parseNumber("10000000"),this.parseNumber("0.0005")],[this.parseNumber("25000000"),this.parseNumber("0.0002")],[this.parseNumber("50000000"),this.parseNumber("0.0002")],[this.parseNumber("100000000"),this.parseNumber("0.00")]]}}},headers:{"APCA-PARTNER-ID":"ccxt"},options:{defaultExchange:"CBSE",exchanges:["CBSE","FTX","GNSS","ERSX"],defaultTimeInForce:"gtc",clientOrderId:"ccxt_{id}"},features:{spot:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:{triggerPriceType:{last:!0,mark:!0,index:!0},price:!0},timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!0,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:500,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:500,daysBack:1e5,untilDays:1e5,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:500,daysBack:1e5,daysBackCanceled:void 0,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{"forbidden.":n.PermissionDenied,4041e4:n.InvalidOrder,0x2628111:n.BadRequest,4011e4:n.PermissionDenied,4031e4:n.InsufficientFunds,4291e4:n.RateLimitExceeded},broad:{"Invalid format for parameter":n.BadRequest,"Invalid symbol":n.BadSymbol}}})}async fetchTime(e={}){let t=await this.traderPrivateGetV2Clock(e),i=this.safeString(t,"timestamp"),s=i.slice(0,23),r=i.length-6,a=i.length-3,n=i.slice(r,a);return this.parse8601(s)-36e5*this.parseToNumeric(n)}async fetchMarkets(e={}){let t=await this.traderPrivateGetV2Assets(this.extend({asset_class:"crypto",status:"active"},e));return this.parseMarkets(t)}parseMarket(e){let t=this.safeString(e,"symbol"),i=t.split("/"),s=this.safeString(e,"class"),r=this.safeString(i,0),a=this.safeString(i,1),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a);void 0===o&&"us_equity"===s&&(o="USD");let h=n+"/"+o,d=this.safeString(e,"status"),l=this.safeNumber(e,"min_order_size");return{id:t,symbol:h,base:n,quote:o,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:"active"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"min_trade_increment"),price:this.safeNumber(e,"price_increment")},limits:{leverage:{min:void 0,max:void 0},amount:{min:l,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),o=a.id,h=this.safeString(s,"loc","us"),d=this.safeString(s,"method","marketPublicGetV1beta3CryptoLocTrades"),l={symbols:o,loc:h};if(s=this.omit(s,["loc","method"]),"marketPublicGetV1beta3CryptoLocTrades"===d){void 0!==t&&(l.start=this.iso8601(t)),void 0!==i&&(l.limit=i);let e=await this.marketPublicGetV1beta3CryptoLocTrades(this.extend(l,s)),a=this.safeDict(e,"trades",{});r=this.safeList(a,o,[])}else if("marketPublicGetV1beta3CryptoLocLatestTrades"===d){let e=await this.marketPublicGetV1beta3CryptoLocLatestTrades(this.extend(l,s)),t=this.safeDict(e,"trades",{});r=[r=this.safeDict(t,o,{})]}else throw new n.NotSupported(this.id+" fetchTrades() does not support "+d+", marketPublicGetV1beta3CryptoLocTrades and marketPublicGetV1beta3CryptoLocLatestTrades are supported");return this.parseTrades(r,a,t,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=s.id,a=this.safeString(i,"loc","us"),n=await this.marketPublicGetV1beta3CryptoLocLatestOrderbooks(this.extend({symbols:r,loc:a},i)),o=this.safeDict(n,"orderbooks",{}),h=this.safeDict(o,r,{}),d=this.parse8601(this.safeString(h,"t"));return this.parseOrderBook(h,s.symbol,d,"b","a","p","s")}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let o=this.market(e),h=o.id,d=this.safeString(r,"loc","us"),l=this.safeString(r,"method","marketPublicGetV1beta3CryptoLocBars"),c={symbols:h,loc:d};if(r=this.omit(r,["loc","method"]),"marketPublicGetV1beta3CryptoLocBars"===l){void 0!==s&&(c.limit=s),void 0!==i&&(c.start=this.yyyymmdd(i)),c.timeframe=this.safeString(this.timeframes,t,t);let e=await this.marketPublicGetV1beta3CryptoLocBars(this.extend(c,r)),n=this.safeDict(e,"bars",{});a=this.safeList(n,h,[])}else if("marketPublicGetV1beta3CryptoLocLatestBars"===l){let e=await this.marketPublicGetV1beta3CryptoLocLatestBars(this.extend(c,r)),t=this.safeDict(e,"bars",{});a=[a=this.safeDict(t,h,{})]}else throw new n.NotSupported(this.id+" fetchOHLCV() does not support "+l+", marketPublicGetV1beta3CryptoLocBars and marketPublicGetV1beta3CryptoLocLatestBars are supported");return this.parseOHLCVs(a,o,t,i,s)}parseOHLCV(e,t){let i=this.safeString(e,"t");return[this.parse8601(i),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchTicker(e,t={}){await this.loadMarkets(),e=this.symbol(e);let i=await this.fetchTickers([e],t);return this.safeDict(i,e)}async fetchTickers(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchTickers() requires a symbols argument");await this.loadMarkets(),e=this.marketSymbols(e);let i=this.safeString(t,"loc","us"),s={symbols:this.marketIds(e).join(","),loc:i};t=this.omit(t,"loc");let r=await this.marketPublicGetV1beta3CryptoLocSnapshots(this.extend(s,t)),a=[],o=this.safeDict(r,"snapshots",{}),h=Object.keys(o);for(let e=0;e<h.length;e++){let t=h[e],i=this.safeMarket(t),s=this.safeDict(o,t),r=this.safeDict(s,"dailyBar",{}),n=this.safeDict(s,"prevDailyBar",{}),d=this.safeDict(s,"latestQuote",{}),l=this.safeDict(s,"latestTrade",{}),c=this.safeString(d,"t"),u=this.safeTicker({info:s,symbol:i.symbol,timestamp:this.parse8601(c),datetime:c,high:this.safeString(r,"h"),low:this.safeString(r,"l"),bid:this.safeString(d,"bp"),bidVolume:this.safeString(d,"bs"),ask:this.safeString(d,"ap"),askVolume:this.safeString(d,"as"),vwap:this.safeString(r,"vw"),open:this.safeString(r,"o"),close:this.safeString(r,"c"),last:this.safeString(l,"p"),previousClose:this.safeString(n,"c"),change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(r,"v"),quoteVolume:this.safeString(r,"n")},i);a.push(u)}return this.filterByArray(a,"symbol",e)}generateClientOrderId(e){let t=this.safeString(this.options,"clientOrderId"),i=this.uuid().split("-").join(""),s=this.implodeParams(t,{id:i});return this.safeString(e,"clientOrderId",s)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h={symbol:o.id,qty:this.amountToPrecision(e,s),side:i,type:t},d=this.safeStringN(a,["triggerPrice","stop_price"]);if(void 0!==d){let i;if(t.indexOf("limit")>=0)i="stop_limit";else throw new n.NotSupported(this.id+" createOrder() does not support stop orders for "+t+" orders, only stop_limit orders are supported");h.stop_price=this.priceToPrecision(e,d),h.type=i}t.indexOf("limit")>=0&&(h.limit_price=this.priceToPrecision(e,r));let l=this.safeString(this.options,"defaultTimeInForce");h.time_in_force=this.safeString(a,"timeInForce",l),a=this.omit(a,["timeInForce","triggerPrice"]),h.client_order_id=this.generateClientOrderId(a),a=this.omit(a,["clientOrderId"]);let c=await this.traderPrivatePostV2Orders(this.extend(h,a));return this.parseOrder(c,o)}async cancelOrder(e,t,i={}){let s=await this.traderPrivateDeleteV2OrdersOrderId(this.extend({order_id:e},i));return this.parseOrder(s)}async cancelAllOrders(e,t={}){await this.loadMarkets();let i=await this.traderPrivateDeleteV2Orders(t);return Array.isArray(i)?this.parseOrders(i,void 0):[this.safeOrder({info:i})]}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.traderPrivateGetV2OrdersOrderId(this.extend({order_id:e},i)),r=this.safeString(s,"symbol"),a=this.safeMarket(r);return this.parseOrder(s,a)}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={status:"all"};void 0!==e&&(r=this.market(e),a.symbols=r.id);let n=this.safeInteger(s,"until");void 0!==n&&(s=this.omit(s,"until"),a.endTime=n),void 0!==t&&(a.after=t),void 0!==i&&(a.limit=i);let o=await this.traderPrivateGetV2Orders(this.extend(a,s));return this.parseOrders(o,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"open"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"closed"},s))}async editOrder(e,t,i,s,r,a,n={}){let o,h;await this.loadMarkets();let d={order_id:e};void 0!==t&&(o=this.market(t)),void 0!==r&&(d.qty=this.amountToPrecision(t,r));let l=this.safeStringN(n,["triggerPrice","stop_price"]);void 0!==l&&(d.stop_price=this.priceToPrecision(t,l),n=this.omit(n,"triggerPrice")),void 0!==a&&(d.limit_price=this.priceToPrecision(t,a)),[h,n]=this.handleOptionAndParams2(n,"editOrder","timeInForce","defaultTimeInForce"),void 0!==h&&(d.time_in_force=h),d.client_order_id=this.generateClientOrderId(n),n=this.omit(n,["clientOrderId"]);let c=await this.traderPrivatePatchV2OrdersOrderId(this.extend(d,n));return this.parseOrder(c,o)}parseOrder(e,t){let i;let s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t)).symbol,a=this.safeString(e,"status"),n=this.parseOrderStatus(a),o=this.safeString(e,"commission");void 0!==o&&(i={cost:o,currency:"USD"});let h=this.safeString(e,"order_type");void 0!==h&&h.indexOf("limit")>=0&&(h="limit");let d=this.safeString(e,"submitted_at"),l=this.parse8601(d);return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:this.safeString(e,"client_order_id"),timestamp:l,datetime:d,lastTradeTimeStamp:void 0,status:n,symbol:r,type:h,timeInForce:this.parseTimeInForce(this.safeString(e,"time_in_force")),postOnly:void 0,side:this.safeString(e,"side"),price:this.safeNumber(e,"limit_price"),triggerPrice:this.safeNumber(e,"stop_price"),cost:void 0,average:this.safeNumber(e,"filled_avg_price"),amount:this.safeNumber(e,"qty"),filled:this.safeNumber(e,"filled_qty"),remaining:void 0,trades:void 0,fee:i,info:e},t)}parseOrderStatus(e){return this.safeString({pending_new:"open",accepted:"open",new:"open",partially_filled:"open",activated:"open",filled:"closed"},e,e)}parseTimeInForce(e){return this.safeString({day:"Day"},e,e)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={activity_type:"FILL"};void 0!==e&&(r=this.market(e)),void 0!==t&&(a.after=t),void 0!==i&&(a.page_size=i),[a,s]=this.handleUntilOption("until",a,s);let n=await this.traderPrivateGetV2AccountActivitiesActivityType(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseTrade(e,t){let i=this.safeString2(e,"S","symbol"),s=this.safeSymbol(i,t),r=this.safeString2(e,"t","transaction_time"),a=this.parse8601(r),n=this.safeString(e,"tks"),o=this.safeString(e,"side");"B"===n?o="buy":"S"===n&&(o="sell");let h=this.safeString2(e,"p","price"),d=this.safeString2(e,"s","qty");return this.safeTrade({info:e,id:this.safeString2(e,"i","id"),timestamp:a,datetime:this.iso8601(a),symbol:s,order:this.safeString(e,"order_id"),type:void 0,side:o,takerOrMaker:"taker",price:h,amount:d,cost:void 0,fee:void 0},t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={asset:i.id},r=await this.traderPrivateGetV2Wallets(this.extend(s,t));return this.parseDepositAddress(r,i)}parseDepositAddress(e,t){let i;return void 0!==t&&(i=t.id),{info:e,currency:i,network:void 0,address:this.safeString(e,"address"),tag:void 0}}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e);s&&(i=i+":"+s);let n={asset:a.id,address:i,amount:this.numberToString(t)},o=await this.traderPrivatePostV2WalletsTransfers(this.extend(n,r));return this.parseTransaction(o,a)}async fetchTransactionsHelper(e,t,i,s,r){let a;await this.loadMarkets(),void 0!==t&&(a=this.currency(t));let n=await this.traderPrivateGetV2WalletsTransfers(r),o=[];for(let t=0;t<n.length;t++){let i=n[t];this.safeString(i,"direction")===e?o.push(i):"BOTH"===e&&o.push(i)}return this.parseTransactions(o,a,i,s,r)}async fetchDepositsWithdrawals(e,t,i,s={}){return await this.fetchTransactionsHelper("BOTH",e,t,i,s)}async fetchDeposits(e,t,i,s={}){return await this.fetchTransactionsHelper("INCOMING",e,t,i,s)}async fetchWithdrawals(e,t,i,s={}){return await this.fetchTransactionsHelper("OUTGOING",e,t,i,s)}parseTransaction(e,t){let i=this.safeString(e,"created_at"),s=this.safeString(e,"asset"),a=this.safeCurrencyCode(s,t),n=this.safeString(e,"fees"),o=this.safeString(e,"network_fee"),h=r.Y.stringAdd(n,o),d={cost:this.parseNumber(h),currency:a};return{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"tx_hash"),timestamp:this.parse8601(i),datetime:i,network:this.safeString(e,"chain"),address:this.safeString(e,"to_address"),addressTo:this.safeString(e,"to_address"),addressFrom:this.safeString(e,"from_address"),tag:void 0,tagTo:void 0,tagFrom:void 0,type:this.parseTransactionType(this.safeString(e,"direction")),amount:this.safeNumber(e,"amount"),currency:a,status:this.parseTransactionStatus(this.safeString(e,"status")),updated:void 0,fee:d,comment:void 0,internal:void 0}}parseTransactionStatus(e){return this.safeString({PROCESSING:"pending",FAILED:"failed",COMPLETE:"ok"},e,e)}parseTransactionType(e){return this.safeString({INCOMING:"deposit",OUTGOING:"withdrawal"},e,e)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.traderPrivateGetV2Account(e);return this.parseBalance(t)}parseBalance(e){let t={info:e},i=this.account(),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s);return i.free=this.safeString(e,"cash"),i.total=this.safeString(e,"equity"),t[r]=i,this.safeBalance(t)}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.implodeParams(e,s),o=this.implodeHostname(this.urls.api[t[0]]);r=void 0!==r?r:{},"private"===t[1]&&(this.checkRequiredCredentials(),r["APCA-API-KEY-ID"]=this.apiKey,r["APCA-API-SECRET-KEY"]=this.secret);let h=this.omit(s,this.extractParams(e));return Object.keys(h).length&&("GET"===i||"DELETE"===i?n+="?"+this.urlencode(h):(a=this.json(h),r["Content-Type"]="application/json")),{url:o+=n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.id+" "+a,c=this.safeString(o,"code");void 0!==e&&this.throwExactlyMatchedException(this.exceptions.exact,c,l);let u=this.safeValue(o,"message",void 0);if(void 0!==u)throw this.throwExactlyMatchedException(this.exceptions.exact,u,l),this.throwBroadlyMatchedException(this.exceptions.broad,u,l),new n.ExchangeError(l)}}var m=i(3749),g=i(7762);class y extends g.A{describe(){return this.deepExtend(super.describe(),{id:"bequant",name:"Bequant",countries:["MT"],pro:!0,urls:{logo:"https://github.com/user-attachments/assets/0583ef1f-29fe-4b7c-8189-63565a0e2867",api:{public:"https://api.bequant.io/api/3",private:"https://api.bequant.io/api/3"},www:"https://bequant.io",doc:["https://api.bequant.io/"],fees:["https://bequant.io/fees-and-limits"],referral:"https://bequant.io/referral/dd104e3bee7634ec"}})}}class v extends s.k{}let b=v;var w=i(2982);class k extends b{describe(){return this.deepExtend(super.describe(),{id:"bigone",name:"BigONE",countries:["CN"],version:"v3",rateLimit:20,has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelAllOrders:!0,cancelOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createPostOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"min1","5m":"min5","15m":"min15","30m":"min30","1h":"hour1","3h":"hour3","4h":"hour4","6h":"hour6","12h":"hour12","1d":"day1","1w":"week1","1M":"month1"},hostname:"big.one",urls:{logo:"https://github.com/user-attachments/assets/4e5cfd53-98cc-4b90-92cd-0d7b512653d1",api:{public:"https://{hostname}/api/v3",private:"https://{hostname}/api/v3/viewer",contractPublic:"https://{hostname}/api/contract/v2",contractPrivate:"https://{hostname}/api/contract/v2",webExchange:"https://{hostname}/api/"},www:"https://big.one",doc:"https://open.big.one/docs/api.html",fees:"https://bigone.zendesk.com/hc/en-us/articles/115001933374-BigONE-Fee-Policy",referral:"https://b1.run/users/new?code=D3LLBVFT"},api:{public:{get:["ping","asset_pairs","asset_pairs/{asset_pair_name}/depth","asset_pairs/{asset_pair_name}/trades","asset_pairs/{asset_pair_name}/ticker","asset_pairs/{asset_pair_name}/candles","asset_pairs/tickers"]},private:{get:["accounts","fund/accounts","assets/{asset_symbol}/address","orders","orders/{id}","orders/multi","trades","withdrawals","deposits"],post:["orders","orders/{id}/cancel","orders/cancel","withdrawals","transfer"]},contractPublic:{get:["symbols","instruments","depth@{symbol}/snapshot","instruments/difference","instruments/prices"]},contractPrivate:{get:["accounts","orders/{id}","orders","orders/opening","orders/count","orders/opening/count","trades","trades/count"],post:["orders","orders/batch"],put:["positions/{symbol}/margin","positions/{symbol}/risk-limit"],delete:["orders/{id}","orders/batch"]},webExchange:{get:["v3/assets"]}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},options:{createMarketBuyOrderRequiresPrice:!0,accountsByType:{spot:"SPOT",fund:"FUND",funding:"FUND",future:"CONTRACT",swap:"CONTRACT"},transfer:{fillResponseFromRequest:!0},exchangeMillisecondsCorrection:-100,fetchCurrencies:{webApiEnable:!0,webApiRetries:5,webApiMuteFailure:!0},defaultNetwork:"ERC20",defaultNetworks:{USDT:"TRC20"},networks:{ABBC:"ABBC",ACA:"Acala",AE:"Aeternity",ALGO:"Algorand",APT:"Aptos",AR:"Arweave",ASTR:"Astar",AVAXC:"Avax",AVAXX:"AvaxChain",BEAM:"Beam",BEP20:"BinanceSmartChain",BITCI:"BitciChain",BTC:"Bitcoin",BCH:"BitcoinCash",BSV:"BitcoinSV",CELO:"Celo",CKKB:"CKB",ATOM:"Cosmos",CRC20:"CRO",DASH:"Dash",DOGE:"Dogecoin",XEC:"ECash",EOS:"EOS",ETH:"Ethereum",ETC:"EthereumClassic",ETHW:"EthereumPow",FTM:"Fantom",FIL:"Filecoin",FSN:"Fusion",GRIN:"Grin",ONE:"Harmony",HRC20:"Hecochain",HBAR:"Hedera",HNT:"Helium",ZEN:"Horizen",IOST:"IOST",IRIS:"IRIS",KLAY:"Klaytn",KSM:"Kusama",LTC:"Litecoin",XMR:"Monero",GLMR:"Moonbeam",NEAR:"Near",NEO:"Neo",NEON3:"NeoN3",OASIS:"Oasis",OKC:"Okexchain",ONT:"Ontology",OPTIMISM:"Optimism",DOT:"Polkadot",MATIC:"Polygon",QTUM:"Qtum",REI:"REI",XRP:"Ripple",SGB:"SGB",SDN:"Shiden",SOL:"Solana",XLM:"Stellar",TERA:"Tera",XTZ:"Tezos",TRC20:"Tron",VET:"Vechain",VSYS:"VSystems",WAX:"WAX",ZEC:"Zcash"}},features:{default:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!0,marketBuyByCost:!0,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:200,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:200,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:200,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:200,daysBack:void 0,daysBackCanceled:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchOHLCV:{limit:500}},spot:{extends:"default"},forDerivatives:{extends:"default",createOrder:{triggerPriceType:{mark:!0,index:!0,last:!0}},fetchOrders:{daysBack:1e5,untilDays:1e5},fetchClosedOrders:{daysBack:1e5,untilDays:1e5}},swap:{linear:{extends:"forDerivatives"},inverse:{extends:"forDerivatives"}},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{10001:n.BadRequest,10005:n.ExchangeError,"Amount's scale must greater than AssetPair's base scale":n.InvalidOrder,"Price mulit with amount should larger than AssetPair's min_quote_value":n.InvalidOrder,10007:n.BadRequest,10011:n.ExchangeError,10013:n.BadSymbol,10014:n.InsufficientFunds,10403:n.PermissionDenied,10429:n.RateLimitExceeded,40004:n.AuthenticationError,40103:n.AuthenticationError,40104:n.AuthenticationError,40301:n.PermissionDenied,40302:n.ExchangeError,40601:n.ExchangeError,40602:n.ExchangeError,40603:n.InsufficientFunds,40604:n.InvalidOrder,40605:n.InvalidOrder,40120:n.InvalidOrder,40121:n.InvalidOrder,60100:n.BadSymbol},broad:{}},commonCurrencies:{CRE:"Cybereits",FXT:"FXTTOKEN",FREE:"FreeRossDAO",MBN:"Mobilian Coin",ONE:"BigONE Token"}})}async fetchCurrencies(e={}){let t=await this.fetchWebEndpoint("fetchCurrencies","webExchangeGetV3Assets",!0);if(void 0===t)return;let i=this.safeList(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t,a;let n=i[e],o=this.safeString(n,"symbol"),h=this.safeCurrencyCode(o),d=this.safeString(n,"name"),l=this.safeBool(n,"is_fiat")?"fiat":"crypto",c={},u=this.safeList(n,"binding_gateways",[]),f=this.parsePrecision(this.safeString2(n,"withdrawal_scale","scale"));for(let e=0;e<u.length;e++){let i=u[e],s=this.safeString(i,"gateway_name"),n=this.networkIdToCode(s),o=this.safeBool(i,"is_deposit_enabled"),h=this.safeBool(i,"is_withdrawal_enabled"),d=o&&h,l=this.safeString(i,"min_deposit_amount"),p=this.safeString(i,"min_withdrawal_amount"),m=this.safeString(i,"withdrawal_fee"),g=this.parsePrecision(this.safeString2(i,"withdrawal_scale","scale"));c[n]={id:s,network:n,margin:void 0,deposit:o,withdraw:h,active:d,fee:this.parseNumber(m),precision:this.parseNumber(g),limits:{deposit:{min:l,max:void 0},withdraw:{min:p,max:void 0}},info:i},t=void 0===t||o?o:t,a=void 0===a||h?h:a,f=void 0===f||r.Y.stringGt(f,g)?g:f}s[h]={id:o,code:h,info:n,name:d,type:l,active:void 0,deposit:t,withdraw:a,fee:void 0,precision:this.parseNumber(f),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},networks:c}}return s}async fetchMarkets(e={}){let t=[this.publicGetAssetPairs(e),this.contractPublicGetSymbols(e)],i=await Promise.all(t),s=i[0],r=i[1],a=this.safeList(s,"data",[]),n=[];for(let e=0;e<a.length;e++){let t=a[e],i=this.safeDict(t,"base_asset",{}),s=this.safeDict(t,"quote_asset",{}),r=this.safeString(i,"symbol"),o=this.safeString(s,"symbol"),h=this.safeCurrencyCode(r),d=this.safeCurrencyCode(o);n.push(this.safeMarketStructure({id:this.safeString(t,"name"),uuid:this.safeString(t,"id"),symbol:h+"/"+d,base:h,quote:d,settle:void 0,baseId:r,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"base_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"quote_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_quote_value"),max:this.safeNumber(t,"max_quote_value")}},created:void 0,info:t}))}for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"baseCurrency"),s=this.safeString(t,"quoteCurrency"),a=this.safeString(t,"settleCurrency"),o=this.safeString(t,"symbol"),h=this.safeCurrencyCode(i),d=this.safeCurrencyCode(s),l=this.safeCurrencyCode(a),c=this.safeBool(t,"isInverse");n.push(this.safeMarketStructure({id:o,symbol:h+"/"+d+":"+l,base:h,quote:d,settle:l,baseId:i,quoteId:s,settleId:a,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:this.safeBool(t,"enable"),contract:!0,linear:!c,inverse:c,contractSize:this.safeNumber(t,"multiplier"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"valuePrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:this.safeNumber(t,"priceMin"),max:this.safeNumber(t,"priceMax")},cost:{min:this.safeNumber(t,"initialMargin"),max:void 0}},info:t}))}return n}parseTicker(e,t){let i="asset_pair_name"in e?"spot":"swap",s=this.safeString2(e,"asset_pair_name","symbol"),r=this.safeSymbol(s,t,"-",i),a=this.safeString2(e,"close","latestPrice"),n=this.safeDict(e,"bid",{}),o=this.safeDict(e,"ask",{});return this.safeTicker({symbol:r,timestamp:void 0,datetime:void 0,high:this.safeString2(e,"high","last24hMaxPrice"),low:this.safeString2(e,"low","last24hMinPrice"),bid:this.safeString(n,"price"),bidVolume:this.safeString(n,"quantity"),ask:this.safeString(o,"price"),askVolume:this.safeString(o,"quantity"),vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:this.safeString2(e,"daily_change","last24hPriceChange"),percentage:void 0,average:void 0,baseVolume:this.safeString2(e,"volume","volume24h"),quoteVolume:this.safeString(e,"volume24hInUsd"),markPrice:this.safeString(e,"markPrice"),indexPrice:this.safeString(e,"indexPrice"),info:e},t)}async fetchTicker(e,t={}){let i;await this.loadMarkets();let s=this.market(e);if([i,t]=this.handleMarketTypeAndParams("fetchTicker",s,t),"spot"===i){let e={asset_pair_name:s.id},i=await this.publicGetAssetPairsAssetPairNameTicker(this.extend(e,t)),r=this.safeDict(i,"data",{});return this.parseTicker(r,s)}{let i=await this.fetchTickers([e],t);return this.safeValue(i,e)}}async fetchTickers(e,t={}){let i,s,r;await this.loadMarkets();let a=this.safeString(e,0);void 0!==a&&(i=this.market(a)),[s,t]=this.handleMarketTypeAndParams("fetchTickers",i,t);let n={};if(e=this.marketSymbols(e),"spot"===s){if(void 0!==e){let t=this.marketIds(e);n.pair_names=t.join(",")}let i=await this.publicGetAssetPairsTickers(this.extend(n,t));r=this.safeList(i,"data",[])}else r=await this.contractPublicGetInstruments(t);let o=this.parseTickers(r,e);return this.filterByArrayTickers(o,"symbol",e)}async fetchTime(e={}){let t=await this.publicGetPing(e),i=this.safeDict(t,"data",{}),s=this.safeInteger(i,"Timestamp");return this.parseToInt(s/1e6)}async fetchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e);if(r.contract){let e={symbol:r.id};return s=await this.contractPublicGetDepthSymbolSnapshot(this.extend(e,i)),this.parseContractOrderBook(s,r.symbol,t)}{let e={asset_pair_name:r.id};void 0!==t&&(e.limit=t),s=await this.publicGetAssetPairsAssetPairNameDepth(this.extend(e,i));let a=this.safeDict(s,"data",{});return this.parseOrderBook(a,r.symbol,void 0,"bids","asks","price","quantity")}}parseContractBidsAsks(e){let t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r];i.push([this.parseNumber(r),this.parseNumber(a)])}return i}parseContractOrderBook(e,t,i){let s=this.safeValue(e,"bids"),r=this.safeValue(e,"asks"),a=this.parseContractBidsAsks(s),n=this.parseContractBidsAsks(r);return{symbol:t,bids:this.filterByLimit(this.sortBy(a,0,!0),i),asks:this.filterByLimit(this.sortBy(n,0),i),timestamp:void 0,datetime:void 0,nonce:void 0}}parseTrade(e,t){let i,s,r,a;let n=this.parse8601(this.safeString2(e,"created_at","inserted_at")),o=this.safeString(e,"price"),h=this.safeString(e,"amount"),d=this.safeString(e,"asset_pair_name");t=this.safeMarket(d,t,"-");let l=this.safeString(e,"side"),c=this.safeString(e,"taker_side");void 0!==c&&void 0!==l&&"SELF_TRADING"!==l&&(i=c===l?"taker":"maker"),void 0===l?l="ASK"===c?"sell":"buy":"BID"===l?l="buy":"ASK"===l&&(l="sell");let u=this.safeString(e,"maker_order_id"),f=this.safeString(e,"taker_order_id");void 0!==u?s=u:void 0!==f&&(s=f);let p={id:this.safeString(e,"id"),timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,order:s,type:"limit",side:l,takerOrMaker:i,price:o,amount:h,cost:void 0,info:e};void 0!==i?"buy"===l?"maker"===i?(r=t.base,a=t.quote):(r=t.quote,a=t.base):"maker"===i?(r=t.quote,a=t.base):(r=t.base,a=t.quote):"SELF_TRADING"===l&&("BID"===c?(r=t.quote,a=t.base):"ASK"===c&&(r=t.base,a=t.quote));let m=this.safeString(e,"maker_fee"),g=this.safeString(e,"taker_fee");return void 0!==m?void 0!==g?p.fees=[{cost:m,currency:r},{cost:g,currency:a}]:p.fee={cost:m,currency:r}:void 0!==g?p.fee={cost:g,currency:a}:p.fee=void 0,this.safeTrade(p,t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);if(r.contract)throw new n.BadRequest(this.id+" fetchTrades () can only fetch trades for spot markets");let a={asset_pair_name:r.id},o=await this.publicGetAssetPairsAssetPairNameTrades(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);if(a.contract)throw new n.BadRequest(this.id+" fetchOHLCV () can only fetch ohlcvs for spot markets");let o=this.safeInteger(r,"until"),h=void 0!==o,d=void 0!==i;void 0===s&&(s=d&&h?500:100);let l={asset_pair_name:a.id,period:this.safeString(this.timeframes,t,t),limit:s};if(d){let e=this.parseTimeframe(t),r=this.sum(i,s*e*1e3);h?l.time=this.iso8601(Math.min(r,o+1)):l.time=this.iso8601(r)}else h&&(l.time=this.iso8601(o+1));r=this.omit(r,"until");let c=await this.publicGetAssetPairsAssetPairNameCandles(this.extend(l,r)),u=this.safeList(c,"data",[]);return this.parseOHLCVs(u,a,t,i,s)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0},i=this.safeList(e,"data",[]);for(let e=0;e<i.length;e++){let s=i[e],r=this.safeString(s,"asset_symbol"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.used=this.safeString(s,"locked_balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){let t;await this.loadMarkets();let i=this.safeString(e,"type","");return e=this.omit(e,"type"),t="funding"===i||"fund"===i?await this.privateGetFundAccounts(e):await this.privateGetAccounts(e),this.parseBalance(t)}parseType(e){return this.safeString({STOP_LIMIT:"limit",STOP_MARKET:"market",LIMIT:"limit",MARKET:"market"},e,e)}parseOrder(e,t){let i,s,a,n;let o=this.safeString(e,"id"),h=this.safeString(e,"asset_pair_name"),d=this.safeSymbol(h,t,"-"),l=this.parse8601(this.safeString(e,"created_at")),c=this.safeString(e,"side");c="BID"===c?"buy":"sell";let u=this.safeString(e,"stop_price");r.Y.stringEq(u,"0")&&(u=void 0),this.safeBool(e,"immediate_or_cancel")&&(i="IOC");let f=this.parseType(this.safeString(e,"type")),p=this.safeString(e,"price");return"market"===f&&"buy"===c?n=this.safeString(e,"filled_amount"):(s=this.safeString(e,"amount"),a=this.safeString(e,"filled_amount")),this.safeOrder({info:e,id:o,clientOrderId:this.safeString(e,"client_order_id"),timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:this.parse8601(this.safeString(e,"updated_at")),symbol:d,type:f,timeInForce:i,postOnly:this.safeBool(e,"post_only"),side:c,price:p,triggerPrice:u,amount:s,cost:n,average:this.safeString(e,"avg_deal_price"),filled:a,remaining:void 0,status:this.parseOrderStatus(this.safeString(e,"state")),fee:void 0,trades:void 0},t)}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new n.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return i.createMarketBuyOrderRequiresPrice=!1,await this.createOrder(e,"market","buy",t,void 0,i)}async createOrder(e,t,i,s,a,o={}){let h;await this.loadMarkets();let d=this.market(e),l="buy"===i,c=t.toUpperCase(),u="LIMIT"===c,f=this.safeBool(o,"post_only",!1);[h,o]=this.handlePostOnly("MARKET"===c,f,o);let p=this.safeStringN(o,["triggerPrice","stopPrice","stop_price"]),m={asset_pair_name:d.id,side:l?"BID":"ASK",amount:this.amountToPrecision(e,s)};if(u||"STOP_LIMIT"===c)m.price=this.priceToPrecision(e,a),u&&("IOC"===this.safeString(o,"timeInForce")&&(m.immediate_or_cancel=!0),h&&(m.post_only=!0)),m.amount=this.amountToPrecision(e,s);else if(l){let t=!0;[t,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let i=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),t){if(void 0===a&&void 0===i)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend in the amount argument");{let t=this.numberToString(s),n=this.numberToString(a),o=this.parseToNumeric(r.Y.stringMul(t,n));m.amount=this.costToPrecision(e,void 0!==i?i:o)}}else m.amount=this.costToPrecision(e,s)}else m.amount=this.amountToPrecision(e,s);void 0!==p&&(m.stop_price=this.priceToPrecision(e,p),m.operator=l?"GTE":"LTE",u?c="STOP_LIMIT":"MARKET"===c&&(c="STOP_MARKET")),m.type=c;let g=this.safeString(o,"clientOrderId");void 0!==g&&(m.client_order_id=g),o=this.omit(o,["stop_price","stopPrice","triggerPrice","timeInForce","clientOrderId"]);let y=await this.privatePostOrders(this.extend(m,o)),v=this.safeDict(y,"data");return this.parseOrder(v,d)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrdersIdCancel(this.extend({id:e},i)),r=this.safeDict(s,"data");return this.parseOrder(r)}async cancelAllOrders(e,t={}){await this.loadMarkets();let i={asset_pair_name:this.market(e).id},s=await this.privatePostOrdersCancel(this.extend(i,t)),r=this.safeDict(s,"data",{}),a=this.safeList(r,"cancelled",[]),n=this.safeList(r,"failed",[]),o=[];for(let e=0;e<a.length;e++){let t=a[e];o.push(this.safeOrder({info:t,id:t,status:"canceled"}))}for(let e=0;e<n.length;e++){let t=n[e];o.push(this.safeOrder({info:t,id:t,status:"failed"}))}return o}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i)),r=this.safeDict(s,"data",{});return this.parseOrder(r)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={asset_pair_name:r.id};void 0!==i&&(a.limit=i);let o=await this.privateGetOrders(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseOrders(h,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={asset_pair_name:r.id};void 0!==i&&(a.limit=i);let o=await this.privateGetTrades(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}parseOrderStatus(e){return this.safeString({PENDING:"open",FILLED:"closed",CANCELLED:"canceled"},e)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({state:"PENDING"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({state:"FILLED"},s))}nonce(){let e=1e6*this.safeInteger(this.options,"exchangeMillisecondsCorrection",0);return this.sum(1e3*this.microseconds(),e)}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o=this.implodeHostname(this.urls.api[t])+"/"+this.implodeParams(e,s);if(r={},"public"===t||"webExchange"===t||"contractPublic"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t={type:"OpenAPIV2",sub:this.apiKey,nonce:e},s=(0,w.a)(t,this.encode(this.secret),l.s);r.Authorization="Bearer "+s,"GET"===i?Object.keys(n).length&&(o+="?"+this.urlencode(n)):"POST"===i&&(r["Content-Type"]="application/json",a=this.json(n))}return r["User-Agent"]="ccxt/"+this.id+"-"+this.version,{url:o,method:i,body:a,headers:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={asset_symbol:this.currency(e).id},[s,r]=this.handleNetworkCodeAndParams(t),a=await this.privateGetAssetsAssetSymbolAddress(this.extend(i,r)),o=this.safeList(a,"data",[]);if(o.length<1)throw new n.ExchangeError(this.id+" fetchDepositAddress() returned empty address response");let h=this.indexBy(o,"chain"),d=this.selectNetworkIdFromRawNetworks(e,s,h),l=this.safeDict(h,d,{}),c=this.safeString(l,"value"),u=this.safeString(l,"memo");return this.checkAddress(c),{info:a,currency:e,network:this.networkIdToCode(d),address:c,tag:u}}parseTransactionStatus(e){return this.safeString({WITHHOLD:"ok",UNCONFIRMED:"pending",CONFIRMED:"ok",COMPLETED:"ok",PENDING:"pending"},e,e)}parseTransaction(e,t){let i=this.safeString(e,"asset_symbol"),s=this.safeCurrencyCode(i),r=this.safeString(e,"id"),a=this.safeNumber(e,"amount"),n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.parse8601(this.safeString(e,"inserted_at")),h=this.parse8601(this.safeString2(e,"updated_at","completed_at")),d=this.safeString(e,"txid"),l=this.safeString(e,"target_address"),c=this.safeString(e,"memo"),u="customer_id"in e?"withdrawal":"deposit",f=this.safeBool(e,"is_internal");return{info:e,id:r,txid:d,timestamp:o,datetime:this.iso8601(o),network:void 0,addressFrom:void 0,address:void 0,addressTo:l,tagFrom:void 0,tag:c,tagTo:void 0,type:u,amount:a,currency:s,status:n,updated:h,fee:void 0,comment:void 0,internal:f}}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.asset_symbol=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetDeposits(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.asset_symbol=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetWithdrawals(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n=this.safeDict(this.options,"accountsByType",{}),o=this.safeString(n,i,i),h=this.safeString(n,s,s),d=this.safeString(r,"guid",this.uuid()),l={symbol:a.id,amount:this.currencyToPrecision(e,t),from:o,to:h,guid:d},c=await this.privatePostTransfer(this.extend(l,r)),u=this.parseTransfer(c,a),f=this.safeDict(this.options,"transfer",{});return this.safeBool(f,"fillResponseFromRequest",!0)&&(u.fromAccount=i,u.toAccount=s,u.amount=t,u.id=d),u}parseTransfer(e,t){let i=this.safeString(e,"code");return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:void 0,amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return this.safeString({0:"ok"},e,"failed")}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let n=this.currency(e),o={symbol:n.id,target_address:i,amount:this.currencyToPrecision(e,t)};void 0!==s&&(o.memo=s),[a,r]=this.handleNetworkCodeAndParams(r),void 0!==a&&(o.gateway_name=this.networkCodeToId(a));let h=await this.privatePostWithdrawals(this.extend(o,r)),d=this.safeDict(h,"data",{});return this.parseTransaction(d,n)}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code"),c=this.safeString(o,"message");if("0"!==l&&void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,c,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,c,e),new n.ExchangeError(e)}}}var S=i(587);class O extends S.A{describe(){return this.deepExtend(super.describe(),{id:"binancecoinm",name:"Binance COIN-M",urls:{logo:"https://github.com/user-attachments/assets/387cfc4e-5f33-48cd-8f5c-cd4854dabf0c",doc:["https://binance-docs.github.io/apidocs/delivery/en/","https://binance-docs.github.io/apidocs/spot/en","https://developers.binance.com/en"]},has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:void 0,createStopMarketOrder:!0},options:{fetchMarkets:["inverse"],defaultSubType:"inverse",leverageBrackets:void 0}})}async transferIn(e,t,i={}){return await this.futuresTransfer(e,t,3,i)}async transferOut(e,t,i={}){return await this.futuresTransfer(e,t,4,i)}}class T extends S.A{describe(){return this.deepExtend(super.describe(),{id:"binanceus",name:"Binance US",countries:["US"],hostname:"binance.us",rateLimit:50,certified:!1,pro:!0,urls:{logo:"https://github.com/user-attachments/assets/a9667919-b632-4d52-a832-df89f8a35e8c",api:{web:"https://www.binance.us",public:"https://api.binance.us/api/v3",private:"https://api.binance.us/api/v3",sapi:"https://api.binance.us/sapi/v1",sapiV2:"https://api.binance.us/sapi/v2",sapiV3:"https://api.binance.us/sapi/v3"},www:"https://www.binance.us",referral:"https://www.binance.us/?ref=35005074",doc:"https://github.com/binance-us/binance-official-api-docs",fees:"https://www.binance.us/en/fee/schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},options:{fetchMarkets:["spot"],defaultType:"spot",fetchMargins:!1,quoteOrderQty:!1},has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:void 0,option:!1,addMargin:!1,closeAllPositions:!1,closePosition:!1,createReduceOnlyOrder:!1,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedPositions:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1},api:{public:{get:{ping:1,time:1,exchangeInfo:10,trades:1,historicalTrades:5,aggTrades:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10],[5e3,50]]},klines:1,"ticker/price":{cost:1,noSymbol:2},avgPrice:1,"ticker/bookTicker":{cost:1,noSymbol:2},"ticker/24hr":{cost:1,noSymbol:40},ticker:{cost:2,noSymbol:100}}},private:{get:{account:10,"rateLimit/order":20,order:2,openOrders:{cost:3,noSymbol:40},myTrades:10,myPreventedMatches:10,allOrders:10,orderList:2,allOrderList:10,openOrderList:3},post:{order:1,"order/test":1,"order/cancelReplace":1,"order/oco":1},delete:{order:1,openOrders:1,orderList:1}},sapi:{get:{"system/status":1,"asset/assetDistributionHistory":1,"asset/query/trading-fee":1,"asset/query/trading-volume":1,"sub-account/spotSummary":1,"sub-account/status":1,"otc/coinPairs":1,"otc/orders/{orderId}":1,"otc/orders":1,"ocbs/orders":1,"capital/config/getall":1,"capital/withdraw/history":1,"fiatpayment/query/withdraw/history":1,"capital/deposit/address":1,"capital/deposit/hisrec":1,"fiatpayment/query/deposit/history":1,"capital/sub-account/deposit/address":1,"capital/sub-account/deposit/history":1,"asset/query/dust-logs":1,"asset/query/dust-assets":1,"marketing/referral/reward/history":1,"staking/asset":1,"staking/stakingBalance":1,"staking/history":1,"staking/stakingRewardsHistory":1,"custodian/balance":1,"custodian/supportedAssetList":1,"custodian/walletTransferHistory":1,"custodian/custodianTransferHistory":1,"custodian/openOrders":1,"custodian/order":1,"custodian/orderHistory":1,"custodian/tradeHistory":1,"custodian/settlementSetting":1,"custodian/settlementHistory":1,"cl/transferHistory":1,"apipartner/checkEligibility":1,"apipartner/rebateHistory":1},post:{"otc/quotes":1,"otc/orders":1,"fiatpayment/withdraw/apply":1,"capital/withdraw/apply":1,"asset/dust":10,"staking/stake":1,"staking/unstake":1,"custodian/walletTransfer":1,"custodian/custodianTransfer":1,"custodian/undoTransfer":1,"custodian/order":1,"custodian/ocoOrder":1,"cl/transfer":1},delete:{"custodian/cancelOrder":1,"custodian/cancelOrdersBySymbol":1,"custodian/cancelOcoOrder":1}},sapiV2:{get:{"cl/account":10,"cl/alertHistory":1}},sapiV3:{get:{accountStatus:1,apiTradingStatus:1,"sub-account/list":1,"sub-account/transfer/history":1,"sub-account/assets":1},post:{"sub-account/transfer":1}}},features:{swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}}})}}class I extends S.A{describe(){return this.deepExtend(super.describe(),{id:"binanceusdm",name:"Binance USDⓈ-M",urls:{logo:"https://github.com/user-attachments/assets/871cbea7-eebb-4b28-b260-c1c91df0487a",doc:["https://binance-docs.github.io/apidocs/futures/en/","https://binance-docs.github.io/apidocs/spot/en","https://developers.binance.com/en"]},has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:void 0,createStopMarketOrder:!0},options:{fetchMarkets:["linear"],defaultSubType:"linear",leverageBrackets:void 0,marginTypes:{},marginModes:{}},exceptions:{exact:{"-5021":n.InvalidOrder,"-5022":n.InvalidOrder,"-5028":n.InvalidOrder}}})}async transferIn(e,t,i={}){return await this.futuresTransfer(e,t,1,i)}async transferOut(e,t,i={}){return await this.futuresTransfer(e,t,2,i)}}var x=i(4828);class P extends s.k{}let M=P;var A=i(1701);class C extends M{describe(){return this.deepExtend(super.describe(),{id:"bit2c",name:"Bit2C",countries:["IL"],rateLimit:3e3,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,ws:!1},urls:{logo:"https://github.com/user-attachments/assets/db0bce50-6842-4c09-a1d5-0c87d22118aa",api:{rest:"https://bit2c.co.il"},www:"https://www.bit2c.co.il",referral:"https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf",doc:["https://www.bit2c.co.il/home/api","https://github.com/OferE/bit2c"]},api:{public:{get:["Exchanges/{pair}/Ticker","Exchanges/{pair}/orderbook","Exchanges/{pair}/trades","Exchanges/{pair}/lasttrades"]},private:{post:["Merchant/CreateCheckout","Funds/AddCoinFundsRequest","Order/AddFund","Order/AddOrder","Order/GetById","Order/AddOrderMarketPriceBuy","Order/AddOrderMarketPriceSell","Order/CancelOrder","Order/AddCoinFundsRequest","Order/AddStopOrder","Payment/GetMyId","Payment/Send","Payment/Pay"],get:["Account/Balance","Account/Balance/v2","Order/MyOrders","Order/GetById","Order/AccountHistory","Order/OrderHistory"]}},markets:{"BTC/NIS":this.safeMarketStructure({id:"BtcNis",symbol:"BTC/NIS",base:"BTC",quote:"NIS",baseId:"Btc",quoteId:"Nis",type:"spot",spot:!0}),"ETH/NIS":this.safeMarketStructure({id:"EthNis",symbol:"ETH/NIS",base:"ETH",quote:"NIS",baseId:"Eth",quoteId:"Nis",type:"spot",spot:!0}),"LTC/NIS":this.safeMarketStructure({id:"LtcNis",symbol:"LTC/NIS",base:"LTC",quote:"NIS",baseId:"Ltc",quoteId:"Nis",type:"spot",spot:!0}),"USDC/NIS":this.safeMarketStructure({id:"UsdcNis",symbol:"USDC/NIS",base:"USDC",quote:"NIS",baseId:"Usdc",quoteId:"Nis",type:"spot",spot:!0})},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.025"),taker:this.parseNumber("0.03"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.03")],[this.parseNumber("20000"),this.parseNumber("0.0275")],[this.parseNumber("50000"),this.parseNumber("0.025")],[this.parseNumber("75000"),this.parseNumber("0.0225")],[this.parseNumber("100000"),this.parseNumber("0.02")],[this.parseNumber("250000"),this.parseNumber("0.015")],[this.parseNumber("500000"),this.parseNumber("0.0125")],[this.parseNumber("750000"),this.parseNumber("0.01")],[this.parseNumber("1000000"),this.parseNumber("0.008")],[this.parseNumber("2000000"),this.parseNumber("0.006")],[this.parseNumber("3000000"),this.parseNumber("0.004")],[this.parseNumber("4000000"),this.parseNumber("0.002")]],maker:[[this.parseNumber("0"),this.parseNumber("0.025")],[this.parseNumber("20000"),this.parseNumber("0.0225")],[this.parseNumber("50000"),this.parseNumber("0.02")],[this.parseNumber("75000"),this.parseNumber("0.0175")],[this.parseNumber("100000"),this.parseNumber("0.015")],[this.parseNumber("250000"),this.parseNumber("0.01")],[this.parseNumber("500000"),this.parseNumber("0.0075")],[this.parseNumber("750000"),this.parseNumber("0.005")],[this.parseNumber("1000000"),this.parseNumber("0.004")],[this.parseNumber("2000000"),this.parseNumber("0.003")],[this.parseNumber("3000000"),this.parseNumber("0.002")],[this.parseNumber("4000000"),this.parseNumber("0.001")]]}}},options:{fetchTradesMethod:"public_get_exchanges_pair_trades"},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:30,untilDays:30},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{"Please provide valid APIkey":n.AuthenticationError,"No order found.":n.OrderNotFound},broad:{"Please provide valid nonce":n.InvalidNonce,"please approve new terms of use on site":n.PermissionDenied}}})}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){let r=i[s],a=this.account(),n=this.currency(r).id.toUpperCase();n in e&&(a.free=this.safeString(e,"AVAILABLE_"+n),a.total=this.safeString(e,n)),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountBalanceV2(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={pair:this.market(e).id},r=await this.publicGetExchangesPairOrderbook(this.extend(s,i));return this.parseOrderBook(r,e)}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeString(e,"av"),r=this.safeString(e,"a"),a=this.safeString(e,"ll");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:this.safeString(e,"h"),bidVolume:void 0,ask:this.safeString(e,"l"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:s,baseVolume:r,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetExchangesPairTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),o=this.options.fetchTradesMethod,h={pair:a.id};if(void 0!==t&&(h.date=this.parseToInt(t)),void 0!==i&&(h.limit=i),"string"==typeof(r="public_get_exchanges_pair_trades"===o?await this.publicGetExchangesPairTrades(this.extend(h,s)):await this.publicGetExchangesPairLasttrades(this.extend(h,s))))throw new n.ExchangeError(r);return this.parseTrades(r,a,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetAccountBalance(e),i=this.safeValue(t,"Fees",{}),s=Object.keys(i),a={};for(let e=0;e<s.length;e++){let t=s[e],n=this.safeSymbol(t),o=this.safeValue(i,t),h=this.safeString(o,"FeeMaker"),d=this.safeString(o,"FeeTaker"),l=this.parseNumber(r.Y.stringDiv(h,"100")),c=this.parseNumber(r.Y.stringDiv(d,"100"));a[n]={info:o,symbol:n,taker:c,maker:l,percentage:!0,tierBased:!0}}return a}async createOrder(e,t,i,s,a,n={}){await this.loadMarkets();let o="privatePostOrderAddOrder",h=this.market(e),d={Amount:s,Pair:h.id};if("market"===t)o+="MarketPrice"+this.capitalize(i);else{d.Price=a;let e=this.numberToString(s),t=this.numberToString(a);d.Total=this.parseToNumeric(r.Y.stringMul(e,t)),d.IsBid="buy"===i}let l=await this[o](this.extend(d,n));return this.parseOrder(l,h)}async cancelOrder(e,t,i={}){let s=await this.privatePostOrderCancelOrder(this.extend({id:e},i));return this.parseOrder(s)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={pair:r.id},o=await this.privateGetOrderMyOrders(this.extend(a,s)),h=this.safeValue(o,r.id,{}),d=this.safeValue(h,"ask",[]),l=this.safeList(h,"bid",[]);return this.parseOrders(this.arrayConcat(d,l),r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privateGetOrderGetById(this.extend({id:e},i));return this.parseOrder(r,s)}parseOrder(e,t){let i,s,r,a;let n=!1;"NewOrder"in e?(i=e.NewOrder,n=!0):i=e;let o=this.safeString(i,"id"),h=this.safeSymbol(void 0,t),d=this.safeIntegerProduct(i,"created",1e3);if(n){let e=this.safeInteger(i,"status_type");0===e||1===e?s="open":5===e&&(s="closed")}else{let e=this.safeString(i,"status");"New"===e||"Open"===e?s="open":"Completed"===e&&(s="closed")}let l=this.safeString(i,"order_type");"0"===l?l="limit":"1"===l&&(l="market");let c=this.safeString(i,"type");"0"===c?c="buy":"1"===c&&(c="sell");let u=this.safeString(i,"price");return r=n?this.safeString(i,"amount"):this.safeString(i,"initialAmount"),a=this.safeString(i,"amount"),this.safeOrder({id:o,clientOrderId:void 0,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,status:s,symbol:h,type:l,timeInForce:void 0,postOnly:void 0,side:c,price:u,triggerPrice:void 0,amount:r,filled:void 0,remaining:a,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==i&&(a.take=i),a.take=i,void 0!==t&&(a.toTime=this.yyyymmdd(this.milliseconds(),"."),a.fromTime=this.yyyymmdd(t,".")),void 0!==e&&(r=this.market(e),a.pair=r.id);let n=await this.privateGetOrderOrderHistory(this.extend(a,s));return this.parseTrades(n,r,t,i)}removeCommaFromValue(e){let t="",i=e.split(",");for(let e=0;e<i.length;e++)t+=i[e];return t}parseTrade(e,t){let i,s,r,a,n,o,h,d;let l=this.safeString(e,"reference");if(void 0!==l){s=l,i=this.safeTimestamp(e,"ticks"),r=this.safeString(e,"price"),r=this.removeCommaFromValue(r),a=this.safeString(e,"firstAmount");let c=l.split("|"),u=this.safeString(e,"pair");t=this.safeMarket(u,t),t=this.safeMarket(c[0],t);let f=this.safeValue(e,"isMaker");d=f?"maker":"taker",n=f?c[2]:c[1],0===(h=this.safeInteger(e,"action"))?h="buy":1===h&&(h="sell");let p=this.safeString(e,"feeAmount");void 0!==p&&(o={cost:p,currency:"NIS"})}else i=this.safeTimestamp(e,"date"),s=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),void 0!==(h=this.safeValue(e,"isBid"))&&(h=h?"buy":"sell");return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:n,type:void 0,side:h,takerOrMaker:d,price:r,amount:a,cost:void 0,fee:o},t)}isFiat(e){return"NIS"===e}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e);if(this.isFiat(e))throw new n.NotSupported(this.id+" fetchDepositAddress() does not support fiat currencies");let s={Coin:i.id},r=await this.privatePostFundsAddCoinFundsRequest(this.extend(s,t));return this.parseDepositAddress(r,i)}parseDepositAddress(e,t){let i=this.safeString(e,"address");return this.checkAddress(i),{info:e,currency:this.safeCurrencyCode(void 0,t),network:void 0,address:i,tag:void 0}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+this.implodeParams(e,s);if("public"===t)n+=".json";else{this.checkRequiredCredentials();let e=this.nonce(),t=this.extend({nonce:e},s),o=this.urlencode(t);"GET"===i?Object.keys(t).length&&(n+="?"+o):a=o;let h=this.hmac(this.encode(o),this.encode(this.secret),A.Zf,"base64");r={"Content-Type":"application/x-www-form-urlencoded",key:this.apiKey,sign:h}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"error");if(void 0===l&&(l=this.safeString(o,"Error")),void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new n.ExchangeError(e)}}}class B extends s.k{}let E=B;class _ extends E{describe(){return this.deepExtend(super.describe(),{id:"bitbank",name:"bitbank",countries:["JP"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","4h":"4hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week"},hostname:"bitbank.cc",urls:{logo:"https://github.com/user-attachments/assets/9d616de0-8a88-4468-8e38-d269acab0348",api:{public:"https://public.{hostname}",private:"https://api.{hostname}",markets:"https://api.{hostname}"},www:"https://bitbank.cc/",doc:"https://docs.bitbank.cc/",fees:"https://bitbank.cc/docs/fees/"},api:{public:{get:["{pair}/ticker","tickers","tickers_jpy","{pair}/depth","{pair}/transactions","{pair}/transactions/{yyyymmdd}","{pair}/candlestick/{candletype}/{yyyymmdd}","{pair}/circuit_break_info"]},private:{get:["user/assets","user/spot/order","user/spot/active_orders","user/margin/positions","user/spot/trade_history","user/deposit_history","user/unconfirmed_deposits","user/deposit_originators","user/withdrawal_account","user/withdrawal_history","spot/status","spot/pairs"],post:["user/spot/order","user/spot/cancel_order","user/spot/cancel_orders","user/spot/orders_info","user/confirm_deposits","user/confirm_deposits_all","user/request_withdrawal"]},markets:{get:["spot/pairs"]}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:1e3,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{20001:n.AuthenticationError,20002:n.AuthenticationError,20003:n.AuthenticationError,20005:n.AuthenticationError,20004:n.InvalidNonce,40020:n.InvalidOrder,40021:n.InvalidOrder,40025:n.ExchangeError,40013:n.OrderNotFound,40014:n.OrderNotFound,50008:n.PermissionDenied,50009:n.OrderNotFound,50010:n.OrderNotFound,60001:n.InsufficientFunds,60005:n.InvalidOrder}}})}async fetchMarkets(e={}){let t=await this.marketsGetSpotPairs(e),i=this.safeValue(t,"data"),s=this.safeValue(i,"pairs",[]);return this.parseMarkets(s)}parseMarket(e){let t=this.safeString(e,"name"),i=this.safeString(e,"base_asset"),s=this.safeString(e,"quote_asset"),r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s);return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(e,"is_enabled"),contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(e,"taker_fee_rate_quote"),maker:this.safeNumber(e,"maker_fee_rate_quote"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"amount_digits"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"price_digits")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"unit_amount"),max:this.safeNumber(e,"limit_max_amount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeInteger(e,"timestamp"),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetPairTicker(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseTicker(a,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id},a=await this.publicGetPairDepth(this.extend(r,i)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,s.symbol,o)}parseTrade(e,t){let i;let s=this.safeInteger(e,"executed_at");t=this.safeMarket(void 0,t);let r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeString2(e,"transaction_id","trade_id"),o=this.safeString(e,"maker_taker"),h=this.safeString(e,"fee_amount_quote");void 0!==h&&(i={currency:t.quote,cost:h});let d=this.safeString(e,"order_id"),l=this.safeString(e,"type"),c=this.safeString(e,"side");return this.safeTrade({timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:n,order:d,type:l,side:c,takerOrMaker:o,price:r,amount:a,cost:void 0,fee:i,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id},n=await this.publicGetPairTransactions(this.extend(a,s)),o=this.safeValue(n,"data",{}),h=this.safeList(o,"transactions",[]);return this.parseTrades(h,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.marketsGetSpotPairs(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"pairs",[]),r={};for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"name"),a=this.safeMarket(i).symbol;r[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_rate_quote"),taker:this.safeNumber(t,"taker_fee_rate_quote"),percentage:!0,tierBased:!1}}return r}parseOHLCV(e,t){return[this.safeInteger(e,5),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4)]}async fetchOHLCV(e,t="1m",i,s,r={}){if(void 0===i){void 0===s&&(s=1e3);let e=this.parseTimeframe(t);i=this.milliseconds()-1e3*e*s}await this.loadMarkets();let a=this.market(e),n={pair:a.id,candletype:this.safeString(this.timeframes,t,t),yyyymmdd:this.yyyymmdd(i,"")},o=await this.publicGetPairCandlestickCandletypeYyyymmdd(this.extend(n,r)),h=this.safeValue(o,"data",{}),d=this.safeValue(h,"candlestick",[]),l=this.safeValue(d,0,{}),c=this.safeList(l,"ohlcv",[]);return this.parseOHLCVs(c,a,t,i,s)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data",{}),s=this.safeValue(i,"assets",[]);for(let e=0;e<s.length;e++){let i=s[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"free_amount"),n.used=this.safeString(i,"locked_amount"),n.total=this.safeString(i,"onhand_amount"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserAssets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({UNFILLED:"open",PARTIALLY_FILLED:"open",FULLY_FILLED:"closed",CANCELED_UNFILLED:"canceled",CANCELED_PARTIALLY_FILLED:"canceled"},e,e)}parseOrder(e,t){let i=this.safeString(e,"order_id"),s=this.safeString(e,"pair");t=this.safeMarket(s,t);let r=this.safeInteger(e,"ordered_at"),a=this.safeString(e,"price"),n=this.safeString(e,"start_amount"),o=this.safeString(e,"executed_amount"),h=this.safeString(e,"remaining_amount"),d=this.safeString(e,"average_price"),l=this.parseOrderStatus(this.safeString(e,"status")),c=this.safeStringLower(e,"type"),u=this.safeStringLower(e,"side");return this.safeOrder({id:i,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:l,symbol:t.symbol,type:c,timeInForce:void 0,postOnly:void 0,side:u,price:a,triggerPrice:void 0,cost:void 0,average:d,amount:n,filled:o,remaining:h,trades:void 0,fee:void 0,info:e},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={pair:n.id,amount:this.amountToPrecision(e,s),side:i,type:t};"limit"===t&&(o.price=this.priceToPrecision(e,r));let h=await this.privatePostUserSpotOrder(this.extend(o,a)),d=this.safeDict(h,"data");return this.parseOrder(d,n)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={order_id:e,pair:this.market(t).id},r=await this.privatePostUserSpotCancelOrder(this.extend(s,i)),a=this.safeValue(r,"data");return this.parseOrder(a)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r={order_id:e,pair:s.id},a=await this.privateGetUserSpotOrder(this.extend(r,i)),n=this.safeDict(a,"data");return this.parseOrder(n,s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==i&&(a.count=i),void 0!==t&&(a.since=this.parseToInt(t/1e3));let n=await this.privateGetUserSpotActiveOrders(this.extend(a,s)),o=this.safeValue(n,"data",{}),h=this.safeList(o,"orders",[]);return this.parseOrders(h,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==i&&(a.count=i),void 0!==t&&(a.since=this.parseToInt(t/1e3));let n=await this.privateGetUserSpotTradeHistory(this.extend(a,s)),o=this.safeValue(n,"data",{}),h=this.safeList(o,"trades",[]);return this.parseTrades(h,r,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={asset:i.id},r=await this.privateGetUserWithdrawalAccount(this.extend(s,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"accounts",[]),o=this.safeValue(n,0,{});return{info:r,currency:i,network:void 0,address:this.safeString(o,"address"),tag:void 0}}async withdraw(e,t,i,s,r={}){if([s,r]=this.handleWithdrawTagAndParams(s,r),!("uuid"in r))throw new n.ExchangeError(this.id+" uuid is required for withdrawal");await this.loadMarkets();let a=this.currency(e),o={asset:a.id,amount:t},h=await this.privatePostUserRequestWithdrawal(this.extend(o,r)),d=this.safeDict(h,"data",{});return this.parseTransaction(d,a)}parseTransaction(e,t){let i=this.safeString(e,"txid");return{id:i,txid:i,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,internal:void 0,fee:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o=this.implodeHostname(this.urls.api[t])+"/";if("public"===t||"markets"===t)o+=this.implodeParams(e,s),Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let t=this.nonce().toString(),h=t;o+=this.version+"/"+this.implodeParams(e,s),"POST"===i?h+=a=this.json(n):(h+="/"+this.version+"/"+e,Object.keys(n).length&&(o+="?"+(n=this.urlencode(n)),h+="?"+n)),r={"Content-Type":"application/json","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":t,"ACCESS-SIGNATURE":this.hmac(this.encode(h),this.encode(this.secret),l.s)}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeInteger(o,"success"),c=this.safeValue(o,"data");if(!l||!c){let e=this.safeString(c,"code"),t=this.safeString({1e4:"URL does not exist",10001:"A system error occurred. Please contact support",10002:"Invalid JSON format. Please check the contents of transmission",10003:"A system error occurred. Please contact support",10005:"A timeout error occurred. Please wait for a while and try again",20001:"API authentication failed",20002:"Illegal API key",20003:"API key does not exist",20004:"API Nonce does not exist",20005:"API signature does not exist",20011:"Two-step verification failed",20014:"SMS authentication failed",30001:"Please specify the order quantity",30006:"Please specify the order ID",30007:"Please specify the order ID array",30009:"Please specify the stock",30012:"Please specify the order price",30013:"Trade Please specify either",30015:"Please specify the order type",30016:"Please specify asset name",30019:"Please specify uuid",30039:"Please specify the amount to be withdrawn",40001:"The order quantity is invalid",40006:"Count value is invalid",40007:"End time is invalid",40008:"end_id Value is invalid",40009:"The from_id value is invalid",40013:"The order ID is invalid",40014:"The order ID array is invalid",40015:"Too many specified orders",40017:"Incorrect issue name",40020:"The order price is invalid",40021:"The trading classification is invalid",40022:"Start date is invalid",40024:"The order type is invalid",40025:"Incorrect asset name",40028:"uuid is invalid",40048:"The amount of withdrawal is illegal",50003:"Currently, this account is in a state where you can not perform the operation you specified. Please contact support",50004:"Currently, this account is temporarily registered. Please try again after registering your account",50005:"Currently, this account is locked. Please contact support",50006:"Currently, this account is locked. Please contact support",50008:"User identification has not been completed",50009:"Your order does not exist",50010:"Can not cancel specified order",50011:"API not found",60001:"The number of possessions is insufficient",60002:"It exceeds the quantity upper limit of the tender buying order",60003:"The specified quantity exceeds the limit",60004:"The specified quantity is below the threshold",60005:"The specified price is above the limit",60006:"The specified price is below the lower limit",70001:"A system error occurred. Please contact support",70002:"A system error occurred. Please contact support",70003:"A system error occurred. Please contact support",70004:"We are unable to accept orders as the transaction is currently suspended",70005:"Order can not be accepted because purchase order is currently suspended",70006:"We can not accept orders because we are currently unsubscribed ",70009:"We are currently temporarily restricting orders to be carried out. Please use the limit order.",70010:"We are temporarily raising the minimum order quantity as the system load is now rising."},e,"Error");throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),new n.ExchangeError(this.id+" "+this.json(o))}}}class N extends s.k{}let L=N;class R extends L{describe(){return this.deepExtend(super.describe(),{id:"bitbns",name:"Bitbns",countries:["IN"],rateLimit:1e3,certified:!1,version:"v2",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:void 0,cancelAllOrders:!1,cancelOrder:!0,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,fetchBalance:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:"emulated",fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!1},hostname:"bitbns.com",urls:{logo:"https://github.com/user-attachments/assets/a5b9a562-cdd8-4bea-9fa7-fd24c1dad3d9",api:{www:"https://{hostname}",v1:"https://api.{hostname}/api/trade/v1",v2:"https://api.{hostname}/api/trade/v2"},www:"https://bitbns.com",referral:"https://ref.bitbns.com/1090961",doc:["https://bitbns.com/trade/#/api-trading/"],fees:"https://bitbns.com/fees"},api:{www:{get:["order/fetchMarkets","order/fetchTickers","order/fetchOrderbook","order/getTickerWithVolume","exchangeData/ohlc","exchangeData/orderBook","exchangeData/tradedetails"]},v1:{get:["platform/status","tickers","orderbook/sell/{symbol}","orderbook/buy/{symbol}"],post:["currentCoinBalance/EVERYTHING","getApiUsageStatus/USAGE","getOrderSocketToken/USAGE","currentCoinBalance/{symbol}","orderStatus/{symbol}","depositHistory/{symbol}","withdrawHistory/{symbol}","withdrawHistoryAll/{symbol}","depositHistoryAll/{symbol}","listOpenOrders/{symbol}","listOpenStopOrders/{symbol}","getCoinAddress/{symbol}","placeSellOrder/{symbol}","placeBuyOrder/{symbol}","buyStopLoss/{symbol}","sellStopLoss/{symbol}","cancelOrder/{symbol}","cancelStopLossOrder/{symbol}","listExecutedOrders/{symbol}","placeMarketOrder/{symbol}","placeMarketOrderQnty/{symbol}"]},v2:{post:["orders","cancel","getordersnew","marginOrders"]}},fees:{trading:{feeSide:"quote",tierBased:!1,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025")}},precisionMode:d.kb,features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:void 0,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!0,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:100}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{400:n.BadRequest,409:n.BadSymbol,416:n.InsufficientFunds,417:n.OrderNotFound},broad:{}}})}async fetchStatus(e={}){let t=await this.v1GetPlatformStatus(e),i=this.safeString(t,"status");return{status:this.safeString({1:"ok"},i,i),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){let t=await this.wwwGetOrderFetchMarkets(e),i=[];for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"id"),a=this.safeString(s,"base"),n=this.safeString(s,"quote"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.safeDict(s,"precision",{}),l=this.safeDict(s,"limits",{}),c=this.safeDict(l,"amount",{}),u=this.safeDict(l,"price",{}),f=this.safeDict(l,"cost",{}),p="USDT"===n?a+"_"+n:a;i.push({id:r,uppercaseId:p,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(d,"amount"))),price:this.parseNumber(this.parsePrecision(this.safeString(d,"price")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(c,"min"),max:this.safeNumber(c,"max")},price:{min:this.safeNumber(u,"min"),max:this.safeNumber(u,"max")},cost:{min:this.safeNumber(f,"min"),max:this.safeNumber(f,"max")}},created:void 0,info:s})}return i}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);let a=await this.wwwGetOrderFetchOrderbook(this.extend(r,i)),n=this.safeInteger(a,"timestamp");return this.parseOrderBook(a,s.symbol,n)}parseTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeString(e,"last");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidVolume"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askVolume"),vwap:this.safeString(e,"vwap"),open:this.safeString(e,"open"),close:a,last:a,previousClose:this.safeString(e,"previousClose"),change:this.safeString(e,"change"),percentage:this.safeString(e,"percentage"),average:this.safeString(e,"average"),baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.wwwGetOrderFetchTickers(t);return this.parseTickers(i,e)}parseBalance(e){let t=void 0,i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeDict(e,"data",{}),r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e],a=t.split("availableorder");if(a.length>1){let e=this.safeString(a,1),r=this.account();r.free=this.safeString(s,t),r.used=this.safeString(s,"inorder"+e),"Money"===e&&(e="INR"),i[this.safeCurrencyCode(e)]=r}}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.v1PostCurrentCoinBalanceEVERYTHING(e);return this.parseBalance(t)}parseStatus(e){return this.safeString({"-1":"cancelled",0:"open",1:"open",2:"done"},e,e)}parseOrder(e,t){let i=this.safeString2(e,"id","entry_id"),s=this.safeString(e,"time"),r=this.safeString(e,"t_rate"),a=this.safeString(e,"type");"0"===a?a="buy":"1"===a&&(a="sell");let n=this.safeString(e,"data"),o=this.safeString(e,"status");return o="Successfully cancelled the order"===n?"cancelled":this.parseStatus(o),this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:this.parse8601(s),datetime:s,lastTradeTimestamp:void 0,symbol:this.safeString(t,"symbol"),timeInForce:void 0,postOnly:void 0,side:a,price:this.safeString(e,"rate"),triggerPrice:r,amount:this.safeString(e,"btc"),cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:o,fee:{cost:void 0,currency:void 0,rate:void 0},trades:void 0},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=this.safeStringN(a,["triggerPrice","stopPrice","t_rate"]),h=this.safeString(a,"target_rate"),d=this.safeString(a,"trail_rate");a=this.omit(a,["triggerPrice","stopPrice","trail_rate","target_rate","t_rate"]);let l={side:i.toUpperCase(),symbol:n.uppercaseId,quantity:this.amountToPrecision(e,s)},c="v2PostOrders";"limit"===t?l.rate=this.priceToPrecision(e,r):(c="v1PostPlaceMarketOrderQntySymbol",l.market=n.quoteId),void 0!==o&&(l.t_rate=this.priceToPrecision(e,o)),void 0!==h&&(l.target_rate=this.priceToPrecision(e,h)),void 0!==d&&(l.trail_rate=this.priceToPrecision(e,d));let u=await this[c](this.extend(l,a));return this.parseOrder(u,n)}async cancelOrder(e,t,i={}){let s;if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let r=this.market(t),a=this.safeBool2(i,"trigger","stop");i=this.omit(i,["trigger","stop"]);let o={entry_id:e,symbol:r.uppercaseId},h="USDT"===r.quoteId?"usdtcancel":"cancel";return h+=a?"StopLossOrder":"Order",o.side=h,s=await this.v2PostCancel(this.extend(o,i)),this.parseOrder(s,r)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={symbol:s.id,entry_id:e};if(this.safeBool2(i,"trigger","stop"))throw new n.BadRequest(this.id+" fetchOrder cannot fetch stop orders");let a=await this.v1PostOrderStatusSymbol(this.extend(r,i)),o=this.safeList(a,"data",[]),h=this.safeDict(o,0);return this.parseOrder(h,s)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a=this.safeBool2(s,"trigger","stop");s=this.omit(s,["trigger","stop"]);let o="USDT"===r.quoteId?"usdtListOpen":"listOpen",h={symbol:r.uppercaseId,page:0,side:a?o+"StopOrders":o+"Orders"},d=await this.v2PostGetordersnew(this.extend(h,s)),l=this.safeList(d,"data",[]);return this.parseOrders(l,r,t,i)}parseTrade(e,t){let i,s;t=this.safeMarket(void 0,t);let a=this.safeString2(e,"id","tradeId"),n=this.parse8601(this.safeString(e,"date"));n=this.safeInteger(e,"timestamp",n);let o=this.safeString2(e,"rate","price"),h=this.safeString(e,"amount"),d=this.safeStringLower(e,"type");void 0!==d&&(d.indexOf("buy")>=0?d="buy":d.indexOf("sell")>=0&&(d="sell"));let l=this.safeString(e,"factor");void 0!==l?h=r.Y.stringDiv(h,l):(h=this.safeString(e,"base_volume"),i=this.safeString(e,"quote_volume"));let c=t.symbol,u=this.safeString(e,"fee");return void 0!==u&&(s={cost:u,currency:t.quote}),this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:c,id:a,order:a,type:void 0,side:d,takerOrMaker:void 0,price:o,amount:h,cost:i,fee:s},t)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id,page:0};void 0!==t&&(a.since=this.iso8601(t));let o=await this.v1PostListExecutedOrdersSymbol(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}async fetchTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={coin:r.baseId,market:r.quoteId},o=await this.wwwGetExchangeDataTradedetails(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchDeposits(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();let r=this.currency(e),a={symbol:r.id,page:0},o=await this.v1PostDepositHistorySymbol(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i)}async fetchWithdrawals(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();let r=this.currency(e),a={symbol:r.id,page:0},o=await this.v1PostWithdrawHistorySymbol(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i)}parseTransactionStatusByType(e,t){let i=this.safeDict({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",6:"ok"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t){let i,s;let r=this.safeString(e,"unit"),a=this.safeCurrencyCode(r,t),n=this.parse8601(this.safeString2(e,"date","timestamp")),o=this.safeString(e,"type"),h=this.safeString(e,"expTime","");void 0!==o&&(o.indexOf("deposit")>=0?(o="deposit",i="ok"):(o.indexOf("withdraw")>=0||h.indexOf("withdraw")>=0)&&(o="withdrawal"));let d=this.safeNumber(e,"amount"),l=this.safeNumber(e,"fee");return void 0!==l&&(s={currency:a,cost:l}),{info:e,id:void 0,txid:void 0,timestamp:n,datetime:this.iso8601(n),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:o,amount:d,currency:a,status:i,updated:void 0,comment:void 0,internal:void 0,fee:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={symbol:this.currency(e).id},s=await this.v1PostGetCoinAddressSymbol(this.extend(i,t)),r=this.safeDict(s,"data",{}),a=this.safeString(r,"token"),n=this.safeString(r,"tag");return this.checkAddress(a),{info:s,currency:e,network:void 0,address:a,tag:n}}nonce(){return this.milliseconds()}sign(e,t="www",i="GET",s={},r,a){if(!(t in this.urls.api))throw new n.ExchangeError(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");"www"!==t&&(this.checkRequiredCredentials(),r={"X-BITBNS-APIKEY":this.apiKey});let o=this.implodeHostname(this.urls.api[t])+"/"+this.implodeParams(e,s),h=this.omit(s,this.extractParams(e)),d=this.nonce().toString();if("GET"===i)Object.keys(h).length&&(o+="?"+this.urlencode(h));else if("POST"===i){let e={timeStamp_nonce:d,body:a=Object.keys(h).length?this.json(h):"{}"},t=this.stringToBase64(this.json(e)),i=this.hmac(this.encode(t),this.encode(this.secret),A.Zf);r["X-BITBNS-PAYLOAD"]=t,r["X-BITBNS-SIGNATURE"]=i,r["Content-Type"]="application/x-www-form-urlencoded"}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code"),c=this.safeString(o,"msg");if(void 0!==l&&"200"!==l&&"204"!==l||void 0!==c){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwExactlyMatchedException(this.exceptions.exact,c,e),this.throwBroadlyMatchedException(this.exceptions.broad,c,e),new n.ExchangeError(e)}}}class D extends g.A{describe(){return this.deepExtend(super.describe(),{id:"fmfwio",name:"FMFW.io",countries:["KN"],urls:{logo:"https://user-images.githubusercontent.com/1294454/159177712-b685b40c-5269-4cea-ac83-f7894c49525d.jpg",api:{public:"https://api.fmfw.io/api/3",private:"https://api.fmfw.io/api/3"},www:"https://fmfw.io",doc:"https://api.fmfw.io/",fees:"https://fmfw.io/fees-and-limits",referral:"https://fmfw.io/referral/da948b21d6c92d69"},fees:{trading:{maker:this.parseNumber("0.005"),taker:this.parseNumber("0.005")}}})}}class V extends D{describe(){return this.deepExtend(super.describe(),{id:"bitcoincom",name:"Bitcoin.com",alias:!0})}}var q=i(6839);class F extends s.k{}let H=F;class G extends H{describe(){return this.deepExtend(super.describe(),{id:"bitfinex1",name:"Bitfinex",countries:["VG"],version:"v1",rateLimit:666.666,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:"emulated",transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://github.com/user-attachments/assets/9147c6c5-7197-481e-827b-7483672bb0e9",api:{v2:"https://api-pub.bitfinex.com",public:"https://api.bitfinex.com",private:"https://api.bitfinex.com"},www:"https://www.bitfinex.com",referral:"https://www.bitfinex.com/?refcode=P61eYxFL",doc:["https://docs.bitfinex.com/v1/docs","https://github.com/bitfinexcom/bitfinex-api-node"]},api:{v2:{get:{"platform/status":3,tickers:1,"ticker/{symbol}":1,"tickers/hist":1,"trades/{symbol}/hist":1,"book/{symbol}/{precision}":.375,"book/{symbol}/P0":.375,"book/{symbol}/P1":.375,"book/{symbol}/P2":.375,"book/{symbol}/P3":.375,"book/{symbol}/R0":.375,"stats1/{key}:{size}:{symbol}:{side}/{section}":1,"stats1/{key}:{size}:{symbol}/{section}":1,"stats1/{key}:{size}:{symbol}:long/last":1,"stats1/{key}:{size}:{symbol}:long/hist":1,"stats1/{key}:{size}:{symbol}:short/last":1,"stats1/{key}:{size}:{symbol}:short/hist":1,"candles/trade:{timeframe}:{symbol}/{section}":1,"candles/trade:{timeframe}:{symbol}/last":1,"candles/trade:{timeframe}:{symbol}/hist":1}},public:{get:{"book/{symbol}":1,"lendbook/{currency}":6,"lends/{currency}":3,"pubticker/{symbol}":3,"stats/{symbol}":6,symbols:18,symbols_details:18,tickers:1,"trades/{symbol}":3}},private:{post:{account_fees:18,account_infos:6,balances:9.036,basket_manage:6,credits:6,"deposit/new":18,"funding/close":6,history:6,"history/movements":6,key_info:6,margin_infos:3,mytrades:3,mytrades_funding:6,"offer/cancel":6,"offer/new":6,"offer/status":6,offers:6,"offers/hist":90.03,"order/cancel":.2,"order/cancel/all":.2,"order/cancel/multi":.2,"order/cancel/replace":.2,"order/new":.2,"order/new/multi":.2,"order/status":.2,orders:.2,"orders/hist":90.03,"position/claim":18,"position/close":18,positions:18,summary:18,taken_funds:6,total_taken_funds:6,transfer:18,unused_taken_funds:6,withdraw:18}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.002")],[this.parseNumber("2500000"),this.parseNumber("0.002")],[this.parseNumber("5000000"),this.parseNumber("0.002")],[this.parseNumber("7500000"),this.parseNumber("0.002")],[this.parseNumber("10000000"),this.parseNumber("0.0018")],[this.parseNumber("15000000"),this.parseNumber("0.0016")],[this.parseNumber("20000000"),this.parseNumber("0.0014")],[this.parseNumber("25000000"),this.parseNumber("0.0012")],[this.parseNumber("30000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0002")],[this.parseNumber("7500000"),this.parseNumber("0")],[this.parseNumber("10000000"),this.parseNumber("0")],[this.parseNumber("15000000"),this.parseNumber("0")],[this.parseNumber("20000000"),this.parseNumber("0")],[this.parseNumber("25000000"),this.parseNumber("0")],[this.parseNumber("30000000"),this.parseNumber("0")]]}},funding:{tierBased:!1,percentage:!1,deposit:{},withdraw:{}}},commonCurrencies:{ALG:"ALGO",AMP:"AMPL",ATO:"ATOM",BCHABC:"XEC",BCHN:"BCH",DAT:"DATA",DOG:"MDOGE",DSH:"DASH",EDO:"PNT",EUS:"EURS",EUT:"EURT",IDX:"ID",IOT:"IOTA",IQX:"IQ",LUNA:"LUNC",LUNA2:"LUNA",MNA:"MANA",ORS:"ORS Group",PAS:"PASS",QSH:"QASH",QTM:"QTUM",RBT:"RBTC",SNG:"SNGLS",STJ:"STORJ",TERRAUST:"USTC",TSD:"TUSD",YGG:"YEED",YYW:"YOYOW",UDC:"USDC",UST:"USDT",VSY:"VSYS",WAX:"WAXP",XCH:"XCHF",ZBT:"ZB"},exceptions:{exact:{temporarily_unavailable:n.ExchangeNotAvailable,"Order could not be cancelled.":n.OrderNotFound,"No such order found.":n.OrderNotFound,"Order price must be positive.":n.InvalidOrder,"Could not find a key matching the given X-BFX-APIKEY.":n.AuthenticationError,'Key price should be a decimal number, e.g. "123.456"':n.InvalidOrder,'Key amount should be a decimal number, e.g. "123.456"':n.InvalidOrder,ERR_RATE_LIMIT:n.RateLimitExceeded,Ratelimit:n.RateLimitExceeded,"Nonce is too small.":n.InvalidNonce,"No summary found.":n.ExchangeError,"Cannot evaluate your available balance, please try again":n.ExchangeNotAvailable,"Unknown symbol":n.BadSymbol,"Cannot complete transfer. Exchange balance insufficient.":n.InsufficientFunds,"Momentary balance check. Please wait few seconds and try the transfer again.":n.ExchangeError},broad:{"Invalid X-BFX-SIGNATURE":n.AuthenticationError,"This API key does not have permission":n.PermissionDenied,"not enough exchange balance for ":n.InsufficientFunds,"minimum size for ":n.InvalidOrder,"Invalid order":n.InvalidOrder,"The available balance is only":n.InsufficientFunds}},precisionMode:d.v,options:{currencyNames:{AGI:"agi",AID:"aid",AIO:"aio",ANT:"ant",AVT:"aventus",BAT:"bat",BCH:"bab",BCI:"bci",BFT:"bft",BSV:"bsv",BTC:"bitcoin",BTG:"bgold",CFI:"cfi",COMP:"comp",DAI:"dai",DADI:"dad",DASH:"dash",DATA:"datacoin",DTH:"dth",EDO:"eidoo",ELF:"elf",EOS:"eos",ETC:"ethereumc",ETH:"ethereum",ETP:"metaverse",FUN:"fun",GNT:"golem",IOST:"ios",IOTA:"iota",LEO:"let",LINK:"link",LRC:"lrc",LTC:"litecoin",LYM:"lym",MANA:"mna",MIT:"mit",MKR:"mkr",MTN:"mtn",NEO:"neo",ODE:"ode",OMG:"omisego",OMNI:"mastercoin",QASH:"qash",QTUM:"qtum",RCN:"rcn",RDN:"rdn",REP:"rep",REQ:"req",RLC:"rlc",SAN:"santiment",SNGLS:"sng",SNT:"status",SPANK:"spk",STORJ:"stj",TNB:"tnb",TRX:"trx",TUSD:"tsd",USD:"wire",USDC:"udc",UTK:"utk",USDT:"tetheruso",VEE:"vee",WAX:"wax",XLM:"xlm",XMR:"monero",XRP:"ripple",XVG:"xvg",YOYOW:"yoyow",ZEC:"zcash",ZRX:"zrx",XTZ:"xtz"},orderTypes:{limit:"exchange limit",market:"exchange market"},fiat:{USD:"USD",EUR:"EUR",JPY:"JPY",GBP:"GBP",CNH:"CNH"},accountsByType:{spot:"exchange",margin:"trading",funding:"deposit",swap:"trading"}}})}async fetchTransactionFees(e,t={}){await this.loadMarkets();let i={},s=await this.privatePostAccountFees(t),r=this.safeDict(s,"withdraw",{}),a=Object.keys(r);for(let t=0;t<a.length;t++){let s=a[t],n=this.safeCurrencyCode(s);(void 0===e||this.inArray(n,e))&&(i[n]={withdraw:this.safeNumber(r,s),deposit:{},info:this.safeNumber(r,s)})}return i}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.privatePostAccountFees(t),s=this.safeList(i,"withdraw");return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFee(e,t){return{withdraw:{fee:this.parseNumber(e),percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{},info:e}}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostSummary(e),i={},s=this.safeDict(this.options,"fiat",{}),r=this.safeNumber(t,"maker_fee"),a=this.safeNumber(t,"taker_fee"),n=this.safeNumber(t,"maker_fee_2fiat"),o=this.safeNumber(t,"taker_fee_2fiat"),h=this.safeNumber(t,"maker_fee_2deriv"),d=this.safeNumber(t,"taker_fee_2deriv");for(let e=0;e<this.symbols.length;e++){let l=this.symbols[e],c=this.market(l),u={info:t,symbol:l,percentage:!0,tierBased:!0};c.quote in s?(u.maker=n,u.taker=o):c.contract?(u.maker=h,u.taker=d):(u.maker=r,u.taker=a),i[l]=u}return i}async fetchMarkets(e={}){let t=this.publicGetSymbols(),i=this.publicGetSymbolsDetails(),[s,r]=await Promise.all([t,i]),a=[];for(let e=0;e<r.length;e++){let t,i;let n=r[e],o=this.safeString(n,"pair");if(!this.inArray(o,s))continue;if((o=o.toUpperCase()).indexOf(":")>=0){let e=o.split(":");t=e[0],i=e[1]}else t=o.slice(0,3),i=o.slice(3,6);let h=this.safeCurrencyCode(t),d=this.safeCurrencyCode(i),l=h+"/"+d,c="spot";o.indexOf("F0")>-1&&(c="swap"),a.push({id:o,symbol:l,base:h,quote:d,settle:void 0,baseId:t,quoteId:i,settleId:void 0,type:c,spot:"spot"===c,margin:this.safeBool(n,"margin"),swap:"swap"===c,future:!1,option:!1,active:!0,contract:"swap"===c,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("8"),price:this.safeInteger(n,"price_precision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"minimum_order_size"),max:this.safeNumber(n,"maximum_order_size")},price:{min:this.parseNumber("1e-8"),max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:n})}return a}amountToPrecision(e,t){return e=this.safeSymbol(e),this.decimalToPrecision(t,d.R3,this.markets[e].precision.amount,d.fv)}priceToPrecision(e,t){return e=this.safeSymbol(e),t=this.decimalToPrecision(t,d.D_,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,d.R3,8,d.fv)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeDict(this.options,"accountsByType",{}),i=this.safeString(e,"type","exchange"),s=this.safeString(t,i,i);if(void 0===s){let e=Object.keys(t);throw new n.ExchangeError(this.id+" fetchBalance() type parameter must be one of "+e.join(", "))}let r=this.omit(e,"type"),a=await this.privatePostBalances(r),o={info:a},h="derivatives"===i;for(let e=0;e<a.length;e++){let t=a[e],i=this.safeString(t,"type"),r=this.safeStringLower(t,"currency",""),n=r.length-2,d="f0"===r.slice(n),l=!h||d;if(s===i&&l){let e=this.safeCurrencyCode(r);if(!(e in o)){let i=this.account();i.free=this.safeString(t,"available"),i.total=this.safeString(t,"amount"),o[e]=i}}}return this.safeBalance(o)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.safeDict(this.options,"accountsByType",{}),o=this.safeString(a,i,i),h=this.safeString(a,s,s),d=this.currency(e),l=this.convertDerivativesId(d.id,i),c=this.convertDerivativesId(d.id,s),u=this.currencyToPrecision(e,t),f=await this.privatePostTransfer(this.extend({amount:u,currency:l,currency_to:c,walletfrom:o,walletto:h},r)),p=this.safeValue(f,0);if(void 0===this.safeString(p,"message"))throw new n.ExchangeError(this.id+" transfer failed");return this.extend(this.parseTransfer(p,d),{fromAccount:i,toAccount:s,amount:this.parseNumber(u)})}parseTransfer(e,t){return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(this.safeString(e,"status"))}}parseTransferStatus(e){return this.safeString({SUCCESS:"ok"},e,e)}convertDerivativesId(e,t){let i=e.length-2,s="F0"===e.slice(i);return"derivatives"!==t&&"trading"!==t&&"margin"!==t&&s?e=e.slice(0,i):"derivatives"!==t||s||(e+="F0"),e}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit_bids=t,r.limit_asks=t);let a=await this.publicGetBookSymbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetTickers(t),s={};for(let e=0;e<i.length;e++){let t=this.parseTicker(i[e]);s[t.symbol]=t}return this.filterByArrayTickers(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetPubtickerSymbol(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t){let i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"pair"),r=(t=this.safeMarket(s,t)).symbol,a=this.safeString(e,"last_price");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"mid"),baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}parseTrade(e,t){let i;let s=this.safeString(e,"tid"),a=this.safeTimestamp(e,"timestamp"),n=this.safeStringLower(e,"type"),o=this.safeString(e,"order_id"),h=this.safeString(e,"price"),d=this.safeString(e,"amount");if("fee_amount"in e){let t=r.Y.stringNeg(this.safeString(e,"fee_amount")),s=this.safeString(e,"fee_currency");i={cost:t,currency:this.safeCurrencyCode(s)}}return this.safeTrade({id:s,info:e,timestamp:a,datetime:this.iso8601(a),symbol:t.symbol,type:void 0,order:o,side:n,takerOrMaker:void 0,price:h,amount:d,cost:void 0,fee:i},t)}async fetchTrades(e,t,i=50,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id,limit_trades:i};void 0!==t&&(a.timestamp=this.parseToInt(t/1e3));let n=await this.publicGetTradesSymbol(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit_trades=i),void 0!==t&&(a.timestamp=this.parseToInt(t/1e3));let o=await this.privatePostMytrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=this.safeBool(a,"postOnly",!1);t=t.toLowerCase(),a=this.omit(a,["postOnly"]),n.spot&&(t=this.safeStringLower(this.options.orderTypes,t,t));let h={symbol:n.id,side:i,amount:this.amountToPrecision(e,s),type:t,ocoorder:!1,buy_price_oco:0,sell_price_oco:0};t.indexOf("market")>-1?h.price=this.nonce().toString():h.price=this.priceToPrecision(e,r),o&&(h.is_postonly=!0);let d=await this.privatePostOrderNew(this.extend(h,a));return this.parseOrder(d,n)}async editOrder(e,t,i,s,r,a,n={}){await this.loadMarkets();let o={order_id:parseInt(e)};void 0!==a&&(o.price=this.priceToPrecision(t,a)),void 0!==r&&(o.amount=this.numberToString(r)),void 0!==t&&(o.symbol=this.marketId(t)),void 0!==s&&(o.side=s),void 0!==i&&(o.type=this.safeString(this.options.orderTypes,i,i));let h=await this.privatePostOrderCancelReplace(this.extend(o,n));return this.parseOrder(h)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={order_id:parseInt(e)},r=await this.privatePostOrderCancel(this.extend(s,i));return this.parseOrder(r)}async cancelAllOrders(e,t={}){let i=await this.privatePostOrderCancelAll(t);return[this.safeOrder({info:i})]}parseOrder(e,t){let i;let s=this.safeString(e,"side"),r=this.safeBool(e,"is_live"),a=this.safeBool(e,"is_cancelled");i=r?"open":a?"canceled":"closed";let n=this.safeStringUpper(e,"symbol"),o=this.safeSymbol(n,t),h=this.safeString(e,"type","");h.indexOf("exchange ")>=0&&(h=e.type.split(" ")[1]);let d=this.safeTimestamp(e,"timestamp"),l=this.safeString(e,"id");return this.safeOrder({info:e,id:l,clientOrderId:void 0,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:o,type:h,timeInForce:void 0,postOnly:void 0,side:s,price:this.safeString(e,"price"),triggerPrice:void 0,average:this.safeString(e,"avg_execution_price"),amount:this.safeString(e,"original_amount"),remaining:this.safeString(e,"remaining_amount"),filled:this.safeString(e,"executed_amount"),status:i,fee:void 0,cost:void 0,trades:void 0},t)}async fetchOpenOrders(e,t,i,s={}){if(await this.loadMarkets(),void 0!==e&&!(e in this.markets))throw new n.ExchangeError(this.id+" has no symbol "+e);let r=await this.privatePostOrders(s),a=this.parseOrders(r,void 0,t,i);return void 0!==e&&(a=this.filterBy(a,"symbol",e)),a}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets(),e=this.symbol(e);let r={};void 0!==i&&(r.limit=i);let a=await this.privatePostOrdersHist(this.extend(r,s)),n=this.parseOrders(a,void 0,t,i);return void 0!==e&&(n=this.filterBy(n,"symbol",e)),n=this.filterByArray(n,"status",["closed","canceled"],!1)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s={order_id:parseInt(e)},r=await this.privatePostOrderStatus(this.extend(s,i));return this.parseOrder(r)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets(),s=void 0===s?100:Math.min(s,1e4);let a=this.market(e),n={symbol:"t"+a.id,timeframe:this.safeString(this.timeframes,t,t),sort:1,limit:s},o=this.safeInteger(r,"until");if(void 0!==i)n.start=i;else if(void 0!==o){let e=this.parseTimeframe(t);n.start=o-(s-1)*e*1e3}void 0!==o&&(n.end=o),r=this.omit(r,"until");let h=await this.v2GetCandlesTradeTimeframeSymbolHist(this.extend(n,r));return this.parseOHLCVs(h,a,t,i,s)}getCurrencyName(e){if(e in this.options.currencyNames)return this.options.currencyNames[e];throw new n.NotSupported(this.id+" "+e+" not supported for withdrawal")}async createDepositAddress(e,t={}){return await this.loadMarkets(),await this.fetchDepositAddress(e,this.extend({renew:1},t))}async fetchDepositAddress(e,t={}){let i;await this.loadMarkets();let s=this.getCurrencyName(e),r=await this.privatePostDepositNew(this.extend({method:s,wallet_name:"exchange",renew:0},t)),a=this.safeValue(r,"address");return"address_pool"in r&&(i=a,a=r.address_pool),this.checkAddress(a),{currency:e,address:a,tag:i,network:void 0,info:r}}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeString(s,"currency"),o=this.omit(s,"currency");if(void 0===a){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchDepositsWithdrawals() requires a currency `code` argument or a `currency` parameter");a=(r=this.currency(e)).id}o.currency=a,void 0!==t&&(o.since=this.parseToInt(t/1e3));let h=await this.privatePostHistoryMovements(this.extend(o,s));return this.parseTransactions(h,r,t,i)}parseTransaction(e,t){let i=this.safeTimestamp(e,"timestamp_created"),s=this.safeString(e,"currency"),a=this.safeCurrencyCode(s,t),n=this.safeString(e,"fee");return void 0!==n&&(n=r.Y.stringAbs(n)),{info:e,id:this.safeString2(e,"id","withdrawal_id"),txid:this.safeString(e,"txid"),type:this.safeStringLower(e,"type"),currency:a,network:void 0,amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatus(this.safeString(e,"status")),timestamp:i,datetime:this.iso8601(i),address:this.safeString(e,"address"),addressFrom:void 0,addressTo:void 0,tag:this.safeString(e,"description"),tagFrom:void 0,tagTo:void 0,updated:this.safeTimestamp(e,"timestamp"),comment:void 0,internal:void 0,fee:{currency:a,cost:this.parseNumber(n),rate:void 0}}}parseTransactionStatus(e){return this.safeString({SENDING:"pending",CANCELED:"canceled",ZEROCONFIRMED:"failed",COMPLETED:"ok"},e,e)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.getCurrencyName(e),o=this.currency(e),h={withdraw_type:a,walletselected:"exchange",amount:this.numberToString(t),address:i};void 0!==s&&(h.payment_id=s);let d=await this.privatePostWithdraw(this.extend(h,r)),l=this.safeDict(d,0,{}),c=this.safeInteger(l,"withdrawal_id"),u=this.safeString(l,"message"),f=this.findBroadlyMatchedKey(this.exceptions.broad,u);if(0===c){if(void 0!==f)throw new this.exceptions.broad[f](this.id+" "+u);throw new n.ExchangeError(this.id+" withdraw returned an id of zero: "+this.json(l))}return this.parseTransaction(l,o)}async fetchPositions(e,t={}){return await this.loadMarkets(),await this.privatePostPositions(t)}nonce(){return this.microseconds()}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.implodeParams(e,s);n="v2"===t?"/"+t+n:"/"+this.version+n;let o=this.omit(s,this.extractParams(e)),h=this.urls.api[t]+n;if(("public"===t||e.indexOf("/hist")>=0)&&Object.keys(o).length){let e="?"+this.urlencode(o);h+=e,n+=e}if("private"===t){this.checkRequiredCredentials();let e=this.nonce();o=this.extend({nonce:e.toString(),request:n},o),a=this.json(o);let t=this.stringToBase64(a),i=this.encode(this.secret),s=this.hmac(this.encode(t),i,A.qt);r={"X-BFX-APIKEY":this.apiKey,"X-BFX-PAYLOAD":t,"X-BFX-SIGNATURE":s,"Content-Type":"application/json"}}return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=!1;if(e>=400)"{"===a[0]&&(l=!0);else{let e=this.safeDict(o,0,{});"error"===this.safeString(e,"status","")&&(l=!0)}if(l){let e=this.id+" "+a,t=this.safeString2(o,"message","error");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new n.ExchangeError(e)}}}class U extends s.k{}let W=U;class j extends W{describe(){return this.deepExtend(super.describe(),{id:"bitflyer",name:"bitFlyer",countries:["JP"],version:"v1",rateLimit:1e3,hostname:"bitflyer.com",has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelAllOrders:void 0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:"emulated",fetchDeposits:!0,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOpenOrders:"emulated",fetchOrder:"emulated",fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPositions:!0,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},urls:{logo:"https://github.com/user-attachments/assets/d0217747-e54d-4533-8416-0d553dca74bb",api:{rest:"https://api.{hostname}"},www:"https://bitflyer.com",doc:"https://lightning.bitflyer.com/docs?lang=en"},api:{public:{get:["getmarkets/usa","getmarkets/eu","getmarkets","getboard","getticker","getexecutions","gethealth","getboardstate","getchats","getfundingrate"]},private:{get:["getpermissions","getbalance","getbalancehistory","getcollateral","getcollateralhistory","getcollateralaccounts","getaddresses","getcoinins","getcoinouts","getbankaccounts","getdeposits","getwithdrawals","getchildorders","getparentorders","getparentorder","getexecutions","getpositions","gettradingcommission"],post:["sendcoin","withdraw","sendchildorder","cancelchildorder","sendparentorder","cancelparentorder","cancelallchildorders"]}},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:d.kb,features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!0},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:100,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:100,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:100,daysBack:void 0,daysBackCanceled:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{"-2":n.OnMaintenance}}})}parseExpiryDate(e){let t=e.slice(0,2),i=e.slice(2,5),s=e.slice(5,9),r=this.safeString({JAN:"01",FEB:"02",MAR:"03",APR:"04",MAY:"05",JUN:"06",JUL:"07",AUG:"08",SEP:"09",OCT:"10",NOV:"11",DEC:"12"},i);return this.parse8601(s+"-"+r+"-"+t+"T00:00:00Z")}safeMarket(e,t,i,s){return super.safeMarket(e,t,i,"spot")}async fetchMarkets(e={}){let t=await this.publicGetGetmarkets(e),i=await this.publicGetGetmarketsUsa(e),s=await this.publicGetGetmarketsEu(e),r=this.arrayConcat(t,i);r=this.arrayConcat(r,s);let a=[];for(let e=0;e<r.length;e++){let t,i,s,n;let o=r[e],h=this.safeString(o,"product_code"),d=h.split("_"),l=this.safeString(o,"market_type"),c="FX"===l,u="Futures"===l,f=!c&&!u,p="spot";if(f)i=this.safeString(d,0),s=this.safeString(d,1);else if(c)p="swap",i=this.safeString(d,1),s=this.safeString(d,2);else if(u){let e=this.safeString(o,"alias");if(void 0===e){i=h.slice(0,3),s=h.slice(3,6);let e=h.slice(-9);n=this.parseExpiryDate(e)}else{let t=e.split("_"),r=this.safeString(t,0);i=r.slice(0,-3),s=r.slice(-3);let a=h.split(r),o=this.safeString(a,1);n=this.parseExpiryDate(o)}p="future"}let m=this.safeCurrencyCode(i),g=this.safeCurrencyCode(s),y=m+"/"+g,v=this.fees.trading.taker,b=this.fees.trading.maker,w=c||u;w&&(b=0,v=0,y=y+":"+(t="JPY"),u&&(y=y+"-"+this.yymmdd(n))),a.push({id:h,symbol:y,base:m,quote:g,settle:t,baseId:i,quoteId:s,settleId:void 0,type:p,spot:f,margin:!1,swap:c,future:u,option:!1,active:!0,contract:w,linear:!f||void 0,inverse:!!f&&void 0,taker:v,maker:b,contractSize:void 0,expiry:n,expiryDatetime:this.iso8601(n),strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:o})}return a}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"amount"),n.free=this.safeString(s,"available"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetGetbalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={product_code:s.id},a=await this.publicGetGetboard(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","size")}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.parse8601(this.safeString(e,"timestamp")),r=this.safeString(e,"ltp");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeString(e,"best_bid"),bidVolume:void 0,ask:this.safeString(e,"best_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume_by_product"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={product_code:i.id},r=await this.publicGetGetticker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i,s=this.safeStringLower(e,"side");if(void 0!==s&&s.length<1&&(s=void 0),void 0!==s){let t=s+"_child_order_acceptance_id";t in e&&(i=e[t])}void 0===i&&(i=this.safeString(e,"child_order_acceptance_id"));let r=this.parse8601(this.safeString(e,"exec_date")),a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeString(e,"id");return t=this.safeMarket(void 0,t),this.safeTrade({id:o,info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:i,type:void 0,side:s,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={product_code:r.id};void 0!==i&&(a.count=i);let n=await this.publicGetGetexecutions(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={product_code:i.id},r=await this.privateGetGettradingcommission(this.extend(s,t)),a=this.safeNumber(r,"commission_rate");return{info:r,symbol:i.symbol,maker:a,taker:a,percentage:void 0,tierBased:void 0}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n={product_code:this.marketId(e),child_order_type:t.toUpperCase(),side:i.toUpperCase(),price:r,size:s},o=await this.privatePostSendchildorder(this.extend(n,a)),h=this.safeString(o,"child_order_acceptance_id");return this.safeOrder({id:h,info:o})}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s={product_code:this.marketId(t),child_order_acceptance_id:e},r=await this.privatePostCancelchildorder(this.extend(s,i));return this.safeOrder({info:r})}parseOrderStatus(e){return this.safeString({ACTIVE:"open",COMPLETED:"closed",CANCELED:"canceled",EXPIRED:"canceled",REJECTED:"canceled"},e,e)}parseOrder(e,t){let i;let s=this.parse8601(this.safeString(e,"child_order_date")),r=this.safeString(e,"price"),a=this.safeString(e,"size"),n=this.safeString(e,"executed_size"),o=this.safeString(e,"outstanding_size"),h=this.parseOrderStatus(this.safeString(e,"child_order_state")),d=this.safeStringLower(e,"child_order_type"),l=this.safeStringLower(e,"side"),c=this.safeString(e,"product_code"),u=this.safeSymbol(c,t),f=this.safeNumber(e,"total_commission");void 0!==f&&(i={cost:f,currency:void 0,rate:void 0});let p=this.safeString(e,"child_order_acceptance_id");return this.safeOrder({id:p,clientOrderId:void 0,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:h,symbol:u,type:d,timeInForce:void 0,postOnly:void 0,side:l,price:r,triggerPrice:void 0,cost:void 0,amount:a,filled:n,remaining:o,fee:i,average:void 0,trades:void 0},t)}async fetchOrders(e,t,i=100,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={product_code:r.id,count:i},o=await this.privateGetGetchildorders(this.extend(a,s)),h=this.parseOrders(o,r,t,i);return void 0!==e&&(h=this.filterBy(h,"symbol",e)),h}async fetchOpenOrders(e,t,i=100,s={}){return await this.fetchOrders(e,t,i,this.extend({child_order_state:"ACTIVE"},s))}async fetchClosedOrders(e,t,i=100,s={}){return await this.fetchOrders(e,t,i,this.extend({child_order_state:"COMPLETED"},s))}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");let s=await this.fetchOrders(t),r=this.indexBy(s,"id");if(e in r)return r[e];throw new n.OrderNotFound(this.id+" No order found with id "+e)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={product_code:r.id};void 0!==i&&(a.count=i);let o=await this.privateGetGetexecutions(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchPositions(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchPositions() requires a `symbols` argument, exactly one symbol in an array");await this.loadMarkets();let i={product_code:this.marketIds(e)};return await this.privateGetGetpositions(this.extend(i,t))}async withdraw(e,t,i,s,r={}){if(this.checkAddress(i),await this.loadMarkets(),"JPY"!==e&&"USD"!==e&&"EUR"!==e)throw new n.ExchangeError(this.id+" allows withdrawing JPY, USD, EUR only, "+e+" is not supported");let a=this.currency(e),o={currency_code:a.id,amount:t},h=await this.privatePostWithdraw(this.extend(o,r));return this.parseTransaction(h,a)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e)),void 0!==i&&(a.count=i);let n=await this.privateGetGetcoinins(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e)),void 0!==i&&(a.count=i);let n=await this.privateGetGetcoinouts(this.extend(a,s));return this.parseTransactions(n,r,t,i)}parseDepositStatus(e){return this.safeString({PENDING:"pending",COMPLETED:"ok"},e,e)}parseWithdrawalStatus(e){return this.safeString({PENDING:"pending",COMPLETED:"ok"},e,e)}parseTransaction(e,t){let i,s,a;let n=this.safeString2(e,"id","message_id"),o=this.safeString(e,"address"),h=this.safeString(e,"currency_code"),d=this.safeCurrencyCode(h,t),l=this.parse8601(this.safeString(e,"event_date")),c=this.safeNumber(e,"amount"),u=this.safeString(e,"tx_hash"),f=this.safeString(e,"status");if("fee"in e){i="withdrawal",s=this.parseWithdrawalStatus(f);let t=this.safeString(e,"fee"),n=this.safeString(e,"additional_fee");a={currency:d,cost:this.parseNumber(r.Y.stringAdd(t,n))}}else i="deposit",s=this.parseDepositStatus(f);return{info:e,id:n,txid:u,timestamp:l,datetime:this.iso8601(l),network:void 0,address:o,addressTo:o,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:i,amount:c,currency:d,status:s,updated:void 0,comment:void 0,internal:void 0,fee:a}}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s={product_code:i.id},r=await this.publicGetGetfundingrate(this.extend(s,t));return this.parseFundingRate(r,i)}parseFundingRate(e,t){let i=this.safeString(e,"next_funding_rate_settledate"),s=this.parse8601(i);return{info:e,symbol:this.safeString(t,"symbol"),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:void 0,fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:this.safeNumber(e,"current_funding_rate"),nextFundingTimestamp:s,nextFundingDatetime:this.iso8601(s),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.version+"/";"private"===t&&(n+="me/"),n+=e,"GET"===i&&Object.keys(s).length&&(n+="?"+this.urlencode(s));let o=this.implodeHostname(this.urls.api.rest)+n;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=[e,i,n].join("");Object.keys(s).length&&"GET"!==i&&(t+=a=this.json(s)),r={"ACCESS-KEY":this.apiKey,"ACCESS-TIMESTAMP":e,"ACCESS-SIGN":this.hmac(this.encode(t),this.encode(this.secret),l.s),"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.id+" "+a,c=this.safeString(o,"error_message"),u=this.safeInteger(o,"status");if(void 0!==c)throw this.throwExactlyMatchedException(this.exceptions.exact,u,l),new n.ExchangeError(l)}}var K=i(6299);class z extends s.k{}let Y=z;class X extends Y{describe(){return this.deepExtend(super.describe(),{id:"bithumb",name:"Bithumb",countries:["KR"],rateLimit:500,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},hostname:"bithumb.com",urls:{logo:"https://github.com/user-attachments/assets/c9e0eefb-4777-46b9-8f09-9d7f7c4af82d",api:{public:"https://api.{hostname}/public",private:"https://api.{hostname}"},www:"https://www.bithumb.com",doc:"https://apidocs.bithumb.com",fees:"https://en.bithumb.com/customer_support/info_fee"},api:{public:{get:["ticker/ALL_{quoteId}","ticker/{baseId}_{quoteId}","orderbook/ALL_{quoteId}","orderbook/{baseId}_{quoteId}","transaction_history/{baseId}_{quoteId}","network-info","assetsstatus/multichain/ALL","assetsstatus/multichain/{currency}","withdraw/minimum/ALL","withdraw/minimum/{currency}","assetsstatus/ALL","assetsstatus/{baseId}","candlestick/{baseId}_{quoteId}/{interval}"]},private:{post:["info/account","info/balance","info/wallet_address","info/ticker","info/orders","info/user_transactions","info/order_detail","trade/place","trade/cancel","trade/btc_withdrawal","trade/krw_deposit","trade/krw_withdrawal","trade/market_buy","trade/market_sell","trade/stop_limit"]}},fees:{trading:{maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.0025")}},precisionMode:d.v,features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:void 0,fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:1e3,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{"Bad Request(SSL)":n.BadRequest,"Bad Request(Bad Method)":n.BadRequest,"Bad Request.(Auth Data)":n.AuthenticationError,"Not Member":n.AuthenticationError,"Invalid Apikey":n.AuthenticationError,"Method Not Allowed.(Access IP)":n.PermissionDenied,"Method Not Allowed.(BTC Adress)":n.InvalidAddress,"Method Not Allowed.(Access)":n.PermissionDenied,"Database Fail":n.ExchangeNotAvailable,"Invalid Parameter":n.BadRequest,5600:n.ExchangeError,"Unknown Error":n.ExchangeError,"After May 23th, recent_transactions is no longer, hence users will not be able to connect to recent_transactions":n.ExchangeError},timeframes:{"1m":"1m","3m":"3m","5m":"5m","10m":"10m","30m":"30m","1h":"1h","6h":"6h","12h":"12h","1d":"24h"},options:{quoteCurrencies:{BTC:{limits:{cost:{min:2e-4,max:100}}},KRW:{limits:{cost:{min:500,max:5e9}}}}},commonCurrencies:{ALT:"ArchLoot",FTC:"FTC2",SOC:"Soda Coin"}})}safeMarket(e,t,i,s){return super.safeMarket(e,t,i,"spot")}amountToPrecision(e,t){return this.decimalToPrecision(t,d.R3,this.markets[e].precision.amount,d.fv)}async fetchMarkets(e={}){let t=[],i=this.safeDict(this.options,"quoteCurrencies",{}),s=Object.keys(i),r=[];for(let t=0;t<s.length;t++){let i={quoteId:s[t]};r.push(this.publicGetTickerALLQuoteId(this.extend(i,e)))}let a=await Promise.all(r);for(let e=0;e<s.length;e++){let r=s[e],n=a[e],o=this.safeDict(n,"data"),h=this.safeDict(i,r,{}),d=Object.keys(o);for(let e=0;e<d.length;e++){let i=d[e];if("date"===i)continue;let s=o[i],a=this.safeCurrencyCode(i),n=!0;Array.isArray(s)&&0===s.length&&(n=!1);let l=this.deepExtend({id:i,symbol:a+"/"+r,base:a,quote:r,settle:void 0,baseId:i,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:n,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDateTime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("4"),price:parseInt("4")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{}},created:void 0,info:s},h);t.push(l)}}return t}parseBalance(e){let t={info:e},i=this.safeDict(e,"data"),s=Object.keys(this.currencies);for(let e=0;e<s.length;e++){let r=s[e],a=this.account(),n=this.currency(r),o=this.safeStringLower(n,"id");a.total=this.safeString(i,"total_"+o),a.used=this.safeString(i,"in_use_"+o),a.free=this.safeString(i,"available_"+o),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostInfoBalance(this.extend({currency:"ALL"},e));return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={baseId:s.baseId,quoteId:s.quoteId};void 0!==t&&(r.count=t);let a=await this.publicGetOrderbookBaseIdQuoteId(this.extend(r,i)),n=this.safeDict(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,e,o,"bids","asks","price","quantity")}parseTicker(e,t){let i=this.safeInteger(e,"date"),s=this.safeSymbol(void 0,t),r=this.safeString(e,"opening_price"),a=this.safeString(e,"closing_price"),n=this.safeString(e,"units_traded_24H"),o=this.safeString(e,"acc_trade_value_24H");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"max_price"),low:this.safeString(e,"min_price"),bid:this.safeString(e,"buy_price"),bidVolume:void 0,ask:this.safeString(e,"sell_price"),askVolume:void 0,vwap:void 0,open:r,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let i={},s=Object.keys(this.safeDict(this.options,"quoteCurrencies",{})),r=[];for(let e=0;e<s.length;e++){let i={quoteId:s[e]};r.push(this.publicGetTickerALLQuoteId(this.extend(i,t)))}let a=await Promise.all(r);for(let e=0;e<s.length;e++){let t=s[e],r=a[e],n=this.safeDict(r,"data",{}),o=this.safeInteger(n,"date"),h=Object.keys(this.omit(n,"date"));for(let e=0;e<h.length;e++){let s=h[e],r=n[s],a=this.safeCurrencyCode(s)+"/"+t,d=this.safeMarket(a);r.date=o,i[a]=this.parseTicker(r,d)}}return this.filterByArrayTickers(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={baseId:i.baseId,quoteId:i.quoteId},r=await this.publicGetTickerBaseIdQuoteId(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseTicker(a,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={baseId:a.baseId,quoteId:a.quoteId,interval:this.safeString(this.timeframes,t,t)},o=await this.publicGetCandlestickBaseIdQuoteIdInterval(this.extend(n,r)),h=this.safeList(o,"data",[]);return this.parseOHLCVs(h,a,t,i,s)}parseTrade(e,t){let i,s;let r=this.safeString(e,"transaction_date");if(void 0!==r){let t=r.split(" ");if(t.length>1){let e=t[0],s=t[1];s.length<8&&(s="0"+s),i=this.parse8601(e+" "+s)}else i=this.safeIntegerProduct(e,"transaction_date",.001)}void 0!==i&&(i-=324e5);let a=this.safeString(e,"type");a="ask"===a?"sell":"buy";let n=this.safeString(e,"cont_no");t=this.safeMarket(void 0,t);let o=this.safeString(e,"price"),h=this.fixCommaNumber(this.safeString2(e,"units_traded","units")),d=this.safeString(e,"total"),l=this.safeString(e,"fee");if(void 0!==l){let t=this.safeString(e,"fee_currency");s={cost:l,currency:this.commonCurrencyCode(t)}}return this.safeTrade({id:n,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:void 0,side:a,takerOrMaker:void 0,price:o,amount:h,cost:d,fee:s},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={baseId:r.baseId,quoteId:r.quoteId};void 0!==i&&(a.count=i);let n=await this.publicGetTransactionHistoryBaseIdQuoteId(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h={order_currency:o.id,payment_currency:o.quote,units:s},d="privatePostTradePlace";"limit"===t?(h.price=r,h.type="buy"===i?"bid":"ask"):d="privatePostTradeMarket"+this.capitalize(i);let l=await this[d](this.extend(h,a)),c=this.safeString(l,"order_id");if(void 0===c)throw new n.InvalidOrder(this.id+" createOrder() did not return an order id");return this.safeOrder({info:l,symbol:e,type:t,side:i,id:c},o)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={order_id:e,count:1,order_currency:s.base,payment_currency:s.quote},a=await this.privatePostInfoOrderDetail(this.extend(r,i)),o=this.safeDict(a,"data");return this.parseOrder(this.extend(o,{order_id:e}),s)}parseOrderStatus(e){return this.safeString({Pending:"open",Completed:"closed",Cancel:"canceled"},e,e)}parseOrder(e,t){let i;let s=this.safeIntegerProduct(e,"order_date",.001),a=this.safeString2(e,"type","side"),n=this.parseOrderStatus(this.safeString(e,"order_status")),o=this.safeString2(e,"order_price","price"),h="limit";r.Y.stringEquals(o,"0")&&(h="market");let d=this.fixCommaNumber(this.safeString2(e,"order_qty","units")),l=this.fixCommaNumber(this.safeString(e,"units_remaining"));void 0===l&&("closed"===n?l="0":"canceled"!==n&&(l=d));let c=this.safeString(e,"order_currency"),u=this.safeString(e,"payment_currency"),f=this.safeCurrencyCode(c),p=this.safeCurrencyCode(u);void 0!==f&&void 0!==p&&(i=f+"/"+p),void 0===i&&(i=(t=this.safeMarket(void 0,t)).symbol);let m=this.safeString(e,"order_id"),g=this.safeList(e,"contract",[]);return this.safeOrder({info:e,id:m,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:i,type:h,timeInForce:void 0,postOnly:void 0,side:"bid"===a?"buy":"sell",price:o,triggerPrice:void 0,amount:d,cost:void 0,average:void 0,filled:void 0,remaining:l,status:n,fee:void 0,trades:g},t)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e);void 0===i&&(i=100);let a={count:i,order_currency:r.base,payment_currency:r.quote};void 0!==t&&(a.after=t);let o=await this.privatePostInfoOrders(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseOrders(h,r,t,i)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");if(!("side"in i))throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a `side` parameter (sell or buy)");let s=this.market(t),r="buy"===i.side?"bid":"ask";i=this.omit(i,["side","currency"]);let a={order_id:e,type:r,order_currency:s.base,payment_currency:s.quote},o=await this.privatePostTradeCancel(this.extend(a,i));return this.safeOrder({info:o})}async cancelUnifiedOrder(e,t={}){let i={side:e.side};return await this.cancelOrder(e.id,e.symbol,this.extend(i,t))}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o={units:t,address:i,currency:a.id};if("XRP"===e||"XMR"===e||"EOS"===e||"STEEM"===e||"TON"===e){let t=this.safeString(r,"destination");if(void 0===s&&void 0===t)throw new n.ArgumentsRequired(this.id+" "+e+" withdraw() requires a tag argument or an extra destination param");void 0!==s&&(o.destination=s)}let h=await this.privatePostTradeBtcWithdrawal(this.extend(o,r));return this.parseTransaction(h,a)}parseTransaction(e,t){return{id:void 0,txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,internal:void 0,fee:void 0,info:e}}fixCommaNumber(e){if(void 0===e)return;let t=e;for(;t.indexOf(",")>-1;)t=t.replace(",","");return t}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.implodeParams(e,s),o=this.implodeHostname(this.urls.api[t])+n,h=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(h).length&&(o+="?"+this.urlencode(h));else{this.checkRequiredCredentials(),a=this.urlencode(this.extend({endpoint:n},h));let e=this.nonce().toString(),t=n+"\0"+a+"\0"+e,i=this.hmac(this.encode(t),this.encode(this.secret),A.Zf),s=this.stringToBase64(i);r={Accept:"application/json","Content-Type":"application/x-www-form-urlencoded","Api-Key":this.apiKey,"Api-Sign":s,"Api-Nonce":e}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&"status"in o){let e=this.safeString(o,"status"),t=this.safeString(o,"message");if(void 0!==e){if("0000"===e||"거래 진행중인 내역이 존재하지 않습니다."===t)return;let i=this.id+" "+t;throw this.throwExactlyMatchedException(this.exceptions,e,i),this.throwExactlyMatchedException(this.exceptions,t,i),new n.ExchangeError(i)}}}}var $=i(5985);class Q extends s.k{}let Z=Q;var J=i(9378);class ee extends Z{describe(){return this.deepExtend(super.describe(),{id:"bitmex",name:"BitMEX",countries:["SC"],version:"v1",userAgent:void 0,rateLimit:100,certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!0,option:!1,addMargin:void 0,cancelAllOrders:!0,cancelAllOrdersAfter:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!0,createOrder:!0,createReduceOnlyOrder:!0,createStopOrder:!0,createTrailingAmountOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDepositsWithdrawals:"emulated",fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:"emulated",fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:"emulated",fetchLeverages:!0,fetchLeverageTiers:!1,fetchLiquidations:!0,fetchMarginAdjustmentHistory:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyLiquidations:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositions:!0,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,reduceMargin:void 0,sandbox:!0,setLeverage:!0,setMargin:void 0,setMarginMode:!0,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","1h":"1h","1d":"1d"},urls:{test:{public:"https://testnet.bitmex.com",private:"https://testnet.bitmex.com"},logo:"https://github.com/user-attachments/assets/c78425ab-78d5-49d6-bd14-db7734798f04",api:{public:"https://www.bitmex.com",private:"https://www.bitmex.com"},www:"https://www.bitmex.com",doc:["https://www.bitmex.com/app/apiOverview","https://github.com/BitMEX/api-connectors/tree/master/official-http"],fees:"https://www.bitmex.com/app/fees",referral:{url:"https://www.bitmex.com/app/register/NZTR1q",discount:.1}},api:{public:{get:{announcement:5,"announcement/urgent":5,chat:5,"chat/channels":5,"chat/connected":5,"chat/pinned":5,funding:5,guild:5,instrument:5,"instrument/active":5,"instrument/activeAndIndices":5,"instrument/activeIntervals":5,"instrument/compositeIndex":5,"instrument/indices":5,"instrument/usdVolume":5,insurance:5,leaderboard:5,liquidation:5,"orderBook/L2":5,"porl/nonce":5,quote:5,"quote/bucketed":5,schema:5,"schema/websocketHelp":5,settlement:5,stats:5,"stats/history":5,"stats/historyUSD":5,trade:5,"trade/bucketed":5,"wallet/assets":5,"wallet/networks":5}},private:{get:{address:5,apiKey:5,execution:5,"execution/tradeHistory":5,globalNotification:5,"leaderboard/name":5,order:5,"porl/snapshots":5,position:5,user:5,"user/affiliateStatus":5,"user/checkReferralCode":5,"user/commission":5,"user/csa":5,"user/depositAddress":5,"user/executionHistory":5,"user/getWalletTransferAccounts":5,"user/margin":5,"user/quoteFillRatio":5,"user/quoteValueRatio":5,"user/staking":5,"user/staking/instruments":5,"user/staking/tiers":5,"user/tradingVolume":5,"user/unstakingRequests":5,"user/wallet":5,"user/walletHistory":5,"user/walletSummary":5,userAffiliates:5,userEvent:5},post:{address:5,chat:5,guild:5,"guild/archive":5,"guild/join":5,"guild/kick":5,"guild/leave":5,"guild/sharesTrades":5,order:1,"order/cancelAllAfter":5,"order/closePosition":5,"position/isolate":1,"position/leverage":1,"position/riskLimit":5,"position/transferMargin":1,"user/addSubaccount":5,"user/cancelWithdrawal":5,"user/communicationToken":5,"user/confirmEmail":5,"user/confirmWithdrawal":5,"user/logout":5,"user/preferences":5,"user/requestWithdrawal":5,"user/unstakingRequests":5,"user/updateSubaccount":5,"user/walletTransfer":5},put:{guild:5,order:1},delete:{order:1,"order/all":1,"user/unstakingRequests":5}}},exceptions:{exact:{"Invalid API Key.":n.AuthenticationError,"This key is disabled.":n.PermissionDenied,"Access Denied":n.PermissionDenied,"Duplicate clOrdID":n.InvalidOrder,"orderQty is invalid":n.InvalidOrder,"Invalid price":n.InvalidOrder,"Invalid stopPx for ordType":n.InvalidOrder,"Account is restricted":n.PermissionDenied},broad:{"Signature not valid":n.AuthenticationError,overloaded:n.ExchangeNotAvailable,"Account has insufficient Available Balance":n.InsufficientFunds,"Service unavailable":n.ExchangeNotAvailable,"Server Error":n.ExchangeError,"Unable to cancel order due to existing state":n.InvalidOrder,"We require all new traders to verify":n.PermissionDenied}},precisionMode:d.kb,options:{"api-expires":5,fetchOHLCVOpenTimestamp:!0,oldPrecision:!1,networks:{BTC:"btc",ERC20:"eth",BEP20:"bsc",TRC20:"tron",AVAXC:"avax",NEAR:"near",XTZ:"xtz",DOT:"dot",SOL:"sol",ADA:"ada"},features:{default:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0},triggerDirection:!0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!0,marketBuyRequiresPrice:!1,marketBuyByCost:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:500,daysBack:void 0,untilDays:1e6},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:500,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:500,daysBack:void 0,untilDays:1e6,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:500,daysBackClosed:void 0,daysBackCanceled:void 0,untilDays:1e6,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e4}},spot:{extends:"default",createOrder:{triggerPriceType:{index:!1}}},forDeriv:{extends:"default",createOrder:{triggerPriceType:{index:!0}}},swap:{linear:{extends:"forDeriv"},inverse:{extends:"forDeriv"}},future:{linear:{extends:"forDeriv"},inverse:{extends:"forDeriv"}}}},commonCurrencies:{USDt:"USDT",XBt:"BTC",XBT:"BTC",Gwei:"ETH",GWEI:"ETH",LAMP:"SOL",LAMp:"SOL"}})}async fetchCurrencies(e={}){let t=await this.publicGetWalletAssets(e),i={};for(let e=0;e<t.length;e++){let s=t[e],a=this.safeString(s,"asset"),n=this.safeCurrencyCode(a),o=this.safeString(s,"currency"),h=this.safeString(s,"name"),d=this.safeValue(s,"networks",[]),l=!1,c=!1,u={},f=this.safeString(s,"scale"),p=this.parsePrecision(f),m=this.parseNumber(p);for(let e=0;e<d.length;e++){let t=d[e],i=this.safeString(t,"asset"),s=this.networkIdToCode(i),a=this.safeString(t,"withdrawalFee"),n=this.parseNumber(r.Y.stringMul(a,p)),o=this.safeBool(t,"depositEnabled",!1),h=this.safeBool(t,"withdrawalEnabled",!1),f=o&&h;o&&(l=!0),h&&(c=!0),u[s]={info:t,id:i,network:s,active:f,deposit:o,withdraw:h,fee:n,precision:void 0,limits:{withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}}}}let g=this.safeValue(s,"enabled")||l||c,y=this.safeString(s,"minWithdrawalAmount"),v=this.parseNumber(r.Y.stringMul(y,p)),b=this.safeString(s,"maxWithdrawalAmount"),w=this.parseNumber(r.Y.stringMul(b,p)),k=this.safeString(s,"minDepositAmount"),S=this.parseNumber(r.Y.stringMul(k,p));i[n]={id:o,code:n,info:s,name:h,active:g,deposit:l,withdraw:c,fee:void 0,precision:m,limits:{amount:{min:void 0,max:void 0},withdraw:{min:v,max:w},deposit:{min:S,max:void 0}},networks:u}}return i}convertFromRealAmount(e,t){let i=this.currency(e),s=this.safeString(i,"precision"),a=this.numberToString(t),n=r.Y.stringDiv(a,s);return this.parseNumber(n)}convertToRealAmount(e,t){if(void 0===e)return t;if(void 0===t)return;let i=this.currency(e),s=this.safeString(i,"precision");return r.Y.stringMul(t,s)}amountToPrecision(e,t){e=this.safeSymbol(e);let i=this.market(e),s=this.safeValue(this.options,"oldPrecision");return i.spot&&!s&&(t=this.convertFromRealAmount(i.base,t)),super.amountToPrecision(e,t)}convertFromRawQuantity(e,t,i="base"){if(this.safeValue(this.options,"oldPrecision")||(e=this.safeSymbol(e),!this.inArray(e,this.symbols)))return this.parseNumber(t);let s=this.market(e);return s.spot?this.parseNumber(this.convertToRealAmount(s[i],t)):this.parseNumber(t)}convertFromRawCost(e,t){return this.convertFromRawQuantity(e,t,"quote")}async fetchMarkets(e={}){let t=await this.publicGetInstrumentActive(e);return this.parseMarkets(t)}parseMarket(e){let t,i,s,a,n;let o=this.safeString(e,"symbol"),h=this.safeString(e,"underlying"),d=this.safeString(e,"quoteCurrency"),l=this.safeString(e,"settlCurrency"),c=this.safeCurrencyCode(l),u=this.safeString(e,"typ"),f=!1,p=!1,m=!1;"FFWCSX"===u?(t="swap",f=!0):"IFXXXP"===u?(t="spot",p=!0):"FFCCSX"===u?(t="future",m=!0):"FFICSX"===u&&(d=h,h=this.safeString(e,"rootSymbol"),t="future",m=!0);let g=this.safeCurrencyCode(h),y=this.safeCurrencyCode(d),v=f||m,b=this.safeValue(e,"isInverse"),w=this.safeValue(e,"isQuanto"),k=v?!b&&!w:void 0,S=this.safeString(e,"state");if(p)n=g+"/"+y;else if(v){if(n=g+"/"+y+":"+c,k){let t=this.safeString2(e,"underlyingToPositionMultiplier","underlyingToSettleMultiplier");i=this.parseNumber(r.Y.stringDiv("1",t))}else{let t=r.Y.stringAbs(this.safeString(e,"multiplier"));i=this.parseNumber(t)}m&&(a=this.safeString(e,"expiry"),s=this.parse8601(a),n=n+"-"+this.yymmdd(s))}else n=o;let O=this.safeString2(e,"positionCurrency","underlying"),T=this.safeCurrencyCode(O)===y,I=this.safeNumber(e,"maxOrderQty"),x=this.safeString(e,"initMargin","1"),P=this.parseNumber(r.Y.stringDiv("1",x));return{id:o,symbol:n,base:g,quote:y,settle:c,baseId:h,quoteId:d,settleId:l,type:t,spot:p,margin:!1,swap:f,future:m,option:!1,active:"Unlisted"!==S,contract:v,linear:k,inverse:b,quanto:w,taker:this.safeNumber(e,"takerFee"),maker:this.safeNumber(e,"makerFee"),contractSize:i,expiry:s,expiryDatetime:a,strike:this.safeNumber(e,"optionStrikePrice"),optionType:void 0,precision:{amount:this.safeNumber(e,"lotSize"),price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:v?this.parseNumber("1"):void 0,max:v?P:void 0},amount:{min:void 0,max:T?void 0:I},price:{min:void 0,max:this.safeNumber(e,"maxPrice")},cost:{min:void 0,max:T?I:void 0}},created:this.parse8601(this.safeString(e,"listing")),info:e}}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account(),o=this.safeString(s,"availableMargin"),h=this.safeString(s,"marginBalance");n.free=this.convertToRealAmount(a,o),n.total=this.convertToRealAmount(a,h),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserMargin(this.extend({currency:"all"},e));return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(s.depth=t);let r=await this.publicGetOrderBookL2(this.extend(s,i)),a={symbol:e,bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0};for(let t=0;t<r.length;t++){let i=r[t],s="Sell"===i.side?"asks":"bids",n=this.convertFromRawQuantity(e,this.safeString(i,"size")),o=this.safeNumber(i,"price");void 0!==o&&a[s].push([o,n])}return a.bids=this.sortBy(a.bids,0,!0),a.asks=this.sortBy(a.asks,0),a}async fetchOrder(e,t,i={}){let s=await this.fetchOrders(t,void 0,void 0,this.deepExtend({filter:{orderID:e}},i));if(1===s.length)return s[0];throw new n.OrderNotFound(this.id+": The order "+e+" not found.")}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchOrders","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchOrders",e,t,i,s,100);let n={};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==t&&(n.startTime=this.iso8601(t)),void 0!==i&&(n.count=i);let o=this.safeInteger2(s,"until","endTime");void 0!==o&&(s=this.omit(s,["until"]),n.endTime=this.iso8601(o)),"filter"in(n=this.deepExtend(n,s))&&(n.filter=this.json(n.filter));let h=await this.privateGetOrder(n);return this.parseOrders(h,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.deepExtend({filter:{open:!0}},s))}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterByArray(r,"status",["closed","canceled"],!1)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s,100);let n={};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==t&&(n.startTime=this.iso8601(t)),void 0!==i&&(n.count=Math.min(500,i));let o=this.safeInteger2(s,"until","endTime");void 0!==o&&(s=this.omit(s,["until"]),n.endTime=this.iso8601(o)),"filter"in(n=this.deepExtend(n,s))&&(n.filter=this.json(n.filter));let h=await this.privateGetExecutionTradeHistory(n);return this.parseTrades(h,r,t,i)}parseLedgerEntryType(e){return this.safeString({Withdrawal:"transaction",RealisedPNL:"margin",UnrealisedPNL:"margin",Deposit:"transaction",Transfer:"transfer",AffiliatePayout:"referral",SpotTrade:"trade"},e,e)}parseLedgerEntry(e,t){let i,s;let a=this.safeString(e,"transactID"),n=this.safeString(e,"account"),o=this.safeString(e,"tx"),h=this.parseLedgerEntryType(this.safeString(e,"transactType")),d=this.safeString(e,"currency"),l=this.safeCurrencyCode(d,t);t=this.safeCurrency(d,t);let c=this.safeString(e,"amount"),u=this.convertToRealAmount(l,c),f=this.parse8601(this.safeString(e,"transactTime"));void 0===f&&(f=0);let p=this.safeString(e,"fee");void 0!==p&&(p=this.convertToRealAmount(l,p),i={cost:this.parseNumber(p),currency:l});let m=this.safeString(e,"walletBalance");void 0!==m&&(m=this.convertToRealAmount(l,m));let g=this.parseNumber(r.Y.stringSub(this.numberToString(m),this.numberToString(u)));r.Y.stringLt(c,"0")?(s="out",u=this.convertToRealAmount(l,r.Y.stringAbs(c))):s="in";let y=this.parseTransactionStatus(this.safeString(e,"transactStatus"));return this.safeLedgerEntry({info:e,id:a,timestamp:f,datetime:this.iso8601(f),direction:s,account:n,referenceId:o,referenceAccount:void 0,type:h,currency:l,amount:this.parseNumber(u),before:g,after:this.parseNumber(m),status:y,fee:i},t)}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==i&&(a.count=i),void 0!==e&&(r=this.currency(e),a.currency=r.id);let n=await this.privateGetUserWalletHistory(this.extend(a,s));return this.parseLedger(n,r,t,i)}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={currency:"all"};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.count=i);let n=await this.privateGetUserWalletHistory(this.extend(a,s)),o=this.filterByArray(n,"transactType",["Withdrawal","Deposit"],!1);return this.parseTransactions(o,r,t,i)}parseTransactionStatus(e){return this.safeString({Confirmed:"pending",Canceled:"canceled",Completed:"ok",Pending:"pending"},e,e)}parseTransaction(e,t){let i,s,a;let n=this.safeString(e,"currency");t=this.safeCurrency(n,t);let o=this.parse8601(this.safeString(e,"transactTime")),h=this.parse8601(this.safeString(e,"timestamp")),d=this.safeStringLower(e,"transactType");"withdrawal"===d?(i=this.safeString(e,"address"),s=this.safeString(e,"tx"),a=i):"deposit"===d&&(a=this.safeString(e,"address"),s=this.safeString(e,"tx"));let l=this.safeString(e,"amount"),c=r.Y.stringAbs(l),u=this.convertToRealAmount(t.code,c),f=this.safeString(e,"fee"),p=this.convertToRealAmount(t.code,f),m=this.safeString(e,"transactStatus");return void 0!==m&&(m=this.parseTransactionStatus(m)),{info:e,id:this.safeString(e,"transactID"),txid:this.safeString(e,"tx"),type:d,currency:t.code,network:this.networkIdToCode(this.safeString(e,"network"),t.code),amount:this.parseNumber(u),status:m,timestamp:o,datetime:this.iso8601(o),address:i,addressFrom:s,addressTo:a,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:h,internal:void 0,comment:void 0,fee:{currency:t.code,cost:this.parseNumber(p),rate:void 0}}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetInstrument(this.extend(s,t)),a=this.safeValue(r,0);if(void 0===a)throw new n.BadSymbol(this.id+" fetchTicker() symbol "+e+" not found");return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetInstrumentActiveAndIndices(t),s={};for(let e=0;e<i.length;e++){let t=this.parseTicker(i[e]),r=this.safeString(t,"symbol");void 0!==r&&(s[r]=t)}return this.filterByArrayTickers(s,"symbol",e)}parseTicker(e,t){let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"prevPrice24h"),n=this.safeString(e,"lastPrice");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bidPrice"),bidVolume:void 0,ask:this.safeString(e,"askPrice"),askVolume:void 0,vwap:this.safeString(e,"vwap"),open:a,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"homeNotional24h"),quoteVolume:this.safeString(e,"foreignNotional24h"),markPrice:this.safeString(e,"markPrice"),info:e},t)}parseOHLCV(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.convertFromRawQuantity(t.symbol,this.safeString(e,"volume"));return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),s]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r);let n=this.market(e),o={symbol:n.id,binSize:this.safeString(this.timeframes,t,t),partial:!0};void 0!==s&&(o.count=s);let h=this.safeInteger(r,"until");void 0!==h&&(r=this.omit(r,["until"]),o.endTime=this.iso8601(h));let d=1e3*this.parseTimeframe(t),l=this.safeBool(this.options,"fetchOHLCVOpenTimestamp",!0);if(void 0!==i){let e=i;l&&(e=this.sum(e,d));let t=this.iso8601(e);o.startTime=t}else o.reverse=!0;let c=await this.publicGetTradeBucketed(this.extend(o,r)),u=this.parseOHLCVs(c,n,t,i,s);if(l)for(let e=0;e<u.length;e++)u[e][0]=u[e][0]-d;return u}parseTrade(e,t){let i,s;let a=this.safeString(e,"symbol"),n=this.safeSymbol(a,t),o=this.parse8601(this.safeString(e,"timestamp")),h=this.safeString2(e,"avgPx","price"),d=this.convertFromRawQuantity(n,this.safeString2(e,"size","lastQty")),l=this.numberToString(this.convertFromRawCost(n,this.safeString(e,"execCost"))),c=this.safeString(e,"trdMatchID"),u=this.safeString(e,"orderID"),f=this.safeStringLower(e,"side"),p=this.numberToString(this.convertFromRawCost(n,this.safeString(e,"execComm")));if(void 0!==p){let t=this.safeString2(e,"settlCurrency","currency");i={cost:p,currency:this.safeCurrencyCode(t),rate:this.safeString(e,"commission")}}let m=this.safeString(e,"execType");void 0!==p&&"Trade"===m&&(s=r.Y.stringLt(p,"0")?"maker":"taker");let g=this.safeStringLower(e,"ordType");return this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:n,id:c,order:u,type:g,takerOrMaker:s,side:f,price:h,cost:r.Y.stringAbs(l),amount:d,fee:i},t)}parseOrderStatus(e){return this.safeString({New:"open",PartiallyFilled:"open",Filled:"closed",DoneForDay:"open",Canceled:"canceled",PendingCancel:"open",PendingNew:"open",Rejected:"rejected",Expired:"expired",Stopped:"open",Untriggered:"open",Triggered:"open"},e,e)}parseTimeInForce(e){return this.safeString({Day:"Day",GoodTillCancel:"GTC",ImmediateOrCancel:"IOC",FillOrKill:"FOK"},e,e)}parseOrder(e,t){let i,s,a,n;let o=this.safeString(e,"symbol"),h=(t=this.safeMarket(o,t)).symbol,d=this.safeString(e,"orderQty"),l=!1;(l=void 0===o?"inverse"===this.safeString(this.options,"defaultSubType","linear"):this.safeBool(t,"inverse",!1))?i=this.convertFromRawQuantity(h,d):s=this.convertFromRawQuantity(h,d);let c=this.safeString(e,"avgPx"),u=this.numberToString(this.convertFromRawQuantity(h,this.safeString(e,"cumQty")));a=l?r.Y.stringDiv(u,c):u;let f=this.safeString(e,"execInst");void 0!==f&&(n="ParticipateDoNotInitiate"===f);let p=this.parse8601(this.safeString(e,"timestamp")),m=this.safeNumber(e,"stopPx"),g=this.safeString(e,"leavesQty");return this.safeOrder({info:e,id:this.safeString(e,"orderID"),clientOrderId:this.safeString(e,"clOrdID"),timestamp:p,datetime:this.iso8601(p),lastTradeTimestamp:this.parse8601(this.safeString(e,"transactTime")),symbol:h,type:this.safeStringLower(e,"ordType"),timeInForce:this.parseTimeInForce(this.safeString(e,"timeInForce")),postOnly:n,side:this.safeStringLower(e,"side"),price:this.safeString(e,"price"),triggerPrice:m,amount:s,cost:i,average:c,filled:a,remaining:this.convertFromRawQuantity(h,g),status:this.parseOrderStatus(this.safeString(e,"ordStatus")),fee:void 0,trades:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchTrades","paginate"),r)return await this.fetchPaginatedCallDynamic("fetchTrades",e,t,i,s);let a=this.market(e),n={symbol:a.id};void 0!==t?n.startTime=this.iso8601(t):n.reverse=!0,void 0!==i&&(n.count=Math.min(i,1e3));let o=this.safeInteger2(s,"until","endTime");void 0!==o&&(s=this.omit(s,["until"]),n.endTime=this.iso8601(o));let h=await this.publicGetTrade(this.extend(n,s));return this.parseTrades(h,a,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h=this.capitalize(t);if(void 0!==this.safeValue(a,"reduceOnly")&&!o.swap&&!o.future)throw new n.InvalidOrder(this.id+" createOrder() does not support reduceOnly for "+o.type+" orders, reduceOnly orders are supported for swap and future markets only");let d=this.safeString(this.options,"brokerId","CCXT"),l=this.parseToInt(this.amountToPrecision(e,s)),c={symbol:o.id,side:this.capitalize(i),orderQty:l,ordType:h,text:d},u=this.safeNumberN(a,["triggerPrice","stopPx","stopPrice"]),f=this.safeString2(a,"trailingAmount","pegOffsetValue"),p=void 0!==f;if(void 0!==u||p){let s=this.safeString(a,"triggerDirection"),r="above"===s;if(("limit"===t||"market"===t)&&this.checkRequiredArgument("createOrder",s,"triggerDirection",["above","below"]),"limit"===t?h="buy"===i?r?"StopLimit":"LimitIfTouched":r?"LimitIfTouched":"StopLimit":"market"===t&&(h="buy"===i?r?"Stop":"MarketIfTouched":r?"MarketIfTouched":"Stop"),p){let e="sell"===i&&("Stop"===h||"StopLimit"===h),t="buy"===i&&("MarketIfTouched"===h||"LimitIfTouched"===h);(e||t)&&(f="-"+f),c.pegOffsetValue=this.parseToNumeric(f),c.pegPriceType="TrailingStopPeg"}else{if(void 0===u)throw new n.ArgumentsRequired(this.id+" createOrder() requires a triggerPrice parameter for the "+h+" order type");c.stopPx=this.parseToNumeric(this.priceToPrecision(e,u))}c.ordType=h,a=this.omit(a,["triggerPrice","stopPrice","stopPx","triggerDirection","trailingAmount"])}("Limit"===h||"StopLimit"===h||"LimitIfTouched"===h)&&(c.price=this.parseToNumeric(this.priceToPrecision(e,r)));let m=this.safeString2(a,"clOrdID","clientOrderId");void 0!==m&&(c.clOrdID=m,a=this.omit(a,["clOrdID","clientOrderId"]));let g=await this.privatePostOrder(this.extend(c,a));return this.parseOrder(g,o)}async editOrder(e,t,i,s,r,a,n={}){await this.loadMarkets();let o={},h=this.safeString2(n,"trailingAmount","pegOffsetValue");if(void 0!==h){let e;let t=this.safeString(n,"triggerDirection"),r="above"===t;("limit"===i||"market"===i)&&this.checkRequiredArgument("createOrder",t,"triggerDirection",["above","below"]),"limit"===i?e="buy"===s?r?"StopLimit":"LimitIfTouched":r?"LimitIfTouched":"StopLimit":"market"===i&&(e="buy"===s?r?"Stop":"MarketIfTouched":r?"MarketIfTouched":"Stop");let a="sell"===s&&("Stop"===e||"StopLimit"===e),d="buy"===s&&("MarketIfTouched"===e||"LimitIfTouched"===e);(a||d)&&(h="-"+h),o.pegOffsetValue=this.parseToNumeric(h),n=this.omit(n,["triggerDirection","trailingAmount"])}let d=this.safeString2(n,"origClOrdID","clientOrderId");if(void 0!==d){o.origClOrdID=d;let e=this.safeString(n,"clOrdID","clientOrderId");void 0!==e&&(o.clOrdID=e),n=this.omit(n,["origClOrdID","clOrdID","clientOrderId"])}else o.orderID=e;if(void 0!==r){let e=this.parseToInt(this.amountToPrecision(t,r));o.orderQty=e}void 0!==a&&(o.price=a);let l=this.safeString(this.options,"brokerId","CCXT");o.text=l;let c=await this.privatePutOrder(this.extend(o,n));return this.parseOrder(c)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.safeValue2(i,"clOrdID","clientOrderId"),r={};void 0===s?r.orderID=e:(r.clOrdID=s,i=this.omit(i,["clOrdID","clientOrderId"]));let a=await this.privateDeleteOrder(this.extend(r,i)),o=this.safeValue(a,0,{}),h=this.safeString(o,"error");if(void 0!==h&&h.indexOf("Unable to cancel order due to existing state")>=0)throw new n.OrderNotFound(this.id+" cancelOrder() failed: "+h);return this.parseOrder(o)}async cancelOrders(e,t,i={}){await this.loadMarkets();let s=this.safeValue2(i,"clOrdID","clientOrderId"),r={};void 0===s?r.orderID=e:(r.clOrdID=s,i=this.omit(i,["clOrdID","clientOrderId"]));let a=await this.privateDeleteOrder(this.extend(r,i));return this.parseOrders(a)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e&&(i=this.market(e),s.symbol=i.id);let r=await this.privateDeleteOrderAll(this.extend(s,t));return this.parseOrders(r,i)}async cancelAllOrdersAfter(e,t={}){await this.loadMarkets();let i={timeout:e>0?this.parseToInt(e/1e3):0};return await this.privatePostOrderCancelAllAfter(this.extend(i,t))}async fetchLeverages(e,t={}){await this.loadMarkets();let i=await this.fetchPositions(e,t);return this.parseLeverages(i,e,"symbol")}parseLeverage(e,t){let i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i,t),marginMode:this.safeStringLower(e,"marginMode"),longLeverage:this.safeInteger(e,"leverage"),shortLeverage:this.safeInteger(e,"leverage")}}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.privateGetPosition(t),s=this.parsePositions(i,e);return this.filterByArrayPositions(s,"symbol",e,!1)}parsePosition(e,t){let i;let s=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,a=this.safeString(e,"timestamp"),n=this.safeValue(e,"crossMargin"),o=r.Y.stringAbs(this.safeString2(e,"foreignNotional","homeNotional")),h=this.safeString(t,"settle"),d=this.convertToRealAmount(h,this.safeString(e,"maintMargin")),l=this.convertToRealAmount(h,this.safeString(e,"unrealisedPnl")),c=this.parseNumber(r.Y.stringAbs(this.safeString(e,"currentQty"))),u=this.safeNumber(t,"contractSize"),f=this.safeString(e,"homeNotional");return void 0!==f&&(i="-"===f[0]?"short":"long"),this.safePosition({info:e,id:this.safeString(e,"account"),symbol:s,timestamp:this.parse8601(a),datetime:a,lastUpdateTimestamp:void 0,hedged:void 0,side:i,contracts:c,contractSize:u,entryPrice:this.safeNumber(e,"avgEntryPrice"),markPrice:this.safeNumber(e,"markPrice"),lastPrice:void 0,notional:this.parseNumber(o),leverage:this.safeNumber(e,"leverage"),collateral:void 0,initialMargin:this.safeNumber(e,"initMargin"),initialMarginPercentage:this.safeNumber(e,"initMarginReq"),maintenanceMargin:d,maintenanceMarginPercentage:this.safeNumber(e,"maintMarginReq"),unrealizedPnl:l,liquidationPrice:this.safeNumber(e,"liquidationPrice"),marginMode:!0===n?"cross":"isolated",marginRatio:void 0,percentage:this.safeNumber(e,"unrealisedPnlPcnt"),stopLossPrice:void 0,takeProfitPrice:void 0})}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let n=this.currency(e),o=this.convertFromRealAmount(e,t);[a,r]=this.handleNetworkCodeAndParams(r);let h={currency:n.id,amount:o,address:i,network:this.networkCodeToId(a,n.code)};void 0!==this.twofa&&(h.otpToken=(0,J.O)(this.twofa));let d=await this.privatePostUserRequestWithdrawal(this.extend(h,r));return this.parseTransaction(d,n)}async fetchFundingRates(e,t={}){await this.loadMarkets();let i=await this.publicGetInstrumentActiveAndIndices(t),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"symbol"),a=this.safeMarket(r);this.safeBool(a,"swap",!1)&&s.push(t)}e=this.marketSymbols(e);let r=this.parseFundingRates(s);return this.filterByArray(r,"symbol",e)}parseFundingRate(e,t){let i=this.safeString(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeString(e,"fundingTimestamp");return{info:e,symbol:this.safeSymbol(s,t),markPrice:this.safeNumber(e,"markPrice"),indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:this.safeNumber(e,"indicativeSettlePrice"),timestamp:this.parse8601(i),datetime:i,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:this.parse8601(r),fundingDatetime:r,nextFundingRate:this.safeNumber(e,"indicativeFundingRate"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async fetchFundingRateHistory(e,t,i,s={}){let r;await this.loadMarkets();let a={};if(e in this.currencies){let t=this.currency(e);a.symbol=t.id}else if(void 0!==e){let t=e.split(":");t.length>1&&this.inArray(t[1],["nearest","daily","weekly","monthly","quarterly","biquarterly","perpetual"])?(e=this.currency(t[0]).id+":"+t[1],a.symbol=e):(r=this.market(e),a.symbol=r.id)}void 0!==t&&(a.startTime=this.iso8601(t)),void 0!==i&&(a.count=i);let n=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==n&&(a.endTime=this.iso8601(n)),void 0===t&&void 0===n&&(a.reverse=!0);let o=await this.publicGetFunding(this.extend(a,s));return this.parseFundingRateHistories(o,r,t,i)}parseFundingRateHistory(e,t){let i=this.safeString(e,"symbol"),s=this.safeString(e,"timestamp");return{info:e,symbol:this.safeSymbol(i,t),fundingRate:this.safeNumber(e,"fundingRate"),timestamp:this.parse8601(s),datetime:s}}async setLeverage(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<.01||e>100)throw new n.BadRequest(this.id+" leverage should be between 0.01 and 100");await this.loadMarkets();let s=this.market(t);if("swap"!==s.type&&"future"!==s.type)throw new n.BadSymbol(this.id+" setLeverage() supports future and swap contracts only");let r={symbol:s.id,leverage:e};return await this.privatePostPositionLeverage(this.extend(r,i))}async setMarginMode(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new n.BadRequest(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets();let s=this.market(t);if("swap"!==s.type&&"future"!==s.type)throw new n.BadSymbol(this.id+" setMarginMode() supports swap and future contracts only");let r="cross"!==e,a={symbol:s.id,enabled:r};return await this.privatePostPositionIsolate(this.extend(a,i))}async fetchDepositAddress(e,t={}){let i;if(await this.loadMarkets(),[i,t]=this.handleNetworkCodeAndParams(t),void 0===i)throw new n.ArgumentsRequired(this.id+' fetchDepositAddress requires params["network"]');let s=this.currency(e);t=this.omit(t,"network");let r={currency:s.id,network:this.networkCodeToId(i,s.code)},a=await this.privateGetUserDepositAddress(this.extend(r,t));return{info:a,currency:e,network:i,address:a.replace('"',"").replace('"',""),tag:void 0}}parseDepositWithdrawFee(e,t){let i=this.safeValue(e,"networks",[]),s=i.length,a={info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}};if(0!==s){let n=this.safeString(e,"scale"),o=this.parsePrecision(n);for(let e=0;e<s;e++){let n=i[e],h=this.safeString(n,"asset"),d=this.safeString(t,"code"),l=this.networkIdToCode(h,d),c=this.safeString(n,"withdrawalFee"),u=this.parseNumber(r.Y.stringMul(c,o));a.networks[l]={deposit:{fee:void 0,percentage:void 0},withdraw:{fee:u,percentage:!1}},1===s&&(a.withdraw.fee=u,a.withdraw.percentage=!1)}}return a}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetWalletAssets(t);return this.parseDepositWithdrawFees(i,e,"asset")}calculateRateLimiterCost(e,t,i,s,r={}){let a=this.checkRequiredCredentials(!1),n=this.safeValue(r,"cost",1);return 1===n||a?n:20}async fetchLiquidations(e,t,i,s={}){await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchLiquidations","paginate"),r)return await this.fetchPaginatedCallDynamic("fetchLiquidations",e,t,i,s);let a=this.market(e),n={symbol:a.id};void 0!==t&&(n.startTime=t),void 0!==i&&(n.count=i),[n,s]=this.handleUntilOption("endTime",n,s);let o=await this.publicGetLiquidation(this.extend(n,s));return this.parseLiquidations(o,a,t,i)}parseLiquidation(e,t){let i=this.safeString(e,"symbol");return this.safeLiquidation({info:e,symbol:this.safeSymbol(i,t),contracts:void 0,contractSize:this.safeNumber(t,"contractSize"),price:this.safeNumber(e,"price"),baseValue:void 0,quoteValue:void 0,timestamp:void 0,datetime:void 0})}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o){if(429===e)throw new n.DDoSProtection(this.id+" "+a);if(e>=400){let t=this.safeValue(o,"error",{}),i=this.safeString(t,"message"),s=this.id+" "+a;if(this.throwExactlyMatchedException(this.exceptions.exact,i,s),this.throwBroadlyMatchedException(this.exceptions.broad,i,s),400===e)throw new n.BadRequest(s);throw new n.ExchangeError(s)}}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n="/api/"+this.version+"/"+e;if("GET"===i)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{let e=this.safeString(s,"_format");void 0!==e&&(n+="?"+this.urlencode({_format:e}),s=this.omit(s,"_format"))}let o=this.urls.api[t]+n,h=this.checkRequiredCredentials(!1);if("private"===t||"public"===t&&h){this.checkRequiredCredentials();let e=i+n,t=this.safeInteger(this.options,"api-expires");r={"Content-Type":"application/json","api-key":this.apiKey};let o=(t=this.sum(this.seconds(),t)).toString();e+=o,r["api-expires"]=o,("POST"===i||"PUT"===i||"DELETE"===i)&&Object.keys(s).length&&(e+=a=this.json(s)),r["api-signature"]=this.hmac(this.encode(e),this.encode(this.secret),l.s)}return{url:o,method:i,body:a,headers:r}}}class et extends s.k{}let ei=et;class es extends ei{describe(){return this.deepExtend(super.describe(),{id:"bitopro",name:"BitoPro",countries:["TW"],version:"v3",rateLimit:100,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!1,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://github.com/user-attachments/assets/affc6337-b95a-44bf-aacd-04f9722364f6",api:{rest:"https://api.bitopro.com/v3"},www:"https://www.bitopro.com",doc:["https://github.com/bitoex/bitopro-offical-api-docs/blob/master/v3-1/rest-1/rest.md"],fees:"https://www.bitopro.com/fees"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:{"order-book/{pair}":1,tickers:1,"tickers/{pair}":1,"trades/{pair}":1,"provisioning/currencies":1,"provisioning/trading-pairs":1,"provisioning/limitations-and-fees":1,"trading-history/{pair}":1,"price/otc/{currency}":1}},private:{get:{"accounts/balance":1,"orders/history":1,"orders/all/{pair}":1,"orders/trades/{pair}":1,"orders/{pair}/{orderId}":1,"wallet/withdraw/{currency}/{serial}":1,"wallet/withdraw/{currency}/id/{id}":1,"wallet/depositHistory/{currency}":1,"wallet/withdrawHistory/{currency}":1,"orders/open":1},post:{"orders/{pair}":.5,"orders/batch":20/3,"wallet/withdraw/{currency}":10},put:{orders:5},delete:{"orders/{pair}/{id}":2/3,"orders/all":5,"orders/{pair}":5}}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("3000000"),this.parseNumber("0.00194")],[this.parseNumber("5000000"),this.parseNumber("0.0015")],[this.parseNumber("30000000"),this.parseNumber("0.0014")],[this.parseNumber("300000000"),this.parseNumber("0.0013")],[this.parseNumber("550000000"),this.parseNumber("0.0012")],[this.parseNumber("1300000000"),this.parseNumber("0.0011")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("3000000"),this.parseNumber("0.00097")],[this.parseNumber("5000000"),this.parseNumber("0.0007")],[this.parseNumber("30000000"),this.parseNumber("0.0006")],[this.parseNumber("300000000"),this.parseNumber("0.0005")],[this.parseNumber("550000000"),this.parseNumber("0.0004")],[this.parseNumber("1300000000"),this.parseNumber("0.0003")]]}}},options:{networks:{ERC20:"ERC20",ETH:"ERC20",TRX:"TRX",TRC20:"TRX",BEP20:"BSC",BSC:"BSC"}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:1e5,daysBackCanceled:1,untilDays:1e4,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{"Unsupported currency.":n.BadRequest,"Unsupported order type":n.BadRequest,"Invalid body":n.BadRequest,"Invalid Signature":n.AuthenticationError,"Address not in whitelist.":n.BadRequest},broad:{"Invalid amount":n.InvalidOrder,"Balance for ":n.InsufficientFunds,"Invalid ":n.BadRequest,"Wrong parameter":n.BadRequest}},commonCurrencies:{}})}async fetchCurrencies(e={}){let t=await this.publicGetProvisioningCurrencies(e),i=this.safeList(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeBool(t,"deposit"),o=this.safeBool(t,"withdraw"),h=this.safeNumber(t,"withdrawFee"),d={withdraw:{min:this.safeNumber(t,"minWithdraw"),max:this.safeNumber(t,"maxWithdraw")},amount:{min:void 0,max:void 0}};s[a]={id:r,code:a,info:t,type:void 0,name:void 0,active:n&&o,deposit:n,withdraw:o,fee:h,precision:void 0,limits:d}}return s}async fetchMarkets(e={}){let t=await this.publicGetProvisioningTradingPairs(),i=this.safeList(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=!this.safeBool(e,"maintain"),i=this.safeString(e,"pair"),s=i.toUpperCase(),r=this.safeString(e,"base"),a=this.safeString(e,"quote"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a);return{id:i,uppercaseId:s,symbol:n+"/"+o,base:n,quote:o,baseId:n,quoteId:o,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:{amount:{min:this.safeNumber(e,"minLimitBaseAmount"),max:this.safeNumber(e,"maxLimitBaseAmount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},leverage:{min:void 0,max:void 0}},precision:{price:this.parseNumber(this.parsePrecision(this.safeString(e,"quotePrecision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(e,"basePrecision")))},active:t,created:void 0,info:e}}parseTicker(e,t){let i=this.safeString(e,"pair");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol");return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high24hr"),low:this.safeString(e,"low24hr"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"lastPrice"),last:this.safeString(e,"lastPrice"),previousClose:void 0,change:void 0,percentage:this.safeString(e,"priceChange24hr"),average:void 0,baseVolume:this.safeString(e,"volume24hr"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetTickersPair(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(),s=this.safeList(i,"data",[]);return this.parseTickers(s,e)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id};void 0!==t&&(r.limit=t);let a=await this.publicGetOrderBookPair(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}parseTrade(e,t){let i,s,r;let a=this.safeString(e,"tradeId"),n=this.safeString(e,"orderId");i=void 0===a?this.safeTimestamp(e,"timestamp"):this.safeInteger(e,"timestamp");let o=this.safeString(e,"pair");t=this.safeMarket(o,t);let h=this.safeString(t,"symbol"),d=this.safeString(e,"price"),l=this.safeStringLower(e,"type"),c=this.safeStringLower(e,"action");void 0===c&&(c=this.safeBool(e,"isBuyer")?"buy":"sell");let u=this.safeString(e,"amount");void 0===u&&(u=this.safeString(e,"baseAmount"));let f=this.safeString(e,"fee"),p=this.safeCurrencyCode(this.safeString(e,"feeSymbol"));void 0!==f&&(s={cost:f,currency:p,rate:void 0});let m=this.safeBool(e,"isTaker");return void 0!==m&&(r=m?"taker":"maker"),this.safeTrade({id:a,info:e,order:n,timestamp:i,datetime:this.iso8601(i),symbol:h,takerOrMaker:r,type:l,side:c,price:d,amount:u,cost:void 0,fee:s},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id},n=await this.publicGetTradesPair(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.publicGetProvisioningLimitationsAndFees(e),i=this.safeDict(t,"tradingFeeRate",{}),s=this.safeValue(i,0),r={},a=this.safeNumber(s,"makerFee"),n=this.safeNumber(s,"takerFee");for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e];r[t]={info:s,symbol:t,maker:a,taker:n,percentage:!0,tierBased:!0}}return r}parseOHLCV(e,t){return[this.safeInteger(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o=this.safeString(this.timeframes,t,t),h={pair:n.id,resolution:o};s=void 0===s?500:Math.min(s,75e3);let d=this.parseTimeframe(t);if(void 0===i)h.to=this.seconds(),h.from=h.to-s*d;else{let e=1e3*d;a=Math.floor(i/e)*e,h.from=Math.floor(i/1e3),h.to=this.sum(h.from,s*d)}let l=await this.publicGetTradingHistoryPair(this.extend(h,r)),c=this.safeList(l,"data",[]),u=this.parseOHLCVs(c,n,t,i,s);return this.insertMissingCandles(u,d,a,s)}insertMissingCandles(e,t,i,s){let r;if(0===e.length)return e;let a=[],n=e[0];r=void 0===i?n[0]:i;let o=0,h=e.length,d=0;for(;d<s&&o<h;){let i=e[o];if(i[0]===r)a.push(i),o=this.sum(o,1);else{let e=this.arrayConcat([],n);e[0]=r,e[1]=e[4],e[2]=e[4],e[3]=e[4],e[5]=this.parseNumber("0"),a.push(e)}r=this.sum(r,1e3*t),d=a.length,n=a[d-1]}return a}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(s,"amount"),o={free:this.safeString(s,"available"),total:n};t[a]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountsBalance(e),i=this.safeList(t,"data",[]);return this.parseBalance(i)}parseOrderStatus(e){return this.safeString({"-1":"open",0:"open",1:"open",2:"closed",3:"closed",4:"canceled",6:"canceled"},e,void 0)}parseOrder(e,t){let i,s;let a=this.safeString2(e,"id","orderId"),n=this.safeInteger2(e,"timestamp","createdTimestamp"),o=this.safeString(e,"action");o=o.toLowerCase();let h=this.safeString2(e,"amount","originalAmount"),d=this.safeString(e,"price"),l=this.safeString(e,"pair");t=this.safeMarket(l,t,"_");let c=this.safeString(t,"symbol"),u=this.safeString(e,"status"),f=this.parseOrderStatus(u),p=this.safeStringLower(e,"type"),m=this.safeString(e,"avgExecutionPrice"),g=this.safeString(e,"executedAmount"),y=this.safeString(e,"remainingAmount"),v=this.safeString(e,"timeInForce");"POST_ONLY"===v&&(i=!0);let b=this.safeString(e,"fee"),w=this.safeCurrencyCode(this.safeString(e,"feeSymbol"));return r.Y.stringGt(b,"0")&&(s={currency:w,cost:b}),this.safeOrder({id:a,clientOrderId:void 0,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:this.safeInteger(e,"updatedTimestamp"),symbol:c,type:p,timeInForce:v,postOnly:i,side:o,price:d,triggerPrice:void 0,amount:h,cost:void 0,average:m,filled:g,remaining:y,status:f,fee:s,trades:void 0,info:e},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h={type:t,pair:o.id,action:i,amount:this.amountToPrecision(e,s),timestamp:this.milliseconds()},d=t.toUpperCase();if("LIMIT"===d&&(h.price=this.priceToPrecision(e,r)),"STOP_LIMIT"===d){h.price=this.priceToPrecision(e,r);let t=this.safeValue2(a,"triggerPrice","stopPrice");if(a=this.omit(a,["triggerPrice","stopPrice"]),void 0===t)throw new n.InvalidOrder(this.id+" createOrder() requires a triggerPrice parameter for "+d+" orders");h.stopPrice=this.priceToPrecision(e,t);let i=this.safeString(a,"condition");if(void 0===i)throw new n.InvalidOrder(this.id+" createOrder() requires a condition parameter for "+d+" orders");h.condition=i}this.isPostOnly("MARKET"===d,void 0,a)&&(h.timeInForce="POST_ONLY");let l=await this.privatePostOrdersPair(this.extend(h,a));return this.parseOrder(l,o)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={id:e,pair:s.id},a=await this.privateDeleteOrdersPairId(this.extend(r,i));return this.parseOrder(a,s)}parseCancelOrders(e){let t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r];for(let e=0;e<a.length;e++)i.push(this.safeOrder({info:a[e],id:a[e],symbol:this.safeSymbol(r)}))}return i}async cancelOrders(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let s=this.market(t).uppercaseId,r={};r[s]=e;let a=await this.privatePutOrders(this.extend(r,i)),o=this.safeDict(a,"data");return this.parseCancelOrders(o)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};if(void 0!==e){let r=this.market(e);s.pair=r.id,i=await this.privateDeleteOrdersPair(this.extend(s,t))}else i=await this.privateDeleteOrdersAll(this.extend(s,t));let r=this.safeDict(i,"data",{});return this.parseCancelOrders(r)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={orderId:e,pair:s.id},a=await this.privateGetOrdersPairOrderId(this.extend(r,i));return this.parseOrder(a,s)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==t&&(a.startTimestamp=t),void 0!==i&&(a.limit=i);let o=await this.privateGetOrdersAllPair(this.extend(a,s)),h=this.safeList(o,"data",[]);return void 0===h&&(h=[]),this.parseOrders(h,r,t,i)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pair=r.id);let n=await this.privateGetOrdersOpen(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e,t,i,s={}){return this.fetchOrders(e,t,i,this.extend({statusKind:"DONE"},s))}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={pair:r.id},o=await this.privateGetOrdersTradesPair(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}parseTransactionStatus(e){return this.safeString({COMPLETE:"ok",INVALID:"failed",PROCESSING:"pending",WAIT_PROCESS:"pending",FAILED:"failed",EXPIRED:"failed",CANCELLED:"failed",EMAIL_VERIFICATION:"pending",WAIT_CONFIRMATION:"pending"},e,e)}parseTransaction(e,t){let i=this.safeString(e,"coin"),s=this.safeCurrencyCode(i,t),r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"address"),n=this.safeString(e,"message"),o=this.safeString(e,"status"),h=this.safeString(e,"protocol");return"MAIN"===h&&(h=s),{info:e,id:this.safeString(e,"serial"),txid:this.safeString(e,"txid"),type:void 0,currency:s,network:this.networkIdToCode(h),amount:this.safeNumber(e,"total"),status:this.parseTransactionStatus(o),timestamp:r,datetime:this.iso8601(r),address:a,addressFrom:void 0,addressTo:a,tag:n,tagFrom:void 0,tagTo:n,updated:void 0,comment:void 0,internal:void 0,fee:{currency:s,cost:this.safeNumber(e,"fee"),rate:void 0}}}async fetchDeposits(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchDeposits() requires the code argument");await this.loadMarkets();let r=this.safeCurrency(e),a={currency:r.id};void 0!==t&&(a.startTimestamp=t),void 0!==i&&(a.limit=i);let o=await this.privateGetWalletDepositHistoryCurrency(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i,{type:"deposit"})}async fetchWithdrawals(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchWithdrawals() requires the code argument");await this.loadMarkets();let r=this.safeCurrency(e),a={currency:r.id};void 0!==t&&(a.startTimestamp=t),void 0!==i&&(a.limit=i);let o=await this.privateGetWalletWithdrawHistoryCurrency(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i,{type:"withdrawal"})}async fetchWithdrawal(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchWithdrawal() requires the code argument");await this.loadMarkets();let s=this.safeCurrency(t),r={serial:e,currency:s.id},a=await this.privateGetWalletWithdrawCurrencySerial(this.extend(r,i)),o=this.safeDict(a,"data",{});return this.parseTransaction(o,s)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);let a=this.currency(e),o={currency:a.id,amount:this.numberToString(t),address:i};if("network"in r){let e=this.safeDict(this.options,"networks",{}),t=this.safeStringUpper(r,"network");r=this.omit(r,["network"]);let i=this.safeString(e,t);if(void 0===i)throw new n.ExchangeError(this.id+" invalid network "+t);o.protocol=i}void 0!==s&&(o.message=s);let h=await this.privatePostWalletWithdrawCurrency(this.extend(o,r)),d=this.safeDict(h,"data",{});return this.parseTransaction(d,a)}parseDepositWithdrawFee(e,t){return{info:e,withdraw:{fee:this.safeNumber(e,"withdrawFee"),percentage:!1},deposit:{fee:void 0,percentage:void 0},networks:{}}}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetProvisioningCurrencies(t),s=this.safeList(i,"data",[]);return this.parseDepositWithdrawFees(s,e,"currency")}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if(void 0===r&&(r={}),r["X-BITOPRO-API"]="ccxt","private"===t){if(this.checkRequiredCredentials(),"POST"===i||"PUT"===i){a=this.json(s);let e=this.stringToBase64(a),t=this.hmac(this.encode(e),this.encode(this.secret),A.qt);r["X-BITOPRO-APIKEY"]=this.apiKey,r["X-BITOPRO-PAYLOAD"]=e,r["X-BITOPRO-SIGNATURE"]=t}else if("GET"===i||"DELETE"===i){Object.keys(o).length&&(n+="?"+this.urlencode(o));let e=this.milliseconds(),t=this.json({nonce:e}),i=this.stringToBase64(t),s=this.hmac(this.encode(i),this.encode(this.secret),A.qt);r["X-BITOPRO-APIKEY"]=this.apiKey,r["X-BITOPRO-PAYLOAD"]=i,r["X-BITOPRO-SIGNATURE"]=s}}else"public"===t&&"GET"===i&&Object.keys(o).length&&(n+="?"+this.urlencode(o));return{url:n=this.urls.api.rest+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o||e>=200&&e<300)return;let l=this.id+" "+a,c=this.safeString(o,"error");throw this.throwExactlyMatchedException(this.exceptions.exact,c,l),this.throwBroadlyMatchedException(this.exceptions.broad,c,l),new n.ExchangeError(l)}}class er extends s.k{}let ea=er;class en extends ea{describe(){return this.deepExtend(super.describe(),{id:"onetrading",name:"One Trading",countries:["AT"],rateLimit:300,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!1,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1/MINUTES","5m":"5/MINUTES","15m":"15/MINUTES","30m":"30/MINUTES","1h":"1/HOURS","4h":"4/HOURS","1d":"1/DAYS","1w":"1/WEEKS","1M":"1/MONTHS"},urls:{logo:"https://github.com/ccxt/ccxt/assets/43336371/bdbc26fd-02f2-4ca7-9f1e-17333690bb1c",api:{public:"https://api.onetrading.com/fast",private:"https://api.onetrading.com/fast"},www:"https://onetrading.com/",doc:["https://docs.onetrading.com"],fees:"https://onetrading.com/fees"},api:{public:{get:["currencies","candlesticks/{instrument_code}","fees","instruments","order-book/{instrument_code}","market-ticker","market-ticker/{instrument_code}","time"]},private:{get:["account/balances","account/fees","account/orders","account/orders/{order_id}","account/orders/{order_id}/trades","account/trades","account/trades/{trade_id}"],post:["account/orders"],delete:["account/orders","account/orders/{order_id}","account/orders/client/{client_id}"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.001"),tiers:[{taker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100"),this.parseNumber("0.0013")],[this.parseNumber("250"),this.parseNumber("0.0013")],[this.parseNumber("1000"),this.parseNumber("0.001")],[this.parseNumber("5000"),this.parseNumber("0.0009")],[this.parseNumber("10000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("100"),this.parseNumber("0.001")],[this.parseNumber("250"),this.parseNumber("0.0009")],[this.parseNumber("1000"),this.parseNumber("0.00075")],[this.parseNumber("5000"),this.parseNumber("0.0006")],[this.parseNumber("10000"),this.parseNumber("0.0005")],[this.parseNumber("20000"),this.parseNumber("0.0005")]]}]}},requiredCredentials:{apiKey:!0,secret:!1},precisionMode:d.kb,exceptions:{exact:{INVALID_CLIENT_UUID:n.InvalidOrder,ORDER_NOT_FOUND:n.OrderNotFound,ONLY_ONE_ERC20_ADDRESS_ALLOWED:n.InvalidAddress,DEPOSIT_ADDRESS_NOT_USED:n.InvalidAddress,INVALID_CREDENTIALS:n.AuthenticationError,MISSING_CREDENTIALS:n.AuthenticationError,INVALID_APIKEY:n.AuthenticationError,INVALID_SCOPES:n.AuthenticationError,INVALID_SUBJECT:n.AuthenticationError,INVALID_ISSUER:n.AuthenticationError,INVALID_AUDIENCE:n.AuthenticationError,INVALID_DEVICE_ID:n.AuthenticationError,INVALID_IP_RESTRICTION:n.AuthenticationError,APIKEY_REVOKED:n.AuthenticationError,APIKEY_EXPIRED:n.AuthenticationError,SYNCHRONIZER_TOKEN_MISMATCH:n.AuthenticationError,SESSION_EXPIRED:n.AuthenticationError,INTERNAL_ERROR:n.AuthenticationError,CLIENT_IP_BLOCKED:n.PermissionDenied,MISSING_PERMISSION:n.PermissionDenied,ILLEGAL_CHARS:n.BadRequest,UNSUPPORTED_MEDIA_TYPE:n.BadRequest,ACCOUNT_HISTORY_TIME_RANGE_TOO_BIG:n.BadRequest,CANDLESTICKS_TIME_RANGE_TOO_BIG:n.BadRequest,INVALID_INSTRUMENT_CODE:n.BadRequest,INVALID_ORDER_TYPE:n.BadRequest,INVALID_UNIT:n.BadRequest,INVALID_PERIOD:n.BadRequest,INVALID_TIME:n.BadRequest,INVALID_DATE:n.BadRequest,INVALID_CURRENCY:n.BadRequest,INVALID_AMOUNT:n.BadRequest,INVALID_PRICE:n.BadRequest,INVALID_LIMIT:n.BadRequest,INVALID_QUERY:n.BadRequest,INVALID_CURSOR:n.BadRequest,INVALID_ACCOUNT_ID:n.BadRequest,INVALID_SIDE:n.InvalidOrder,INVALID_ACCOUNT_HISTORY_FROM_TIME:n.BadRequest,INVALID_ACCOUNT_HISTORY_MAX_PAGE_SIZE:n.BadRequest,INVALID_ACCOUNT_HISTORY_TIME_PERIOD:n.BadRequest,INVALID_ACCOUNT_HISTORY_TO_TIME:n.BadRequest,INVALID_CANDLESTICKS_GRANULARITY:n.BadRequest,INVALID_CANDLESTICKS_UNIT:n.BadRequest,INVALID_ORDER_BOOK_DEPTH:n.BadRequest,INVALID_ORDER_BOOK_LEVEL:n.BadRequest,INVALID_PAGE_CURSOR:n.BadRequest,INVALID_TIME_RANGE:n.BadRequest,INVALID_TRADE_ID:n.BadRequest,INVALID_UI_ACCOUNT_SETTINGS:n.BadRequest,NEGATIVE_AMOUNT:n.InvalidOrder,NEGATIVE_PRICE:n.InvalidOrder,MIN_SIZE_NOT_SATISFIED:n.InvalidOrder,BAD_AMOUNT_PRECISION:n.InvalidOrder,BAD_PRICE_PRECISION:n.InvalidOrder,BAD_TRIGGER_PRICE_PRECISION:n.InvalidOrder,MAX_OPEN_ORDERS_EXCEEDED:n.BadRequest,MISSING_PRICE:n.InvalidOrder,MISSING_ORDER_TYPE:n.InvalidOrder,MISSING_SIDE:n.InvalidOrder,MISSING_CANDLESTICKS_PERIOD_PARAM:n.ArgumentsRequired,MISSING_CANDLESTICKS_UNIT_PARAM:n.ArgumentsRequired,MISSING_FROM_PARAM:n.ArgumentsRequired,MISSING_INSTRUMENT_CODE:n.ArgumentsRequired,MISSING_ORDER_ID:n.InvalidOrder,MISSING_TO_PARAM:n.ArgumentsRequired,MISSING_TRADE_ID:n.ArgumentsRequired,INVALID_ORDER_ID:n.OrderNotFound,NOT_FOUND:n.OrderNotFound,INSUFFICIENT_LIQUIDITY:n.InsufficientFunds,INSUFFICIENT_FUNDS:n.InsufficientFunds,NO_TRADING:n.ExchangeNotAvailable,SERVICE_UNAVAILABLE:n.ExchangeNotAvailable,GATEWAY_TIMEOUT:n.ExchangeNotAvailable,RATELIMIT:n.DDoSProtection,CF_RATELIMIT:n.DDoSProtection,INTERNAL_SERVER_ERROR:n.ExchangeError},broad:{"Order not found.":n.OrderNotFound}},commonCurrencies:{MIOTA:"IOTA"},options:{fetchTradingFees:{method:"fetchPrivateTradingFees"},fiat:["EUR","CHF"]}})}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.safeInteger(t,"epoch_millis")}async fetchCurrencies(e={}){let t=await this.publicGetCurrencies(e),i={};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"code"),a=this.safeCurrencyCode(r);i[a]={id:r,code:a,name:void 0,info:s,active:void 0,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(s,"precision"))),withdraw:void 0,deposit:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},networks:{}}}return i}async fetchMarkets(e={}){let t=await this.publicGetInstruments(e);return this.parseMarkets(t)}parseMarket(e){let t=this.safeValue(e,"base",{}),i=this.safeValue(e,"quote",{}),s=this.safeString(t,"code"),r=this.safeString(i,"code"),a=s+"_"+r,n=this.safeCurrencyCode(s),o=this.safeCurrencyCode(r);return{id:a,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:s,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ACTIVE"===this.safeString(e,"state"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"market_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(e,"min_size"),max:void 0}},created:void 0,info:e}}async fetchTradingFees(e={}){let t=this.safeString(e,"method");if(e=this.omit(e,"method"),void 0===t){let e=this.safeValue(this.options,"fetchTradingFees",{});t=this.safeString(e,"method","fetchPrivateTradingFees")}if("fetchPrivateTradingFees"===t)return await this.fetchPrivateTradingFees(e);if("fetchPublicTradingFees"===t)return await this.fetchPublicTradingFees(e);throw new n.NotSupported(this.id+" fetchTradingFees() does not support "+t+", fetchPrivateTradingFees and fetchPublicTradingFees are supported")}async fetchPublicTradingFees(e={}){await this.loadMarkets();let t=await this.publicGetFees(e),i=this.safeValue(t,0,{}),s=this.safeValue(i,"fee_tiers"),r=this.parseFeeTiers(s),a=this.safeValue(s,0,{}),n={};for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e];n[t]={info:i,symbol:t,maker:this.safeNumber(a,"maker_fee"),taker:this.safeNumber(a,"taker_fee"),percentage:!0,tierBased:!0,tiers:r}}return n}async fetchPrivateTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetAccountFees(e),i=this.safeValue(t,"active_fee_tier",{}),s=this.safeString(i,"maker_fee"),a=this.safeString(i,"taker_fee");s=r.Y.stringDiv(s,"100"),a=r.Y.stringDiv(a,"100");let n=this.safeValue(t,"fee_tiers"),o={},h=this.parseFeeTiers(n);for(let e=0;e<this.symbols.length;e++){let i=this.symbols[e];o[i]={info:t,symbol:i,maker:this.parseNumber(s),taker:this.parseNumber(a),percentage:!0,tierBased:!0,tiers:h}}return o}parseFeeTiers(e,t){let i=[],s=[];for(let t=0;t<e.length;t++){let a=e[t],n=this.safeNumber(a,"volume"),o=this.safeString(a,"taker_fee"),h=this.safeString(a,"maker_fee");h=r.Y.stringDiv(h,"100"),o=r.Y.stringDiv(o,"100"),s.push([n,this.parseNumber(h)]),i.push([n,this.parseNumber(o)])}return{maker:s,taker:i}}parseTicker(e,t){let i=this.parse8601(this.safeString(e,"time")),s=this.safeString(e,"instrument_code"),r=this.safeSymbol(s,t,"_"),a=this.safeString(e,"last_price"),n=this.safeString(e,"price_change_percentage"),o=this.safeString(e,"price_change"),h=this.safeString(e,"base_volume"),d=this.safeString(e,"quote_volume");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"best_bid"),bidVolume:void 0,ask:this.safeString(e,"best_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:o,percentage:n,average:void 0,baseVolume:h,quoteVolume:d,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={instrument_code:i.id},r=await this.publicGetMarketTickerInstrumentCode(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetMarketTicker(t),s={};for(let e=0;e<i.length;e++){let t=this.parseTicker(i[e]);s[t.symbol]=t}return this.filterByArrayTickers(s,"symbol",e)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={instrument_code:s.id};void 0!==t&&(r.depth=t);let a=await this.publicGetOrderBookInstrumentCode(this.extend(r,i)),n=this.parse8601(this.safeString(a,"time"));return this.parseOrderBook(a,s.symbol,n,"bids","asks","price","amount")}parseOHLCV(e,t){let i=this.safeValue(e,"granularity"),s=this.safeString(i,"unit"),r=this.safeString(i,"period"),a=this.safeString({MINUTES:"m",HOURS:"h",DAYS:"d",WEEKS:"w",MONTHS:"M"},s),n=1e3*this.parseTimeframe(r+a),o=this.parse8601(this.safeString(e,"time")),h=n*this.parseToInt(o/n),d=this.safeValue(this.options,"fetchOHLCV",{}),l=this.safeString(d,"volume","total_amount");return[h,this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,l)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),[n,o]=this.safeString(this.timeframes,t).split("/"),h=1e3*this.parseTimeframe(t);void 0===s&&(s=1500);let d={instrument_code:a.id,period:n,unit:o};if(void 0===i){let e=this.milliseconds();d.to=this.iso8601(e),d.from=this.iso8601(e-s*h)}else d.from=this.iso8601(i),d.to=this.iso8601(this.sum(i,s*h));let l=await this.publicGetCandlesticksInstrumentCode(this.extend(d,r)),c=this.safeList(l,"candlesticks");return this.parseOHLCVs(c,a,t,i,s)}parseTrade(e,t){let i,s;let r=this.safeValue(e,"fee",{});e=this.safeValue(e,"trade",e);let a=this.safeInteger(e,"trade_timestamp");void 0===a&&(a=this.parse8601(this.safeString(e,"time")));let n=this.safeStringLower2(e,"side","taker_side"),o=this.safeString(e,"price"),h=this.safeString(e,"amount"),d=this.safeString(e,"volume"),l=this.safeString(e,"instrument_code"),c=this.safeSymbol(l,t,"_"),u=this.safeString(r,"fee_amount");if(void 0!==u){let e=this.safeString(r,"fee_currency");s={cost:u,currency:this.safeCurrencyCode(e),rate:this.safeString(r,"fee_percentage")},i=this.safeStringLower(r,"fee_type")}return this.safeTrade({id:this.safeString2(e,"trade_id","sequence"),order:this.safeString(e,"order_id"),timestamp:a,datetime:this.iso8601(a),symbol:c,type:void 0,side:n,price:o,amount:h,cost:d,takerOrMaker:i,fee:s,info:e},t)}parseBalance(e){let t=this.safeValue(e,"balances",[]),i={info:e};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountBalances(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({FILLED:"open",FILLED_FULLY:"closed",FILLED_CLOSED:"canceled",FILLED_REJECTED:"rejected",OPEN:"open",REJECTED:"rejected",CLOSED:"canceled",FAILED:"failed",STOP_TRIGGERED:"triggered",DONE:"closed"},e,e)}parseOrder(e,t){let i=this.safeValue(e,"order",e),s=this.safeString(i,"order_id"),r=this.safeString(i,"client_id"),a=this.parse8601(this.safeString(i,"time")),n=this.parseOrderStatus(this.safeString(i,"status")),o=this.parseOrderStatus(n),h=this.safeString(i,"instrument_code"),d=this.safeSymbol(h,t,"_"),l=this.safeString(i,"price"),c=this.safeString(i,"amount"),u=this.safeString(i,"filled_amount"),f=this.safeStringLower(i,"side"),p=this.safeStringLower(i,"type"),m=this.parseTimeInForce(this.safeString(i,"time_in_force")),g=this.safeValue(i,"is_post_only"),y=this.safeValue(e,"trades",[]);return this.safeOrder({id:s,clientOrderId:r,info:e,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:d,type:this.parseOrderType(p),timeInForce:m,postOnly:g,side:f,price:l,triggerPrice:this.safeNumber(i,"trigger_price"),amount:c,cost:void 0,average:void 0,filled:u,remaining:void 0,status:o,trades:y},t)}parseOrderType(e){return this.safeString({booked:"limit"},e,e)}parseTimeInForce(e){return this.safeString({GOOD_TILL_CANCELLED:"GTC",GOOD_TILL_TIME:"GTT",IMMEDIATE_OR_CANCELLED:"IOC",FILL_OR_KILL:"FOK"},e,e)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h=t.toUpperCase(),d={instrument_code:o.id,type:h,side:i.toUpperCase(),amount:this.amountToPrecision(e,s)},l=!1;("LIMIT"===h||"STOP"===h)&&(l=!0);let c=this.safeNumberN(a,["triggerPrice","trigger_price","stopPrice"]);if(void 0!==c){if("MARKET"===h)throw new n.BadRequest(this.id+" createOrder() cannot place stop market orders, only stop limit");d.trigger_price=this.priceToPrecision(e,c),d.type="STOP",a=this.omit(a,["triggerPrice","trigger_price","stopPrice"])}else if("STOP"===h)throw new n.ArgumentsRequired(this.id+" createOrder() requires a triggerPrice param for "+t+" orders");l&&(d.price=this.priceToPrecision(e,r));let u=this.safeString2(a,"clientOrderId","client_id");void 0!==u&&(d.client_id=u,a=this.omit(a,["clientOrderId","client_id"]));let f=this.safeString2(a,"timeInForce","time_in_force","GOOD_TILL_CANCELLED");a=this.omit(a,"timeInForce"),d.time_in_force=f;let p=await this.privatePostAccountOrders(this.extend(d,a));return this.parseOrder(p,o)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets();let r=this.safeString2(i,"clientOrderId","client_id");i=this.omit(i,["clientOrderId","client_id"]);let a="privateDeleteAccountOrdersOrderId",n={};return void 0!==r?(a="privateDeleteAccountOrdersClientClientId",n.client_id=r):n.order_id=e,s="privateDeleteAccountOrdersOrderId"===a?await this.privateDeleteAccountOrdersOrderId(this.extend(n,i)):await this.privateDeleteAccountOrdersClientClientId(this.extend(n,i)),this.parseOrder(s)}async cancelAllOrders(e,t={}){await this.loadMarkets();let i={};if(void 0!==e){let t=this.market(e);i.instrument_code=t.id}return await this.privateDeleteAccountOrders(this.extend(i,t))}async cancelOrders(e,t,i={}){await this.loadMarkets();let s={ids:e.join(",")};return await this.privateDeleteAccountOrders(this.extend(s,i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetAccountOrdersOrderId(this.extend({order_id:e},i));return this.parseOrder(s)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};if(void 0!==e&&(r=this.market(e),a.instrument_code=r.id),void 0!==t){if(void 0===this.safeString(s,"to"))throw new n.ArgumentsRequired(this.id+' fetchOpenOrders() requires a "to" iso8601 string param with the since argument is specified, max range is 100 days');a.from=this.iso8601(t)}void 0!==i&&(a.max_page_size=i);let o=await this.privateGetAccountOrders(this.extend(a,s)),h=this.safeList(o,"order_history",[]);return this.parseOrders(h,r,t,i)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOpenOrders(e,t,i,this.extend({with_cancelled_and_rejected:!0},s))}async fetchOrderTrades(e,t,i,s,r={}){let a;await this.loadMarkets();let n={order_id:e};void 0!==s&&(n.max_page_size=s);let o=await this.privateGetAccountOrdersOrderIdTrades(this.extend(n,r)),h=this.safeValue(o,"trade_history",[]);return void 0!==t&&(a=this.market(t)),this.parseTrades(h,a,i,s)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};if(void 0!==e&&(r=this.market(e),a.instrument_code=r.id),void 0!==t){if(void 0===this.safeString(s,"to"))throw new n.ArgumentsRequired(this.id+' fetchMyTrades() requires a "to" iso8601 string param with the since argument is specified, max range is 100 days');a.from=this.iso8601(t)}void 0!==i&&(a.max_page_size=i);let o=await this.privateGetAccountTrades(this.extend(a,s)),h=this.safeList(o,"trade_history",[]);return this.parseTrades(h,r,t,i)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));return"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):"private"===t&&(this.checkRequiredCredentials(),r={Accept:"application/json",Authorization:"Bearer "+this.apiKey},"POST"===i?(a=this.json(o),r["Content-Type"]="application/json"):Object.keys(o).length&&(n+="?"+this.urlencode(o))),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"error");if(void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new n.ExchangeError(e)}}}class eo extends en{describe(){return this.deepExtend(super.describe(),{id:"bitpanda",alias:!0})}}class eh extends s.k{}let ed=eh;class el extends ed{describe(){return this.deepExtend(super.describe(),{id:"bitrue",name:"Bitrue",countries:["SG"],rateLimit:1e3,certified:!1,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPositionMode:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!0,fetchWithdrawals:!0,setLeverage:!0,setMargin:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","1d":"1D","1w":"1W"},urls:{logo:"https://github.com/user-attachments/assets/67abe346-1273-461a-bd7c-42fa32907c8e",api:{spot:"https://www.bitrue.com/api",fapi:"https://fapi.bitrue.com/fapi",dapi:"https://fapi.bitrue.com/dapi",kline:"https://www.bitrue.com/kline-api"},www:"https://www.bitrue.com",referral:"https://www.bitrue.com/affiliate/landing?cn=600000&inviteCode=EZWETQE",doc:["https://github.com/Bitrue-exchange/bitrue-official-api-docs","https://www.bitrue.com/api-docs"],fees:"https://bitrue.zendesk.com/hc/en-001/articles/4405479952537"},api:{spot:{kline:{public:{get:{"public.json":1,"public{currency}.json":1}}},v1:{public:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10]]},trades:1,historicalTrades:5,aggTrades:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},"market/kline":1}},private:{get:{order:1,openOrders:1,allOrders:5,account:5,myTrades:{cost:5,noSymbol:40},"etf/net-value/{symbol}":1,"withdraw/history":1,"deposit/history":1},post:{order:4,"withdraw/commit":1},delete:{order:1}}},v2:{private:{get:{myTrades:5}}}},fapi:{v1:{public:{get:{ping:1,time:1,contracts:1,depth:1,ticker:1,klines:1}}},v2:{private:{get:{myTrades:1,openOrders:1,order:1,account:1,leverageBracket:1,commissionRate:1,futures_transfer_history:1,forceOrdersHistory:1},post:{positionMargin:1,level_edit:1,cancel:1,order:1,allOpenOrders:1,futures_transfer:1}}}},dapi:{v1:{public:{get:{ping:1,time:1,contracts:1,depth:1,ticker:1,klines:1}}},v2:{private:{get:{myTrades:1,openOrders:1,order:1,account:1,leverageBracket:1,commissionRate:1,futures_transfer_history:1,forceOrdersHistory:1},post:{positionMargin:1,level_edit:1,cancel:1,order:1,allOpenOrders:1,futures_transfer:1}}}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.00098"),maker:this.parseNumber("0.00098")},future:{trading:{feeSide:"quote",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000400"),maker:this.parseNumber("0.000200"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000400")],[this.parseNumber("250"),this.parseNumber("0.000400")],[this.parseNumber("2500"),this.parseNumber("0.000350")],[this.parseNumber("7500"),this.parseNumber("0.000320")],[this.parseNumber("22500"),this.parseNumber("0.000300")],[this.parseNumber("50000"),this.parseNumber("0.000270")],[this.parseNumber("100000"),this.parseNumber("0.000250")],[this.parseNumber("200000"),this.parseNumber("0.000220")],[this.parseNumber("400000"),this.parseNumber("0.000200")],[this.parseNumber("750000"),this.parseNumber("0.000170")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000200")],[this.parseNumber("250"),this.parseNumber("0.000160")],[this.parseNumber("2500"),this.parseNumber("0.000140")],[this.parseNumber("7500"),this.parseNumber("0.000120")],[this.parseNumber("22500"),this.parseNumber("0.000100")],[this.parseNumber("50000"),this.parseNumber("0.000080")],[this.parseNumber("100000"),this.parseNumber("0.000060")],[this.parseNumber("200000"),this.parseNumber("0.000040")],[this.parseNumber("400000"),this.parseNumber("0.000020")],[this.parseNumber("750000"),this.parseNumber("0")]]}}},delivery:{trading:{feeSide:"base",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000500"),maker:this.parseNumber("0.000100"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000500")],[this.parseNumber("250"),this.parseNumber("0.000450")],[this.parseNumber("2500"),this.parseNumber("0.000400")],[this.parseNumber("7500"),this.parseNumber("0.000300")],[this.parseNumber("22500"),this.parseNumber("0.000250")],[this.parseNumber("50000"),this.parseNumber("0.000240")],[this.parseNumber("100000"),this.parseNumber("0.000240")],[this.parseNumber("200000"),this.parseNumber("0.000240")],[this.parseNumber("400000"),this.parseNumber("0.000240")],[this.parseNumber("750000"),this.parseNumber("0.000240")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000100")],[this.parseNumber("250"),this.parseNumber("0.000080")],[this.parseNumber("2500"),this.parseNumber("0.000050")],[this.parseNumber("7500"),this.parseNumber("0.0000030")],[this.parseNumber("22500"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.000050")],[this.parseNumber("100000"),this.parseNumber("-0.000060")],[this.parseNumber("200000"),this.parseNumber("-0.000070")],[this.parseNumber("400000"),this.parseNumber("-0.000080")],[this.parseNumber("750000"),this.parseNumber("-0.000090")]]}}}},options:{createMarketBuyOrderRequiresPrice:!0,fetchMarkets:["spot","linear","inverse"],fetchMyTradesMethod:"v2PrivateGetMyTrades",hasAlreadyAuthenticatedSuccessfully:!1,currencyToPrecisionRoundingMode:d.R3,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,parseOrderToPrecision:!1,newOrderRespType:{market:"FULL",limit:"FULL"},networks:{ERC20:"ETH",TRC20:"TRX",AETERNITY:"Aeternity",AION:"AION",ALGO:"Algorand",ASK:"ASK",ATOM:"ATOM",AVAXC:"AVAX C-Chain",BCH:"BCH",BEP2:"BEP2",BEP20:"BEP20",Bitcoin:"Bitcoin",BRP20:"BRP20",ADA:"Cardano",CASINOCOIN:"CasinoCoin","CASINOCOIN-XRPL":"CasinoCoin XRPL",CONTENTOS:"Contentos",DASH:"Dash",DECOIN:"Decoin",DFI:"DeFiChain",DGB:"DGB",DIVI:"Divi",DOGE:"dogecoin",EOS:"EOS",ETC:"ETC",FILECOIN:"Filecoin",FREETON:"FREETON",HBAR:"HBAR",HEDERA:"Hedera Hashgraph",HRC20:"HRC20",ICON:"ICON",ICP:"ICP",IGNIS:"Ignis",INTERNETCOMPUTER:"Internet Computer",IOTA:"IOTA",KAVA:"KAVA",KSM:"KSM",LTC:"LiteCoin",LUNA:"Luna",MATIC:"MATIC",MOBILECOIN:"Mobile Coin",MONACOIN:"MonaCoin",XMR:"Monero",NEM:"NEM",NEP5:"NEP5",OMNI:"OMNI",PAC:"PAC",DOT:"Polkadot",RAVEN:"Ravencoin",SAFEX:"Safex",SOL:"SOLANA",SGB:"Songbird",XML:"Stellar Lumens",XYM:"Symbol",XTZ:"Tezos",theta:"theta",THETA:"THETA",VECHAIN:"VeChain",WANCHAIN:"Wanchain",XINFIN:"XinFin Network",XRP:"XRP",XRPL:"XRPL",ZIL:"ZIL"},defaultType:"spot",timeframes:{spot:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","12h":"12H","1d":"1D","1w":"1W"},future:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1h","1d":"1day","1w":"1week","1M":"1month"}},accountsByType:{spot:"wallet",future:"contract",swap:"contract",funding:"wallet",fund:"wallet",contract:"contract"}},commonCurrencies:{MIM:"MIM Swarm"},precisionMode:d.kb,features:{default:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:void 0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!0,marketBuyByCost:!0,selfTradePrevention:!1,iceberg:!0},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:90,daysBackCanceled:1,untilDays:90,trigger:!1,trailing:!1},fetchOHLCV:{limit:1440}},spot:{extends:"default"},forDerivatives:{extends:"default",createOrder:{marginMode:!0,leverage:!0,marketBuyRequiresPrice:!1,marketBuyByCost:!1},fetchOHLCV:{limit:300},fetchClosedOrders:void 0},swap:{linear:{extends:"forDerivatives"},inverse:{extends:"forDerivatives"}},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{"System is under maintenance.":n.OnMaintenance,"System abnormality":n.ExchangeError,"You are not authorized to execute this request.":n.PermissionDenied,"API key does not exist":n.AuthenticationError,"Order would trigger immediately.":n.OrderImmediatelyFillable,"Stop price would trigger immediately.":n.OrderImmediatelyFillable,"Order would immediately match and take.":n.OrderImmediatelyFillable,"Account has insufficient balance for requested action.":n.InsufficientFunds,"Rest API trading is not enabled.":n.ExchangeNotAvailable,"You don't have permission.":n.PermissionDenied,"Market is closed.":n.ExchangeNotAvailable,"Too many requests. Please try again later.":n.DDoSProtection,"-1000":n.ExchangeNotAvailable,"-1001":n.ExchangeNotAvailable,"-1002":n.AuthenticationError,"-1003":n.RateLimitExceeded,"-1013":n.InvalidOrder,"-1015":n.RateLimitExceeded,"-1016":n.ExchangeNotAvailable,"-1020":n.BadRequest,"-1021":n.InvalidNonce,"-1022":n.AuthenticationError,"-1100":n.BadRequest,"-1101":n.BadRequest,"-1102":n.BadRequest,"-1103":n.BadRequest,"-1104":n.BadRequest,"-1105":n.BadRequest,"-1106":n.BadRequest,"-1111":n.BadRequest,"-1112":n.InvalidOrder,"-1114":n.BadRequest,"-1115":n.BadRequest,"-1116":n.BadRequest,"-1117":n.BadRequest,"-1166":n.InvalidOrder,"-1118":n.BadRequest,"-1119":n.BadRequest,"-1120":n.BadRequest,"-1121":n.BadSymbol,"-1125":n.AuthenticationError,"-1127":n.BadRequest,"-1128":n.BadRequest,"-1130":n.BadRequest,"-1131":n.BadRequest,"-1160":n.InvalidOrder,"-1156":n.InvalidOrder,"-2008":n.AuthenticationError,"-2010":n.ExchangeError,"-2011":n.OrderNotFound,"-2013":n.OrderNotFound,"-2014":n.AuthenticationError,"-2015":n.AuthenticationError,"-2017":n.InsufficientFunds,"-2019":n.InsufficientFunds,"-3005":n.InsufficientFunds,"-3006":n.InsufficientFunds,"-3008":n.InsufficientFunds,"-3010":n.ExchangeError,"-3015":n.ExchangeError,"-3022":n.AccountSuspended,"-4028":n.BadRequest,"-3020":n.InsufficientFunds,"-3041":n.InsufficientFunds,"-5013":n.InsufficientFunds,"-11008":n.InsufficientFunds,"-4051":n.InsufficientFunds},broad:{"Insufficient account balance":n.InsufficientFunds,"has no operation privilege":n.PermissionDenied,MAX_POSITION:n.InvalidOrder}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchStatus(e={}){let t=await this.spotV1PublicGetPing(e);return{status:Object.keys(t).length?"maintenance":"ok",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){let t=await this.spotV1PublicGetTime(e);return this.safeInteger(t,"serverTime")}async fetchCurrencies(e={}){let t=await this.spotV1PublicGetExchangeInfo(e),i={},s=this.safeList(t,"coins",[]);for(let e=0;e<s.length;e++){let t,a,n,o,h;let d=s[e],l=this.safeString(d,"coin"),c=this.safeString(d,"coinFulName"),u=this.safeCurrencyCode(l),f=this.safeList(d,"chainDetail",[]),p={};for(let e=0;e<f.length;e++){let i=f[e],s=this.safeString(i,"chain"),d=this.networkIdToCode(s,u),l=this.safeBool(i,"enableDeposit");t=l||t;let c=this.safeBool(i,"enableWithdraw");a=c||a;let m=this.safeString(i,"withdrawFee");void 0!==m&&(h=void 0===h?m:r.Y.stringMin(m,h));let g=this.safeString(i,"minWithdraw");void 0!==g&&(n=void 0===n?g:r.Y.stringMin(g,n));let y=this.safeString(i,"maxWithdraw");void 0!==y&&(o=void 0===o?y:r.Y.stringMax(y,o)),p[d]={info:i,id:s,network:d,deposit:l,withdraw:c,active:l&&c,fee:this.parseNumber(m),precision:void 0,limits:{withdraw:{min:this.parseNumber(g),max:this.parseNumber(y)}}}}i[u]={id:l,name:c,code:u,precision:void 0,info:d,active:t&&a,deposit:t,withdraw:a,networks:p,fee:this.parseNumber(h),limits:{withdraw:{min:this.parseNumber(n),max:this.parseNumber(o)}}}}return i}async fetchMarkets(e={}){let t=[],i=this.safeValue(this.options,"fetchMarkets",["spot","linear","inverse"]);for(let s=0;s<i.length;s++){let r=i[s];if("spot"===r)t.push(this.spotV1PublicGetExchangeInfo(e));else if("linear"===r)t.push(this.fapiV1PublicGetContracts(e));else if("inverse"===r)t.push(this.dapiV1PublicGetContracts(e));else throw new n.ExchangeError(this.id+' fetchMarkets() this.options fetchMarkets "'+r+'" is not a supported market type')}let s=await Promise.all(t),r=this.safeValue(this.safeValue(s,0),"symbols",[]),a=this.safeValue(s,1),o=this.safeValue(s,2),h=r;return h=this.arrayConcat(h,a),h=this.arrayConcat(h,o),this.options.adjustForTimeDifference&&await this.loadTimeDifference(),this.parseMarkets(h)}parseMarket(e){let t,i,s,a,n;let o=this.safeString(e,"symbol"),h=this.safeStringLower(e,"symbol"),d=this.safeInteger(e,"side");void 0===d?t="spot":(t="swap",i=1===d,s=0===d);let l="spot"!==t,c=this.safeString(e,"baseAsset"),u=this.safeString(e,"quoteAsset");if(l){let e=o.split("-");c=this.safeString(e,1),u=this.safeString(e,2),a=i?u:c,n=this.safeCurrencyCode(a)}let f=this.safeCurrencyCode(c),p=this.safeCurrencyCode(u),m=f+"/"+p;void 0!==n&&(m+=":"+n);let g=this.safeList(e,"filters",[]),y=this.indexBy(g,"filterType"),v=this.safeString(e,"status"),b=this.safeDict(y,"PRICE_FILTER",{}),w=this.safeDict(y,"LOT_SIZE",{}),k=this.safeString(e,"pricePrecision"),S=this.safeString(e,"quantityPrecision"),O=this.safeString(b,"priceScale",k),T=this.safeString(w,"volumeScale",S),I=this.safeString(e,"multiplier"),x=this.safeNumber(w,"maxQty");void 0===x&&(x=this.safeNumber(e,"maxValidOrder"));let P=this.safeNumber(w,"minVal");return void 0===P&&(P=this.safeNumber(e,"minOrderMoney")),{id:o,lowercaseId:h,symbol:m,base:f,quote:p,settle:n,baseId:c,quoteId:u,settleId:a,type:t,spot:"spot"===t,margin:!1,swap:l,future:!1,option:!1,active:"TRADING"===v,contract:l,linear:i,inverse:s,contractSize:this.parseNumber(r.Y.stringAbs(I)),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(T)),price:this.parseNumber(this.parsePrecision(O))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(w,"minQty"),max:x},price:{min:this.safeNumber(b,"minPrice"),max:this.safeNumber(b,"maxPrice")},cost:{min:P,max:void 0}},created:void 0,info:e}}parseBalance(e){let t={info:e},i=this.safeInteger(e,"updateTime"),s=this.safeValue2(e,"balances","account",[]);for(let e=0;e<s.length;e++){let i=s[e],r=this.safeString2(i,"asset","marginCoin"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString2(i,"free","accountNormal"),n.used=this.safeString2(i,"locked","accountLock"),t[a]=n}return t.timestamp=i,t.datetime=this.iso8601(i),this.safeBalance(t)}async fetchBalance(e={}){let t,i,s,r;return await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),[i,e]=this.handleSubTypeAndParams("fetchBalance",void 0,e),"swap"===t?(s=void 0!==i&&"inverse"===i?await this.dapiV2PrivateGetAccount(e):await this.fapiV2PrivateGetAccount(e),r=this.safeDict(s,"data",{})):r=s=await this.spotV1PrivateGetAccount(e),this.parseBalance(r)}async fetchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e);if(r.swap){let e={contractName:r.id};void 0!==t&&(t>100&&(t=100),e.limit=t),r.linear?s=await this.fapiV1PublicGetDepth(this.extend(e,i)):r.inverse&&(s=await this.dapiV1PublicGetDepth(this.extend(e,i)))}else if(r.spot){let e={symbol:r.id};void 0!==t&&(t>1e3&&(t=1e3),e.limit=t),s=await this.spotV1PublicGetDepth(this.extend(e,i))}else throw new n.NotSupported(this.id+" fetchOrderBook only support spot & swap markets");let a=this.safeInteger(s,"time"),o=this.parseOrderBook(s,e,a);return o.nonce=this.safeInteger(s,"lastUpdateId"),o}parseTicker(e,t){let i;let s=this.safeSymbol(void 0,t),a=this.safeString2(e,"lastPrice","last"),n=this.safeInteger(e,"time");return i=t.swap?r.Y.stringMul(this.safeString(e,"rose"),"100"):this.safeString(e,"priceChangePercent"),this.safeTicker({symbol:s,timestamp:n,datetime:this.iso8601(n),high:this.safeString2(e,"highPrice","high"),low:this.safeString2(e,"lowPrice","low"),bid:this.safeString2(e,"bidPrice","buy"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString2(e,"askPrice","sell"),askVolume:this.safeString(e,"askQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:a,last:a,previousClose:void 0,change:this.safeString(e,"priceChange"),percentage:i,average:void 0,baseVolume:this.safeString2(e,"volume","vol"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){let i,s;await this.loadMarkets();let r=this.market(e);if(r.swap){let e={contractName:r.id};r.linear?i=await this.fapiV1PublicGetTicker(this.extend(e,t)):r.inverse&&(i=await this.dapiV1PublicGetTicker(this.extend(e,t))),s=i}else if(r.spot){let e={symbol:r.id};i=await this.spotV1PublicGetTicker24hr(this.extend(e,t)),s=this.safeDict(i,0,{})}else throw new n.NotSupported(this.id+" fetchTicker only support spot & swap markets");return this.parseTicker(s,r)}async fetchOHLCV(e,t="1m",i,s,r={}){let a,o;await this.loadMarkets();let h=this.market(e),d=this.safeDict(this.options,"timeframes",{});if(h.swap){let e=this.safeDict(d,"future",{}),i={contractName:h.id,interval:this.safeString(e,t,"1min")};void 0!==s&&(i.limit=s),h.linear?a=await this.fapiV1PublicGetKlines(this.extend(i,r)):h.inverse&&(a=await this.dapiV1PublicGetKlines(this.extend(i,r))),o=a}else if(h.spot){let e=this.safeDict(d,"spot",{}),n={symbol:h.id,scale:this.safeString(e,t,"1m")};void 0!==s&&(n.limit=s),void 0!==i&&(n.fromIdx=i),a=await this.spotV1PublicGetMarketKline(this.extend(n,r)),o=this.safeList(a,"data",[])}else throw new n.NotSupported(this.id+" fetchOHLCV only support spot & swap markets");return this.parseOHLCVs(o,h,t,i,s)}parseOHLCV(e,t){let i=this.safeTimestamp(e,"i");return void 0===i&&(i=this.safeInteger(e,"idx")),[i,this.safeNumber2(e,"o","open"),this.safeNumber2(e,"h","high"),this.safeNumber2(e,"l","low"),this.safeNumber2(e,"c","close"),this.safeNumber2(e,"v","vol")]}async fetchBidsAsks(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let s=this.safeString(e,0),r=this.market(s);if(r.swap){let e={contractName:r.id};r.linear?i=await this.fapiV1PublicGetTicker(this.extend(e,t)):r.inverse&&(i=await this.dapiV1PublicGetTicker(this.extend(e,t)))}else if(r.spot){let e={symbol:r.id};i=await this.spotV1PublicGetTickerBookTicker(this.extend(e,t))}else throw new n.NotSupported(this.id+" fetchBidsAsks only support spot & swap markets");let a={};return a[r.id]=i,this.parseTickers(a,e)}async fetchTickers(e,t={}){let i,s;await this.loadMarkets();let r={};if(void 0!==(e=this.marketSymbols(e))){let s=this.safeString(e,0),a=this.market(s);if(a.swap)throw new n.NotSupported(this.id+" fetchTickers does not support swap markets, please use fetchTicker instead");if(a.spot)i=await this.spotV1PublicGetTicker24hr(this.extend(r,t));else throw new n.NotSupported(this.id+" fetchTickers only support spot & swap markets")}else{if([s,t]=this.handleMarketTypeAndParams("fetchTickers",void 0,t),"spot"!==s)throw new n.NotSupported(this.id+" fetchTickers only support spot when symbols are not proved");i=await this.spotV1PublicGetTicker24hr(this.extend(r,t))}let a={};for(let e=0;e<i.length;e++){let t=this.safeDict(i,e,{});a[this.market(this.safeValue(t,"symbol")).id]=t}return this.parseTickers(a,e)}parseTrade(e,t){let i,s,r;let a=this.safeInteger2(e,"ctime","time"),n=this.safeString(e,"price"),o=this.safeString(e,"qty"),h=this.safeString2(e,"symbol","contractName"),d=this.safeSymbol(h,t),l=this.safeString(e,"orderId"),c=this.safeString2(e,"id","tradeId"),u=this.safeBool(e,"isBuyerMaker"),f=this.safeBool(e,"isBuyer");void 0!==u&&(i=u?"sell":"buy"),void 0!==f&&(i=f?"buy":"sell"),"commission"in e&&(s={cost:this.safeString2(e,"commission","fee"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAssert"))});let p=this.safeBool(e,"isMaker");return void 0!==p&&(r=p?"maker":"taker"),this.safeTrade({info:e,timestamp:a,datetime:this.iso8601(a),symbol:d,id:c,order:l,type:void 0,side:i,takerOrMaker:r,price:n,amount:o,cost:void 0,fee:s},t)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e);if(a.spot){let e={symbol:a.id};void 0!==i&&(e.limit=i),r=await this.spotV1PublicGetTrades(this.extend(e,s))}else throw new n.NotSupported(this.id+" fetchTrades only support spot markets");return this.parseTrades(r,a,t,i)}parseOrderStatus(e){return this.safeString({INIT:"open",PENDING_CREATE:"open",NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrder(e,t){let i,s;let a=this.parseOrderStatus(this.safeString2(e,"status","orderStatus")),n=this.safeString(e,"symbol"),o=this.safeSymbol(n,t),h=this.safeString(e,"executedQty");"time"in e?i=this.safeInteger(e,"time"):"transactTime"in e?i=this.safeInteger(e,"transactTime"):"updateTime"in e&&"open"===a&&(r.Y.stringGt(h,"0")?s=this.safeInteger(e,"updateTime"):i=this.safeInteger(e,"updateTime"));let d=this.safeString(e,"avgPrice"),l=this.safeString(e,"price"),c=this.safeString(e,"origQty"),u=this.safeString2(e,"cummulativeQuoteQty","cumQuote"),f=this.safeString(e,"orderId"),p=this.safeStringLower(e,"type"),m=this.safeStringLower(e,"side"),g=this.safeList(e,"fills",[]),y=this.safeString(e,"clientOrderId"),v=this.safeString(e,"timeInForce"),b="limit_maker"===p||"GTX"===v||"post_only"===p;"limit_maker"===p&&(p="limit");let w=this.parseNumber(this.omitZero(this.safeString(e,"stopPrice")));return this.safeOrder({info:e,id:f,clientOrderId:y,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,symbol:o,type:p,timeInForce:v,postOnly:b,side:m,price:l,triggerPrice:w,amount:c,cost:u,average:d,filled:h,remaining:void 0,status:a,fee:void 0,trades:g},t)}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).swap)throw new n.NotSupported(this.id+" createMarketBuyOrderWithCost() supports swap orders only");return i.createMarketBuyOrderRequiresPrice=!1,await this.createOrder(e,"market","buy",t,void 0,i)}async createOrder(e,t,i,s,a,o={}){let h,d;await this.loadMarkets();let l=this.market(e),c=t.toUpperCase(),u={side:i.toUpperCase(),type:c};if("LIMIT"===c){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires a price argument");u.price=this.priceToPrecision(e,a)}if(l.swap){let t="MARKET"===c,f=this.safeStringLower(o,"timeInForce");this.isPostOnly(t,void 0,o)?u.type="POST_ONLY":"fok"===f?u.type="FOK":"ioc"===f&&(u.type="IOC"),u.contractName=l.id;let p=!0;if([p,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0),t&&"buy"===i&&p){let t=this.safeString(o,"cost");if(o=this.omit(o,"cost"),void 0===a&&void 0===t)throw new n.InvalidOrder(this.id+' createOrder() requires the price argument with swap market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options["createMarketBuyOrderRequiresPrice"] = false to supply the cost in the amount argument (the exchange-specific behaviour)');{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n),h=void 0!==t?t:o;u.amount=this.costToPrecision(e,h),u.volume=this.costToPrecision(e,h)}}else u.amount=this.parseToNumeric(s),u.volume=this.parseToNumeric(s);u.positionType=1;let m=this.safeValue2(o,"reduceOnly","reduce_only");u.open=m?"CLOSE":"OPEN";let g=this.safeString(o,"leverage","1");u.leverage=this.parseToNumeric(g),o=this.omit(o,["leverage","reduceOnly","reduce_only","timeInForce"]),l.linear?h=await this.fapiV2PrivatePostOrder(this.extend(u,o)):l.inverse&&(h=await this.dapiV2PrivatePostOrder(this.extend(u,o))),d=this.safeDict(h,"data",{})}else if(l.spot){u.symbol=l.id,u.quantity=this.amountToPrecision(e,s);let i=this.safeValue(l.info,"orderTypes");if(!this.inArray(c,i))throw new n.InvalidOrder(this.id+" "+t+" is not a valid order type in market "+e);let r=this.safeString2(o,"newClientOrderId","clientOrderId");void 0!==r&&(o=this.omit(o,["newClientOrderId","clientOrderId"]),u.newClientOrderId=r);let a=this.safeValue2(o,"triggerPrice","stopPrice");void 0!==a&&(o=this.omit(o,["triggerPrice","stopPrice"]),u.stopPrice=this.priceToPrecision(e,a)),d=h=await this.spotV1PrivatePostOrder(this.extend(u,o))}else throw new n.NotSupported(this.id+" createOrder only support spot & swap markets");return this.parseOrder(d,l)}async fetchOrder(e,t,i={}){let s,r;if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let a=this.market(t),o=this.safeValue2(i,"origClientOrderId","clientOrderId");i=this.omit(i,["origClientOrderId","clientOrderId"]);let h={};if(void 0===o?h.orderId=e:a.swap?h.clientOrderId=o:h.origClientOrderId=o,a.swap)h.contractName=a.id,a.linear?s=await this.fapiV2PrivateGetOrder(this.extend(h,i)):a.inverse&&(s=await this.dapiV2PrivateGetOrder(this.extend(h,i))),r=this.safeDict(s,"data",{});else if(a.spot)h.orderId=e,h.symbol=a.id,r=s=await this.spotV1PrivateGetOrder(this.extend(h,i));else throw new n.NotSupported(this.id+" fetchOrder only support spot & swap markets");return this.parseOrder(r,a)}async fetchClosedOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e);if(!r.spot)throw new n.NotSupported(this.id+" fetchClosedOrders only support spot markets");let a={symbol:r.id};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let o=await this.spotV1PrivateGetAllOrders(this.extend(a,s));return this.parseOrders(o,r,t,i)}async fetchOpenOrders(e,t,i,s={}){let r,a;if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let o=this.market(e),h={};if(o.swap)h.contractName=o.id,o.linear?r=await this.fapiV2PrivateGetOpenOrders(this.extend(h,s)):o.inverse&&(r=await this.dapiV2PrivateGetOpenOrders(this.extend(h,s))),a=this.safeList(r,"data",[]);else if(o.spot)h.symbol=o.id,a=r=await this.spotV1PrivateGetOpenOrders(this.extend(h,s));else throw new n.NotSupported(this.id+" fetchOpenOrders only support spot & swap markets");return this.parseOrders(a,o,t,i)}async cancelOrder(e,t,i={}){let s,r;if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let a=this.market(t),o=this.safeValue2(i,"origClientOrderId","clientOrderId");i=this.omit(i,["origClientOrderId","clientOrderId"]);let h={};if(void 0===o?h.orderId=e:a.swap?h.clientOrderId=o:h.origClientOrderId=o,a.swap)h.contractName=a.id,a.linear?s=await this.fapiV2PrivatePostCancel(this.extend(h,i)):a.inverse&&(s=await this.dapiV2PrivatePostCancel(this.extend(h,i))),r=this.safeDict(s,"data",{});else if(a.spot)h.symbol=a.id,r=s=await this.spotV1PrivateDeleteOrder(this.extend(h,i));else throw new n.NotSupported(this.id+" cancelOrder only support spot & swap markets");return this.parseOrder(r,a)}async cancelAllOrders(e,t={}){let i,s;await this.loadMarkets();let r=this.market(e);if(r.swap){let e={contractName:r.id};r.linear?i=await this.fapiV2PrivatePostAllOpenOrders(this.extend(e,t)):r.inverse&&(i=await this.dapiV2PrivatePostAllOpenOrders(this.extend(e,t))),s=this.safeList(i,"data",[])}else throw new n.NotSupported(this.id+" cancelAllOrders only support future markets");return this.parseOrders(s,r)}async fetchMyTrades(e,t,i,s={}){let r,a;if(await this.loadMarkets(),void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");let o=this.market(e),h={};if(void 0!==t&&(h.startTime=t),void 0!==i&&(i>1e3&&(i=1e3),h.limit=i),o.swap)h.contractName=o.id,o.linear?r=await this.fapiV2PrivateGetMyTrades(this.extend(h,s)):o.inverse&&(r=await this.dapiV2PrivateGetMyTrades(this.extend(h,s))),a=this.safeList(r,"data",[]);else if(o.spot)h.symbol=o.id,a=r=await this.spotV2PrivateGetMyTrades(this.extend(h,s));else throw new n.NotSupported(this.id+" fetchMyTrades only support spot & swap markets");return this.parseTrades(a,o,t,i)}async fetchDeposits(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchDeposits() requires a code argument");await this.loadMarkets();let r=this.currency(e),a={coin:r.id,status:1};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let o=await this.spotV1PrivateGetDepositHistory(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i)}async fetchWithdrawals(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchWithdrawals() requires a code argument");await this.loadMarkets();let r=this.currency(e),a={coin:r.id,status:5};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let o=await this.spotV1PrivateGetWithdrawHistory(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r)}parseTransactionStatusByType(e,t){let i=this.safeDict({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",5:"ok",6:"canceled"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t){let i,s,r,a;let n=this.safeString2(e,"id","withdrawId"),o=this.safeString(e,"tagType"),h=this.safeString(e,"addressTo"),d=this.safeString(e,"addressFrom");if(void 0!==o){if(void 0!==h){let e=h.split("_");h=this.safeString(e,0),i=this.safeString(e,1)}if(void 0!==d){let e=d.split("_");d=this.safeString(e,0),s=this.safeString(e,1)}}let l=this.safeString(e,"txid"),c=this.safeInteger(e,"createdAt"),u=this.safeInteger(e,"updatedAt"),f="payAmount"in e,p="ctime"in e,m=f||p?"withdrawal":"deposit",g=this.parseTransactionStatusByType(this.safeString(e,"status"),m),y=this.safeNumber(e,"amount"),v=this.safeString2(e,"symbol","coin");if(void 0!==v){let e=v.split("_");v=this.safeString(e,0);let t=this.safeString(e,1);void 0!==t&&(r=t.toUpperCase())}let b=this.safeCurrencyCode(v,t),w=this.safeNumber(e,"fee");return void 0!==w&&(a={currency:b,cost:w}),{info:e,id:n,txid:l,timestamp:c,datetime:this.iso8601(c),network:r,address:h,addressTo:h,addressFrom:d,tag:i,tagTo:i,tagFrom:s,type:m,amount:y,currency:b,status:g,updated:u,internal:!1,comment:void 0,fee:a}}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let n=this.currency(e),o={coin:n.id,amount:t,addressTo:i};[a,r]=this.handleNetworkCodeAndParams(r),void 0!==a&&(o.chainName=this.networkCodeToId(a)),void 0!==s&&(o.tag=s);let h=await this.spotV1PrivatePostWithdrawCommit(this.extend(o,r)),d=this.safeDict(h,"data",{});return this.parseTransaction(d,n)}parseDepositWithdrawFee(e,t){let i=this.safeList(e,"chainDetail",[]),s=i.length,r={info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}};if(0!==s)for(let e=0;e<s;e++){let a=i[e],n=this.safeString(a,"chain"),o=this.safeString(t,"code"),h=this.networkIdToCode(n,o);r.networks[h]={deposit:{fee:void 0,percentage:void 0},withdraw:{fee:this.safeNumber(a,"withdrawFee"),percentage:!1}},1===s&&(r.withdraw.fee=this.safeNumber(a,"withdrawFee"),r.withdraw.percentage=!1)}return r}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.spotV1PublicGetExchangeInfo(t),s=this.safeList(i,"coins");return this.parseDepositWithdrawFees(s,e,"coin")}parseTransfer(e,t){let i,s;let r=this.safeString(e,"transferType");if(void 0!==r){let e=r.split("_to_");i=this.safeString(e,0),s=this.safeString(e,1)}let a=this.safeInteger(e,"ctime");return{info:e,id:void 0,timestamp:a,datetime:this.iso8601(a),currency:this.safeString(t,"code"),amount:this.safeNumber(e,"amount"),fromAccount:i,toAccount:s,status:"ok"}}async fetchTransfers(e,t,i,s={}){let r;await this.loadMarkets();let a={transferType:this.safeString2(s,"type","transferType")};void 0!==e&&(r=this.currency(e),a.coinSymbol=r.id),void 0!==t&&(a.beginTime=t),void 0!==i&&(i>200&&(i=200),a.limit=i);let n=this.safeInteger(s,"until");void 0!==n&&(s=this.omit(s,"until"),a.endTime=n);let o=await this.fapiV2PrivateGetFuturesTransferHistory(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransfers(h,r,t,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n=this.safeDict(this.options,"accountsByType",{}),o=this.safeString(n,i,i),h=this.safeString(n,s,s),d={coinSymbol:a.id,amount:this.currencyToPrecision(e,t),transferType:o+"_to_"+h},l=await this.fapiV2PrivatePostFuturesTransfer(this.extend(d,r)),c=this.safeDict(l,"data",{});return this.parseTransfer(c,a)}async setLeverage(e,t,i={}){let s;if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new n.BadRequest(this.id+" leverage should be between 1 and 125");await this.loadMarkets();let r=this.market(t),a={contractName:r.id,leverage:e};if(!r.swap)throw new n.NotSupported(this.id+" setLeverage only support swap markets");return r.linear?s=await this.fapiV2PrivatePostLevelEdit(this.extend(a,i)):r.inverse&&(s=await this.dapiV2PrivatePostLevelEdit(this.extend(a,i))),s}parseMarginModification(e,t){return{info:e,symbol:t.symbol,type:void 0,marginMode:"isolated",amount:void 0,total:void 0,code:void 0,status:void 0,timestamp:void 0,datetime:void 0}}async setMargin(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e);if(!r.swap)throw new n.NotSupported(this.id+" setMargin only support swap markets");let a={contractName:r.id,amount:this.parseToNumeric(t)};return r.linear?s=await this.fapiV2PrivatePostPositionMargin(this.extend(a,i)):r.inverse&&(s=await this.dapiV2PrivatePostPositionMargin(this.extend(a,i))),this.parseMarginModification(s,r)}sign(e,t="public",i="GET",s={},r,a){let n;let o=this.safeString(t,0),h=this.safeString(t,1),d=this.safeString(t,2);if(n=(n="api"===o&&"kline"===h||"open"===o&&e.indexOf("listenKey")>=0?this.urls.api[o]:this.urls.api[o]+"/"+h)+"/"+this.implodeParams(e,s),s=this.omit(s,this.extractParams(e)),"private"===d){this.checkRequiredCredentials();let t=this.safeInteger(this.options,"recvWindow",5e3);if("spot"===o||"open"===o){let e=this.urlencode(this.extend({timestamp:this.nonce(),recvWindow:t},s)),o=this.hmac(this.encode(e),this.encode(this.secret),l.s);e+="&signature="+o,r={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i?n+="?"+e:(a=e,r["Content-Type"]="application/x-www-form-urlencoded")}else{let d;let c=this.nonce().toString();"fapi"===o?d="/fapi":"dapi"===o&&(d="/dapi");let u=c+i+(d=d+"/"+h+"/"+e);if("GET"===i){Object.keys(s).length>0&&(u+="?"+this.urlencode(s));let e=this.hmac(this.encode(u),this.encode(this.secret),l.s);r={"X-CH-APIKEY":this.apiKey,"X-CH-SIGN":e,"X-CH-TS":c},n+="?"+this.urlencode(s)}else{let e=this.extend({recvWindow:t},s);u+=a=this.json(e);let i=this.hmac(this.encode(u),this.encode(this.secret),l.s);r={"Content-Type":"application/json","X-CH-APIKEY":this.apiKey,"X-CH-SIGN":i,"X-CH-TS":c}}}}else Object.keys(s).length&&(n+="?"+this.urlencode(s));return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o,h,d,l){if(418===e||429===e)throw new n.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+o);if(e>=400){if(o.indexOf("Price * QTY is zero or less")>=0)throw new n.InvalidOrder(this.id+" order cost = amount * price is zero or less "+o);if(o.indexOf("LOT_SIZE")>=0)throw new n.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+o);if(o.indexOf("PRICE_FILTER")>=0)throw new n.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid float value in general, use this.priceToPrecision (symbol, amount) "+o)}if(void 0===h)return;let c=this.safeBool(h,"success",!0);if(!c){let e;let t=this.safeString(h,"msg");if(void 0!==t){try{e=JSON.parse(t)}catch(t){e=void 0}void 0!==e&&(h=e)}}let u=this.safeString(h,"msg");void 0!==u&&(this.throwExactlyMatchedException(this.exceptions.exact,u,this.id+" "+u),this.throwBroadlyMatchedException(this.exceptions.broad,u,this.id+" "+u));let f=this.safeString(h,"code");if(void 0!==f){if("200"===f||r.Y.stringEquals(f,"0"))return;if("-2015"===f&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new n.DDoSProtection(this.id+" temporary banned: "+o);let e=this.id+" "+o;throw this.throwExactlyMatchedException(this.exceptions.exact,f,e),new n.ExchangeError(e)}if(!c)throw new n.ExchangeError(this.id+" "+o)}calculateRateLimiterCost(e,t,i,s,r={}){if("noSymbol"in r&&!("symbol"in s))return r.noSymbol;if("byLimit"in r&&"limit"in s){let e=s.limit,t=r.byLimit;for(let i=0;i<t.length;i++){let s=t[i];if(e<=s[0])return s[1]}}return this.safeValue(r,"cost",1)}}class ec extends s.k{}let eu=ec;class ef extends eu{describe(){return this.deepExtend(super.describe(),{id:"bitso",name:"Bitso",countries:["MX"],rateLimit:2e3,version:"v3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://github.com/user-attachments/assets/178c8e56-9054-4107-b192-5e5053d4f975",api:{rest:"https://bitso.com/api"},test:{rest:"https://stage.bitso.com/api"},www:"https://bitso.com",doc:"https://bitso.com/api_info",fees:"https://bitso.com/fees",referral:"https://bitso.com/?ref=itej"},precisionMode:d.kb,options:{precision:{XRP:1e-6,MXN:.01,TUSD:.01},defaultPrecision:1e-8,networks:{TRC20:"trx",ERC20:"erc20",BEP20:"bsc",BEP2:"bep2"}},timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","4h":"14400","12h":"43200","1d":"86400","1w":"604800"},api:{public:{get:["available_books","ticker","order_book","trades","ohlc"]},private:{get:["account_status","balance","fees","fundings","fundings/{fid}","funding_destination","kyc_documents","ledger","ledger/trades","ledger/fees","ledger/fundings","ledger/withdrawals","mx_bank_codes","open_orders","order_trades/{oid}","orders/{oid}","user_trades","user_trades/{tid}","withdrawals/","withdrawals/{wid}"],post:["bitcoin_withdrawal","debit_card_withdrawal","ether_withdrawal","orders","phone_number","phone_verification","phone_withdrawal","spei_withdrawal","ripple_withdrawal","bcash_withdrawal","litecoin_withdrawal"],delete:["orders","orders/{oid}","orders/all"]}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:void 0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:500,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:300}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{"0201":n.AuthenticationError,104:n.InvalidNonce,"0304":n.BadRequest}})}async fetchLedger(e,t,i,s={}){let r={};void 0!==i&&(r.limit=i);let a=await this.privateGetLedger(this.extend(r,s)),n=this.safeValue(a,"payload",[]),o=this.safeCurrency(e);return this.parseLedger(n,o,t,i)}parseLedgerEntryType(e){return this.safeString({funding:"transaction",withdrawal:"transaction",trade:"trade",fee:"fee"},e,e)}parseLedgerEntry(e,t){let i,s;let a=this.safeString(e,"operation"),n=this.parseLedgerEntryType(a),o=this.safeValue(e,"balance_updates",[]),h=this.safeValue(o,0,{}),d=this.safeString(h,"amount"),l=this.safeString(h,"currency"),c=this.safeCurrencyCode(l,t);t=this.safeCurrency(l,t);let u=this.safeValue(e,"details",{}),f=this.safeString2(u,"fid","wid");void 0===f&&(f=this.safeString(u,"tid")),"funding"===a?i="in":"withdrawal"===a?i="out":"trade"===a?i=void 0:"fee"===a&&(i="out",s={cost:r.Y.stringAbs(d),currency:t});let p=this.parse8601(this.safeString(e,"created_at"));return this.safeLedgerEntry({info:e,id:this.safeString(e,"eid"),direction:i,account:void 0,referenceId:f,referenceAccount:void 0,type:n,currency:c,amount:d,timestamp:p,datetime:this.iso8601(p),before:void 0,after:void 0,status:"ok",fee:s},t)}async fetchMarkets(e={}){let t=await this.publicGetAvailableBooks(e),i=this.safeValue(t,"payload",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],a=this.safeString(t,"book"),[n,o]=a.split("_"),h=n.toUpperCase(),d=o.toUpperCase();h=this.safeCurrencyCode(h),d=this.safeCurrencyCode(d);let l=this.safeValue(t,"fees",{}),c=this.safeValue(l,"flat_rate",{}),u=this.safeString(c,"taker"),f=this.safeString(c,"maker"),p=this.parseNumber(r.Y.stringDiv(u,"100")),m=this.parseNumber(r.Y.stringDiv(f,"100")),g=this.safeValue(l,"structure",[]),y={taker:p,maker:m,percentage:!0,tierBased:!0},v=[],b=[];for(let e=0;e<g.length;e++){let t=g[e],i=this.safeNumber(t,"volume"),s=this.safeNumber(t,"taker"),r=this.safeNumber(t,"maker");v.push([i,s]),b.push([i,r]),0===e&&(y.taker=s,y.maker=r)}let w={taker:v,maker:b};y.tiers=w;let k=this.safeNumber(this.options.precision,d,this.options.defaultPrecision);s.push(this.extend({id:a,symbol:h+"/"+d,base:h,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:p,maker:m,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(this.options.precision,h,this.options.defaultPrecision),price:this.safeNumber(t,"tick_size",k)},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minimum_amount"),max:this.safeNumber(t,"maximum_amount")},price:{min:this.safeNumber(t,"minimum_price"),max:this.safeNumber(t,"maximum_price")},cost:{min:this.safeNumber(t,"minimum_value"),max:this.safeNumber(t,"maximum_value")}},created:void 0,info:t},y))}return s}parseBalance(e){let t=this.safeValue(e,"payload",{}),i=this.safeValue(t,"balances",[]),s={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"available"),n.used=this.safeString(t,"locked"),n.total=this.safeString(t,"total"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={book:s.id},a=await this.publicGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"payload"),o=this.parse8601(this.safeString(n,"updated_at"));return this.parseOrderBook(n,s.symbol,o,"bids","asks","price","amount")}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"vwap"),n=this.safeString(e,"volume"),o=r.Y.stringMul(n,a),h=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:a,open:void 0,close:h,last:h,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={book:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeValue(r,"payload");return this.parseTicker(a,i)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={book:a.id,time_bucket:this.safeString(this.timeframes,t,t)};if(void 0!==i){if(n.start=i,void 0!==s){let e=this.parseTimeframe(t);n.end=this.sum(i,e*s*1e3)}}else if(void 0!==s){let e=this.milliseconds();n.end=e,n.start=e-1e3*this.parseTimeframe(t)*s}let o=await this.publicGetOhlc(this.extend(n,r)),h=this.safeList(o,"payload",[]);return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"bucket_start_time"),this.safeNumber(e,"first_rate"),this.safeNumber(e,"max_rate"),this.safeNumber(e,"min_rate"),this.safeNumber(e,"last_rate"),this.safeNumber(e,"volume")]}parseTrade(e,t){let i,s;let a=this.parse8601(this.safeString(e,"created_at")),n=this.safeString(e,"book"),o=this.safeSymbol(n,t,"_"),h=this.safeString(e,"side"),d=this.safeString(e,"maker_side");void 0!==h?i=h===d?"maker":"taker":h="buy"===d?"sell":"buy";let l=this.safeString2(e,"amount","major");void 0!==l&&(l=r.Y.stringAbs(l));let c=this.safeString(e,"fees_amount");if(void 0!==c){let t=this.safeString(e,"fees_currency");s={cost:c,currency:this.safeCurrencyCode(t)}}let u=this.safeString(e,"minor");void 0!==u&&(u=r.Y.stringAbs(u));let f=this.safeString(e,"price"),p=this.safeString(e,"oid"),m=this.safeString(e,"tid");return this.safeTrade({id:m,info:e,timestamp:a,datetime:this.iso8601(a),symbol:o,order:p,type:void 0,side:h,takerOrMaker:i,price:f,amount:l,cost:u,fee:s},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={book:r.id},n=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(n.payload,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetFees(e),i=this.safeValue(t,"payload",{}),s=this.safeValue(i,"fees",[]),r={};for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"book"),a=this.safeSymbol(i,void 0,"_");r[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_decimal"),taker:this.safeNumber(t,"taker_fee_decimal"),percentage:!0,tierBased:!0}}return r}async fetchMyTrades(e,t,i=25,s={}){await this.loadMarkets();let r=this.market(e),a="marker"in s;if(void 0!==t&&!a)throw new n.ExchangeError(this.id+" fetchMyTrades() does not support fetching trades starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");a&&(s=this.extend(s,{marker:parseInt(s.marker)}));let o={book:r.id,limit:i},h=await this.privateGetUserTrades(this.extend(o,s));return this.parseTrades(h.payload,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={book:n.id,side:i,type:t,major:this.amountToPrecision(n.symbol,s)};"limit"===t&&(o.price=this.priceToPrecision(n.symbol,r));let h=await this.privatePostOrders(this.extend(o,a)),d=this.safeString(h.payload,"oid");return this.safeOrder({info:h,id:d},n)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteOrdersOid(this.extend({oid:e},i)),r=this.safeList(s,"payload",[]),a=this.safeString(r,0);return this.safeOrder({info:s,id:a})}async cancelOrders(e,t,i={}){let s;if(!Array.isArray(e))throw new n.ArgumentsRequired(this.id+" cancelOrders() ids argument should be an array");void 0!==t&&(s=this.market(t));let r=e.join(","),a=await this.privateDeleteOrders(this.extend({oids:r},i)),o=this.safeValue(a,"payload",[]),h=[];for(let e=0;e<o.length;e++){let t=o[e];h.push(this.parseOrder(t,s))}return h}async cancelAllOrders(e,t={}){if(void 0!==e)throw new n.NotSupported(this.id+" cancelAllOrders() deletes all orders for user, it does not support filtering by symbol.");let i=await this.privateDeleteOrdersAll(t),s=this.safeValue(i,"payload",[]),r=[];for(let e=0;e<s.length;e++){let t=this.parseOrder(s[e]);r.push(t)}return r}parseOrderStatus(e){return this.safeString({"partial-fill":"open","partially filled":"open",queued:"open",completed:"closed"},e,e)}parseOrder(e,t){let i;i="string"==typeof e?e:this.safeString(e,"oid");let s=this.safeString(e,"side"),r=this.parseOrderStatus(this.safeString(e,"status")),a=this.safeString(e,"book"),n=this.safeSymbol(a,t,"_"),o=this.safeString(e,"type"),h=this.parse8601(this.safeString(e,"created_at")),d=this.safeString(e,"price"),l=this.safeString(e,"original_amount"),c=this.safeString(e,"unfilled_amount"),u=this.safeString(e,"client_id");return this.safeOrder({info:e,id:i,clientOrderId:u,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,symbol:n,type:o,timeInForce:void 0,postOnly:void 0,side:s,price:d,triggerPrice:void 0,amount:l,cost:void 0,remaining:c,filled:void 0,status:r,fee:void 0,average:void 0,trades:void 0},t)}async fetchOpenOrders(e,t,i=25,s={}){await this.loadMarkets();let r=this.market(e),a="marker"in s;if(void 0!==t&&!a)throw new n.ExchangeError(this.id+" fetchOpenOrders() does not support fetching orders starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");a&&(s=this.extend(s,{marker:parseInt(s.marker)}));let o={book:r.id,limit:i},h=await this.privateGetOpenOrders(this.extend(o,s));return this.parseOrders(h.payload,r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersOid({oid:e}),r=this.safeValue(s,"payload");if(Array.isArray(r)&&1===s.payload.length)return this.parseOrder(r[0]);throw new n.OrderNotFound(this.id+": The order "+e+" not found.")}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=this.market(t),n=await this.privateGetOrderTradesOid(this.extend({oid:e},r));return this.parseTrades(n.payload,a)}async fetchDeposit(e,t,i={}){await this.loadMarkets();let s=await this.privateGetFundingsFid(this.extend({fid:e},i)),r=this.safeValue(s,"payload",[]),a=this.safeDict(r,0,{});return this.parseTransaction(a)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a=await this.privateGetFundings(s),n=this.safeList(a,"payload",[]);return this.parseTransactions(n,r,t,i,s)}async fetchDepositAddress(e,t={}){let i;await this.loadMarkets();let s={fund_currency:this.currency(e).id},r=await this.privateGetFundingDestination(this.extend(s,t)),a=this.safeString(r.payload,"account_identifier");if(a.indexOf("?dt=")>=0){let e=a.split("?dt=");a=this.safeString(e,0),i=this.safeString(e,1)}return this.checkAddress(a),{info:r,currency:e,network:void 0,address:a,tag:i}}async fetchTransactionFees(e,t={}){await this.loadMarkets();let i=await this.privateGetFees(t),s={},r=this.safeValue(i,"payload",{}),a=this.safeValue(r,"deposit_fees",[]);for(let t=0;t<a.length;t++){let i=a[t],r=this.safeString(i,"currency"),n=this.safeCurrencyCode(r);(void 0===e||this.inArray(n,e))&&(s[n]={deposit:this.safeNumber(i,"fee"),withdraw:void 0,info:{deposit:i,withdraw:void 0}})}let n=this.safeValue(r,"withdrawal_fees",[]),o=Object.keys(n);for(let t=0;t<o.length;t++){let i=o[t],r=this.safeCurrencyCode(i);(void 0===e||this.inArray(r,e))&&(s[r]={deposit:this.safeValue(s[r],"deposit"),withdraw:this.safeNumber(n,i),info:{deposit:this.safeValue(s[r].info,"deposit"),withdraw:this.safeNumber(n,i)}})}return s}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.privateGetFees(t),s=this.safeList(i,"payload",[]);return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t,i){let s={},r=this.safeValue(e,"deposit_fees",[]),a=this.safeValue(e,"withdrawal_fees",[]);for(let e=0;e<r.length;e++){let i=r[e],a=this.safeString(i,"currency"),n=this.safeCurrencyCode(a);(void 0===t||n in t)&&(s[n]={deposit:{fee:this.safeNumber(i,"fee"),percentage:!this.safeValue(i,"is_fixed")},withdraw:{fee:void 0,percentage:void 0},networks:{},info:i})}let n=Object.keys(a);for(let e=0;e<n.length;e++){let i=n[e],r=this.safeCurrencyCode(i);if(void 0===t||r in t){let e=this.parseNumber(a[i]);void 0===this.safeValue(s,r)&&(s[r]=this.depositWithdrawFee({})),s[r].withdraw.fee=e,s[r].info[r]=e}}return s}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a={BTC:"Bitcoin",ETH:"Ether",XRP:"Ripple",BCH:"Bcash",LTC:"Litecoin"},o=this.currency(e),h=e in a?a[e]:void 0;if(void 0===h)throw new n.ExchangeError(this.id+" not valid withdraw coin: "+e);let d={amount:t,address:i,destination_tag:s},l=await this["privatePost"+h+"Withdrawal"](this.extend(d,r)),c=this.safeValue(l,"payload",[]),u=this.safeDict(c,0);return this.parseTransaction(u,o)}parseTransaction(e,t){let i=this.safeString2(e,"currency","asset");t=this.safeCurrency(i,t);let s=this.safeValue(e,"details",{}),r=this.safeString(e,"created_at"),a=this.safeString(s,"withdrawal_address"),n=this.safeString(s,"receiving_address"),o=this.safeString2(e,"network","method"),h=this.safeString(e,"status"),d=this.safeString(e,"wid"),l=this.networkIdToCode(o),c=void 0!==l?l.toUpperCase():void 0;return{id:this.safeString2(e,"wid","fid"),txid:this.safeString(s,"tx_hash"),timestamp:this.parse8601(r),datetime:r,network:c,addressFrom:n,address:void 0!==a?a:n,addressTo:a,amount:this.safeNumber(e,"amount"),type:void 0===d?"deposit":"withdrawal",currency:this.safeCurrencyCode(i,t),status:this.parseTransactionStatus(h),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,internal:void 0,fee:void 0,info:e}}parseTransactionStatus(e){return this.safeString({pending:"pending",in_progress:"pending",complete:"ok",failed:"failed"},e,e)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.version+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));("GET"===i||"DELETE"===i)&&Object.keys(o).length&&(n+="?"+this.urlencode(o));let h=this.urls.api.rest+n;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=[e,i,n="/api"+n].join("");"GET"!==i&&"DELETE"!==i&&Object.keys(o).length&&(t+=a=this.json(o));let s=this.hmac(this.encode(t),this.encode(this.secret),l.s);r={Authorization:"Bitso "+(this.apiKey+":"+e)+":"+s}}return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&"success"in o){let e=this.safeBool(o,"success",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){let e=this.id+" "+this.json(o),t=this.safeValue(o,"error");if(void 0===t)throw new n.ExchangeError(e);let i=this.safeString(t,"code");throw this.throwExactlyMatchedException(this.exceptions,i,e),new n.ExchangeError(e)}}}}class ep extends s.k{}let em=ep;class eg extends em{describe(){return this.deepExtend(super.describe(),{id:"bitstamp",name:"Bitstamp",countries:["GB"],rateLimit:75,version:"v2",userAgent:this.userAgents.chrome,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:"emulated",fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},urls:{logo:"https://github.com/user-attachments/assets/d5480572-1fee-43cb-b900-d38c522d0024",api:{public:"https://www.bitstamp.net/api",private:"https://www.bitstamp.net/api"},www:"https://www.bitstamp.net",doc:"https://www.bitstamp.net/api"},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"259200"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:{"ohlc/{pair}/":1,"order_book/{pair}/":1,"ticker/":1,"ticker_hour/{pair}/":1,"ticker/{pair}/":1,"transactions/{pair}/":1,"trading-pairs-info/":1,"currencies/":1,"eur_usd/":1,"travel_rule/vasps/":1}},private:{get:{"travel_rule/contacts/":1,"contacts/{contact_uuid}/":1,"earn/subscriptions/":1,"earn/transactions/":1},post:{"account_balances/":1,"account_balances/{currency}/":1,"balance/":1,"balance/{pair}/":1,"bch_withdrawal/":1,"bch_address/":1,"user_transactions/":1,"user_transactions/{pair}/":1,"crypto-transactions/":1,open_order:1,"open_orders/all/":1,"open_orders/{pair}/":1,"order_status/":1,"cancel_order/":1,"cancel_all_orders/":1,"cancel_all_orders/{pair}/":1,"buy/{pair}/":1,"buy/market/{pair}/":1,"buy/instant/{pair}/":1,"sell/{pair}/":1,"sell/market/{pair}/":1,"sell/instant/{pair}/":1,"transfer-to-main/":1,"transfer-from-main/":1,"my_trading_pairs/":1,"fees/trading/":1,"fees/trading/{market_symbol}":1,"fees/withdrawal/":1,"fees/withdrawal/{currency}/":1,"withdrawal-requests/":1,"withdrawal/open/":1,"withdrawal/status/":1,"withdrawal/cancel/":1,"liquidation_address/new/":1,"liquidation_address/info/":1,"btc_unconfirmed/":1,"websockets_token/":1,"btc_withdrawal/":1,"btc_address/":1,"ripple_withdrawal/":1,"ripple_address/":1,"ltc_withdrawal/":1,"ltc_address/":1,"eth_withdrawal/":1,"eth_address/":1,"xrp_withdrawal/":1,"xrp_address/":1,"xlm_withdrawal/":1,"xlm_address/":1,"pax_withdrawal/":1,"pax_address/":1,"link_withdrawal/":1,"link_address/":1,"usdc_withdrawal/":1,"usdc_address/":1,"omg_withdrawal/":1,"omg_address/":1,"dai_withdrawal/":1,"dai_address/":1,"knc_withdrawal/":1,"knc_address/":1,"mkr_withdrawal/":1,"mkr_address/":1,"zrx_withdrawal/":1,"zrx_address/":1,"gusd_withdrawal/":1,"gusd_address/":1,"aave_withdrawal/":1,"aave_address/":1,"bat_withdrawal/":1,"bat_address/":1,"uma_withdrawal/":1,"uma_address/":1,"snx_withdrawal/":1,"snx_address/":1,"uni_withdrawal/":1,"uni_address/":1,"yfi_withdrawal/":1,"yfi_address/":1,"audio_withdrawal/":1,"audio_address/":1,"crv_withdrawal/":1,"crv_address/":1,"algo_withdrawal/":1,"algo_address/":1,"comp_withdrawal/":1,"comp_address/":1,"grt_withdrawal/":1,"grt_address/":1,"usdt_withdrawal/":1,"usdt_address/":1,"eurt_withdrawal/":1,"eurt_address/":1,"matic_withdrawal/":1,"matic_address/":1,"sushi_withdrawal/":1,"sushi_address/":1,"chz_withdrawal/":1,"chz_address/":1,"enj_withdrawal/":1,"enj_address/":1,"alpha_withdrawal/":1,"alpha_address/":1,"ftt_withdrawal/":1,"ftt_address/":1,"storj_withdrawal/":1,"storj_address/":1,"axs_withdrawal/":1,"axs_address/":1,"sand_withdrawal/":1,"sand_address/":1,"hbar_withdrawal/":1,"hbar_address/":1,"rgt_withdrawal/":1,"rgt_address/":1,"fet_withdrawal/":1,"fet_address/":1,"skl_withdrawal/":1,"skl_address/":1,"cel_withdrawal/":1,"cel_address/":1,"sxp_withdrawal/":1,"sxp_address/":1,"ada_withdrawal/":1,"ada_address/":1,"slp_withdrawal/":1,"slp_address/":1,"ftm_withdrawal/":1,"ftm_address/":1,"perp_withdrawal/":1,"perp_address/":1,"dydx_withdrawal/":1,"dydx_address/":1,"gala_withdrawal/":1,"gala_address/":1,"shib_withdrawal/":1,"shib_address/":1,"amp_withdrawal/":1,"amp_address/":1,"sgb_withdrawal/":1,"sgb_address/":1,"avax_withdrawal/":1,"avax_address/":1,"wbtc_withdrawal/":1,"wbtc_address/":1,"ctsi_withdrawal/":1,"ctsi_address/":1,"cvx_withdrawal/":1,"cvx_address/":1,"imx_withdrawal/":1,"imx_address/":1,"nexo_withdrawal/":1,"nexo_address/":1,"ust_withdrawal/":1,"ust_address/":1,"ant_withdrawal/":1,"ant_address/":1,"gods_withdrawal/":1,"gods_address/":1,"rad_withdrawal/":1,"rad_address/":1,"band_withdrawal/":1,"band_address/":1,"inj_withdrawal/":1,"inj_address/":1,"rly_withdrawal/":1,"rly_address/":1,"rndr_withdrawal/":1,"rndr_address/":1,"vega_withdrawal/":1,"vega_address/":1,"1inch_withdrawal/":1,"1inch_address/":1,"ens_withdrawal/":1,"ens_address/":1,"mana_withdrawal/":1,"mana_address/":1,"lrc_withdrawal/":1,"lrc_address/":1,"ape_withdrawal/":1,"ape_address/":1,"mpl_withdrawal/":1,"mpl_address/":1,"euroc_withdrawal/":1,"euroc_address/":1,"sol_withdrawal/":1,"sol_address/":1,"dot_withdrawal/":1,"dot_address/":1,"near_withdrawal/":1,"near_address/":1,"doge_withdrawal/":1,"doge_address/":1,"flr_withdrawal/":1,"flr_address/":1,"dgld_withdrawal/":1,"dgld_address/":1,"ldo_withdrawal/":1,"ldo_address/":1,"travel_rule/contacts/":1,"earn/subscribe/":1,"earn/subscriptions/setting/":1,"earn/unsubscribe":1,"wecan_withdrawal/":1,"wecan_address/":1,"trac_withdrawal/":1,"trac_address/":1,"eurcv_withdrawal/":1,"eurcv_address/":1,"pyusd_withdrawal/":1,"pyusd_address/":1,"lmwr_withdrawal/":1,"lmwr_address/":1,"pepe_withdrawal/":1,"pepe_address/":1,"blur_withdrawal/":1,"blur_address/":1,"vext_withdrawal/":1,"vext_address/":1,"cspr_withdrawal/":1,"cspr_address/":1,"vchf_withdrawal/":1,"vchf_address/":1,"veur_withdrawal/":1,"veur_address/":1,"truf_withdrawal/":1,"truf_address/":1,"wif_withdrawal/":1,"wif_address/":1,"smt_withdrawal/":1,"smt_address/":1,"sui_withdrawal/":1,"sui_address/":1,"jup_withdrawal/":1,"jup_address/":1,"ondo_withdrawal/":1,"ondo_address/":1,"boba_withdrawal/":1,"boba_address/":1,"pyth_withdrawal/":1,"pyth_address/":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.004"),maker:this.parseNumber("0.004"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("10000"),this.parseNumber("0.003")],[this.parseNumber("100000"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("1500000"),this.parseNumber("0.0016")],[this.parseNumber("5000000"),this.parseNumber("0.0012")],[this.parseNumber("20000000"),this.parseNumber("0.001")],[this.parseNumber("50000000"),this.parseNumber("0.0008")],[this.parseNumber("100000000"),this.parseNumber("0.0006")],[this.parseNumber("250000000"),this.parseNumber("0.0005")],[this.parseNumber("1000000000"),this.parseNumber("0.0003")]],maker:[[this.parseNumber("0"),this.parseNumber("0.003")],[this.parseNumber("10000"),this.parseNumber("0.002")],[this.parseNumber("100000"),this.parseNumber("0.001")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1500000"),this.parseNumber("0.0006")],[this.parseNumber("5000000"),this.parseNumber("0.0003")],[this.parseNumber("20000000"),this.parseNumber("0.002")],[this.parseNumber("50000000"),this.parseNumber("0.0001")],[this.parseNumber("100000000"),this.parseNumber("0")],[this.parseNumber("250000000"),this.parseNumber("0")],[this.parseNumber("1000000000"),this.parseNumber("0")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{BTC:0,BCH:0,LTC:0,ETH:0,XRP:0,XLM:0,PAX:0,USD:7.5,EUR:0}}},precisionMode:d.kb,commonCurrencies:{UST:"USTC"},options:{networksById:{"bitcoin-cash":"BCH",bitcoin:"BTC",ethereum:"ERC20",litecoin:"LTC",stellar:"XLM",xrpl:"XRP",tron:"TRC20",algorand:"ALGO",flare:"FLR",hedera:"HBAR",cardana:"ADA",songbird:"FLR","avalanche-c-chain":"AVAX",solana:"SOL",polkadot:"DOT",near:"NEAR",doge:"DOGE",sui:"SUI",casper:"CSRP"}},exceptions:{exact:{"No permission found":n.PermissionDenied,"API key not found":n.AuthenticationError,"IP address not allowed":n.PermissionDenied,"Invalid nonce":n.InvalidNonce,"Invalid signature":n.AuthenticationError,"Authentication failed":n.AuthenticationError,"Missing key, signature and nonce parameters":n.AuthenticationError,"Wrong API key format":n.AuthenticationError,"Your account is frozen":n.PermissionDenied,"Please update your profile with your FATCA information, before using API.":n.PermissionDenied,"Order not found.":n.OrderNotFound,"Price is more than 20% below market price.":n.InvalidOrder,"Bitstamp.net is under scheduled maintenance. We'll be back soon.":n.OnMaintenance,"Order could not be placed.":n.ExchangeNotAvailable,"Invalid offset.":n.BadRequest},broad:{"Minimum order size is":n.InvalidOrder,"Check your account balance for details.":n.InsufficientFunds,"Ensure this value has at least":n.InvalidAddress,"Ensure that there are no more than":n.InvalidOrder}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!0},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:void 0,untilDays:30},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}}})}async fetchMarkets(e={}){let t=await this.fetchMarketsFromCache(e),i=[];for(let e=0;e<t.length;e++){let s=t[e],[r,a]=this.safeString(s,"name").split("/"),n=r.toLowerCase(),o=a.toLowerCase();r=this.safeCurrencyCode(r),a=this.safeCurrencyCode(a);let h=this.safeString(s,"minimum_order").split(" "),d=this.safeString(s,"trading");i.push({id:this.safeString(s,"url_symbol"),marketId:n+"_"+o,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,future:!1,swap:!1,option:!1,active:"Enabled"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"base_decimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"counter_decimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(h,0),max:void 0}},created:void 0,info:s})}return i}constructCurrencyObject(e,t,i,s,r,a){let n="crypto",o=this.describe();this.isFiat(t)&&(n="fiat");let h=this.parseNumber(this.parsePrecision(this.numberToString(s)));return{id:e,code:t,info:a,type:n,name:i,active:!0,deposit:void 0,withdraw:void 0,fee:this.safeNumber(o.fees.funding.withdraw,t),precision:h,limits:{amount:{min:h,max:void 0},price:{min:h,max:void 0},cost:{min:r,max:void 0},withdraw:{min:void 0,max:void 0}},networks:{}}}async fetchMarketsFromCache(e={}){let t=this.safeValue(this.options,"fetchMarkets",{}),i=this.safeInteger(t,"timestamp"),s=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){let i=await this.publicGetTradingPairsInfo(e);this.options.fetchMarkets=this.extend(t,{response:i,timestamp:r})}return this.safeValue(this.options.fetchMarkets,"response")}async fetchCurrencies(e={}){let t=await this.fetchMarketsFromCache(e),i={};for(let e=0;e<t.length;e++){let s=t[e],[r,a]=this.safeString(s,"name").split("/"),n=r.toLowerCase(),o=a.toLowerCase();r=this.safeCurrencyCode(r),a=this.safeCurrencyCode(a);let[h,d]=this.safeString(s,"description").split(" / "),l=this.safeString(s,"minimum_order").split(" ")[0];if(!(r in i)){let e=this.safeInteger(s,"base_decimals");i[r]=this.constructCurrencyObject(n,r,h,e,void 0,s)}if(!(a in i)){let e=this.safeInteger(s,"counter_decimals");i[a]=this.constructCurrencyObject(o,a,d,e,this.parseNumber(l),s)}}return i}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id},a=await this.publicGetOrderBookPair(this.extend(r,i)),n=this.safeInteger(a,"microtimestamp"),o=this.parseToInt(n/1e3),h=this.parseOrderBook(a,s.symbol,o);return h.nonce=n,h}parseTicker(e,t){let i=this.safeString(e,"pair"),s=this.safeSymbol(i,t,void 0),a=this.safeTimestamp(e,"timestamp"),n=this.safeString(e,"vwap"),o=this.safeString(e,"volume"),h=r.Y.stringMul(o,n),d=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:a,datetime:this.iso8601(a),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:n,open:this.safeString(e,"open"),close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:h,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetTickerPair(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t);return this.parseTickers(i,e)}getCurrencyIdFromTransaction(e){let t=this.safeStringLower(e,"currency");if(void 0!==t)return t;let i=Object.keys(e=this.omit(e,["fee","price","datetime","type","status","id"]));for(let t=0;t<i.length;t++){let s=i[t];if(0>s.indexOf("_")){let t=this.safeInteger(e,s);if(void 0!==t&&0!==t)return s}}}getMarketFromTrade(e){let t=Object.keys(e=this.omit(e,["fee","price","datetime","tid","type","order_id","side"])),i=t.length;if(i>2)throw new n.ExchangeError(this.id+" getMarketFromTrade() too many keys: "+this.json(t)+" in the trade: "+this.json(e));if(2===i){let e=t[0]+t[1];if(e in this.markets_by_id||(e=t[1]+t[0])in this.markets_by_id)return this.safeMarket(e)}}parseTrade(e,t){let i,s,a,n,o;let h=this.safeString2(e,"id","tid"),d=this.safeString(e,"price"),l=this.safeString(e,"amount"),c=this.safeString(e,"order_id"),u=this.safeString(e,"cost");if(void 0===t){let i=Object.keys(e);for(let e=0;e<i.length;e++){let s=i[e];"order_id"!==s&&s.indexOf("_")>=0&&(a=s,t=this.safeMarket(a,t,"_"))}}void 0===t&&(t=this.getMarketFromTrade(e));let f=this.safeString(e,"fee"),p=t.quote,m=void 0!==a?a:t.marketId;d=this.safeString(e,m,d),l=this.safeString(e,t.baseId,l),u=this.safeString(e,t.quoteId,u),i=t.symbol;let g=this.safeString2(e,"date","datetime");return void 0!==g&&(n=g.indexOf(" ")>=0?this.parse8601(g):1e3*parseInt(g)),"id"in e?void 0!==l&&(r.Y.stringLt(l,"0")?(s="sell",l=r.Y.stringNeg(l)):s="buy"):s="1"===(s=this.safeString(e,"type"))?"sell":"0"===s?"buy":void 0,void 0!==u&&(u=r.Y.stringAbs(u)),void 0!==f&&(o={cost:f,currency:p}),this.safeTrade({id:h,info:e,timestamp:n,datetime:this.iso8601(n),symbol:i,order:c,type:void 0,side:s,takerOrMaker:void 0,price:d,amount:l,cost:u,fee:o},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id,time:"hour"},n=await this.publicGetTransactionsPair(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={pair:a.id,step:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t);if(void 0===s){if(void 0===i)n.limit=1e3;else{s=1e3;let e=this.parseToInt(i/1e3);n.start=e,n.end=this.sum(e,o*(s-1)),n.limit=s}}else{if(void 0!==i){let e=this.parseToInt(i/1e3);n.start=e,n.end=this.sum(e,o*(s-1))}n.limit=Math.min(s,1e3)}let h=await this.publicGetOhlcPair(this.extend(n,r)),d=this.safeValue(h,"data",{}),l=this.safeList(d,"ohlc",[]);return this.parseOHLCVs(l,a,t,i,s)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};void 0===e&&(e=[]);for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"reserved"),n.total=this.safeString(s,"total"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostAccountBalances(e);return this.parseBalance(t)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={market_symbol:i.id},r=await this.privatePostFeesTrading(this.extend(s,t)),a=this.indexBy(r,"currency_pair"),n=this.safeDict(a,i.id);return this.parseTradingFee(n,i)}parseTradingFee(e,t){let i=this.safeString(e,"market"),s=this.safeDict(e,"fees",{});return{info:e,symbol:this.safeSymbol(i,t),maker:this.safeNumber(s,"maker"),taker:this.safeNumber(s,"taker"),percentage:void 0,tierBased:void 0}}parseTradingFees(e){let t={info:e},i=this.symbols;for(let s=0;s<i.length;s++){let r=i[s],a=this.parseTradingFee(e[s]);t[r]=a}return t}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostFeesTrading(e);return this.parseTradingFees(t)}async fetchTransactionFees(e,t={}){await this.loadMarkets();let i=await this.privatePostFeesWithdrawal(t);return this.parseTransactionFees(i)}parseTransactionFees(e,t){let i={},s=this.indexBy(e,"currency"),r=Object.keys(s);for(let a=0;a<r.length;a++){let n=r[a],o=this.safeValue(e,a,{}),h=this.safeCurrencyCode(n);(void 0===t||this.inArray(h,t))&&(i[h]={withdraw_fee:this.safeNumber(o,"fee"),deposit:{},info:this.safeDict(s,n)})}return i}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.privatePostFeesWithdrawal(t),s=this.groupBy(i,"currency");return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFee(e,t){let i=this.depositWithdrawFee(e);for(let t=0;t<e.length;t++){let s=e[t],r=this.safeString(s,"network"),a=this.networkIdToCode(r),n=this.safeNumber(s,"fee");i.withdraw={fee:n,percentage:void 0},i.networks[a]={withdraw:{fee:n,percentage:void 0},deposit:{fee:void 0,percentage:void 0}}}return i}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets();let o=this.market(e),h={pair:o.id,amount:this.amountToPrecision(e,s)},d=this.safeString2(a,"client_order_id","clientOrderId");void 0!==d&&(h.client_order_id=d,a=this.omit(a,["clientOrderId"]));let l=this.capitalize(i);"market"===t?n="Buy"===l?await this.privatePostBuyMarketPair(this.extend(h,a)):await this.privatePostSellMarketPair(this.extend(h,a)):"instant"===t?n="Buy"===l?await this.privatePostBuyInstantPair(this.extend(h,a)):await this.privatePostSellInstantPair(this.extend(h,a)):(h.price=this.priceToPrecision(e,r),n="Buy"===l?await this.privatePostBuyPair(this.extend(h,a)):await this.privatePostSellPair(this.extend(h,a)));let c=this.parseOrder(n,o);return c.type=t,c}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostCancelOrder(this.extend({id:e},i));return this.parseOrder(s)}async cancelAllOrders(e,t={}){let i,s;await this.loadMarkets();let r={};void 0!==e?(i=this.market(e),r.pair=i.id,s=await this.privatePostCancelAllOrdersPair(this.extend(r,t))):s=await this.privatePostCancelAllOrders(this.extend(r,t));let a=this.safeList(s,"canceled");return this.parseOrders(a)}parseOrderStatus(e){return this.safeString({"In Queue":"open",Open:"open",Finished:"closed",Canceled:"canceled"},e,e)}async fetchOrderStatus(e,t,i={}){await this.loadMarkets();let s=this.safeValue2(i,"client_order_id","clientOrderId"),r={};void 0!==s?(r.client_order_id=s,i=this.omit(i,["client_order_id","clientOrderId"])):r.id=e;let a=await this.privatePostOrderStatus(this.extend(r,i));return this.parseOrderStatus(this.safeString(a,"status"))}async fetchOrder(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=this.safeValue2(i,"client_order_id","clientOrderId"),a={};void 0!==r?(a.client_order_id=r,i=this.omit(i,["client_order_id","clientOrderId"])):a.id=e;let n=await this.privatePostOrderStatus(this.extend(a,i));return this.parseOrder(n,s)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={},n="privatePostUserTransactions";void 0!==e&&(r=this.market(e),a.pair=r.id,n+="Pair"),void 0!==i&&(a.limit=i);let o=await this[n](this.extend(a,s)),h=this.filterBy(o,"type","2");return this.parseTrades(h,r,t,i)}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==i&&(a.limit=i);let n=await this.privatePostUserTransactions(this.extend(a,s));void 0!==e&&(r=this.currency(e));let o=this.filterByArray(n,"type",["0","1"],!1);return this.parseTransactions(o,r,t,i)}async fetchWithdrawals(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==t?r.timedelta=this.milliseconds()-t:r.timedelta=5e7;let a=await this.privatePostWithdrawalRequests(this.extend(r,s));return this.parseTransactions(a,void 0,t,i)}parseTransaction(e,t){let i,s,a,n;let o=this.parse8601(this.safeString(e,"datetime")),h=this.getCurrencyIdFromTransaction(e),d=this.safeCurrencyCode(h,t),l=this.safeString(e,"fee");"amount"in e?s=this.safeString(e,"amount"):void 0!==t?(s=this.safeString(e,t.id,s),i=t.code):void 0!==d&&void 0!==h&&(s=this.safeString(e,h,s),i=d),void 0!==s&&(s=r.Y.stringAbs(s));let c="ok";if("status"in e&&(c=this.parseTransactionStatus(this.safeString(e,"status"))),"type"in e){let t=this.safeString(e,"type");"0"===t?a="deposit":"1"===t&&(a="withdrawal")}else a="withdrawal";let u=this.safeString(e,"address");if(void 0!==u){let e=u.split("?dt=");e.length>1&&(u=e[0],n=e[1])}let f={currency:void 0,cost:void 0,rate:void 0};return void 0!==l&&(f={currency:i,cost:l,rate:void 0}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"transaction_id"),type:a,currency:d,network:void 0,amount:this.parseNumber(s),status:c,timestamp:o,datetime:this.iso8601(o),address:u,addressFrom:void 0,addressTo:u,tag:n,tagFrom:void 0,tagTo:n,updated:void 0,comment:void 0,internal:void 0,fee:f}}parseTransactionStatus(e){return this.safeString({0:"pending",1:"pending",2:"ok",3:"canceled",4:"failed"},e,e)}parseOrder(e,t){let i=this.safeString(e,"id"),s=this.safeString(e,"client_order_id"),r=this.safeString(e,"type");void 0!==r&&(r="1"===r?"sell":"buy");let a=this.parse8601(this.safeString(e,"datetime")),n=this.safeStringLower(e,"currency_pair"),o=this.safeSymbol(n,t,"/"),h=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"amount"),l=this.safeValue(e,"transactions",[]),c=this.safeString(e,"price");return this.safeOrder({id:i,clientOrderId:s,datetime:this.iso8601(a),timestamp:a,lastTradeTimestamp:void 0,status:h,symbol:o,type:void 0,timeInForce:void 0,postOnly:void 0,side:r,price:c,triggerPrice:void 0,cost:void 0,amount:d,filled:void 0,remaining:void 0,trades:l,fee:void 0,info:e,average:void 0},t)}parseLedgerEntryType(e){return this.safeString({0:"transaction",1:"transaction",2:"trade",14:"transfer"},e,e)}parseLedgerEntry(e,t){let i=this.parseLedgerEntryType(this.safeString(e,"type"));if("trade"===i){let s;let r=this.parseTrade(e),a=Object.keys(e);for(let e=0;e<a.length;e++)if(a[e].indexOf("_")>=0){let t=a[e].replace("_","");s=this.safeMarket(t,s)}void 0===s&&(s=this.getMarketFromTrade(e));let n="buy"===r.side?"in":"out";return this.safeLedgerEntry({info:e,id:r.id,timestamp:r.timestamp,datetime:r.datetime,direction:n,account:void 0,referenceId:r.order,referenceAccount:void 0,type:i,currency:s.base,amount:r.amount,before:void 0,after:void 0,status:"ok",fee:r.fee},t)}{let s;let a=this.parseTransaction(e,t);if("amount"in e){let t=this.safeString(e,"amount");s=r.Y.stringGt(t,"0")?"in":"out"}else if("currency"in a&&void 0!==a.currency){let i=this.safeString(a,"currency");t=this.currency(i);let n=this.safeString(e,t.id);s=r.Y.stringGt(n,"0")?"in":"out"}return this.safeLedgerEntry({info:e,id:a.id,timestamp:a.timestamp,datetime:a.datetime,direction:s,account:void 0,referenceId:a.txid,referenceAccount:void 0,type:i,currency:a.currency,amount:a.amount,before:void 0,after:void 0,status:a.status,fee:a.fee},t)}}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==i&&(a.limit=i);let n=await this.privatePostUserTransactions(this.extend(a,s));return void 0!==e&&(r=this.currency(e)),this.parseLedger(n,r,t,i)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privatePostOpenOrdersAll(s);return this.parseOrders(a,r,t,i,{status:"open",type:"limit"})}getCurrencyName(e){return e.toLowerCase()}isFiat(e){return"USD"===e||"EUR"===e||"GBP"===e}async fetchDepositAddress(e,t={}){if(this.isFiat(e))throw new n.NotSupported(this.id+" fiat fetchDepositAddress() for "+e+" is not supported!");let i=this.getCurrencyName(e),s="privatePost"+this.capitalize(i)+"Address",r=await this[s](t),a=this.safeString(r,"address"),o=this.safeString2(r,"memo_id","destination_tag");return this.checkAddress(a),{info:r,currency:e,network:void 0,address:a,tag:o}}async withdraw(e,t,i,s,r={}){let a,n;[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);let o={amount:t};if(this.isFiat(e))n="privatePostWithdrawalOpen",a=this.currency(e),o.iban=i,o.account_currency=a.id;else{let t=this.getCurrencyName(e);n="privatePost"+this.capitalize(t)+"Withdrawal","XRP"===e?void 0!==s&&(o.destination_tag=s):("XLM"===e||"HBAR"===e)&&void 0!==s&&(o.memo_id=s),o.address=i}let h=await this[n](this.extend(o,r));return this.parseTransaction(h,a)}async transfer(e,t,i,s,r={}){let a;await this.loadMarkets();let o=this.currency(e),h={amount:this.parseToNumeric(this.currencyToPrecision(e,t)),currency:o.id.toUpperCase()};if("main"===i)h.subAccount=s,a=await this.privatePostTransferFromMain(this.extend(h,r));else if("main"===s)h.subAccount=i,a=await this.privatePostTransferToMain(this.extend(h,r));else throw new n.BadRequest(this.id+" transfer() only supports from or to main");let d=this.parseTransfer(a,o);return d.amount=t,d.fromAccount=i,d.toAccount=s,d}parseTransfer(e,t){let i=this.safeString(e,"status");return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:t.code,amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return this.safeString({ok:"ok",error:"failed"},e,e)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/";n+=this.version+"/",n+=this.implodeParams(e,s);let o=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();let e="BITSTAMP "+this.apiKey,t=this.uuid(),s=this.milliseconds().toString(),h="";r={"X-Auth":e,"X-Auth-Nonce":t,"X-Auth-Timestamp":s,"X-Auth-Version":"v2"},"POST"===i&&(a=Object.keys(o).length?this.urlencode(o):this.urlencode({foo:"bar"}),h="application/x-www-form-urlencoded",r["Content-Type"]=h);let d=a||"",c=e+i+n.replace("https://","")+h+t+s+"v2"+d,u=this.hmac(this.encode(c),this.encode(this.secret),l.s);r["X-Auth-Signature"]=u}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"status"),c=this.safeValue(o,"error");if("error"===l||void 0!==c){let e=[];if("string"==typeof c)e.push(c);else if(void 0!==c){let t=Object.keys(c);for(let i=0;i<t.length;i++){let s=t[i],r=this.safeValue(c,s);Array.isArray(r)?e=this.arrayConcat(e,r):e.push(r)}}let t=this.safeValue(o,"reason",{});if("string"==typeof t)e.push(t);else{let i=this.safeValue(t,"__all__",[]);for(let t=0;t<i.length;t++)e.push(i[t])}if("API0005"===this.safeString(o,"code"))throw new n.AuthenticationError(this.id+" invalid signature, use the uid for the main account if you have subaccounts");let i=this.id+" "+a;for(let t=0;t<e.length;t++){let s=e[t];this.throwExactlyMatchedException(this.exceptions.exact,s,i),this.throwBroadlyMatchedException(this.exceptions.broad,s,i)}throw new n.ExchangeError(i)}}}class ey extends s.k{}let ev=ey;class eb extends ev{describe(){return this.deepExtend(super.describe(),{id:"bitteam",name:"BIT.TEAM",countries:["UK"],version:"v2.0.6",rateLimit:1,certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,borrowMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,deposit:!1,editOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!0,fetchClosedOrder:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!1,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!0,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!1,ws:!1},timeframes:{"1m":"1","5m":"5","15m":"15","1h":"60","1d":"1D"},urls:{logo:"https://github.com/user-attachments/assets/b41b5e0d-98e5-4bd3-8a6e-aeb230a4a135",api:{history:"https://history.bit.team",public:"https://bit.team",private:"https://bit.team"},www:"https://bit.team/",referral:"https://bit.team/auth/sign-up?ref=bitboy2023",doc:["https://bit.team/trade/api/documentation"]},api:{history:{get:{"api/tw/history/{pairName}/{resolution}":1}},public:{get:{"trade/api/asset":1,"trade/api/currencies":1,"trade/api/orderbooks/{symbol}":1,"trade/api/orders":1,"trade/api/pair/{name}":1,"trade/api/pairs":1,"trade/api/pairs/precisions":1,"trade/api/rates":1,"trade/api/trade/{id}":1,"trade/api/trades":1,"trade/api/ccxt/pairs":1,"trade/api/cmc/assets":1,"trade/api/cmc/orderbook/{pair}":1,"trade/api/cmc/summary":1,"trade/api/cmc/ticker":1,"trade/api/cmc/trades/{pair}":1}},private:{get:{"trade/api/ccxt/balance":1,"trade/api/ccxt/order/{id}":1,"trade/api/ccxt/ordersOfUser":1,"trade/api/ccxt/tradesOfUser":1,"trade/api/transactionsOfUser":1},post:{"trade/api/ccxt/cancel-all-order":1,"trade/api/ccxt/cancelorder":1,"trade/api/ccxt/ordercreate":1}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},precisionMode:d.kb,options:{networksById:{Ethereum:"ERC20",ethereum:"ERC20",Tron:"TRC20",tron:"TRC20",Binance:"BSC",binance:"BSC","Binance Smart Chain":"BSC",bscscan:"BSC",Bitcoin:"BTC",bitcoin:"BTC",Litecoin:"LTC",litecoin:"LTC",Polygon:"POLYGON",polygon:"POLYGON",PRIZM:"PRIZM",Decimal:"Decimal",ufobject:"ufobject",tonchain:"tonchain"},currenciesValuedInUsd:{USDT:!0,BUSD:!0}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:void 0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:100,trigger:!1,trailing:!1},fetchOrders:{marginMode:!0,limit:100,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:100,daysBack:void 0,daysBackCanceled:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{400002:n.BadSymbol,401e3:n.AuthenticationError,403002:n.BadRequest,404200:n.BadSymbol},broad:{"is not allowed":n.BadRequest,"Insufficient funds":n.InsufficientFunds,"Invalid request params input":n.BadRequest,"must be a number":n.BadRequest,"must be a string":n.BadRequest,"must be of type":n.BadRequest,"must be one of":n.BadRequest,"Order not found":n.OrderNotFound,"Pair with pair name":n.BadSymbol,pairName:n.BadSymbol,"Service Unavailable":n.ExchangeNotAvailable,"Symbol ":n.BadSymbol}}})}async fetchMarkets(e={}){let t=await this.publicGetTradeApiCcxtPairs(e),i=this.safeValue(t,"result",{}),s=this.safeValue(i,"pairs",[]);return this.parseMarkets(s)}parseMarket(e){let t;let i=this.safeString(e,"name"),s=this.safeInteger(e,"id"),r=i.split("_"),a=this.safeString(r,0),n=this.safeString(r,1),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.safeValue(e,"active"),l=this.safeString(e,"timeStart"),c=this.parse8601(l),u=this.safeValue(this.options,"currenciesValuedInUsd",{});if(this.safeBool(u,h,!1)){let i=this.safeValue(e,"settings",{});t=this.safeNumber(i,"limit_usd")}return this.safeMarketStructure({id:i,numericId:s,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"baseStep"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"quoteStep")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:t,max:void 0}},created:c,info:e})}async fetchCurrencies(e={}){let t=await this.publicGetTradeApiCurrencies(e),i=this.safeValue(t,"result",{}),s=this.safeValue(i,"currencies",[]),r=await this.publicGetTradeApiCmcAssets();r=this.indexBy(r,"unified_cryptoasset_id");let a={};for(let e=0;e<s.length;e++){let t;let i=s[e],n=this.safeString(i,"symbol"),o=this.safeInteger(i,"id"),h=this.safeCurrencyCode(n),d=this.safeBool(i,"active",!1),l=this.parseNumber(this.parsePrecision(this.safeString(i,"precision"))),c=this.safeValue(i,"txLimits",{}),u=this.safeString(c,"minWithdraw"),f=this.safeString(c,"maxWithdraw"),p=this.safeString(c,"minDeposit"),m=this.safeValue(c,"withdrawCommissionFixed",{}),g={},y=this.safeString(i,"blockChain");void 0!==y&&""!==y?(t=this.parseNumber(m),g[y]=t):g=m;let v=this.safeValue(r,o,{}),b=this.safeValue(v,"depositStatus"),w=this.safeValue(v,"withdrawStatus"),k=Object.keys(g),S={},O=this.parseNumber(this.parsePrecision(this.safeString(i,"decimals")));for(let e=0;e<k.length;e++){let t=k[e],s=this.networkIdToCode(t,h),r=this.safeNumber(g,t);S[s]={id:t,network:s,deposit:b,withdraw:w,active:d,fee:r,precision:O,limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.parseNumber(u),max:this.parseNumber(f)},deposit:{min:this.parseNumber(p),max:void 0}},info:i}}a[h]={id:n,numericId:o,code:h,name:h,info:i,active:d,deposit:b,withdraw:w,fee:t,precision:l,limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.parseNumber(u),max:this.parseNumber(f)},deposit:{min:this.parseNumber(p),max:void 0}},networks:S}}return a}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeString(this.timeframes,t,t),o={pairName:a.id,resolution:n},h=await this.historyGetApiTwHistoryPairNameResolution(this.extend(o,r)),d=this.safeValue(h,"result",{}),l=this.safeList(d,"data",[]);return this.parseOHLCVs(l,a,t,i,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={pair:this.market(e).id},r=await this.publicGetTradeApiCmcOrderbookPair(this.extend(s,i)),a=this.safeInteger(r,"timestamp");return this.parseOrderBook(r,e,a)}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={type:this.safeString(s,"type","all")};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetTradeApiCcxtOrdersOfUser(this.extend(a,s)),o=this.safeValue(n,"result",{}),h=this.safeList(o,"orders",[]);return this.parseOrders(h,r,t,i)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=await this.privateGetTradeApiCcxtOrderId(this.extend({id:e},i)),a=this.safeDict(r,"result");return this.parseOrder(a,s)}async fetchOpenOrders(e,t,i,s={}){return await this.loadMarkets(),await this.fetchOrders(e,t,i,this.extend({type:"active"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.loadMarkets(),await this.fetchOrders(e,t,i,this.extend({type:"closed"},s))}async fetchCanceledOrders(e,t,i,s={}){return await this.loadMarkets(),await this.fetchOrders(e,t,i,this.extend({type:"cancelled"},s))}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h={pairId:o.numericId.toString(),type:t,side:i,amount:this.amountToPrecision(e,s)};if("limit"===t){if(void 0===r)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for a "+t+" order");h.price=this.priceToPrecision(e,r)}let d=await this.privatePostTradeApiCcxtOrdercreate(this.extend(h,a)),l=this.safeDict(d,"result",{});return this.parseOrder(l,o)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostTradeApiCcxtCancelorder(this.extend({id:e},i)),r=this.safeDict(s,"result",{});return this.parseOrder(r)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e?(i=this.market(e),s.pairId=i.numericId.toString()):s.pairId="0";let r=await this.privatePostTradeApiCcxtCancelAllOrder(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parseOrders([a],i)}parseOrder(e,t){let i,s;let r=this.safeString(e,"id"),a=this.safeString(e,"pair");t=this.safeMarket(a,t);let n=this.safeString(e,"orderCid"),o=this.safeString(e,"createdAt");i=void 0!==o?this.parse8601(o):this.safeTimestamp(e,"timestamp");let h=this.safeString(e,"updatedAt"),d=this.parse8601(h),l=this.parseOrderStatus(this.safeString(e,"status")),c=this.parseOrderType(this.safeString(e,"type")),u=this.safeString(e,"side"),f=this.safeValue(e,"fee"),p=this.safeString(e,"price"),m=this.safeString(e,"quantity"),g=this.safeString(e,"executed");if(void 0!==f){let e=this.safeString(f,"amount"),t=this.safeString(f,"symbol");s={currency:this.safeCurrencyCode(t),cost:e,rate:void 0}}return this.safeOrder({id:r,clientOrderId:n,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,lastUpdateTimestamp:d,status:l,symbol:t.symbol,type:c,timeInForce:"GTC",side:u,price:p,triggerPrice:this.safeString(e,"stopPrice"),average:void 0,amount:m,cost:void 0,filled:g,remaining:void 0,fee:s,trades:void 0,info:e,postOnly:!1},t)}parseOrderStatus(e){return this.safeString({accepted:"open",executed:"closed",cancelled:"canceled",partiallyCancelled:"canceled",delete:"rejected",inactive:"rejected",executing:"open",created:"open"},e,e)}parseOrderType(e){return this.safeString({market:"market",limit:"limit"},e,e)}parseValueToPricision(e,t,i,s){let a=this.safeString(e,t),n=this.safeString(i,s);if(void 0===a||void 0===n)return;let o=this.parsePrecision(n);return r.Y.stringMul(a,o)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTradeApiCmcSummary(),s=[];Array.isArray(i)||(i=[]);for(let e=0;e<i.length;e++){let t=i[e],r=this.parseTicker(t);s.push(r)}return this.filterByArrayTickers(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={name:i.id},r=await this.publicGetTradeApiPairName(this.extend(s,t)),a=this.safeValue(r,"result",{}),n=this.safeDict(a,"pair",{});return this.parseTicker(n,i)}parseTicker(e,t){let i,s,r,a;let n=this.safeStringLower(e,"trading_pairs");t=this.safeMarket(n,t);let o=this.safeValue(e,"bids"),h=this.safeValue(e,"asks");if(void 0!==o&&Array.isArray(o)&&void 0!==h&&Array.isArray(h)){let e=this.safeValue(o,0,{});i=this.safeString(e,"price"),r=this.safeString(e,"quantity");let t=this.safeValue(h,0,{});s=this.safeString(t,"price"),a=this.safeString(t,"quantity")}else i=this.safeString(e,"highest_bid"),s=this.safeString(e,"lowest_ask");let d=this.safeString2(e,"volume24","base_volume"),l=this.safeString2(e,"quoteVolume24","quote_volume"),c=this.safeString2(e,"highPrice24","highest_price_24h"),u=this.safeString2(e,"lowPrice24","lowest_price_24h"),f=this.safeString2(e,"lastPrice","last_price"),p=this.safeString2(e,"change24","price_change_percent_24h");return this.safeTicker({symbol:t.symbol,timestamp:void 0,datetime:void 0,open:void 0,high:c,low:u,close:f,bid:i,bidVolume:r,ask:s,askVolume:a,vwap:void 0,previousClose:void 0,change:void 0,percentage:p,average:void 0,baseVolume:d,quoteVolume:l,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id},n=await this.publicGetTradeApiCmcTradesPair(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pairId=r.numericId),void 0!==i&&(a.limit=i);let n=await this.privateGetTradeApiCcxtTradesOfUser(this.extend(a,s)),o=this.safeValue(n,"result",{}),h=this.safeList(o,"trades",[]);return this.parseTrades(h,r,t,i)}parseTrade(e,t){let i,s;let a=this.safeString(e,"pair"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeString2(e,"id","trade_id"),h=this.safeString(e,"price"),d=this.safeString2(e,"quantity","base_volume"),l=this.safeString(e,"quote_volume"),c=this.safeString(e,"isCurrentSide"),u=this.safeString(e,"timestamp");void 0!==c&&(u=r.Y.stringMul(u,"1000"));let f=this.safeString2(e,"side","type");"maker"===c?("sell"===f?f="buy":"buy"===f&&(f="sell"),s=this.safeString(e,"makerOrderId"),i=this.safeValue(e,"feeMaker",{})):"taker"===c&&(s=this.safeString(e,"takerOrderId"),i=this.safeValue(e,"feeTaker",{}));let p=this.safeString(i,"symbol"),m=this.safeString(i,"amount"),g={currency:this.safeCurrencyCode(p),cost:m},y=this.parseToInt(u);return this.safeTrade({id:o,order:s,timestamp:y,datetime:this.iso8601(y),symbol:n,type:void 0,side:f,takerOrMaker:c,price:h,amount:d,cost:l,fee:g,info:e},t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetTradeApiCcxtBalance(e);return this.parseBalance(t)}parseBalance(e){let t=this.milliseconds(),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeValue(e,"result",{}),r=Object.keys(this.omit(s,["free","used","total"]));for(let e=0;e<r.length;e++){let t=r[e],a=this.safeValue(s,t),n=this.safeString(a,"free"),o=this.safeString(a,"used"),h=this.safeString(a,"total");i[this.safeCurrencyCode(t.toLowerCase())]={free:n,used:o,total:h}}return this.safeBalance(i)}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.numericId),void 0!==i&&(a.limit=i);let n=await this.privateGetTradeApiTransactionsOfUser(this.extend(a,s)),o=this.safeValue(n,"result",{}),h=this.safeList(o,"transactions",[]);return this.parseTransactions(h,r,t,i)}parseTransaction(e,t){let i=this.safeValue(e,"currency"),s=this.safeString(i,"symbol"),r=this.safeCurrencyCode(s,t),a=this.safeString(e,"id"),n=this.safeValue(e,"params"),o=this.safeString(n,"tx_id"),h=this.safeInteger(e,"timestamp"),d=this.safeString(e,"blockChain");if(void 0===d){let e=this.safeValue(i,"links",[]),t=this.safeValue(e,0,{});d=this.safeString(t,"blockChain")}let l=this.safeString(e,"sender"),c=this.safeString(e,"recipient"),u=this.safeString(e,"message"),f=this.parseTransactionType(this.safeString(e,"type")),p=this.parseValueToPricision(e,"amount",i,"decimals"),m=this.parseTransactionStatus(this.safeValue(e,"status"));return{info:e,id:a,txid:o,timestamp:h,datetime:this.iso8601(h),network:this.networkIdToCode(d),addressFrom:l,address:void 0,addressTo:c,tagFrom:void 0,tag:u,tagTo:void 0,type:f,amount:this.parseNumber(p),currency:r,status:m,updated:void 0,fee:void 0,comment:this.safeString(e,"description"),internal:!1}}parseTransactionType(e){return this.safeString({deposit:"deposit",withdraw:"withdrawal"},e,e)}parseTransactionStatus(e){return this.safeString({approving:"pending",success:"ok"},e,e)}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o="/"+this.implodeParams(e,s),h=this.urls.api[t]+o,d=this.urlencode(n);if("private"===t){this.checkRequiredCredentials(),"POST"===i?a=this.json(n):0!==d.length&&(h+="?"+d);let e=this.apiKey+":"+this.secret;r={Authorization:"Basic "+this.stringToBase64(e),"Content-Type":"application/json"}}else 0!==d.length&&(h+="?"+d);return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&200!==e){if(404===e){if(i.indexOf("/ccxt/order/")>=0&&"GET"===s){let e=i.split("/order/"),t=this.safeString(e,1);throw new n.OrderNotFound(this.id+" order "+t+" not found")}if(i.indexOf("/cmc/orderbook/")>=0){let e=i.split("/cmc/orderbook/"),t=this.safeString(e,1);throw new n.BadSymbol(this.id+" symbolId "+t+" not found")}}let t=this.id+" "+a,r=this.safeString(o,"message"),h=this.safeString(o,"code");throw this.throwBroadlyMatchedException(this.exceptions.broad,r,t),this.throwExactlyMatchedException(this.exceptions.exact,h,t),new n.ExchangeError(t)}}}class ew extends s.k{}let ek=ew;class eS extends ek{describe(){return this.deepExtend(super.describe(),{id:"bitvavo",name:"Bitvavo",countries:["NL"],rateLimit:60,version:"v2",certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d"},urls:{logo:"https://github.com/user-attachments/assets/d213155c-8c71-4701-9bd5-45351febc2a8",api:{public:"https://api.bitvavo.com",private:"https://api.bitvavo.com"},www:"https://bitvavo.com/",doc:"https://docs.bitvavo.com/",fees:"https://bitvavo.com/en/fees",referral:"https://bitvavo.com/?a=24F34952F7"},api:{public:{get:{time:1,markets:1,assets:1,"{market}/book":1,"{market}/trades":5,"{market}/candles":1,"ticker/price":1,"ticker/book":1,"ticker/24h":{cost:1,noMarket:25}}},private:{get:{account:1,order:1,orders:5,ordersOpen:{cost:1,noMarket:25},trades:5,balance:5,deposit:1,depositHistory:5,withdrawalHistory:5},post:{order:1,withdrawal:1},put:{order:1},delete:{order:1,orders:1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0020")],[this.parseNumber("250000"),this.parseNumber("0.0016")],[this.parseNumber("500000"),this.parseNumber("0.0012")],[this.parseNumber("1000000"),this.parseNumber("0.0010")],[this.parseNumber("2500000"),this.parseNumber("0.0008")],[this.parseNumber("5000000"),this.parseNumber("0.0006")],[this.parseNumber("10000000"),this.parseNumber("0.0005")],[this.parseNumber("25000000"),this.parseNumber("0.0004")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.0010")],[this.parseNumber("250000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0006")],[this.parseNumber("1000000"),this.parseNumber("0.0005")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0004")],[this.parseNumber("10000000"),this.parseNumber("0.0003")],[this.parseNumber("25000000"),this.parseNumber("0.0003")]]}}},requiredCredentials:{apiKey:!0,secret:!0},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:void 0,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!0,selfTradePrevention:!0,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!0,limit:1e3,daysBack:1e5,untilDays:1e5,trigger:!1,trailing:!1},fetchClosedOrders:void 0,fetchOHLCV:{limit:1440}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{101:n.ExchangeError,102:n.BadRequest,103:n.RateLimitExceeded,104:n.RateLimitExceeded,105:n.PermissionDenied,107:n.ExchangeNotAvailable,108:n.ExchangeNotAvailable,109:n.ExchangeNotAvailable,110:n.BadRequest,200:n.BadRequest,201:n.BadRequest,202:n.BadRequest,203:n.BadSymbol,204:n.BadRequest,205:n.BadRequest,206:n.BadRequest,210:n.InvalidOrder,211:n.InvalidOrder,212:n.InvalidOrder,213:n.InvalidOrder,214:n.InvalidOrder,215:n.InvalidOrder,216:n.InsufficientFunds,217:n.InvalidOrder,230:n.ExchangeError,231:n.ExchangeError,232:n.BadRequest,233:n.InvalidOrder,234:n.InvalidOrder,235:n.ExchangeError,236:n.BadRequest,240:n.OrderNotFound,300:n.AuthenticationError,301:n.AuthenticationError,302:n.AuthenticationError,303:n.AuthenticationError,304:n.AuthenticationError,305:n.AuthenticationError,306:n.AuthenticationError,307:n.PermissionDenied,308:n.AuthenticationError,309:n.AuthenticationError,310:n.PermissionDenied,311:n.PermissionDenied,312:n.PermissionDenied,315:n.BadRequest,317:n.AccountSuspended,400:n.ExchangeError,401:n.ExchangeError,402:n.PermissionDenied,403:n.PermissionDenied,404:n.OnMaintenance,405:n.ExchangeError,406:n.BadRequest,407:n.ExchangeError,408:n.InsufficientFunds,409:n.InvalidAddress,410:n.ExchangeError,411:n.BadRequest,412:n.InvalidAddress,413:n.InvalidAddress,414:n.ExchangeError},broad:{"start parameter is invalid":n.BadRequest,"symbol parameter is invalid":n.BadSymbol,"amount parameter is invalid":n.InvalidOrder,"orderId parameter is invalid":n.InvalidOrder}},options:{currencyToPrecisionRoundingMode:d.R3,"BITVAVO-ACCESS-WINDOW":1e4,networks:{ERC20:"ETH",TRC20:"TRX"}},precisionMode:d.v,commonCurrencies:{MIOTA:"IOTA"}})}amountToPrecision(e,t){return this.decimalToPrecision(t,d.R3,this.markets[e].precision.amount,d.fv)}priceToPrecision(e,t){return t=this.decimalToPrecision(t,d.D_,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,d.R3,8,d.fv)}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.safeInteger(t,"time")}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e);return this.parseMarkets(t)}parseMarkets(e){let t=this.currencies,i=this.indexBy(t,"id"),s=[],r=this.fees;for(let t=0;t<e.length;t++){let a=e[t],n=this.safeString(a,"market"),o=this.safeString(a,"base"),h=this.safeString(a,"quote"),d=this.safeCurrencyCode(o),l=this.safeCurrencyCode(h),c=this.safeString(a,"status"),u=this.safeValue(i,o),f=this.safeInteger(u,"precision");s.push(this.safeMarketStructure({id:n,symbol:d+"/"+l,base:d,quote:l,settle:void 0,baseId:o,quoteId:h,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"trading"===c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,taker:r.trading.taker,maker:r.trading.maker,precision:{amount:this.safeInteger(u,"decimals",f),price:this.safeInteger(a,"pricePrecision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(a,"minOrderInBaseAsset"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(a,"minOrderInQuoteAsset"),max:void 0}},created:void 0,info:a}))}return s}async fetchCurrencies(e={}){let t=await this.publicGetAssets(e);return this.parseCurrenciesCustom(t)}parseCurrenciesCustom(e){let t={};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r),n={},o=this.safeValue(s,"networks",[]),h=1===o.length,d="OK"===this.safeValue(s,"depositStatus"),l="OK"===this.safeValue(s,"withdrawalStatus"),c=d&&l,u=this.safeNumber(s,"withdrawalFee"),f=this.safeInteger(s,"decimals",8),p=this.safeNumber(s,"withdrawalMinAmount");if(h){let e=o[0],t=this.networkIdToCode(e);n[t]={info:s,id:e,network:t,active:c,deposit:d,withdraw:l,fee:u,precision:f,limits:{withdraw:{min:p,max:void 0}}}}t[a]={info:s,id:r,code:a,name:this.safeString(s,"name"),active:c,deposit:d,withdraw:l,networks:n,fee:u,precision:f,limits:{amount:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0},withdraw:{min:p,max:void 0}}}}return this.currencies=this.deepExtend(this.currencies,t),t}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={market:i.id},r=await this.publicGetTicker24h(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t){let i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"-"),r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"last"),n=this.safeString(e,"volume"),o=this.safeString(e,"volumeQuote"),h=this.safeString(e,"open");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),vwap:void 0,open:h,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker24h(t);return this.parseTickers(i,e)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchTrades",e,t,i,s);let n={market:r.id};void 0!==i&&(n.limit=Math.min(i,1e3)),void 0!==t&&(n.start=t),[n,s]=this.handleUntilOption("end",n,s);let o=await this.publicGetMarketTrades(this.extend(n,s));return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i,s;let r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeInteger(e,"timestamp"),o=this.safeString(e,"side"),h=this.safeString2(e,"id","fillId"),d=this.safeString(e,"market"),l=this.safeSymbol(d,t,"-"),c=this.safeValue(e,"taker");void 0!==c&&(i=c?"taker":"maker");let u=this.safeString(e,"fee");if(void 0!==u){let t=this.safeString(e,"feeCurrency");s={cost:u,currency:this.safeCurrencyCode(t)}}let f=this.safeString(e,"orderId");return this.safeTrade({info:e,id:h,symbol:l,timestamp:n,datetime:this.iso8601(n),order:f,type:void 0,side:o,takerOrMaker:i,price:r,amount:a,cost:void 0,fee:s},t)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetAccount(e);return this.parseTradingFees(t)}parseTradingFees(e,t){let i=this.safeValue(e,"fees"),s=this.safeNumber(i,"maker"),r=this.safeNumber(i,"taker"),a={};for(let t=0;t<this.symbols.length;t++){let i=this.symbols[t];a[i]={info:e,symbol:i,maker:s,taker:r,percentage:!0,tierBased:!0}}return a}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={market:s.id};void 0!==t&&(r.depth=t);let a=await this.publicGetMarketBook(this.extend(r,i)),n=this.parseOrderBook(a,s.symbol);return n.nonce=this.safeInteger(a,"nonce"),n}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}fetchOHLCVRequest(e,t="1m",i,s,r={}){let a={market:this.market(e).id,interval:this.safeString(this.timeframes,t,t)};if(void 0!==i){let e=this.parseTimeframe(t);a.start=i,s=void 0===s?1440:Math.min(s,1440),a.end=this.sum(i,s*e*1e3)}return[a,r]=this.handleUntilOption("end",a,r),void 0!==s&&(a.limit=s),this.extend(a,r)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=!1;if([n,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),n)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,1440);let o=this.fetchOHLCVRequest(e,t,i,s,r),h=await this.publicGetMarketCandles(o);return this.parseOHLCVs(h,a,t,i,s)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"inOrder"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={symbol:this.currency(e).id},s=await this.privateGetDeposit(this.extend(i,t)),r=this.safeString(s,"address"),a=this.safeString(s,"paymentId");return this.checkAddress(r),{info:s,currency:e,network:void 0,address:r,tag:a}}createOrderRequest(e,t,i,s,a,n={}){let o=this.market(e),h={market:o.id,side:i,orderType:t},l="market"===t||"stopLoss"===t||"takeProfit"===t,c="limit"===t||"stopLossLimit"===t||"takeProfitLimit"===t,u=this.safeString(n,"timeInForce"),f=this.safeStringN(n,["triggerPrice","stopPrice","triggerAmount"]),p=this.isPostOnly(l,!1,n),m=this.safeValue(n,"stopLossPrice"),g=this.safeValue(n,"takeProfitPrice");if(n=this.omit(n,["timeInForce","triggerPrice","stopPrice","stopLossPrice","takeProfitPrice"]),l){let t;if(void 0!==a){let e=this.numberToString(a),i=this.numberToString(s),n=r.Y.stringMul(i,e);t=this.parseNumber(n)}else t=this.safeNumber(n,"cost");if(void 0!==t){let e=this.currency(o.quote).precision;h.amountQuote=this.decimalToPrecision(t,d.R3,e,this.precisionMode)}else h.amount=this.amountToPrecision(e,s);n=this.omit(n,["cost"])}else c&&(h.price=this.priceToPrecision(e,a),h.amount=this.amountToPrecision(e,s));let y=void 0!==g||"takeProfit"===t||"takeProfitLimit"===t;return void 0===m&&(void 0===f||y)&&"stopLoss"!==t&&"stopLossLimit"!==t?y&&(void 0!==g&&(f=g),h.orderType=l?"takeProfit":"takeProfitLimit"):(void 0!==m&&(f=m),h.orderType=l?"stopLoss":"stopLossLimit"),void 0!==f&&(h.triggerAmount=this.priceToPrecision(e,f),h.triggerType="price",h.triggerReference="lastTrade"),void 0!==u&&"PO"!==u&&(h.timeInForce=u),p&&(h.postOnly=!0),this.extend(h,n)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=this.createOrderRequest(e,t,i,s,r,a),h=await this.privatePostOrder(o);return this.parseOrder(h,n)}editOrderRequest(e,t,i,s,r,a,o={}){let h={},d=this.market(t),l=this.safeNumber(o,"amountRemaining"),c=this.safeStringN(o,["triggerPrice","stopPrice","triggerAmount"]);if(o=this.omit(o,["amountRemaining","triggerPrice","stopPrice","triggerAmount"]),void 0!==a&&(h.price=this.priceToPrecision(t,a)),void 0!==r&&(h.amount=this.amountToPrecision(t,r)),void 0!==l&&(h.amountRemaining=this.amountToPrecision(t,l)),void 0!==c&&(h.triggerAmount=this.priceToPrecision(t,c)),h=this.extend(h,o),this.isEmpty(h))throw new n.ArgumentsRequired(this.id+" editOrder() requires an amount argument, or a price argument, or non-empty params");return void 0===this.safeString(o,"clientOrderId")&&(h.orderId=e),h.market=d.id,h}async editOrder(e,t,i,s,r,a,n={}){await this.loadMarkets();let o=this.market(t),h=this.editOrderRequest(e,t,i,s,r,a,n),d=await this.privatePutOrder(h);return this.parseOrder(d,o)}cancelOrderRequest(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");let s={market:this.market(t).id};return void 0===this.safeString(i,"clientOrderId")&&(s.orderId=e),this.extend(s,i)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=this.cancelOrderRequest(e,t,i),a=await this.privateDeleteOrder(r);return this.parseOrder(a,s)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e&&(i=this.market(e),s.market=i.id);let r=await this.privateDeleteOrders(this.extend(s,t));return this.parseOrders(r,i)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={market:s.id};void 0===this.safeString(i,"clientOrderId")&&(r.orderId=e);let a=await this.privateGetOrder(this.extend(r,i));return this.parseOrder(a,s)}fetchOrdersRequest(e,t,i,s={}){let r={market:this.market(e).id};return void 0!==t&&(r.start=t),void 0!==i&&(r.limit=i),[r,s]=this.handleUntilOption("end",r,s),this.extend(r,s)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchOrders","paginate"),r)return await this.fetchPaginatedCallDynamic("fetchOrders",e,t,i,s);let a=this.market(e),o=this.fetchOrdersRequest(e,t,i,s),h=await this.privateGetOrders(o);return this.parseOrders(h,a,t,i)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.market=r.id);let n=await this.privateGetOrdersOpen(this.extend(a,s));return this.parseOrders(n,r,t,i)}parseOrderStatus(e){return this.safeString({new:"open",canceled:"canceled",canceledAuction:"canceled",canceledSelfTradePrevention:"canceled",canceledIOC:"canceled",canceledFOK:"canceled",canceledMarketProtection:"canceled",canceledPostOnly:"canceled",filled:"closed",partiallyFilled:"open",expired:"canceled",rejected:"canceled",awaitingTrigger:"open"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"orderId"),a=this.safeInteger(e,"created"),n=this.safeString(e,"market"),o=(t=this.safeMarket(n,t,"-")).symbol,h=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"side"),l=this.safeString(e,"orderType"),c=this.safeString(e,"price"),u=this.safeString(e,"amount"),f=this.safeString(e,"amountRemaining"),p=this.safeString(e,"filledAmount"),m=this.safeString(e,"filledAmountQuote");if(void 0===m){let t=this.safeString(e,"amountQuote"),i=this.safeString(e,"amountQuoteRemaining");m=r.Y.stringSub(t,i)}let g=this.safeNumber(e,"feePaid");if(void 0!==g){let t=this.safeString(e,"feeCurrency");i={cost:g,currency:this.safeCurrencyCode(t)}}let y=this.safeValue(e,"fills",[]),v=this.safeString(e,"timeInForce"),b=this.safeValue(e,"postOnly");return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:o,type:l,timeInForce:v,postOnly:b,side:d,price:c,triggerPrice:this.safeNumber(e,"triggerPrice"),amount:u,cost:m,average:void 0,filled:p,remaining:f,status:h,fee:i,trades:y},t)}fetchMyTradesRequest(e,t,i,s={}){let r={market:this.market(e).id};return void 0!==t&&(r.start=t),void 0!==i&&(r.limit=i),[r,s]=this.handleUntilOption("end",r,s),this.extend(r,s)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),r)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s);let a=this.market(e),o=this.fetchMyTradesRequest(e,t,i,s),h=await this.privateGetTrades(o);return this.parseTrades(h,a,t,i)}withdrawRequest(e,t,i,s,r={}){let a={symbol:this.currency(e).id,amount:this.currencyToPrecision(e,t),address:i};return void 0!==s&&(a.paymentId=s),this.extend(a,r)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),n=this.withdrawRequest(e,t,i,s,r),o=await this.privatePostWithdrawal(n);return this.parseTransaction(o,a)}fetchWithdrawalsRequest(e,t,i,s={}){let r;let a={};return void 0!==e&&(r=this.currency(e),a.symbol=r.id),void 0!==t&&(a.start=t),void 0!==i&&(a.limit=i),this.extend(a,s)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a=this.fetchWithdrawalsRequest(e,t,i,s);void 0!==e&&(r=this.currency(e));let n=await this.privateGetWithdrawalHistory(a);return this.parseTransactions(n,r,t,i,{type:"withdrawal"})}fetchDepositsRequest(e,t,i,s={}){let r;let a={};return void 0!==e&&(r=this.currency(e),a.symbol=r.id),void 0!==t&&(a.start=t),void 0!==i&&(a.limit=i),this.extend(a,s)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a=this.fetchDepositsRequest(e,t,i,s);void 0!==e&&(r=this.currency(e));let n=await this.privateGetDepositHistory(a);return this.parseTransactions(n,r,t,i,{type:"deposit"})}parseTransactionStatus(e){return this.safeString({awaiting_processing:"pending",awaiting_email_confirmation:"pending",awaiting_bitvavo_inspection:"pending",approved:"pending",sending:"pending",in_mempool:"pending",processed:"pending",completed:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t){let i,s;let r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"symbol"),n=this.safeCurrencyCode(a,t),o=this.parseTransactionStatus(this.safeString(e,"status")),h=this.safeNumber(e,"amount"),d=this.safeString(e,"address"),l=this.safeString(e,"txId"),c=this.safeNumber(e,"fee");void 0!==c&&(i={cost:c,currency:n}),s="success"in e||"address"in e?"withdrawal":"deposit";let u=this.safeString(e,"paymentId");return{info:e,id:void 0,txid:l,timestamp:r,datetime:this.iso8601(r),addressFrom:void 0,address:d,addressTo:d,tagFrom:void 0,tag:u,tagTo:u,type:s,amount:h,currency:n,status:o,updated:void 0,fee:i,network:void 0,comment:void 0,internal:void 0}}parseDepositWithdrawFee(e,t){let i={info:e,withdraw:{fee:this.safeNumber(e,"withdrawalFee"),percentage:!1},deposit:{fee:this.safeNumber(e,"depositFee"),percentage:!1},networks:{}},s=this.safeValue(e,"networks"),r=this.safeValue(s,0),a=this.safeString(t,"code");"Mainnet"===r&&(r=a);let n=this.networkIdToCode(r,a);return i.networks[n]={deposit:i.deposit,withdraw:i.withdraw},i}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetAssets(t);return this.parseDepositWithdrawFees(i,e,"symbol")}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o="/"+this.version+"/"+this.implodeParams(e,s),h="GET"===i||"DELETE"===i;if(h&&Object.keys(n).length&&(o+="?"+this.urlencode(n)),"private"===t){this.checkRequiredCredentials();let e="";!h&&Object.keys(n).length&&(e=a=this.json(n));let t=this.milliseconds().toString(),s=t+i+o+e,d=this.hmac(this.encode(s),this.encode(this.secret),l.s),c=this.safeString(this.options,"BITVAVO-ACCESS-WINDOW","10000");r={"BITVAVO-ACCESS-KEY":this.apiKey,"BITVAVO-ACCESS-SIGNATURE":d,"BITVAVO-ACCESS-TIMESTAMP":t,"BITVAVO-ACCESS-WINDOW":c},h||(r["Content-Type"]="application/json")}return{url:o=this.urls.api[t]+o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"errorCode"),c=this.safeString(o,"error");if(void 0!==l){let e=this.id+" "+a;throw this.throwBroadlyMatchedException(this.exceptions.broad,c,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),new n.ExchangeError(e)}}calculateRateLimiterCost(e,t,i,s,r={}){return"noMarket"in r&&!("market"in s)?r.noMarket:this.safeValue(r,"cost",1)}}class eO extends s.k{}let eT=eO;class eI extends eT{describe(){return this.deepExtend(super.describe(),{id:"bl3p",name:"BL3P",countries:["NL"],rateLimit:1e3,version:"1",comment:"An exchange market by BitonicNL",pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,ws:!1},urls:{logo:"https://github.com/user-attachments/assets/75aeb14e-cd48-43c8-8492-dff002dea0be",api:{rest:"https://api.bl3p.eu"},www:"https://bl3p.eu",doc:["https://github.com/BitonicNL/bl3p-api/tree/master/docs","https://bl3p.eu/api","https://bitonic.nl/en/api"]},api:{public:{get:["{market}/ticker","{market}/orderbook","{market}/trades"]},private:{post:["{market}/money/depth/full","{market}/money/order/add","{market}/money/order/cancel","{market}/money/order/result","{market}/money/orders","{market}/money/orders/history","{market}/money/trades/fetch","GENMKT/money/info","GENMKT/money/deposit_address","GENMKT/money/new_deposit_address","GENMKT/money/wallet/history","GENMKT/money/withdraw"]}},markets:{"BTC/EUR":this.safeMarketStructure({id:"BTCEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"BTC",quoteId:"EUR",maker:.0025,taker:.0025,type:"spot",spot:!0})},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:void 0,fetchOrder:void 0,fetchOpenOrders:void 0,fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb})}parseBalance(e){let t=this.safeValue(e,"data",{}),i=this.safeValue(t,"wallets",{}),s={info:t},r=Object.keys(this.currencies);for(let e=0;e<r.length;e++){let t=r[e],a=this.currency(t).id,n=this.safeValue(i,a,{}),o=this.safeValue(n,"available",{}),h=this.safeValue(n,"balance",{}),d=this.account();d.free=this.safeString(o,"value"),d.total=this.safeString(h,"value"),s[t]=d}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGENMKTMoneyInfo(e);return this.parseBalance(t)}parseBidAsk(e,t=0,i=1,s=2){let a=this.safeString(e,t),n=this.safeString(e,i);return[this.parseNumber(r.Y.stringDiv(a,"100000.0")),this.parseNumber(r.Y.stringDiv(n,"100000000.0"))]}async fetchOrderBook(e,t,i={}){let s=this.market(e),r={market:s.id},a=await this.publicGetMarketOrderbook(this.extend(r,i)),n=this.safeDict(a,"data");return this.parseOrderBook(n,s.symbol,void 0,"bids","asks","price_int","amount_int")}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"last"),a=this.safeValue(e,"volume",{});return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(a,"24h"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){let i=this.market(e),s={market:i.id},r=await this.publicGetMarketTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i=this.safeString(e,"trade_id"),s=this.safeInteger(e,"date"),a=this.safeString(e,"price_int"),n=this.safeString(e,"amount_int");return t=this.safeMarket(void 0,t),this.safeTrade({id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:void 0,order:void 0,takerOrMaker:void 0,price:r.Y.stringDiv(a,"100000"),amount:r.Y.stringDiv(n,"100000000"),cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetMarketTrades(this.extend({market:r.id},s));return this.parseTrades(a.data.trades,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostGENMKTMoneyInfo(e),i=this.safeValue(t,"data",{}),s=this.safeString(i,"trade_fee"),a=this.parseNumber(r.Y.stringDiv(s,"100")),n={};for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e];n[t]={info:i,symbol:t,maker:a,taker:a,percentage:!0,tierBased:!1}}return n}async createOrder(e,t,i,s,a,n={}){let o=this.market(e),h=this.numberToString(s),d=this.numberToString(a),l={market:o.id,amount_int:parseInt(r.Y.stringMul(h,"100000000")),fee_currency:o.quote,type:"buy"===i?"bid":"ask"};"limit"===t&&(l.price_int=parseInt(r.Y.stringMul(d,"100000.0")));let c=await this.privatePostMarketMoneyOrderAdd(this.extend(l,n)),u=this.safeString(c.data,"order_id");return this.safeOrder({info:c,id:u},o)}async cancelOrder(e,t,i={}){let s=await this.privatePostMarketMoneyOrderCancel(this.extend({order_id:e},i));return this.safeOrder({info:s})}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={currency:i.id},r=await this.privatePostGENMKTMoneyNewDepositAddress(this.extend(s,t)),a=this.safeDict(r,"data");return this.parseDepositAddress(a,i)}parseDepositAddress(e,t){let i=this.safeString(e,"address");return this.checkAddress(i),{info:e,currency:this.safeString(t,"code"),address:i,tag:void 0,network:void 0}}sign(e,t="public",i="GET",s={},r,a){let n=this.implodeParams(e,s),o=this.urls.api.rest+"/"+this.version+"/"+n,h=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(h).length&&(o+="?"+this.urlencode(h));else{this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({nonce:e},h));let t=this.base64ToBinary(this.secret),i=n+"\0"+a,s=this.hmac(this.encode(i),t,A.Zf,"base64");r={"Content-Type":"application/x-www-form-urlencoded","Rest-Key":this.apiKey,"Rest-Sign":s}}return{url:o,method:i,body:a,headers:r}}}class ex extends s.k{}let eP=ex;class eM extends eP{describe(){return this.deepExtend(super.describe(),{id:"blockchaincom",secret:void 0,name:"Blockchain.com",countries:["LX"],rateLimit:500,version:"v3",pro:!0,has:{CORS:!1,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!0,fetchL3OrderBook:!0,fetchLedger:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!1,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!0,transfer:!1,withdraw:!0},timeframes:void 0,urls:{logo:"https://github.com/user-attachments/assets/975e3054-3399-4363-bcee-ec3c6d63d4e8",test:{public:"https://testnet-api.delta.exchange",private:"https://testnet-api.delta.exchange"},api:{public:"https://api.blockchain.com/v3/exchange",private:"https://api.blockchain.com/v3/exchange"},www:"https://blockchain.com",doc:["https://api.blockchain.com/v3"],fees:"https://exchange.blockchain.com/fees"},api:{public:{get:{tickers:1,"tickers/{symbol}":1,symbols:1,"symbols/{symbol}":1,"l2/{symbol}":1,"l3/{symbol}":1}},private:{get:{fees:1,orders:1,"orders/{orderId}":1,trades:1,fills:1,deposits:1,"deposits/{depositId}":1,accounts:1,"accounts/{account}/{currency}":1,whitelist:1,"whitelist/{currency}":1,withdrawals:1,"withdrawals/{withdrawalId}":1},post:{orders:1,"deposits/{currency}":1,withdrawals:1},delete:{orders:1,"orders/{orderId}":1}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0045")],[this.parseNumber("10000"),this.parseNumber("0.0035")],[this.parseNumber("50000"),this.parseNumber("0.0018")],[this.parseNumber("100000"),this.parseNumber("0.0018")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("2500000"),this.parseNumber("0.0018")],[this.parseNumber("5000000"),this.parseNumber("0.0016")],[this.parseNumber("25000000"),this.parseNumber("0.0014")],[this.parseNumber("100000000"),this.parseNumber("0.0011")],[this.parseNumber("500000000"),this.parseNumber("0.0008")],[this.parseNumber("1000000000"),this.parseNumber("0.0006")]],maker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("10000"),this.parseNumber("0.0017")],[this.parseNumber("50000"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0007")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0005")],[this.parseNumber("5000000"),this.parseNumber("0.0004")],[this.parseNumber("25000000"),this.parseNumber("0.0003")],[this.parseNumber("100000000"),this.parseNumber("0.0002")],[this.parseNumber("500000000"),this.parseNumber("0.0001")],[this.parseNumber("1000000000"),this.parseNumber("0")]]}}},requiredCredentials:{apiKey:!1,secret:!0},options:{networks:{ERC20:"ETH",TRC20:"TRX",ALGO:"ALGO",ADA:"ADA",AR:"AR",ATOM:"ATOM",AVAXC:"AVAX",BCH:"BCH",BSV:"BSV",BTC:"BTC",DCR:"DCR",DESO:"DESO",DASH:"DASH",CELO:"CELO",CHZ:"CHZ",MATIC:"MATIC",SOL:"SOL",DOGE:"DOGE",DOT:"DOT",EOS:"EOS",ETC:"ETC",FIL:"FIL",KAVA:"KAVA",LTC:"LTC",IOTA:"MIOTA",NEAR:"NEAR",STX:"STX",XLM:"XLM",XMR:"XMR",XRP:"XRP",XTZ:"XTZ",ZEC:"ZEC",ZIL:"ZIL"}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!1,GTD:!0},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:1e3,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{401:n.AuthenticationError,404:n.OrderNotFound},broad:{}}})}async fetchMarkets(e={}){let t=await this.publicGetSymbols(e),i=Object.keys(t),s=[];for(let e=0;e<i.length;e++){let a,n;let o=i[e],h=this.safeValue(t,o),d=this.safeString(h,"base_currency"),l=this.safeString(h,"counter_currency"),c=this.safeCurrencyCode(d),u=this.safeCurrencyCode(l),f=this.safeNumber(h,"id");a="open"===this.safeString(h,"status");let p=this.safeString(h,"min_price_increment"),m=this.safeString(h,"min_price_increment_scale"),g=this.parsePrecision(m),y=r.Y.stringMul(p,g),v=this.safeString(h,"lot_size"),b=this.safeString(h,"lot_size_scale"),w=this.parsePrecision(b),k=r.Y.stringMul(v,w),S=this.safeString(h,"min_order_size"),O=this.safeString(h,"min_order_size_scale"),T=this.parsePrecision(O),I=r.Y.stringMul(S,T),x=this.parseNumber(I);if("0"!==(n=this.safeString(h,"max_order_size"))){let e=this.safeString(h,"max_order_size_scale"),t=this.parsePrecision(e),i=r.Y.stringMul(n,t);n=this.parseNumber(i)}else n=void 0;s.push({info:h,id:o,numericId:f,symbol:c+"/"+u,base:c,quote:u,settle:void 0,baseId:d,quoteId:l,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:a,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(k),price:this.parseNumber(y)},limits:{leverage:{min:void 0,max:void 0},amount:{min:x,max:n},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0})}return s}async fetchOrderBook(e,t,i={}){return await this.fetchL3OrderBook(e,t,i)}async fetchL3OrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.depth=t);let a=await this.publicGetL3Symbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","px","qty")}async fetchL2OrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.depth=t);let a=await this.publicGetL2Symbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","px","qty")}parseTicker(e,t){let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,"-"),r=this.safeString(e,"last_trade_price"),a=this.safeString(e,"volume_24h"),n=this.safeString(e,"price_24h");return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:n,close:void 0,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetTickersSymbol(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t);return this.parseTickers(i,e)}parseOrderState(e){return this.safeString({OPEN:"open",REJECTED:"rejected",FILLED:"closed",CANCELED:"canceled",PART_FILLED:"open",EXPIRED:"expired"},e,e)}parseOrder(e,t){let i=this.safeString(e,"clOrdId"),s=this.safeStringLower(e,"ordType"),r=this.safeString(e,"ordStatus"),a=this.parseOrderState(r),n=this.safeStringLower(e,"side"),o=this.safeString(e,"symbol"),h=this.safeSymbol(o,t,"-"),d=this.safeString(e,"exOrdId"),l="market"!==s?this.safeString(e,"price"):void 0,c=this.safeNumber(e,"avgPx"),u=this.safeInteger(e,"timestamp"),f=this.iso8601(u),p=this.safeString(e,"cumQty"),m=this.safeString(e,"leavesQty");return this.safeOrder({id:d,clientOrderId:i,datetime:f,timestamp:u,lastTradeTimestamp:void 0,status:a,symbol:h,type:s,timeInForce:void 0,side:n,price:l,average:c,amount:void 0,filled:p,remaining:m,cost:void 0,trades:[],fees:[],info:e})}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h=this.safeString(a,"ordType",t).toUpperCase(),d=this.safeString2(a,"clientOrderId","clOrdId",this.uuid16());a=this.omit(a,["ordType","clientOrderId","clOrdId"]);let l={ordType:h,symbol:o.id,side:i.toUpperCase(),orderQty:this.amountToPrecision(e,s),clOrdId:d},c=this.safeValueN(a,["triggerPrice","stopPx","stopPrice"]);if(a=this.omit(a,["triggerPrice","stopPx","stopPrice"]),("STOP"===h||"STOPLIMIT"===h)&&void 0===c)throw new n.ArgumentsRequired(this.id+" createOrder() requires a stopPx or triggerPrice param for a "+h+" order");void 0!==c&&("MARKET"===h?l.ordType="STOP":"LIMIT"===h&&(l.ordType="STOPLIMIT"));let u=!1,f=!1;("LIMIT"===l.ordType||"STOPLIMIT"===l.ordType)&&(u=!0),("STOP"===l.ordType||"STOPLIMIT"===l.ordType)&&(f=!0),u&&(l.price=this.priceToPrecision(e,r)),f&&(l.stopPx=this.priceToPrecision(e,c));let p=await this.privatePostOrders(this.extend(l,a));return this.parseOrder(p,o)}async cancelOrder(e,t,i={}){let s=await this.privateDeleteOrdersOrderId(this.extend({orderId:e},i));return this.safeOrder({id:e,info:s})}async cancelAllOrders(e,t={}){await this.loadMarkets();let i={};if(void 0!==e){let t=this.marketId(e);i.symbol=t}let s=await this.privateDeleteOrders(this.extend(i,t));return[this.safeOrder({info:s})]}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetFees(e),i=this.safeNumber(t,"makerRate"),s=this.safeNumber(t,"takerRate"),r={};for(let e=0;e<this.symbols.length;e++){let a=this.symbols[e];r[a]={info:t,symbol:a,maker:i,taker:s}}return r}async fetchCanceledOrders(e,t,i,s={}){return await this.fetchOrdersByState("CANCELED",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersByState("FILLED",e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersByState("OPEN",e,t,i,s)}async fetchOrdersByState(e,t,i,s,r={}){let a;await this.loadMarkets();let n={status:e,limit:100};void 0!==t&&(a=this.market(t),n.symbol=a.id);let o=await this.privateGetOrders(this.extend(n,r));return this.parseOrders(o,a,i,s)}parseTrade(e,t){let i;let s=this.safeString(e,"exOrdId"),r=this.safeString(e,"tradeId"),a=this.safeString(e,"side").toLowerCase(),n=this.safeString(e,"symbol"),o=this.safeString(e,"price"),h=this.safeString(e,"qty"),d=this.safeInteger(e,"timestamp"),l=this.iso8601(d),c=(t=this.safeMarket(n,t,"-")).symbol,u=this.safeString(e,"fee");return void 0!==u&&(i={cost:u,currency:t.quote}),this.safeTrade({id:r,timestamp:d,datetime:l,symbol:c,order:s,type:void 0,side:a,takerOrMaker:void 0,price:o,amount:h,cost:void 0,fee:i,info:e},t)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==i&&(a.limit=i),void 0!==e&&(a.symbol=this.marketId(e),r=this.market(e));let n=await this.privateGetFills(this.extend(a,s));return this.parseTrades(n,r,t,i,s)}async fetchDepositAddress(e,t={}){let i,s;await this.loadMarkets();let r=this.currency(e),a={currency:r.id},n=await this.privatePostDepositsCurrency(this.extend(a,t)),o=this.safeString(n,"address");if(void 0!==o){let e=o.split(";");i=this.safeString(e,0),s=this.safeString(e,1)}return{info:n,currency:r.code,network:void 0,address:s,tag:i}}parseTransactionState(e){return this.safeString({COMPLETED:"ok",REJECTED:"failed",PENDING:"pending",FAILED:"failed",REFUNDED:"refunded"},e,e)}parseTransaction(e,t){let i,s,r;let a=this.safeNumber(e,"amount"),n=this.safeInteger(e,"timestamp"),o=this.safeString(e,"currency"),h=this.safeCurrencyCode(o,t),d=this.safeString(e,"state");"depositId"in e?(i="deposit",s=this.safeString(e,"depositId")):"withdrawalId"in e&&(i="withdrawal",s=this.safeString(e,"withdrawalId"));let l="withdrawal"===i?this.safeNumber(e,"fee"):void 0;void 0!==l&&(r={currency:h,cost:l});let c=this.safeString(e,"address"),u=this.safeString(e,"txhash");return{info:e,id:s,txid:u,timestamp:n,datetime:this.iso8601(n),network:void 0,addressFrom:void 0,address:c,addressTo:c,tagFrom:void 0,tag:void 0,tagTo:void 0,type:i,amount:a,currency:h,status:this.parseTransactionState(d),updated:void 0,comment:void 0,internal:void 0,fee:r}}async withdraw(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n={amount:t,currency:a.id,beneficiary:i,sendMax:!1},o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==t&&(a.from=t),void 0!==e&&(r=this.currency(e));let n=await this.privateGetWithdrawals(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchWithdrawal(e,t,i={}){await this.loadMarkets();let s=await this.privateGetWithdrawalsWithdrawalId(this.extend({withdrawalId:e},i));return this.parseTransaction(s)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==t&&(a.from=t),void 0!==e&&(r=this.currency(e));let n=await this.privateGetDeposits(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchDeposit(e,t,i={}){await this.loadMarkets();let s=this.safeString(i,"depositId",e),r=await this.privateGetDepositsDepositId(this.extend({depositId:s},i));return this.parseTransaction(r)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"account","primary");e=this.omit(e,"account");let i=await this.privateGetAccounts(this.extend({account:t},e)),s=this.safeValue(i,t);if(void 0===s)throw new n.ExchangeError(this.id+' fetchBalance() could not find the "'+t+'" account');let r={info:i};for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"currency"),a=this.safeCurrencyCode(i),n=this.account();n.free=this.safeString(t,"available"),n.total=this.safeString(t,"balance"),r[a]=n}return this.safeBalance(r)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersOrderId(this.extend({orderId:e},i));return this.parseOrder(s)}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.implodeParams(e,s),o=this.urls.api[t]+n,h=this.omit(s,this.extractParams(e));return"public"===t?Object.keys(h).length&&(o+="?"+this.urlencode(h)):"private"===t&&(this.checkRequiredCredentials(),r={"X-API-Token":this.secret},"GET"===i?Object.keys(h).length&&(o+="?"+this.urlencode(h)):(a=this.json(h),r["Content-Type"]="application/json")),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"text");if(void 0!==l&&"Insufficient Balance"===l)throw new n.InsufficientFunds(this.id+" "+a);let c=this.safeString(o,"status"),u=this.safeString(o,"error");if(void 0!==e){let e=this.id+" "+this.json(o);this.throwExactlyMatchedException(this.exceptions.exact,c,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e)}}}class eA extends s.k{}let eC=eA;class eB extends eC{describe(){return this.deepExtend(super.describe(),{id:"blofin",name:"BloFin",countries:["US"],version:"v1",rateLimit:100,pro:!0,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,borrowMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!0,createDepositAddress:!1,createMarketBuyOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!0,createOrderWithTakeProfitAndStopLoss:!0,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopLossOrder:!0,createStopMarketOrder:!1,createStopOrder:!1,createTakeProfitOrder:!0,editOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!1,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!1,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchGreeks:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:!0,fetchLedgerEntry:void 0,fetchLeverage:!0,fetchLeverages:!0,fetchLeverageTiers:!1,fetchMarginMode:!0,fetchMarginModes:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:void 0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchPositionsForSymbol:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayCrossMargin:!1,setLeverage:!0,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!0,withdraw:!1},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","6h":"6H","8h":"8H","12h":"12H","1d":"1D","3d":"3D","1w":"1W","1M":"1M"},hostname:"www.blofin.com",urls:{logo:"https://github.com/user-attachments/assets/518cdf80-f05d-4821-a3e3-d48ceb41d73b",api:{rest:"https://openapi.blofin.com"},referral:{url:"https://blofin.com/register?referral_code=f79EsS",discount:.05},www:"https://www.blofin.com",doc:"https://blofin.com/docs"},api:{public:{get:{"market/instruments":1,"market/tickers":1,"market/books":1,"market/trades":1,"market/candles":1,"market/mark-price":1,"market/funding-rate":1,"market/funding-rate-history":1}},private:{get:{"asset/balances":1,"trade/orders-pending":1,"trade/fills-history":1,"asset/deposit-history":1,"asset/withdrawal-history":1,"asset/bills":1,"account/balance":1,"account/positions":1,"account/leverage-info":1,"account/margin-mode":1,"account/batch-leverage-info":1,"trade/orders-tpsl-pending":1,"trade/orders-history":1,"trade/orders-tpsl-history":1,"user/query-apikey":1,"affiliate/basic":1,"copytrading/instruments":1,"copytrading/account/balance":1,"copytrading/account/positions-by-order":1,"copytrading/account/positions-details-by-order":1,"copytrading/account/positions-by-contract":1,"copytrading/account/position-mode":1,"copytrading/account/leverage-info":1,"copytrading/trade/orders-pending":1,"copytrading/trade/pending-tpsl-by-contract":1,"copytrading/trade/position-history-by-order":1,"copytrading/trade/orders-history":1,"copytrading/trade/pending-tpsl-by-order":1},post:{"trade/order":1,"trade/cancel-order":1,"account/set-leverage":1,"trade/batch-orders":1,"trade/order-tpsl":1,"trade/cancel-batch-orders":1,"trade/cancel-tpsl":1,"trade/close-position":1,"asset/transfer":1,"copytrading/account/set-position-mode":1,"copytrading/account/set-leverage":1,"copytrading/trade/place-order":1,"copytrading/trade/cancel-order":1,"copytrading/trade/place-tpsl-by-contract":1,"copytrading/trade/cancel-tpsl-by-contract":1,"copytrading/trade/place-tpsl-by-order":1,"copytrading/trade/cancel-tpsl-by-order":1,"copytrading/trade/close-position-by-order":1,"copytrading/trade/close-position-by-contract":1}}},fees:{swap:{taker:this.parseNumber("0.00060"),maker:this.parseNumber("0.00020")}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},features:{default:{sandbox:!1,createOrder:{timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:{max:10},fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5},fetchOrder:void 0,fetchOpenOrders:{marginMode:!1,limit:100,trigger:!0,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!0,trailing:!1},fetchOHLCV:{max:1440}},spot:{extends:"default",createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,hedged:!1}},forDerivatives:{extends:"default",createOrder:{marginMode:!0,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:{triggerPriceType:void 0,limit:!0},hedged:!0}},swap:{linear:{extends:"forDerivatives"},inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{400:n.BadRequest,401:n.AuthenticationError,500:n.ExchangeError,404:n.BadRequest,405:n.BadRequest,406:n.BadRequest,429:n.RateLimitExceeded,152001:n.BadRequest,152002:n.BadRequest,152003:n.BadRequest,152004:n.BadRequest,152005:n.BadRequest,152006:n.InvalidOrder,152007:n.InvalidOrder,152008:n.InvalidOrder,152009:n.InvalidOrder,150003:n.InvalidOrder,150004:n.InvalidOrder,542:n.InvalidOrder,102002:n.InvalidOrder,102005:n.InvalidOrder,102014:n.InvalidOrder,102015:n.InvalidOrder,102022:n.InvalidOrder,102037:n.InvalidOrder,102038:n.InvalidOrder,102039:n.InvalidOrder,102040:n.InvalidOrder,102047:n.InvalidOrder,102048:n.InvalidOrder,102049:n.InvalidOrder,102050:n.InvalidOrder,102051:n.InvalidOrder,102052:n.InvalidOrder,102053:n.InvalidOrder,102054:n.InvalidOrder,102055:n.InvalidOrder,102064:n.BadRequest,102065:n.BadRequest,102068:n.BadRequest,103013:n.ExchangeError,"Order failed. Insufficient USDT margin in account":n.InsufficientFunds},broad:{"Internal Server Error":n.ExchangeNotAvailable,"server error":n.ExchangeNotAvailable}},httpExceptions:{429:n.ExchangeNotAvailable},precisionMode:d.kb,options:{brokerId:"ec6dd3a7dd982d0b",accountsByType:{swap:"futures",funding:"funding",future:"futures",copy_trading:"copy_trading",earn:"earn",spot:"spot"},accountsById:{funding:"funding",futures:"swap",copy_trading:"copy_trading",earn:"earn",spot:"spot"},defaultNetwork:"ERC20",defaultNetworks:{ETH:"ERC20",BTC:"BTC",USDT:"TRC20"},networks:{BTC:"Bitcoin",BEP20:"BSC",ERC20:"ERC20",TRC20:"TRC20"},fetchOpenInterestHistory:{timeframes:{"5m":"5m","1h":"1H","8h":"8H","1d":"1D","5M":"5m","1H":"1H","8H":"8H","1D":"1D"}},fetchOHLCV:{timezone:"UTC"},fetchPositions:{method:"privateGetAccountPositions"},createOrder:"privatePostTradeOrder",createMarketBuyOrderRequiresPrice:!1,fetchMarkets:["swap"],defaultType:"swap",fetchLedger:{method:"privateGetAssetBills"},fetchOpenOrders:{method:"privateGetTradeOrdersPending"},cancelOrders:{method:"privatePostTradeCancelBatchOrders"},fetchCanceledOrders:{method:"privateGetTradeOrdersHistory"},fetchClosedOrders:{method:"privateGetTradeOrdersHistory"},withdraw:{password:void 0,pwd:void 0},exchangeType:{spot:"SPOT",swap:"SWAP",SPOT:"SPOT",SWAP:"SWAP"}}})}async fetchMarkets(e={}){let t=await this.publicGetMarketInstruments(e),i=this.safeList(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"instId"),i=this.safeStringLower(e,"instType"),s="spot"===i,a="future"===i,n="swap"===i,o="option"===i,h=n||a,d=this.safeString(e,"baseCurrency"),l=this.safeString(e,"quoteCurrency"),c=this.safeString(e,"quoteCurrency"),u=this.safeCurrencyCode(c),f=this.safeCurrencyCode(d),p=this.safeCurrencyCode(l),m=f+"/"+p;n&&(m=m+":"+u);let g=void 0,y=this.safeString(e,"tickSize"),v=this.safeDict2(this.fees,i,"trading",{}),b=this.safeNumber(v,"taker"),w=this.safeNumber(v,"maker"),k=this.safeString(e,"maxLeverage","100");k=r.Y.stringMax(k,"1");let S="live"===this.safeString(e,"state");return this.safeMarketStructure({id:t,symbol:m,base:f,quote:p,baseId:d,quoteId:l,settle:u,settleId:c,type:i,spot:s,option:o,margin:s&&r.Y.stringGt(k,"1"),swap:n,future:a,active:S,taker:b,maker:w,contract:h,linear:h?l===c:void 0,inverse:h?d===c:void 0,contractSize:h?this.safeNumber(e,"contractValue"):void 0,expiry:g,expiryDatetime:g,strike:void 0,optionType:void 0,created:this.safeInteger(e,"listTime"),precision:{amount:this.safeNumber(e,"lotSize"),price:this.parseNumber(y)},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(k)},amount:{min:this.safeNumber(e,"minSize"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:e})}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={instId:this.market(e).id};void 0!==(t=void 0===t?50:t)&&(s.size=t);let r=await this.publicGetMarketBooks(this.extend(s,i)),a=this.safeList(r,"data",[]),n=this.safeDict(a,0,{}),o=this.safeInteger(n,"ts");return this.parseOrderBook(n,e,o)}parseTicker(e,t){let i=this.safeInteger(e,"ts"),s=this.safeString(e,"instId"),r=(t=this.safeMarket(s,t,"-")).symbol,a=this.safeString(e,"last"),n=this.safeString(e,"open24h"),o=this.safeBool(t,"spot",!1)?this.safeString(e,"volCurrency24h"):void 0,h=this.safeString(e,"vol24h"),d=this.safeString(e,"high24h"),l=this.safeString(e,"low24h");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:d,low:l,bid:this.safeString(e,"bidPrice"),bidVolume:this.safeString(e,"bidSize"),ask:this.safeString(e,"askPrice"),askVolume:this.safeString(e,"askSize"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:h,quoteVolume:o,indexPrice:this.safeString(e,"indexPrice"),markPrice:this.safeString(e,"markPrice"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={instId:i.id},r=await this.publicGetMarketTickers(this.extend(s,t)),a=this.safeList(r,"data",[]),n=this.safeDict(a,0,{});return this.parseTicker(n,i)}async fetchMarkPrice(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetMarketMarkPrice(this.extend(s,t)),a=this.safeList(r,"data",[]),n=this.safeDict(a,0,{});return this.parseTicker(n,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetMarketTickers(t),s=this.safeList(i,"data",[]);return this.parseTickers(s,e)}parseTrade(e,t){let i;let s=this.safeString(e,"tradeId"),r=this.safeString(e,"instId"),a=(t=this.safeMarket(r,t,"-")).symbol,n=this.safeInteger(e,"ts"),o=this.safeString2(e,"price","fillPrice"),h=this.safeString2(e,"size","fillSize"),d=this.safeString(e,"side"),l=this.safeString(e,"orderId"),c=this.safeString(e,"fee");return void 0!==c&&(i={cost:c,currency:t.settle}),this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:a,id:s,order:l,type:void 0,takerOrMaker:void 0,side:d,price:o,amount:h,cost:void 0,fee:i},t)}async fetchTrades(e,t,i,s={}){let r,a;await this.loadMarkets();let n=!1;if([n,s]=this.handleOptionAndParams(s,"fetchTrades","paginate"),n)return await this.fetchPaginatedCallCursor("fetchTrades",e,t,i,s,"tradeId","after",void 0,100);let o=this.market(e),h={instId:o.id};void 0!==i&&(h.limit=i),[a,s]=this.handleOptionAndParams(s,"fetchTrades","method","publicGetMarketTrades"),"publicGetMarketTrades"===a&&(r=await this.publicGetMarketTrades(this.extend(h,s)));let d=this.safeList(r,"data",[]);return this.parseTrades(d,o,t,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,6)]}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o=!1;if([o,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),o)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,100);void 0===s&&(s=100);let h={instId:n.id,bar:this.safeString(this.timeframes,t,t),limit:s},d=this.safeInteger(r,"until");void 0!==d&&(h.after=d,r=this.omit(r,"until")),a=await this.publicGetMarketCandles(this.extend(h,r));let l=this.safeList(a,"data",[]);return this.parseOHLCVs(l,n,t,i,s)}async fetchFundingRateHistory(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","paginate"),r)return await this.fetchPaginatedCallDeterministic("fetchFundingRateHistory",e,t,i,"8h",s);let a=this.market(e),o={instId:a.id};void 0!==t&&(o.before=Math.max(t-1,0)),void 0!==i&&(o.limit=i);let h=await this.publicGetMarketFundingRateHistory(this.extend(o,s)),d=[],l=this.safeList(h,"data",[]);for(let e=0;e<l.length;e++){let t=l[e],i=this.safeInteger(t,"fundingTime");d.push({info:t,symbol:a.symbol,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:i,datetime:this.iso8601(i)})}let c=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(c,a.symbol,t,i)}parseFundingRate(e,t){let i=this.safeString(e,"instId"),s=this.safeSymbol(i,t),r=this.safeInteger(e,"fundingTime");return{info:e,symbol:s,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:r,fundingDatetime:this.iso8601(r),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.swap)throw new n.ExchangeError(this.id+" fetchFundingRate() is only valid for swap markets");let s={instId:i.id},r=await this.publicGetMarketFundingRate(this.extend(s,t)),a=this.safeList(r,"data",[]),o=this.safeDict(a,0,{});return this.parseFundingRate(o,i)}parseBalanceByType(e){let t=this.safeList(e,"data");return void 0!==t&&Array.isArray(t)?this.parseFundingBalance(e):this.parseBalance(e)}parseBalance(e){let t={info:e},i=this.safeDict(e,"data",{}),s=this.safeInteger(i,"ts"),r=this.safeList(i,"details",[]);for(let e=0;e<r.length;e++){let i=r[e],s=this.safeString(i,"currency"),a=this.safeCurrencyCode(s),n=this.account(),o=this.safeString(i,"equity"),h=this.safeString(i,"available");void 0===o||void 0===h?(n.free=this.safeString(i,"availableEquity"),n.used=this.safeString(i,"frozen")):(n.total=o,n.free=h),t[a]=n}return t.timestamp=s,t.datetime=this.iso8601(s),this.safeBalance(t)}parseFundingBalance(e){let t={info:e},i=this.safeList(e,"data",[]);for(let e=0;e<i.length;e++){let s=i[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.free=this.safeString(s,"available"),n.used=this.safeString(s,"frozen"),t[a]=n}return this.safeBalance(t)}parseTradingFee(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.parseNumber(r.Y.stringNeg(this.safeString2(e,"maker","makerU"))),taker:this.parseNumber(r.Y.stringNeg(this.safeString2(e,"taker","takerU"))),percentage:void 0,tierBased:void 0}}async fetchBalance(e={}){let t,i;await this.loadMarkets(),[t,e]=this.handleOptionAndParams2(e,"fetchBalance","accountType","type");let s={};if(void 0!==t&&"swap"!==t){let r=this.safeDict(this.options,"accountsByType",{}),a=this.safeString(r,t,t);s.accountType=a,i=await this.privateGetAssetBalances(this.extend(s,e))}else i=await this.privateGetAccountBalance(this.extend(s,e));return this.parseBalanceByType(i)}createOrderRequest(e,t,i,s,r,a={}){let n;let o={instId:this.market(e).id,side:i,orderType:t,size:this.amountToPrecision(e,s),brokerId:this.safeString(this.options,"brokerId","ec6dd3a7dd982d0b")};[n,a]=this.handleMarginModeAndParams("createOrder",a,"cross"),o.marginMode=n;let h=this.safeString(a,"timeInForce","GTC"),d="market"===t;a=this.omit(a,["timeInForce"]);let l="IOC"===h||"ioc"===t,c=d&&l;d||c?o.orderType="market":o.price=this.priceToPrecision(e,r);let u=!1;[u,a]=this.handlePostOnly(d,"post_only"===t,a),u&&(o.type="post_only");let f=this.safeDict(a,"stopLoss"),p=this.safeDict(a,"takeProfit");a=this.omit(a,["stopLoss","takeProfit"]);let m=void 0!==f,g=void 0!==p;if(m||g){if(m){let t=this.safeString2(f,"triggerPrice","stopPrice");o.slTriggerPrice=this.priceToPrecision(e,t);let i=this.safeString(f,"price","-1");o.slOrderPrice=this.priceToPrecision(e,i)}if(g){let t=this.safeString2(p,"triggerPrice","stopPrice");o.tpTriggerPrice=this.priceToPrecision(e,t);let i=this.safeString(p,"price","-1");o.tpOrderPrice=this.priceToPrecision(e,i)}}return this.extend(o,a)}parseOrderStatus(e){return this.safeString({canceled:"canceled",order_failed:"canceled",live:"open",partially_filled:"open",filled:"closed",effective:"closed"},e,e)}parseOrder(e,t){let i,s,a,n;let o=this.safeString2(e,"tpslId","orderId"),h=this.safeInteger(e,"createTime"),d=this.safeInteger(e,"updateTime"),l=this.safeInteger(e,"fillTime"),c=this.safeString(e,"side"),u=this.safeString(e,"orderType");"post_only"===u?(i=!0,u="limit"):"fok"===u?(s="FOK",u="limit"):"ioc"===u&&(s="IOC",u="limit");let f=this.safeString(e,"instId");t=this.safeMarket(f,t);let p=this.safeSymbol(f,t,"-"),m=this.safeString(e,"filledSize"),g=this.safeString2(e,"px","price"),y=this.safeString(e,"averagePrice"),v=this.parseOrderStatus(this.safeString(e,"state")),b=this.safeString(e,"fee"),w=this.safeString(e,"size"),k=this.safeString(e,"leverage","1"),S=this.safeString(t,"contractSize"),O=r.Y.stringMul(S,m);if(void 0!==y&&(a=r.Y.stringMul(y,O),a=r.Y.stringDiv(a,k)),void 0!==b){let t=r.Y.stringAbs(b),i=this.safeString(e,"feeCcy","USDT"),s=this.safeCurrencyCode(i);n={cost:this.parseNumber(t),currency:s}}let T=this.safeString(e,"clientOrderId");void 0!==T&&T.length<1&&(T=void 0);let I=this.safeNumber(e,"slTriggerPrice"),x=this.safeNumber(e,"slOrderPrice"),P=this.safeNumber(e,"tpTriggerPrice"),M=this.safeNumber(e,"tpOrderPrice"),A=this.safeString(e,"reduceOnly");return this.safeOrder({info:e,id:o,clientOrderId:T,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:l,lastUpdateTimestamp:d,symbol:p,type:u,timeInForce:s,postOnly:i,side:c,price:g,stopLossTriggerPrice:I,takeProfitTriggerPrice:P,stopLossPrice:x,takeProfitPrice:M,average:y,cost:a,amount:w,filled:m,remaining:void 0,status:v,fee:n,trades:void 0,reduceOnly:"true"===A},t)}async createOrder(e,t,i,s,r,a={}){let n,o;await this.loadMarkets();let h=this.market(e),d=this.safeBool(a,"tpsl",!1);a=this.omit(a,"tpsl"),[n,a]=this.handleOptionAndParams(a,"createOrder","method","privatePostTradeOrder");let l=void 0!==this.safeString(a,"stopLossPrice"),c=void 0!==this.safeString(a,"takeProfitPrice");if(d||"privatePostTradeOrderTpsl"===n||l||c){let n=this.createTpslOrderRequest(e,t,i,s,r,a);o=await this.privatePostTradeOrderTpsl(n)}else{let n=this.createOrderRequest(e,t,i,s,r,a);o=await this.privatePostTradeOrder(n)}let u=this.safeList(o,"data",[]),f=this.safeDict(u,0),p=this.parseOrder(f,h);return p.type=t,p.side=i,p}createTpslOrderRequest(e,t,i,s,r,a={}){let o=this.market(e),h=this.safeString(a,"positionSide","net"),d={instId:o.id,side:i,positionSide:h,brokerId:this.safeString(this.options,"brokerId","ec6dd3a7dd982d0b")};void 0!==s&&(d.size=this.amountToPrecision(e,s));let l=this.safeString(a,"marginMode","cross");if("cross"!==l&&"isolated"!==l)throw new n.BadRequest(this.id+" createTpslOrder() requires a marginMode parameter that must be either cross or isolated");let c=this.safeString(a,"stopLossPrice"),u=this.safeString(a,"takeProfitPrice");return void 0!==c?(d.slTriggerPrice=this.priceToPrecision(e,c),"market"===t?d.slOrderPrice="-1":d.slOrderPrice=this.priceToPrecision(e,r)):void 0!==u&&(d.tpTriggerPrice=this.priceToPrecision(e,u),"market"===t?d.tpOrderPrice="-1":d.tpOrderPrice=this.priceToPrecision(e,r)),d.marginMode=l,a=this.omit(a,["stopLossPrice","takeProfitPrice"]),this.extend(d,a)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={instId:s.id},a=this.safeBoolN(i,["stop","trigger","tpsl"],!1),o=this.safeString(i,"clientOrderId");void 0!==o?r.clientOrderId=o:a?r.tpslId=e.toString():r.orderId=e.toString();let h=this.omit(i,["orderId","clientOrderId","stop","trigger","tpsl"]);if(a){let s=await this.cancelOrders([e],t,i);return this.safeDict(s,0)}let d=await this.privatePostTradeCancelOrder(this.extend(r,h)),l=this.safeList(d,"data",[]),c=this.safeDict(l,0);return this.parseOrder(c,s)}async createOrders(e,t={}){await this.loadMarkets();let i=[];for(let s=0;s<e.length;s++){let r=e[s],a=this.safeString(r,"symbol"),n=this.safeString(r,"type"),o=this.safeString(r,"side"),h=this.safeValue(r,"amount"),d=this.safeValue(r,"price"),l=this.safeDict(r,"params",{}),c=this.extend(l,t),u=this.createOrderRequest(a,n,o,h,d,c);i.push(u)}let s=await this.privatePostTradeBatchOrders(i),r=this.safeList(s,"data",[]);return this.parseOrders(r)}async fetchOpenOrders(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o=!1;if([o,s]=this.handleOptionAndParams(s,"fetchOpenOrders","paginate"),o)return await this.fetchPaginatedCallDynamic("fetchOpenOrders",e,t,i,s);let h={};void 0!==e&&(r=this.market(e),h.instId=r.id),void 0!==i&&(h.limit=i);let d=this.safeBoolN(s,["stop","trigger","tpsl","TPSL"],!1);[a,s]=this.handleOptionAndParams(s,"fetchOpenOrders","method","privateGetTradeOrdersPending");let l=this.omit(s,["method","stop","trigger","tpsl","TPSL"]);n=d||"privateGetTradeOrdersTpslPending"===a?await this.privateGetTradeOrdersTpslPending(this.extend(h,l)):await this.privateGetTradeOrdersPending(this.extend(h,l));let c=this.safeList(n,"data",[]);return this.parseOrders(c,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s);let n={};void 0!==e&&(r=this.market(e),n.instId=r.id),[n,s]=this.handleUntilOption("end",n,s),void 0!==i&&(n.limit=i);let o=await this.privateGetTradeFillsHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchDeposits","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchDeposits",e,t,i,s);let n={};void 0!==e&&(r=this.currency(e),n.currency=r.id),void 0!==t&&(n.before=Math.max(t-1,0)),void 0!==i&&(n.limit=i),[n,s]=this.handleUntilOption("after",n,s);let o=await this.privateGetAssetDepositHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i,s)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchWithdrawals","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchWithdrawals",e,t,i,s);let n={};void 0!==e&&(r=this.currency(e),n.currency=r.id),void 0!==t&&(n.before=Math.max(t-1,0)),void 0!==i&&(n.limit=i),[n,s]=this.handleUntilOption("after",n,s);let o=await this.privateGetAssetWithdrawalHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i,s)}async fetchLedger(e,t,i,s={}){let r,a;await this.loadMarkets();let n=!1;if([n,s]=this.handleOptionAndParams(s,"fetchLedger","paginate"),n)return await this.fetchPaginatedCallDynamic("fetchLedger",e,t,i,s);let o={};void 0!==i&&(o.limit=i),void 0!==e&&(r=this.currency(e),o.currency=r.id),[o,s]=this.handleUntilOption("end",o,s),a=await this.privateGetAssetBills(this.extend(o,s));let h=this.safeList(a,"data",[]);return this.parseLedger(h,r,t,i)}parseTransaction(e,t){let i,s;let r=this.safeString(e,"withdrawId"),a=this.safeString(e,"depositId"),n=this.safeString(e,"address"),o=this.safeString(e,"tag");void 0!==r?(i="withdrawal",s=r):(s=a,i="deposit");let h=this.safeString(e,"currency"),d=this.safeCurrencyCode(h),l=this.safeNumber(e,"amount"),c=this.parseTransactionStatus(this.safeString(e,"state")),u=this.safeString(e,"txId"),f=this.safeInteger(e,"ts"),p=this.safeString(e,"feeCurrency"),m=this.safeCurrencyCode(p),g=this.safeNumber(e,"fee");return{info:e,id:s,currency:d,amount:l,network:void 0,addressFrom:void 0,addressTo:n,address:n,tagFrom:void 0,tagTo:o,tag:o,status:c,type:i,updated:void 0,txid:u,timestamp:f,datetime:this.iso8601(f),internal:void 0,comment:void 0,fee:{currency:m,cost:g}}}parseTransactionStatus(e){return this.safeString({0:"pending",1:"ok",2:"failed",3:"pending"},e,e)}parseLedgerEntryType(e){return this.safeString({1:"transfer",2:"trade",3:"trade",4:"rebate",5:"trade",6:"transfer",7:"trade",8:"fee",9:"trade",10:"trade",11:"trade"},e,e)}parseLedgerEntry(e,t){let i=this.safeString(e,"currency"),s=this.safeCurrencyCode(i,t);t=this.safeCurrency(i,t);let r=this.safeInteger(e,"ts");return this.safeLedgerEntry({info:e,id:this.safeString(e,"transferId"),direction:void 0,account:void 0,referenceId:this.safeString(e,"clientId"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:s,amount:this.safeNumber(e,"amount"),timestamp:r,datetime:this.iso8601(r),before:void 0,after:void 0,status:"ok",fee:void 0},t)}parseIds(e){return"string"==typeof e?e.split(","):e}async cancelOrders(e,t,i={}){let s;if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(t),a=[],o=this.safeDict(this.options,"cancelOrders",{}),h=this.safeString(o,"method","privatePostTradeCancelBatchOrders"),d=this.safeString(i,"method",h),l=this.parseIds(this.safeValue(i,"clientOrderId")),c=this.parseIds(this.safeValue(i,"tpslId")),u=this.safeBoolN(i,["stop","trigger","tpsl"]);if(u&&(d="privatePostTradeCancelTpsl"),void 0===l){if(e=this.parseIds(e),void 0!==c)for(let e=0;e<c.length;e++)a.push({tpslId:c[e],instId:r.id});for(let t=0;t<e.length;t++)u?a.push({tpslId:e[t],instId:r.id}):a.push({orderId:e[t],instId:r.id})}else for(let e=0;e<l.length;e++)a.push({instId:r.id,clientOrderId:l[e]});s="privatePostTradeCancelTpsl"===d?await this.privatePostTradeCancelTpsl(a):await this.privatePostTradeCancelBatchOrders(a);let f=this.safeList(s,"data",[]);return this.parseOrders(f,r,void 0,void 0,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n=this.safeDict(this.options,"accountsByType",{}),o=this.safeString(n,i,i),h=this.safeString(n,s,s),d={currency:a.id,amount:this.currencyToPrecision(e,t),fromAccount:o,toAccount:h},l=await this.privatePostAssetTransfer(this.extend(d,r)),c=this.safeDict(l,"data",{});return this.parseTransfer(c,a)}parseTransfer(e,t){let i=this.safeString(e,"transferId");return{info:e,id:i,timestamp:void 0,datetime:void 0,currency:void 0,amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async fetchPosition(e,t={}){await this.loadMarkets();let i=this.market(e),s={instId:i.id},r=await this.privateGetAccountPositions(this.extend(s,t)),a=this.safeList(r,"data",[]),n=this.safeDict(a,0);if(void 0!==n)return this.parsePosition(n,i)}async fetchPositions(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.privateGetAccountPositions(t),s=this.safeList(i,"data",[]),r=this.parsePositions(s);return this.filterByArrayPositions(r,"symbol",e,!1)}parsePosition(e,t){let i,s,a;let n=this.safeString(e,"instId"),o=(t=this.safeMarket(n,t)).symbol,h=this.safeString(e,"positions"),d=r.Y.stringAbs(h),l=this.safeString(e,"positionSide"),c="net"!==l,u=this.parseNumber(d);void 0!==h&&"net"===l&&(l=r.Y.stringGt(h,"0")?"long":r.Y.stringLt(h,"0")?"short":void 0);let f=this.safeNumber(t,"contractSize"),p=this.numberToString(f),m=this.safeString(e,"markPrice"),g=this.safeString(e,"notionalUsd");t.inverse&&(g=r.Y.stringDiv(r.Y.stringMul(d,p),m));let y=this.parseNumber(g),v=this.safeString(e,"marginMode"),b=this.safeString(e,"averagePrice"),w=this.safeString(e,"unrealizedPnl"),k=this.safeString(e,"leverage");"cross"===v?(i=this.safeString(e,"initialMargin"),a=r.Y.stringAdd(i,w)):"isolated"===v&&(s=r.Y.stringDiv("1",k),a=this.safeString(e,"margin"));let S=this.safeString(e,"maintenanceMargin"),O=this.parseNumber(S),T=r.Y.stringDiv(S,g);void 0===s?s=this.parseNumber(r.Y.stringDiv(i,g,4)):void 0===i&&(i=r.Y.stringMul(s,g));let I=this.parseNumber(r.Y.stringDiv(r.Y.stringAdd(T,"0.00005"),"1",4)),x=this.safeNumber(e,"liquidationPrice"),P=this.safeString(e,"unrealizedPnlRatio"),M=this.parseNumber(r.Y.stringMul(P,"100")),A=this.safeInteger(e,"updateTime"),C=this.parseNumber(r.Y.stringDiv(S,a,4));return this.safePosition({info:e,id:void 0,symbol:o,notional:y,marginMode:v,liquidationPrice:x,entryPrice:this.parseNumber(b),unrealizedPnl:this.parseNumber(w),percentage:M,contracts:u,contractSize:f,markPrice:this.parseNumber(m),lastPrice:void 0,side:l,hedged:c,timestamp:A,datetime:this.iso8601(A),lastUpdateTimestamp:void 0,maintenanceMargin:O,maintenanceMarginPercentage:I,collateral:this.parseNumber(a),initialMargin:this.parseNumber(i),initialMarginPercentage:this.parseNumber(s),leverage:this.parseNumber(k),marginRatio:C,stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchLeverages(e,t={}){let i;if(await this.loadMarkets(),void 0===e)throw new n.ArgumentsRequired(this.id+" fetchLeverages() requires a symbols argument");if([i,t]=this.handleMarginModeAndParams("fetchLeverages",t),void 0===i&&(i=this.safeString(t,"marginMode","cross")),"cross"!==i&&"isolated"!==i)throw new n.BadRequest(this.id+" fetchLeverages() requires a marginMode parameter that must be either cross or isolated");e=this.marketSymbols(e);let s="";for(let t=0;t<e.length;t++){let i=e[t],r=this.market(i);t>0?s=s+","+r.id:s+=r.id}let r={instId:s,marginMode:i},a=await this.privateGetAccountBatchLeverageInfo(this.extend(r,t)),o=this.safeList(a,"data",[]);return this.parseLeverages(o,e,"instId")}async fetchLeverage(e,t={}){let i;if(await this.loadMarkets(),[i,t]=this.handleMarginModeAndParams("fetchLeverage",t),void 0===i&&(i=this.safeString(t,"marginMode","cross")),"cross"!==i&&"isolated"!==i)throw new n.BadRequest(this.id+" fetchLeverage() requires a marginMode parameter that must be either cross or isolated");let s=this.market(e),r={instId:s.id,marginMode:i},a=await this.privateGetAccountLeverageInfo(this.extend(r,t)),o=this.safeDict(a,"data",{});return this.parseLeverage(o,s)}parseLeverage(e,t){let i=this.safeString(e,"instId"),s=this.safeInteger(e,"leverage");return{info:e,symbol:this.safeSymbol(i,t),marginMode:this.safeStringLower(e,"marginMode"),longLeverage:s,shortLeverage:s}}async setLeverage(e,t,i={}){let s;if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new n.BadRequest(this.id+" setLeverage() leverage should be between 1 and 125");await this.loadMarkets();let r=this.market(t);if([s,i]=this.handleMarginModeAndParams("setLeverage",i,"cross"),"cross"!==s&&"isolated"!==s)throw new n.BadRequest(this.id+" setLeverage() requires a marginMode parameter that must be either cross or isolated");let a={leverage:e,marginMode:s,instId:r.id};return await this.privatePostAccountSetLeverage(this.extend(a,i))}async closePosition(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),a=this.safeString(i,"clientOrderId");[s,i]=this.handleMarginModeAndParams("closePosition",i,"cross");let n={instId:r.id,marginMode:s};void 0!==a&&(n.clientOrderId=a);let o=await this.privatePostTradeClosePosition(this.extend(n,i));return this.safeDict(o,"data")}async fetchClosedOrders(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o=!1;if([o,s]=this.handleOptionAndParams(s,"fetchClosedOrders","paginate"),o)return await this.fetchPaginatedCallDynamic("fetchClosedOrders",e,t,i,s);let h={};void 0!==e&&(r=this.market(e),h.instId=r.id),void 0!==i&&(h.limit=i),void 0!==t&&(h.begin=t);let d=this.safeBoolN(s,["stop","trigger","tpsl","TPSL"],!1);[a,s]=this.handleOptionAndParams(s,"fetchOpenOrders","method","privateGetTradeOrdersHistory");let l=this.omit(s,["method","stop","trigger","tpsl","TPSL"]);n=d||"privateGetTradeOrdersTpslHistory"===a?await this.privateGetTradeOrdersTpslHistory(this.extend(h,l)):await this.privateGetTradeOrdersHistory(this.extend(h,l));let c=this.safeList(n,"data",[]);return this.parseOrders(c,r,t,i)}async fetchMarginMode(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.privateGetAccountMarginMode(t),r=this.safeDict(s,"data",{});return this.parseMarginMode(r,i)}parseMarginMode(e,t){return{info:e,symbol:t.symbol,marginMode:this.safeString(e,"marginMode")}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code"),c=this.safeString(o,"msg"),u=this.id+" "+a;if(void 0!==l&&"0"!==l)throw this.throwExactlyMatchedException(this.exceptions.exact,c,u),this.throwExactlyMatchedException(this.exceptions.exact,l,u),this.throwBroadlyMatchedException(this.exceptions.broad,c,u),new n.ExchangeError(u);let f=this.safeList(o,"data"),p=this.safeDict(f,0),m=this.safeString(p,"msg"),g=this.safeString(p,"code");void 0!==g&&"0"!==g&&(this.throwExactlyMatchedException(this.exceptions.exact,g,u),this.throwExactlyMatchedException(this.exceptions.exact,m,u),this.throwBroadlyMatchedException(this.exceptions.broad,m,u))}sign(e,t="public",i="GET",s={},r,a){let n="/api/"+this.version+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e)),h=this.implodeHostname(this.urls.api.rest)+n;if("public"===t)this.isEmpty(o)||(h+="?"+this.urlencode(o));else if("private"===t){this.checkRequiredCredentials();let e=this.milliseconds().toString();r={"ACCESS-KEY":this.apiKey,"ACCESS-PASSPHRASE":this.password,"ACCESS-TIMESTAMP":e,"ACCESS-NONCE":e};let t="";if("GET"===i){if(!this.isEmpty(o)){let e="?"+this.urlencode(o);h+=e,n+=e}}else this.isEmpty(o)||(t=a=this.json(o)),r["Content-Type"]="application/json";let s=n+i+e+e+t,d=this.stringToBase64(this.hmac(this.encode(s),this.encode(this.secret),l.s));r["ACCESS-SIGN"]=d}return{url:h,method:i,body:a,headers:r}}}class eE extends s.k{}let e_=eE;class eN extends e_{describe(){return this.deepExtend(super.describe(),{id:"btcalpha",name:"BTC-Alpha",countries:["US"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL2OrderBook:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{"5m":"5","15m":"15","30m":"30","1h":"60","4h":"240","1d":"D"},urls:{logo:"https://github.com/user-attachments/assets/dce49f3a-61e5-4ba0-a2fe-41d192fd0e5d",api:{rest:"https://btc-alpha.com/api"},www:"https://btc-alpha.com",doc:"https://btc-alpha.github.io/api-docs",fees:"https://btc-alpha.com/fees/",referral:"https://btc-alpha.com/?r=123788"},api:{public:{get:["currencies/","pairs/","orderbook/{pair_name}","exchanges/","charts/{pair}/{type}/chart/","ticker/"]},private:{get:["wallets/","orders/own/","order/{id}/","exchanges/own/","deposits/","withdraws/"],post:["order/","order-cancel/"]}},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")},funding:{withdraw:{}}},commonCurrencies:{CBC:"Cashbery"},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:2e3,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:2e3,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:2e3,daysBack:void 0,daysBackCanceled:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchOHLCV:{max:720}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{},broad:{"Out of balance":n.InsufficientFunds}}})}async fetchMarkets(e={}){let t=await this.publicGetPairs(e);return this.parseMarkets(t)}parseMarket(e){let t=this.safeString(e,"name"),i=this.safeString(e,"currency1"),s=this.safeString(e,"currency2"),a=this.safeCurrencyCode(i),n=this.safeCurrencyCode(s),o=this.safeString(e,"price_precision"),h=this.parsePrecision(o),d=this.safeString(e,"minimum_order_size");return{id:t,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"amount_precision"))),price:this.parseNumber(this.parsePrecision(o))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(d),max:this.safeNumber(e,"maximum_order_size")},price:{min:this.parseNumber(h),max:void 0},cost:{min:this.parseNumber(r.Y.stringMul(h,d)),max:void 0}},created:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t);return this.parseTickers(i,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t){let i=this.safeString(e,"timestamp"),s=parseInt(r.Y.stringMul(i,"1000000")),a=this.safeString(e,"pair");t=this.safeMarket(a,t,"_");let n=this.safeString(e,"last");return this.safeTicker({info:e,symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:this.safeString(e,"diff"),percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"vol")},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair_name:s.id};t&&(r.limit_sell=t,r.limit_buy=t);let a=await this.publicGetOrderbookPairName(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"buy","sell","price","amount")}parseBidsAsks(e,t=0,i=1,s=2){let r=[];for(let s=0;s<e.length;s++){let a=e[s];a&&r.push(this.parseBidAsk(a,t,i))}return r}parseTrade(e,t){let i=this.safeString(e,"pair");t=this.safeMarket(i,t,"_");let s=this.safeString(e,"timestamp"),a=this.parseToInt(r.Y.stringMul(s,"1000000")),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),h=this.safeString(e,"id"),d=this.safeString2(e,"my_side","type");return this.safeTrade({id:h,info:e,timestamp:a,datetime:this.iso8601(a),symbol:t.symbol,order:h,type:"limit",side:d,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==i&&(a.limit=i);let n=await this.publicGetExchanges(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a=await this.privateGetDeposits(s);return this.parseTransactions(a,r,t,i,{type:"deposit"})}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency_id=r.id);let n=await this.privateGetWithdraws(this.extend(a,s));return this.parseTransactions(n,r,t,i,{type:"withdrawal"})}parseTransaction(e,t){let i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"currency"),r=this.safeString(e,"status");return{id:this.safeString(e,"id"),info:e,timestamp:i,datetime:this.iso8601(i),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"amount"),txid:void 0,type:void 0,status:this.parseTransactionStatus(r),comment:void 0,internal:void 0,fee:void 0,updated:void 0}}parseTransactionStatus(e){return this.safeString({10:"pending",20:"pending",30:"ok",40:"failed",50:"canceled"},e,e)}parseOHLCV(e,t){return[this.safeTimestamp(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="5m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={pair:a.id,type:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=s),void 0!==i&&(n.since=this.parseToInt(i/1e3));let o=await this.publicGetChartsPairTypeChart(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(s,"reserve"),n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetWallets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({1:"open",2:"canceled",3:"closed"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"pair"),r=(t=this.safeMarket(s,t,"_")).symbol;i=this.safeBool(e,"success",!1)?this.safeTimestamp(e,"date"):this.safeInteger(e,"date");let a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"amount_filled"),h=this.safeString(e,"amount_original"),d=this.parseOrderStatus(this.safeString(e,"status")),l=this.safeStringN(e,["oid","id","order"]),c=this.safeValue(e,"trades"),u=this.safeString2(e,"my_side","type");return this.safeOrder({id:l,clientOrderId:void 0,datetime:this.iso8601(i),timestamp:i,status:d,symbol:r,type:"limit",timeInForce:void 0,postOnly:void 0,side:u,price:a,triggerPrice:void 0,cost:void 0,amount:h,filled:o,remaining:n,trades:c,fee:void 0,info:e,lastTradeTimestamp:void 0,average:void 0},t)}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new n.InvalidOrder(this.id+" only limits orders are supported");await this.loadMarkets();let h=this.market(e),d={pair:h.id,type:i,amount:s,price:this.priceToPrecision(e,a)},l=await this.privatePostOrder(this.extend(d,o));if(!l.success)throw new n.InvalidOrder(this.id+" "+this.json(l));let c=this.parseOrder(l,h),u=c.amount.toString();return s=r.Y.stringGt(u,"0")?c.amount:s,c.amount=this.parseNumber(s),c}async cancelOrder(e,t,i={}){let s=await this.privatePostOrderCancel(this.extend({order:e},i));return this.parseOrder(s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrderId(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetOrdersOwn(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"1"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"3"},s))}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={};if(void 0!==e){let t=this.market(e);r.pair=t.id}void 0!==i&&(r.limit=i);let a=await this.privateGetExchangesOwn(this.extend(r,s));return this.parseTrades(a,void 0,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urlencode(this.keysort(this.omit(s,this.extractParams(e)))),o=this.urls.api.rest+"/";if("charts/{pair}/{type}/chart/"!==e&&(o+="v1/"),o+=this.implodeParams(e,s),r={Accept:"application/json"},"public"===t)n.length&&(o+="?"+n);else{this.checkRequiredCredentials();let e=this.apiKey;"POST"===i?(r["Content-Type"]="application/x-www-form-urlencoded",e+=a=n):n.length&&(o+="?"+n),r["X-KEY"]=this.apiKey,r["X-SIGN"]=this.hmac(this.encode(e),this.encode(this.secret),l.s),r["X-NONCE"]=this.nonce().toString()}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"error");if(void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new n.ExchangeError(e)}}}class eL extends s.k{}let eR=eL;var eD=i(1717);class eV extends eR{describe(){return this.deepExtend(super.describe(),{id:"btcbox",name:"BtcBox",countries:["JP"],rateLimit:1e3,version:"v1",pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1,ws:!1},urls:{logo:"https://github.com/user-attachments/assets/1e2cb499-8d0f-4f8f-9464-3c015cfbc76b",api:{rest:"https://www.btcbox.co.jp/api"},www:"https://www.btcbox.co.jp/",doc:"https://blog.btcbox.jp/en/archives/8762",fees:"https://support.btcbox.co.jp/hc/en-us/articles/360001235694-Fees-introduction"},api:{public:{get:["depth","orders","ticker","tickers"]},private:{post:["balance","trade_add","trade_cancel","trade_list","trade_view","wallet"]}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:void 0,fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:100,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:100,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:void 0,fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{104:n.AuthenticationError,105:n.PermissionDenied,106:n.InvalidNonce,107:n.InvalidOrder,200:n.InsufficientFunds,201:n.InvalidOrder,202:n.InvalidOrder,203:n.OrderNotFound,401:n.OrderNotFound,402:n.DDoSProtection}})}async fetchMarkets(e={}){let t=await this.publicGetTickers(),i=Object.keys(t),s=[];for(let e=0;e<i.length;e++){let r=i[e],a=r.split("_"),n=this.safeString(a,0),o=this.safeString(a,1),h=o.toLowerCase(),d=n.toLowerCase(),l=t[r],c=n+"/"+o,u="BTC"===d?this.parseNumber("0.0005"):this.parseNumber("0.0010");s.push(this.safeMarketStructure({id:d,uppercaseId:void 0,symbol:c,base:n,baseId:d,quote:o,quoteId:h,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,taker:u,maker:u,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},leverage:{min:void 0,max:void 0}},precision:{price:void 0,amount:void 0},active:void 0,created:void 0,info:l}))}return s}parseMarket(e){let t=this.safeString(e,"base"),i=this.safeCurrencyCode(t),s=this.safeString(e,"quote"),r=this.safeCurrencyCode(s);return{id:this.safeString(e,"symbol"),uppercaseId:void 0,symbol:i+"/"+r,base:i,baseId:t,quote:r,quoteId:s,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:{amount:{min:this.safeNumber(e,"minLimitBaseAmount"),max:this.safeNumber(e,"maxLimitBaseAmount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},leverage:{min:void 0,max:void 0}},precision:{price:this.parseNumber(this.parsePrecision(this.safeString(e,"quotePrecision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(e,"basePrecision")))},active:void 0,created:void 0,info:e}}parseBalance(e){let t={info:e},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){let r=i[s],a=this.currency(r).id,n=a+"_balance";if(n in e){let i=this.account(),s=a+"_lock";i.free=this.safeString(e,n),i.used=this.safeString(e,s),t[r]=i}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={};this.symbols.length>1&&(r.coin=s.baseId);let a=await this.publicGetDepth(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={};this.symbols.length>1&&(s.coin=i.baseId);let r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t);return this.parseTickers(i,e)}parseTrade(e,t){let i=this.safeTimestamp(e,"date");t=this.safeMarket(void 0,t);let s=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeString(e,"type");return this.safeTrade({info:e,id:s,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:n,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={};this.symbols.length>1&&(a.coin=r.baseId);let n=await this.publicGetOrders(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={amount:s,price:r,type:i,coin:n.baseId},h=await this.privatePostTradeAdd(this.extend(o,a));return this.parseOrder(h,n)}async cancelOrder(e,t,i={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");let s=this.market(t),r={id:e,coin:s.baseId},a=await this.privatePostTradeCancel(this.extend(r,i));return this.parseOrder(a,s)}parseOrderStatus(e){return this.safeString({part:"open",all:"closed",cancelled:"canceled",closed:"closed",no:"closed"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"id");void 0!==this.safeString(e,"datetime")&&(i=this.parse8601(e.datetime+"+09:00"));let a=this.safeString(e,"amount_original"),n=this.safeString(e,"amount_outstanding"),o=this.safeString(e,"price"),h=this.parseOrderStatus(this.safeString(e,"status"));void 0===h&&r.Y.stringEquals(n,"0")&&(h="closed"),t=this.safeMarket(void 0,t);let d=this.safeString(e,"type");return this.safeOrder({id:s,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,amount:a,remaining:n,filled:void 0,side:d,type:void 0,timeInForce:void 0,postOnly:void 0,status:h,symbol:t.symbol,price:o,triggerPrice:void 0,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOrder(e,t,i={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");let s=this.market(t),r=this.extend({id:e,coin:s.baseId},i),a=await this.privatePostTradeView(this.extend(r,i));return this.parseOrder(a,s)}async fetchOrdersByType(e,t,i,s,r={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");let a=this.market(t),n={type:e,coin:a.baseId},o=await this.privatePostTradeList(this.extend(n,r)),h=this.parseOrders(o,a,i,s);if("open"===e)for(let e=0;e<h.length;e++)h[e].status="open";return h}async fetchOrders(e,t,i,s={}){return await this.fetchOrdersByType("all",e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersByType("open",e,t,i,s)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+this.version+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.extend({key:this.apiKey,nonce:e},s),i=this.urlencode(t),n=this.hash(this.encode(this.secret),eD.F);t.signature=this.hmac(this.encode(i),this.encode(n),l.s),a=this.urlencode(t),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o||e>=400)return;let l=this.safeValue(o,"result");if(void 0===l||!0===l)return;let c=this.safeValue(o,"code"),u=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions,c,u),new n.ExchangeError(u)}async request(e,t="public",i="GET",s={},r,a,o={}){let h=await this.fetch2(e,t,i,s,r,a,o);if("string"==typeof h){if(h=this.strip(h),!this.isJsonEncodedObject(h))throw new n.ExchangeError(this.id+" "+h);h=JSON.parse(h)}return h}}class eq extends s.k{}let eF=eq;class eH extends eF{describe(){return this.deepExtend(super.describe(),{id:"btcmarkets",name:"BTC Markets",countries:["AU"],rateLimit:1e3,version:"v3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createTriggerOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:"emulated",fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTime:!0,fetchTrades:!0,fetchTransactions:"emulated",fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://github.com/user-attachments/assets/8c8d6907-3873-4cc4-ad20-e22fba28247e",api:{public:"https://api.btcmarkets.net",private:"https://api.btcmarkets.net"},www:"https://btcmarkets.net",doc:["https://api.btcmarkets.net/doc/v3","https://github.com/BTCMarkets/API"]},api:{public:{get:["markets","markets/{marketId}/ticker","markets/{marketId}/trades","markets/{marketId}/orderbook","markets/{marketId}/candles","markets/tickers","markets/orderbooks","time"]},private:{get:["orders","orders/{id}","batchorders/{ids}","trades","trades/{id}","withdrawals","withdrawals/{id}","deposits","deposits/{id}","transfers","transfers/{id}","addresses","withdrawal-fees","assets","accounts/me/trading-fees","accounts/me/withdrawal-limits","accounts/me/balances","accounts/me/transactions","reports/{id}"],post:["orders","batchorders","withdrawals","reports"],delete:["orders","orders/{id}","batchorders/{ids}"],put:["orders/{id}"]}},timeframes:{"1m":"1m","1h":"1h","1d":"1d"},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!0,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:100,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:100,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{InsufficientFund:n.InsufficientFunds,InvalidPrice:n.InvalidOrder,InvalidAmount:n.InvalidOrder,MissingArgument:n.BadRequest,OrderAlreadyCancelled:n.InvalidOrder,OrderNotFound:n.OrderNotFound,OrderStatusIsFinal:n.InvalidOrder,InvalidPaginationParameter:n.BadRequest},broad:{}},fees:{percentage:!0,tierBased:!0,maker:this.parseNumber("-0.0005"),taker:this.parseNumber("0.0020")},options:{fees:{AUD:{maker:this.parseNumber("0.0085"),taker:this.parseNumber("0.0085")}}}})}async fetchTransactionsWithMethod(e,t,i,s,r={}){let a;await this.loadMarkets();let n={};void 0!==s&&(n.limit=s),void 0!==i&&(n.after=i),void 0!==t&&(a=this.currency(t));let o=await this[e](this.extend(n,r));return this.parseTransactions(o,a,i,s)}async fetchDepositsWithdrawals(e,t,i,s={}){return await this.fetchTransactionsWithMethod("privateGetTransfers",e,t,i,s)}async fetchDeposits(e,t,i,s={}){return await this.fetchTransactionsWithMethod("privateGetDeposits",e,t,i,s)}async fetchWithdrawals(e,t,i,s={}){return await this.fetchTransactionsWithMethod("privateGetWithdrawals",e,t,i,s)}parseTransactionStatus(e){return this.safeString({Accepted:"pending","Pending Authorization":"pending",Complete:"ok",Cancelled:"cancelled",Failed:"failed"},e,e)}parseTransactionType(e){return this.safeString({Withdraw:"withdrawal",Deposit:"deposit"},e,e)}parseTransaction(e,t){let i;let s=this.parse8601(this.safeString(e,"creationTime")),a=this.parse8601(this.safeString(e,"lastUpdate")),n=this.parseTransactionType(this.safeStringLower(e,"type"));"withdraw"===n&&(n="withdrawal");let o=this.safeDict(e,"paymentDetail",{}),h=this.safeString(o,"txId"),d=this.safeString(o,"address");if(void 0!==d){let e=d.split("?dt=");e.length>1&&(d=e[0],i=e[1])}let l=d,c=i,u=this.safeString(e,"fee"),f=this.parseTransactionStatus(this.safeString(e,"status")),p=this.safeString(e,"assetName"),m=this.safeCurrencyCode(p),g=this.safeString(e,"amount");return u&&(g=r.Y.stringSub(g,u)),{id:this.safeString(e,"id"),txid:h,timestamp:s,datetime:this.iso8601(s),network:void 0,address:d,addressTo:l,addressFrom:void 0,tag:i,tagTo:c,tagFrom:void 0,type:n,amount:this.parseNumber(g),currency:m,status:f,updated:a,comment:this.safeString(e,"description"),internal:void 0,fee:{currency:m,cost:this.parseNumber(u),rate:void 0},info:e}}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e);return this.parseMarkets(t)}parseMarket(e){let t;let i=this.safeString(e,"baseAssetName"),s=this.safeString(e,"quoteAssetName"),r=this.safeString(e,"marketId"),a=this.safeCurrencyCode(i),n=this.safeCurrencyCode(s),o=a+"/"+n,h=this.safeValue(this.safeDict(this.options,"fees",{}),n,this.fees),d=this.parseNumber(this.parsePrecision(this.safeString(e,"priceDecimals"))),l=this.safeNumber(e,"minOrderAmount"),c=this.safeNumber(e,"maxOrderAmount"),u=this.safeString(e,"status");return"AUD"===n&&(t=d),{id:r,symbol:o,base:a,quote:n,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"Online"===u,contract:!1,linear:void 0,inverse:void 0,taker:h.taker,maker:h.maker,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"amountDecimals"))),price:d},limits:{leverage:{min:void 0,max:void 0},amount:{min:l,max:c},price:{min:t,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.parse8601(this.safeString(t,"timestamp"))}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"assetName"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(s,"locked"),n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountsMeBalances(e);return this.parseBalance(t)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,0)),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={marketId:a.id,timeWindow:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.from=this.iso8601(i)),void 0!==s&&(n.limit=Math.min(s,200));let o=await this.publicGetMarketsMarketIdCandles(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={marketId:this.market(e).id},r=await this.publicGetMarketsMarketIdOrderbook(this.extend(s,i)),a=this.safeIntegerProduct(r,"snapshotId",.001),n=this.parseOrderBook(r,e,a);return n.nonce=this.safeInteger(r,"snapshotId"),n}parseTicker(e,t){let i=this.safeString(e,"marketId"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"lastPrice"),n=this.safeString(e,"volume24h"),o=this.safeString(e,"volumeQte24h"),h=this.safeString(e,"price24h"),d=this.safeString(e,"pricePct24h");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high24h"),low:this.safeString(e,"low"),bid:this.safeString(e,"bestBid"),bidVolume:void 0,ask:this.safeString(e,"bestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:h,percentage:d,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={marketId:i.id},r=await this.publicGetMarketsMarketIdTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTicker2(e,t={}){await this.loadMarkets();let i=this.market(e),s={id:i.id},r=await this.publicGetMarketsMarketIdTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i;let s=this.parse8601(this.safeString(e,"timestamp")),r=this.safeString(e,"marketId"),a="AUD"===(t=this.safeMarket(r,t,"-")).quote?t.quote:t.base,n=this.safeString(e,"side");"Bid"===n?n="buy":"Ask"===n&&(n="sell");let o=this.safeString(e,"id"),h=this.safeString(e,"price"),d=this.safeString(e,"amount"),l=this.safeString(e,"orderId"),c=this.safeString(e,"fee");void 0!==c&&(i={cost:c,currency:a});let u=this.safeStringLower(e,"liquidityType");return this.safeTrade({info:e,id:o,timestamp:s,datetime:this.iso8601(s),order:l,symbol:t.symbol,type:void 0,side:n,price:h,amount:d,cost:void 0,takerOrMaker:u,fee:i},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={marketId:r.id},n=await this.publicGetMarketsMarketIdTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h={marketId:o.id,amount:this.amountToPrecision(e,s),side:"buy"===i?"Bid":"Ask"},d=t.toLowerCase(),l=this.safeValue(this.options,"orderTypes",{limit:"Limit",market:"Market",stop:"Stop","stop limit":"Stop Limit","take profit":"Take Profit"});h.type=this.safeString(l,d,t);let c=!1,u=!1;if("limit"===d?c=!0:"stop limit"===d?(u=!0,c=!0):"take profit"===d?u=!0:"stop"===d&&(u=!0),c){if(void 0===r)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for a "+t+"order");h.price=this.priceToPrecision(e,r)}if(u){let i=this.safeNumber(a,"triggerPrice");if(a=this.omit(a,"triggerPrice"),void 0===i)throw new n.ArgumentsRequired(this.id+" createOrder() requires a triggerPrice parameter for a "+t+"order");h.triggerPrice=this.priceToPrecision(e,i)}let f=this.safeString(a,"clientOrderId");void 0!==f&&(h.clientOrderId=f),a=this.omit(a,"clientOrderId");let p=await this.privatePostOrders(this.extend(h,a));return this.parseOrder(p,o)}async cancelOrders(e,t,i={}){await this.loadMarkets();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t]);let s=await this.privateDeleteBatchordersIds(this.extend({ids:e},i)),r=this.safeList(s,"cancelOrders",[]),a=this.safeList(s,"unprocessedRequests",[]),n=this.arrayConcat(r,a);return this.parseOrders(n)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteOrdersId(this.extend({id:e},i));return this.parseOrder(s)}calculateFee(e,t,i,s,a,n="taker",o={}){let h,d;let l=this.markets[e];if("AUD"===l.quote){h=l.quote;let t=this.numberToString(s),i=this.numberToString(a),n=r.Y.stringMul(t,i);d=this.costToPrecision(e,n)}else h=l.base,d=this.amountToPrecision(e,s);let c=l[n],u=r.Y.stringMul(this.numberToString(c),d);return{type:n,currency:h,rate:c,cost:parseFloat(this.feeToPrecision(e,u))}}parseOrderStatus(e){return this.safeString({Accepted:"open",Placed:"open","Partially Matched":"open","Fully Matched":"closed",Cancelled:"canceled","Partially Cancelled":"canceled",Failed:"rejected"},e,e)}parseOrder(e,t){let i=this.parse8601(this.safeString(e,"creationTime")),s=this.safeString(e,"marketId");t=this.safeMarket(s,t,"-");let r=this.safeString(e,"side");"Bid"===r?r="buy":"Ask"===r&&(r="sell");let a=this.safeStringLower(e,"type"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),h=this.safeString(e,"openAmount"),d=this.parseOrderStatus(this.safeString(e,"status")),l=this.safeString(e,"orderId"),c=this.safeString(e,"clientOrderId"),u=this.safeString(e,"timeInForce"),f=this.safeBool(e,"postOnly");return this.safeOrder({info:e,id:l,clientOrderId:c,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:t.symbol,type:a,timeInForce:u,postOnly:f,side:r,price:n,triggerPrice:this.safeNumber(e,"triggerPrice"),cost:void 0,amount:o,filled:void 0,remaining:h,average:void 0,status:d,trades:void 0,fee:void 0},t)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={status:"all"};void 0!==e&&(r=this.market(e),a.marketId=r.id),void 0!==t&&(a.after=t),void 0!==i&&(a.limit=i);let n=await this.privateGetOrders(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"open"},s))}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.marketId=r.id),void 0!==t&&(a.after=t),void 0!==i&&(a.limit=i);let n=await this.privateGetTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let a=this.currency(e),n={currency_id:a.id,amount:this.currencyToPrecision(e,t)};"AUD"!==e&&(this.checkAddress(i),n.toAddress=i),void 0!==s&&(n.toAddress=i+"?dt="+s);let o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.version+"/"+this.implodeParams(e,s),o=this.keysort(this.omit(s,this.extractParams(e)));if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.base64ToBinary(this.secret),s=i+n+e;"GET"===i||"DELETE"===i?Object.keys(o).length&&(n+="?"+this.urlencode(o)):s+=a=this.json(o);let h=this.hmac(this.encode(s),t,A.Zf,"base64");r={Accept:"application/json","Accept-Charset":"UTF-8","Content-Type":"application/json","BM-AUTH-APIKEY":this.apiKey,"BM-AUTH-TIMESTAMP":e,"BM-AUTH-SIGNATURE":h}}else"public"===t&&Object.keys(o).length&&(n+="?"+this.urlencode(o));return{url:this.urls.api[t]+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code"),c=this.safeString(o,"message");if(void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,c,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,c,e),new n.ExchangeError(e)}}}class eG extends s.k{}let eU=eG;class eW extends eU{describe(){return this.deepExtend(super.describe(),{id:"btcturk",name:"BTCTurk",countries:["TR"],rateLimit:100,pro:!1,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,ws:!1},timeframes:{"1m":1,"15m":15,"30m":30,"1h":60,"4h":240,"1d":"1 d","1w":"1 w","1y":"1 y"},urls:{logo:"https://github.com/user-attachments/assets/10e0a238-9f60-4b06-9dda-edfc7602f1d6",api:{public:"https://api.btcturk.com/api/v2",private:"https://api.btcturk.com/api/v1",graph:"https://graph-api.btcturk.com/v1"},www:"https://www.btcturk.com",doc:"https://github.com/BTCTrader/broker-api-docs"},api:{public:{get:{orderbook:1,ticker:.1,trades:1,ohlc:1,"server/exchangeinfo":1}},private:{get:{"users/balances":1,openOrders:1,allOrders:1,"users/transactions/trade":1},post:{"users/transactions/crypto":1,"users/transactions/fiat":1,order:1,cancelOrder:1},delete:{order:1}},graph:{get:{ohlcs:1,"klines/history":1}}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:30},fetchOrder:void 0,fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:30,trigger:!1,trailing:!1},fetchClosedOrders:void 0,fetchOHLCV:{limit:void 0}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},fees:{trading:{maker:this.parseNumber("0.0005"),taker:this.parseNumber("0.0009")}},exceptions:{exact:{FAILED_ORDER_WITH_OPEN_ORDERS:n.InsufficientFunds,FAILED_LIMIT_ORDER:n.InvalidOrder,FAILED_MARKET_ORDER:n.InvalidOrder}},precisionMode:d.kb})}async fetchMarkets(e={}){let t=await this.publicGetServerExchangeinfo(e),i=this.safeDict(t,"data",{}),s=this.safeList(i,"symbols",[]);return this.parseMarkets(s)}parseMarket(e){let t,i,s,r,a;let n=this.safeString(e,"name"),o=this.safeString(e,"numerator"),h=this.safeString(e,"denominator"),d=this.safeCurrencyCode(o),l=this.safeCurrencyCode(h),c=this.safeList(e,"filters",[]);for(let e=0;e<c.length;e++){let n=c[e];"PRICE_FILTER"===this.safeString(n,"filterType")&&(t=this.safeNumber(n,"minPrice"),i=this.safeNumber(n,"maxPrice"),s=this.safeNumber(n,"minAmount"),r=this.safeNumber(n,"maxAmount"),a=this.safeNumber(n,"minExchangeValue"))}return{id:n,symbol:d+"/"+l,base:d,quote:l,settle:void 0,baseId:o,quoteId:h,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"TRADING"===this.safeString(e,"status"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"numeratorScale"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"denominatorScale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:s,max:r},price:{min:t,max:i},cost:{min:a,max:void 0}},created:void 0,info:e}}parseBalance(e){let t=this.safeList(e,"data",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.free=this.safeString(s,"free"),n.used=this.safeString(s,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUsersBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pairSymbol:s.id},a=await this.publicGetOrderbook(this.extend(r,i)),n=this.safeDict(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,s.symbol,o,"bids","asks",0,1)}parseTicker(e,t){let i=this.safeString(e,"pair"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:this.safeString(e,"daily"),percentage:this.safeString(e,"dailyPercent"),average:this.safeString(e,"average"),baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s=this.safeList(i,"data");return this.parseTickers(s,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.fetchTickers([e],t);return this.safeValue(i,e)}parseTrade(e,t){let i;let s=this.safeInteger2(e,"date","timestamp"),a=this.safeString2(e,"tid","id"),n=this.safeString(e,"orderId"),o=this.safeString(e,"price"),h=r.Y.stringAbs(this.safeString(e,"amount")),d=this.safeString(e,"pair"),l=this.safeSymbol(d,t),c=this.safeString2(e,"side","orderType"),u=this.safeString(e,"fee");if(void 0!==u){let t=this.safeString(e,"denominatorSymbol");i={cost:r.Y.stringAbs(u),currency:this.safeCurrencyCode(t)}}return this.safeTrade({info:e,id:a,order:n,timestamp:s,datetime:this.iso8601(s),symbol:l,type:void 0,side:c,takerOrMaker:void 0,price:o,amount:h,cost:void 0,fee:i},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pairSymbol:r.id};void 0!==i&&(a.last=i);let n=await this.publicGetTrades(this.extend(a,s)),o=this.safeList(n,"data");return this.parseTrades(o,r,t,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1h",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,resolution:this.safeValue(this.timeframes,t,t)},h=this.safeInteger(r,"until",this.milliseconds());if(o.to=this.parseToInt(h/1e3),void 0!==i?o.from=this.parseToInt(i/1e3):void 0===s&&(s=100),void 0!==s){if(s=Math.min(s,11e3),"1y"===t)throw new n.BadRequest(this.id+' fetchOHLCV () does not accept a limit parameter when timeframe == "1y"');let e=this.parseTimeframe(t)*(s-1);if(void 0!==i){let t=this.parseToInt(i/1e3)+e;o.to=Math.min(o.to,t)}else o.from=this.parseToInt(0)-e}let d=await this.graphGetKlinesHistory(this.extend(o,r));return this.parseOHLCVs(d,a,t,i,s)}parseOHLCVs(e,t,i="1m",s,r,a=!1){let n=[],o=this.safeList(e,"t",[]),h=this.safeList(e,"h",[]),d=this.safeList(e,"o",[]),l=this.safeList(e,"l",[]),c=this.safeList(e,"c",[]),u=this.safeList(e,"v",[]);for(let e=0;e<o.length;e++){let i={timestamp:this.safeInteger(o,e),high:this.safeNumber(h,e),open:this.safeNumber(d,e),low:this.safeNumber(l,e),close:this.safeNumber(c,e),volume:this.safeNumber(u,e)};n.push(this.parseOHLCV(i,t))}let f=this.sortBy(n,0);return this.filterBySinceLimit(f,s,r,0,a)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={orderType:i,orderMethod:t,pairSymbol:n.id,quantity:this.amountToPrecision(e,s)};"market"!==t&&(o.price=this.priceToPrecision(e,r)),"clientOrderId"in a?o.newClientOrderId=a.clientOrderId:"newClientOrderId"in a||(o.newClientOrderId=this.uuid());let h=await this.privatePostOrder(this.extend(o,a)),d=this.safeDict(h,"data");return this.parseOrder(d,n)}async cancelOrder(e,t,i={}){let s=await this.privateDeleteOrder(this.extend({id:e},i));return this.safeOrder({info:s})}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pairSymbol=r.id);let n=await this.privateGetOpenOrders(this.extend(a,s)),o=this.safeDict(n,"data",{}),h=this.safeList(o,"bids",[]),d=this.safeList(o,"asks",[]);return this.parseOrders(this.arrayConcat(h,d),r,t,i)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pairSymbol:r.id};void 0!==i&&(a.last=i),void 0!==t&&(a.startTime=Math.floor(t/1e3));let n=await this.privateGetAllOrders(this.extend(a,s)),o=this.safeList(n,"data");return this.parseOrders(o,r,t,i)}parseOrderStatus(e){return this.safeString({Untouched:"open",Partial:"open",Canceled:"canceled",Closed:"closed"},e,e)}parseOrder(e,t){let i=this.safeString(e,"id"),s=this.safeString(e,"price"),a=this.safeString2(e,"amount","quantity"),n=r.Y.stringAbs(a),o=this.safeString(e,"leftAmount"),h=this.safeString(e,"pairSymbol"),d=this.safeSymbol(h,t),l=this.safeString(e,"type"),c=this.safeString(e,"method"),u=this.safeString(e,"orderClientId"),f=this.safeInteger2(e,"updateTime","datetime"),p=this.safeString(e,"status"),m=this.parseOrderStatus(p);return this.safeOrder({info:e,id:i,price:s,amount:n,remaining:o,filled:void 0,cost:void 0,average:void 0,status:m,side:l,type:c,clientOrderId:u,timestamp:f,datetime:this.iso8601(f),symbol:d,fee:void 0},t)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privateGetUsersTransactionsTrade(),n=this.safeList(a,"data");return this.parseTrades(n,r,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){if("btctrader"===this.id)throw new n.ExchangeError(this.id+" is an abstract base API for BTCExchange, BTCTurk");let o=this.urls.api[t]+"/"+e;if("GET"===i||"DELETE"===i?Object.keys(s).length&&(o+="?"+this.urlencode(s)):a=this.json(s),"private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.base64ToBinary(this.secret),i=this.apiKey+e;r={"X-PCK":this.apiKey,"X-Stamp":e,"X-Signature":this.hmac(this.encode(i),t,l.s,"base64"),"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){let l=this.safeString(o,"code","0"),c=this.safeString(o,"message"),u=void 0===c?a:c;if(this.throwExactlyMatchedException(this.exceptions.exact,c,this.id+" "+u),"0"!==l&&"SUCCESS"!==l)throw new n.ExchangeError(this.id+" "+u)}}var ej=i(9098);class eK extends s.k{}let ez=eK;class eY extends ez{describe(){return this.deepExtend(super.describe(),{id:"cex",name:"CEX.IO",countries:["GB","EU","CY","RU"],rateLimit:300,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrder:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchLedger:!0,fetchMarkets:!0,fetchOHLCV:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrderBook:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFees:!0,transfer:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg",api:{public:"https://trade.cex.io/api/spot/rest-public",private:"https://trade.cex.io/api/spot/rest"},www:"https://cex.io",doc:"https://trade.cex.io/docs/",fees:["https://cex.io/fee-schedule","https://cex.io/limits-commissions"],referral:"https://cex.io/r/0/up105393824/0/"},api:{public:{get:{},post:{get_server_time:1,get_pairs_info:1,get_currencies_info:1,get_processing_info:10,get_ticker:1,get_trade_history:1,get_order_book:1,get_candles:1}},private:{get:{},post:{get_my_current_fee:5,get_fee_strategy:1,get_my_volume:5,do_create_account:1,get_my_account_status_v3:5,get_my_wallet_balance:5,get_my_orders:5,do_my_new_order:1,do_cancel_my_order:1,do_cancel_all_orders:5,get_order_book:1,get_candles:1,get_trade_history:1,get_my_transaction_history:1,get_my_funding_history:5,do_my_internal_transfer:1,get_processing_info:10,get_deposit_address:5,do_deposit_funds_from_wallet:1,do_withdrawal_funds_to_wallet:1}}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!1,GTD:!0},hedged:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!0,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:void 0,fetchOrder:void 0,fetchOpenOrders:{marginMode:!1,limit:1e3,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{},broad:{"You have negative balance on following accounts":n.InsufficientFunds,"Mandatory parameter side should be one of BUY,SELL":n.BadRequest,"API orders from Main account are not allowed":n.BadRequest,"check failed":n.BadRequest,"Insufficient funds":n.InsufficientFunds,"Get deposit address for main account is not allowed":n.PermissionDenied,"Market Trigger orders are not allowed":n.BadRequest,"key not passed or incorrect":n.AuthenticationError}},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","1d":"1d"},options:{networks:{BTC:"bitcoin",ERC20:"ERC20",BSC20:"binancesmartchain",DOGE:"dogecoin",ALGO:"algorand",XLM:"stellar",ATOM:"cosmos",LTC:"litecoin",XRP:"ripple",FTM:"fantom",MINA:"mina",THETA:"theta",XTZ:"tezos",TIA:"celestia",CRONOS:"cronos",MATIC:"polygon",TON:"ton",TRC20:"tron",SOLANA:"solana",SGB:"songbird",DYDX:"dydx",DASH:"dash",ZIL:"zilliqa",EOS:"eos",AVALANCHEC:"avalanche",ETHPOW:"ethereumpow",NEAR:"near",ARB:"arbitrum",DOT:"polkadot",OPT:"optimism",INJ:"injective",ADA:"cardano",ONT:"ontology",ICP:"icp",KAVA:"kava",KSM:"kusama",SEI:"sei",NEO:"neo",NEO3:"neo3",XDC:"xdc"}}})}async fetchCurrencies(e={}){let t=[];t.push(this.publicPostGetCurrenciesInfo(e)),t.push(this.publicPostGetProcessingInfo(e));let i=await Promise.all(t),s=this.safeList(i[0],"data",[]),r=this.safeDict(i[1],"data",{}),a=this.indexBy(s,"currency"),n=this.deepExtend(a,r);return this.parseCurrencies(this.toArray(n))}parseCurrency(e){let t=this.safeString(e,"currency"),i=this.safeCurrencyCode(t),s=this.safeBool(e,"fiat")?"fiat":"crypto",r=this.safeBool(e,"walletDeposit"),a=this.safeBool(e,"walletWithdrawal"),n=this.parseNumber(this.parsePrecision(this.safeString(e,"precision"))),o={},h=this.safeDict(e,"blockchains",{}),d=Object.keys(h);for(let e=0;e<d.length;e++){let t=d[e],i=h[t],s=this.networkIdToCode(t),r="enabled"===this.safeString(i,"deposit"),a="enabled"===this.safeString(i,"withdrawal");o[s]={id:t,network:s,margin:void 0,deposit:r,withdraw:a,fee:this.safeNumber(i,"withdrawalFee"),precision:n,limits:{deposit:{min:this.safeNumber(i,"minDeposit"),max:void 0},withdraw:{min:this.safeNumber(i,"minWithdrawal"),max:void 0}},info:i}}return this.safeCurrencyStructure({id:t,code:i,name:void 0,type:s,active:void 0,deposit:r,withdraw:a,fee:void 0,precision:n,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},networks:o,info:e})}async fetchMarkets(e={}){let t=await this.publicPostGetPairsInfo(e),i=this.safeList(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"base"),i=this.safeCurrencyCode(t),s=this.safeString(e,"quote"),r=this.safeCurrencyCode(s);return this.safeMarketStructure({id:i+"-"+r,symbol:i+"/"+r,base:i,baseId:t,quote:r,quoteId:s,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:{amount:{min:this.safeNumber(e,"baseMin"),max:this.safeNumber(e,"baseMax")},price:{min:this.safeNumber(e,"minPrice"),max:this.safeNumber(e,"maxPrice")},cost:{min:this.safeNumber(e,"quoteMin"),max:this.safeNumber(e,"quoteMax")},leverage:{min:void 0,max:void 0}},precision:{amount:this.safeString(e,"baseLotSize"),price:this.parseNumber(this.parsePrecision(this.safeString(e,"pricePrecision"))),base:this.parseNumber(this.parsePrecision(this.safeString(e,"basePrecision"))),quote:this.parseNumber(this.parsePrecision(this.safeString(e,"quotePrecision")))},active:void 0,created:void 0,info:e})}async fetchTime(e={}){let t=await this.publicPostGetServerTime(e),i=this.safeDict(t,"data");return this.safeInteger(i,"timestamp")}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.fetchTickers([e],t);return this.safeDict(i,e,{})}async fetchTickers(e,t={}){await this.loadMarkets();let i={};void 0!==e&&(i.pairs=this.marketIds(e));let s=await this.publicPostGetTicker(this.extend(i,t)),r=this.safeDict(s,"data",{});return this.parseTickers(r,e)}parseTicker(e,t){let i=this.safeString(e,"id"),s=this.safeSymbol(i,t);return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:this.safeNumber(e,"high"),low:this.safeNumber(e,"low"),bid:this.safeNumber(e,"bestBid"),bidVolume:void 0,ask:this.safeNumber(e,"bestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"lastTradePrice"),previousClose:void 0,change:this.safeNumber(e,"priceChange"),percentage:this.safeNumber(e,"priceChangePercentage"),average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n={pair:a.id};void 0!==t&&(n.fromDateISO=this.iso8601(t)),[r,s]=this.handleParamInteger2(s,"until","till"),void 0!==r&&(n.toDateISO=this.iso8601(r)),void 0!==i&&(n.pageSize=Math.min(i,1e4));let o=await this.publicPostGetTradeHistory(this.extend(n,s)),h=this.safeDict(o,"data",{}),d=this.safeList(h,"trades",[]);return this.parseTrades(d,a,t,i)}parseTrade(e,t){let i=this.safeString(e,"dateISO"),s=this.parse8601(i);return t=this.safeMarket(void 0,t),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:this.safeString(e,"tradeId"),order:void 0,type:void 0,takerOrMaker:void 0,side:this.safeStringLower(e,"side"),price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:void 0,fee:void 0},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id},a=await this.publicPostGetOrderBook(this.extend(r,i)),n=this.safeDict(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,s.symbol,o)}async fetchOHLCV(e,t="1m",i,s,r={}){let a,o;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","dataType"),void 0===a)throw new n.ArgumentsRequired(this.id+' fetchOHLCV requires a parameter "dataType" to be either "bestBid" or "bestAsk"');await this.loadMarkets();let h=this.market(e),d={pair:h.id,resolution:this.timeframes[t],dataType:a};if(void 0!==i&&(d.fromISO=this.iso8601(i)),[o,r]=this.handleParamInteger2(r,"until","till"),void 0!==o?d.toISO=this.iso8601(o):void 0===i&&(d.toISO=this.iso8601(this.milliseconds())),void 0!==i&&void 0!==o&&void 0!==s)throw new n.ArgumentsRequired(this.id+" fetchOHLCV does not support fetching candles with both a limit and since/until");if((void 0!==i||void 0!==o)&&void 0===s)throw new n.ArgumentsRequired(this.id+" fetchOHLCV requires a limit parameter when fetching candles with since or until");void 0!==s&&(d.limit=s);let l=await this.publicPostGetCandles(this.extend(d,r)),c=this.safeList(l,"data",[]);return this.parseOHLCVs(c,h,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostGetMyCurrentFee(e),i=this.safeDict(t,"data",{}),s=this.safeDict(i,"tradingFee",{});return this.parseTradingFees(s,!0)}parseTradingFees(e,t=!1){let i={},s=Object.keys(e);for(let r=0;r<s.length;r++){let a;let n=s[r];t&&(a=this.safeMarket(n));let o=this.parseTradingFee(e[n],a);i[o.symbol]=o}for(let t=0;t<this.symbols.length;t++){let s=this.symbols[t];if(!(s in i)){let t=this.market(s);i[s]=this.parseTradingFee(e,t)}}return i}parseTradingFee(e,t){return{info:e,symbol:this.safeString(t,"symbol"),maker:this.safeNumber(e,"percent"),taker:this.safeNumber(e,"percent"),percentage:void 0,tierBased:void 0}}async fetchAccounts(e={}){await this.loadMarkets();let t=await this.privatePostGetMyAccountStatusV3(e),i=this.safeDict(t,"data",{}),s=this.safeDict(i,"balancesPerAccounts",{}),r=this.toArray(s);return this.parseAccounts(r,e)}parseAccount(e){return{id:void 0,type:void 0,code:void 0,info:e}}async fetchBalance(e={}){let t,i,s;if([t,e]=this.handleParamString(e,"account",""),[i,e]=this.handleParamString(e,"method","privatePostGetMyWalletBalance"),"privatePostGetMyAccountStatusV3"===i){let i=await this.privatePostGetMyAccountStatusV3(e),r=this.safeDict(i,"data",{}),a=this.safeDict(r,"balancesPerAccounts",{});s=this.safeDict(a,t,{})}else{let t=await this.privatePostGetMyWalletBalance(e);s=this.safeDict(t,"data",{})}return this.parseBalance(s)}parseBalance(e){let t={info:e},i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s],a=this.safeDict(e,r,{}),n=this.safeCurrencyCode(r),o={used:this.safeString(a,"balanceOnHold"),total:this.safeString(a,"balance")};t[n]=o}return this.safeBalance(t)}async fetchOrdersByStatus(e,t,i,s,r={}){let a,n;await this.loadMarkets();let o={},h="closed"===e;h&&(o.archived=!0),void 0!==t&&(a=this.market(t),o.pair=a.id),void 0!==s&&(o.pageSize=s),void 0!==i?o.serverCreateTimestampFrom=i:h&&(o.serverCreateTimestampFrom=this.milliseconds()-314496e5),[n,r]=this.handleParamInteger2(r,"until","till"),void 0!==n&&(o.serverCreateTimestampTo=n);let d=await this.privatePostGetMyOrders(this.extend(o,r)),l=this.safeList(d,"data",[]);return this.parseOrders(l,a,i,s)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersByStatus("closed",e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersByStatus("open",e,t,i,s)}async fetchOpenOrder(e,t,i={}){await this.loadMarkets();let s={orderId:parseInt(e)};return(await this.fetchOpenOrders(t,void 0,void 0,this.extend(s,i)))[0]}async fetchClosedOrder(e,t,i={}){await this.loadMarkets();let s={orderId:parseInt(e)};return(await this.fetchClosedOrders(t,void 0,void 0,this.extend(s,i)))[0]}parseOrderStatus(e){return this.safeString({PENDING_NEW:"open",NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",EXPIRED:"expired",REJECTED:"rejected",PENDING_CANCEL:"canceling",CANCELLED:"canceled"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"currency1"),r=this.safeString(e,"currency2");void 0!==s&&void 0!==r&&(i=s+"-"+r);let a=(t=this.safeMarket(i,t)).symbol,n=this.parseOrderStatus(this.safeString(e,"status")),o={},h=this.safeNumber(e,"feeAmount");if(void 0!==h){let t=this.safeString(e,"feeCurrency"),i=this.safeCurrencyCode(t);o.currency=i,o.cost=h}let d=this.safeInteger(e,"serverCreateTimestamp"),l=this.safeNumber(e,"requestedAmountCcy1"),c=this.safeNumber(e,"executedAmountCcy1"),u=this.safeNumber(e,"executedAmountCcy2");return this.safeOrder({id:this.safeString(e,"orderId"),clientOrderId:this.safeString(e,"clientOrderId"),timestamp:d,datetime:this.iso8601(d),lastUpdateTimestamp:this.safeInteger(e,"lastUpdateTimestamp"),lastTradeTimestamp:void 0,symbol:a,type:this.safeStringLower(e,"orderType"),timeInForce:this.safeString(e,"timeInForce"),postOnly:void 0,side:this.safeStringLower(e,"side"),price:this.safeNumber(e,"price"),triggerPrice:this.safeNumber(e,"stopPrice"),amount:l,cost:u,average:this.safeNumber(e,"averagePrice"),filled:c,remaining:void 0,status:n,fee:o,trades:void 0,info:e},t)}async createOrder(e,t,i,s,r,a={}){let o,h,d;if([o,a]=this.handleOptionAndParams(a,"createOrder","accountId"),void 0===o)throw new n.ArgumentsRequired(this.id+' createOrder() : API trading is now allowed from main account, set params["accountId"] or .options["createOrder"]["accountId"] to the name of your sub-account');await this.loadMarkets();let l=this.market(e),c={clientOrderId:this.uuid(),currency1:l.baseId,currency2:l.quoteId,accountId:o,orderType:this.capitalize(t.toLowerCase()),side:i.toUpperCase(),timestamp:this.milliseconds(),amountCcy1:this.amountToPrecision(e,s)};[h,a]=this.handleOptionAndParams(a,"createOrder","timeInForce","GTC"),"limit"===t&&(c.price=this.priceToPrecision(e,r),c.timeInForce=h),[d,a]=this.handleParamString(a,"triggerPrice"),void 0!==d&&(c.type="Stop Limit",c.stopPrice=d);let u=await this.privatePostDoMyNewOrder(this.extend(c,a)),f=this.safeDict(u,"data");return this.parseOrder(f,l)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={orderId:parseInt(e),cancelRequestId:"c_"+this.milliseconds().toString(),timestamp:this.milliseconds()},r=await this.privatePostDoCancelMyOrder(this.extend(s,i)),a=this.safeDict(r,"data",{});return this.parseOrder(a)}async cancelAllOrders(e,t={}){await this.loadMarkets();let i=await this.privatePostDoCancelAllOrders(t),s=this.safeDict(i,"data",{}),r=this.safeList(s,"clientOrderIds",[]),a=[];for(let e=0;e<r.length;e++){let t=r[e];a.push({clientOrderId:t})}return this.parseOrders(a)}async fetchLedger(e,t,i,s={}){let r,a;await this.loadMarkets();let n={};void 0!==e&&(r=this.currency(e),n.currency=r.id),void 0!==t&&(n.dateFrom=t),void 0!==i&&(n.pageSize=i),[a,s]=this.handleParamInteger2(s,"until","till"),void 0!==a&&(n.dateTo=a);let o=await this.privatePostGetMyTransactionHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseLedger(h,r,t,i)}parseLedgerEntry(e,t){let i,s=this.safeString(e,"amount");r.Y.stringLe(s,"0")?(i="out",s=r.Y.stringMul("-1",s)):i="in";let a=this.safeString(e,"currency");t=this.safeCurrency(a,t);let n=this.safeCurrencyCode(a,t),o=this.safeString(e,"timestamp"),h=this.parse8601(o),d=this.safeString(e,"type");return this.safeLedgerEntry({info:e,id:this.safeString(e,"transactionId"),direction:i,account:this.safeString(e,"accountId",""),referenceAccount:void 0,referenceId:void 0,type:this.parseLedgerEntryType(d),currency:n,amount:this.parseNumber(s),timestamp:h,datetime:this.iso8601(h),before:void 0,after:void 0,status:void 0,fee:void 0},t)}parseLedgerEntryType(e){return this.safeString({deposit:"deposit",withdraw:"withdrawal",commission:"fee"},e,e)}async fetchDepositsWithdrawals(e,t,i,s={}){let r,a;await this.loadMarkets();let n={};void 0!==e&&(r=this.currency(e)),void 0!==t&&(n.dateFrom=t),void 0!==i&&(n.pageSize=i),[a,s]=this.handleParamInteger2(s,"until","till"),void 0!==a&&(n.dateTo=a);let o=await this.privatePostGetMyFundingHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i)}parseTransaction(e,t){let i=this.safeString(e,"currency"),s=this.safeString(e,"direction"),r=this.safeCurrencyCode(i,t),a=this.safeString(e,"updatedAt"),n=this.parse8601(a);return{info:e,id:this.safeString(e,"txId"),txid:void 0,type:"withdraw"===s?"withdrawal":"deposit",currency:r,network:void 0,amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatus(this.safeString(e,"status")),timestamp:n,datetime:this.iso8601(n),address:void 0,addressFrom:void 0,addressTo:void 0,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:void 0,comment:void 0,fee:{currency:r,cost:this.safeNumber(e,"commissionAmount")},internal:void 0}}parseTransactionStatus(e){return this.safeString({rejected:"rejected",pending:"pending",approved:"ok"},e,e)}async transfer(e,t,i,s,r={}){let a;return a=""!==s&&""!==i?await this.transferBetweenSubAccounts(e,t,i,s,r):await this.transferBetweenMainAndSubAccount(e,t,i,s,r),this.handleOption("transfer","fillResponseFromRequest",!0)&&(a.fromAccount=i,a.toAccount=s),a}async transferBetweenMainAndSubAccount(e,t,i,s,r={}){let a;await this.loadMarkets();let n=this.currency(e),o=""===i,h=this.safeString(r,"guid",this.uuid()),d={currency:n.id,amount:this.currencyToPrecision(e,t),accountId:o?s:i,clientTxId:h};a=o?await this.privatePostDoDepositFundsFromWallet(this.extend(d,r)):await this.privatePostDoWithdrawalFundsToWallet(this.extend(d,r));let l=this.safeDict(a,"data",{});return this.parseTransfer(l,n)}async transferBetweenSubAccounts(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n={currency:a.id,amount:this.currencyToPrecision(e,t),fromAccountId:i,toAccountId:s},o=await this.privatePostDoMyInternalTransfer(this.extend(n,r)),h=this.safeDict(o,"data",{});return this.parseTransfer(h,a)}parseTransfer(e,t){let i=this.safeString(e,"currency"),s=this.safeCurrencyCode(i,t);return{info:e,id:this.safeString2(e,"transactionId","clientTxId"),timestamp:void 0,datetime:void 0,currency:s,amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransactionStatus(this.safeString(e,"status"))}}async fetchDepositAddress(e,t={}){let i,s;if([i,t]=this.handleOptionAndParams(t,"createOrder","accountId"),void 0===i)throw new n.ArgumentsRequired(this.id+' fetchDepositAddress() : main account is not allowed to fetch deposit address from api, set params["accountId"] or .options["createOrder"]["accountId"] to the name of your sub-account');await this.loadMarkets(),[s,t]=this.handleNetworkCodeAndParams(t);let r=this.currency(e),a={accountId:i,currency:r.id,blockchain:this.networkCodeToId(s)},o=await this.privatePostGetDepositAddress(this.extend(a,t)),h=this.safeDict(o,"data",{});return this.parseDepositAddress(h,r)}parseDepositAddress(e,t){let i=this.safeString(e,"address"),s=this.safeString(e,"currency");return t=this.safeCurrency(s,t),this.checkAddress(i),{info:e,currency:t.code,network:this.networkIdToCode(this.safeString(e,"blockchain")),address:i,tag:void 0}}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if("public"===t)"GET"===i?Object.keys(o).length&&(n+="?"+this.urlencode(o)):(a=this.json(o),r={"Content-Type":"application/json"});else{this.checkRequiredCredentials();let t=this.seconds().toString(),i=e+t+(a=this.json(o)),s=this.hmac(this.encode(i),this.encode(this.secret),l.s,"base64");r={"Content-Type":"application/json","X-AGGR-KEY":this.apiKey,"X-AGGR-TIMESTAMP":t,"X-AGGR-SIGNATURE":s}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o){if(void 0===a)throw new n.NullResponse(this.id+" returned empty response");if("{"===a[0]){let e=this.fixStringifiedJsonMembers(a);o=this.parseJson(e)}else throw new n.NullResponse(this.id+" returned unparsed response: "+a)}let l=this.safeString(o,"error");if(void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new n.ExchangeError(e)}if(i.indexOf("do_my_new_order")>=0){let e=this.safeDict(o,"data",{}),t=this.safeString(e,"rejectReason");if(void 0!==t)throw this.throwBroadlyMatchedException(this.exceptions.broad,t,t),new n.ExchangeError(this.id+" createOrder() "+t)}}}var eX=i(9530);class e$ extends eX.A{describe(){return this.deepExtend(super.describe(),{id:"coinbaseadvanced",name:"Coinbase Advanced",alias:!0})}}class eQ extends s.k{}let eZ=eQ;class eJ extends eZ{describe(){return this.deepExtend(super.describe(),{id:"coinbaseexchange",name:"Coinbase Exchange",countries:["US"],rateLimit:100,userAgent:this.userAgents.chrome,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchLedger:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:"emulated",fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":60,"5m":300,"15m":900,"1h":3600,"6h":21600,"1d":86400},hostname:"exchange.coinbase.com",urls:{test:{public:"https://api-public.sandbox.exchange.coinbase.com",private:"https://api-public.sandbox.exchange.coinbase.com"},logo:"https://github.com/ccxt/ccxt/assets/43336371/34a65553-88aa-4a38-a714-064bd228b97e",api:{public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://coinbase.com/",doc:"https://docs.cloud.coinbase.com/exchange/docs/",fees:["https://docs.pro.coinbase.com/#fees","https://support.pro.coinbase.com/customer/en/portal/articles/2945310-fees"]},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{public:{get:["currencies","products","products/{id}","products/{id}/book","products/{id}/candles","products/{id}/stats","products/{id}/ticker","products/{id}/trades","time","products/spark-lines","products/volume-summary"]},private:{get:["address-book","accounts","accounts/{id}","accounts/{id}/holds","accounts/{id}/ledger","accounts/{id}/transfers","coinbase-accounts","fills","funding","fees","margin/profile_information","margin/buying_power","margin/withdrawal_power","margin/withdrawal_power_all","margin/exit_plan","margin/liquidation_history","margin/position_refresh_amounts","margin/status","oracle","orders","orders/{id}","orders/client:{client_oid}","otc/orders","payment-methods","position","profiles","profiles/{id}","reports/{report_id}","transfers","transfers/{transfer_id}","users/self/exchange-limits","users/self/hold-balances","users/self/trailing-volume","withdrawals/fee-estimate","conversions/{conversion_id}","conversions/fees"],post:["conversions","deposits/coinbase-account","deposits/payment-method","coinbase-accounts/{id}/addresses","funding/repay","orders","position/close","profiles/margin-transfer","profiles/transfer","reports","withdrawals/coinbase","withdrawals/coinbase-account","withdrawals/crypto","withdrawals/payment-method"],delete:["orders","orders/client:{client_oid}","orders/{id}"]}},commonCurrencies:{CGLD:"CELO"},precisionMode:d.kb,fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.004"),taker:this.parseNumber("0.006")},funding:{tierBased:!1,percentage:!1,withdraw:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:25},deposit:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:10}}},features:{default:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!0},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!0},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:100,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:100,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:300}},spot:{extends:"default"},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{"Insufficient funds":n.InsufficientFunds,NotFound:n.OrderNotFound,"Invalid API Key":n.AuthenticationError,"invalid signature":n.AuthenticationError,"Invalid Passphrase":n.AuthenticationError,"Invalid order id":n.InvalidOrder,"Private rate limit exceeded":n.RateLimitExceeded,"Trading pair not available":n.PermissionDenied,"Product not found":n.InvalidOrder},broad:{"Order already done":n.OrderNotFound,"order not found":n.OrderNotFound,"price too small":n.InvalidOrder,"price too precise":n.InvalidOrder,"under maintenance":n.OnMaintenance,"size is too small":n.InvalidOrder,"Cancel only mode":n.OnMaintenance}}})}async fetchCurrencies(e={}){let t=await this.publicGetCurrencies(e),i={};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"id"),a=this.safeString(s,"name"),n=this.safeCurrencyCode(r),o=this.safeValue(s,"details",{}),h="online"===this.safeString(s,"status");i[n]={id:r,code:n,info:s,type:this.safeString(o,"type"),name:a,active:h,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.safeNumber(s,"max_precision"),limits:{amount:{min:this.safeNumber(o,"min_size"),max:void 0},withdraw:{min:this.safeNumber(o,"min_withdrawal_amount"),max:void 0}},networks:{}}}return i}async fetchMarkets(e={}){let t=await this.publicGetProducts(e),i=[];for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"id"),[a,n]=r.split("-"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.safeString(s,"status");i.push(this.extend(this.fees.trading,{id:r,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(s,"margin_enabled"),swap:!1,future:!1,option:!1,active:"online"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(s,"base_increment"),price:this.safeNumber(s,"quote_increment")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"min_market_funds"),max:void 0}},created:void 0,info:s}))}return i}async fetchAccounts(e={}){await this.loadMarkets();let t=await this.privateGetAccounts(e);return this.parseAccounts(t,e)}parseAccount(e){let t=this.safeString(e,"currency");return{id:this.safeString(e,"id"),type:void 0,code:this.safeCurrencyCode(t),info:e}}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"hold"),n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccounts(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={id:this.marketId(e),level:2},r=await this.publicGetProductsIdBook(this.extend(s,i)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"sequence"),a}parseTicker(e,t){let i,s,r,a,n,o,h,d;let l=void 0===t?void 0:t.symbol;return Array.isArray(e)?(a=this.safeString(e,4),i=this.milliseconds()):(i=this.parse8601(this.safeValue(e,"time")),s=this.safeString(e,"bid"),r=this.safeString(e,"ask"),n=this.safeString(e,"high"),o=this.safeString(e,"low"),h=this.safeString(e,"open"),a=this.safeString2(e,"price","last"),d=this.safeString(e,"volume")),this.safeTicker({symbol:l,timestamp:i,datetime:this.iso8601(i),high:n,low:o,bid:s,bidVolume:void 0,ask:r,askVolume:void 0,vwap:void 0,open:h,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetProductsSparkLines(this.extend({},t)),s={},r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],a=this.safeValue(i,t,[]),n=this.safeValue(a,0,[]),o=this.safeMarket(t,void 0,"-");s[o.symbol]=this.parseTicker(n,o)}return this.filterByArrayTickers(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={id:i.id},r=this.safeString(this.options,"fetchTickerMethod","publicGetProductsIdTicker"),a=await this[r](this.extend(s,t));return this.parseTicker(a,i)}parseTrade(e,t){let i,s,r;let a=this.parse8601(this.safeString2(e,"time","created_at")),n=this.safeString(e,"product_id");t=this.safeMarket(n,t,"-");let o=this.safeStringLower(t,"quoteId");if(void 0!==o){r=this.safeString(e,o+"_value");let a=this.safeString(e,"liquidity");void 0!==a&&(s="T"===a?"taker":"maker",i=this.safeString(t,s))}let h={cost:this.safeString2(e,"fill_fees","fee"),currency:t.quote,rate:i},d=this.safeString(e,"trade_id"),l="buy"===e.side?"sell":"buy",c=this.safeString(e,"order_id"),u=this.safeString(e,"maker_order_id"),f=this.safeString(e,"taker_order_id");(void 0!==c||void 0!==u&&void 0!==f)&&(l="buy"===e.side?"buy":"sell");let p=this.safeString(e,"price"),m=this.safeString(e,"size");return this.safeTrade({id:d,order:c,info:e,timestamp:a,datetime:this.iso8601(a),symbol:t.symbol,type:void 0,takerOrMaker:s,side:l,price:p,amount:m,fee:h,cost:r},t)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),r)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s,100);await this.loadMarkets();let a=this.market(e),o={product_id:a.id};void 0!==i&&(o.limit=i),void 0!==t&&(o.start_date=this.iso8601(t));let h=this.safeValue2(s,"until","end_date");void 0!==h&&(s=this.omit(s,["until"]),o.end_date=this.iso8601(h));let d=await this.privateGetFills(this.extend(o,s));return this.parseTrades(d,a,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={id:r.id};void 0!==i&&(a.limit=i);let n=await this.publicGetProductsIdTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetFees(e),i=this.safeNumber(t,"maker_fee_rate"),s=this.safeNumber(t,"taker_fee_rate"),r={};for(let e=0;e<this.symbols.length;e++){let a=this.symbols[e];r[a]={info:t,symbol:a,maker:i,taker:s,percentage:!0,tierBased:!0}}return r}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,3),this.safeNumber(e,2),this.safeNumber(e,1),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate",!1),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,300);let n=this.market(e),o=this.safeInteger(this.timeframes,t),h={id:n.id};void 0!==o?h.granularity=o:h.granularity=t;let d=this.safeValue2(r,"until","end");if(r=this.omit(r,["until"]),void 0!==i){if(h.start=this.iso8601(i),s=void 0===s?300:Math.min(300,s),void 0===d){let e=1e3*o;this.isRoundNumber(i%e)?h.end=this.iso8601(this.sum((s-1)*e,i)):h.end=this.iso8601(this.sum(s*e,i))}else h.end=this.iso8601(d)}let l=await this.publicGetProductsIdCandles(this.extend(h,r));return this.parseOHLCVs(l,n,t,i,s)}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.safeTimestamp(t,"epoch")}parseOrderStatus(e){return this.safeString({pending:"open",active:"open",open:"open",done:"closed",canceled:"canceled",canceling:"open"},e,e)}parseOrder(e,t){let i;let s=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"product_id");t=this.safeMarket(r,t,"-");let a=this.parseOrderStatus(this.safeString(e,"status")),n=this.safeString(e,"done_reason");"closed"===a&&"canceled"===n&&(a="canceled");let o=this.safeString(e,"price"),h=this.safeString(e,"filled_size"),d=this.safeString(e,"size",h),l=this.safeString(e,"executed_value"),c=this.safeNumber(e,"fill_fees");void 0!==c&&(i={cost:c,currency:t.quote,rate:void 0});let u=this.safeString(e,"id"),f=this.safeString(e,"type"),p=this.safeString(e,"side"),m=this.safeString(e,"time_in_force"),g=this.safeValue(e,"post_only"),y=this.safeNumber(e,"stop_price"),v=this.safeString(e,"client_oid");return this.safeOrder({id:u,clientOrderId:v,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:a,symbol:t.symbol,type:f,timeInForce:m,postOnly:g,side:p,price:o,triggerPrice:y,cost:l,amount:d,filled:h,remaining:void 0,fee:i,average:void 0,trades:void 0},t)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets();let r={},a=this.safeString2(i,"clientOrderId","client_oid");void 0===a?(s="privateGetOrdersId",r.id=e):(s="privateGetOrdersClientClientOid",r.client_oid=a,i=this.omit(i,["clientOrderId","client_oid"]));let n=await this[s](this.extend(r,i));return this.parseOrder(n)}async fetchOrderTrades(e,t,i,s,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));let n=await this.privateGetFills(this.extend({order_id:e},r));return this.parseTrades(n,a,i,s)}async fetchOrders(e,t,i,s={}){return await this.fetchOpenOrders(e,t,i,this.extend({status:"all"},s))}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchOpenOrders","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchOpenOrders",e,t,i,s,100);let n={};void 0!==e&&(r=this.market(e),n.product_id=r.id),void 0!==i&&(n.limit=i),void 0!==t&&(n.start_date=this.iso8601(t));let o=this.safeValue2(s,"until","end_date");void 0!==o&&(s=this.omit(s,["until"]),n.end_date=this.iso8601(o));let h=await this.privateGetOrders(this.extend(n,s));return this.parseOrders(h,r,t,i)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOpenOrders(e,t,i,this.extend({status:"done"},s))}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={type:t,side:i,product_id:n.id},h=this.safeString2(a,"clientOrderId","client_oid");void 0!==h&&(o.client_oid=h);let d=this.safeNumberN(a,["stopPrice","stop_price","triggerPrice"]);void 0!==d&&(o.stop_price=this.priceToPrecision(e,d));let l=this.safeString2(a,"timeInForce","time_in_force");if(void 0!==l&&(o.time_in_force=l),this.safeValue2(a,"postOnly","post_only",!1)&&(o.post_only=!0),a=this.omit(a,["timeInForce","time_in_force","stopPrice","stop_price","clientOrderId","client_oid","postOnly","post_only","triggerPrice"]),"limit"===t)o.price=this.priceToPrecision(e,r),o.size=this.amountToPrecision(e,s);else if("market"===t){let t=this.safeNumber2(a,"cost","funds");void 0===t?void 0!==r&&(t=s*r):a=this.omit(a,["cost","funds"]),void 0!==t?o.funds=this.costToPrecision(e,t):o.size=this.amountToPrecision(e,s)}let c=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(c,n)}async cancelOrder(e,t,i={}){let s,r;await this.loadMarkets();let a={},n=this.safeString2(i,"clientOrderId","client_oid");return void 0===n?(s="privateDeleteOrdersId",a.id=e):(s="privateDeleteOrdersClientClientOid",a.client_oid=n,i=this.omit(i,["clientOrderId","client_oid"])),void 0!==t&&(r=this.market(t),a.product_id=r.symbol),await this[s](this.extend(a,i))}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};return void 0!==e&&(i=this.market(e),s.product_id=i.symbol),await this.privateDeleteOrders(this.extend(s,t))}async fetchPaymentMethods(e={}){return await this.privateGetPaymentMethods(e)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o={currency:a.id,amount:t},h="privatePostWithdrawals";"payment_method_id"in r?h+="PaymentMethod":"coinbase_account_id"in r?h+="CoinbaseAccount":(h+="Crypto",o.crypto_address=i,void 0!==s&&(o.destination_tag=s));let d=await this[h](this.extend(o,r));if(!d)throw new n.ExchangeError(this.id+" withdraw() error: "+this.json(d));return this.parseTransaction(d,a)}parseLedgerEntryType(e){return this.safeString({transfer:"transfer",match:"trade",fee:"fee",rebate:"rebate",conversion:"trade"},e,e)}parseLedgerEntry(e,t){let i,s,a,n;let o=this.safeString(e,"id"),h=this.safeString(e,"amount"),d=this.safeString(e,"balance"),l=r.Y.stringSub(d,h);r.Y.stringLt(h,"0")?(i="out",h=r.Y.stringAbs(h)):i="in";let c=this.parseNumber(h),u=this.parseNumber(d),f=this.parseNumber(l),p=this.parse8601(this.safeValue(e,"created_at")),m=this.parseLedgerEntryType(this.safeString(e,"type")),g=this.safeCurrencyCode(void 0,t),y=this.safeValue(e,"details",{});return"transfer"===m?(s=this.safeString(y,"from"),a=this.safeString(y,"to"),n=this.safeString(y,"profile_transfer_id")):n=this.safeString(y,"order_id"),this.safeLedgerEntry({info:e,id:o,timestamp:p,datetime:this.iso8601(p),direction:i,account:s,referenceAccount:a,referenceId:n,type:m,currency:g,amount:c,before:f,after:u,status:"ok",fee:void 0},t)}async fetchLedger(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchLedger() requires a code param");await this.loadMarkets(),await this.loadAccounts();let r=this.currency(e),a=this.indexBy(this.accounts,"code"),o=this.safeValue(a,e);if(void 0===o)throw new n.ExchangeError(this.id+" fetchLedger() could not find account id for "+e);let h={id:o.id};void 0!==t&&(h.start_date=this.iso8601(t)),void 0!==i&&(h.limit=i);let d=this.safeValue2(s,"until","end_date");void 0!==d&&(s=this.omit(s,["until"]),h.end_date=this.iso8601(d));let l=await this.privateGetAccountsIdLedger(this.extend(h,s));for(let t=0;t<l.length;t++)l[t].currency=e;return this.parseLedger(l,r,t,i)}async fetchDepositsWithdrawals(e,t,i,s={}){let r,a;await this.loadMarkets(),await this.loadAccounts();let o=this.safeString(s,"id");if(void 0===o&&void 0!==e){r=this.currency(e);let t=this.indexBy(this.accounts,"code"),i=this.safeValue(t,e);if(void 0===i)throw new n.ExchangeError(this.id+" fetchDepositsWithdrawals() could not find account id for "+e);o=i.id}let h={};if(void 0!==o&&(h.id=o),void 0!==i&&(h.limit=i),void 0===o){a=await this.privateGetTransfers(this.extend(h,s));for(let e=0;e<a.length;e++){let t=this.safeString(a[e],"account_id"),i=this.safeValue(this.accountsById,t),s=this.safeString(i,"code");a[e].currency=s}}else{a=await this.privateGetAccountsIdTransfers(this.extend(h,s));for(let t=0;t<a.length;t++)a[t].currency=e}return this.parseTransactions(a,r,t,i)}async fetchDeposits(e,t,i,s={}){return await this.fetchDepositsWithdrawals(e,t,i,this.extend({type:"deposit"},s))}async fetchWithdrawals(e,t,i,s={}){return await this.fetchDepositsWithdrawals(e,t,i,this.extend({type:"withdraw"},s))}parseTransactionStatus(e){if(this.safeValue(e,"canceled_at"))return"canceled";let t=this.safeValue(e,"processed_at"),i=this.safeValue(e,"completed_at");return i?"ok":t&&!i?"failed":"pending"}parseTransaction(e,t){let i=this.safeValue(e,"details",{}),s=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=this.safeNumber(e,"amount"),o=this.safeString(e,"type"),h=this.safeString(i,"crypto_address");h=this.safeString(e,"crypto_address",h);let d={currency:void 0,cost:void 0,rate:void 0};if("withdraw"===o){o="withdrawal",h=this.safeString(i,"sent_to_address",h);let e=this.safeNumber(i,"fee");void 0!==e&&(void 0!==n&&(n-=e),d.cost=e,d.currency=a)}let l=this.safeString(i,"network");return{info:e,id:this.safeString(e,"id"),txid:this.safeString(i,"crypto_transaction_hash"),type:o,currency:a,network:this.networkIdToCode(l),amount:n,status:this.parseTransactionStatus(e),timestamp:s,datetime:this.iso8601(s),address:h,addressFrom:void 0,addressTo:this.safeString(i,"crypto_address"),tag:this.safeString(i,"destination_tag"),tagFrom:void 0,tagTo:void 0,updated:this.parse8601(this.safeString(e,"processed_at")),comment:void 0,internal:!1,fee:d}}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=this.safeValue(this.options,"coinbaseAccounts");void 0===s&&(s=await this.privateGetCoinbaseAccounts(),this.options.coinbaseAccounts=s,this.options.coinbaseAccountsByCurrencyId=this.indexBy(s,"currency"));let r=i.id,a=this.safeValue(this.options.coinbaseAccountsByCurrencyId,r);if(void 0===a)throw new n.InvalidAddress(this.id+" createDepositAddress() could not find currency code "+e+" with id = "+r+" in this.options['coinbaseAccountsByCurrencyId']");let o={id:a.id},h=await this.privatePostCoinbaseAccountsIdAddresses(this.extend(o,t)),d=this.safeString(h,"address"),l=this.safeString(h,"destination_tag");return{currency:e,address:this.checkAddress(d),tag:l,info:h}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),h=this.omit(s,this.extractParams(e));"GET"===i&&Object.keys(h).length&&(o+="?"+this.urlencode(h));let d=this.implodeHostname(this.urls.api[t])+o;if("private"===t){let e;this.checkRequiredCredentials();let t=this.nonce().toString(),s="";"GET"!==i&&Object.keys(h).length&&(s=a=this.json(h));let d=t+i+o+s;try{e=this.base64ToBinary(this.secret)}catch(e){throw new n.AuthenticationError(this.id+" sign() invalid base64 secret")}let c=this.hmac(this.encode(d),e,l.s,"base64");r={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":c,"CB-ACCESS-TIMESTAMP":t,"CB-ACCESS-PASSPHRASE":this.password,"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(400===e||404===e){if("{"===a[0]){let e=this.safeString(o,"message"),t=this.id+" "+e;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new n.ExchangeError(t)}throw new n.ExchangeError(this.id+" "+a)}}async request(e,t="public",i="GET",s={},r,a,o={}){let h=await this.fetch2(e,t,i,s,r,a,o);if("string"!=typeof h&&"message"in h)throw new n.ExchangeError(this.id+" "+this.json(h));return h}}class e0 extends s.k{}let e1=e0;class e2 extends e1{describe(){return this.deepExtend(super.describe(),{id:"coinbaseinternational",name:"Coinbase International",countries:["US"],certified:!0,pro:!0,rateLimit:100,version:"v1",userAgent:this.userAgents.chrome,headers:{"CB-VERSION":"2018-05-30"},has:{CORS:!0,spot:!0,margin:!0,swap:!0,future:!0,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createDepositAddress:!0,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketBuyOrderWithCost:!1,createMarketOrderWithCost:!1,createMarketSellOrder:!0,createMarketSellOrderWithCost:!1,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!1,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL2OrderBook:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyBuys:!0,fetchMySells:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!1,fetchOrders:!1,fetchPosition:!0,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!1,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!1,sandbox:!0,setLeverage:!1,setMargin:!0,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://github.com/ccxt/ccxt/assets/43336371/866ae638-6ab5-4ebf-ab2c-cdcce9545625",api:{rest:"https://api.international.coinbase.com/api"},test:{rest:"https://api-n5e1.coinbase.com/api"},www:"https://international.coinbase.com",doc:["https://docs.cloud.coinbase.com/intx/docs"],fees:["https://help.coinbase.com/en/international-exchange/trading-deposits-withdrawals/international-exchange-fees"],referral:""},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{v1:{public:{get:["assets","assets/{assets}","assets/{asset}/networks","instruments","instruments/{instrument}","instruments/{instrument}/quote","instruments/{instrument}/funding","instruments/{instrument}/candles"]},private:{get:["orders","orders/{id}","portfolios","portfolios/{portfolio}","portfolios/{portfolio}/detail","portfolios/{portfolio}/summary","portfolios/{portfolio}/balances","portfolios/{portfolio}/balances/{asset}","portfolios/{portfolio}/positions","portfolios/{portfolio}/positions/{instrument}","portfolios/fills","portfolios/{portfolio}/fills","transfers","transfers/{transfer_uuid}"],post:["orders","portfolios","portfolios/margin","portfolios/transfer","transfers/withdraw","transfers/address","transfers/create-counterparty-id","transfers/validate-counterparty-id","transfers/withdraw/counterparty"],put:["orders/{id}","portfolios/{portfolio}"],delete:["orders","orders/{id}"]}}},fees:{trading:{taker:this.parseNumber("0.004"),maker:this.parseNumber("0.002"),tierBased:!0,percentage:!0,tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("1000000"),this.parseNumber("0.004")],[this.parseNumber("5000000"),this.parseNumber("0.0035")],[this.parseNumber("10000000"),this.parseNumber("0.0035")],[this.parseNumber("50000000"),this.parseNumber("0.003")],[this.parseNumber("250000000"),this.parseNumber("0.0025")]],maker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.0016")],[this.parseNumber("5000000"),this.parseNumber("0.001")],[this.parseNumber("10000000"),this.parseNumber("0.0008")],[this.parseNumber("50000000"),this.parseNumber("0.0005")],[this.parseNumber("250000000"),this.parseNumber("0")]]}}},precisionMode:d.kb,exceptions:{exact:{},broad:{DUPLICATE_CLIENT_ORDER_ID:n.DuplicateOrderId,"Order rejected":n.InvalidOrder,"market orders must be IoC":n.InvalidOrder,"tif is required":n.InvalidOrder,"Invalid replace order request":n.InvalidOrder,Unauthorized:n.PermissionDenied,"invalid result_limit":n.BadRequest,"is a required field":n.BadRequest,"Not Found":n.BadRequest,"ip not allowed":n.AuthenticationError}},timeframes:{"1m":"ONE_MINUTE","5m":"FIVE_MINUTE","15m":"FIFTEEN_MINUTE","30m":"THIRTY_MINUTE","1h":"ONE_HOUR","2h":"TWO_HOUR","6h":"SIX_HOUR","1d":"ONE_DAY"},options:{brokerId:"nfqkvdjp",portfolio:"",withdraw:{method:"v1PrivatePostTransfersWithdraw"},networksById:{ethereum:"ETH",arbitrum:"ARBITRUM",avacchain:"AVAX",optimism:"OPTIMISM",polygon:"MATIC",solana:"SOL",bitcoin:"BTC"}},features:{default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!0,GTC:!0},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!0,selfTradePrevention:!0,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:void 0,untilDays:1e4},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:100,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:300}},spot:{extends:"default"},swap:{linear:{extends:"default"},inverse:{extends:"default"}},future:{linear:void 0,inverse:void 0}}})}async handlePortfolioAndParams(e,t={}){let i;if([i,t]=this.handleOptionAndParams(t,e,"portfolio"),void 0!==i&&""!==i)return[i,t];let s=this.safeString(this.options,"portfolio");if(void 0!==s&&""!==s)return[s,t];let r=await this.fetchAccounts();for(let e=0;e<r.length;e++){let i=r[e],s=this.safeDict(i,"info",{});if(this.safeBool(s,"is_default")){let e=this.safeString(s,"portfolio_id");return this.options.portfolio=e,[e,t]}}throw new n.ArgumentsRequired(this.id+" "+e+'() requires a portfolio parameter or set the default portfolio with this.options["portfolio"]')}async handleNetworkIdAndParams(e,t,i){let s;if([s,i]=this.handleOptionAndParams(i,t,"network_arn_id"),void 0===s){await this.loadCurrencyNetworks(e);let t=this.currencies[e].networks,r=this.safeString2(i,"networkCode","network");if(void 0===r){if(this.isEmpty(t))throw new n.BadRequest(this.id+" createDepositAddress network not found for currency "+e+" please specify networkId in params");s=this.findDefaultNetwork(t).id}else s=this.networkCodeToId(r,e)}return[s,i]}async fetchAccounts(e={}){await this.loadMarkets();let t=await this.v1PrivateGetPortfolios(e);return this.parseAccounts(t,e)}parseAccount(e){return{id:this.safeString2(e,"portfolio_id","portfolio_uuid"),type:void 0,code:void 0,info:e}}async fetchOHLCV(e,t="1m",i,s=100,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,1e4);let o=this.market(e),h={instrument:o.id,granularity:this.safeString(this.timeframes,t,t)};if(void 0!==i)h.start=this.iso8601(i);else throw new n.ArgumentsRequired(this.id+" fetchOHLCV() requires a since argument");let d=this.safeInteger(r,"until");void 0!==d&&(r=this.omit(r,"until"),h.end=this.iso8601(d));let l=await this.v1PublicGetInstrumentsInstrumentCandles(this.extend(h,r)),c=this.safeList(l,"aggregations",[]);return this.parseOHLCVs(c,o,t,i,s)}parseOHLCV(e,t){return[this.parse8601(this.safeString2(e,"start","time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchFundingRateHistory(e,t,i,s={}){let r;if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let a=!1;[a,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","paginate"),[r,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","maxEntriesPerRequest",100);let o="ccxtPageKey";if(a)return await this.fetchPaginatedCallIncremental("fetchFundingRateHistory",e,t,i,s,o,r);let h=this.market(e),d=this.safeInteger(s,o,1)-1,l={instrument:h.id,result_offset:this.safeInteger2(s,"offset","result_offset",d*r)};void 0!==i&&(l.result_limit=i);let c=await this.v1PublicGetInstrumentsInstrumentFunding(this.extend(l,s)),u=this.safeList(c,"results",[]);return this.parseFundingRateHistories(u,h,t,i)}parseFundingRateHistory(e,t){return this.parseFundingRate(e,t)}parseFundingRate(e,t){let i=this.safeString2(e,"event_time","time");return{info:e,symbol:this.safeSymbol(void 0,t),markPrice:this.safeNumber(e,"mark_price"),indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:this.parse8601(i),datetime:i,fundingRate:this.safeNumber(e,"funding_rate"),fundingTimestamp:this.parse8601(i),fundingDatetime:i,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingHistory(e,t,i,s={}){let r,a;await this.loadMarkets();let n={type:"FUNDING"};void 0!==e&&(r=this.market(e)),[a,s]=this.handleOptionAndParams(s,"fetchFundingHistory","portfolios"),void 0!==a&&(n.portfolios=a),void 0!==t&&(n.time_from=this.iso8601(t)),void 0!==i?n.result_limit=i:n.result_limit=100;let o=await this.v1PrivateGetTransfers(this.extend(n,s)),h=this.safeList(o,"results",[]);return this.parseIncomes(h,r,t,i)}parseIncome(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"contract");let s=this.safeInteger(e,"created_at"),r=this.parse8601(s),a=this.safeString(e,"asset"),n=this.safeCurrencyCode(a);return{info:e,symbol:t.symbol,code:n,timestamp:r,datetime:this.iso8601(r),id:this.safeString(e,"transfer_uuid"),amount:this.safeNumber(e,"amount"),rate:void 0}}async fetchTransfers(e,t,i,s={}){let r,a;await this.loadMarkets();let n={type:"INTERNAL"};void 0!==e&&(r=this.currency(e)),[a,s]=this.handleOptionAndParams(s,"fetchTransfers","portfolios"),void 0!==a&&(n.portfolios=a),void 0!==t&&(n.time_from=this.iso8601(t)),void 0!==i?n.result_limit=i:n.result_limit=100;let o=await this.v1PrivateGetTransfers(this.extend(n,s)),h=this.safeList(o,"results",[]);return this.parseTransfers(h,r,t,i)}parseTransfer(e,t){let i=this.safeInteger(e,"created_at"),s=this.parse8601(i),r=this.safeString(e,"asset"),a=this.safeCurrencyCode(r),n=this.safeDict(e,"from_portfolio",{}),o=this.safeString(n,"id"),h=this.safeDict(e,"to_portfolio",{}),d=this.safeString(h,"id");return{info:e,id:this.safeString(e,"transfer_uuid"),timestamp:s,datetime:this.iso8601(s),currency:a,amount:this.safeNumber(e,"amount"),fromAccount:o,toAccount:d,status:this.parseTransferStatus(this.safeString(e,"status"))}}parseTransferStatus(e){return this.safeString({FAILED:"failed",PROCESSED:"ok",NEW:"pending",STARTED:"pending"},e,e)}async createDepositAddress(e,t={}){let i,s;await this.loadMarkets(),[i,t]=this.handleOptionAndParams(t,"createDepositAddress","method","v1PrivatePostTransfersAddress"),[s,t]=await this.handlePortfolioAndParams("createDepositAddress",t);let r={portfolio:s};if("v1PrivatePostTransfersAddress"===i){let i;let s=this.currency(e);r.asset=s.id,[i,t]=await this.handleNetworkIdAndParams(e,"createDepositAddress",t),r.network_arn_id=i}let a=await this[i](this.extend(r,t));return{currency:e,tag:this.safeString(a,"destination_tag"),address:this.safeString2(a,"address","counterparty_id"),info:a}}findDefaultNetwork(e){let t=this.toArray(e);for(let e=0;e<t.length;e++){let i=t[e].info;if(!0===this.safeBool(i,"is_default",!1))return t[e]}return t[0]}async loadCurrencyNetworks(e,t={}){let i=this.currency(e);if(void 0!==this.safeDict(i,"networks"))return;let s={asset:i.id},r=await this.v1PublicGetAssetsAssetNetworks(s);i.networks=this.parseNetworks(r)}parseNetworks(e,t={}){let i={};for(let s=0;s<e.length;s++){let r=this.extend(this.parseNetwork(e[s]),t);i[r.network]=r}return i}parseNetwork(e,t={}){let i=this.safeString(e,"asset_name"),s=this.safeCurrencyCode(i),r=this.safeString(e,"network_arn_id"),a=this.safeStringN(e,["network_name","display_name","network_arn_id"],"");return this.safeNetwork({info:e,id:r,name:this.safeString(e,"display_name"),network:this.networkIdToCode(a,s),active:void 0,deposit:void 0,withdraw:void 0,precision:void 0,fee:void 0,limits:{withdraw:{min:this.safeNumber(e,"min_withdrawal_amt"),max:this.safeNumber(e,"max_withdrawal_amt")},deposit:{min:void 0,max:void 0}}})}async setMargin(e,t,i={}){let s;if([s,i]=await this.handlePortfolioAndParams("setMargin",i),void 0!==e)throw new n.BadRequest(this.id+" setMargin() only allows setting margin to full portfolio");return await this.v1PrivatePostPortfoliosMargin(this.extend({portfolio:s,margin_override:t},i))}async fetchDepositsWithdrawals(e,t,i,s={}){let r,a,n,o;await this.loadMarkets(),[r,s]=this.handleOptionAndParams(s,"fetchDepositsWithdrawals","paginate"),[a,s]=this.handleOptionAndParams(s,"fetchDepositsWithdrawals","maxEntriesPerRequest",100);let h="ccxtPageKey";if(r)return await this.fetchPaginatedCallIncremental("fetchDepositsWithdrawals",e,t,i,s,h,a);let d=this.safeInteger(s,h,1)-1,l={result_offset:this.safeInteger2(s,"offset","result_offset",d*a)};if(void 0!==t&&(l.time_from=this.iso8601(t)),void 0!==i){let e=Math.min(i,100);l.result_limit=e}[n,s]=this.handleOptionAndParams(s,"fetchDepositsWithdrawals","portfolios"),void 0!==n&&(l.portfolios=n),[o,s]=this.handleOptionAndParams(s,"fetchDepositsWithdrawals","until"),void 0!==o&&(l.time_to=this.iso8601(o));let c=await this.v1PrivateGetTransfers(this.extend(l,s)),u=this.safeList(c,"results",[]);return this.parseTransactions(u)}async fetchPosition(e,t={}){let i;await this.loadMarkets(),e=this.symbol(e),[i,t]=await this.handlePortfolioAndParams("fetchPosition",t);let s={portfolio:i,instrument:this.marketId(e)},r=await this.v1PrivateGetPortfoliosPortfolioPositionsInstrument(this.extend(s,t));return this.parsePosition(r)}parsePosition(e,t){let i=this.safeString(e,"symbol"),s=this.safeString(e,"net_size");t=this.safeMarket(i,t,"-");let a="long";return r.Y.stringLe(s,"0")&&(a="short",s=r.Y.stringMul("-1",s)),this.safePosition({info:e,id:this.safeString(e,"id"),symbol:t.symbol,entryPrice:void 0,markPrice:this.safeNumber(e,"mark_price"),notional:void 0,collateral:void 0,unrealizedPnl:this.safeNumber(e,"unrealized_pnl"),side:a,contracts:this.parseNumber(s),contractSize:this.safeNumber(t,"contractSize"),timestamp:void 0,datetime:void 0,hedged:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,initialMargin:this.safeNumber(e,"im_contribution"),initialMarginPercentage:void 0,leverage:void 0,liquidationPrice:void 0,marginRatio:void 0,marginMode:void 0,percentage:void 0})}async fetchPositions(e,t={}){let i;await this.loadMarkets(),[i,t]=await this.handlePortfolioAndParams("fetchPositions",t);let s=await this.v1PrivateGetPortfoliosPortfolioPositions(this.extend({portfolio:i},t)),r=this.parsePositions(s);return this.isEmpty(e)?r:(e=this.marketSymbols(e),this.filterByArrayPositions(r,"symbol",e,!1))}async fetchWithdrawals(e,t,i,s={}){return await this.loadMarkets(),s.type="WITHDRAW",await this.fetchDepositsWithdrawals(e,t,i,s)}async fetchDeposits(e,t,i,s={}){return await this.loadMarkets(),s.type="DEPOSIT",await this.fetchDepositsWithdrawals(e,t,i,s)}parseTransactionStatus(e){return this.safeString({PROCESSED:"ok",NEW:"pending",STARTED:"pending",FAILED:"canceled"},e,e)}parseTransaction(e,t){let i=this.safeString(e,"updated_at"),s=this.safeDict(e,"from_portfolio",{}),r=this.safeStringN(e,["from_address","from_cb_account",this.safeStringN(s,["id","uuid","name"]),"from_counterparty_id"]),a=this.safeDict(e,"from_portfolio",{}),n=this.safeStringN(e,["to_address","to_cb_account",this.safeStringN(a,["id","uuid","name"]),"to_counterparty_id"]);return{info:e,id:this.safeString(e,"transfer_uuid"),txid:this.safeString(e,"transaction_uuid"),timestamp:this.parse8601(i),datetime:i,network:this.networkIdToCode(this.safeString(e,"network_name")),address:void 0,addressTo:n,addressFrom:r,tag:void 0,tagTo:void 0,tagFrom:void 0,type:this.safeString(e,"resource"),amount:this.safeNumber(e,"amount"),currency:this.safeCurrencyCode(this.safeString(e,"asset"),t),status:this.parseTransactionStatus(this.safeString(e,"status")),updated:this.parse8601(i),fee:{cost:void 0,currency:void 0}}}parseTrade(e,t){let i=this.safeString(e,"symbol"),s=this.safeString(e,"event_time");return this.safeTrade({info:e,id:this.safeString2(e,"fill_id","exec_id"),order:this.safeString(e,"order_id"),timestamp:this.parse8601(s),datetime:s,symbol:this.safeSymbol(i,t),type:void 0,side:this.safeStringLower(e,"side"),takerOrMaker:void 0,price:this.safeNumber(e,"fill_price"),amount:this.safeNumber(e,"fill_qty"),cost:void 0,fee:{cost:this.safeNumber(e,"fee"),currency:this.safeCurrencyCode(this.safeString(e,"fee_asset"))}})}async fetchMarkets(e={}){let t=await this.v1PublicGetInstruments(e);return this.parseMarkets(t)}parseMarket(e){let t;let i=this.safeString(e,"symbol"),s=this.safeString(e,"base_asset_name"),r=this.safeString(e,"quote_asset_name"),a="SPOT"===this.safeString(e,"type"),n=this.fees,o=s+"/"+r;return a||(t=r,o+=":"+r),{id:i,lowercaseId:i.toLowerCase(),symbol:o,base:s,quote:r,settle:t||void 0,baseId:s,quoteId:r,settleId:t||void 0,type:a?"spot":"swap",spot:a,margin:!1,swap:!a,future:!1,option:!1,active:"TRADING"===this.safeString(e,"trading_state"),contract:!a,linear:a?void 0:t===r,inverse:a?void 0:t!==r,taker:n.trading.taker,maker:n.trading.maker,contractSize:a?void 0:1,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"base_increment"),price:this.safeNumber(e,"quote_increment"),cost:this.safeNumber(e,"quote_increment")},limits:{leverage:{min:void 0,max:this.safeNumber(e,"base_imf")},amount:{min:void 0,max:a?void 0:this.safeNumber(e,"position_limit_qty")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(e,"min_notional_value"),max:void 0}},info:e,created:void 0}}async fetchCurrencies(e={}){let t=await this.v1PublicGetAssets(e);return this.parseCurrencies(t)}parseCurrency(e){let t=this.safeString(e,"asset_name"),i=this.safeCurrencyCode(t),s=this.safeString(e,"status");return this.safeCurrencyStructure({id:t,name:i,code:i,precision:void 0,info:e,active:"ACTIVE"===s,deposit:void 0,withdraw:void 0,networks:void 0,fee:void 0,fees:void 0,limits:this.limits})}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.v1PublicGetInstruments(t),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"symbol"),a=this.safeSymbol(r),n=this.safeDict(t,"quote",{});s[a]=this.parseTicker(n,this.safeMarket(r))}return this.filterByArray(s,"symbol",e,!0)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={instrument:this.marketId(e)},r=await this.v1PublicGetInstrumentsInstrumentQuote(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t){let i=this.safeString(e,"timestamp");return this.safeTicker({info:e,symbol:this.safeSymbol(void 0,t),timestamp:this.parse8601(i),datetime:i,bid:this.safeNumber(e,"best_bid_price"),bidVolume:this.safeNumber(e,"best_bid_size"),ask:this.safeNumber(e,"best_ask_price"),askVolume:this.safeNumber(e,"best_ask_size"),high:void 0,low:void 0,open:void 0,close:void 0,last:void 0,change:void 0,percentage:void 0,average:void 0,vwap:void 0,baseVolume:void 0,quoteVolume:void 0,previousClose:void 0,markPrice:this.safeNumber(e,"mark_price"),indexPrice:this.safeNumber(e,"index_price")})}async fetchBalance(e={}){let t;await this.loadMarkets(),[t,e]=await this.handlePortfolioAndParams("fetchBalance",e);let i=await this.v1PrivateGetPortfoliosPortfolioBalances(this.extend({portfolio:t},e));return this.parseBalance(i)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"asset_name"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"quantity"),n.used=this.safeString(s,"hold"),t[a]=n}return this.safeBalance(t)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a={asset:this.currency(e).id,ammount:t,from:i,to:s},n=await this.v1PrivatePostPortfoliosTransfer(this.extend(a,r)),o=this.safeBool(n,"success");return{info:n,id:void 0,timestamp:void 0,datetime:void 0,currency:e,amount:t,fromAccount:i,toAccount:s,status:o?"ok":"failed"}}async createOrder(e,t,i,s,r,a={}){let o;await this.loadMarkets();let h=this.market(e),d=t.toUpperCase(),l=this.safeNumberN(a,["triggerPrice","stopPrice","stop_price"]),c=this.safeString(this.options,"brokerId","nfqkvdjp")+"-"+this.uuid(),u={client_order_id:c=c.slice(0,17),side:i.toUpperCase(),instrument:h.id,size:this.amountToPrecision(h.symbol,s)};if(void 0!==l&&(d="limit"===t?"STOP_LIMIT":"STOP",u.stop_price=l),u.type=d,"limit"===t){if(void 0===r)throw new n.InvalidOrder(this.id+"createOrder() requires a price parameter for a limit order types");u.price=r}[o,a]=await this.handlePortfolioAndParams("createOrder",a),void 0!==o&&(u.portfolio=o);let f=this.safeBool2(a,"postOnly","post_only"),p=this.safeString2(a,"tif","timeInForce");if("MARKET"===d){if(void 0!==p&&"IOC"!==p)throw new n.InvalidOrder(this.id+'createOrder() market orders must have tif set to "IOC"');p="IOC"}else p=void 0===p?"GTC":p;void 0!==f&&(u.post_only=f),u.tif=p,a=this.omit(a,["client_order_id","user","postOnly","timeInForce"]);let m=await this.v1PrivatePostOrders(this.extend(u,a));return this.parseOrder(m,h)}parseOrder(e,t){let i;let s=this.safeString(e,"symbol"),r=this.safeNumber(e,"fee");void 0!==r&&(i={cost:r});let a=this.safeString2(e,"submit_time","event_time");return this.safeOrder({info:e,id:this.safeString(e,"order_id"),clientOrderId:this.safeString(e,"client_order_id"),timestamp:this.parse8601(a),datetime:a,lastTradeTimestamp:void 0,symbol:this.safeSymbol(s,t),type:this.parseOrderType(this.safeString(e,"type")),timeInForce:this.safeString(e,"tif"),postOnly:void 0,side:this.safeStringLower(e,"side"),price:this.safeString(e,"price"),triggerPrice:this.safeString(e,"stop_price"),amount:this.safeString(e,"size"),filled:this.safeString(e,"exec_qty"),remaining:this.safeString(e,"leaves_qty"),cost:void 0,average:this.safeString(e,"avg_price"),status:this.parseOrderStatus(this.safeString(e,"order_status")),fee:i,trades:void 0},t)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIAL_FILLED:"open",FILLED:"closed",CANCELED:"canceled",REPLACED:"canceled",PENDING_CANCEL:"open",REJECTED:"rejected",PENDING_NEW:"open",EXPIRED:"expired",PENDING_REPLACE:"open"},e,e)}parseOrderType(e){if("UNKNOWN_ORDER_TYPE"!==e)return this.safeString({MARKET:"market",LIMIT:"limit",STOP:"limit",STOP_LIMIT:"limit"},e,e)}async cancelOrder(e,t,i={}){let s,r;await this.loadMarkets(),[s,i]=await this.handlePortfolioAndParams("cancelOrder",i),void 0!==t&&(r=this.market(t));let a=await this.v1PrivateDeleteOrdersId(this.extend({portfolio:s,id:e},i));return this.parseOrder(a,r)}async cancelAllOrders(e,t={}){let i,s;await this.loadMarkets(),[i,t]=await this.handlePortfolioAndParams("cancelAllOrders",t);let r={portfolio:i};e&&(s=this.market(e),r.instrument=s.id);let a=await this.v1PrivateDeleteOrders(this.extend(r,t));return this.parseOrders(a,s)}async editOrder(e,t,i,s,r,a,o={}){let h;await this.loadMarkets();let d=this.market(t),l={id:e};[h,o]=await this.handlePortfolioAndParams("editOrder",o),void 0!==h&&(l.portfolio=h),void 0!==r&&(l.size=this.amountToPrecision(t,r)),void 0!==a&&(l.price=this.priceToPrecision(t,a));let c=this.safeNumberN(o,["stopPrice","stop_price","triggerPrice"]);void 0!==c&&(l.stop_price=c);let u=this.safeString2(o,"client_order_id","clientOrderId");if(void 0===u)throw new n.BadRequest(this.id+" editOrder() requires a clientOrderId parameter");l.client_order_id=u;let f=await this.v1PrivatePutOrdersId(this.extend(l,o));return this.parseOrder(f,d)}async fetchOrder(e,t,i={}){let s,r;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[r,i]=await this.handlePortfolioAndParams("fetchOrder",i);let a=await this.v1PrivateGetOrdersId(this.extend({id:e,portfolio:r},i));return this.parseOrder(a,s)}async fetchOpenOrders(e,t,i,s={}){let r,a,o;await this.loadMarkets(),[r,s]=await this.handlePortfolioAndParams("fetchOpenOrders",s);let h=!1;[h,s]=this.handleOptionAndParams(s,"fetchOpenOrders","paginate"),[a,s]=this.handleOptionAndParams(s,"fetchOpenOrders","maxEntriesPerRequest",100);let d="ccxtPageKey";if(h)return await this.fetchPaginatedCallIncremental("fetchOpenOrders",e,t,i,s,d,a);let l=this.safeInteger(s,d,1)-1,c={portfolio:r,result_offset:this.safeInteger2(s,"offset","result_offset",l*a)};if(e&&(o=this.market(e),c.instrument=e),void 0!==i){if(i>100)throw new n.BadRequest(this.id+" fetchOpenOrders() maximum limit is 100");c.result_limit=i}void 0!==t&&(c.ref_datetime=this.iso8601(t));let u=await this.v1PrivateGetOrders(this.extend(c,s)),f=this.safeList(u,"results",[]);return this.parseOrders(f,o,t,i)}async fetchMyTrades(e,t,i,s={}){let r,a;await this.loadMarkets();let o=!1;[o,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate");let h="ccxtPageKey";if([r,s]=this.handleOptionAndParams(s,"fetchMyTrades","maxEntriesPerRequest",100),o)return await this.fetchPaginatedCallIncremental("fetchMyTrades",e,t,i,s,h,r);void 0!==e&&(a=this.market(e));let d=this.safeInteger(s,h,1)-1,l={result_offset:this.safeInteger2(s,"offset","result_offset",d*r)};if(void 0!==i){if(i>100)throw new n.BadRequest(this.id+" fetchMyTrades() maximum limit is 100. Consider setting paginate to true to fetch more trades.");l.result_limit=i}void 0!==t&&(l.time_from=this.iso8601(t));let c=this.safeStringN(s,["until"]);void 0!==c&&(s=this.omit(s,["until"]),l.ref_datetime=this.iso8601(c));let u=await this.v1PrivateGetPortfoliosFills(this.extend(l,s)),f=this.safeList(u,"results",[]);return this.parseTrades(f,a,t,i)}async withdraw(e,t,i,s,r={}){let a,n,o;[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let h=this.currency(e);[a,r]=await this.handlePortfolioAndParams("withdraw",r),[n,r]=this.handleOptionAndParams(r,"withdraw","method","v1PrivatePostTransfersWithdraw"),[o,r]=await this.handleNetworkIdAndParams(e,"withdraw",r);let d={portfolio:a,type:"send",asset:h.id,address:i,amount:t,currency:h.id,network_arn_id:o,nonce:this.nonce()},l=await this[n](this.extend(d,r));return this.parseTransaction(l,h)}safeNetwork(e){let t=this.safeBool(e,"withdraw"),i=this.safeBool(e,"deposit"),s=this.safeDict(e,"limits"),r=this.safeDict(s,"withdraw"),a=this.safeNumber(r,"max"),n=this.safeDict(s,"deposit"),o=this.safeNumber(n,"max");void 0===t&&void 0!==a&&(t=a>0),void 0===i&&void 0!==o&&(i=o>0);let h=this.safeString(e,"id"),d=t&&i;return{info:e.info,id:h,name:this.safeString(e,"name"),network:this.safeString(e,"network"),active:this.safeBool(e,"active",d),deposit:i,withdraw:t,fee:this.safeNumber(e,"fee"),precision:this.safeNumber(e,"precision"),limits:{withdraw:{min:this.safeNumber(r,"min"),max:a},deposit:{min:this.safeNumber(n,"min"),max:o}}}}sign(e,t=[],i="GET",s={},r,a){let n=t[0],o="private"===t[1],h="/"+n+"/"+this.implodeParams(e,s),d=this.omit(s,this.extractParams(e)),c="/api"+h;("GET"===i||"DELETE"===i)&&Object.keys(d).length&&(h+="?"+this.urlencodeWithArrayRepeat(d));let u=this.urls.api.rest+h;if(o){this.checkRequiredCredentials();let e=this.nonce().toString(),t="";"GET"!==i&&Object.keys(d).length&&(t=a=this.json(d));let s=e+i+c+t;r={"CB-ACCESS-TIMESTAMP":e,"CB-ACCESS-SIGN":this.hmac(this.encode(s),this.base64ToBinary(this.secret),l.s,"base64"),"CB-ACCESS-PASSPHRASE":this.password,"CB-ACCESS-KEY":this.apiKey}}return{url:u,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.id+" "+a,c=this.safeString(o,"title");if(void 0!==c)throw this.throwExactlyMatchedException(this.exceptions.exact,c,l),this.throwBroadlyMatchedException(this.exceptions.broad,c,l),new n.ExchangeError(l)}}var e3=i(2846);class e5 extends s.k{}let e6=e5;class e4 extends e6{describe(){return this.deepExtend(super.describe(),{id:"coincheck",name:"coincheck",countries:["JP","ID"],rateLimit:1500,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,ws:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182088-1d6d6380-c2ec-11ea-9c64-8ab9f9b289f5.jpg",api:{rest:"https://coincheck.com/api"},www:"https://coincheck.com",doc:"https://coincheck.com/documents/exchange/api",fees:["https://coincheck.com/exchange/fee","https://coincheck.com/info/fee"]},api:{public:{get:["exchange/orders/rate","order_books","rate/{pair}","ticker","trades"]},private:{get:["accounts","accounts/balance","accounts/leverage_balance","bank_accounts","deposit_money","exchange/orders/opens","exchange/orders/transactions","exchange/orders/transactions_pagination","exchange/leverage/positions","lending/borrows/matches","send_money","withdraws"],post:["bank_accounts","deposit_money/{id}/fast","exchange/orders","exchange/transfers/to_leverage","exchange/transfers/from_leverage","lending/borrows","lending/borrows/{id}/repay","send_money","withdraws"],delete:["bank_accounts/{id}","exchange/orders/{id}","withdraws/{id}"]}},markets:{"BTC/JPY":this.safeMarketStructure({id:"btc_jpy",symbol:"BTC/JPY",base:"BTC",quote:"JPY",baseId:"btc",quoteId:"jpy",type:"spot",spot:!0}),"ETC/JPY":this.safeMarketStructure({id:"etc_jpy",symbol:"ETC/JPY",base:"ETC",quote:"JPY",baseId:"etc",quoteId:"jpy",type:"spot",spot:!0}),"FCT/JPY":this.safeMarketStructure({id:"fct_jpy",symbol:"FCT/JPY",base:"FCT",quote:"JPY",baseId:"fct",quoteId:"jpy",type:"spot",spot:!0}),"MONA/JPY":this.safeMarketStructure({id:"mona_jpy",symbol:"MONA/JPY",base:"MONA",quote:"JPY",baseId:"mona",quoteId:"jpy",type:"spot",spot:!0}),"ETC/BTC":this.safeMarketStructure({id:"etc_btc",symbol:"ETC/BTC",base:"ETC",quote:"BTC",baseId:"etc",quoteId:"btc",type:"spot",spot:!0})},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:void 0,daysBack:void 0,untilDays:void 0},fetchOrder:void 0,fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0"),taker:this.parseNumber("0")}},precisionMode:d.kb,exceptions:{exact:{"disabled API Key":n.AuthenticationError,"invalid authentication":n.AuthenticationError},broad:{}}})}parseBalance(e){let t={info:e},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){let r=i[s],a=this.currency(r).id;if(a in e){let i=this.account(),s=a+"_reserved";i.free=this.safeString(e,a),i.used=this.safeString(e,s),t[r]=i}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountsBalance(e);return this.parseBalance(t)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privateGetExchangeOrdersOpens(s),n=this.safeValue(a,"orders",[]),o=this.parseOrders(n,r,t,i),h=[];for(let e=0;e<o.length;e++)h.push(this.extend(o[e],{status:"open"}));return h}parseOrder(e,t){let i=this.safeString(e,"id"),s=this.safeString(e,"order_type"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"pending_amount"),n=this.safeString(e,"pending_amount"),o=this.safeString(e,"rate"),h=this.safeString(e,"pair"),d=this.safeSymbol(h,t,"_");return this.safeOrder({id:i,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,amount:a,remaining:n,filled:void 0,side:s,type:void 0,timeInForce:void 0,postOnly:void 0,status:void 0,symbol:d,price:o,triggerPrice:void 0,cost:void 0,fee:void 0,info:e,average:void 0,trades:void 0},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id},a=await this.publicGetOrderBooks(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){if("BTC/JPY"!==e)throw new n.BadSymbol(this.id+" fetchTicker() supports BTC/JPY only");await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i,s,r,a,n,o;let h=this.parse8601(this.safeString(e,"created_at")),d=this.safeString(e,"id"),l=this.safeString(e,"rate"),c=this.safeString(e,"pair"),u=(t=this.safeMarket(c,t,"_")).baseId,f=t.quoteId,p=t.symbol;if("liquidity"in e){"T"===this.safeString(e,"liquidity")?i="taker":"M"===this.safeString(e,"liquidity")&&(i="maker");let t=this.safeValue(e,"funds",{});s=this.safeString(t,u),r=this.safeString(t,f),n={currency:this.safeString(e,"fee_currency"),cost:this.safeString(e,"fee")},a=this.safeString(e,"side"),o=this.safeString(e,"order_id")}else s=this.safeString(e,"amount"),a=this.safeString(e,"order_type");return this.safeTrade({id:d,info:e,datetime:this.iso8601(h),timestamp:h,symbol:p,type:void 0,side:a,order:o,takerOrMaker:i,price:l,amount:s,cost:r,fee:n},t)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={};void 0!==i&&(a.limit=i);let n=await this.privateGetExchangeOrdersTransactionsPagination(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==i&&(a.limit=i);let n=await this.publicGetTrades(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetAccounts(e),i=this.safeValue(t,"exchange_fees",{}),s={};for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e],r=this.market(t),a=this.safeValue(i,r.id,{});s[t]={info:a,symbol:t,maker:this.safeNumber(a,"maker_fee"),taker:this.safeNumber(a,"taker_fee"),percentage:!0,tierBased:!1}}return s}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={pair:n.id};if("market"===t){let e=t+"_"+i;o.order_type=e,o[("buy"===i?e+"_":"")+"amount"]=s}else o.order_type=i,o.rate=r,o.amount=s;let h=await this.privatePostExchangeOrders(this.extend(o,a)),d=this.safeString(h,"id");return this.safeOrder({id:d,info:h},n)}async cancelOrder(e,t,i={}){let s=await this.privateDeleteExchangeOrdersId(this.extend({id:e},i));return this.parseOrder(s)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetDepositMoney(this.extend(a,s)),o=this.safeList(n,"deposits",[]);return this.parseTransactions(o,r,t,i,{type:"deposit"})}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a={};void 0!==i&&(a.limit=i);let n=await this.privateGetWithdraws(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i,{type:"withdrawal"})}parseTransactionStatus(e){return this.safeString({pending:"pending",processing:"pending",finished:"ok",canceled:"canceled",confirmed:"pending",received:"ok"},e,e)}parseTransaction(e,t){let i;let s=this.safeString(e,"id"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"address"),n=this.safeNumber(e,"amount"),o=this.safeString(e,"currency"),h=this.safeCurrencyCode(o,t),d=this.parseTransactionStatus(this.safeString(e,"status")),l=this.parse8601(this.safeString(e,"confirmed_at")),c=this.safeNumber(e,"fee");return void 0!==c&&(i={cost:c,currency:h}),{info:e,id:s,txid:void 0,timestamp:r,datetime:this.iso8601(r),network:void 0,address:a,addressTo:a,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:void 0,amount:n,currency:h,status:d,updated:l,comment:void 0,internal:void 0,fee:i}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t="";"GET"===i?Object.keys(o).length&&(n+="?"+this.urlencode(this.keysort(o))):Object.keys(o).length&&(t=a=this.urlencode(this.keysort(o)));let s=e+n+t;r={"Content-Type":"application/x-www-form-urlencoded","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":e,"ACCESS-SIGNATURE":this.hmac(this.encode(s),this.encode(this.secret),l.s)}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&!this.safeBool(o,"success",!0)){let e=this.safeString(o,"error"),t=this.id+" "+this.json(o);throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,a,t),new n.ExchangeError(this.id+" "+this.json(o))}}}var e8=i(9482);class e7 extends s.k{}let e9=e7;class te extends e9{describe(){return this.deepExtend(super.describe(),{id:"coinlist",name:"Coinlist",countries:["US"],version:"v1",rateLimit:300,certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,deposit:!1,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!0,fetchClosedOrder:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!0,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!1,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!0,withdraw:!0,ws:!1},timeframes:{"1m":"1m","5m":"5m","30m":"30m"},urls:{logo:"https://github-production-user-asset-6210df.s3.amazonaws.com/1294454/281108917-eff2ae1d-ce8a-4b2a-950d-8678b12da965.jpg",api:{public:"https://trade-api.coinlist.co",private:"https://trade-api.coinlist.co"},www:"https://coinlist.co",doc:["https://trade-docs.coinlist.co"],fees:"https://coinlist.co/fees"},api:{public:{get:{"v1/symbols":1,"v1/symbols/summary":1,"v1/symbols/{symbol}":1,"v1/symbols/{symbol}/summary":1,"v1/symbols/{symbol}/book":1,"v1/symbols/{symbol}/quote":1,"v1/symbols/{symbol}/candles":1,"v1/symbols/{symbol}/auctions":1,"v1/symbols/{symbol}/auctions/{auction_code}":1,"v1/time":1,"v1/assets":1,"v1/leaderboard":1,"v1/affiliate/{competition_code}":1,"v1/competition/{competition_id}":1}},private:{get:{"v1/fees":1,"v1/accounts":1,"v1/accounts/{trader_id}":1,"v1/accounts/{trader_id}/alias":1,"v1/accounts/{trader_id}/ledger":1,"v1/accounts/{trader_id}/wallets":1,"v1/accounts/{trader_id}/wallet-ledger":1,"v1/accounts/{trader_id}/ledger-summary":1,"v1/keys":1,"v1/fills":1,"v1/orders":1,"v1/orders/{order_id}":1,"v1/reports":1,"v1/balances":1,"v1/transfers":1,"v1/user":1,"v1/credits":1,"v1/positions":1,"v1/accounts/{trader_id}/competitions":1},post:{"v1/keys":1,"v1/orders":1,"v1/orders/cancel-all-after":1,"v1/reports":1,"v1/transfers/to-wallet":1,"v1/transfers/from-wallet":1,"v1/transfers/internal-transfer":1,"v1/transfers/withdrawal-request":1,"v1/orders/bulk":1,"v1/accounts/{trader_id}/competitions":1,"v1/accounts/{trader_id}/create-competition":1},patch:{"v1/orders/{order_id}":1,"v1/orders/bulk":1},delete:{"v1/keys/{key}":1,"v1/orders":1,"v1/orders/{order_id}":1,"v1/orders/bulk":1}}},features:{default:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!0},triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!0,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!0,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:500,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:500,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:500,daysBack:1e5,untilDays:1e5,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:500,daysBack:1e5,daysBackCanceled:void 0,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:300}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,taker:this.parseNumber("0.0045"),maker:this.parseNumber("0.0025"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0045")],[this.parseNumber("20000"),this.parseNumber("0.003")],[this.parseNumber("50000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("750000"),this.parseNumber("0.0018")],[this.parseNumber("1000000"),this.parseNumber("0.0016")],[this.parseNumber("2500000"),this.parseNumber("0.0013")],[this.parseNumber("5000000"),this.parseNumber("0.0012")],[this.parseNumber("10000000"),this.parseNumber("0.001")],[this.parseNumber("50000000"),this.parseNumber("0.0005")],[this.parseNumber("100000000"),this.parseNumber("0.0005")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("20000"),this.parseNumber("0.0025")],[this.parseNumber("50000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.0015")],[this.parseNumber("750000"),this.parseNumber("0.0012")],[this.parseNumber("1000000"),this.parseNumber("0.001")],[this.parseNumber("2500000"),this.parseNumber("0.0008")],[this.parseNumber("5000000"),this.parseNumber("0.0007")],[this.parseNumber("10000000"),this.parseNumber("0.0006")],[this.parseNumber("50000000"),this.parseNumber("0.0000")],[this.parseNumber("100000000"),this.parseNumber("0.00")]]}}},precisionMode:d.kb,options:{accountsByType:{"CoinList Pro":"trading","CoinList Pro trading account":"trading",Pro:"trading",pro:"trading",trade:"trading",trading:"trading",CoinList:"funding","CoinList wallet":"funding",Wallet:"funding",wallet:"funding",fund:"funding",funding:"funding"}},exceptions:{exact:{AUTH_SIG_INVALID:n.AuthenticationError,DENIED_MAINTENANCE:n.OnMaintenance,ORDER_REJECT_BAD_STATUS:n.InvalidOrder,ORDER_REJECT_INVALID_POST_ONLY:n.InvalidOrder,ORDER_REJECT_INVALID_CLOSE_ONLY:n.InvalidOrder,ORDER_REJECT_POST_ONLY_REQUIRED:n.InvalidOrder,ORDER_REJECT_FROZEN_ORDER:n.InvalidOrder,ORDER_REJECT_LIMIT_PRICE_PROTECTION_VIOLATION:n.InvalidOrder,ORDER_REJECT_CLOSED:n.NotSupported,ORDER_REJECT_MAX_ORDERS:n.BadRequest,ORDER_REJECT_NOT_FOUND:n.OrderNotFound,ORDER_REJECT_PARSE_ERROR:n.BadRequest,ORDER_REJECT_PRICE_INVALID:n.InvalidOrder,ORDER_REJECT_QUANTITY_ZERO:n.InvalidOrder,ORDER_REJECT_TOKEN_LIMIT:n.InsufficientFunds,ORDER_REJECT_TOKEN_LIMIT_OTHER:n.InvalidOrder,ORDER_REJECT_SELF_TRADE:n.InvalidOrder,ORDER_VALIDATE_BAD_SIZE_ALIGNMENT:n.InvalidOrder,ORDER_VALIDATE_BAD_TICK_ALIGNMENT:n.InvalidOrder,ORDER_VALIDATE_SYMBOL_NOT_FOUND:n.BadSymbol,TRANSFERS_WITHDRAWAL_REQUEST_TOO_LARGE:n.InsufficientFunds,WITHDRAWAL_REQUEST_NOT_ALLOWED:n.PermissionDenied},broad:{"A destinationAddress is required for non-USD withdrawals":n.InvalidAddress,"fails to match the JsonSchema date-time format pattern":n.BadRequest,"is required":n.ArgumentsRequired,"must be a string":n.BadRequest,"must be a valid GUID":n.BadRequest,"must be greater than or equal to":n.BadRequest,"must be less than or equal to":n.BadRequest,"must be one of":n.BadRequest,"Symbol not found":n.BadSymbol}}})}calculateRateLimiterCost(e,t,i,s,r={}){return Array.isArray(s)?Math.ceil(s.length/2):1}async fetchTime(e={}){let t=await this.publicGetV1Time(e),i=this.safeString(t,"iso");return this.parse8601(i)}async fetchCurrencies(e={}){let t=await this.publicGetV1Assets(e),i=this.safeValue(t,"assets",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"asset"),a=this.safeCurrencyCode(r),n=this.safeBool(t,"is_transferable",!1),o=this.safeString(t,"decimal_places"),h=this.parseNumber(this.parsePrecision(o)),d=this.safeString(t,"min_withdrawal");s[a]={id:r,code:a,name:a,info:t,active:n,deposit:n,withdraw:n,fee:void 0,precision:h,limits:{amount:{min:void 0,max:void 0},withdraw:{min:d,max:void 0}},networks:{}}}return s}async fetchMarkets(e={}){let t=await this.publicGetV1Symbols(e),i=this.safeValue(t,"symbols",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"symbol"),i=this.safeString(e,"base_currency"),s=this.safeString(e,"quote_currency"),r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s),n=this.safeString(e,"minimum_size_increment"),o=this.safeString(e,"minimum_price_increment"),h=this.safeString(e,"list_time");return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(n),price:this.parseNumber(o)},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:this.parse8601(h),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetV1SymbolsSummary(this.extend({},t));return this.parseTickers(i,e,t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetV1SymbolsSymbolSummary(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t){let i=this.safeValue(e,"last_trade",{}),s=this.parse8601(this.safeString(i,"logicalTime")),r=this.safeString(e,"highest_bid"),a=this.safeString(e,"lowest_ask"),n=this.safeString(e,"volume_base_24h"),o=this.safeString(e,"volume_quote_24h"),h=this.safeString(e,"highest_price_24h"),d=this.safeString(e,"lowest_price_24h"),l=this.safeString(e,"last_price"),c=this.safeString(e,"price_change_percent_24h");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),open:void 0,high:h,low:d,close:l,bid:r,bidVolume:void 0,ask:a,askVolume:void 0,vwap:void 0,previousClose:void 0,change:void 0,percentage:c,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id},r=await this.publicGetV1SymbolsSymbolBook(this.extend(s,i)),a=this.parse8601(this.safeString(r,"logical_time")),n=this.parseOrderBook(r,e,a);return n.nonce=void 0,n}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeString(this.timeframes,t),o={symbol:a.id,granularity:n};if(void 0!==i){if(o.start_time=this.iso8601(i),void 0!==s){let e=1e3*this.parseTimeframe(t);o.end_time=this.iso8601(this.sum(i,e*s))}else o.end_time=this.iso8601(this.milliseconds())}let h=this.safeInteger(r,"until");void 0!==h&&(r=this.omit(r,["until"]),o.end_time=this.iso8601(h));let d=await this.publicGetV1SymbolsSymbolCandles(this.extend(o,r)),l=this.safeList(d,"candles",[]);return this.parseOHLCVs(l,a,t,i,s)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,0)),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==i&&(a.count=Math.min(i,500));let n=this.safeInteger(s,"until");void 0!==n&&(s=this.omit(s,["until"]),a.end_time=this.iso8601(n));let o=await this.publicGetV1SymbolsSymbolAuctions(this.extend(a,s)),h=this.safeList(o,"auctions",[]);return this.parseTrades(h,r,t,i)}parseTrade(e,t){let i,s;let a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeString(e,"auction_code"),h=this.parse8601(this.safeString(e,"logical_time")),d=this.safeString(e,"price"),l=this.safeString2(e,"volume","quantity"),c=this.safeString(e,"order_id"),u=this.safeString(e,"fee");if(void 0!==u)r.Y.stringLt(l,"0")?(s="sell",l=r.Y.stringNeg(l)):s="buy",i={cost:u,currency:this.safeString(e,"fee_currency")};else{let t=this.safeString(e,"imbalance");s=r.Y.stringLt(t,"0")?"buy":"sell"}let f=this.safeString(e,"fee_type");return this.safeTrade({id:o,order:c,timestamp:h,datetime:this.iso8601(h),symbol:n,type:void 0,side:s,takerOrMaker:f,price:d,amount:l,cost:void 0,fee:i,info:e},t)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetV1Fees(e),i=this.safeValue(t,"fees_by_symbols",{}),s={},r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],a=this.safeValue(i,t,{}),n=this.parseFeeTiers(a),o=this.safeValue(a,"base",{}),h=this.safeValue(o,"fees",{}),d=t.split(",");for(let e=0;e<d.length;e++){let i=d[e],r=this.safeMarket(i).symbol,o={};o[t]=a,s[r]={info:o,symbol:r,maker:this.safeNumber(h,"maker"),taker:this.safeNumber(h,"taker"),percentage:!0,tierBased:!0,tiers:n}}}return s}parseFeeTiers(e,t){let i=[],s=[],r=Object.keys(e),a=r.length;if(a>0){for(let t=0;t<a;t++){let a=r[t],n=this.safeValue(e,a,{}),o=this.safeValue(n,"fees",{}),h=this.safeString(o,"taker"),d=this.safeString(o,"maker");s.push([void 0,this.parseNumber(d)]),i.push([void 0,this.parseNumber(h)])}i=this.sortBy(i,1,!0),s=this.sortBy(s,1,!0);let t=this.safeDict(i,0,[]),n=this.safeDict(this,"fees",{}),o=this.safeDict(n,"trading",{}),h=this.safeDict(o,"tiers",{}),d=this.safeList(h,"taker",[]),l=this.safeList(h,"maker",[]),c=d.length,u=t.length;if(a===c&&u>0)for(let e=0;e<a;e++)i[e][0]=d[e][0],s[e][0]=l[e][0]}return{maker:s,taker:i}}async fetchAccounts(e={}){await this.loadMarkets();let t=await this.privateGetV1Accounts(e),i=this.safeValue(t,"accounts",[]);return this.parseAccounts(i,e)}parseAccount(e){return{id:this.safeString(e,"trader_id"),type:"trading",code:void 0,info:e}}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetV1Balances(e);return this.parseBalance(t)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"asset_balances",{}),s=this.safeValue(e,"asset_holds",{}),r=Object.keys(i);for(let e=0;e<r.length;e++){let a=r[e],n=this.safeCurrencyCode(a),o=this.account();o.total=this.safeString(i,a),o.used=this.safeString(s,a,"0"),t[n]=o}return this.safeBalance(t)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==i&&(a.count=i);let n=this.safeInteger(s,"until");void 0!==n&&(s=this.omit(s,["until"]),a.end_time=this.iso8601(n));let o=await this.privateGetV1Fills(this.extend(a,s)),h=this.safeList(o,"fills",[]);return this.parseTrades(h,r,t,i)}async fetchOrderTrades(e,t,i,s,r={}){return await this.fetchMyTrades(t,i,s,this.extend({order_id:e},r))}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeString(s,"status");void 0===a&&(a=["accepted","done","canceled","rejected","pending"]);let n={status:a};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==t&&(n.start_time=this.iso8601(t)),void 0!==i&&(n.count=i);let o=this.safeInteger(s,"until");void 0!==o&&(s=this.omit(s,["until"]),n.end_time=this.iso8601(o));let h=await this.privateGetV1Orders(this.extend(n,s)),d=this.safeList(h,"orders",[]);return this.parseOrders(d,r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetV1OrdersOrderId(this.extend({order_id:e},i));return this.parseOrder(s)}async fetchOpenOrders(e,t,i,s={}){return await this.loadMarkets(),this.fetchOrders(e,t,i,this.extend({status:"accepted"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.loadMarkets(),this.fetchOrders(e,t,i,this.extend({status:"done"},s))}async fetchCanceledOrders(e,t,i,s={}){return await this.loadMarkets(),this.fetchOrders(e,t,i,this.extend({status:"canceled"},s))}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e&&(i=this.market(e),s.symbol=i.id);let r=await this.privateDeleteV1Orders(this.extend(s,t));return this.parseOrders([r],i)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteV1OrdersOrderId(this.extend({order_id:e},i));return this.parseOrder(s)}async cancelOrders(e,t,i={}){await this.loadMarkets(),i=e;let s=await this.privateDeleteV1OrdersBulk(i),r=this.safeList(s,"order_ids",[]),a=[],n=this.safeString(s,"timestamp");for(let e=0;e<r.length;e++)a.push(this.safeOrder({info:r[e],id:r[e],lastUpdateTimestamp:this.parse8601(n)}));return a}async createOrder(e,t,i,s,r,a={}){let o;await this.loadMarkets();let h=this.market(e),d={symbol:h.id,type:t,side:i,size:this.amountToPrecision(e,s)},l=!1;if("limit"===t||"stop_limit"===t||"take_limit"===t){if(void 0===r)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for a "+t+" order");d.price=this.priceToPrecision(e,r)}else l=!0;[o,a]=this.handlePostOnly(l,!1,a),o&&(d.post_only=!0);let c=this.safeNumberN(a,["triggerPrice","trigger_price","stopPrice","stop_price"]);if(void 0!==c)a=this.omit(a,["triggerPrice","trigger_price","stopPrice"]),d.stop_price=this.priceToPrecision(e,c),"market"===t?d.type="stop_market":"limit"===t&&(d.type="stop_limit");else if("stop_market"===t||"stop_limit"===t||"take_market"===t||"take_limit"===t)throw new n.ArgumentsRequired(this.id+" createOrder() requires a triggerPrice parameter for stop-loss and take-profit orders");let u=this.safeString2(a,"clientOrderId","client_id");void 0!==u&&(d.client_id=u,a=this.omit(a,["clientOrderId","client_id"]));let f=await this.privatePostV1Orders(this.extend(d,a)),p=this.safeDict(f,"order",{});return this.parseOrder(p,h)}async editOrder(e,t,i,s,r,a,o={}){if(await this.loadMarkets(),void 0===r)throw new n.ArgumentsRequired(this.id+" editOrder() requires an amount argument");let h=this.market(t),d={order_id:e,type:i,side:s,size:this.amountToPrecision(t,r)};void 0!==a&&(d.price=this.priceToPrecision(t,a));let l=await this.privatePatchV1OrdersOrderId(this.extend(d,o));return this.parseOrder(l,h)}parseOrder(e,t){let i;let s=this.safeString(e,"order_id"),r=this.safeString(e,"symbol");t=this.safeMarket(r,t);let a=this.safeString(e,"client_id"),n=this.safeString2(e,"created_at","epoch_timestamp");void 0===n&&(n=this.safeString(e,"timestamp"));let o=this.parse8601(n),h=this.parseOrderStatus(this.safeString(e,"status")),d=this.parseOrderType(this.safeString(e,"type")),l=this.safeString(e,"side"),c=this.safeString(e,"price"),u=this.safeString(e,"stop_price"),f=this.safeString(e,"average_fill_price"),p=this.safeString(e,"size"),m=this.safeString(e,"size_filled"),g=this.safeString(e,"fill_fees"),y=this.safeValue(e,"post_only");return void 0!==g&&(i={currency:t.quote,cost:g,rate:void 0}),this.safeOrder({id:s,clientOrderId:a,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,status:h,symbol:t.symbol,type:d,timeInForce:"GTC",side:l,price:c,triggerPrice:u,average:f,amount:p,cost:void 0,filled:m,remaining:void 0,fee:i,trades:void 0,info:e,postOnly:y},t)}parseOrderStatus(e){return this.safeString({pending:"open",accepted:"open",rejected:"rejected",done:"closed",canceled:"canceled"},e,e)}parseOrderType(e){return this.safeString({market:"market",limit:"limit",stop_market:"market",stop_limit:"limit",take_market:"market",take_limit:"limit"},e,e)}async transfer(e,t,i,s,r={}){let a;await this.loadMarkets();let n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t)},h=this.safeValue(this.options,"accountsByType",{}),d=this.safeString(h,i,i),l=this.safeString(h,s,s);return"funding"===d&&"trading"===l?a=await this.privatePostV1TransfersFromWallet(this.extend(o,r)):"trading"===d&&"funding"===l?a=await this.privatePostV1TransfersToWallet(this.extend(o,r)):(o.from_trader_id=d,o.to_trader_id=l,a=await this.privatePostV1TransfersInternalTransfer(this.extend(o,r))),this.parseTransfer(a,n)}async fetchTransfers(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a={};void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==i&&(a.count=i);let n=this.safeInteger(s,"until");void 0!==n&&(s=this.omit(s,["until"]),a.end_time=this.iso8601(n));let o=await this.privateGetV1Transfers(this.extend(a,s)),h=this.safeList(o,"transfers",[]);return this.parseTransfers(h,r,t,i)}parseTransfer(e,t){let i,s,a;let n=this.safeString(e,"asset"),o=this.safeString(e,"confirmed_at"),h=this.parse8601(o),d=this.safeString(e,"status"),l=this.safeString(e,"amount");return void 0!==l&&(r.Y.stringLt(l,"0")?(i="trading",s="funding",l=r.Y.stringNeg(l)):(i="funding",s="trading"),a=this.parseNumber(l)),{info:e,id:this.safeString(e,"transfer_id"),timestamp:h,datetime:this.iso8601(h),currency:this.safeCurrencyCode(n,t),amount:a,fromAccount:i,toAccount:s,status:this.parseTransferStatus(d)}}parseTransferStatus(e){return this.safeString({confirmed:"ok"},e,e)}async fetchDepositsWithdrawals(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchDepositsWithdrawals() requires a code argument");let r=this.safeString2(s,"trader_id","traderId");if(void 0===r)throw new n.ArgumentsRequired(this.id+" fetchDepositsWithdrawals() requires a traderId argument in the params");await this.loadMarkets();let a=this.currency(e),o={asset:a.id,trader_id:r};void 0!==i&&(o.count=i),s=this.omit(s,["trader_id","traderId"]);let h=await this.privateGetV1AccountsTraderIdWalletLedger(this.extend(o,s));return this.parseTransactions(h,a,t,i)}async withdraw(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n={asset:a.id,amount:this.currencyToPrecision(e,t),destination_address:i},o=await this.privatePostV1TransfersWithdrawalRequest(this.extend(n,r)),h=this.safeDict(o,"data",{});return this.parseTransaction(h,a)}parseTransaction(e,t){let i;let s=this.safeString(e,"asset"),r=this.safeCurrencyCode(s,t),a=this.safeString2(e,"id","transfer_id"),n=this.safeNumber(e,"amount"),o=this.parse8601(this.safeString(e,"created_at")),h=this.safeString(e,"type",void 0);h=void 0===h?"withdrawal":this.parseTransactionType(h);let d=this.safeString(e,"withdrawal_fee_amount");return void 0!==d&&(i={cost:d,currency:r}),{info:e,id:a,txid:void 0,timestamp:o,datetime:this.iso8601(o),network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:h,amount:n,currency:r,status:void 0,updated:void 0,fee:i,comment:this.safeString(e,"description"),internal:void 0}}parseTransactionType(e){return this.safeString({CRYPTO_DEPOSIT:"deposit",CRYPTO_WITHDRAWAL:"withdrawal",PRO_TRANSFER:"transfer"},e,e)}async fetchLedger(e,t,i,s={}){let r;let a=this.safeString2(s,"trader_id","traderId");if(void 0===a)throw new n.ArgumentsRequired(this.id+" fetchLedger() requires a traderId argument in the params");await this.loadMarkets();let o={trader_id:a};void 0!==e&&(r=this.currency(e)),void 0!==t&&(o.start_time=this.iso8601(t)),void 0!==i&&(o.count=i);let h=this.safeInteger(s,"until");void 0!==h&&(s=this.omit(s,["until"]),o.end_time=this.iso8601(h)),s=this.omit(s,["trader_id","traderId"]);let d=await this.privateGetV1AccountsTraderIdLedger(this.extend(o,s)),l=this.safeValue(d,"transactions",[]);return this.parseLedger(l,r,t,i)}parseLedgerEntry(e,t){let i;let s=this.safeString(e,"transaction_id"),a=this.safeString(e,"created_at"),n=this.parse8601(a),o=this.safeString(e,"amount");r.Y.stringLt(o,"0")?(i="out",o=r.Y.stringNeg(o)):i="in";let h=this.safeString(e,"asset"),d=this.safeCurrencyCode(h,t);t=this.safeCurrency(h,t);let l=this.parseLedgerEntryType(this.safeString(e,"type"));return this.safeLedgerEntry({info:e,id:s,timestamp:n,datetime:this.iso8601(n),direction:i,account:"trading",referenceId:void 0,referenceAccount:void 0,type:l,currency:d,amount:this.parseNumber(o),before:void 0,after:void 0,status:"ok",fee:void 0},t)}parseLedgerEntryType(e){return this.safeString({"atomic token swap":"trade",fee:"fee",deposit:"transfer",withdrawal:"transfer"},e,e)}sign(e,t="public",i="GET",s={},r,a){let n;let o=this.omit(s,this.extractParams(e)),h="/"+this.implodeParams(e,s),d=this.urls.api[t]+h,c=Array.isArray(s);if(c||(n=this.urlencode(o)),"private"===t){this.checkRequiredCredentials();let e=this.seconds().toString(),t=e+i+h;"POST"===i||"PATCH"===i||c?t+=a=this.json(o):void 0!==n&&0!==n.length&&(t+="?"+n,d+="?"+n);let s=this.hmac(this.encode(t),this.base64ToBinary(this.secret),l.s,"base64");r={"CL-ACCESS-KEY":this.apiKey,"CL-ACCESS-SIG":s,"CL-ACCESS-TIMESTAMP":e,"Content-Type":"application/json"}}else void 0!==n&&0!==n.length&&(d+="?"+n);return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o){if(404===e&&i.indexOf("/orders/")>=0&&"GET"===s){let e=i.split("/orders/"),t=this.safeString(e,1);throw new n.OrderNotFound(this.id+" order "+t+" not found (or rejected on the exchange side)")}return}let l=this.safeString(o,"status"),c=this.safeString(o,"message_code");if(void 0!==c||void 0!==l&&200!==e&&202!==e&&"200"!==l&&"202"!==l){let e=this.id+" "+a,t=this.safeString(o,"message");throw this.throwBroadlyMatchedException(this.exceptions.broad,t,e),this.throwExactlyMatchedException(this.exceptions.exact,c,e),new n.ExchangeError(e)}}}class tt extends s.k{}let ti=tt;class ts extends ti{describe(){return this.deepExtend(super.describe(),{id:"coinmate",name:"CoinMate",countries:["GB","CZ","EU"],rateLimit:600,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:"emulated",reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87460806-1c9f3f00-c616-11ea-8c46-a77018a8f3f4.jpg",api:{rest:"https://coinmate.io/api"},www:"https://coinmate.io",fees:"https://coinmate.io/fees",doc:["https://coinmate.docs.apiary.io","https://coinmate.io/developers"],referral:"https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["orderBook","ticker","tickerAll","products","transactions","tradingPairs"]},private:{post:["balances","bitcoinCashWithdrawal","bitcoinCashDepositAddresses","bitcoinDepositAddresses","bitcoinWithdrawal","bitcoinWithdrawalFees","buyInstant","buyLimit","cancelOrder","cancelOrderWithInfo","createVoucher","dashDepositAddresses","dashWithdrawal","ethereumWithdrawal","ethereumDepositAddresses","litecoinWithdrawal","litecoinDepositAddresses","openOrders","order","orderHistory","orderById","pusherAuth","redeemVoucher","replaceByBuyLimit","replaceByBuyInstant","replaceBySellLimit","replaceBySellInstant","rippleDepositAddresses","rippleWithdrawal","sellInstant","sellLimit","transactionHistory","traderFees","tradeHistory","transfer","transferHistory","unconfirmedBitcoinDeposits","unconfirmedBitcoinCashDeposits","unconfirmedDashDeposits","unconfirmedEthereumDeposits","unconfirmedLitecoinDeposits","unconfirmedRippleDeposits","cancelAllOpenOrders","withdrawVirtualCurrency","virtualCurrencyDepositAddresses","unconfirmedVirtualCurrencyDeposits","adaWithdrawal","adaDepositAddresses","unconfirmedAdaDeposits","solWithdrawal","solDepositAddresses","unconfirmedSolDeposits"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.006"),maker:this.parseNumber("0.004"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.006")],[this.parseNumber("10000"),this.parseNumber("0.003")],[this.parseNumber("100000"),this.parseNumber("0.0023")],[this.parseNumber("250000"),this.parseNumber("0.0021")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("1000000"),this.parseNumber("0.0015")],[this.parseNumber("3000000"),this.parseNumber("0.0012")],[this.parseNumber("15000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("10000"),this.parseNumber("0.002")],[this.parseNumber("100000"),this.parseNumber("0.0012")],[this.parseNumber("250000"),this.parseNumber("0.0009")],[this.parseNumber("500000"),this.parseNumber("0.0005")],[this.parseNumber("1000000"),this.parseNumber("0.0003")],[this.parseNumber("3000000"),this.parseNumber("0.0002")],[this.parseNumber("15000000"),this.parseNumber("-0.0004")]]}}},options:{withdraw:{fillResponsefromRequest:!0,methods:{BTC:"privatePostBitcoinWithdrawal",LTC:"privatePostLitecoinWithdrawal",BCH:"privatePostBitcoinCashWithdrawal",ETH:"privatePostEthereumWithdrawal",XRP:"privatePostRippleWithdrawal",DASH:"privatePostDashWithdrawal",DAI:"privatePostDaiWithdrawal",ADA:"privatePostAdaWithdrawal",SOL:"privatePostSolWithdrawal"}}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!0,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!0},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:100,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:void 0,fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{"No order with given ID":n.OrderNotFound},broad:{"Not enough account balance available":n.InsufficientFunds,"Incorrect order ID":n.InvalidOrder,"Minimum Order Size ":n.InvalidOrder,"max allowed precision":n.InvalidOrder,"TOO MANY REQUESTS":n.RateLimitExceeded,"Access denied.":n.AuthenticationError}},precisionMode:d.kb})}async fetchMarkets(e={}){let t=await this.publicGetTradingPairs(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"name"),a=this.safeString(t,"firstCurrency"),n=this.safeString(t,"secondCurrency"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=o+"/"+h;s.push({id:r,symbol:d,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"lotDecimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceDecimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:t})}return s}parseBalance(e){let t=this.safeValue(e,"data",{}),i={info:e},s=Object.keys(t);for(let e=0;e<s.length;e++){let r=s[e],a=this.safeCurrencyCode(r),n=this.safeValue(t,r),o=this.account();o.free=this.safeString(n,"available"),o.used=this.safeString(n,"reserved"),o.total=this.safeString(n,"balance"),i[a]=o}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={currencyPair:s.id,groupByPriceLimit:"False"},a=(await this.publicGetOrderBook(this.extend(r,i))).data,n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,s.symbol,n,"bids","asks","price","amount")}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={currencyPair:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeDict(r,"data");return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetTickerAll(t),s=this.safeValue(i,"data",{}),r=Object.keys(s),a={};for(let e=0;e<r.length;e++){let t=this.market(r[e]),i=this.parseTicker(this.safeValue(s,r[e]),t);a[t.symbol]=i}return this.filterByArrayTickers(a,"symbol",e)}parseTicker(e,t){let i=this.safeTimestamp(e,"timestamp"),s=this.safeNumber(e,"last");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeNumber(e,"high"),low:this.safeNumber(e,"low"),bid:this.safeNumber(e,"bid"),bidVolume:void 0,ask:this.safeNumber(e,"ask"),vwap:void 0,askVolume:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeNumber(e,"amount"),quoteVolume:void 0,info:e},t)}async fetchDepositsWithdrawals(e,t,i,s={}){await this.loadMarkets();let r={limit:1e3};if(void 0!==i&&(r.limit=i),void 0!==t&&(r.timestampFrom=t),void 0!==e){let t=this.currency(e);r.currency=t.id}let a=(await this.privatePostTransferHistory(this.extend(r,s))).data;return this.parseTransactions(a,void 0,t,i)}parseTransactionStatus(e){return this.safeString({COMPLETED:"ok",WAITING:"pending",SENT:"pending",CREATED:"pending",OK:"ok",NEW:"pending",CANCELED:"canceled"},e,e)}parseTransaction(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"amountCurrency"),r=this.safeCurrencyCode(s,t);return{info:e,id:this.safeString2(e,"transactionId","id"),txid:this.safeString(e,"txid"),type:this.safeStringLower(e,"transferType"),currency:r,network:this.safeString(e,"walletType"),amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatus(this.safeString(e,"transferStatus")),timestamp:i,datetime:this.iso8601(i),address:this.safeString(e,"destination"),addressFrom:void 0,addressTo:void 0,tag:this.safeString(e,"destinationTag"),tagFrom:void 0,tagTo:void 0,updated:void 0,comment:void 0,internal:void 0,fee:{cost:this.safeNumber(e,"fee"),currency:r,rate:void 0}}}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o=this.safeValue(this.options,"withdraw",{}),h=this.safeValue(o,"methods",{}),d=this.safeString(h,e);if(void 0===d){let e=Object.keys(h);throw new n.ExchangeError(this.id+" withdraw() only allows withdrawing the following currencies: "+e.join(", "))}let l={amount:this.currencyToPrecision(e,t),address:i};void 0!==s&&(l.destinationTag=s);let c=await this[d](this.extend(l,r)),u=this.safeValue(c,"data"),f=this.parseTransaction(u,a);return this.safeBool(o,"fillResponseFromRequest",!0)&&(f.amount=t,f.currency=e,f.address=i,f.tag=s,f.type="withdrawal",f.status="pending"),f}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets(),void 0===i&&(i=1e3);let r={limit:i};if(void 0!==e){let t=this.market(e);r.currencyPair=t.id}void 0!==t&&(r.timestampFrom=t);let a=await this.privatePostTradeHistory(this.extend(r,s)),n=this.safeList(a,"data",[]);return this.parseTrades(n,void 0,t,i)}parseTrade(e,t){let i;let s=this.safeString(e,"currencyPair");t=this.safeMarket(s,t,"_");let r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeStringLower2(e,"type","tradeType"),o=this.safeStringLower(e,"orderType"),h=this.safeString(e,"orderId"),d=this.safeString(e,"transactionId"),l=this.safeInteger2(e,"timestamp","createdTimestamp"),c=this.safeString(e,"fee");void 0!==c&&(i={cost:c,currency:t.quote});let u=this.safeString(e,"feeType");return u="MAKER"===u?"maker":"taker",this.safeTrade({id:d,info:e,timestamp:l,datetime:this.iso8601(l),symbol:t.symbol,type:o,side:n,order:h,takerOrMaker:u,price:r,amount:a,cost:void 0,fee:i},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={currencyPair:r.id,minutesIntoHistory:10},n=await this.publicGetTransactions(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={currencyPair:i.id},a=await this.privatePostTraderFees(this.extend(s,t)),n=this.safeValue(a,"data",{}),o=this.safeString(n,"maker"),h=this.safeString(n,"taker"),d=this.parseNumber(r.Y.stringDiv(o,"100")),l=this.parseNumber(r.Y.stringDiv(h,"100"));return{info:n,symbol:i.symbol,maker:d,taker:l,percentage:!0,tierBased:!0}}async fetchOpenOrders(e,t,i,s={}){let r=await this.privatePostOpenOrders(this.extend({},s));return this.parseOrders(r.data,void 0,t,i,{status:"open"})}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={currencyPair:r.id};void 0!==i&&(a.limit=i);let o=await this.privatePostOrderHistory(this.extend(a,s));return this.parseOrders(o.data,r,t,i)}parseOrderStatus(e){return this.safeString({FILLED:"closed",CANCELLED:"canceled",PARTIALLY_FILLED:"open",OPEN:"open"},e,e)}parseOrderType(e){return this.safeString({LIMIT:"limit",MARKET:"market"},e,e)}parseOrder(e,t){let i=this.safeString(e,"id"),s=this.safeInteger(e,"timestamp"),r=this.safeStringLower(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"originalAmount"),o=this.safeString2(e,"remainingAmount","amount"),h=this.parseOrderStatus(this.safeString(e,"status")),d=this.parseOrderType(this.safeString(e,"orderTradeType")),l=this.safeString(e,"avgPrice"),c=this.safeString(e,"currencyPair"),u=this.safeSymbol(c,t,"_"),f=this.safeString(e,"clientOrderId");return this.safeOrder({id:i,clientOrderId:f,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:u,type:d,timeInForce:void 0,postOnly:void 0,side:r,price:a,triggerPrice:this.safeNumber(e,"stopPrice"),amount:n,cost:void 0,average:l,filled:void 0,remaining:o,status:h,trades:void 0,info:e,fee:void 0},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n="privatePost"+this.capitalize(i),o=this.market(e),h={currencyPair:o.id};"market"===t?("buy"===i?h.total=this.amountToPrecision(e,s):h.amount=this.amountToPrecision(e,s),n+="Instant"):(h.amount=this.amountToPrecision(e,s),h.price=this.priceToPrecision(e,r),n+=this.capitalize(t));let d=await this[n](this.extend(h,a)),l=this.safeString(d,"data");return this.safeOrder({info:d,id:l},o)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets(),t&&(s=this.market(t));let r=await this.privatePostOrderById(this.extend({orderId:e},i)),a=this.safeDict(r,"data");return this.parseOrder(a,s)}async cancelOrder(e,t,i={}){let s=await this.privatePostCancelOrderWithInfo(this.extend({orderId:e},i)),r=this.safeDict(s,"data");return this.parseOrder(r)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret),l.s);a=this.urlencode(this.extend({clientId:this.uid,nonce:e,publicKey:this.apiKey,signature:i.toUpperCase()},s)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"errorMessage");if(void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new n.ExchangeError(e)}}}class tr extends s.k{}let ta=tr;class tn extends ta{describe(){return this.deepExtend(super.describe(),{id:"coinmetro",name:"Coinmetro",countries:["EE"],version:"v1",rateLimit:200,certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:!1,borrowCrossMargin:!0,borrowIsolatedMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!0,createDepositAddress:!1,createOrder:!0,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,deposit:!1,editOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledAndClosedOrders:!0,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!1,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!1,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,sandbox:!0,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!1,ws:!1},timeframes:{"1m":"60000","5m":"300000","30m":"1800000","4h":"14400000","1d":"86400000"},urls:{logo:"https://github.com/ccxt/ccxt/assets/43336371/e86f87ec-6ba3-4410-962b-f7988c5db539",api:{public:"https://api.coinmetro.com",private:"https://api.coinmetro.com"},test:{public:"https://api.coinmetro.com/open",private:"https://api.coinmetro.com/open"},www:"https://coinmetro.com/",doc:["https://documenter.getpostman.com/view/3653795/SVfWN6KS"],fees:"https://help.coinmetro.com/hc/en-gb/articles/6844007317789-What-are-the-fees-on-Coinmetro-",referral:"https://go.coinmetro.com/?ref=crypto24"},api:{public:{get:{"demo/temp":1,"exchange/candles/{pair}/{timeframe}/{from}/{to}":3,"exchange/prices":1,"exchange/ticks/{pair}/{from}":3,assets:1,markets:1,"exchange/book/{pair}":3,"exchange/bookUpdates/{pair}/{from}":1}},private:{get:{"users/balances":1,"users/wallets":1,"users/wallets/history/{since}":1.67,"exchange/orders/status/{orderID}":1,"exchange/orders/active":1,"exchange/orders/history/{since}":1.67,"exchange/fills/{since}":1.67,"exchange/margin":1},post:{jwt:1,jwtDevice:1,devices:1,"jwt-read-only":1,"exchange/orders/create":1,"exchange/orders/modify/{orderID}":1,"exchange/swap":1,"exchange/swap/confirm/{swapId}":1,"exchange/orders/close/{orderID}":1,"exchange/orders/hedge":1},put:{jwt:1,"exchange/orders/cancel/{orderID}":1,"users/margin/collateral":1,"users/margin/primary/{currency}":1}}},requiredCredentials:{apiKey:!1,secret:!1,uid:!0,token:!0},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0")}},precisionMode:d.kb,options:{currenciesByIdForParseMarket:void 0,currencyIdsListForParseMarket:void 0},features:{spot:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:{triggerPriceType:void 0,price:!1},timeInForce:{IOC:!0,FOK:!0,PO:!1,GTD:!0},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!0},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:void 0,daysBack:1e5,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:void 0,daysBack:1e5,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:void 0,fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{"Both buyingCurrency and sellingCurrency are required":n.InvalidOrder,"One and only one of buyingQty and sellingQty is required":n.InvalidOrder,"Invalid buyingCurrency":n.InvalidOrder,"Invalid 'from'":n.BadRequest,"Invalid sellingCurrency":n.InvalidOrder,"Invalid buyingQty":n.InvalidOrder,"Invalid sellingQty":n.InvalidOrder,"Insufficient balance":n.InsufficientFunds,"Expiration date is in the past or too near in the future":n.InvalidOrder,Forbidden:n.PermissionDenied,"Order Not Found":n.OrderNotFound,"since must be a millisecond timestamp":n.BadRequest,"This pair is disabled on margin":n.BadSymbol},broad:{"accessing from a new IP":n.PermissionDenied,"available to allocate as collateral":n.InsufficientFunds,"At least":n.BadRequest,"collateral is not allowed":n.BadRequest,"Insufficient liquidity":n.InvalidOrder,"Insufficient order size":n.InvalidOrder,"Invalid quantity":n.InvalidOrder,"Invalid Stop Loss":n.InvalidOrder,"Invalid stop price!":n.InvalidOrder,"Not enough balance":n.InsufficientFunds,"Not enough margin":n.InsufficientFunds,"orderType missing":n.BadRequest,"Server Timeout":n.ExchangeError,"Time in force has to be IOC or FOK for market orders":n.InvalidOrder,"Too many attempts":n.RateLimitExceeded}}})}async fetchCurrencies(e={}){let t=await this.publicGetAssets(e),i={};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r),n=this.safeValue(s,"canWithdraw"),o=this.safeValue(s,"canDeposit"),h=!this.safeValue(s,"canTrade")||n,d=this.safeNumber(s,"minQty");i[a]=this.safeCurrencyStructure({id:r,code:a,name:a,info:s,active:h,deposit:o,withdraw:n,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(s,"digits"))),limits:{amount:{min:d,max:void 0},withdraw:{min:void 0,max:void 0}},networks:{}})}if(void 0===this.safeValue(this.options,"currenciesByIdForParseMarket")){let e=this.indexBy(i,"id");this.options.currenciesByIdForParseMarket=e,this.options.currencyIdsListForParseMarket=Object.keys(e)}return i}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e);return void 0===this.safeValue(this.options,"currenciesByIdForParseMarket")&&await this.fetchCurrencies(),this.parseMarkets(t)}parseMarket(e){let t=this.safeString(e,"pair"),i=this.parseMarketId(t),s=this.safeString(i,"baseId"),r=this.safeString(i,"quoteId"),a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(r),o=this.parseMarketPrecisionAndLimits(s),h=this.parseMarketPrecisionAndLimits(r),d=this.safeBool(e,"margin",!1),l=this.safeValue(this.fees,"trading",{});return this.safeMarketStructure({id:t,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:s,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:d,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(l,"taker"),maker:this.safeNumber(l,"maker"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:o.precision,price:this.parseNumber(this.parsePrecision(this.safeString(e,"precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:o.minLimit,max:void 0},price:{min:void 0,max:void 0},cost:{min:h.minLimit,max:void 0}},created:void 0,info:e})}parseMarketId(e){let t,i;let s=this.safeValue(this.options,"currencyIdsListForParseMarket",[]);for(let r=0;r<s.length;r++){let a=s[r],n=e.indexOf(a);if(-1!==n){let r=e.replace(a,"");if(this.inArray(r,s)){0===n?(t=a,i=r):(t=r,i=a);break}}}return{baseId:t,quoteId:i}}parseMarketPrecisionAndLimits(e){let t=this.safeValue(this.options,"currenciesByIdForParseMarket",{}),i=this.safeValue(t,e,{}),s=this.safeValue(i,"limits",{}),r=this.safeValue(s,"amount",{}),a=this.safeNumber(r,"min");return{precision:this.safeNumber(i,"precision"),minLimit:a}}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o={pair:n.id,timeframe:this.safeString(this.timeframes,t,t)};if(void 0!==i){if(o.from=i,void 0!==s){let e=1e3*this.parseTimeframe(t);a=this.sum(i,e*s)}}else o.from=":from";void 0!==(a=this.safeInteger(r,"until",a))?(r=this.omit(r,["until"]),o.to=a):o.to=":to";let h=await this.publicGetExchangeCandlesPairTimeframeFromTo(this.extend(o,r)),d=this.safeList(h,"candleHistory",[]);return this.parseOHLCVs(d,n,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"timestamp"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==t?a.from=t:a.from="";let n=await this.publicGetExchangeTicksPairFrom(this.extend(a,s)),o=this.safeList(n,"tickHistory",[]);return this.parseTrades(o,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={};void 0!==t?a.since=t:a.since=0;let n=await this.privateGetExchangeFillsSince(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseTrade(e,t){let i=this.safeString2(e,"symbol","pair"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeStringN(e,["_id","seqNum","seqNumber"]),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"price"),o=this.safeString(e,"qty"),h=this.safeString(e,"orderID"),d=this.safeString(e,"side");return this.safeTrade({id:r,order:h,timestamp:a,datetime:this.iso8601(a),symbol:s,type:void 0,side:d,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:void 0,info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={pair:this.market(e).id},r=await this.publicGetExchangeBookPair(this.extend(s,i)),a=this.safeValue(r,"book",{}),n=this.safeValue(a,"bid",{}),o=this.safeValue(a,"ask",{}),h=this.parseOrderBook({bids:n,asks:o},e);return h.nonce=this.safeInteger(a,"seqNumber"),h}parseBidsAsks(e,t=0,i=1,s=2){let r=Object.keys(e),a=[];for(let t=0;t<r.length;t++){let i=this.safeString(r,t),s=this.safeNumber(r,t),n=this.safeNumber(e,i);a.push([s,n])}return a}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetExchangePrices(t),s=this.safeValue(i,"latestPrices",[]),r=this.safeValue(i,"24hInfo",[]),a={};for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"pair");void 0!==i&&(a[i]=t)}for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"pair");if(void 0!==i){let e=this.safeValue(a,i,{});a[i]=this.extend(t,e)}}let n=Object.values(a);return this.parseTickers(n,e)}async fetchBidsAsks(e,t={}){await this.loadMarkets();let i=await this.publicGetExchangePrices(t),s=this.safeList(i,"latestPrices",[]);return this.parseTickers(s,e)}parseTicker(e,t){let i=this.safeString(e,"pair");t=this.safeMarket(i,t);let s=this.safeInteger(e,"timestamp"),a=this.safeString(e,"bid"),n=this.safeString(e,"ask"),o=this.safeString(e,"h"),h=this.safeString(e,"l"),d=this.safeString(e,"price"),l=this.safeString(e,"v"),c=this.safeString(e,"delta"),u=r.Y.stringMul(c,"100");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),open:void 0,high:o,low:h,close:void 0,last:d,bid:a,bidVolume:void 0,ask:n,askVolume:void 0,vwap:void 0,previousClose:void 0,change:void 0,percentage:u,average:void 0,baseVolume:l,quoteVolume:void 0,info:e},t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUsersWallets(e),i=this.safeList(t,"list",[]);return this.parseBalance(i)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=this.safeDict(e,i,{}),r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.used=this.safeString(s,"reserved"),t[a]=n}return this.safeBalance(t)}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==t?a.since=t:a.since="",void 0!==e&&(r=this.currency(e));let n=await this.privateGetUsersWalletsHistorySince(this.extend(a,s)),o=this.safeValue(n,"list",[]),h=[];for(let e=0;e<o.length;e++){let t=o[e],i=this.safeString(t,"currency"),s=this.safeValue(t,"balanceHistory",[]);for(let e=0;e<s.length;e++){let t=s[e];t.currencyId=i,h.push(t)}}return this.parseLedger(h,r,t,i)}parseLedgerEntry(e,t){let i;let s=this.safeString(e,"timestamp"),a=this.safeString(e,"currencyId");e=this.omit(e,"currencyId"),t=this.safeCurrency(a,t);let n=this.safeString(e,"description",""),[o,h]=this.parseLedgerEntryDescription(n),d=this.safeValue(e,"JSONdata",{}),l=this.safeString(d,"fees"),c=this.safeString(e,"amount");return void 0!==c&&(r.Y.stringLt(c,"0")?(i="out",c=r.Y.stringAbs(c)):r.Y.stringGt(c,"0")&&(i="in")),this.safeLedgerEntry({info:e,id:void 0,timestamp:this.parse8601(s),datetime:s,direction:i,account:void 0,referenceId:h,referenceAccount:void 0,type:o,currency:t,amount:c,before:void 0,after:void 0,status:void 0,fee:{cost:l,currency:void 0}},t)}parseLedgerEntryDescription(e){let t,i,s=[];return void 0!==e&&(s=e.split(" ")),s.length>1&&(t=this.parseLedgerEntryType(s[0]),i="-"!==s[1]?s[1]:this.safeString(s,2)),[t,i]}parseLedgerEntryType(e){return this.safeString({Deposit:"transaction",Withdraw:"transaction",Order:"trade"},e,e)}async createOrder(e,t,i,s,a,o={}){let h,d;await this.loadMarkets();let l=this.market(e),c={};c.orderType=t,void 0!==s&&(h=this.amountToPrecision(e,s));let u=this.safeValue(o,"cost");if(o=this.omit(o,"cost"),"limit"===t){if(void 0===a&&void 0===u)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price or params.cost argument for a "+t+" order");if(void 0!==a&&void 0!==s){let e=r.Y.stringMul(this.numberToString(a),this.numberToString(h));u=this.parseToNumeric(e)}}void 0!==u&&(d=this.costToPrecision(e,u)),"sell"===i?c=this.handleCreateOrderSide(l.baseId,l.quoteId,h,d,c):"buy"===i&&(c=this.handleCreateOrderSide(l.quoteId,l.baseId,d,h,c));let f=this.safeValue(o,"timeInForce");void 0!==f&&(o=this.omit(o,"timeInForce"),c.timeInForce=this.encodeOrderTimeInForce(f));let p=this.safeString2(o,"triggerPrice","stopPrice");void 0!==p&&(o=this.omit(o,["triggerPrice"]),c.stopPrice=this.priceToPrecision(e,p));let m=this.safeValue(o,"userData",{}),g=this.safeString2(o,"clientOrderId","comment");void 0!==g&&(o=this.omit(o,["clientOrderId"]),m.comment=g);let y=this.safeString(o,"stopLossPrice");void 0!==y&&(o=this.omit(o,"stopLossPrice"),m.stopLoss=this.priceToPrecision(e,y));let v=this.safeString(o,"takeProfitPrice");void 0!==v&&(o=this.omit(o,"takeProfitPrice"),m.takeProfit=this.priceToPrecision(e,v)),this.isEmpty(m)||(c.userData=m);let b=await this.privatePostExchangeOrdersCreate(this.extend(c,o));return this.parseOrder(b,l)}handleCreateOrderSide(e,t,i,s,r={}){return r.sellingCurrency=e,r.buyingCurrency=t,void 0!==i&&(r.sellingQty=i),void 0!==s&&(r.buyingQty=s),r}encodeOrderTimeInForce(e){return this.safeValue({GTC:1,IOC:2,GTD:3,FOK:4},e,e)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets();let r={orderID:e};[i,i]=this.handleMarginModeAndParams("cancelOrder",i);let a=this.safeBool(i,"margin",!1);return i=this.omit(i,"margin"),s=a?await this.privatePostExchangeOrdersCloseOrderID(this.extend(r,i)):await this.privatePutExchangeOrdersCancelOrderID(this.extend(r,i)),this.parseOrder(s)}async closePosition(e,t,i={}){await this.loadMarkets();let s=this.safeString(i,"orderId");if(void 0===s)throw new n.ArgumentsRequired(this.id+" closePosition() requires a orderId parameter");let r=await this.privatePostExchangeOrdersCloseOrderID(this.extend({orderID:s},i));return this.parseOrder(r)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privateGetExchangeOrdersActive(s),n=this.parseOrders(a,r,t,i);for(let e=0;e<n.length;e++)n[e].status="open";return n}async fetchCanceledAndClosedOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={};void 0!==t&&(a.since=t);let n=await this.privateGetExchangeOrdersHistorySince(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetExchangeOrdersStatusOrderID(this.extend({orderID:e},i));return this.parseOrder(s)}parseOrder(e,t){let i,s,a,n,o,h,d,l,c=this.safeInteger(e,"creationTime");!0===this.safeValue(e,"canceled")?void 0===c?(c=this.safeInteger(e,"completionTime"),i="rejected"):i="canceled":(i=this.safeString(e,"status"),e=this.omit(e,"status"));let u=this.safeString(e,"orderType"),f=this.safeString(e,"buyingQty"),p=this.safeString(e,"sellingQty"),m=this.safeString(e,"boughtQty"),g=this.safeString(e,"soldQty");"market"===u&&(void 0===f&&void 0!==m&&"0"!==m&&(f=m),void 0===p&&void 0!==g&&"0"!==g&&(p=g));let y=this.safeString(e,"buyingCurrency",""),v=this.safeString(e,"sellingCurrency",""),b=y+v,w=v+y,k=f,S=f,O=this.indexBy(this.markets,"id");void 0!==this.safeValue(O,b)?(s="buy",a=b,S=p,n=m,o=g,h="base"):void 0!==this.safeValue(O,w)&&(s="sell",a=w,k=p,n=g,o=m,h="quote"),void 0!==k&&void 0!==S&&(d=r.Y.stringDiv(S,k)),t=this.safeMarket(a,t);let T=this.safeString(e,"fees");void 0!==T&&void 0!==h&&(l={currency:t[h],cost:T,rate:void 0});let I=this.safeValue(e,"fills",[]),x=this.safeValue(e,"userData",{}),P=this.safeString(x,"comment"),M=this.safeString(x,"takeProfit"),A=this.safeString(x,"stopLoss");return this.safeOrder({id:this.safeString(e,"orderID"),clientOrderId:P,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:this.safeInteger(e,"lastFillTime"),status:i,symbol:t.symbol,type:u,timeInForce:this.parseOrderTimeInForce(this.safeInteger(e,"timeInForce")),side:s,price:d,triggerPrice:this.safeString(e,"stopPrice"),takeProfitPrice:M,stopLossPrice:A,average:void 0,amount:k,cost:o,filled:n,remaining:void 0,fee:l,fees:void 0,trades:I,info:e},t)}parseOrderTimeInForce(e){return this.safeValue([void 0,"GTC","IOC","GTD","FOK"],e,e)}async borrowCrossMargin(e,t,i={}){await this.loadMarkets();let s=this.currency(e),r=s.id,a={};a[r]=this.currencyToPrecision(e,t);let n=await this.privatePutUsersMarginCollateral(this.extend(a,i)),o=this.safeValue(n,"result",{}),h=this.parseMarginLoan(o,s);return this.extend(h,{amount:t})}parseMarginLoan(e,t){let i=this.safeString(e,"coin");return{id:void 0,currency:this.safeCurrencyCode(i,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o="/"+this.implodeParams(e,s),h=this.urls.api[t]+o,d=this.urlencode(n);for(void 0===r&&(r={}),r.CCXT="true","private"===t?(void 0===this.uid&&void 0!==this.apiKey&&(this.uid=this.apiKey),void 0===this.token&&void 0!==this.secret&&(this.token=this.secret),"https://api.coinmetro.com/jwt"===h?(r["X-Device-Id"]="bypass",void 0!==this.twofa&&(r["X-OTP"]=this.twofa)):"https://api.coinmetro.com/jwtDevice"===h?(r["X-Device-Id"]=this.uid,void 0!==this.twofa&&(r["X-OTP"]=this.twofa)):(r.Authorization="Bearer "+this.token,h.startsWith("https://api.coinmetro.com/open")||(this.checkRequiredCredentials(),r["X-Device-Id"]=this.uid)),("POST"===i||"PUT"===i)&&(r["Content-Type"]="application/x-www-form-urlencoded",a=this.urlencode(n))):0!==d.length&&(h+="?"+d);h.endsWith("/");)h=h.slice(0,h.length-1);return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&200!==e&&201!==e&&202!==e){let e=this.id+" "+a,t=this.safeString(o,"message");throw this.throwBroadlyMatchedException(this.exceptions.broad,t,e),this.throwExactlyMatchedException(this.exceptions.exact,t,e),new n.ExchangeError(e)}}}class to extends s.k{}let th=to;class td extends th{describe(){return this.deepExtend(super.describe(),{id:"coinone",name:"CoinOne",countries:["KR"],rateLimit:50,version:"v2",pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddresses:!0,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,ws:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg",api:{rest:"https://api.coinone.co.kr",v2Public:"https://api.coinone.co.kr/public/v2",v2Private:"https://api.coinone.co.kr/v2",v2_1Private:"https://api.coinone.co.kr/v2.1"},www:"https://coinone.co.kr",doc:"https://doc.coinone.co.kr"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["orderbook","ticker","ticker_utc","trades"]},v2Public:{get:["range_units","markets/{quote_currency}","markets/{quote_currency}/{target_currency}","orderbook/{quote_currency}/{target_currency}","trades/{quote_currency}/{target_currency}","ticker_new/{quote_currency}","ticker_new/{quote_currency}/{target_currency}","ticker_utc_new/{quote_currency}","ticker_utc_new/{quote_currency}/{target_currency}","currencies","currencies/{currency}","chart/{quote_currency}/{target_currency}"]},private:{post:["account/deposit_address","account/btc_deposit_address","account/balance","account/daily_balance","account/user_info","account/virtual_account","order/cancel_all","order/cancel","order/limit_buy","order/limit_sell","order/complete_orders","order/limit_orders","order/order_info","transaction/auth_number","transaction/history","transaction/krw/history","transaction/btc","transaction/coin"]},v2Private:{post:["account/balance","account/deposit_address","account/user_info","account/virtual_account","order/cancel","order/limit_buy","order/limit_sell","order/limit_orders","order/complete_orders","order/query_order","transaction/auth_number","transaction/btc","transaction/history","transaction/krw/history"]},v2_1Private:{post:["account/balance/all","account/balance","account/trade_fee","account/trade_fee/{quote_currency}/{target_currency}","order/limit","order/cancel","order/cancel/all","order/open_orders","order/open_orders/all","order/complete_orders","order/complete_orders/all","order/info","transaction/krw/history","transaction/coin/history","transaction/coin/withdrawal/limit"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:.002,maker:.002}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:100,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{104:n.OrderNotFound,107:n.BadRequest,108:n.BadSymbol,405:n.OnMaintenance},commonCurrencies:{SOC:"Soda Coin"}})}async fetchCurrencies(e={}){let t=await this.v2PublicGetCurrencies(e),i={},s=this.safeList(t,"currencies",[]);for(let e=0;e<s.length;e++){let t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"name"),n=this.safeCurrencyCode(r),o=this.safeString(t,"withdraw_status",""),h=this.safeString(t,"deposit_status",""),d="normal"===o,l="normal"===h;i[n]={id:r,code:n,info:t,name:a,active:d&&l,deposit:l,withdraw:d,fee:this.safeNumber(t,"withdrawal_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"max_precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(t,"withdrawal_min_amount"),max:void 0}},networks:{}}}return i}async fetchMarkets(e={}){let t=await this.v2PublicGetTickerNewQuoteCurrency({quote_currency:"KRW"}),i=this.safeList(t,"tickers",[]),s=[];for(let e=0;e<i.length;e++){let t=this.safeValue(i,e),r=this.safeString(t,"id"),a=this.safeStringUpper(t,"target_currency"),n=this.safeStringUpper(t,"quote_currency"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n);s.push({id:r,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-4"),price:this.parseNumber("1e-4"),cost:this.parseNumber("1e-8")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:t})}return s}parseBalance(e){let t={info:e},i=this.omit(e,["errorCode","result","normalWallets"]),s=Object.keys(i);for(let e=0;e<s.length;e++){let r=s[e],a=i[r],n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(a,"avail"),o.total=this.safeString(a,"balance"),t[n]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.v2PrivatePostAccountBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={quote_currency:s.quote,target_currency:s.base};void 0!==t&&(r.size=t);let a=await this.v2PublicGetOrderbookQuoteCurrencyTargetCurrency(this.extend(r,i)),n=this.safeInteger(a,"timestamp");return this.parseOrderBook(a,s.symbol,n,"bids","asks","price","qty")}async fetchTickers(e,t={}){let i,s;await this.loadMarkets();let r={quote_currency:"KRW"};if(void 0!==(e=this.marketSymbols(e))){let a=this.safeString(e,0);i=this.market(a),r.quote_currency=i.quote,r.target_currency=i.base,s=await this.v2PublicGetTickerNewQuoteCurrencyTargetCurrency(this.extend(r,t))}else s=await this.v2PublicGetTickerNewQuoteCurrency(this.extend(r,t));let a=this.safeList(s,"tickers",[]);return this.parseTickers(a,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={quote_currency:i.quote,target_currency:i.base},r=await this.v2PublicGetTickerNewQuoteCurrencyTargetCurrency(this.extend(s,t)),a=this.safeList(r,"tickers",[]),n=this.safeDict(a,0,{});return this.parseTicker(n,i)}parseTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"last"),r=this.safeList(e,"best_asks",[]),a=this.safeList(e,"best_bids",[]),n=this.safeString(e,"target_currency"),o=this.safeString(e,"quote_currency"),h=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o);return this.safeTicker({symbol:h+"/"+d,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(a,"price"),bidVolume:this.safeString(a,"qty"),ask:this.safeString(r,"price"),askVolume:this.safeString(r,"qty"),vwap:void 0,open:this.safeString(e,"first"),close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"target_volume"),quoteVolume:this.safeString(e,"quote_volume"),info:e},t)}parseTrade(e,t){let i,s;let a=this.safeInteger(e,"timestamp");t=this.safeMarket(void 0,t);let n=this.safeBool(e,"is_seller_maker");void 0!==n&&(i=n?"sell":"buy");let o=this.safeString(e,"price"),h=this.safeString(e,"qty"),d=this.safeString(e,"orderId"),l=this.safeString(e,"fee");if(void 0!==l){l=r.Y.stringAbs(l);let a=this.safeString(e,"feeRate");a=r.Y.stringAbs(a),s={cost:l,currency:"sell"===i?t.quote:t.base,rate:a}}return this.safeTrade({id:this.safeString(e,"id"),info:e,timestamp:a,datetime:this.iso8601(a),order:d,symbol:t.symbol,type:void 0,side:i,takerOrMaker:void 0,price:o,amount:h,cost:void 0,fee:s},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={quote_currency:r.quote,target_currency:r.base};void 0!==i&&(a.size=Math.min(i,200));let n=await this.v2PublicGetTradesQuoteCurrencyTargetCurrency(this.extend(a,s)),o=this.safeList(n,"transactions",[]);return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){if("limit"!==t)throw new n.ExchangeError(this.id+" createOrder() allows limit orders only");await this.loadMarkets();let o=this.market(e),h={price:r,currency:o.id,qty:s},d="privatePostOrder"+this.capitalize(t)+this.capitalize(i),l=await this[d](this.extend(h,a));return this.parseOrder(l,o)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={order_id:e,currency:s.id},a=await this.v2PrivatePostOrderQueryOrder(this.extend(r,i));return this.parseOrder(a,s)}parseOrderStatus(e){return this.safeString({live:"open",partially_filled:"open",partially_canceled:"open",filled:"closed",canceled:"canceled"},e,e)}parseOrder(e,t){let i,s,a,n;let o=this.safeString(e,"orderId"),h=this.safeString(e,"baseCurrency"),d=this.safeString(e,"targetCurrency");void 0!==h&&(i=this.safeCurrencyCode(h)),void 0!==d&&(s=this.safeCurrencyCode(d)),void 0!==i&&void 0!==s&&(a=i+"/"+s,t=this.safeMarket(a,t,"/"));let l=this.safeTimestamp2(e,"timestamp","updatedAt"),c=this.safeString2(e,"type","side");"ask"===c?c="sell":"bid"===c&&(c="buy");let u=this.safeString(e,"remainQty"),f=this.safeString2(e,"originalQty","qty"),p=this.safeString(e,"status");"live"===p&&void 0!==u&&void 0!==f&&r.Y.stringLt(u,f)&&(p="canceled"),p=this.parseOrderStatus(p);let m=this.safeString(e,"fee");if(void 0!==m){let t="sell"===c?s:i;n={cost:m,rate:this.safeString(e,"feeRate"),currency:t}}return this.safeOrder({info:e,id:o,clientOrderId:void 0,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,symbol:a,type:"limit",timeInForce:void 0,postOnly:void 0,side:c,price:this.safeString(e,"price"),triggerPrice:void 0,cost:void 0,average:this.safeString(e,"averageExecutedPrice"),amount:f,filled:this.safeString(e,"executedQty"),remaining:u,status:p,fee:n,trades:void 0},t)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ExchangeError(this.id+" fetchOpenOrders() allows fetching closed orders with a specific symbol");await this.loadMarkets();let r=this.market(e),a={currency:r.id},o=await this.privatePostOrderLimitOrders(this.extend(a,s)),h=this.safeList(o,"limitOrders",[]);return this.parseOrders(h,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={currency:r.id},o=await this.v2PrivatePostOrderCompleteOrders(this.extend(a,s)),h=this.safeList(o,"completeOrders",[]);return this.parseTrades(h,r,t,i)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument. To cancel the order, pass a symbol argument and {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");let s=this.safeNumber(i,"price"),r=this.safeNumber(i,"qty"),a=this.safeInteger(i,"is_ask");if(void 0===s||void 0===r||void 0===a)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument.");await this.loadMarkets();let o={order_id:e,price:s,qty:r,is_ask:a,currency:this.marketId(t)},h=await this.v2PrivatePostOrderCancel(this.extend(o,i));return this.safeOrder(h)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();let i=await this.v2PrivatePostAccountDepositAddress(t),s=this.safeDict(i,"walletAddress",{}),r=Object.keys(s),a={};for(let e=0;e<r.length;e++){let t=r[e],i=s[t];if(!i||"-1"===i)continue;let n=t.split("_"),o=this.safeValue(n,0),h=this.safeValue(n,1),d=this.safeCurrencyCode(o),l=this.safeValue(a,d);void 0===l&&(l={info:i,currency:d,network:void 0,address:void 0,tag:void 0});let c=this.safeString(l,"address",i);this.checkAddress(c),l.address=c,l.info=c,("tag"===h||"memo"===h)&&(l.tag=i,l.info=[c,i]),a[d]=l}return a}sign(e,t="public",i="GET",s={},r,a){let n=this.implodeParams(e,s),o=this.omit(s,this.extractParams(e)),h=this.urls.api.rest+"/";if("v2Public"===t?(h=this.urls.api.v2Public+"/",t="public"):"v2Private"===t?h=this.urls.api.v2Private+"/":"v2_1Private"===t&&(h=this.urls.api.v2_1Private+"/"),"public"===t)h+=n,Object.keys(o).length&&(h+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),h+=n;let e=this.nonce().toString(),t=this.json(this.extend({access_token:this.apiKey,nonce:e},s)),i=this.stringToBase64(t);a=i;let o=this.secret.toUpperCase(),d=this.hmac(this.encode(i),this.encode(o),A.Zf);r={"Content-Type":"application/json","X-COINONE-PAYLOAD":i,"X-COINONE-SIGNATURE":d}}return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"error_code");if(void 0!==l&&"0"!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions,l,e),new n.ExchangeError(e)}}}class tl extends s.k{}let tc=tl;class tu extends tc{describe(){return this.deepExtend(super.describe(),{id:"coinsph",name:"Coins.ph",countries:["PH"],version:"v1",rateLimit:50,certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,deposit:!0,editOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!1,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawal:void 0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!0,ws:!1},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/225719995-48ab2026-4ddb-496c-9da7-0d7566617c9b.jpg",api:{public:"https://api.pro.coins.ph",private:"https://api.pro.coins.ph"},www:"https://coins.ph/",doc:["https://coins-docs.github.io/rest-api"],fees:"https://support.coins.ph/hc/en-us/sections/4407198694681-Limits-Fees"},api:{public:{get:{"openapi/v1/ping":1,"openapi/v1/time":1,"openapi/quote/v1/ticker/24hr":{cost:1,noSymbolAndNoSymbols:40,byNumberOfSymbols:[[101,40],[21,20],[0,1]]},"openapi/quote/v1/ticker/price":{cost:1,noSymbol:2},"openapi/quote/v1/ticker/bookTicker":{cost:1,noSymbol:2},"openapi/v1/exchangeInfo":10,"openapi/quote/v1/depth":{cost:1,byLimit:[[101,5],[0,1]]},"openapi/quote/v1/klines":1,"openapi/quote/v1/trades":1,"openapi/v1/pairs":1,"openapi/quote/v1/avgPrice":1}},private:{get:{"openapi/wallet/v1/config/getall":10,"openapi/wallet/v1/deposit/address":10,"openapi/wallet/v1/deposit/history":1,"openapi/wallet/v1/withdraw/history":1,"openapi/v1/account":10,"openapi/v1/openOrders":{cost:3,noSymbol:40},"openapi/v1/asset/tradeFee":1,"openapi/v1/order":2,"openapi/v1/historyOrders":{cost:10,noSymbol:40},"openapi/v1/myTrades":10,"openapi/v1/capital/deposit/history":1,"openapi/v1/capital/withdraw/history":1,"openapi/v3/payment-request/get-payment-request":1,"merchant-api/v1/get-invoices":1,"openapi/account/v3/crypto-accounts":1,"openapi/transfer/v3/transfers/{id}":1},post:{"openapi/wallet/v1/withdraw/apply":600,"openapi/v1/order/test":1,"openapi/v1/order":1,"openapi/v1/capital/withdraw/apply":1,"openapi/v1/capital/deposit/apply":1,"openapi/v3/payment-request/payment-requests":1,"openapi/v3/payment-request/delete-payment-request":1,"openapi/v3/payment-request/payment-request-reminder":1,"openapi/v1/userDataStream":1,"merchant-api/v1/invoices":1,"merchant-api/v1/invoices-cancel":1,"openapi/convert/v1/get-supported-trading-pairs":1,"openapi/convert/v1/get-quote":1,"openapi/convert/v1/accpet-quote":1,"openapi/fiat/v1/support-channel":1,"openapi/fiat/v1/cash-out":1,"openapi/fiat/v1/history":1,"openapi/migration/v4/sellorder":1,"openapi/migration/v4/validate-field":1,"openapi/transfer/v3/transfers":1},delete:{"openapi/v1/order":1,"openapi/v1/openOrders":1,"openapi/v1/userDataStream":1}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.003"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.003")],[this.parseNumber("500000"),this.parseNumber("0.0027")],[this.parseNumber("1000000"),this.parseNumber("0.0024")],[this.parseNumber("2500000"),this.parseNumber("0.002")],[this.parseNumber("5000000"),this.parseNumber("0.0018")],[this.parseNumber("10000000"),this.parseNumber("0.0015")],[this.parseNumber("100000000"),this.parseNumber("0.0012")],[this.parseNumber("500000000"),this.parseNumber("0.0009")],[this.parseNumber("1000000000"),this.parseNumber("0.0007")],[this.parseNumber("2500000000"),this.parseNumber("0.0005")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("500000"),this.parseNumber("0.0022")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("2500000"),this.parseNumber("0.0015")],[this.parseNumber("5000000"),this.parseNumber("0.0012")],[this.parseNumber("10000000"),this.parseNumber("0.001")],[this.parseNumber("100000000"),this.parseNumber("0.0008")],[this.parseNumber("500000000"),this.parseNumber("0.0007")],[this.parseNumber("1000000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000000"),this.parseNumber("0.0005")]]}}},precisionMode:d.kb,options:{createMarketBuyOrderRequiresPrice:!0,withdraw:{warning:!1},deposit:{warning:!1},createOrder:{timeInForce:"GTC",newOrderRespType:{market:"FULL",limit:"FULL"}},fetchTicker:{method:"publicGetOpenapiQuoteV1Ticker24hr"},fetchTickers:{method:"publicGetOpenapiQuoteV1Ticker24hr"},networks:{TRC20:"TRX",ERC20:"ETH",BEP20:"BSC",ARB:"ARBITRUM"}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!1,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!0,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{"-1000":n.BadRequest,"-1001":n.BadRequest,"-1002":n.AuthenticationError,"-1003":n.RateLimitExceeded,"-1004":n.InvalidOrder,"-1006":n.BadResponse,"-1007":n.BadResponse,"-1014":n.InvalidOrder,"-1015":n.RateLimitExceeded,"-1016":n.NotSupported,"-1020":n.NotSupported,"-1021":n.BadRequest,"-1022":n.BadRequest,"-1023":n.AuthenticationError,"-1024":n.BadRequest,"-1025":n.BadRequest,"-1030":n.ExchangeError,"-1100":n.BadRequest,"-1101":n.BadRequest,"-1102":n.BadRequest,"-1103":n.BadRequest,"-1104":n.BadRequest,"-1105":n.BadRequest,"-1106":n.BadRequest,"-1111":n.BadRequest,"-1112":n.BadResponse,"-1114":n.BadRequest,"-1115":n.InvalidOrder,"-1116":n.InvalidOrder,"-1117":n.InvalidOrder,"-1118":n.InvalidOrder,"-1119":n.InvalidOrder,"-1120":n.BadRequest,"-1121":n.BadSymbol,"-1122":n.InvalidOrder,"-1125":n.BadRequest,"-1127":n.BadRequest,"-1128":n.BadRequest,"-1130":n.BadRequest,"-1131":n.InsufficientFunds,"-1132":n.InvalidOrder,"-1133":n.InvalidOrder,"-1134":n.InvalidOrder,"-1135":n.InvalidOrder,"-1136":n.InvalidOrder,"-1137":n.InvalidOrder,"-1138":n.InvalidOrder,"-1139":n.InvalidOrder,"-1140":n.InvalidOrder,"-1141":n.DuplicateOrderId,"-1142":n.InvalidOrder,"-1143":n.OrderNotFound,"-1144":n.InvalidOrder,"-1145":n.InvalidOrder,"-1146":n.InvalidOrder,"-1147":n.InvalidOrder,"-1148":n.InvalidOrder,"-1149":n.InvalidOrder,"-1150":n.InvalidOrder,"-1151":n.BadSymbol,"-1152":n.NotSupported,"-1153":n.AuthenticationError,"-1154":n.BadRequest,"-1155":n.BadRequest,"-1156":n.InvalidOrder,"-1157":n.BadSymbol,"-1158":n.InvalidOrder,"-1159":n.InvalidOrder,"-1160":n.BadRequest,"-1161":n.BadRequest,"-2010":n.InvalidOrder,"-2013":n.OrderNotFound,"-2011":n.BadRequest,"-2014":n.BadRequest,"-2015":n.AuthenticationError,"-2016":n.BadResponse,"-3126":n.InvalidOrder,"-3127":n.InvalidOrder,"-4001":n.BadRequest,"-100011":n.BadSymbol,"-100012":n.BadSymbol,"-30008":n.InsufficientFunds,"-30036":n.InsufficientFunds,403:n.ExchangeNotAvailable},broad:{"Unknown order sent":n.OrderNotFound,"Duplicate order sent":n.DuplicateOrderId,"Market is closed":n.BadSymbol,"Account has insufficient balance for requested action":n.InsufficientFunds,"Market orders are not supported for this symbol":n.BadSymbol,"Iceberg orders are not supported for this symbol":n.BadSymbol,"Stop loss orders are not supported for this symbol":n.BadSymbol,"Stop loss limit orders are not supported for this symbol":n.BadSymbol,"Take profit orders are not supported for this symbol":n.BadSymbol,"Take profit limit orders are not supported for this symbol":n.BadSymbol,"Price* QTY is zero or less":n.BadRequest,"IcebergQty exceeds QTY":n.BadRequest,"This action disabled is on this account":n.PermissionDenied,"Unsupported order combination":n.InvalidOrder,"Order would trigger immediately":n.InvalidOrder,"Cancel order is invalid. Check origClOrdId and orderId":n.InvalidOrder,"Order would immediately match and take":n.OrderImmediatelyFillable,PRICE_FILTER:n.InvalidOrder,LOT_SIZE:n.InvalidOrder,MIN_NOTIONAL:n.InvalidOrder,MAX_NUM_ORDERS:n.InvalidOrder,MAX_ALGO_ORDERS:n.InvalidOrder,BROKER_MAX_NUM_ORDERS:n.InvalidOrder,BROKER_MAX_ALGO_ORDERS:n.InvalidOrder,ICEBERG_PARTS:n.BadRequest}}})}calculateRateLimiterCost(e,t,i,s,r={}){if("noSymbol"in r&&!("symbol"in s))return r.noSymbol;if("noSymbolAndNoSymbols"in r&&!("symbol"in s)&&!("symbols"in s))return r.noSymbolAndNoSymbols;if("byNumberOfSymbols"in r&&"symbols"in s){let e=s.symbols.length,t=r.byNumberOfSymbols;for(let i=0;i<t.length;i++){let s=t[i];if(e>=s[0])return s[1]}}else if("byLimit"in r&&"limit"in s){let e=s.limit,t=r.byLimit;for(let i=0;i<t.length;i++){let s=t[i];if(e>=s[0])return s[1]}}return this.safeValue(r,"cost",1)}async fetchStatus(e={}){return{status:"ok",updated:void 0,eta:void 0,url:void 0,info:await this.publicGetOpenapiV1Ping(e)}}async fetchTime(e={}){let t=await this.publicGetOpenapiV1Time(e);return this.safeInteger(t,"serverTime")}async fetchMarkets(e={}){let t=await this.publicGetOpenapiV1ExchangeInfo(e),i=this.safeList(t,"symbols",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseAsset"),n=this.safeString(t,"quoteAsset"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.indexBy(this.safeList(t,"filters",[]),"filterType"),l=this.safeValue(d,"LOT_SIZE",{}),c=this.safeValue(d,"PRICE_FILTER",{}),u=this.safeValue(d,"NOTIONAL",{});s.push({id:r,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"trading"===this.safeStringLower(t,"status"),contract:!1,linear:void 0,inverse:void 0,taker:void 0,maker:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.safeString(l,"stepSize")),price:this.parseNumber(this.safeString(c,"tickSize"))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(this.safeString(l,"minQty")),max:this.parseNumber(this.safeString(l,"maxQty"))},price:{min:this.parseNumber(this.safeString(c,"minPrice")),max:this.parseNumber(this.safeString(c,"maxPrice"))},cost:{min:this.parseNumber(this.safeString(u,"minNotional")),max:void 0}},created:void 0,info:t})}return this.setMarkets(s),s}async fetchTickers(e,t={}){let i;await this.loadMarkets();let s={};if(void 0!==e){let t=[];for(let i=0;i<e.length;i++){let s=this.market(e[i]).id;t.push(s)}s.symbols=t}let r=this.safeDict(this.options,"fetchTickers",{}),a=this.safeString(r,"method","publicGetOpenapiQuoteV1Ticker24hr");return i="publicGetOpenapiQuoteV1TickerPrice"===a?await this.publicGetOpenapiQuoteV1TickerPrice(this.extend(s,t)):"publicGetOpenapiQuoteV1TickerBookTicker"===a?await this.publicGetOpenapiQuoteV1TickerBookTicker(this.extend(s,t)):await this.publicGetOpenapiQuoteV1Ticker24hr(this.extend(s,t)),this.parseTickers(i,e,t)}async fetchTicker(e,t={}){let i;await this.loadMarkets();let s=this.market(e),r={symbol:s.id},a=this.safeDict(this.options,"fetchTicker",{}),n=this.safeString(a,"method","publicGetOpenapiQuoteV1Ticker24hr");return i="publicGetOpenapiQuoteV1TickerPrice"===n?await this.publicGetOpenapiQuoteV1TickerPrice(this.extend(r,t)):"publicGetOpenapiQuoteV1TickerBookTicker"===n?await this.publicGetOpenapiQuoteV1TickerBookTicker(this.extend(r,t)):await this.publicGetOpenapiQuoteV1Ticker24hr(this.extend(r,t)),this.parseTicker(i,s)}parseTicker(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeInteger(e,"closeTime"),a=this.safeString(e,"bidPrice"),n=this.safeString(e,"askPrice"),o=this.safeString(e,"bidQty"),h=this.safeString(e,"askQty"),d=this.safeString(e,"volume"),l=this.safeString(e,"quoteVolume"),c=this.safeString(e,"openPrice"),u=this.safeString(e,"highPrice"),f=this.safeString(e,"lowPrice"),p=this.safeString(e,"prevClosePrice"),m=this.safeString(e,"weightedAvgPrice"),g=this.safeString(e,"priceChange"),y=this.safeString(e,"priceChangePercent");return y=r.Y.stringMul(y,"100"),this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),open:c,high:u,low:f,close:this.safeString2(e,"lastPrice","price"),bid:a,bidVolume:o,ask:n,askVolume:h,vwap:m,previousClose:p,change:g,percentage:y,average:void 0,baseVolume:d,quoteVolume:l,info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.publicGetOpenapiQuoteV1Depth(this.extend(s,i)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeString(this.timeframes,t),o={symbol:a.id,interval:n};if(void 0!==i){if(o.startTime=i,o.limit=1e3,void 0!==s){let e=1e3*this.parseTimeframe(t);o.endTime=this.sum(i,e*(s-1))}else o.endTime=this.milliseconds()}else void 0!==s&&(o.limit=s);let h=await this.publicGetOpenapiQuoteV1Klines(this.extend(o,r));return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t?a.limit=1e3:void 0!==i&&(a.limit=i);let n=await this.publicGetOpenapiQuoteV1Trades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t?(a.startTime=t,a.limit=1e3):void 0!==i&&(a.limit=i);let o=await this.privateGetOpenapiV1MyTrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchOrderTrades(e,t,i,s,r={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");return await this.fetchMyTrades(t,i,s,this.extend({orderId:e},r))}parseTrade(e,t){let i,s,r,a;let n=this.safeString(e,"symbol"),o=(t=this.safeMarket(n,t)).symbol,h=this.safeString2(e,"id","tradeId"),d=this.safeString(e,"orderId"),l=this.safeInteger(e,"time"),c=this.safeString(e,"price"),u=this.safeString(e,"qty"),f=this.safeString(e,"commission");if(void 0!==f){let t=this.safeString(e,"commissionAsset");i={cost:f,currency:this.safeCurrencyCode(t)}}let p=this.safeBool2(e,"isBuyer","isBuyerMaker",void 0);void 0!==p&&(s=!0===p?"buy":"sell");let m=this.safeString2(e,"isMaker",void 0);return void 0!==m&&(r="true"===m?"maker":"taker"),void 0!==d&&(a=this.safeString(e,"quoteQty")),this.safeTrade({id:h,order:d,timestamp:l,datetime:this.iso8601(l),symbol:o,type:void 0,side:s,takerOrMaker:r,price:c,amount:u,cost:a,fee:i,info:e},t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetOpenapiV1Account(e);return this.parseBalance(t)}parseBalance(e){let t=this.safeList(e,"balances",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"free"),n.used=this.safeString(s,"locked"),i[a]=n}return this.safeBalance(i)}async createOrder(e,t,i,s,a,o={}){let h;await this.loadMarkets();let d=this.market(e),l=this.safeBool(o,"test",!1);o=this.omit(o,"test");let c=this.safeString(o,"type",t);c=this.encodeOrderType(c),o=this.omit(o,"type");let u=this.encodeOrderSide(i),f={symbol:d.id,type:c,side:u},p=this.safeValue(this.options,"createOrder",{}),m=this.safeValue(p,"newOrderRespType",{});if("LIMIT"===c||"STOP_LOSS_LIMIT"===c||"TAKE_PROFIT_LIMIT"===c||"LIMIT_MAKER"===c){if(void 0===a)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for a "+t+" order");m=this.safeString(m,"limit","FULL"),f.price=this.priceToPrecision(e,a),f.quantity=this.amountToPrecision(e,s),"LIMIT_MAKER"!==c&&(f.timeInForce=this.safeString(p,"timeInForce","GTC"))}else if("MARKET"===c||"STOP_LOSS"===c||"TAKE_PROFIT"===c){if(m=this.safeString(m,"market","FULL"),"SELL"===u)f.quantity=this.amountToPrecision(e,s);else if("BUY"===u){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let h=this.safeNumber2(o,"cost","quoteOrderQty");if(o=this.omit(o,"cost"),void 0!==h)t=this.costToPrecision(e,h);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);f.quoteOrderQty=t}}if("STOP_LOSS"===c||"STOP_LOSS_LIMIT"===c||"TAKE_PROFIT"===c||"TAKE_PROFIT_LIMIT"===c){let t=this.safeString2(o,"triggerPrice","stopPrice");if(void 0===t)throw new n.InvalidOrder(this.id+" createOrder () requires a triggerPrice or stopPrice param for stop_loss, take_profit, stop_loss_limit, and take_profit_limit orders");f.stopPrice=this.priceToPrecision(e,t)}return f.newOrderRespType=m,o=this.omit(o,"price","stopPrice","triggerPrice","quantity","quoteOrderQty"),h=l?await this.privatePostOpenapiV1OrderTest(this.extend(f,o)):await this.privatePostOpenapiV1Order(this.extend(f,o)),this.parseOrder(h,d)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s={},r=this.safeValue2(i,"origClientOrderId","clientOrderId");void 0!==r?s.origClientOrderId=r:s.orderId=e,i=this.omit(i,["clientOrderId","origClientOrderId"]);let a=await this.privateGetOpenapiV1Order(this.extend(s,i));return this.parseOrder(a)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);let n=await this.privateGetOpenapiV1OpenOrders(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchClosedOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t?(a.startTime=t,a.limit=1e3):void 0!==i&&(a.limit=i);let o=await this.privateGetOpenapiV1HistoryOrders(this.extend(a,s));return this.parseOrders(o,r,t,i)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={},r=this.safeValue2(i,"origClientOrderId","clientOrderId");void 0!==r?s.origClientOrderId=r:s.orderId=e,i=this.omit(i,["clientOrderId","origClientOrderId"]);let a=await this.privateDeleteOpenapiV1Order(this.extend(s,i));return this.parseOrder(a)}async cancelAllOrders(e,t={}){let i;if(void 0===e)throw new n.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();let s={};void 0!==e&&(i=this.market(e),s.symbol=i.id);let r=await this.privateDeleteOpenapiV1OpenOrders(this.extend(s,t));return this.parseOrders(r,i)}parseOrder(e,t){let i=this.safeString(e,"orderId"),s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let a=this.safeInteger2(e,"time","transactTime"),n=this.safeValue(e,"fills",void 0),o=this.safeString(e,"stopPrice");return r.Y.stringEq(o,"0")&&(o=void 0),this.safeOrder({id:i,clientOrderId:this.safeString(e,"clientOrderId"),timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,status:this.parseOrderStatus(this.safeString(e,"status")),symbol:t.symbol,type:this.parseOrderType(this.safeString(e,"type")),timeInForce:this.parseOrderTimeInForce(this.safeString(e,"timeInForce")),side:this.parseOrderSide(this.safeString(e,"side")),price:this.safeString(e,"price"),triggerPrice:o,average:void 0,amount:this.safeString(e,"origQty"),cost:this.safeString(e,"cummulativeQuoteQty"),filled:this.safeString(e,"executedQty"),remaining:void 0,fee:void 0,fees:void 0,trades:n,info:e},t)}parseOrderSide(e){return this.safeString({BUY:"buy",SELL:"sell"},e,e)}encodeOrderSide(e){return this.safeString({buy:"BUY",sell:"SELL"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",LIMIT_MAKER:"limit",STOP_LOSS:"market",STOP_LOSS_LIMIT:"limit",TAKE_PROFIT:"market",TAKE_PROFIT_LIMIT:"limit"},e,e)}encodeOrderType(e){return this.safeString({market:"MARKET",limit:"LIMIT",limit_maker:"LIMIT_MAKER",stop_loss:"STOP_LOSS",stop_loss_limit:"STOP_LOSS_LIMIT",take_profit:"TAKE_PROFIT",take_profit_limit:"TAKE_PROFIT_LIMIT"},e,e)}parseOrderStatus(e){return this.safeString({NEW:"open",FILLED:"closed",CANCELED:"canceled",PARTIALLY_FILLED:"open",PARTIALLY_CANCELED:"canceled",REJECTED:"rejected"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",FOK:"FOK",IOC:"IOC"},e,e)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.privateGetOpenapiV1AssetTradeFee(this.extend(s,t)),a=this.safeDict(r,0,{});return this.parseTradingFee(a,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetOpenapiV1AssetTradeFee(e),i={};for(let e=0;e<t.length;e++){let s=this.parseTradingFee(t[e]);i[s.symbol]=s}return i}parseTradingFee(e,t){let i=this.safeString(e,"symbol");return{info:e,symbol:(t=this.safeMarket(i,t)).symbol,maker:this.safeNumber(e,"makerCommission"),taker:this.safeNumber(e,"takerCommission"),percentage:void 0,tierBased:void 0}}async withdraw(e,t,i,s,r={}){let a=this.safeValue(this.options,"withdraw");if(this.safeBool(a,"warning",!0))throw new n.InvalidAddress(this.id+" withdraw() makes a withdrawals only to coins_ph account, add .options['withdraw']['warning'] = false to make a withdrawal to your coins_ph account");let o=this.safeString(r,"network"),h=this.networkCodeToId(o,e);if(void 0===h)throw new n.BadRequest(this.id+" withdraw() require network parameter");await this.loadMarkets();let d=this.currency(e),l={coin:d.id,amount:this.numberToString(t),network:h,address:i};void 0!==s&&(l.withdrawOrderId=s),r=this.omit(r,"network");let c=await this.privatePostOpenapiWalletV1WithdrawApply(this.extend(l,r));return this.parseTransaction(c,d)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=await this.privateGetOpenapiWalletV1DepositHistory(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=await this.privateGetOpenapiWalletV1WithdrawHistory(this.extend(a,s));return this.parseTransactions(n,r,t,i)}parseTransaction(e,t){let i,s,r;let a=this.safeString(e,"id"),n=this.safeString(e,"address"),o=this.safeString(e,"addressTag");void 0!==o&&o.length<1&&(o=void 0);let h=this.safeString(e,"txId"),d=this.safeString(e,"coin"),l=this.safeCurrencyCode(d,t);i=this.safeInteger2(e,"insertTime","applyTime");let c=this.safeString(e,"withdrawOrderId"),u=this.safeString(e,"depositOrderId");void 0!==c?s="withdrawal":void 0!==u&&(s="deposit");let f=this.parseTransactionStatus(this.safeString(e,"status")),p=this.safeNumber(e,"amount"),m=this.safeNumber(e,"transactionFee");void 0!==m&&(r={currency:l,cost:m});let g=this.safeString(e,"network");return{info:e,id:a,txid:h,timestamp:i,datetime:this.iso8601(i),network:g,address:n,addressTo:n,addressFrom:void 0,tag:o,tagTo:o,tagFrom:void 0,type:s,amount:p,currency:l,status:f,updated:void 0,internal:"Internal"===g,comment:void 0,fee:r}}parseTransactionStatus(e){return this.safeString({0:"pending",1:"ok",2:"failed",3:"pending"},e,e)}async fetchDepositAddress(e,t={}){let i=this.safeString(t,"network"),s=this.networkCodeToId(i,e);if(void 0===s)throw new n.BadRequest(this.id+" fetchDepositAddress() require network parameter");await this.loadMarkets();let r=this.currency(e),a={coin:r.id,network:s};t=this.omit(t,"network");let o=await this.privateGetOpenapiWalletV1DepositAddress(this.extend(a,t));return this.parseDepositAddress(o,r)}parseDepositAddress(e,t){let i=this.safeString(e,"coin");return{info:e,currency:this.safeCurrencyCode(i,t),network:null,address:this.safeString(e,"address"),tag:this.safeString(e,"addressTag")}}urlEncodeQuery(e={}){let t="",i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s];if(Array.isArray(e[r])){0!==s&&(t+="&");let i=e[r];e=this.omit(e,r),t+=this.parseArrayParam(i,r)}}let s=this.urlencode(e);return 0!==s.length?s+"&"+t:t}parseArrayParam(e,t){let i=this.json(e);return t+"="+(i=(i=i.replace("[","%5B")).replace("]","%5D"))}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t],o=this.omit(s,this.extractParams(e));if(n=n+"/"+this.implodeParams(e,s),"private"===t){if(this.checkRequiredCredentials(),o.timestamp=this.milliseconds(),void 0===this.safeInteger(o,"recvWindow")){let e=this.safeInteger(this.options,"recvWindow");void 0!==e&&(o.recvWindow=e)}o=this.urlEncodeQuery(o);let e=this.hmac(this.encode(o),this.encode(this.secret),l.s);n=n+"?"+o+"&signature="+e,r={"X-COINS-APIKEY":this.apiKey}}else 0!==(o=this.urlEncodeQuery(o)).length&&(n+="?"+o);return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code",void 0);if(void 0!==l&&"200"!==l&&"0"!==l){let e=this.id+" "+a;throw this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),new n.ExchangeError(e)}}}class tf extends s.k{}let tp=tf;class tm extends tp{describe(){return this.deepExtend(super.describe(),{id:"coinspot",name:"CoinSpot",countries:["AU"],rateLimit:1e3,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,ws:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg",api:{public:"https://www.coinspot.com.au/pubapi",private:"https://www.coinspot.com.au/api"},www:"https://www.coinspot.com.au",doc:"https://www.coinspot.com.au/api",referral:"https://www.coinspot.com.au/register?code=PJURCU"},api:{public:{get:["latest"]},private:{post:["orders","orders/history","my/coin/deposit","my/coin/send","quote/buy","quote/sell","my/balances","my/orders","my/buy","my/sell","my/buy/cancel","my/sell/cancel","ro/my/balances","ro/my/balances/{cointype}","ro/my/deposits","ro/my/withdrawals","ro/my/transactions","ro/my/transactions/{cointype}","ro/my/transactions/open","ro/my/transactions/{cointype}/open","ro/my/sendreceive","ro/my/affiliatepayments","ro/my/referralpayments"]}},markets:{"ADA/AUD":this.safeMarketStructure({id:"ada",symbol:"ADA/AUD",base:"ADA",quote:"AUD",baseId:"ada",quoteId:"aud",type:"spot",spot:!0}),"BTC/AUD":this.safeMarketStructure({id:"btc",symbol:"BTC/AUD",base:"BTC",quote:"AUD",baseId:"btc",quoteId:"aud",type:"spot",spot:!0}),"ETH/AUD":this.safeMarketStructure({id:"eth",symbol:"ETH/AUD",base:"ETH",quote:"AUD",baseId:"eth",quoteId:"aud",type:"spot",spot:!0}),"XRP/AUD":this.safeMarketStructure({id:"xrp",symbol:"XRP/AUD",base:"XRP",quote:"AUD",baseId:"xrp",quoteId:"aud",type:"spot",spot:!0}),"LTC/AUD":this.safeMarketStructure({id:"ltc",symbol:"LTC/AUD",base:"LTC",quote:"AUD",baseId:"ltc",quoteId:"aud",type:"spot",spot:!0}),"DOGE/AUD":this.safeMarketStructure({id:"doge",symbol:"DOGE/AUD",base:"DOGE",quote:"AUD",baseId:"doge",quoteId:"aud",type:"spot",spot:!0}),"RFOX/AUD":this.safeMarketStructure({id:"rfox",symbol:"RFOX/AUD",base:"RFOX",quote:"AUD",baseId:"rfox",quoteId:"aud",type:"spot",spot:!0}),"POWR/AUD":this.safeMarketStructure({id:"powr",symbol:"POWR/AUD",base:"POWR",quote:"AUD",baseId:"powr",quoteId:"aud",type:"spot",spot:!0}),"NEO/AUD":this.safeMarketStructure({id:"neo",symbol:"NEO/AUD",base:"NEO",quote:"AUD",baseId:"neo",quoteId:"aud",type:"spot",spot:!0}),"TRX/AUD":this.safeMarketStructure({id:"trx",symbol:"TRX/AUD",base:"TRX",quote:"AUD",baseId:"trx",quoteId:"aud",type:"spot",spot:!0}),"EOS/AUD":this.safeMarketStructure({id:"eos",symbol:"EOS/AUD",base:"EOS",quote:"AUD",baseId:"eos",quoteId:"aud",type:"spot",spot:!0}),"XLM/AUD":this.safeMarketStructure({id:"xlm",symbol:"XLM/AUD",base:"XLM",quote:"AUD",baseId:"xlm",quoteId:"aud",type:"spot",spot:!0}),"RHOC/AUD":this.safeMarketStructure({id:"rhoc",symbol:"RHOC/AUD",base:"RHOC",quote:"AUD",baseId:"rhoc",quoteId:"aud",type:"spot",spot:!0}),"GAS/AUD":this.safeMarketStructure({id:"gas",symbol:"GAS/AUD",base:"GAS",quote:"AUD",baseId:"gas",quoteId:"aud",type:"spot",spot:!0})},commonCurrencies:{DRK:"DASH"},options:{fetchBalance:"private_post_my_balances"},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!1,FOK:!1,PO:!1,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:void 0,daysBack:1e5,untilDays:1e5},fetchOrder:void 0,fetchOpenOrders:void 0,fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:void 0},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb})}parseBalance(e){let t={info:e},i=this.safeValue2(e,"balance","balances");if(Array.isArray(i))for(let e=0;e<i.length;e++){let s=i[e],r=Object.keys(s);for(let e=0;e<r.length;e++){let i=r[e],a=s[i],n=this.safeCurrencyCode(i),o=this.account();o.total=this.safeString(a,"balance"),t[n]=o}}else{let e=Object.keys(i);for(let s=0;s<e.length;s++){let r=e[s],a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,r),t[a]=n}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(this.options,"fetchBalance","private_post_my_balances"),i=await this[t](e);return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={cointype:s.id},a=await this.privatePostOrders(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"buyorders","sellorders","rate","amount")}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetLatest(t),r=i.id;r=r.toLowerCase();let a=this.safeDict(s,"prices",{}),n=this.safeDict(a,r);return this.parseTicker(n,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetLatest(t),s={},r=this.safeDict(i,"prices",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){let t=a[e],i=this.safeMarket(t);if(i.spot){let e=i.symbol,a=r[t];s[e]=this.parseTicker(a,i)}}return this.filterByArrayTickers(s,"symbol",e)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={cointype:r.id},n=await this.privatePostOrdersHistory(this.extend(a,s)),o=this.safeList(n,"orders",[]);return this.parseTrades(o,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e)),void 0!==t&&(a.startdate=this.yyyymmdd(t));let n=await this.privatePostRoMyTransactions(this.extend(a,s)),o=this.safeList(n,"buyorders",[]);for(let e=0;e<o.length;e++)o[e].side="buy";let h=this.safeList(n,"sellorders",[]);for(let e=0;e<h.length;e++)h[e].side="sell";let d=this.arrayConcat(o,h);return this.parseTrades(d,r,t,i)}parseTrade(e,t){let i,s,a;let n=this.safeString(e,"audtotal"),o=this.safeString(e,"total",n),h=this.safeString(e,"side"),d=this.safeString(e,"amount"),l=this.safeString(e,"market"),c=this.safeSymbol(l,t,"/"),u=this.safeInteger(e,"solddate");if(void 0!==u)s=this.safeString(e,"rate"),i=u;else{s=r.Y.stringDiv(o,d);let t=this.safeString(e,"created");i=this.parse8601(t);let n=this.safeString(e,"audfeeExGst"),h=this.safeString(e,"audGst"),l=r.Y.stringAdd(n,h);a={cost:this.parseNumber(l),currency:this.safeCurrencyCode("AUD")}}return this.safeTrade({info:e,id:void 0,symbol:c,timestamp:i,datetime:this.iso8601(i),order:void 0,type:void 0,side:h,takerOrMaker:void 0,price:this.parseNumber(s),amount:this.parseNumber(d),cost:this.parseNumber(o),fee:a},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="privatePostMy"+this.capitalize(i);if("market"===t)throw new n.ExchangeError(this.id+" createOrder() allows limit orders only");let h={cointype:this.market(e).id,amount:s,rate:r};return await this[o](this.extend(h,a))}async cancelOrder(e,t,i={}){let s;let r=this.safeString(i,"side");if("buy"!==r&&"sell"!==r)throw new n.ArgumentsRequired(this.id+' cancelOrder() requires a side parameter, "buy" or "sell"');i=this.omit(i,"side");let a={id:e};return s="buy"===r?await this.privatePostMyBuyCancel(this.extend(a,i)):await this.privatePostMySellCancel(this.extend(a,i)),this.safeOrder({info:s})}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+e;if("private"===t){this.checkRequiredCredentials();let e=this.nonce();a=this.json(this.extend({nonce:e},s)),r={"Content-Type":"application/json",key:this.apiKey,sign:this.hmac(this.encode(a),this.encode(this.secret),A.Zf)}}return{url:n,method:i,body:a,headers:r}}}class tg extends s.k{}let ty=tg;class tv extends ty{describe(){return this.deepExtend(super.describe(),{id:"cryptocom",name:"Crypto.com",countries:["MT"],version:"v2",rateLimit:10,certified:!0,pro:!0,has:{CORS:!1,spot:!0,margin:!0,swap:!0,future:!0,option:!0,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,cancelOrdersForSymbols:!0,closeAllPositions:!1,closePosition:!0,createMarketBuyOrderWithCost:!1,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!0,createStopOrder:!0,createTriggerOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:"emulated",fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchGreeks:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!0,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsHistory:!1,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!0,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawals:!0,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/147792121-38ed5e36-c229-48d6-b49a-48d05fc19ed4.jpeg",test:{v1:"https://uat-api.3ona.co/exchange/v1",v2:"https://uat-api.3ona.co/v2",derivatives:"https://uat-api.3ona.co/v2"},api:{v1:"https://api.crypto.com/exchange/v1",v2:"https://api.crypto.com/v2",derivatives:"https://deriv-api.crypto.com/v1"},www:"https://crypto.com/",referral:{url:"https://crypto.com/exch/kdacthrnxt",discount:.75},doc:["https://exchange-docs.crypto.com/exchange/v1/rest-ws/index.html","https://exchange-docs.crypto.com/spot/index.html","https://exchange-docs.crypto.com/derivatives/index.html"],fees:"https://crypto.com/exchange/document/fees-limits"},api:{v1:{public:{get:{"public/auth":10/3,"public/get-instruments":10/3,"public/get-book":1,"public/get-candlestick":1,"public/get-trades":1,"public/get-tickers":1,"public/get-valuations":1,"public/get-expired-settlement-price":10/3,"public/get-insurance":1,"public/get-risk-parameters":1},post:{"public/staking/get-conversion-rate":2}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/user-balance":10/3,"private/user-balance-history":10/3,"private/get-positions":10/3,"private/create-order":2/3,"private/create-order-list":10/3,"private/cancel-order":2/3,"private/cancel-order-list":10/3,"private/cancel-all-orders":2/3,"private/close-position":10/3,"private/get-order-history":100,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/change-account-leverage":10/3,"private/get-transactions":10/3,"private/create-subaccount-transfer":10/3,"private/get-subaccount-balances":10/3,"private/get-order-list":10/3,"private/create-withdrawal":10/3,"private/get-currency-networks":10/3,"private/get-deposit-address":10/3,"private/get-accounts":10/3,"private/get-withdrawal-history":10/3,"private/get-deposit-history":10/3,"private/get-fee-rate":2,"private/get-instrument-fee-rate":2,"private/staking/stake":2,"private/staking/unstake":2,"private/staking/get-staking-position":2,"private/staking/get-staking-instruments":2,"private/staking/get-open-stake":2,"private/staking/get-stake-history":2,"private/staking/get-reward-history":2,"private/staking/convert":2,"private/staking/get-open-convert":2,"private/staking/get-convert-history":2}}},v2:{public:{get:{"public/auth":1,"public/get-instruments":1,"public/get-book":1,"public/get-candlestick":1,"public/get-ticker":1,"public/get-trades":1,"public/margin/get-transfer-currencies":1,"public/margin/get-load-currenices":1,"public/respond-heartbeat":1}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/create-withdrawal":10/3,"private/get-withdrawal-history":10/3,"private/get-currency-networks":10/3,"private/get-deposit-history":10/3,"private/get-deposit-address":10/3,"private/export/create-export-request":10/3,"private/export/get-export-requests":10/3,"private/export/download-export-output":10/3,"private/get-account-summary":10/3,"private/create-order":2/3,"private/cancel-order":2/3,"private/cancel-all-orders":2/3,"private/create-order-list":10/3,"private/get-order-history":10/3,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/get-accounts":10/3,"private/get-subaccount-balances":10/3,"private/create-subaccount-transfer":10/3,"private/otc/get-otc-user":10/3,"private/otc/get-instruments":10/3,"private/otc/request-quote":100,"private/otc/accept-quote":100,"private/otc/get-quote-history":10/3,"private/otc/get-trade-history":10/3,"private/otc/create-order":10/3}}},derivatives:{public:{get:{"public/auth":10/3,"public/get-instruments":10/3,"public/get-book":1,"public/get-candlestick":1,"public/get-trades":1,"public/get-tickers":1,"public/get-valuations":1,"public/get-expired-settlement-price":10/3,"public/get-insurance":1}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/user-balance":10/3,"private/user-balance-history":10/3,"private/get-positions":10/3,"private/create-order":2/3,"private/create-order-list":10/3,"private/cancel-order":2/3,"private/cancel-order-list":10/3,"private/cancel-all-orders":2/3,"private/close-position":10/3,"private/convert-collateral":10/3,"private/get-order-history":100,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/change-account-leverage":10/3,"private/get-transactions":10/3,"private/create-subaccount-transfer":10/3,"private/get-subaccount-balances":10/3,"private/get-order-list":10/3}}}},fees:{trading:{maker:this.parseNumber("0.004"),taker:this.parseNumber("0.004"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("25000"),this.parseNumber("0.0035")],[this.parseNumber("50000"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.001")],[this.parseNumber("250000"),this.parseNumber("0.0009")],[this.parseNumber("1000000"),this.parseNumber("0.0008")],[this.parseNumber("20000000"),this.parseNumber("0.0007")],[this.parseNumber("100000000"),this.parseNumber("0.0006")],[this.parseNumber("200000000"),this.parseNumber("0.0004")]],taker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("25000"),this.parseNumber("0.0035")],[this.parseNumber("50000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0016")],[this.parseNumber("250000"),this.parseNumber("0.00015")],[this.parseNumber("1000000"),this.parseNumber("0.00014")],[this.parseNumber("20000000"),this.parseNumber("0.00013")],[this.parseNumber("100000000"),this.parseNumber("0.00012")],[this.parseNumber("200000000"),this.parseNumber("0.0001")]]}}},options:{defaultType:"spot",accountsById:{funding:"SPOT",spot:"SPOT",margin:"MARGIN",derivatives:"DERIVATIVES",swap:"DERIVATIVES",future:"DERIVATIVES"},networks:{BEP20:"BSC",ERC20:"ETH",TRC20:"TRON"},broker:"CCXT"},features:{default:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!0},triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,selfTradePrevention:!0,trailing:!1,iceberg:!1,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!0},createOrders:{max:10},fetchMyTrades:{marginMode:!1,limit:100,daysBack:void 0,untilDays:1},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:100,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:100,daysBack:void 0,untilDays:1,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:100,daysBack:void 0,daysBackCanceled:void 0,untilDays:1,trigger:!1,trailing:!1},fetchOHLCV:{limit:300}},spot:{extends:"default"},swap:{linear:{extends:"default"},inverse:{extends:"default"}},future:{linear:{extends:"default"},inverse:{extends:"default"}}},commonCurrencies:{USD_STABLE_COIN:"USDC"},precisionMode:d.kb,exceptions:{exact:{219:n.InvalidOrder,314:n.InvalidOrder,10001:n.ExchangeError,10002:n.PermissionDenied,10003:n.PermissionDenied,10004:n.BadRequest,10005:n.PermissionDenied,10006:n.DDoSProtection,10007:n.InvalidNonce,10008:n.BadRequest,10009:n.BadRequest,20001:n.BadRequest,20002:n.InsufficientFunds,20005:n.AccountNotEnabled,30003:n.BadSymbol,30004:n.BadRequest,30005:n.BadRequest,30006:n.InvalidOrder,30007:n.InvalidOrder,30008:n.InvalidOrder,30009:n.InvalidOrder,30010:n.BadRequest,30013:n.InvalidOrder,30014:n.InvalidOrder,30016:n.InvalidOrder,30017:n.InvalidOrder,30023:n.InvalidOrder,30024:n.InvalidOrder,30025:n.InvalidOrder,40001:n.BadRequest,40002:n.BadRequest,40003:n.BadRequest,40004:n.BadRequest,40005:n.BadRequest,40006:n.BadRequest,40007:n.BadRequest,40101:n.AuthenticationError,40102:n.InvalidNonce,40103:n.AuthenticationError,40104:n.AuthenticationError,40107:n.BadRequest,40401:n.OrderNotFound,40801:n.RequestTimeout,42901:n.RateLimitExceeded,43005:n.InvalidOrder,43003:n.InvalidOrder,43004:n.InvalidOrder,43012:n.BadRequest,50001:n.ExchangeError,9010001:n.OnMaintenance},broad:{}}})}async fetchMarkets(e={}){let t=await this.v1PublicGetPublicGetInstruments(e),i=this.safeDict(t,"result",{}),s=this.safeList(i,"data",[]),r=[];for(let e=0;e<s.length;e++){let t,i;let a=s[e],n=this.safeString(a,"inst_type"),o="CCY_PAIR"===n,h="PERPETUAL_SWAP"===n,d="FUTURE"===n,l="WARRANT"===n,c=this.safeString(a,"base_ccy"),u=this.safeString(a,"quote_ccy"),f=o?void 0:u,p=this.safeCurrencyCode(c),m=this.safeCurrencyCode(u),g=o?void 0:this.safeCurrencyCode(f),y=this.safeStringLower(a,"put_call"),v=this.safeString(a,"strike"),b=this.safeBool(a,"margin_buy_enabled"),w=this.safeBool(a,"margin_sell_enabled"),k=this.omitZero(this.safeString(a,"expiry_timestamp_ms")),S=void 0!==k?parseInt(k):void 0,O=p+"/"+m;if("CCY_PAIR"===n)t="spot",i=!1;else if("PERPETUAL_SWAP"===n)t="swap",O=O+":"+m,i=!0;else if("FUTURE"===n)t="future",O=O+":"+m+"-"+this.yymmdd(S),i=!0;else if("WARRANT"===n){t="option";let e="call"===y?"C":"P";O=O+":"+m+"-"+this.yymmdd(S)+"-"+v+"-"+e,i=!0}r.push({id:this.safeString(a,"symbol"),symbol:O,base:p,quote:m,settle:g,baseId:c,quoteId:u,settleId:f,type:t,spot:o,margin:b||w,swap:h,future:d,option:l,active:this.safeBool(a,"tradable"),contract:i,linear:!!i||void 0,inverse:!i&&void 0,contractSize:this.safeNumber(a,"contract_size"),expiry:S,expiryDatetime:this.iso8601(S),strike:this.parseNumber(v),optionType:y,precision:{price:this.parseNumber(this.safeString(a,"price_tick_size")),amount:this.parseNumber(this.safeString(a,"qty_tick_size"))},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(a,"max_leverage")},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:a})}return r}async fetchTickers(e,t={}){let i;await this.loadMarkets();let s={};if(void 0!==e){let t;if(Array.isArray(e)){if(e.length>1)throw new n.BadRequest(this.id+" fetchTickers() symbols argument cannot contain more than 1 symbol");t=e[0]}else t=e;i=this.market(t),s.instrument_name=i.id}let r=await this.v1PublicGetPublicGetTickers(this.extend(s,t)),a=this.safeDict(r,"result",{}),o=this.safeList(a,"data",[]);return this.parseTickers(o,e)}async fetchTicker(e,t={}){await this.loadMarkets(),e=this.symbol(e);let i=await this.fetchTickers([e],t);return this.safeValue(i,e)}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchOrders","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchOrders",e,t,i,s);let n={};void 0!==e&&(r=this.market(e),n.instrument_name=r.id),void 0!==t&&(n.start_time=t),void 0!==i&&(n.limit=i);let o=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==o&&(n.end_time=o);let h=await this.v1PrivatePostPrivateGetOrderHistory(this.extend(n,s)),d=this.safeDict(h,"result",{}),l=this.safeList(d,"data",[]);return this.parseOrders(l,r,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchTrades","paginate"),r)return await this.fetchPaginatedCallDynamic("fetchTrades",e,t,i,s);let a=this.market(e),n={instrument_name:a.id};void 0!==t&&(n.start_ts=t),void 0!==i&&(n.count=i);let o=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==o&&(n.end_ts=o);let h=await this.v1PublicGetPublicGetTrades(this.extend(n,s)),d=this.safeDict(h,"result",{}),l=this.safeList(d,"data",[]);return this.parseTrades(l,a,t,i)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate",!1),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,300);let n=this.market(e),o={instrument_name:n.id,timeframe:this.safeString(this.timeframes,t,t)};void 0!==s&&(s>300&&(s=300),o.count=s);let h=this.microseconds(),d=this.parseTimeframe(t),l=this.safeInteger(r,"until",h);r=this.omit(r,["until"]),void 0!==i?(o.start_ts=i-1e3*d,void 0!==s?o.end_ts=this.sum(i,d*s*1e3):o.end_ts=l):o.end_ts=l;let c=await this.v1PublicGetPublicGetCandlestick(this.extend(o,r)),u=this.safeDict(c,"result",{}),f=this.safeList(u,"data",[]);return this.parseOHLCVs(f,n,t,i,s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={instrument_name:this.market(e).id};t&&(s.depth=t);let r=await this.v1PublicGetPublicGetBook(this.extend(s,i)),a=this.safeDict(r,"result",{}),n=this.safeList(a,"data",[]),o=this.safeValue(n,0),h=this.safeInteger(o,"t");return this.parseOrderBook(o,e,h)}parseBalance(e){let t=this.safeDict(e,"result",{}),i=this.safeList(t,"data",[]),s=this.safeValue(i[0],"position_balances",[]),r={info:e};for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"instrument_name"),a=this.safeCurrencyCode(i),n=this.account();n.total=this.safeString(t,"quantity"),n.used=this.safeString(t,"reserved_qty"),r[a]=n}return this.safeBalance(r)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.v1PrivatePostPrivateUserBalance(e);return this.parseBalance(t)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=await this.v1PrivatePostPrivateGetOrderDetail(this.extend({order_id:e},i)),a=this.safeDict(r,"result",{});return this.parseOrder(a,s)}createOrderRequest(e,t,i,s,a,n={}){let o,h;let d=this.market(e),l=t.toUpperCase(),c={instrument_name:d.id,side:i.toUpperCase(),quantity:this.amountToPrecision(e,s)};("LIMIT"===l||"STOP_LIMIT"===l||"TAKE_PROFIT_LIMIT"===l)&&(c.price=this.priceToPrecision(e,a));let u=this.safeString(this.options,"broker","CCXT");c.broker_id=u,[o,n]=this.handleMarketTypeAndParams("createOrder",d,n),[h,n]=this.customHandleMarginModeAndParams("createOrder",n),"margin"===o||void 0!==h?c.spot_margin="MARGIN":"spot"===o&&(c.spot_margin="SPOT");let f=this.safeStringUpper2(n,"timeInForce","time_in_force");void 0!==f&&("GTC"===f?c.time_in_force="GOOD_TILL_CANCEL":"IOC"===f?c.time_in_force="IMMEDIATE_OR_CANCEL":"FOK"===f?c.time_in_force="FILL_OR_KILL":c.time_in_force=f),(this.safeBool(n,"postOnly",!1)||"PO"===f)&&(c.exec_inst=["POST_ONLY"],c.time_in_force="GOOD_TILL_CANCEL");let p=this.safeStringN(n,["stopPrice","triggerPrice","ref_price"]),m=this.safeNumber(n,"stopLossPrice"),g=this.safeNumber(n,"takeProfitPrice"),y=void 0!==m,v=void 0!==g;if(void 0!==p){c.ref_price=this.priceToPrecision(e,p);let t=this.numberToString(a);"LIMIT"===l||"STOP_LIMIT"===l||"TAKE_PROFIT_LIMIT"===l?"buy"===i?r.Y.stringLt(t,p)?c.type="TAKE_PROFIT_LIMIT":c.type="STOP_LIMIT":r.Y.stringLt(t,p)?c.type="STOP_LIMIT":c.type="TAKE_PROFIT_LIMIT":"buy"===i?r.Y.stringLt(t,p)?c.type="TAKE_PROFIT":c.type="STOP_LOSS":r.Y.stringLt(t,p)?c.type="STOP_LOSS":c.type="TAKE_PROFIT"}else y?("LIMIT"===l||"STOP_LIMIT"===l?c.type="STOP_LIMIT":c.type="STOP_LOSS",c.ref_price=this.priceToPrecision(e,m)):v?("LIMIT"===l||"TAKE_PROFIT_LIMIT"===l?c.type="TAKE_PROFIT_LIMIT":c.type="TAKE_PROFIT",c.ref_price=this.priceToPrecision(e,g)):c.type=l;return n=this.omit(n,["postOnly","clientOrderId","timeInForce","stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]),this.extend(c,n)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=this.createOrderRequest(e,t,i,s,r,a),h=await this.v1PrivatePostPrivateCreateOrder(o),d=this.safeDict(h,"result",{});return this.parseOrder(d,n)}async createOrders(e,t={}){await this.loadMarkets();let i=[];for(let t=0;t<e.length;t++){let s=e[t],r=this.safeString(s,"symbol"),a=this.safeString(s,"type"),n=this.safeString(s,"side"),o=this.safeValue(s,"amount"),h=this.safeValue(s,"price"),d=this.safeDict(s,"params",{}),l=this.createAdvancedOrderRequest(r,a,n,o,h,d);i.push(l)}let s=this.safeString(t,"contingency_type","LIST"),r=await this.v1PrivatePostPrivateCreateOrderList(this.extend({contingency_type:s,order_list:i},t)),a=this.safeValue(r,"result",[]),n=this.safeString(a,"list_id");return void 0!==n?this.parseOrders([{order_id:n}]):this.parseOrders(a)}createAdvancedOrderRequest(e,t,i,s,a,o={}){let h=this.market(e),d=t.toUpperCase(),l={instrument_name:h.id,side:i.toUpperCase()};("LIMIT"===d||"STOP_LIMIT"===d||"TAKE_PROFIT_LIMIT"===d)&&(l.price=this.priceToPrecision(e,a));let c=this.safeString(this.options,"broker","CCXT");l.broker_id=c;let u=this.safeStringUpper2(o,"timeInForce","time_in_force");void 0!==u&&("GTC"===u?l.time_in_force="GOOD_TILL_CANCEL":"IOC"===u?l.time_in_force="IMMEDIATE_OR_CANCEL":"FOK"===u?l.time_in_force="FILL_OR_KILL":l.time_in_force=u),(this.safeBool(o,"postOnly",!1)||"PO"===u)&&(l.exec_inst=["POST_ONLY"],l.time_in_force="GOOD_TILL_CANCEL");let f=this.safeStringN(o,["stopPrice","triggerPrice","ref_price"]),p=this.safeNumber(o,"stopLossPrice"),m=this.safeNumber(o,"takeProfitPrice");if(void 0!==f){let e=this.numberToString(a);"LIMIT"===d||"STOP_LIMIT"===d||"TAKE_PROFIT_LIMIT"===d?"buy"===i?r.Y.stringLt(e,f)?l.type="TAKE_PROFIT_LIMIT":l.type="STOP_LIMIT":r.Y.stringLt(e,f)?l.type="STOP_LIMIT":l.type="TAKE_PROFIT_LIMIT":"buy"===i?r.Y.stringLt(e,f)?l.type="TAKE_PROFIT":l.type="STOP_LOSS":r.Y.stringLt(e,f)?l.type="STOP_LOSS":l.type="TAKE_PROFIT"}else void 0!==p?"LIMIT"===d||"STOP_LIMIT"===d?l.type="STOP_LIMIT":l.type="STOP_LOSS":void 0!==m?"LIMIT"===d||"TAKE_PROFIT_LIMIT"===d?l.type="TAKE_PROFIT_LIMIT":l.type="TAKE_PROFIT":l.type=d;if("buy"===i&&("MARKET"===d||"STOP_LOSS"===d||"TAKE_PROFIT"===d)){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let h=this.safeNumber2(o,"cost","notional");if(o=this.omit(o,"cost"),void 0!==h)t=this.costToPrecision(e,h);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);l.notional=t}else l.quantity=this.amountToPrecision(e,s);return o=this.omit(o,["postOnly","clientOrderId","timeInForce","stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]),this.extend(l,o)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};return void 0!==e&&(i=this.market(e),s.instrument_name=i.id),await this.v1PrivatePostPrivateCancelAllOrders(this.extend(s,t))}async cancelOrder(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=await this.v1PrivatePostPrivateCancelOrder(this.extend({order_id:e},i)),a=this.safeDict(r,"result",{});return this.parseOrder(a,s)}async cancelOrders(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r=[];for(let t=0;t<e.length;t++){let i=e[t],a={instrument_name:s.id,order_id:i.toString()};r.push(a)}let a=await this.v1PrivatePostPrivateCancelOrderList(this.extend({contingency_type:"LIST",order_list:r},i)),o=this.safeList(a,"result",[]);return this.parseOrders(o,s,void 0,void 0,i)}async cancelOrdersForSymbols(e,t={}){await this.loadMarkets();let i=[];for(let t=0;t<e.length;t++){let s=e[t],r=this.safeString(s,"id"),a=this.safeString(s,"symbol"),n={instrument_name:this.market(a).id,order_id:r.toString()};i.push(n)}let s=await this.v1PrivatePostPrivateCancelOrderList(this.extend({contingency_type:"LIST",order_list:i},t)),r=this.safeList(s,"result",[]);return this.parseOrders(r,void 0,void 0,void 0,t)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.instrument_name=r.id);let n=await this.v1PrivatePostPrivateGetOpenOrders(this.extend(a,s)),o=this.safeDict(n,"result",{}),h=this.safeList(o,"data",[]);return this.parseOrders(h,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s,100);let n={};void 0!==e&&(r=this.market(e),n.instrument_name=r.id),void 0!==t&&(n.start_time=t),void 0!==i&&(n.limit=i);let o=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==o&&(n.end_time=o);let h=await this.v1PrivatePostPrivateGetTrades(this.extend(n,s)),d=this.safeDict(h,"result",{}),l=this.safeList(d,"data",[]);return this.parseTrades(l,r,t,i)}parseAddress(e){let t,i,s;return e.indexOf("?")>0?([t,s]=e.split("?"),i=s.split("=")[1]):t=e,[t,i]}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let n=this.safeCurrency(e),o={currency:n.id,amount:t,address:i};void 0!==s&&(o.address_tag=s),[a,r]=this.handleNetworkCodeAndParams(r);let h=this.networkCodeToId(a);void 0!==h&&(o.network_id=h);let d=await this.v1PrivatePostPrivateCreateWithdrawal(this.extend(o,r)),l=this.safeDict(d,"result");return this.parseTransaction(l,n)}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();let i={currency:this.safeCurrency(e).id},s=await this.v1PrivatePostPrivateGetDepositAddress(this.extend(i,t)),r=this.safeDict(s,"result",{}),a=this.safeList(r,"deposit_address_list",[]),o=a.length;if(0===o)throw new n.ExchangeError(this.id+" fetchDepositAddressesByNetwork() generating address...");let h={};for(let e=0;e<o;e++){let t=this.safeDict(a,e),i=this.safeString(t,"address"),s=this.safeString(t,"currency"),r=this.safeCurrencyCode(s),[n,o]=this.parseAddress(i);this.checkAddress(n);let d=this.safeString(t,"network"),l=this.networkIdToCode(d,r);h[l]={info:t,currency:r,network:l,address:n,tag:o}}return h}async fetchDepositAddress(e,t={}){let i=this.safeStringUpper(t,"network");t=this.omit(t,["network"]);let s=await this.fetchDepositAddressesByNetwork(e,t);if(i in s)return s[i];{let e=Object.keys(s);return s[e[0]]}}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.safeCurrency(e),a.currency=r.id),void 0!==t&&(a.start_ts=t),void 0!==i&&(a.page_size=i);let n=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==n&&(a.end_ts=n);let o=await this.v1PrivatePostPrivateGetDepositHistory(this.extend(a,s)),h=this.safeDict(o,"result",{}),d=this.safeList(h,"deposit_list",[]);return this.parseTransactions(d,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.safeCurrency(e),a.currency=r.id),void 0!==t&&(a.start_ts=t),void 0!==i&&(a.page_size=i);let n=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==n&&(a.end_ts=n);let o=await this.v1PrivatePostPrivateGetWithdrawalHistory(this.extend(a,s)),h=this.safeDict(o,"result",{}),d=this.safeList(h,"withdrawal_list",[]);return this.parseTransactions(d,r,t,i)}parseTicker(e,t){let i=this.safeInteger(e,"t"),s=this.safeString(e,"i");t=this.safeMarket(s,t,"_");let r=this.safeString(t,"quote"),a=this.safeString(e,"a");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeNumber(e,"h"),low:this.safeNumber(e,"l"),bid:this.safeNumber(e,"b"),bidVolume:void 0,ask:this.safeNumber(e,"k"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString(e,"c"),average:void 0,baseVolume:this.safeString(e,"v"),quoteVolume:"USD"===r?this.safeString(e,"vv"):void 0,info:e},t)}parseTrade(e,t){let i=this.safeInteger2(e,"t","create_time"),s=this.safeString2(e,"i","instrument_name");t=this.safeMarket(s,t,"_");let a=this.safeString(e,"fee_instrument_name"),n=this.safeString(e,"fees");return this.safeTrade({info:e,id:this.safeString2(e,"d","trade_id"),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:this.safeString(e,"order_id"),side:this.safeStringLower2(e,"s","side"),takerOrMaker:this.safeStringLower(e,"taker_side"),price:this.safeNumber2(e,"p","traded_price"),amount:this.safeNumber2(e,"q","traded_quantity"),cost:void 0,type:void 0,fee:{currency:this.safeCurrencyCode(a),cost:this.parseNumber(r.Y.stringNeg(n))}},t)}parseOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}parseOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled",FILLED:"closed",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseTimeInForce(e){return this.safeString({GOOD_TILL_CANCEL:"GTC",IMMEDIATE_OR_CANCEL:"IOC",FILL_OR_KILL:"FOK"},e,e)}parseOrder(e,t){let i;let s=this.safeInteger(e,"code");if(void 0!==s&&0!==s)return this.safeOrder({id:this.safeString(e,"order_id"),clientOrderId:this.safeString(e,"client_oid"),info:e,status:"rejected"});let r=this.safeInteger(e,"create_time"),a=this.safeString(e,"instrument_name"),n=this.safeSymbol(a,t),o=this.safeValue(e,"exec_inst");if(void 0!==o){i=!1;for(let e=0;e<o.length;e++)if("POST_ONLY"===o[e]){i=!0;break}}let h=this.safeString(e,"fee_instrument_name");return this.safeOrder({info:e,id:this.safeString(e,"order_id"),clientOrderId:this.safeString(e,"client_oid"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:this.safeInteger(e,"update_time"),status:this.parseOrderStatus(this.safeString(e,"status")),symbol:n,type:this.safeStringLower(e,"order_type"),timeInForce:this.parseTimeInForce(this.safeString(e,"time_in_force")),postOnly:i,side:this.safeStringLower(e,"side"),price:this.safeNumber(e,"limit_price"),amount:this.safeNumber(e,"quantity"),filled:this.safeNumber(e,"cumulative_quantity"),remaining:void 0,average:this.safeNumber(e,"avg_price"),cost:this.safeNumber(e,"cumulative_value"),fee:{currency:this.safeCurrencyCode(h),cost:this.safeNumber(e,"cumulative_fee")},trades:[]},t)}parseDepositStatus(e){return this.safeString({0:"pending",1:"ok",2:"failed",3:"pending"},e,e)}parseWithdrawalStatus(e){return this.safeString({0:"pending",1:"pending",2:"failed",3:"pending",4:"failed",5:"ok",6:"canceled"},e,e)}parseTransaction(e,t){let i,s,r;let a=this.safeString(e,"status");"client_wid"in e?(i="withdrawal",s=this.parseWithdrawalStatus(a)):(i="deposit",s=this.parseDepositStatus(a));let n=this.safeString(e,"address"),[o,h]=this.parseAddress(n),d=this.safeString(e,"currency"),l=this.safeCurrencyCode(d,t),c=this.safeInteger(e,"create_time"),u=this.safeNumber(e,"fee");return void 0!==u&&(r={currency:l,cost:u}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"txid"),timestamp:c,datetime:this.iso8601(c),network:void 0,address:o,addressTo:o,addressFrom:void 0,tag:h,tagTo:h,tagFrom:void 0,type:i,amount:this.safeNumber(e,"amount"),currency:l,status:s,updated:this.safeInteger(e,"update_time"),internal:void 0,comment:this.safeString(e,"client_wid"),fee:r}}customHandleMarginModeAndParams(e,t={}){let i;let s=this.safeString(this.options,"defaultType"),r=this.safeBool(t,"margin",!1);if(t=this.omit(t,"margin"),[i,t]=this.handleMarginModeAndParams(e,t),void 0!==i){if("cross"!==i)throw new n.NotSupported(this.id+" only cross margin is supported")}else("margin"===s||!0===r)&&(i="cross");return[i,t]}parseDepositWithdrawFee(e,t){let i=this.safeList(e,"network_list",[]),s=i.length,r={info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}};if(void 0!==i)for(let e=0;e<s;e++){let a=i[e],n=this.safeString(a,"network_id"),o=this.safeString(t,"code"),h=this.networkIdToCode(n,o);r.networks[h]={deposit:{fee:void 0,percentage:void 0},withdraw:{fee:this.safeNumber(a,"withdrawal_fee"),percentage:!1}},1===s&&(r.withdraw.fee=this.safeNumber(a,"withdrawal_fee"),r.withdraw.percentage=!1)}return r}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.v1PrivatePostPrivateGetCurrencyNetworks(t),s=this.safeValue(i,"result"),r=this.safeList(s,"currency_map");return this.parseDepositWithdrawFees(r,e,"full_name")}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.safeCurrency(e)),void 0!==t&&(a.start_time=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==n&&(a.end_time=n);let o=await this.v1PrivatePostPrivateGetTransactions(this.extend(a,s)),h=this.safeDict(o,"result",{}),d=this.safeList(h,"data",[]);return this.parseLedger(d,r,t,i)}parseLedgerEntry(e,t){let i;let s=this.safeInteger(e,"event_timestamp_ms"),a=this.safeString(e,"instrument_name"),n=this.safeCurrencyCode(a,t);t=this.safeCurrency(a,t);let o=this.safeString(e,"transaction_qty");return r.Y.stringLt(o,"0")?(i="out",o=r.Y.stringAbs(o)):i="in",this.safeLedgerEntry({info:e,id:this.safeString(e,"order_id"),direction:i,account:this.safeString(e,"account_id"),referenceId:this.safeString(e,"trade_id"),referenceAccount:this.safeString(e,"trade_match_id"),type:this.parseLedgerEntryType(this.safeString(e,"journal_type")),currency:n,amount:this.parseNumber(o),timestamp:s,datetime:this.iso8601(s),before:void 0,after:void 0,status:void 0,fee:{currency:void 0,cost:void 0}},t)}parseLedgerEntryType(e){return this.safeString({TRADING:"trade",TRADE_FEE:"fee",WITHDRAW_FEE:"fee",WITHDRAW:"withdrawal",DEPOSIT:"deposit",ROLLBACK_WITHDRAW:"rollback",ROLLBACK_DEPOSIT:"rollback",FUNDING:"fee",REALIZED_PNL:"trade",INSURANCE_FUND:"insurance",SOCIALIZED_LOSS:"trade",LIQUIDATION_FEE:"fee",SESSION_RESET:"reset",ADJUSTMENT:"adjustment",SESSION_SETTLE:"settlement",UNCOVERED_LOSS:"trade",ADMIN_ADJUSTMENT:"adjustment",DELIST:"delist",SETTLEMENT_FEE:"fee",AUTO_CONVERSION:"conversion",MANUAL_CONVERSION:"conversion"},e,e)}async fetchAccounts(e={}){await this.loadMarkets();let t=await this.v1PrivatePostPrivateGetAccounts(e),i=this.safeDict(t,"result",{}),s=this.safeDict(i,"master_account",{}),r=this.safeList(i,"sub_account_list",[]);return r.push(s),this.parseAccounts(r,e)}parseAccount(e){return{id:this.safeString(e,"uuid"),type:this.safeString(e,"label"),code:void 0,info:e}}async fetchSettlementHistory(e,t,i,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(r=this.market(e)),[a,s]=this.handleMarketTypeAndParams("fetchSettlementHistory",r,s),this.checkRequiredArgument("fetchSettlementHistory",a,"type",["future","option","WARRANT","FUTURE"]),"option"===a&&(a="WARRANT");let n={instrument_type:a.toUpperCase()},o=await this.v1PublicGetPublicGetExpiredSettlementPrice(this.extend(n,s)),h=this.safeDict(o,"result",{}),d=this.safeList(h,"data",[]),l=this.parseSettlements(d,r),c=this.sortBy(l,"timestamp");return this.filterBySymbolSinceLimit(c,e,t,i)}parseSettlement(e,t){let i=this.safeInteger(e,"x"),s=this.safeString(e,"i");return{info:e,symbol:this.safeSymbol(s,t),price:this.safeNumber(e,"v"),timestamp:i,datetime:this.iso8601(i)}}parseSettlements(e,t){let i=[];for(let s=0;s<e.length;s++)i.push(this.parseSettlement(e[s],t));return i}async fetchFundingRateHistory(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","paginate"),r)return await this.fetchPaginatedCallDeterministic("fetchFundingRateHistory",e,t,i,"8h",s);let a=this.market(e);if(!a.swap)throw new n.BadSymbol(this.id+" fetchFundingRateHistory() supports swap contracts only");let o={instrument_name:a.id,valuation_type:"funding_hist"};void 0!==t&&(o.start_ts=t),void 0!==i&&(o.count=i);let h=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==h&&(o.end_ts=h);let d=await this.v1PublicGetPublicGetValuations(this.extend(o,s)),l=this.safeDict(d,"result",{}),c=this.safeList(l,"data",[]),u=this.safeString(l,"instrument_name"),f=[];for(let e=0;e<c.length;e++){let t=c[e],i=this.safeInteger(t,"t");f.push({info:t,symbol:this.safeSymbol(u,a),fundingRate:this.safeNumber(t,"v"),timestamp:i,datetime:this.iso8601(i)})}let p=this.sortBy(f,"timestamp");return this.filterBySymbolSinceLimit(p,a.symbol,t,i)}async fetchPosition(e,t={}){await this.loadMarkets();let i=this.market(e),s={instrument_name:i.id},r=await this.v1PrivatePostPrivateGetPositions(this.extend(s,t)),a=this.safeDict(r,"result",{}),n=this.safeList(a,"data",[]);return this.parsePosition(this.safeDict(n,0),i)}async fetchPositions(e,t={}){let i;await this.loadMarkets();let s={};if(void 0!==(e=this.marketSymbols(e))){let t;if(Array.isArray(e)){if(e.length>1)throw new n.BadRequest(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");t=e[0]}else t=e;i=this.market(t),s.instrument_name=i.id}let r=await this.v1PrivatePostPrivateGetPositions(this.extend(s,t)),a=this.safeDict(r,"result",{}),o=this.safeList(a,"data",[]),h=[];for(let e=0;e<o.length;e++){let t=o[e],i=this.safeString(t,"instrument_name"),s=this.safeMarket(i,void 0,void 0,"contract");h.push(this.parsePosition(t,s))}return this.filterByArrayPositions(h,"symbol",void 0,!1)}parsePosition(e,t){let i=this.safeString(e,"instrument_name");t=this.safeMarket(i,t,void 0,"contract");let s=this.safeSymbol(i,t,void 0,"contract"),a=this.safeInteger(e,"update_timestamp_ms"),n=this.safeString(e,"quantity");return this.safePosition({info:e,id:void 0,symbol:s,timestamp:a,datetime:this.iso8601(a),hedged:void 0,side:r.Y.stringGt(n,"0")?"buy":"sell",contracts:r.Y.stringAbs(n),contractSize:t.contractSize,entryPrice:void 0,markPrice:void 0,notional:void 0,leverage:void 0,collateral:this.safeNumber(e,"open_pos_cost"),initialMargin:this.safeNumber(e,"cost"),maintenanceMargin:void 0,initialMarginPercentage:void 0,maintenanceMarginPercentage:void 0,unrealizedPnl:this.safeNumber(e,"open_position_pnl"),liquidationPrice:void 0,marginMode:void 0,percentage:void 0,marginRatio:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}nonce(){return this.milliseconds()}paramsToString(e,t){let i;if(t>=3)return e.toString();if("string"==typeof e)return e;let s="";i=Array.isArray(e)?e:Object.keys(this.keysort(e));for(let r=0;r<i.length;r++){let a=i[r];s+=a;let n=e[a];if("undefined"===n)s+="null";else if(Array.isArray(n))for(let e=0;e<n.length;e++)s+=this.paramsToString(n[e],t+1);else s+=n.toString()}return s}async closePosition(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={instrument_name:s.id,type:"MARKET"},a=this.safeStringUpper(i,"type"),n=this.safeString(i,"price");void 0!==a&&(r.type=a),void 0!==n&&(r.price=this.priceToPrecision(s.symbol,n));let o=await this.v1PrivatePostPrivateClosePosition(this.extend(r,i)),h=this.safeDict(o,"result");return this.parseOrder(h,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={instrument_name:i.id},r=await this.v1PrivatePostPrivateGetInstrumentFeeRate(this.extend(s,t)),a=this.safeDict(r,"result",{});return this.parseTradingFee(a,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.v1PrivatePostPrivateGetFeeRate(e),i=this.safeDict(t,"result",{});return this.parseTradingFees(i)}parseTradingFees(e){let t={};t.info=e;for(let i=0;i<this.symbols.length;i++){let s=this.symbols[i],a=this.market(s).swap,n=a?"effective_deriv_taker_rate_bps":"effective_spot_taker_rate_bps",o=a?"effective_deriv_maker_rate_bps":"effective_spot_maker_rate_bps",h={info:e,symbol:s,maker:this.parseNumber(r.Y.stringDiv(this.safeString(e,o),"10000")),taker:this.parseNumber(r.Y.stringDiv(this.safeString(e,n),"10000")),percentage:void 0,tierBased:void 0};t[s]=h}return t}parseTradingFee(e,t){let i=this.safeString(e,"instrument_name");return{info:e,symbol:this.safeSymbol(i,t),maker:this.parseNumber(r.Y.stringDiv(this.safeString(e,"effective_maker_rate_bps"),"10000")),taker:this.parseNumber(r.Y.stringDiv(this.safeString(e,"effective_taker_rate_bps"),"10000")),percentage:void 0,tierBased:void 0}}sign(e,t="public",i="GET",s={},r,a){let n=this.safeString(t,0),o=this.safeString(t,1),h=this.urls.api[n]+"/"+e,d=this.omit(s,this.extractParams(e));if("public"===o)Object.keys(d).length&&(h+="?"+this.urlencode(d));else{this.checkRequiredCredentials();let t=this.nonce().toString(),i=this.extend({},s),n=Object.keys(i),o=this.paramsToString(i,0),h=e+t+this.apiKey+o+t,d=this.hmac(this.encode(h),this.encode(this.secret),l.s),c=n.length;a=this.json({id:t,method:e,params:s,api_key:this.apiKey,sig:d,nonce:t}),0===c&&(a=a.replace("[]","{}")),r={"Content-Type":"application/json"}}return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){let l=this.safeString(o,"code");if("0"!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),new n.ExchangeError(this.id+" "+a)}}}class tb extends s.k{}let tw=tb;class tk extends tw{describe(){return this.deepExtend(super.describe(),{id:"currencycom",name:"Currency.com",countries:["BY"],rateLimit:100,certified:!1,pro:!0,version:"v2",has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:!0,createMarketOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:"emulated",fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRateHistory:void 0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:void 0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL2OrderBook:!0,fetchLedger:!0,fetchLedgerEntry:!1,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:void 0,fetchOrderTrades:void 0,fetchPosition:void 0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:"emulated",fetchTransfers:void 0,fetchWithdrawal:void 0,fetchWithdrawals:!0,reduceMargin:void 0,sandbox:!0,setLeverage:void 0,setMarginMode:void 0,setPositionMode:void 0,signIn:void 0,transfer:void 0,withdraw:void 0},timeframes:{"1m":"1m","5m":"5m","10m":"10m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","1d":"1d","1w":"1w"},hostname:"backend.currency.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg",api:{public:"https://api-adapter.{hostname}/api",private:"https://api-adapter.{hostname}/api",marketcap:"https://marketcap.{hostname}/api"},test:{public:"https://demo-api-adapter.{hostname}/api",private:"https://demo-api-adapter.{hostname}/api"},www:"https://www.currency.com",referral:"https://currency.com/trading/signup?c=362jaimv&pid=referral",doc:["https://currency.com/api"],fees:"https://currency.com/fees-charges"},api:{public:{get:{"v1/time":1,"v1/exchangeInfo":1,"v1/depth":1,"v1/aggTrades":1,"v1/klines":1,"v1/ticker/24hr":1,"v2/time":1,"v2/exchangeInfo":1,"v2/depth":1,"v2/aggTrades":1,"v2/klines":1,"v2/ticker/24hr":1}},marketcap:{get:{"v1/assets":1,"v1/candles":1,"v1/orderbook":1,"v1/summary":1,"v1/ticker":1,"v1/token/assets":1,"v1/token/orderbook":1,"v1/token/summary":1,"v1/token/ticker":1,"v1/token/trades":1,"v1/token_crypto/OHLC":1,"v1/token_crypto/assets":1,"v1/token_crypto/orderbook":1,"v1/token_crypto/summary":1,"v1/token_crypto/ticker":1,"v1/token_crypto/trades":1,"v1/trades":1}},private:{get:{"v1/account":1,"v1/currencies":1,"v1/deposits":1,"v1/depositAddress":1,"v1/ledger":1,"v1/leverageSettings":1,"v1/myTrades":1,"v1/openOrders":1,"v1/tradingPositions":1,"v1/tradingPositionsHistory":1,"v1/transactions":1,"v1/withdrawals":1,"v2/account":1,"v2/currencies":1,"v2/deposits":1,"v2/depositAddress":1,"v2/ledger":1,"v2/leverageSettings":1,"v2/myTrades":1,"v2/openOrders":1,"v2/tradingPositions":1,"v2/tradingPositionsHistory":1,"v2/transactions":1,"v2/withdrawals":1,"v2/fetchOrder":1},post:{"v1/order":1,"v1/updateTradingPosition":1,"v1/updateTradingOrder":1,"v1/closeTradingPosition":1,"v2/order":1,"v2/updateTradingPosition":1,"v2/updateTradingOrder":1,"v2/closeTradingPosition":1},delete:{"v1/order":1,"v2/order":1}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},precisionMode:d.kb,options:{defaultTimeInForce:"GTC",warnOnFetchOpenOrdersWithoutSymbol:!0,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,parseOrderToPrecision:!1,newOrderRespType:{market:"FULL",limit:"RESULT",stop:"RESULT"},leverage_markets_suffix:"_LEVERAGE",collateralCurrencies:["USD","EUR","USDT"]},features:{default:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:{triggerPriceType:void 0,price:!1},timeInForce:{IOC:!0,FOK:!0,PO:!1,GTD:!0},hedged:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1,leverage:!0,marketBuyByCost:!1,marketBuyRequiresPrice:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:500,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:100,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:1e3}},spot:{extends:"default"},swap:{linear:{extends:"default"},inverse:{extends:"default"}},future:{linear:{extends:"default"},inverse:{extends:"default"}}},exceptions:{broad:{"FIELD_VALIDATION_ERROR Cancel is available only for LIMIT order":n.InvalidOrder,"API key does not exist":n.AuthenticationError,"Order would trigger immediately.":n.InvalidOrder,"Account has insufficient balance for requested action.":n.InsufficientFunds,"Rest API trading is not enabled.":n.ExchangeNotAvailable,"Combination of parameters invalid":n.BadRequest,"Invalid limit price":n.BadRequest,"Only leverage symbol allowed here:":n.BadSymbol,"market data service is not available":n.ExchangeNotAvailable,"your time is ahead of server":n.InvalidNonce,"Can not find account":n.BadRequest,"You mentioned an invalid value for the price parameter":n.BadRequest},exact:{"-1000":n.ExchangeNotAvailable,"-1013":n.InvalidOrder,"-1022":n.AuthenticationError,"-1030":n.InvalidOrder,"-1100":n.InvalidOrder,"-1104":n.ExchangeError,"-1025":n.AuthenticationError,"-1128":n.BadRequest,"-2010":n.ExchangeError,"-2011":n.OrderNotFound,"-2013":n.OrderNotFound,"-2014":n.AuthenticationError,"-2015":n.AuthenticationError}},commonCurrencies:{ACN:"Accenture",AMC:"AMC Entertainment Holdings",BNS:"Bank of Nova Scotia",CAR:"Avis Budget Group Inc",CLR:"Continental Resources",EDU:"New Oriental Education & Technology Group Inc",ETN:"Eaton",FOX:"Fox Corporation",GM:"General Motors Co",IQ:"iQIYI",OSK:"Oshkosh",PLAY:"Dave & Buster's Entertainment"}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){let t=await this.publicGetV2Time(e);return this.safeInteger(t,"serverTime")}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;let t=await this.privateGetV2Currencies(e),i={};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"displaySymbol"),a=this.safeCurrencyCode(r),n=this.safeNumber(s,"commissionFixed");i[a]={id:r,code:a,type:this.safeStringLower(s,"type"),name:this.safeString(s,"name"),active:void 0,deposit:void 0,withdraw:void 0,fee:n,precision:this.parseNumber(this.parsePrecision(this.safeString(s,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(s,"minWithdrawal"),max:this.safeNumber(s,"maxWithdrawal")},deposit:{min:this.safeNumber(s,"minDeposit"),max:void 0}},info:s}}return i}async fetchMarkets(e={}){let t=await this.publicGetV2ExchangeInfo(e);this.options.adjustForTimeDifference&&await this.loadTimeDifference();let i=this.safeValue(t,"symbols",[]),s=[];for(let e=0;e<i.length;e++){let t,a,n;let o=i[e],h=this.safeString(o,"symbol"),d=this.safeString(o,"baseAsset"),l=this.safeString(o,"quoteAsset"),c=this.safeCurrencyCode(d),u=this.safeCurrencyCode(l),f=c+"/"+u,p=this.safeString(o,"marketType"),m="SPOT"===p,g="LEVERAGE"===p,y=g?"swap":"spot",v=void 0;g&&(f=f.replace(this.options.leverage_markets_suffix,"")+":"+u);let b="TRADING"===this.safeString(o,"status"),w=this.safeString2(o,"exchangeFee","tradingFee"),k=this.safeString(o,"makerFee",w),S=this.safeString(o,"takerFee",w);k=r.Y.stringDiv(k,"100"),S=r.Y.stringDiv(S,"100");let O=this.safeValue(o,"filters",[]),T=this.indexBy(O,"filterType"),I=this.safeNumber(o,"tickSize");if("PRICE_FILTER"in T){let e=this.safeValue(T,"PRICE_FILTER",{});I=this.safeNumber(e,"tickSize"),t=this.safeNumber(e,"minPrice");let i=this.safeString(e,"maxPrice");void 0!==i&&r.Y.stringGt(i,"0")&&(a=i)}let x=this.parseNumber(this.parsePrecision(this.safeString(o,"baseAssetPrecision"))),P={min:void 0,max:void 0};if("LOT_SIZE"in T){let e=this.safeValue(T,"LOT_SIZE",{});x=this.safeNumber(e,"stepSize"),P={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}let M={min:void 0,max:void 0};if("MARKET_LOT_SIZE"in T){let e=this.safeValue(T,"MARKET_LOT_SIZE",{});M={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in T){let e=this.safeValue(T,"MIN_NOTIONAL",{});n=this.safeNumber(e,"minNotional")}let A=g||!1;s.push({id:h,symbol:f,base:c,quote:u,settle:void 0,baseId:d,quoteId:l,settleId:void 0,type:y,spot:m,margin:v,swap:g,future:!1,option:!1,active:b,contract:A,linear:!!A||void 0,inverse:void 0,taker:this.parseNumber(S),maker:this.parseNumber(k),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:x,price:I},limits:{leverage:{min:void 0,max:void 0},amount:P,market:M,price:{min:t,max:this.parseNumber(a)},cost:{min:n,max:void 0}},created:void 0,info:o})}return s}async fetchAccounts(e={}){let t=await this.privateGetV2Account(e),i=this.safeValue(t,"balances",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"accountId"),a=this.safeString(t,"asset"),n=this.safeCurrencyCode(a);s.push({id:r,type:void 0,currency:n,info:t})}return s}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetV2Account(e),i=this.safeNumber(t,"makerCommission"),s=this.safeNumber(t,"takerCommission"),r={};for(let e=0;e<this.symbols.length;e++){let a=this.symbols[e];r[a]={info:t,symbol:a,maker:i,taker:s,percentage:!0,tierBased:!1}}return r}parseBalance(e,t){let i={info:e},s=this.safeValue(e,"balances",[]);for(let e=0;e<s.length;e++){let t=s[e],r=this.safeString(t,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"free"),n.used=this.safeString(t,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetV2Account(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.publicGetV2Depth(this.extend(s,i)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}parseTicker(e,t){let i=this.safeInteger2(e,"closeTime","timestamp"),s=this.safeString2(e,"symbol","symbolName");t=this.safeMarket(s,t,"/");let r=this.safeString(e,"lastPrice");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString2(e,"bidPrice","bid"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString2(e,"askPrice","ofr"),askVolume:this.safeString(e,"ofrQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:r,last:r,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetV2Ticker24hr(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetV2Ticker24hr(t);return this.parseTickers(i,e)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={symbol:a.id,interval:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.startTime=i),void 0!==s&&(n.limit=Math.min(s,1e3));let o=await this.publicGetV2Klines(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}parseTrade(e,t){let i,s,r;let a=this.safeInteger2(e,"T","time"),n=this.safeString2(e,"p","price"),o=this.safeString2(e,"q","qty"),h=this.safeString2(e,"a","id"),d=this.safeString(e,"orderId");"m"in e?(i=e.m?"sell":"buy",s="taker"):"isBuyer"in e&&(i=e.isBuyer?"buy":"sell",s=e.isMaker?"maker":"taker"),"commission"in e&&(r={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))});let l=this.safeString(e,"symbol"),c=this.safeSymbol(l,t);return this.safeTrade({id:h,order:d,timestamp:a,datetime:this.iso8601(a),symbol:c,type:void 0,takerOrMaker:s,side:i,price:n,amount:o,cost:void 0,fee:r,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=Math.min(i,1e3)),void 0!==t&&(a.startTime=t);let n=await this.publicGetV2AggTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseOrder(e,t){let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,"/"),a=this.safeString(e,"orderId"),n=this.safeString(e,"price"),o=this.safeString2(e,"origQty","quantity"),h=this.safeString(e,"executedQty"),d=r.Y.stringAbs(h),l=this.parseOrderStatus(this.safeString(e,"status")),c=this.parseOrderTimeInForce(this.safeString2(e,"timeInForce","timeInForceType")),u=this.parseOrderType(this.safeString(e,"type")),f=this.parseOrderSide(this.safeString(e,"side")),p=this.safeIntegerN(e,["time","transactTime","timestamp"]),m=this.safeValue(e,"fills");return this.safeOrder({info:e,id:a,timestamp:p,datetime:this.iso8601(p),lastTradeTimestamp:void 0,symbol:s,type:u,timeInForce:c,side:f,price:n,triggerPrice:void 0,amount:o,cost:void 0,average:void 0,filled:d,remaining:void 0,status:l,fee:void 0,trades:m},t)}parseOrderStatus(e){return this.safeString({NEW:"open",CREATED:"open",MODIFIED:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",STOP:"stop"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",FOK:"FOK",IOC:"IOC"},e,e)}parseOrderSide(e){return this.safeString({BUY:"buy",SELL:"sell"},e,e)}async createOrder(e,t,i,s,r,a={}){let o;await this.loadMarkets();let h=this.market(e);if(h.margin&&(o=this.safeString(this.options,"accountId"),void 0===(o=this.safeString(a,"accountId",o))))throw new n.ArgumentsRequired(this.id+" createOrder() requires an accountId parameter or an exchange.options['accountId'] option for "+h.type+" markets");let d=this.safeValue(this.options.newOrderRespType,t,"RESULT"),l={symbol:h.id,quantity:this.amountToPrecision(e,s),type:t.toUpperCase(),side:i.toUpperCase(),newOrderRespType:d};if("limit"===t)l.price=this.priceToPrecision(e,r),l.timeInForce=this.options.defaultTimeInForce;else if("stop"===t)l.type="STOP",l.price=this.priceToPrecision(e,r);else if("market"===t){let t=this.safeValue2(a,"triggerPrice","stopPrice");a=this.omit(a,["triggerPrice","stopPrice"]),void 0!==t&&(l.type="STOP",l.price=this.priceToPrecision(e,t))}let c=await this.privatePostV2Order(this.extend(l,a));return this.parseOrder(c,h)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s={orderId:e,symbol:this.market(t).id},r=await this.privateGetV2FetchOrder(this.extend(s,i));return this.parseOrder(r)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};if(void 0!==e)r=this.market(e),a.symbol=r.id;else if(this.options.warnOnFetchOpenOrdersWithoutSymbol){let e=this.symbols.length,t=this.parseToInt(e/2);throw new n.ExchangeError(this.id+" fetchOpenOrders() WARNING: fetching open orders without specifying a symbol is rate-limited to one call per "+t.toString()+" seconds. Do not call this method frequently to avoid ban. Set "+this.id+'.options["warnOnFetchOpenOrdersWithoutSymbol"] = false to suppress this warning message.')}let o=await this.privateGetV2OpenOrders(this.extend(a,s));return this.parseOrders(o,r,t,i,s)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r=this.safeValue(i,"origClientOrderId"),a={symbol:s.id};void 0===r?a.orderId=e:a.origClientOrderId=r;let o=await this.privateDeleteV2Order(this.extend(a,i));return this.parseOrder(o,s)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i);let o=await this.privateGetV2MyTrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchDeposits(e,t,i,s={}){return await this.fetchTransactionsByMethod("privateGetV2Deposits",e,t,i,s)}async fetchWithdrawals(e,t,i,s={}){return await this.fetchTransactionsByMethod("privateGetV2Withdrawals",e,t,i,s)}async fetchDepositsWithdrawals(e,t,i,s={}){return await this.fetchTransactionsByMethod("privateGetV2Transactions",e,t,i,s)}async fetchTransactionsByMethod(e,t,i,s,r={}){let a,o;await this.loadMarkets();let h={};if(void 0!==t&&(a=this.currency(t)),void 0!==i&&(h.startTime=i),void 0!==s&&(h.limit=s),"privateGetV2Deposits"===e)o=await this.privateGetV2Deposits(this.extend(h,r));else if("privateGetV2Withdrawals"===e)o=await this.privateGetV2Withdrawals(this.extend(h,r));else if("privateGetV2Transactions"===e)o=await this.privateGetV2Transactions(this.extend(h,r));else throw new n.NotSupported(this.id+" fetchTransactionsByMethod() not support this method");return this.parseTransactions(o,a,i,s,r)}parseTransaction(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s,t),a=this.safeString(e,"commission"),n={currency:void 0,cost:void 0,rate:void 0};return void 0!==a&&(n.currency=r,n.cost=a),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"blockchainTransactionHash"),type:this.parseTransactionType(this.safeString(e,"type")),currency:r,network:void 0,amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatus(this.safeString(e,"state")),timestamp:i,datetime:this.iso8601(i),address:void 0,addressFrom:void 0,addressTo:void 0,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:void 0,internal:void 0,comment:void 0,fee:n}}parseTransactionStatus(e){return this.safeString({APPROVAL:"pending",PROCESSED:"ok"},e,e)}parseTransactionType(e){return this.safeString({deposit:"deposit",withdrawal:"withdrawal"},e,e)}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e)),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=await this.privateGetV2Ledger(this.extend(a,s));return this.parseLedger(n,r,t,i)}parseLedgerEntry(e,t){let i;let s=this.safeString(e,"id"),a=this.safeString(e,"amount"),n=r.Y.stringAbs(a),o=this.safeInteger(e,"timestamp"),h=this.safeString(e,"currency"),d=this.safeCurrencyCode(h,t);t=this.safeCurrency(h,t);let l=this.safeString(e,"commission");void 0!==l&&(i={currency:d,cost:l});let c=r.Y.stringLt(a,"0")?"out":"in";return this.safeLedgerEntry({id:s,timestamp:o,datetime:this.iso8601(o),direction:c,account:void 0,referenceId:this.safeString(e,"blockchainTransactionHash"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:d,amount:n,before:void 0,after:this.safeString(e,"balance"),status:this.parseLedgerEntryStatus(this.safeString(e,"status")),fee:i,info:e},t)}parseLedgerEntryStatus(e){return this.safeString({APPROVAL:"pending",PROCESSED:"ok",CANCELLED:"canceled"},e,e)}parseLedgerEntryType(e){return this.safeString({deposit:"transaction",withdrawal:"transaction",exchange_commission:"fee"},e,e)}async fetchLeverage(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.privateGetV2LeverageSettings(this.extend(s,t));return this.parseLeverage(r,i)}parseLeverage(e,t){let i=this.safeInteger(e,"value");return{info:e,symbol:t.symbol,marginMode:void 0,longLeverage:i,shortLeverage:i}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={coin:i.id},r=await this.privateGetV2DepositAddress(this.extend(s,t));return this.parseDepositAddress(r,i)}parseDepositAddress(e,t){let i=this.safeString(e,"address");return this.checkAddress(i),{info:e,currency:(t=this.safeCurrency(void 0,t)).code,network:void 0,address:i,tag:void 0}}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+e;if("historicalTrades"===e&&(r={"X-MBX-APIKEY":this.apiKey}),"private"===t){this.checkRequiredCredentials();let e=this.urlencode(this.extend({timestamp:this.nonce(),recvWindow:this.options.recvWindow},s)),t=this.hmac(this.encode(e),this.encode(this.secret),l.s);e+="&signature="+t,r={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i?n+="?"+e:(a=e,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(s).length&&(n+="?"+this.urlencode(s));return{url:n=this.implodeHostname(n),method:i,body:a,headers:r}}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.privateGetV2TradingPositions(t),s=this.safeList(i,"positions",[]);return this.parsePositions(s,e)}parsePosition(e,t){let i=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,s=this.safeInteger(e,"createdTimestamp"),a=this.safeString(e,"openQuantity"),n=r.Y.stringGt(a,"0")?"long":"short",o=r.Y.stringAbs(a),h=this.safeNumber(e,"openPrice"),d=this.safeNumber(e,"upl"),l=this.safeString(e,"margin"),c=r.Y.stringDiv("1",l);return this.safePosition({info:e,symbol:i,timestamp:s,datetime:this.iso8601(s),lastUpdateTimestamp:void 0,contracts:this.parseNumber(o),contractSize:void 0,entryPrice:h,collateral:void 0,side:n,unrealizedPnl:d,leverage:c,percentage:void 0,marginMode:void 0,notional:void 0,markPrice:void 0,lastPrice:void 0,liquidationPrice:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:this.parseNumber(l),maintenanceMarginPercentage:void 0,marginRatio:void 0,id:void 0,hedged:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}handleErrors(e,t,i,s,r,a,o,h,d){if(418===e||429===e)throw new n.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+a);if(e>=400){if(a.indexOf("Price * QTY is zero or less")>=0)throw new n.InvalidOrder(this.id+" order cost = amount * price is zero or less "+a);if(a.indexOf("LOT_SIZE")>=0)throw new n.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+a);if(a.indexOf("PRICE_FILTER")>=0)throw new n.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid float value in general, use this.priceToPrecision (symbol, amount) "+a)}if(void 0===o)return;let l=this.safeString(o,"code");if(void 0!==l&&"0"!==l){let e=this.id+" "+this.json(o);this.throwExactlyMatchedException(this.exceptions.exact,l,e);let t=this.safeString(o,"msg");throw this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new n.ExchangeError(e)}}}class tS extends s.k{}let tO=tS;class tT extends tO{describe(){return this.deepExtend(super.describe(),{id:"defx",name:"Defx X",rateLimit:100,version:"v1",certified:!1,pro:!1,hostname:"defx.com",dex:!0,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!1,option:!1,addMargin:!0,cancelAllOrders:!0,cancelAllOrdersAfter:!1,cancelOrder:!0,cancelWithdraw:!1,closeAllPositions:!0,closePosition:!0,createConvertTrade:!1,createDepositAddress:!1,createMarketBuyOrderWithCost:!1,createMarketOrder:!1,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrderWithTakeProfitAndStopLoss:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!1,createStopLossOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,createTakeProfitOrder:!0,createTrailingAmountOrder:!1,createTrailingPercentOrder:!1,createTriggerOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrder:!1,fetchClosedOrders:!0,fetchConvertCurrencies:!1,fetchConvertQuote:!1,fetchConvertTrade:!1,fetchConvertTradeHistory:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingInterval:!1,fetchFundingIntervals:!1,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMarkPrice:!1,fetchMarkPrices:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!1,fetchPosition:!0,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsHistory:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!1,reduceMargin:!1,sandbox:!0,setLeverage:!0,setMargin:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://github.com/user-attachments/assets/4e92bace-d7a9-45ea-92be-122168dc87e4",api:{public:"https://api.{hostname}",private:"https://api.{hostname}"},test:{public:"https://api.testnet.{hostname}",private:"https://api.testnet.{hostname}"},www:"https://defx.com/home",doc:["https://docs.defx.com/docs","https://api-docs.defx.com/"],fees:[""],referral:{url:"https://app.defx.com/join/6I2CZ7"}},api:{v1:{public:{get:{"healthcheck/ping":1,"symbols/{symbol}/ohlc":1,"symbols/{symbol}/trades":1,"symbols/{symbol}/prices":1,"symbols/{symbol}/ticker/24hr":1,"symbols/{symbol}/depth/{level}/{slab}":1,"ticker/24HrAgg":1,"c/markets":1,"c/markets/metadata":1,"analytics/market/stats/newUsers":1,"analytics/market/stats/tvl":1,"analytics/market/stats/volumeByInstrument":1,"analytics/market/stats/liquidation":1,"analytics/market/stats/totalVolume":1,"analytics/market/stats/openInterest":1,"analytics/market/stats/totalTrades":1,"analytics/market/stats/basis":1,"analytics/market/stats/insuranceFund":1,"analytics/market/stats/longAndShortRatio":1,"analytics/market/stats/fundingRate":1,"analytics/market/overview":1,"explorer/search":1,"explorer/transactions":1,"explorer/blocks":1}},private:{get:{"api/order/{orderId}":1,"api/orders":1,"api/orders/oco/{parentOrderId}":1,"api/trades":1,"api/position/active":1,"api/users/metadata/leverage":1,"api/users/metadata/feeMultiplier":1,"api/users/metadata/slippage":1,"api/users/referral":1,"api/users/apikeys":1,"connection-signature-message/evm":1,"api/users/profile/wallets":1,"api/notifications":1,"api/wallet/balance":1,"api/wallet/transactions":1,"api/analytics/user/overview":1,"api/analytics/user/pnl":1,"api/analytics/points/overview":1,"api/analytics/points/history":1},post:{"api/order":1,"api/position/oco":1,"api/users/socket/listenKeys":1,"api/users/metadata/leverage":1,"api/users/metadata/feeMultiplier":1,"api/users/metadata/slippage":1,"api/users/referral/recordReferralSignup":1,"api/users/apikeys":1,"api/users/profile/wallets":1,"api/transfers/withdrawal":1,"api/transfers/bridge/withdrawal":1},put:{"api/position/updatePositionMargin":1,"api/users/socket/listenKeys/{listenKey}":1,"api/users/apikeys/{accessKey}/status":1,"api/users/referral":1},patch:{"api/users/apikeys/{accessKey}":1},delete:{"api/orders/allOpen":1,"api/order/{orderId}":1,"api/position/{positionId}":1,"api/position/all":1,"api/users/socket/listenKeys/{listenKey}":1,"api/users/apikeys/{accessKey}":1}}}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0002"),taker:this.parseNumber("0.0005")}},options:{sandboxMode:!1},features:{spot:void 0,forDerivatives:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!1},triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:100,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:500,daysBack:1e5,untilDays:1e5,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:500,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},swap:{linear:{extends:"forDerivatives"},inverse:void 0},future:{linear:void 0,inverse:void 0}},commonCurrencies:{},exceptions:{exact:{404:n.BadRequest,missing_auth_signature:n.AuthenticationError,order_rejected:n.InvalidOrder,invalid_order_id:n.InvalidOrder,filter_lotsize_maxqty:n.InvalidOrder,filter_notional_min:n.InvalidOrder,failed_index_price_up_multiplier_filter:n.InvalidOrder,no_open_orders:n.InvalidOrder,active_position_not_found:n.InvalidOrder,position_inactive:n.InvalidOrder,invalid_position_id:n.InvalidOrder,"Internal server error":n.ExchangeError},broad:{"Bad Request":n.BadRequest}},precisionMode:d.kb})}async fetchStatus(e={}){let t=await this.v1PublicGetHealthcheckPing(e);return{status:this.safeBool(t,"success")?"ok":"error",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){let t=await this.v1PublicGetHealthcheckPing(e);return this.safeInteger(t,"t")}async fetchMarkets(e={}){let t={type:"perps"},i=[this.v1PublicGetCMarkets(this.extend(t,e)),this.v1PublicGetCMarketsMetadata(this.extend(t,e))],s=await Promise.all(i),r=this.safeList(s[0],"data"),a=this.indexBy(r,"market"),n=this.safeList(s[1],"data");for(let e=0;e<n.length;e++){let t;let i=n[e].market;i in a&&(t=a[i].status),n[e].status=t}return this.parseMarkets(n)}parseMarket(e){let t=this.safeString(e,"market"),i=t.split("_"),s=this.safeString(i,0),r=this.safeString(i,1),a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(r),o=this.safeList(e,"filters",[]),h=this.safeDict(e,"fees",{}),d=this.indexBy(o,"filterType"),l=this.safeDict(d,"PRICE_FILTER",{}),c=this.safeDict(d,"LOT_SIZE",{}),u=this.safeDict(d,"MARKET_LOT_SIZE",{}),f=this.safeDict(d,"NOTIONAL",{});return{id:t,symbol:a+"/"+n+":"+n,base:a,quote:n,settle:n,baseId:s,quoteId:r,settleId:r,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"active"===this.safeString(e,"status",""),contract:!0,linear:!0,inverse:void 0,taker:this.safeNumber(h,"taker"),maker:this.safeNumber(h,"maker"),contractSize:this.parseNumber("1"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(c,"stepSize"),price:this.safeNumber(l,"tickSize")},limits:{leverage:{min:void 0,max:this.safeNumber(e,"cappedLeverage")},amount:{min:this.safeNumber(c,"minQty"),max:this.safeNumber(c,"maxQty")},price:{min:this.safeNumber(l,"minPrice"),max:this.safeNumber(l,"maxPrice")},cost:{min:this.safeNumber(f,"minNotional"),max:void 0},market:{min:this.safeNumber(u,"minQty"),max:this.safeNumber(u,"maxQty")}},created:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.v1PublicGetSymbolsSymbolTicker24hr(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){let i,s;if(await this.loadMarkets(),void 0!==e){e=this.marketSymbols(e);let t=this.safeString(e,0);void 0!==t&&(i=this.market(t))}if([s,t]=this.handleMarketTypeAndParams("fetchTickers",i,t),"spot"===s)throw new n.NotSupported(this.id+" fetchTickers() is not supported for "+s+" markets");let r=await this.v1PublicGetTicker24HrAgg(t);return this.parseTickers(r,e)}parseTicker(e,t){let i=this.safeString(e,"symbol");void 0!==i&&(t=this.market(i));let s=t.symbol,r=this.safeString(e,"openPrice"),a=this.safeString(e,"highPrice"),n=this.safeString(e,"lowPrice"),o=this.safeString(e,"lastPrice"),h=this.safeString(e,"quoteVolume"),d=this.safeString(e,"volume"),l=this.safeString(e,"priceChangePercent"),c=this.safeString(e,"priceChange"),u=this.safeInteger(e,"closeTime");0===u&&(u=void 0);let f=this.iso8601(u),p=this.safeString(e,"bestBidPrice"),m=this.safeString(e,"bestBidQty"),g=this.safeString(e,"bestAskPrice"),y=this.safeString(e,"bestAskQty");return this.safeTicker({symbol:s,timestamp:u,datetime:f,high:a,low:n,bid:p,bidVolume:m,ask:g,askVolume:y,vwap:void 0,open:r,close:o,last:void 0,previousClose:void 0,change:c,percentage:l,average:void 0,baseVolume:d,quoteVolume:h,markPrice:this.safeString(e,"markPrice"),indexPrice:this.safeString(e,"indexPrice"),info:e},t)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);void 0===s&&(s=1e3),s=Math.min(1e3,s);let n={symbol:a.id,interval:this.safeString(this.timeframes,t,t),limit:s},o=this.safeInteger2(r,"until","till");if(r=this.omit(r,["until","till"]),n.endTime=void 0===o?this.milliseconds():o,void 0===i)n.startTime=0;else if(n.startTime=i,void 0===o){let e=1e3*this.parseTimeframe(t)*s;n.endTime=this.sum(i,e)}let h=await this.v1PublicGetSymbolsSymbolOhlc(this.extend(n,r));return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"start"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);void 0===i&&(i=50),i=Math.min(50,i);let a={symbol:r.id,limit:i},n=await this.v1PublicGetSymbolsSymbolTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={};if(void 0!==e){let t=this.market(e);r.symbols=t.id}void 0!==i&&(i=Math.min(100,i),r.pageSize=i);let a=await this.v1PrivateGetApiTrades(this.extend(r,s)),n=this.safeList(a,"data",[]);return this.parseTrades(n,void 0,t,i)}parseTrade(e,t){let i=this.safeString(e,"time"),s=this.safeInteger(e,"timestamp",this.parse8601(i)),r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t)).symbol,n=this.safeString(e,"price"),o=this.safeString(e,"qty"),h=this.safeString(e,"id"),d=this.safeString(e,"orderId"),l=this.safeStringLower(e,"role"),c=this.safeBool(e,"buyerMaker"),u=this.safeStringLower(e,"side");return void 0!==c&&(u=c?"sell":"buy"),this.safeTrade({id:h,timestamp:s,datetime:this.iso8601(s),symbol:a,side:u,price:n,amount:o,cost:void 0,order:d,takerOrMaker:l,type:void 0,fee:{cost:this.safeString(e,"fee"),currency:"USDC"},info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);void 0===t&&(t=10);let r=this.safeDict(s,"info",{}),a=this.safeList(r,"depthSlabs",[]),n={symbol:s.id,level:t,slab:this.safeString(a,0)},o=await this.v1PublicGetSymbolsSymbolDepthLevelSlab(this.extend(n,i)),h=this.safeInteger(o,"timestamp");return this.parseOrderBook(o,e,h,"bids","asks","price","qty")}async fetchMarkPrice(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.v1PublicGetSymbolsSymbolPrices(this.extend(s,t));return this.parseTicker(r,i)}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.v1PublicGetSymbolsSymbolPrices(this.extend(s,t));return this.parseFundingRate(r,i)}parseFundingRate(e,t){let i=this.safeNumber(e,"markPrice"),s=this.safeNumber(e,"indexPrice"),r=this.safeNumber(e,"payoutFundingRate"),a=this.safeInteger(e,"nextFundingPayout");return{info:e,symbol:t.symbol,markPrice:i,indexPrice:s,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:r,fundingTimestamp:a,fundingDatetime:this.iso8601(a),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async fetchBalance(e={}){await this.loadMarkets();let t=await this.v1PrivateGetApiWalletBalance(e),i=this.safeList(t,"assets");return this.parseBalance(i)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeCurrencyCode(this.safeString(s,"asset")),a=this.account();a.total=this.safeString(s,"balance"),t[r]=a}return this.safeBalance(t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=this.safeBool2(a,"reduceOnly","reduce_only");a=this.omit(a,["reduceOnly","reduce_only"]);let h=t.toUpperCase(),d=i.toUpperCase(),l={symbol:n.id,side:d,type:h},c=this.safeString(a,"takeProfitPrice"),u=this.safeString2(a,"stopPrice","triggerPrice"),f="MARKET"===h,p="LIMIT"===h,m=this.safeStringUpper(a,"timeInForce");void 0!==m?l.timeInForce=m:p&&(l.timeInForce="GTC"),o&&(l.reduceOnly=o);let g=this.safeString(a,"clientOrderId");void 0!==g&&(l.newClientOrderId=g),(void 0!==u||void 0!==c)&&(l.workingType="MARK_PRICE",void 0!==c?(l.stopPrice=this.priceToPrecision(e,c),f?l.type="TAKE_PROFIT_MARKET":l.type="TAKE_PROFIT_LIMIT"):(l.stopPrice=this.priceToPrecision(e,u),f?l.type="STOP_MARKET":l.type="STOP_LIMIT")),p&&void 0!==r&&(l.price=this.priceToPrecision(e,r)),l.quantity=this.amountToPrecision(e,s),a=this.omit(a,["clOrdID","clientOrderId","client_order_id","postOnly","timeInForce","stopPrice","triggerPrice","takeProfitPrice"]);let y=await this.v1PrivatePostApiOrder(this.extend(l,a)),v=this.safeDict(y,"data");return this.parseOrder(v,n)}parseOrderStatus(e){return void 0!==e?this.safeString({NEW:"open",OPEN:"open",CANCELLED:"canceled",REJECTED:"rejected",FILLED:"closed"},e,e):e}parseOrder(e,t){let i,s;let r=this.safeString(e,"orderId"),a=this.safeString(e,"clientOrderId"),n=this.safeString(e,"symbol"),o=(t=this.safeMarket(n,t)).symbol,h=this.safeString(e,"price"),d=this.safeString(e,"origQty"),l=this.safeStringLower(e,"type"),c=this.safeString(e,"status"),u=this.safeStringLower(e,"side"),f=this.omitZero(this.safeString(e,"executedQty")),p=this.omitZero(this.safeString(e,"avgPrice")),m=this.safeStringLower(e,"timeInForce");void 0!==l&&(l.indexOf("take_profit")>=0?i=this.safeString(e,"stopPrice"):s=this.safeString(e,"stopPrice"));let g=this.parse8601(this.safeString(e,"createdAt")),y=this.parse8601(this.safeString(e,"updatedAt"));return this.safeOrder({id:r,clientOrderId:a,timestamp:g,datetime:this.iso8601(g),lastTradeTimestamp:y,lastUpdateTimestamp:y,status:this.parseOrderStatus(c),symbol:o,type:l,timeInForce:m,postOnly:this.safeBool(e,"postOnly"),reduceOnly:this.safeBool(e,"reduceOnly"),side:u,price:h,triggerPrice:s,takeProfitPrice:i,stopLossPrice:void 0,average:p,amount:d,filled:f,remaining:void 0,cost:void 0,trades:void 0,fee:{cost:this.safeString(e,"totalFee"),currency:"USDC"},info:e},t)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={orderId:e,idType:"orderId"},r=this.safeStringN(i,["clOrdID","clientOrderId","client_order_id"]),a=void 0!==r;if(a){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");let e=this.market(t);s.orderId=r,s.idType="clientOrderId",s.symbol=e.id}i=this.omit(i,["clOrdID","clientOrderId","client_order_id"]);let o=await this.v1PrivateDeleteApiOrderOrderId(this.extend(s,i)),h={symbol:t};return a?h.clientOrderId=r:h.id=e,this.extend(this.parseOrder(o),h)}async cancelAllOrders(e,t={}){await this.loadMarkets();let i={symbols:[this.market(e).id]};return await this.v1PrivateDeleteApiOrdersAllOpen(this.extend(i,t))}async fetchPosition(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchPosition() requires a symbol argument");await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.v1PrivateGetApiPositionActive(this.extend(s,t)),a=this.safeList(r,"data",[]),o=this.safeDict(a,0,{});return this.parsePosition(o,i)}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.v1PrivateGetApiPositionActive(t),s=this.safeList(i,"data",[]);return this.parsePositions(s,e)}parsePosition(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=r.Y.stringAbs(this.safeString(e,"quantity")),a=this.safeStringLower(e,"positionSide"),n=this.omitZero(this.safeString(e,"pnl")),o=this.omitZero(this.safeString(e,"entryPrice")),h=this.safeString(e,"marginAmount");return this.safePosition({info:e,id:this.safeString(e,"positionId"),symbol:t.symbol,timestamp:void 0,datetime:void 0,lastUpdateTimestamp:void 0,initialMargin:this.parseNumber(h),initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:this.parseNumber(o),notional:void 0,leverage:void 0,unrealizedPnl:this.parseNumber(n),realizedPnl:void 0,contracts:this.parseNumber(s),contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:void 0,markPrice:void 0,lastPrice:void 0,collateral:void 0,marginMode:void 0,side:a,percentage:void 0,stopLossPrice:void 0,takeProfitPrice:void 0,hedged:void 0})}async fetchOrder(e,t,i={}){await this.loadMarkets();let s={orderId:e,idType:"orderId"},r=this.safeStringN(i,["clOrdID","clientOrderId","client_order_id"]);if(i=this.omit(i,["clOrdID","clientOrderId","client_order_id"]),void 0!==r){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");let e=this.market(t);s.orderId=r,s.idType="clientOrderId",s.symbol=e.id}let a=await this.v1PrivateGetApiOrderOrderId(this.extend(s,i)),o=this.safeDict(a,"data");return this.parseOrder(o)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r={};if(void 0!==e){let t=this.market(e);r.symbols=t.id}let a=this.safeInteger(s,"until");void 0!==a&&(s=this.omit(s,"until"),r.end=this.iso8601(a)),void 0!==t&&(r.start=this.iso8601(t)),void 0!==i&&(i=Math.min(100,i),r.pageSize=i);let n=await this.v1PrivateGetApiOrders(this.extend(r,s)),o=this.safeList(n,"data",[]);return this.parseOrders(o,void 0,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({statuses:"OPEN"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({statuses:"FILLED"},s))}async fetchCanceledOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({statuses:"CANCELED"},s))}async closePosition(e,t,i={}){await this.loadMarkets();let s=this.safeString(i,"positionId");if(void 0===s)throw new n.ArgumentsRequired(this.id+" closePosition() requires a positionId");let r=this.safeStringUpper(i,"type");if(void 0===r)throw new n.ArgumentsRequired(this.id+" closePosition() requires a type");let a=this.safeString(i,"quantity");if(void 0===a)throw new n.ArgumentsRequired(this.id+" closePosition() requires a quantity");let o={positionId:s,type:r,quantity:a};if("MARKET"!==r){let e=this.safeString(i,"price");if(void 0===e)throw new n.ArgumentsRequired(this.id+" closePosition() requires a price");o.price=e}return i=this.omit(i,["positionId","type","quantity","price"]),await this.v1PrivateDeleteApiPositionPositionId(this.extend(o,i))}async closeAllPositions(e={}){await this.loadMarkets();let t=await this.v1PrivateDeleteApiPositionAll(e),i=this.safeList(t,"data",[]);return this.parsePositions(i,void 0,e)}async fetchLedger(e,t,i,s={}){await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchLedger","paginate"),r)return await this.fetchPaginatedCallDynamic("fetchLedger",e,t,i,s);let a={};void 0!==t?a.start=t:a.start=0;let n=this.safeInteger(s,"until");void 0!==n?(s=this.omit(s,"until"),a.end=n):a.end=this.milliseconds();let o=await this.v1PrivateGetApiWalletTransactions(this.extend(a,s)),h=this.safeList(o,"transactions",[]);return this.parseLedger(h,void 0,t,i)}parseLedgerEntry(e,t){let i=this.safeString(e,"amount"),s=this.safeString(e,"asset"),r=this.safeCurrencyCode(s,t);t=this.safeCurrency(s,t);let a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"type");return this.safeLedgerEntry({info:e,id:this.safeString(e,"id"),direction:void 0,account:void 0,referenceAccount:void 0,referenceId:void 0,type:this.parseLedgerEntryType(n),currency:r,amount:this.parseNumber(i),timestamp:a,datetime:this.iso8601(a),before:void 0,after:void 0,status:void 0,fee:void 0},t)}parseLedgerEntryType(e){return this.safeString({FundingFee:"fee",FeeRebate:"fee",FeeKickback:"fee",RealizedPnl:"trade",LiquidationClearance:"trade",Transfer:"transfer",ReferralPayout:"referral",Commission:"commission"},e,e)}async withdraw(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n={amount:this.currencyToPrecision(e,t),asset:a.id},o=await this.v1PrivatePostApiTransfersBridgeWithdrawal(this.extend(n,r));return this.parseTransaction(o,a)}parseTransaction(e,t){let i=this.safeString(e,"transactionId");return{info:e,id:void 0,txid:i,timestamp:void 0,datetime:void 0,network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:void 0,amount:void 0,currency:this.safeCurrencyCode(void 0,t),status:void 0,updated:void 0,internal:void 0,comment:void 0,fee:void 0}}async setLeverage(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();let s={leverage:this.numberToString(e)},r=this.market(t);s.symbol=r.id;let a=await this.v1PrivatePostApiUsersMetadataLeverage(this.extend(s,i)),o=this.safeDict(a,"data",{});return this.parseLeverage(o,r)}parseLeverage(e,t){let i=this.safeString(e,"symbol"),s=this.safeInteger(e,"leverage");return{info:e,symbol:this.safeSymbol(i,t),marginMode:void 0,longLeverage:s,shortLeverage:s}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=t[0],o=t[1],h=this.implodeParams(e,s),d=this.implodeHostname(this.urls.api[o]);if(d+="/"+n+"/",s=this.omit(s,this.extractParams(e)),s=this.keysort(s),"public"===o)d+="open/"+h,Object.keys(s).length&&(d+="?"+this.rawencode(s));else{this.checkRequiredCredentials(),r={"X-DEFX-SOURCE":"ccxt"},d+="auth/"+h;let t=this.milliseconds().toString(),n=t;"GET"===i||"api/order/{orderId}"===e?(n+=this.rawencode(s),Object.keys(s).length&&(d+="?"+this.rawencode(s))):(void 0!==s&&(n+=a=this.json(s)),r["Content-Type"]="application/json");let o=this.hmac(this.encode(n),this.encode(this.secret),l.s);r["X-DEFX-APIKEY"]=this.apiKey,r["X-DEFX-TIMESTAMP"]=t,r["X-DEFX-SIGNATURE"]=o}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,h){if(!n)return;let d=this.safeBool(n,"success"),l=this.safeDict(n,"err",n),c=this.safeString2(l,"errorCode","code");if(!d){let e=this.id+" "+this.json(n);this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,c,e)}}defaultNetworkCodeForCurrency(e){let t=Object.keys(this.currency(e).networks);for(let e=0;e<t.length;e++){let i=t[e];if("ETH"===i)return i}return this.safeValue(t,0)}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}}var tI=i(12),tx=i(3807),tP=i(3919);class tM extends s.k{}let tA=tM;var tC=i(74),tB=i(8715);class tE extends tA{describe(){return this.deepExtend(super.describe(),{id:"ellipx",name:"Ellipx",countries:["PL"],rateLimit:200,version:"v1",certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelAllOrdersAfter:!1,cancelOrder:!0,cancelOrders:!1,cancelWithdraw:!1,closePosition:!1,createConvertTrade:!1,createDepositAddress:!1,createMarketBuyOrderWithCost:!1,createMarketOrder:!1,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrderWithTakeProfitAndStopLoss:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopLossOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,createTakeProfitOrder:!1,createTrailingAmountOrder:!1,createTrailingPercentOrder:!1,createTriggerOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchCanceledAndClosedOrders:!1,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!1,fetchConvertCurrencies:!1,fetchConvertQuote:!1,fetchConvertTrade:!1,fetchConvertTradeHistory:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!1,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!1,reduceMargin:!1,sandbox:!1,setLeverage:!1,setMargin:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","10m":"10m","1h":"1h","6h":"6h","12h":"12h","1d":"1d"},urls:{logo:"https://github.com/user-attachments/assets/e07c3f40-281c-4cdf-bacf-fa1c58218a2c",api:{public:"https://data.ellipx.com",private:"https://app.ellipx.com/_rest",_rest:"https://app.ellipx.com/_rest"},www:"https://www.ellipx.com",doc:"https://docs.google.com/document/d/1ZXzTQYffKE_EglTaKptxGQERRnunuLHEMmar7VC9syM",fees:"https://www.ellipx.com/pages/pricing",referral:""},api:{_rest:{get:{Market:1,"Market/{currencyPair}":1,"Crypto/Token/Info":1}},public:{get:{"Market/{currencyPair}:getDepth":1,"Market/{currencyPair}:ticker":1,"Market/{currencyPair}:getTrades":1,"Market/{currencyPair}:getGraph":1,"CMC:summary":1,"CMC/{currencyPair}:ticker":1}},private:{get:{"User/Wallet":1,"Market/{currencyPair}/Order":1,"Market/Order/{orderUuid}":1,"Market/{currencyPair}/Trade":1,"Market/TradeFee:query":1,"Unit/{currency}":1,"Crypto/Token/{currency}":1,"Crypto/Token/{currency}:chains":1},post:{"Market/{currencyPair}/Order":1,"Crypto/Address:fetch":1,"Crypto/Disbursement:withdraw":1},delete:{"Market/Order/{orderUuid}":1}}},fees:{trading:{tierBased:!0,feeSide:"get",percentage:!0,maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.0030"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("10000"),this.parseNumber("0.0020")],[this.parseNumber("50000"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.0010")],[this.parseNumber("1000000"),this.parseNumber("0.0008")],[this.parseNumber("5000000"),this.parseNumber("0.0003")],[this.parseNumber("15000000"),this.parseNumber("0.0000")],[this.parseNumber("75000000"),this.parseNumber("0.0000")],[this.parseNumber("100000000"),this.parseNumber("0.0000")]],taker:[[this.parseNumber("0"),this.parseNumber("0.0030")],[this.parseNumber("10000"),this.parseNumber("0.0025")],[this.parseNumber("50000"),this.parseNumber("0.0020")],[this.parseNumber("100000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.0012")],[this.parseNumber("5000000"),this.parseNumber("0.0010")],[this.parseNumber("15000000"),this.parseNumber("0.0008")],[this.parseNumber("75000000"),this.parseNumber("0.0005")],[this.parseNumber("100000000"),this.parseNumber("0.0003")]]}},stablecoin:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.0000"),taker:this.parseNumber("0.000015")}},options:{defaultType:"spot",recvWindow:5e3,broker:"CCXT",networks:{Bitcoin:"Bitcoin",Ethereum:"ERC20"},defaultNetwork:"defaultNetwork",defaultNetworkCodeReplacements:{BTC:"Bitcoin",ETH:"Ethereum"}},commonCurrencies:{},exceptions:{exact:{400:n.BadRequest,401:n.AuthenticationError,403:n.PermissionDenied,404:n.BadRequest,429:n.DDoSProtection,418:n.PermissionDenied,500:n.ExchangeError,504:n.ExchangeError},broad:{}},precisionMode:d.kb})}sign(e,t="public",i="GET",s={},r,a){e=this.implodeParams(e,s);let n=this.urls.api[t]+"/"+e;if("private"===t){this.checkRequiredCredentials();let t=this.uuid(),r=this.seconds().toString();a="GET"===i?"":this.json(s),s=this.extend({_key:this.apiKey,_time:r,_nonce:t},s);let n=this.urlencode(s),o=this.hash(this.encode(a),l.s),h=this.base16ToBinary(o),d=this.numberToBE(0,1),c=[this.encode(i),d,this.encode(e),d,this.encode(n),d,h],u=this.binaryConcatArray(c),f=this.secret,p=this.calculateMod(f.length,4),m=this.secret.replaceAll("-","+");m=(m=m.replaceAll("_","/")).padEnd(this.secret.length+(p?4-p:0),"=");let g=this.base64ToBinary(m),y=this.arraySlice(g,0,32),v=(0,tB.q4)(u,y,tC.ev);s._sign=v}return Object.keys(s).length&&(n+="?"+this.urlencode(s)),"GET"===i?a=void 0:r={"Content-Type":"application/json"},{url:n,method:i,body:a,headers:r}}calculateMod(e,t){return e%t}async fetchMarkets(e={}){let t=await this._restGetMarket(e),i=this.safeValue(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"Key"),i=this.safeString(e.Primary,"Key"),s=this.safeString(e.Secondary,"Key"),r=this.safeString(e.Primary,"Crypto_Token__"),a=this.safeString(e.Secondary,"Crypto_Token__"),n="active"===this.safeString(e,"Status"),o=this.safeTimestamp(e.Created,"unix"),h=this.parseNumber(this.parsePrecision(this.safeString(e.Primary,"Decimals"))),d=this.parseNumber(this.parsePrecision(this.safeString(e.Secondary,"Decimals"))),l=this.fees;return this.safeMarketStructure({id:t,symbol:i+"/"+s,base:i,quote:s,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:n,contract:!1,linear:void 0,inverse:void 0,taker:l.trading.taker,maker:l.trading.maker,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:h,price:d},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:e,created:o})}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=i.id,r=await this.publicGetMarketCurrencyPairTicker(this.extend({currencyPair:s},t)),a=this.safeValue(r.data,"ticker",{});return this.parseTicker(a,i)}parseTicker(e,t){let i=this.safeIntegerProduct(e,"time",1e3),s=this.parseAmount(this.safeValue(e,"open")),r=this.parseAmount(this.safeValue(e,"high")),a=this.parseAmount(this.safeValue(e,"low")),n=this.parseAmount(this.safeValue(e,"close")),o=this.parseAmount(this.safeValue(e,"avg")),h=this.parseAmount(this.safeValue(e,"vwap")),d=this.parseAmount(this.safeValue(e,"vol")),l=this.parseAmount(this.safeValue(e,"secvol"));return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:i,datetime:this.iso8601(i),high:r,low:a,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:h,open:s,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:o,baseVolume:d,quoteVolume:l,info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e).id,r=await this.publicGetMarketCurrencyPairGetDepth(this.extend({currencyPair:s},i)),a=this.safeValue(r,"data",{}),n=this.milliseconds(),o=a.bids.length,h=a.asks.length;for(let e=0;e<o;e++)a.bids[e].price=this.parseAmount(a.bids[e].price),a.bids[e].amount=this.parseAmount(a.bids[e].amount);for(let e=0;e<h;e++)a.asks[e].price=this.parseAmount(a.asks[e].price),a.asks[e].amount=this.parseAmount(a.asks[e].amount);return this.parseOrderBook(a,e,n,"bids","asks","price","amount")}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n="fetchOHLCV",o=!1;if([o,r]=this.handleOptionAndParams(r,n,"paginate"),o)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,1e3);let h=this.market(e),d={currencyPair:h.id,interval:this.safeString(this.timeframes,t,void 0)};void 0!==i&&(d.start=Math.floor(i/1e3)),[a,r]=this.handleOptionAndParams(r,n,"until"),void 0!==a&&(d.end=a);let l=await this.publicGetMarketCurrencyPairGetGraph(this.extend(d,r)),c=this.safeDict(l,"data",{}),u=this.safeList(c,"stats",[]);return this.parseOHLCVs(u,h,t,i,s)}parseOHLCV(e,t){return[1e3*this.safeInteger(e,"time"),this.parseNumber(this.parseAmount(this.safeDict(e,"open"))),this.parseNumber(this.parseAmount(this.safeDict(e,"high"))),this.parseNumber(this.parseAmount(this.safeDict(e,"low"))),this.parseNumber(this.parseAmount(this.safeDict(e,"close"))),this.parseNumber(this.parseAmount(this.safeDict(e,"vol")))]}async fetchCurrencies(e={}){let t=await this._restGetCryptoTokenInfo(this.extend({Can_Deposit:"Y",results_per_page:100,_expand:"/Crypto_Token,/Crypto_Chain"},e)),i={},s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){let t=this.parseCurrency(s[e]),r=this.safeString(t,"code");void 0!==r&&(i[r]=t)}return i}parseCurrency(e){let t,i,s;let r=this.safeString(e,"Crypto_Token__"),a=this.safeValue(e,"Crypto_Token",{}),n=this.safeCurrencyCode(this.safeString(a,"Symbol")),o=this.safeString(a,"Name"),h="valid"===this.safeString(e,"Status"),d="Y"===this.safeString(e,"Can_Deposit"),l="valid"===this.safeString(e,"Status");void 0!==e.Withdraw_Fee&&(t=this.parseNumber(this.parseAmount(e.Withdraw_Fee)));let c=this.parseNumber(this.parsePrecision(this.safeString(a,"Decimals")));void 0!==e.Minimum_Deposit&&(i=this.parseAmount(e.Minimum_Deposit)),void 0!==e.Minimum_Withdraw&&(s=this.parseAmount(e.Minimum_Withdraw));let u=this.safeString(e,"Crypto_Chain__"),f=this.safeValue(e,"Crypto_Chain",{}),p=this.safeString(f,"Type","default"),m={string:void 0,info:"default"===p?{}:f,id:u||r||"",network:p,active:h,deposit:d,withdraw:l,fee:t,precision:c,limits:{deposit:{min:i,max:void 0},withdraw:{min:s,max:void 0}}};return{info:e,id:r,code:n,name:o,active:h,deposit:d,withdraw:l,fee:t,precision:c,type:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:s,max:void 0}},networks:m}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=r.id,n=await this.publicGetMarketCurrencyPairGetTrades(this.extend({currencyPair:a},s)),o=this.safeDict(n,"data",{}),h=this.safeList(o,"trades",[]);return this.parseTrades(h,r,t,i)}parseTrade(e,t){let i,s;let r=this.safeString(e,"id"),a=this.safeDict(e,"date");i=void 0===a?this.parse8601(this.safeString(e,"date")):this.safeInteger(a,"unixms");let n="bid"===this.safeString(e,"type")?"buy":"sell",o=this.safeDict(e,"amount"),h=this.safeDict(e,"price"),d=this.parseAmount(o),l=this.parseAmount(h),c=this.safeList(e,"pair");if(void 0===c){let[t,i]=this.safeString(e,"pair").split("_");s=t+"/"+i}else s=this.safeString(c,0)+"/"+this.safeString(c,1);let u=this.safeDict(e,"bid"),f=this.safeDict(e,"ask"),p="buy"===n?this.safeString(u,"id"):this.safeString(f,"id");return this.safeTrade({id:r,info:e,timestamp:i,datetime:this.iso8601(i),symbol:s,type:void 0,side:n,order:p,takerOrMaker:void 0,price:l,amount:d,cost:void 0,fee:void 0})}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserWallet(e),i={info:t,timestamp:void 0,datetime:void 0},s=this.safeList(t,"data",[]);if(s.length>0){let e=s[0],t=this.safeDict(e,"Balance_Date",{});i.timestamp=this.safeInteger(t,"unixms"),i.datetime=this.iso8601(i.timestamp)}for(let e=0;e<s.length;e++){let t=s[e],r=this.safeDict(t,"Balance",{}),a=this.safeString(r,"currency");if(void 0!==a){let e={free:this.parseAmount(t.Unencumbered_Balance.value_xint),used:this.parseAmount(t.Liabilities.value_xint),total:this.parseAmount(r.value_xint)};i[a]=e}}return this.safeBalance(i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=n.id,h={currencyPair:o,Type:"buy"===i?"bid":"ask"};void 0!==s&&(h.Amount=this.amountToPrecision(e,s)),void 0!==r&&(h.Price=this.priceToPrecision(e,r));let d=this.safeString(a,"cost");void 0!==d&&(a=this.omit(a,"cost"),h.Spend_Limit=this.priceToPrecision(e,d));let l=await this.privatePostMarketCurrencyPairOrder(this.extend(h,a)),c=this.safeDict(l,"data",{});return this.parseOrder(c,n)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetMarketOrderOrderUuid(this.extend({orderUuid:e},i)),r=this.safeDict(s,"data",{});return this.parseOrder(r,void 0)}async fetchOrdersByStatus(e,t,i,s,r={}){let a;await this.loadMarkets();let n={};if(void 0!==t){let e=(a=this.market(t)).id;n.currencyPair=e}void 0!==e&&(n.Status=e);let o=await this.privateGetMarketCurrencyPairOrder(this.extend(n,r)),h=this.safeValue(o,"data",[]);return this.parseOrders(h,a,i,s)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders requires a symbol parameter");return await this.fetchOrdersByStatus(void 0,e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders requires a symbol parameter");return await this.fetchOrdersByStatus("open",e,t,i,s)}parseOrder(e,t){let i=this.safeString(e,"Market_Order__"),s=this.safeInteger(this.safeDict(e,"Created"),"unixms"),r=this.safeString(e,"Type"),a="sell";"bid"===r&&(a="buy");let n=this.parseOrderStatus(this.safeString(e,"Status")),o=this.parseNumber(this.parseAmount(this.safeDict(e,"Amount"))),h=this.parseNumber(this.parseAmount(this.safeDict(e,"Price"))),d=this.parseNumber(this.parseAmount(this.safeDict(e,"Executed"))),l=this.parseNumber(this.parseAmount(this.safeDict(e,"Secured"))),c=this.parseNumber(this.parseAmount(this.safeDict(e,"Total_Spent"))),u=t?t.symbol:void 0,f=this.safeDict(e,"Updated",{}),p=this.safeInteger(f,"unixms",void 0);return this.safeOrder({id:i,clientOrderId:void 0,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:p,status:this.parseOrderStatus(n),symbol:u,type:void 0===h?"market":"limit",timeInForce:"GTC",postOnly:!1,side:a,price:h,triggerPrice:void 0,average:void 0,cost:c,amount:o,filled:d,remaining:l,fee:void 0,trades:void 0},t)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteMarketOrderOrderUuid(this.extend({orderUuid:e},i)),r=this.safeValue(s,"warning",void 0),a=this.safeBool(s,"data"),n="canceled";return(!0!==a||void 0!==r)&&(n="closed"),this.safeOrder({id:e,clientOrderId:void 0,info:this.json(s),timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:n,symbol:void 0,type:void 0,timeInForce:void 0,postOnly:void 0,side:void 0,price:void 0,triggerPrice:void 0,average:void 0,cost:void 0,amount:void 0,filled:void 0,remaining:void 0,fee:void 0,trades:void 0},void 0)}async fetchOrderTrades(e,t,i,s,r={}){if(void 0===t)throw new n.ArgumentsRequired("fetchMyTrades requires a symbol parameter");await this.loadMarkets();let a=this.market(t),o=a.id,h=await this.privateGetMarketCurrencyPairTrade(this.extend({Market_Order__:e,currencyPair:o},r)),d=this.safeList(h,"data");return this.parseTrades(d,a,i,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=this.safeValue(i.info,"Crypto_Chain",void 0),r={Crypto_Token__:this.safeString(s,"Crypto_Token__"),Crypto_Chain__:this.safeString(s,"Crypto_Chain__")},a=await this.privatePostCryptoAddressFetch(this.extend(r,t)),n=this.safeValue(a,"data",{}),o=this.safeString(n,"Address"),h=this.safeString(n,"memo");return this.checkAddress(o),{currency:e,address:o,tag:h,network:s,info:a}}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=await this.privateGetMarketTradeFeeQuery(t),s=this.safeValue(i,"data",{}),r=this.safeNumber(s,"maker"),a=this.safeNumber(s,"taker");return{info:i,symbol:void 0,maker:void 0!==r?r/1e4:void 0,taker:void 0!==a?a/1e4:void 0,percentage:!0,tierBased:!0}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o=this.safeValue(a,"networks");if(void 0===o)throw new n.NotSupported(this.id+" withdraw() for "+e+" is not supported");let h=await this.privateGetUnitCurrency({currency:a.code}),d=this.safeValue(h,"data",[]),l=this.safeString(d,"Unit__");this.omit(r,"Unit__"),this.omit(r,"Crypto_Chain__");let c={Unit__:l,amount:t.toString(),address:i,Crypto_Chain__:o.id};void 0!==s&&(c.memo=s);let u=await this.privatePostCryptoDisbursementWithdraw(this.extend(c,r)),f=this.safeDict(u,"data"),p=this.safeDict(f,"Amount"),m=this.safeDict(f,"Requested"),g=this.safeDict(f,"Processed"),y=this.safeString(f,"Crypto_Disbursement__"),v=this.safeInteger(m,"unixms");return{info:u,id:y,txid:void 0,timestamp:v,datetime:this.iso8601(v),network:this.safeString(f,"Crypto_Chain__"),address:this.safeString(f,"Address"),addressTo:this.safeString(f,"Address"),addressFrom:void 0,tag:s,tagTo:s,tagFrom:void 0,type:"withdrawal",amount:this.safeNumber(p,"value"),currency:e,status:this.parseTransactionStatus(this.safeString(f,"Status")),updated:this.safeTimestamp(g,"unix"),internal:!1,comment:void 0,fee:{currency:e,cost:void 0,rate:void 0}}}parseTransactionStatus(e){return this.safeString({pending:"pending",completed:"ok",failed:"failed",cancelled:"canceled"},e,e)}parseOrderStatus(e){return this.safeString({pending:"open",running:"open","post-pending":"open",open:"open",stop:"open",invalid:"rejected",done:"closed",cancel:"canceled",canceled:"canceled"},e,e)}parseAmount(e){let t=this.safeString(e,"v",void 0),i=this.safeInteger(e,"e",void 0);if(void 0===t||void 0===i)return;let s=new r.Y(t);return s.decimals=i,s.reduce(),s.toString()}toAmount(e,t){return{v:e.toString(),e:t}}handleErrors(e,t,i,s,r,a,o,h,d){let l=this.safeString(o,"code"),c=this.safeString(o,"message");if(void 0!==l)throw this.throwExactlyMatchedException(this.exceptions.exact,l,c),new n.ExchangeError(this.id+" "+c)}}class t_ extends s.k{}let tN=t_;class tL extends tN{describe(){return this.deepExtend(super.describe(),{id:"exmo",name:"EXMO",countries:["LT"],rateLimit:100,version:"v1.1",has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createMarketBuyOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchCanceledOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:"emulated",fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!0,setMargin:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","45m":"45","1h":"60","2h":"120","3h":"180","4h":"240","1d":"D","1w":"W","1M":"M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg",api:{public:"https://api.exmo.com",private:"https://api.exmo.com",web:"https://exmo.me"},www:"https://exmo.me",referral:"https://exmo.me/?ref=131685",doc:["https://exmo.me/en/api_doc?ref=131685"],fees:"https://exmo.com/en/docs/fees"},api:{web:{get:["ctrl/feesAndLimits","en/docs/fees"]},public:{get:["currency","currency/list/extended","order_book","pair_settings","ticker","trades","candles_history","required_amount","payments/providers/crypto/list"]},private:{post:["user_info","order_create","order_cancel","stop_market_order_create","stop_market_order_cancel","user_open_orders","user_trades","user_cancelled_orders","order_trades","deposit_address","withdraw_crypt","withdraw_get_txid","excode_create","excode_load","code_check","wallet_history","wallet_operations","margin/user/order/create","margin/user/order/update","margin/user/order/cancel","margin/user/position/close","margin/user/position/margin_add","margin/user/position/margin_remove","margin/currency/list","margin/pair/list","margin/settings","margin/funding/list","margin/user/info","margin/user/order/list","margin/user/order/history","margin/user/order/trades","margin/user/order/max_quantity","margin/user/position/list","margin/user/position/margin_remove_info","margin/user/position/margin_add_info","margin/user/wallet/list","margin/user/wallet/history","margin/user/trade/list","margin/trades","margin/liquidation/feed"]}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.004"),taker:this.parseNumber("0.004")},transaction:{tierBased:!1,percentage:!1}},options:{networks:{ETH:"ERC20",TRX:"TRC20"},fetchTradingFees:{method:"fetchPrivateTradingFees"},margin:{fillResponseFromRequest:!0}},commonCurrencies:{GMT:"GMT Token"},precisionMode:d.kb,exceptions:{exact:{140333:n.InvalidOrder,140434:n.BadRequest,40005:n.AuthenticationError,40009:n.InvalidNonce,40015:n.ExchangeError,40016:n.OnMaintenance,40017:n.AuthenticationError,40032:n.PermissionDenied,40033:n.PermissionDenied,40034:n.RateLimitExceeded,50052:n.InsufficientFunds,50054:n.InsufficientFunds,50304:n.OrderNotFound,50173:n.OrderNotFound,50277:n.InvalidOrder,50319:n.InvalidOrder,50321:n.InvalidOrder,50381:n.InvalidOrder},broad:{"range period is too long":n.BadRequest,"invalid syntax":n.BadRequest,"API rate limit exceeded":n.RateLimitExceeded}}})}async modifyMarginHelper(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n={position_id:a.id,quantity:t};"add"===i?r=await this.privatePostMarginUserPositionMarginAdd(this.extend(n,s)):"reduce"===i&&(r=await this.privatePostMarginUserPositionMarginRemove(this.extend(n,s)));let o=this.parseMarginModification(r,a),h=this.safeValue(this.options,"margin",{});return this.safeBool(h,"fillResponseFromRequest",!0)&&(o.type=i,o.amount=t),o}parseMarginModification(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),type:void 0,marginMode:"isolated",amount:void 0,total:void 0,code:this.safeValue(t,"quote"),status:"ok",timestamp:void 0,datetime:void 0}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"reduce",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async fetchTradingFees(e={}){let t=this.safeValue(this.options,"fetchTradingFees",{}),i=this.safeString(t,"method","fetchPrivateTradingFees"),s=this.safeString(e,"method",i);return(e=this.omit(e,"method"),"fetchPrivateTradingFees"===s)?await this.fetchPrivateTradingFees(e):await this.fetchPublicTradingFees(e)}async fetchPrivateTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostMarginPairList(e),i=this.safeValue(t,"pairs",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],a=this.safeString(t,"name"),n=this.safeSymbol(a,void 0,"_"),o=this.safeString(t,"trade_maker_fee"),h=this.safeString(t,"trade_taker_fee"),d=this.parseNumber(r.Y.stringDiv(o,"100")),l=this.parseNumber(r.Y.stringDiv(h,"100"));s[n]={info:t,symbol:n,maker:d,taker:l,percentage:!0,tierBased:!0}}return s}async fetchPublicTradingFees(e={}){await this.loadMarkets();let t=await this.publicGetPairSettings(e),i={};for(let e=0;e<this.symbols.length;e++){let s=this.symbols[e],a=this.market(s),n=this.safeValue(t,a.id,{}),o=this.safeString(n,"commission_maker_percent"),h=this.safeString(n,"commission_taker_percent"),d=this.parseNumber(r.Y.stringDiv(o,"100")),l=this.parseNumber(r.Y.stringDiv(h,"100"));i[s]={info:n,symbol:s,maker:d,taker:l,percentage:!0,tierBased:!0}}return i}parseFixedFloatValue(e){if(void 0===e||"-"===e)return;if(""===e)return 0;let t=e.indexOf("%")>=0,i=parseFloat(e.split(" ")[0].replace("%",""));if(i>0&&t)throw new n.ExchangeError(this.id+" parseFixedFloatValue() detected an unsupported non-zero percentage-based fee "+e);return i}async fetchTransactionFees(e,t={}){await this.loadMarkets();let i=await this.publicGetPaymentsProvidersCryptoList(t),s={},r=Object.keys(i);for(let t=0;t<r.length;t++){let a=r[t];if(void 0!==e&&!this.inArray(a,e))continue;s[a]={deposit:void 0,withdraw:void 0};let n=this.currency(a),o=this.safeString(n,"id"),h=this.safeValue(i,o,[]);for(let e=0;e<h.length;e++){let t=h[e],i=this.safeString(t,"type"),r=this.safeString(t,"commission_desc"),n=this.parseFixedFloatValue(r);s[a][i]=n}s[a].info=h}return this.options.transactionFees=s,s}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetPaymentsProvidersCryptoList(t),s=this.parseDepositWithdrawFees(i,e);return this.options.transactionFees=s,s}parseDepositWithdrawFee(e,t){let i=this.depositWithdrawFee(e);for(let s=0;s<e.length;s++){let r;let a=e[s],n=this.safeString(a,"type"),o=this.safeString(a,"name"),h=this.networkIdToCode(o,this.safeString(t,"code")),d=this.safeString(a,"commission_desc"),l=[];void 0!==d&&(r=(l=d.split("%")).length>=2),void 0===this.safeValue(i.networks,h)&&(i.networks[h]={withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0}}),i.networks[h][n]={fee:this.parseFixedFloatValue(this.safeString(l,0)),percentage:r}}return this.assignDefaultDepositWithdrawFees(i)}async fetchCurrencies(e={}){let t=await this.publicGetCurrencyListExtended(e),i=await this.publicGetPaymentsProvidersCryptoList(e),s={};for(let e=0;e<t.length;e++){let a,n,o;let h=t[e],d=this.safeString(h,"name"),l=this.safeString(h,"description"),c=this.safeValue(i,d),u=!1,f="crypto",p={deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}};if(void 0===c)u=!0,f="fiat";else for(let e=0;e<c.length;e++){let t=c[e],i=this.safeString(t,"type"),s=this.safeString(t,"min"),h=this.safeString(t,"max");r.Y.stringEq(h,"0.0")&&(h=void 0);let d=this.safeValue(t,"enabled");if("deposit"===i?d&&!n?n=!0:d||(n=!1):"withdraw"!==i||(d&&!o?o=!0:d||(o=!1)),d){u=!0;let e=this.numberToString(p[i].min);if((void 0===p[i].min||r.Y.stringLt(s,e))&&(p[i].min=s,p[i].max=h,"withdraw"===i)){let e=this.safeString(t,"commission_desc");a=this.parseFixedFloatValue(e)}}}let m=this.safeCurrencyCode(d);s[m]={id:d,code:m,name:l,type:f,active:u,deposit:n,withdraw:o,fee:a,precision:this.parseNumber("1e-8"),limits:p,info:c,networks:{}}}return s}async fetchMarkets(e={}){let t=await this.publicGetPairSettings(e),i={};if(this.checkRequiredCredentials(!1)){let t=await this.privatePostMarginPairList(e),s=this.safeValue(t,"pairs");i=this.indexBy(s,"name")}let s=Object.keys(t),a=[];for(let e=0;e<s.length;e++){let n=s[e],o=t[n],h=this.safeValue(i,n),d=n.replace("_","/"),[l,c]=d.split("/"),u=this.safeCurrencyCode(l),f=this.safeCurrencyCode(c),p=this.safeString(o,"commission_taker_percent"),m=this.safeString(o,"commission_maker_percent"),g=this.safeString(o,"max_quantity"),y=this.safeString(h,"max_order_quantity");a.push({id:n,symbol:d,base:u,quote:f,settle:void 0,baseId:l,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:void 0!==h,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(r.Y.stringDiv(p,"100")),maker:this.parseNumber(r.Y.stringDiv(m,"100")),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber(this.parsePrecision(this.safeString(o,"price_precision")))},limits:{leverage:{min:void 0,max:this.safeNumber(o,"leverage")},amount:{min:this.safeNumber(o,"min_quantity"),max:this.parseNumber(r.Y.stringMax(g,y))},price:{min:this.safeNumber(o,"min_price"),max:this.safeNumber(o,"max_price")},cost:{min:this.safeNumber(o,"min_amount"),max:this.safeNumber(o,"max_amount")}},created:void 0,info:o})}return a}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeIntegerProduct(r,"until",.001),o=void 0!==n,h={symbol:a.id,resolution:this.safeString(this.timeframes,t,t)},d=this.parseTimeframe(t),l=this.parseToInt(this.milliseconds()/1e3);if(void 0===i){let e=o?Math.min(n,l):l;s=void 0===s?1e3:Math.min(s,3e3),h.from=e-s*d-1,h.to=e}else if(h.from=this.parseToInt(i/1e3)-1,o)h.to=Math.min(n,l);else{s=void 0===s?3e3:Math.min(s,3e3);let e=this.sum(i,s*d);h.to=Math.min(e,l)}r=this.omit(r,"until");let c=await this.publicGetCandlesHistory(this.extend(h,r)),u=this.safeList(c,"candles",[]);return this.parseOHLCVs(u,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}parseBalance(e){let t={info:e},i=this.safeValue(e,"wallets");if(void 0!==i){let e=Object.keys(i);for(let s=0;s<e.length;s++){let r=e[s],a=i[r],n=this.safeCurrencyCode(r),o=this.account();o.used=this.safeString(a,"used"),o.free=this.safeString(a,"free"),o.total=this.safeString(a,"balance"),t[n]=o}}else{let i=this.safeValue(e,"balances",{}),s=this.safeValue(e,"reserved",{}),r=Object.keys(i);for(let e=0;e<r.length;e++){let a=r[e],n=this.safeCurrencyCode(a),o=this.account();a in i&&(o.free=this.safeString(i,a)),a in s&&(o.used=this.safeString(s,a)),t[n]=o}}return this.safeBalance(t)}async fetchBalance(e={}){let t,i;if(await this.loadMarkets(),[t,e]=this.handleMarginModeAndParams("fetchBalance",e),"cross"===t)throw new n.BadRequest(this.id+" does not support cross margin");return i="isolated"===t?await this.privatePostMarginUserWalletList(e):await this.privatePostUserInfo(e),this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id};void 0!==t&&(r.limit=t);let a=await this.publicGetOrderBook(this.extend(r,i)),n=this.safeDict(a,s.id);return this.parseOrderBook(n,s.symbol,void 0,"bid","ask")}async fetchOrderBooks(e,t,i={}){let s;if(await this.loadMarkets(),void 0===e){if((s=this.ids.join(",")).length>2048){let e=this.ids.length;throw new n.ExchangeError(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else s=(s=this.marketIds(e)).join(",");let r={pair:s};void 0!==t&&(r.limit=t);let a=await this.publicGetOrderBook(this.extend(r,i)),o={},h=Object.keys(a);for(let e=0;e<h.length;e++){let t=h[e],i=this.safeSymbol(t);o[i]=this.parseOrderBook(a[t],i,void 0,"bid","ask")}return o}parseTicker(e,t){let i=this.safeTimestamp(e,"updated");t=this.safeMarket(void 0,t);let s=this.safeString(e,"last_trade");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy_price"),bidVolume:void 0,ask:this.safeString(e,"sell_price"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"vol_curr"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetTicker(t),s={},r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],a=this.safeMarket(t,void 0,"_"),n=a.symbol,o=this.safeValue(i,t);s[n]=this.parseTicker(o,a)}return this.filterByArrayTickers(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s=this.market(e);return this.parseTicker(i[s.id],s)}parseTrade(e,t){let i,s;let a=this.safeTimestamp(e,"date"),n=this.safeString(e,"trade_id"),o=this.safeString(e,"order_id"),h=this.safeString(e,"price"),d=this.safeString(e,"quantity"),l=this.safeString(e,"amount"),c=this.safeString2(e,"type","trade_type"),u=this.safeString(e,"pair"),f=(t=this.safeMarket(u,t,"_")).symbol,p=this.safeValue(e,"is_maker");void 0!==p&&(i=p?"maker":"taker");let m=this.safeString(e,"exec_type",i),g=this.safeString(e,"commission_amount");if(void 0!==g){let t=this.safeString(e,"commission_currency"),i=this.safeCurrencyCode(t),a=this.safeString(e,"commission_percent");void 0!==a&&(a=r.Y.stringDiv(a,"1000",18)),s={cost:g,currency:i,rate:a}}return this.safeTrade({id:n,info:e,timestamp:a,datetime:this.iso8601(a),symbol:f,order:o,type:void 0,side:c,takerOrMaker:m,price:h,amount:d,cost:l,fee:s},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id},n=await this.publicGetTrades(this.extend(a,s)),o=this.safeList(n,r.id,[]);return this.parseTrades(o,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r,a;if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");if([r,s]=this.handleMarginModeAndParams("fetchMyTrades",s),"cross"===r)throw new n.BadRequest(this.id+"only isolated margin is supported");await this.loadMarkets();let o=this.market(e).id,h="isolated"!==r;void 0===i&&(i=100);let d={};h?d.pair=o:d.pair_name=o,void 0!==i&&(d.limit=i);let l=this.safeInteger(s,"offset",0);if(d.offset=l,h)a=await this.privatePostUserTrades(this.extend(d,s));else{let e=await this.privatePostMarginTrades(this.extend(d,s));a=this.safeValue(e,"trades")}let c=[],u=Object.keys(a);for(let e=0;e<u.length;e++){let s=u[e],r=this.safeMarket(s,void 0,"_"),n=a[s],o=this.parseTrades(n,r,t,i);c=this.arrayConcat(c,o)}return this.filterBySinceLimit(c,t,i)}async createMarketOrderWithCost(e,t,i,s={}){return await this.loadMarkets(),s=this.extend(s,{cost:i}),await this.createOrder(e,"market",t,i,void 0,s)}async createMarketBuyOrderWithCost(e,t,i={}){return await this.loadMarkets(),i=this.extend(i,{cost:t}),await this.createOrder(e,"market","buy",t,void 0,i)}async createMarketSellOrderWithCost(e,t,i={}){return await this.loadMarkets(),i=this.extend(i,{cost:t}),await this.createOrder(e,"market","sell",t,void 0,i)}async createOrder(e,t,i,s,r,a={}){let o,h;await this.loadMarkets();let d=this.market(e),l="market"===t&&void 0===r;if([o,a]=this.handleMarginModeAndParams("createOrder",a),"cross"===o)throw new n.BadRequest(this.id+" only supports isolated margin");let c="isolated"!==o,u=this.safeStringN(a,["triggerPrice","stopPrice","stop_price"]),f=this.safeString(a,"cost"),p={pair:d.id};void 0===f?p.quantity=this.amountToPrecision(d.symbol,s):p.quantity=this.costToPrecision(d.symbol,f);let m=this.safeValue2(a,"client_id","clientOrderId");if(void 0!==m){if(void 0===(m=this.safeInteger2(a,"client_id","clientOrderId")))throw new n.BadRequest(this.id+" createOrder() client order id must be an integer / numeric literal");p.client_id=m}let g=this.safeNumber(a,"leverage");if(!c&&void 0===g)throw new n.ArgumentsRequired(this.id+' createOrder requires an extra param params["leverage"] for margin orders');if(a=this.omit(a,["stopPrice","stop_price","triggerPrice","timeInForce","client_id","clientOrderId","cost"]),void 0!==r&&(p.price=this.priceToPrecision(d.symbol,r)),c){if(void 0!==u){if("limit"===t)throw new n.BadRequest(this.id+" createOrder () cannot create stop limit orders for spot, only stop market");p.type=i,p.trigger_price=this.priceToPrecision(e,u),h=await this.privatePostStopMarketOrderCreate(this.extend(p,a))}else{let e;let s=this.safeString(a,"exec_type");[e,a]=this.handlePostOnly("market"===t,"post_only"===s,a);let n=this.safeString(a,"timeInForce");if(p.price=l?0:this.priceToPrecision(d.symbol,r),"limit"===t)p.type=i;else if("market"===t){let e=void 0!==f?"_total":"";p.type="market_"+i+e}e?p.exec_type="post_only":void 0!==n&&(p.exec_type=n),h=await this.privatePostOrderCreate(this.extend(p,a))}}else void 0!==u?(p.stop_price=this.priceToPrecision(e,u),"limit"===t?p.type="stop_limit_"+i:"market"===t?p.type="stop_"+i:p.type=t):"limit"===t||"market"===t?p.type=t+"_"+i:p.type=t,h=await this.privatePostMarginUserOrderCreate(this.extend(p,a));return this.parseOrder(h,d)}async cancelOrder(e,t,i={}){let s,r;await this.loadMarkets();let a={},o=this.safeValue2(i,"trigger","stop");if(i=this.omit(i,["trigger","stop"]),[s,i]=this.handleMarginModeAndParams("cancelOrder",i),"cross"===s)throw new n.BadRequest(this.id+" only supports isolated margin");return"isolated"===s?(a.order_id=e,r=await this.privatePostMarginUserOrderCancel(this.extend(a,i))):o?(a.parent_order_id=e,r=await this.privatePostStopMarketOrderCancel(this.extend(a,i))):(a.order_id=e,r=await this.privatePostOrderCancel(this.extend(a,i))),this.parseOrder(r)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s={order_id:e.toString()},r=await this.privatePostOrderTrades(this.extend(s,i)),a=this.parseOrder(r);return a.id=e.toString(),a}async fetchOrderTrades(e,t,i,s,r={}){let a,o,h;if([a,r]=this.handleMarginModeAndParams("fetchOrderTrades",r),"cross"===a)throw new n.BadRequest(this.id+" only supports isolated margin");void 0!==t&&(o=this.market(t));let d={order_id:e.toString()};h="isolated"===a?await this.privatePostMarginUserOrderTrades(this.extend(d,r)):await this.privatePostOrderTrades(this.extend(d,r));let l=this.safeList(h,"trades");return this.parseTrades(l,o,i,s)}async fetchOpenOrders(e,t,i,s={}){let r,a,n;await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol),[a,s]=this.handleMarginModeAndParams("fetchOpenOrders",s);let o=[];if("cross"===a||"isolated"===a){n=await this.privatePostMarginUserOrderList(s),s=this.extend(s,{status:"open"});let e=this.safeValue(n,"orders");o=this.parseOrders(e,r,t,i,s)}else{let e=Object.keys(n=await this.privatePostUserOpenOrders(s));for(let r=0;r<e.length;r++){let a=e[r],h=this.safeMarket(a);s=this.extend(s,{status:"open"});let d=this.parseOrders(n[a],h,t,i,s);o=this.arrayConcat(o,d)}}return o}parseStatus(e){if(void 0!==e)return e.indexOf("cancel")>=0&&(e="canceled"),this.safeString({cancel_started:"canceled"},e,e)}parseSide(e){return this.safeString({limit_buy:"buy",limit_sell:"sell",market_buy:"buy",market_sell:"sell",stop_buy:"buy",stop_sell:"sell",stop_limit_buy:"buy",stop_limit_sell:"sell",trailing_stop_buy:"buy",trailing_stop_sell:"sell",stop_market_sell:"sell",stop_market_buy:"buy",buy:"buy",sell:"sell"},e,e)}parseOrder(e,t){let i,s;let r=this.safeString2(e,"order_id","parent_order_id"),a=this.safeIntegerProduct2(e,"event_time","created",1e-6),n=this.safeTimestamp(e,"created",a),o=this.safeString2(e,"type","order_type"),h=this.parseSide(o);"pair"in e?i=e.pair:"in_currency"in e&&"out_currency"in e&&(i="buy"===h?e.in_currency+"_"+e.out_currency:e.out_currency+"_"+e.in_currency);let d=(t=this.safeMarket(i,t)).symbol,l=this.safeString(e,"quantity");void 0===l&&(l=this.safeString(e,"buy"===h?"in_amount":"out_amount"));let c=this.safeString(e,"price"),u=this.safeString(e,"amount"),f=this.safeValue(e,"trades",[]),p=this.safeInteger(e,"client_id"),m=this.safeString(e,"stop_price");return"0"===m&&(m=void 0),"buy"!==o&&"sell"!==o&&(s=o),this.safeOrder({id:r,clientOrderId:p,datetime:this.iso8601(n),timestamp:n,lastTradeTimestamp:this.safeIntegerProduct(e,"updated",1e-6),status:this.parseStatus(this.safeString(e,"order_status")),symbol:d,type:s,timeInForce:void 0,postOnly:void 0,side:h,price:c,triggerPrice:m,cost:u,amount:l,filled:void 0,remaining:void 0,average:void 0,trades:f,fee:void 0,info:e},t)}async fetchCanceledOrders(e,t,i,s={}){let r,a,o;if(await this.loadMarkets(),[r,s]=this.handleMarginModeAndParams("fetchOrders",s),"cross"===r)throw new n.BadRequest(this.id+" only supports isolated margin");void 0===i&&(i=100),void 0!==e&&(e=this.market(e).symbol);let h={limit:i};if(h.offset=void 0!==t?i:0,h.limit=i,void 0!==e&&(a=this.market(e)),"isolated"!==r)return o=await this.privatePostUserCancelledOrders(this.extend(h,s)),s=this.extend(s,{status:"canceled"}),this.parseOrders(o,a,t,i,s);{let e=await this.privatePostMarginUserOrderHistory(this.extend(h,s)),r=this.safeValue(e,"items"),n=this.parseOrders(r,a,t,i,s),o=[];for(let e=0;e<n.length;e++){let t=n[e];"canceled"===t.status&&o.push(t)}return o}}async editOrder(e,t,i,s,r,a,o={}){let h;await this.loadMarkets();let d=this.market(t);if([h,o]=this.handleMarginModeAndParams("editOrder",o),"isolated"!==h)throw new n.BadRequest(this.id+" editOrder() can only be used for isolated margin orders");let l=this.safeNumberN(o,["triggerPrice","stopPrice","stop_price"]);o=this.omit(o,["triggerPrice","stopPrice"]);let c={order_id:e};void 0!==r&&(c.quantity=r),void 0!==a&&(c.price=this.priceToPrecision(d.symbol,a)),void 0!==l&&(c.stop_price=this.priceToPrecision(d.symbol,l));let u=await this.privatePostMarginUserOrderUpdate(this.extend(c,o));return this.parseOrder(u)}async fetchDepositAddress(e,t={}){let i,s;await this.loadMarkets();let r=await this.privatePostDepositAddress(t),a=this.safeString(r,e);if(a){let e=a.split(",");i=e[0],e.length>1&&(s=e[1])}return this.checkAddress(i),{info:r,currency:e,network:void 0,address:i,tag:s}}getMarketFromTrades(e){let t=Object.keys(this.indexBy(e,"pair"));if(1===t.length)return this.markets[t[0]]}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let a=this.currency(e),n={amount:t,currency:a.id,address:i};void 0!==s&&(n.invoice=s);let o=this.safeValue(this.options,"networks",{}),h=this.safeStringUpper(r,"network");void 0!==(h=this.safeString(o,h,h))&&(n.transport=h,r=this.omit(r,"network"));let d=await this.privatePostWithdrawCrypt(this.extend(n,r));return this.parseTransaction(d,a)}parseTransactionStatus(e){return this.safeString({transferred:"ok",paid:"ok",pending:"pending",processing:"pending",verifying:"pending"},e,e)}parseTransaction(e,t){let i,s;let a=this.safeTimestamp2(e,"dt","created"),n=this.safeString(e,"amount");void 0!==n&&(n=r.Y.stringAbs(n));let o=this.safeString(e,"txid");if(void 0===o){let t=this.safeValue(e,"extra",{}),i=this.safeString(t,"txid");""!==i&&(o=i)}let h=this.safeString(e,"type"),d=this.safeString2(e,"curr","currency"),l=this.safeCurrencyCode(d,t),c=this.safeString(e,"account");if("deposit"===h)s=c;else if("withdrawal"===h&&void 0!==(i=c)){let e=i.split(":");2===e.length&&(i=(i=this.safeString(e,1)).replace(" ",""))}let u={currency:void 0,cost:void 0,rate:void 0};if(!this.fees.transaction.percentage){let t=this.safeString(e,"commission");if(void 0===t){let e=this.safeValue(this.options,"transactionFees",{}),i=this.safeValue(e,l,{});t=this.safeString(i,"withdrawal"===h?"withdraw":"deposit")}"cashback"===this.safeString(e,"provider")&&(t="0"),void 0!==t&&("withdrawal"===h&&(n=r.Y.stringSub(n,t)),u.cost=this.parseNumber(t),u.currency=l)}return{info:e,id:this.safeString2(e,"order_id","task_id"),txid:o,type:h,currency:l,network:this.safeString(e,"provider"),amount:this.parseNumber(n),status:this.parseTransactionStatus(this.safeStringLower(e,"status")),timestamp:a,datetime:this.iso8601(a),address:i,addressFrom:void 0,addressTo:i,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:this.safeTimestamp(e,"updated"),comment:s,internal:void 0,fee:u}}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==t&&(a.date=this.parseToInt(t/1e3)),void 0!==e&&(r=this.currency(e));let n=await this.privatePostWalletHistory(this.extend(a,s));return this.parseTransactions(n.history,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={type:"withdraw"};void 0!==i&&(a.limit=i),void 0!==e&&(r=this.currency(e),a.currency=r.id);let n=await this.privatePostWalletOperations(this.extend(a,s)),o=this.safeList(n,"items",[]);return this.parseTransactions(o,r,t,i)}async fetchWithdrawal(e,t,i={}){let s;await this.loadMarkets();let r={order_id:e,type:"withdraw"};void 0!==t&&(s=this.currency(t),r.currency=s.id);let a=await this.privatePostWalletOperations(this.extend(r,i)),n=this.safeValue(a,"items",[]),o=this.safeDict(n,0,{});return this.parseTransaction(o,s)}async fetchDeposit(e,t,i={}){let s;await this.loadMarkets();let r={order_id:e,type:"deposit"};void 0!==t&&(s=this.currency(t),r.currency=s.id);let a=await this.privatePostWalletOperations(this.extend(r,i)),n=this.safeValue(a,"items",[]),o=this.safeDict(n,0,{});return this.parseTransaction(o,s)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={type:"deposit"};void 0!==i&&(a.limit=i),void 0!==e&&(r=this.currency(e),a.currency=r.id);let n=await this.privatePostWalletOperations(this.extend(a,s)),o=this.safeList(n,"items",[]);return this.parseTransactions(o,r,t,i)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/";if("web"!==t&&(n+=this.version+"/"),n+=e,"public"===t||"web"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else if("private"===t){this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({nonce:e},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),A.Zf)}}return{url:n,method:i,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o){if("error"in o&&!("result"in o)){let e=this.safeValue(o,"error",{}),t=this.safeString(e,"msg"),i=this.safeString(e,"code"),s=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,i,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new n.ExchangeError(s)}if("result"in o||"errmsg"in o){let e=this.safeBool(o,"result",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){let e;let t=this.safeString2(o,"error","errmsg"),i=t.split(":");if(i.length>1){let t=i[0].split(" ");e=t.length>1?t[1]:t[0]}let s=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,e,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new n.ExchangeError(s)}}}}}var tR=i(1889);class tD extends tR.A{describe(){return this.deepExtend(super.describe(),{id:"gateio",alias:!0})}}class tV extends s.k{}let tq=tV;class tF extends tq{describe(){return this.deepExtend(super.describe(),{id:"gemini",name:"Gemini",countries:["US"],rateLimit:100,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:"emulated",postOnly:!0,reduceMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg",api:{public:"https://api.gemini.com",private:"https://api.gemini.com",web:"https://docs.gemini.com",webExchange:"https://exchange.gemini.com"},www:"https://gemini.com/",doc:["https://docs.gemini.com/rest-api","https://docs.sandbox.gemini.com"],test:{public:"https://api.sandbox.gemini.com",private:"https://api.sandbox.gemini.com",web:"https://docs.gemini.com",webExchange:"https://exchange.gemini.com"},fees:["https://gemini.com/api-fee-schedule","https://gemini.com/trading-fees","https://gemini.com/transfer-fees"]},api:{webExchange:{get:[""]},web:{get:["rest-api"]},public:{get:{"v1/symbols":5,"v1/symbols/details/{symbol}":5,"v1/staking/rates":5,"v1/pubticker/{symbol}":5,"v2/ticker/{symbol}":5,"v2/candles/{symbol}/{timeframe}":5,"v1/trades/{symbol}":5,"v1/auction/{symbol}":5,"v1/auction/{symbol}/history":5,"v1/pricefeed":5,"v1/book/{symbol}":5,"v1/earn/rates":5}},private:{post:{"v1/staking/unstake":1,"v1/staking/stake":1,"v1/staking/rewards":1,"v1/staking/history":1,"v1/order/new":1,"v1/order/cancel":1,"v1/wrap/{symbol}":1,"v1/order/cancel/session":1,"v1/order/cancel/all":1,"v1/order/status":1,"v1/orders":1,"v1/mytrades":1,"v1/notionalvolume":1,"v1/tradevolume":1,"v1/clearing/new":1,"v1/clearing/status":1,"v1/clearing/cancel":1,"v1/clearing/confirm":1,"v1/balances":1,"v1/balances/staking":1,"v1/notionalbalances/{currency}":1,"v1/transfers":1,"v1/addresses/{network}":1,"v1/deposit/{network}/newAddress":1,"v1/deposit/{currency}/newAddress":1,"v1/withdraw/{currency}":1,"v1/account/transfer/{currency}":1,"v1/payments/addbank":1,"v1/payments/methods":1,"v1/payments/sen/withdraw":1,"v1/balances/earn":1,"v1/earn/interest":1,"v1/earn/history":1,"v1/approvedAddresses/{network}/request":1,"v1/approvedAddresses/account/{network}":1,"v1/approvedAddresses/{network}/remove":1,"v1/account":1,"v1/account/create":1,"v1/account/list":1,"v1/heartbeat":1,"v1/roles":1}}},precisionMode:d.kb,fees:{trading:{taker:.004,maker:.002}},httpExceptions:{400:n.BadRequest,403:n.PermissionDenied,404:n.OrderNotFound,406:n.InsufficientFunds,429:n.RateLimitExceeded,500:n.ExchangeError,502:n.ExchangeNotAvailable,503:n.OnMaintenance},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1hr","6h":"6hr","1d":"1day"},exceptions:{exact:{AuctionNotOpen:n.BadRequest,ClientOrderIdTooLong:n.BadRequest,ClientOrderIdMustBeString:n.BadRequest,ConflictingOptions:n.BadRequest,EndpointMismatch:n.BadRequest,EndpointNotFound:n.BadRequest,IneligibleTiming:n.BadRequest,InsufficientFunds:n.InsufficientFunds,InvalidJson:n.BadRequest,InvalidNonce:n.InvalidNonce,InvalidApiKey:n.AuthenticationError,InvalidOrderType:n.InvalidOrder,InvalidPrice:n.InvalidOrder,InvalidQuantity:n.InvalidOrder,InvalidSide:n.InvalidOrder,InvalidSignature:n.AuthenticationError,InvalidSymbol:n.BadRequest,InvalidTimestampInPayload:n.BadRequest,Maintenance:n.OnMaintenance,MarketNotOpen:n.InvalidOrder,MissingApikeyHeader:n.AuthenticationError,MissingOrderField:n.InvalidOrder,MissingRole:n.AuthenticationError,MissingPayloadHeader:n.AuthenticationError,MissingSignatureHeader:n.AuthenticationError,NoSSL:n.AuthenticationError,OptionsMustBeArray:n.BadRequest,OrderNotFound:n.OrderNotFound,RateLimit:n.RateLimitExceeded,System:n.ExchangeError,UnsupportedOption:n.BadRequest},broad:{"The Gemini Exchange is currently undergoing maintenance.":n.OnMaintenance,"We are investigating technical issues with the Gemini Exchange.":n.ExchangeNotAvailable,"Internal Server Error":n.ExchangeNotAvailable}},options:{fetchMarketsMethod:"fetch_markets_from_api",fetchMarketFromWebRetries:10,fetchMarketsFromAPI:{fetchDetailsForAllSymbols:!1,quoteCurrencies:["USDT","GUSD","USD","DAI","EUR","GBP","SGD","BTC","ETH","LTC","BCH"]},fetchMarkets:{webApiEnable:!0,webApiRetries:10},fetchUsdtMarkets:["btcusdt","ethusdt"],fetchCurrencies:{webApiEnable:!0,webApiRetries:5,webApiMuteFailure:!0},fetchTickerMethod:"fetchTickerV1",networks:{BTC:"bitcoin",ERC20:"ethereum",BCH:"bitcoincash",LTC:"litecoin",ZEC:"zcash",FIL:"filecoin",DOGE:"dogecoin",XTZ:"tezos",AVAXX:"avalanche",SOL:"solana",ATOM:"cosmos",DOT:"polkadot"},nonce:"milliseconds",conflictingMarkets:{paxgusd:{base:"PAXG",quote:"USD"}}},features:{default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:500,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:void 0}},spot:{extends:"default"},swap:{linear:{extends:"default"},inverse:void 0},future:{linear:void 0,inverse:void 0}}})}async fetchCurrencies(e={}){return await this.fetchCurrenciesFromWeb(e)}async fetchCurrenciesFromWeb(e={}){let t=await this.fetchWebEndpoint("fetchCurrencies","webExchangeGet",!0,'="currencyData">',"<\/script>");if(void 0===t)return;let i={};this.options.tradingPairs=this.safeList(t,"tradingPairs");let s=this.safeValue(t,"currencies",[]);for(let e=0;e<s.length;e++){let t;let r=s[e],a=this.safeString(r,0),n=this.safeCurrencyCode(a),o=this.safeString(r,7)?"fiat":"crypto",h=this.parseNumber(this.parsePrecision(this.safeString(r,5))),d={},l=this.safeString(r,9);void 0!==l&&(t=this.networkIdToCode(l)),void 0!==t&&(d[t]={info:r,id:l,network:t,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:h,limits:{deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}),i[n]={info:r,id:a,code:n,name:this.safeString(r,1),active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,type:o,precision:h,limits:{deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},networks:d}}return i}async fetchMarkets(e={}){if("fetch_markets_from_web"===this.safeValue(this.options,"fetchMarketsMethod","fetch_markets_from_api")){let t=[];t.push(this.fetchMarketsFromWeb(e)),t.push(this.fetchUSDTMarkets(e));let i=await Promise.all(t);return this.arrayConcat(i[0],i[1])}return await this.fetchMarketsFromAPI(e)}async fetchMarketsFromWeb(e={}){let t=await this.fetchWebEndpoint("fetchMarkets","webGetRestApi",!1,'<h1 id="symbols-and-minimums">Symbols and minimums</h1>'),i=this.id+" fetchMarketsFromWeb() the API doc HTML markup has changed, breaking the parser of order limits and precision info for markets.",s=t.split("tbody>");if(s.length<2)throw new n.NotSupported(i);let r=s[1].split("\n<tr>\n"),a=r.length;if(a<2)throw new n.NotSupported(i);let o=[];for(let e=1;e<a;e++){let t=r[e],s=t.split("</td>\n");if(s.length<5)throw new n.NotSupported(i);let a=s[0].replace("<td>","");a=a.replace("*","");let h=s[1].replace("<td>","").split(" "),d=this.safeNumber(h,0),l=s[2].replace("<td>","").split(" "),c=a.length-0,u=c-3,f=s[3].replace("<td>","").split(" "),p=this.safeStringLower(f,1,a.slice(u,c)),m=this.safeStringLower(l,1,a.replace(p,"")),g=this.safeCurrencyCode(m),y=this.safeCurrencyCode(p);o.push({id:a,symbol:g+"/"+y,base:g,quote:y,settle:void 0,baseId:m,quoteId:p,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(l,0),price:this.safeNumber(f,0)},limits:{leverage:{min:void 0,max:void 0},amount:{min:d,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:t})}return o}parseMarketActive(e){return void 0===e||this.safeBool({open:!0,closed:!1,cancel_only:!0,post_only:!0,limit_only:!0},e,!0)}async fetchUSDTMarkets(e={}){if("test"in this.urls)return[];let t=this.safeValue(this.options,"fetchUsdtMarkets",[]),i=[];for(let s=0;s<t.length;s++){let r={symbol:t[s]},a=await this.publicGetV1SymbolsDetailsSymbol(this.extend(r,e));i.push(this.parseMarket(a))}return i}async fetchMarketsFromAPI(e={}){let t=await this.publicGetV1Symbols(e),i=[],s=this.safeDict(this.options,"fetchMarketsFromAPI",{}),r=[];for(let e=0;e<t.length;e++)"efilfil"!==t[e]&&r.push(t[e]);if(this.safeBool(s,"fetchDetailsForAllSymbols",!1)){let t=[];for(let i=0;i<r.length;i++){let s={symbol:r[i]};t.push(this.publicGetV1SymbolsDetailsSymbol(this.extend(s,e)))}let s=await Promise.all(t);for(let e=0;e<s.length;e++)i.push(this.parseMarket(s[e]))}else{let e=this.safeList(this.options,"tradingPairs");if(void 0!==e){let t=this.indexBy(e,0);for(let e=0;e<r.length;e++){let s=r[e],a=this.safeList(t,s.toUpperCase());void 0!==a&&i.push(this.parseMarket(a))}}else for(let e=0;e<r.length;e++)i.push(this.parseMarket(r[e]))}return i}parseMarket(e){let t,i,s,r,a,n,o,h,d,l,c;let u=!1,f="string"==typeof e,p=Array.isArray(e);if(f||p){f?t=e:(t=this.safeStringLower(e,0),a=this.parseNumber(this.parsePrecision(this.safeString(e,1))),n=this.parseNumber(this.parsePrecision(this.safeString(e,2))),o=this.safeNumber(e,3));let h=t.toUpperCase(),d=h.indexOf("PERP")>=0,l=h.replace("PERP",""),c=this.safeDict(this.options,"conflictingMarkets",{}),u=l.toLowerCase();if(u in c){let e=c[u];i=e.base,s=e.quote,d&&(r=e.quote)}else{let e=this.handleOption("fetchMarketsFromAPI","quoteCurrencies",[]);for(let t=0;t<e.length;t++){let a=e[t];if(l.endsWith(a)){let e=this.parseToInt(-1*a.length);i=l.slice(0,e),s=a,d&&(r=a);break}}}}else t=this.safeStringLower(e,"symbol"),n=this.safeNumber(e,"tick_size"),a=this.safeNumber(e,"quote_increment"),o=this.safeNumber(e,"min_order_size"),h=this.parseMarketActive(this.safeString(e,"status")),i=this.safeString(e,"base_currency"),s=this.safeString(e,"quote_currency"),r=this.safeString(e,"contract_price_currency");let m=this.safeCurrencyCode(i),g=this.safeCurrencyCode(s),y=this.safeCurrencyCode(r),v=m+"/"+g;return void 0!==r&&(v=v+":"+y,u=!0,d=a,l=!0,c=!1),{id:t,symbol:v,base:m,quote:g,settle:y,baseId:i,quoteId:s,settleId:r,type:u?"swap":"spot",spot:!u,margin:!1,swap:u,future:!1,option:!1,active:h,contract:u,linear:l,inverse:c,contractSize:d,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:a,amount:n},limits:{leverage:{min:void 0,max:void 0},amount:{min:o,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit_bids=t,r.limit_asks=t);let a=await this.publicGetV1BookSymbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}async fetchTickerV1(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetV1PubtickerSymbol(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickerV2(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetV2TickerSymbol(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickerV1AndV2(e,t={}){let i=this.fetchTickerV1(e,t),s=this.fetchTickerV2(e,t),[r,a]=await Promise.all([i,s]);return this.deepExtend(r,{open:a.open,high:a.high,low:a.low,change:a.change,percentage:a.percentage,average:a.average,info:a.info})}async fetchTicker(e,t={}){let i=this.safeValue(this.options,"fetchTickerMethod","fetchTickerV1");return"fetchTickerV1"===i?await this.fetchTickerV1(e,t):"fetchTickerV2"===i?await this.fetchTickerV2(e,t):await this.fetchTickerV1AndV2(e,t)}parseTicker(e,t){let i,s,r;let a=this.safeValue(e,"volume",{}),n=this.safeInteger(a,"timestamp"),o=this.safeStringLower(e,"pair");t=this.safeMarket(o,t),void 0!==o&&void 0===t&&(7==o.length-0?(s=o.slice(0,4),r=o.slice(4,7)):(s=o.slice(0,3),r=o.slice(3,6)),i=this.safeCurrencyCode(s)+"/"+this.safeCurrencyCode(r)),void 0===i&&void 0!==t&&(i=t.symbol,s=this.safeStringUpper(t,"baseId"),r=this.safeStringUpper(t,"quoteId"));let h=this.safeString(e,"price"),d=this.safeString2(e,"last","close",h),l=this.safeString(e,"percentChange24h"),c=this.safeString(e,"open"),u=this.safeString(a,s),f=this.safeString(a,r);return this.safeTicker({symbol:i,timestamp:n,datetime:this.iso8601(n),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:c,close:d,last:d,previousClose:void 0,change:void 0,percentage:l,average:void 0,baseVolume:u,quoteVolume:f,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetV1Pricefeed(t);return this.parseTickers(i,e)}parseTrade(e,t){let i=this.safeInteger(e,"timestampms"),s=this.safeString(e,"tid"),r=this.safeString(e,"order_id"),a=this.safeString(e,"fee_currency"),n=this.safeCurrencyCode(a),o={cost:this.safeString(e,"fee_amount"),currency:n},h=this.safeString(e,"price"),d=this.safeString(e,"amount"),l=this.safeStringLower(e,"type"),c=this.safeSymbol(void 0,t);return this.safeTrade({id:s,order:r,info:e,timestamp:i,datetime:this.iso8601(i),symbol:c,type:void 0,side:l,takerOrMaker:void 0,price:h,cost:void 0,amount:d,fee:o},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit_trades=Math.min(i,500)),void 0!==t&&(a.timestamp=t);let n=await this.publicGetV1TradesSymbol(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.total=this.safeString(s,"amount"),t[a]=n}return this.safeBalance(t)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostV1Notionalvolume(e),i=this.safeString(t,"api_maker_fee_bps"),s=this.safeString(t,"api_taker_fee_bps"),a=r.Y.stringDiv(i,"10000"),n=r.Y.stringDiv(s,"10000"),o=this.parseNumber(a),h=this.parseNumber(n),d={};for(let e=0;e<this.symbols.length;e++){let i=this.symbols[e];d[i]={info:t,symbol:i,maker:o,taker:h,percentage:!0,tierBased:!0}}return d}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostV1Balances(e);return this.parseBalance(t)}parseOrder(e,t){let i=this.safeInteger(e,"timestampms"),s=this.safeString(e,"original_amount"),r=this.safeString(e,"remaining_amount"),a=this.safeString(e,"executed_amount"),n="closed";e.is_live&&(n="open"),e.is_cancelled&&(n="canceled");let o=this.safeString(e,"price"),h=this.safeString(e,"avg_execution_price"),d=this.safeString(e,"type");d="exchange limit"===d?"limit":"market buy"===d||"market sell"===d?"market":e.type;let l=this.safeString(e,"symbol"),c=this.safeSymbol(l,t),u=this.safeString(e,"order_id"),f=this.safeStringLower(e,"side"),p=this.safeString(e,"client_order_id"),m=this.safeValue(e,"options",[]),g=this.safeString(m,0),y="GTC",v=!1;return void 0!==g&&("immediate-or-cancel"===g?y="IOC":"fill-or-kill"===g?y="FOK":"maker-or-cancel"===g&&(y="PO",v=!0)),this.safeOrder({id:u,clientOrderId:p,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:n,symbol:c,type:d,timeInForce:y,postOnly:v,side:f,price:o,triggerPrice:void 0,average:h,cost:void 0,amount:s,filled:a,remaining:r,fee:void 0,trades:void 0},t)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostV1OrderStatus(this.extend({order_id:e},i));return this.parseOrder(s)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=await this.privatePostV1Orders(s);return void 0!==e&&(r=this.market(e)),this.parseOrders(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){if(await this.loadMarkets(),"limit"!==t)throw new n.ExchangeError(this.id+" createOrder() allows limit orders only");let o=this.safeString2(a,"clientOrderId","client_order_id");a=this.omit(a,["clientOrderId","client_order_id"]),void 0===o&&(o=this.milliseconds().toString());let h=this.market(e),d=this.amountToPrecision(e,s),l=this.priceToPrecision(e,r),c={client_order_id:o,symbol:h.id,amount:d,price:l,side:i,type:"exchange limit"};t=this.safeString(a,"type",t),a=this.omit(a,"type");let u=this.safeStringN(a,["triggerPrice","stop_price","stopPrice"]);if(a=this.omit(a,["triggerPrice","stop_price","stopPrice","type"]),"stopLimit"===t)throw new n.ArgumentsRequired(this.id+" createOrder() requires a triggerPrice parameter or a stop_price parameter for "+t+" orders");if(void 0!==u)c.stop_price=this.priceToPrecision(e,u),c.type="exchange stop limit";else{let e=this.safeString(a,"timeInForce");a=this.omit(a,"timeInForce"),void 0!==e&&("IOC"===e||"immediate-or-cancel"===e?c.options=["immediate-or-cancel"]:"FOK"===e||"fill-or-kill"===e?c.options=["fill-or-kill"]:"PO"===e&&(c.options=["maker-or-cancel"]));let t=this.safeBool(a,"postOnly",!1);a=this.omit(a,"postOnly"),t&&(c.options=["maker-or-cancel"]);let i=this.safeString(a,"options");void 0!==i&&(c.options=[i])}let f=await this.privatePostV1OrderNew(this.extend(c,a));return this.parseOrder(f)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostV1OrderCancel(this.extend({order_id:e},i));return this.parseOrder(s)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit_trades=i),void 0!==t&&(a.timestamp=this.parseToInt(t/1e3));let o=await this.privatePostV1Mytrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o={currency:a.id,amount:t,address:i},h=await this.privatePostV1WithdrawCurrency(this.extend(o,r));if("error"===this.safeString(h,"result"))throw new n.ExchangeError(this.id+" withdraw() failed: "+this.json(h));return this.parseTransaction(h,a)}nonce(){return"milliseconds"===this.safeString(this.options,"nonce","milliseconds")?this.milliseconds():this.seconds()}async fetchDepositsWithdrawals(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==i&&(r.limit_transfers=i),void 0!==t&&(r.timestamp=t);let a=await this.privatePostV1Transfers(this.extend(r,s));return this.parseTransactions(a)}parseTransaction(e,t){let i;let s=this.safeInteger(e,"timestampms"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=this.safeString(e,"destination"),o=this.safeStringLower(e,"type"),h=this.safeString(e,"status"),d=this.safeNumber(e,"feeAmount");return void 0!==d&&(i={cost:d,currency:a}),{info:e,id:this.safeString2(e,"eid","withdrawalId"),txid:this.safeString(e,"txHash"),timestamp:s,datetime:this.iso8601(s),network:void 0,address:n,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:o,amount:this.safeNumber(e,"amount"),currency:a,status:this.parseTransactionStatus(h),updated:void 0,internal:void 0,comment:this.safeString(e,"message"),fee:i}}parseTransactionStatus(e){return this.safeString({Advanced:"ok",Complete:"ok"},e,e)}parseDepositAddress(e,t){let i=this.safeString(e,"address");return{currency:this.safeCurrencyCode(void 0,t),network:void 0,address:i,tag:void 0,info:e}}async fetchDepositAddress(e,t={}){let i;await this.loadMarkets();let s=await this.fetchDepositAddressesByNetwork(e,t);[i,t]=this.handleNetworkCodeAndParams(t);let r=this.indexBy(this.safeValue(s,i),"currency");return this.safeValue(r,e)}async fetchDepositAddressesByNetwork(e,t={}){let i;if(await this.loadMarkets(),e=this.currency(e).code,[i,t]=this.handleNetworkCodeAndParams(t),void 0===i)throw new n.ArgumentsRequired(this.id+" fetchDepositAddresses() requires a network parameter");let s=this.networkCodeToId(i),r=await this.privatePostV1AddressesNetwork(this.extend({network:s},t)),a=this.parseDepositAddresses(r,[e],!1,{network:i,currency:e});return this.groupBy(a,"network")}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),h=this.omit(s,this.extractParams(e));if("private"===t){if(this.checkRequiredCredentials(),0>this.apiKey.indexOf("account"))throw new n.AuthenticationError(this.id+" sign() requires an account-key, master-keys are not-supported");let e=this.nonce().toString(),t=this.extend({request:o,nonce:e},h),i=this.json(t);i=this.stringToBase64(i);let s=this.hmac(this.encode(i),this.encode(this.secret),A.qt);r={"Content-Type":"text/plain","X-GEMINI-APIKEY":this.apiKey,"X-GEMINI-PAYLOAD":i,"X-GEMINI-SIGNATURE":s}}else Object.keys(h).length&&(o+="?"+this.urlencode(h));return o=this.urls.api[t]+o,("POST"===i||"DELETE"===i)&&(a=this.json(h)),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o){if("string"==typeof a){let e=this.id+" "+a;this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}return}if("error"===this.safeString(o,"result")){let e=this.safeString(o,"reason"),t=this.safeString(o,"message"),i=this.id+" "+t;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new n.ExchangeError(i)}}async createDepositAddress(e,t={}){await this.loadMarkets();let i={currency:this.currency(e).id},s=await this.privatePostV1DepositCurrencyNewAddress(this.extend(i,t)),r=this.safeString(s,"address");return this.checkAddress(r),{currency:e,address:r,tag:void 0,info:s}}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={timeframe:this.safeString(this.timeframes,t,t),symbol:a.id},o=await this.publicGetV2CandlesSymbolTimeframe(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}}var tH=i(9825);class tG extends s.k{}let tU=tG;class tW extends tU{describe(){return this.deepExtend(super.describe(),{id:"hollaex",name:"HollaEx",countries:["KR"],rateLimit:250,version:"v2",pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketSellOrder:!0,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:"emulated",fetchDepositAddresses:!0,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","1h":"1h","4h":"4h","1d":"1d","1w":"1w"},urls:{logo:"https://user-images.githubusercontent.com/1294454/75841031-ca375180-5ddd-11ea-8417-b975674c23cb.jpg",test:{rest:"https://api.sandbox.hollaex.com"},api:{rest:"https://api.hollaex.com"},www:"https://hollaex.com",doc:"https://apidocs.hollaex.com",referral:"https://pro.hollaex.com/signup?affiliation_code=QSWA6G"},precisionMode:d.kb,requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:{health:1,constants:1,kit:1,tiers:1,ticker:1,tickers:1,orderbook:1,orderbooks:1,trades:1,chart:1,charts:1,minicharts:1,"oracle/prices":1,"quick-trade":1,"udf/config":1,"udf/history":1,"udf/symbols":1}},private:{get:{user:1,"user/balance":1,"user/deposits":1,"user/withdrawals":1,"user/withdrawal/fee":1,"user/trades":1,orders:1,order:1},post:{"user/withdrawal":1,order:1},delete:{"order/all":1,order:1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:.001,maker:.001}},exceptions:{broad:{"Invalid token":n.AuthenticationError,"Order not found":n.OrderNotFound,"Insufficient balance":n.InsufficientFunds,"Error 1001 - Order rejected. Order could not be submitted as this order was set to a post only order.":n.OrderImmediatelyFillable},exact:{400:n.BadRequest,403:n.AuthenticationError,404:n.BadRequest,405:n.BadRequest,410:n.BadRequest,429:n.BadRequest,500:n.NetworkError,503:n.NetworkError}},options:{"api-expires":this.parseToInt(this.timeout/1e3),networks:{BTC:"btc",ETH:"eth",ERC20:"eth",TRX:"trx",TRC20:"trx",XRP:"xrp",XLM:"xlm",BNB:"bnb",MATIC:"matic"}}})}async fetchMarkets(e={}){let t=await this.publicGetConstants(e),i=this.safeValue(t,"pairs",{}),s=Object.keys(i),r=[];for(let e=0;e<s.length;e++){let t=i[s[e]],a=this.safeString(t,"pair_base"),n=this.safeString(t,"pair_2"),o=this.commonCurrencyCode(a.toUpperCase()),h=this.commonCurrencyCode(n.toUpperCase());r.push({id:this.safeString(t,"name"),symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"active"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"increment_size"),price:this.safeNumber(t,"increment_price")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_size"),max:this.safeNumber(t,"max_size")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:void 0,max:void 0}},created:this.parse8601(this.safeString(t,"created_at")),info:t})}return r}async fetchCurrencies(e={}){let t=await this.publicGetConstants(e),i=this.safeValue(t,"coins",{}),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){let t=i[s[e]],a=this.safeString(t,"symbol"),n=this.safeInteger(t,"id"),o=this.safeCurrencyCode(a),h=this.safeString(t,"fullname"),d=this.safeValue(t,"allow_deposit"),l=this.safeValue(t,"allow_withdrawal"),c=this.safeValue(t,"active")&&d&&l,u=this.safeNumber(t,"withdrawal_fee"),f=this.safeValue(t,"withdrawal_limits",[]);r[o]={id:a,numericId:n,code:o,info:t,name:h,active:c,deposit:d,withdraw:l,fee:u,precision:this.safeNumber(t,"increment_unit"),limits:{amount:{min:this.safeNumber(t,"min"),max:this.safeNumber(t,"max")},withdraw:{min:void 0,max:this.safeValue(f,0)}},networks:{}}}return r}async fetchOrderBooks(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbooks(i),r={},a=Object.keys(s);for(let e=0;e<a.length;e++){let t=a[e],i=s[t],n=this.safeSymbol(t,void 0,"-"),o=this.parse8601(this.safeString(i,"timestamp"));r[n]=this.parseOrderBook(s[t],n,o)}return r}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id},a=await this.publicGetOrderbook(this.extend(r,i)),n=this.safeValue(a,s.id),o=this.parse8601(this.safeString(n,"timestamp"));return this.parseOrderBook(n,s.symbol,o)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetTickers(t);return this.parseTickers(i,e)}parseTickers(e,t,i={}){let s={},r=Object.keys(e);for(let t=0;t<r.length;t++){let a=r[t],n=e[a],o=this.safeString(n,"symbol",a),h=this.safeMarket(o,void 0,"-");s[h.symbol]=this.extend(this.parseTicker(n,h),i)}return this.filterByArrayTickers(s,"symbol",t)}parseTicker(e,t){let i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.parse8601(this.safeString2(e,"time","timestamp")),a=this.safeString(e,"close");return this.safeTicker({symbol:s,info:e,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:this.safeString(e,"last",a),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id},n=await this.publicGetTrades(this.extend(a,s)),o=this.safeList(n,r.id,[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i;let s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t,"-")).symbol,a=this.safeString(e,"timestamp"),n=this.parse8601(a),o=this.safeString(e,"side"),h=this.safeString(e,"order_id"),d=this.safeString(e,"price"),l=this.safeString(e,"size"),c=this.safeString(e,"fee");return void 0!==c&&(i={cost:c,currency:t.quote}),this.safeTrade({info:e,id:void 0,timestamp:n,datetime:a,symbol:r,order:h,type:void 0,side:o,takerOrMaker:void 0,price:d,amount:l,cost:void 0,fee:i},t)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.publicGetTiers(e),i=this.safeValue(t,"1",{}),s=this.safeValue(i,"fees",{}),a=this.safeValue(s,"maker",{}),n=this.safeValue(s,"taker",{}),o={};for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e],i=this.market(t),h=this.safeString(a,i.id),d=this.safeString(n,i.id);o[t]={info:s,symbol:t,maker:this.parseNumber(r.Y.stringDiv(h,"100")),taker:this.parseNumber(r.Y.stringDiv(d,"100")),percentage:!0,tierBased:!0}}return o}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={symbol:a.id,resolution:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t);if(void 0===i){void 0===s&&(s=1e3);let e=this.seconds(),t=e-o*s;n.to=e,n.from=t}else if(void 0===s)n.from=this.parseToInt(i/1e3),n.to=this.seconds();else{let e=this.parseToInt(i/1e3);n.from=e,n.to=this.sum(e,o*s)}let h=await this.publicGetChart(this.extend(n,r));return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}parseBalance(e){let t=this.parse8601(this.safeString(e,"updated_at")),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=Object.keys(this.currencies_by_id);for(let t=0;t<s.length;t++){let r=s[t],a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(e,r+"_available"),n.total=this.safeString(e,r+"_balance"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserBalance(e);return this.parseBalance(t)}async fetchOpenOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrder(this.extend({order_id:e},i));return this.parseOrder(s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({open:!0},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({open:!1},s))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrder(this.extend({order_id:e},i));if(void 0===s)throw new n.OrderNotFound(this.id+" fetchOrder() could not find order id "+e);return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.start_date=this.iso8601(t)),void 0!==i&&(a.limit=i);let n=await this.privateGetOrders(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseOrders(o,r,t,i)}parseOrderStatus(e){return this.safeString({new:"open",pfilled:"open",filled:"closed",canceled:"canceled"},e,e)}parseOrder(e,t){let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,"-"),r=this.safeString(e,"id"),a=this.parse8601(this.safeString(e,"created_at")),n=this.safeString(e,"type"),o=this.safeString(e,"side"),h=this.safeString(e,"price"),d=this.safeString(e,"size"),l=this.safeString(e,"filled"),c=this.parseOrderStatus(this.safeString(e,"status")),u=this.safeValue(e,"meta",{}),f=this.safeBool(u,"post_only",!1);return this.safeOrder({id:r,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,status:c,symbol:s,type:n,timeInForce:void 0,postOnly:f,side:o,price:h,triggerPrice:this.safeString(e,"stop"),amount:d,filled:l,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=parseFloat(this.amountToPrecision(e,s)),h={symbol:n.id,side:i,size:this.normalizeNumberIfNeeded(o),type:t},d=this.safeNumberN(a,["triggerPrice","stopPrice","stop"]),l=this.safeValue(a,"meta",{}),c=this.safeBool(l,"post_only",!1),u="market"===t,f=this.isPostOnly(u,c,a);if(!u){let t=parseFloat(this.priceToPrecision(e,r));h.price=this.normalizeNumberIfNeeded(t)}void 0!==d&&(h.stop=this.normalizeNumberIfNeeded(parseFloat(this.priceToPrecision(e,d)))),f&&(h.meta={post_only:!0}),a=this.omit(a,["postOnly","timeInForce","stopPrice","triggerPrice","stop"]);let p=await this.privatePostOrder(this.extend(h,a));return this.parseOrder(p,n)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteOrder(this.extend({order_id:e},i));return this.parseOrder(s)}async cancelAllOrders(e,t={}){let i;if(void 0===e)throw new n.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();let s={};i=this.market(e),s.symbol=i.id;let r=await this.privateDeleteOrderAll(this.extend(s,t));return this.parseOrders(r,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.start_date=this.iso8601(t));let n=await this.privateGetUserTrades(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}parseDepositAddress(e,t){let i,s=this.safeString(e,"address");if(void 0!==s){let e=s.split(":");s=this.safeString(e,0),i=this.safeString(e,1)}this.checkAddress(s);let r=this.safeString(e,"currency");t=this.safeCurrency(r,t);let a=this.safeString(e,"network");return{info:e,currency:t.code,network:a,address:s,tag:i}}async fetchDepositAddresses(e,t={}){await this.loadMarkets();let i=this.safeString(t,"network");t=this.omit(t,"network");let s=await this.privateGetUser(t),r=this.safeValue(s,"wallet",[]),a=void 0===i?r:this.filterBy(r,"network",i);return this.parseDepositAddresses(a,e)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.start_date=this.iso8601(t));let n=await this.privateGetUserDeposits(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i)}async fetchWithdrawal(e,t,i={}){let s;await this.loadMarkets();let r={transaction_id:e};void 0!==t&&(s=this.currency(t),r.currency=s.id);let a=await this.privateGetUserWithdrawals(this.extend(r,i)),n=this.safeValue(a,"data",[]),o=this.safeDict(n,0,{});return this.parseTransaction(o,s)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.start_date=this.iso8601(t));let n=await this.privateGetUserWithdrawals(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i)}parseTransaction(e,t){let i,s,r,a;let n=this.safeString(e,"id"),o=this.safeString(e,"transaction_id"),h=this.parse8601(this.safeString(e,"created_at")),d=this.parse8601(this.safeString(e,"updated_at")),l=this.safeString(e,"type"),c=this.safeNumber(e,"amount"),u=this.safeString(e,"address");if(void 0!==u){let e=u.split(":");u=this.safeString(e,0),s=this.safeString(e,1),i=u,r=s}let f=this.safeString(e,"currency");t=this.safeCurrency(f,t);let p=this.safeValue(e,"status"),m=this.safeValue(e,"dismissed"),g=this.safeValue(e,"rejected");p=p?"ok":m?"canceled":g?"failed":"pending";let y=this.safeString(e,"fee_coin"),v=this.safeCurrencyCode(y,t),b=this.safeNumber(e,"fee");return void 0!==b&&(a={currency:v,cost:b}),{info:e,id:n,txid:o,timestamp:h,datetime:this.iso8601(h),network:void 0,addressFrom:void 0,address:u,addressTo:i,tagFrom:void 0,tag:s,tagTo:r,type:l,amount:c,currency:t.code,status:p,updated:d,comment:this.safeString(e,"message"),internal:void 0,fee:a}}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e);void 0!==s&&(i+=":"+s);let o=this.safeString(r,"network");if(void 0===o)throw new n.ArgumentsRequired(this.id+" withdraw() requires a network parameter");r=this.omit(r,"network");let h={currency:a.id,amount:t,address:i,network:this.networkCodeToId(o,e)},d=await this.privatePostUserWithdrawal(this.extend(h,r));return this.parseTransaction(d,a)}parseDepositWithdrawFee(e,t){let i={info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}};this.safeValue(e,"allow_withdrawal")&&(i.withdraw={fee:this.safeNumber(e,"withdrawal_fee"),percentage:!1});let s=this.safeValue(e,"withdrawal_fees");if(void 0!==s){let e=Object.keys(s),t=e.length;for(let r=0;r<t;r++){let t=e[r],a=s[t],n=this.safeString(a,"symbol"),o=this.safeCurrencyCode(n),h=this.networkIdToCode(t,o).toUpperCase(),d=this.safeNumber(a,"value");i.networks[h]={deposit:void 0,withdraw:d}}}return i}async fetchDepositWithdrawFees(e,t={}){let i=await this.publicGetConstants(t),s=this.safeList(i,"coins");return this.parseDepositWithdrawFees(s,e,"symbol")}normalizeNumberIfNeeded(e){return this.isRoundNumber(e)&&(e=parseInt(e)),e}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e));e="/"+this.version+"/"+this.implodeParams(e,s),("GET"===i||"DELETE"===i)&&Object.keys(n).length&&(e+="?"+this.urlencode(n));let o=this.urls.api.rest+e;if("private"===t){this.checkRequiredCredentials();let t=this.safeInteger2(this.options,"api-expires","expires",this.parseToInt(this.timeout/1e3)),s=this.sum(this.seconds(),t).toString(),o=i+e+s;r={"api-key":this.apiKey,"api-expires":s},"POST"===i&&(r["Content-type"]="application/json",Object.keys(n).length&&(o+=a=this.json(n)));let h=this.hmac(this.encode(o),this.encode(this.secret),l.s);r["api-signature"]=h}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,h){if(void 0!==n&&e>=400&&e<=503){let t=this.id+" "+a,i=this.safeString(n,"message");this.throwBroadlyMatchedException(this.exceptions.broad,i,t);let s=e.toString();this.throwExactlyMatchedException(this.exceptions.exact,s,t)}}}var tj=i(2526);class tK extends tj.A{describe(){return this.deepExtend(super.describe(),{id:"huobi",alias:!0})}}class tz extends s.k{}let tY=tz;class tX extends tY{describe(){return this.deepExtend(super.describe(),{id:"huobijp",name:"Huobi Japan",countries:["JP"],rateLimit:100,userAgent:this.userAgents.chrome39,certified:!1,version:"v1",hostname:"api-cloud.bittrade.co.jp",pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingLimits:!0,fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","4h":"4hour","1d":"1day","1w":"1week","1M":"1mon","1y":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/85734211-85755480-b705-11ea-8b35-0b7f1db33a2f.jpg",api:{market:"https://{hostname}",public:"https://{hostname}",private:"https://{hostname}",v2Public:"https://{hostname}",v2Private:"https://{hostname}"},www:"https://www.huobi.co.jp",referral:"https://www.huobi.co.jp/register/?invite_code=znnq3",doc:"https://api-doc.huobi.co.jp",fees:"https://www.huobi.co.jp/support/fee"},api:{v2Public:{get:{"reference/currencies":1,"market-status":1}},v2Private:{get:{"account/ledger":1,"account/withdraw/quota":1,"account/withdraw/address":1,"account/deposit/address":1,"account/repayment":5,"reference/transact-fee-rate":1,"account/asset-valuation":.2,"point/account":5,"sub-user/user-list":1,"sub-user/user-state":1,"sub-user/account-list":1,"sub-user/deposit-address":1,"sub-user/query-deposit":1,"user/api-key":1,"user/uid":1,"algo-orders/opening":1,"algo-orders/history":1,"algo-orders/specific":1,"c2c/offers":1,"c2c/offer":1,"c2c/transactions":1,"c2c/repayment":1,"c2c/account":1,"etp/reference":1,"etp/transactions":5,"etp/transaction":5,"etp/rebalance":1,"etp/limit":1},post:{"account/transfer":1,"account/repayment":5,"point/transfer":5,"sub-user/management":1,"sub-user/creation":1,"sub-user/tradable-market":1,"sub-user/transferability":1,"sub-user/api-key-generation":1,"sub-user/api-key-modification":1,"sub-user/api-key-deletion":1,"sub-user/deduct-mode":1,"algo-orders":1,"algo-orders/cancel-all-after":1,"algo-orders/cancellation":1,"c2c/offer":1,"c2c/cancellation":1,"c2c/cancel-all":1,"c2c/repayment":1,"c2c/transfer":1,"etp/creation":5,"etp/redemption":5,"etp/{transactId}/cancel":10,"etp/batch-cancel":50}},market:{get:{"history/kline":1,"detail/merged":1,depth:1,trade:1,"history/trade":1,detail:1,tickers:1,etp:1}},public:{get:{"common/symbols":1,"common/currencys":1,"common/timestamp":1,"common/exchange":1,"settings/currencys":1}},private:{get:{"account/accounts":.2,"account/accounts/{id}/balance":.2,"account/accounts/{sub-uid}":1,"account/history":4,"cross-margin/loan-info":1,"margin/loan-info":1,"fee/fee-rate/get":1,"order/openOrders":.4,"order/orders":.4,"order/orders/{id}":.4,"order/orders/{id}/matchresults":.4,"order/orders/getClientOrder":.4,"order/history":1,"order/matchresults":1,"query/deposit-withdraw":1,"margin/loan-orders":.2,"margin/accounts/balance":.2,"cross-margin/loan-orders":1,"cross-margin/accounts/balance":1,"points/actions":1,"points/orders":1,"subuser/aggregate-balance":10,"stable-coin/exchange_rate":1,"stable-coin/quote":1},post:{"account/transfer":1,"futures/transfer":1,"order/batch-orders":.4,"order/orders/place":.2,"order/orders/submitCancelClientOrder":.2,"order/orders/batchCancelOpenOrders":.4,"order/orders/{id}/submitcancel":.2,"order/orders/batchcancel":.4,"dw/withdraw/api/create":1,"dw/withdraw-virtual/{id}/cancel":1,"dw/transfer-in/margin":10,"dw/transfer-out/margin":10,"margin/orders":10,"margin/orders/{id}/repay":10,"cross-margin/transfer-in":1,"cross-margin/transfer-out":1,"cross-margin/orders":1,"cross-margin/orders/{id}/repay":1,"stable-coin/exchange":1,"subuser/transfer":10}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:d.kb,exceptions:{broad:{"contract is restricted of closing positions on API.  Please contact customer service":n.OnMaintenance,maintain:n.OnMaintenance},exact:{"bad-request":n.BadRequest,"base-date-limit-error":n.BadRequest,"api-not-support-temp-addr":n.PermissionDenied,timeout:n.RequestTimeout,"gateway-internal-error":n.ExchangeNotAvailable,"account-frozen-balance-insufficient-error":n.InsufficientFunds,"invalid-amount":n.InvalidOrder,"order-limitorder-amount-min-error":n.InvalidOrder,"order-limitorder-amount-max-error":n.InvalidOrder,"order-marketorder-amount-min-error":n.InvalidOrder,"order-limitorder-price-min-error":n.InvalidOrder,"order-limitorder-price-max-error":n.InvalidOrder,"order-holding-limit-failed":n.InvalidOrder,"order-orderprice-precision-error":n.InvalidOrder,"order-etp-nav-price-max-error":n.InvalidOrder,"order-orderstate-error":n.OrderNotFound,"order-queryorder-invalid":n.OrderNotFound,"order-update-error":n.ExchangeNotAvailable,"api-signature-check-failed":n.AuthenticationError,"api-signature-not-valid":n.AuthenticationError,"base-record-invalid":n.OrderNotFound,"base-symbol-trade-disabled":n.BadSymbol,"base-symbol-error":n.BadSymbol,"system-maintenance":n.OnMaintenance,"invalid symbol":n.BadSymbol,"symbol trade not open now":n.BadSymbol,"invalid-address":n.BadRequest,"base-currency-chain-error":n.BadRequest,"dw-insufficient-balance":n.InsufficientFunds}},options:{defaultNetwork:"ERC20",networks:{ETH:"erc20",TRX:"trc20",HRC20:"hrc20",HECO:"hrc20",HT:"hrc20",ALGO:"algo",OMNI:""},fetchOrdersByStatesMethod:"private_get_order_orders",fetchOpenOrdersMethod:"fetch_open_orders_v1",createMarketBuyOrderRequiresPrice:!0,fetchMarketsMethod:"publicGetCommonSymbols",fetchBalanceMethod:"privateGetAccountAccountsIdBalance",createOrderMethod:"privatePostOrderOrdersPlace",currencyToPrecisionRoundingMode:d.R3,language:"en-US",broker:{id:"AA03022abc"}},commonCurrencies:{GET:"Themis",GTC:"Game.com",HIT:"HitChain",PNT:"Penta",SBTC:"Super Bitcoin",BIFI:"Bitcoin File"}})}async fetchTime(e={}){let t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchTradingLimits(e,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);let i={};for(let s=0;s<e.length;s++){let r=e[s];i[r]=await this.fetchTradingLimitsById(this.marketId(r),t)}return i}async fetchTradingLimitsById(e,t={}){let i=await this.publicGetCommonExchange(this.extend({symbol:e},t));return this.parseTradingLimits(this.safeValue(i,"data",{}))}parseTradingLimits(e,t,i={}){return{info:e,limits:{amount:{min:this.safeNumber(e,"limit-order-must-greater-than"),max:this.safeNumber(e,"limit-order-must-less-than")}}}}costToPrecision(e,t){return this.decimalToPrecision(t,d.R3,this.markets[e].precision.cost,this.precisionMode)}async fetchMarkets(e={}){let t=this.options.fetchMarketsMethod,i=await this[t](e),s=this.safeValue(i,"data",[]);if(s.length<1)throw new n.NetworkError(this.id+" fetchMarkets() returned empty response: "+this.json(s));let a=[];for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"base-currency"),n=this.safeString(t,"quote-currency"),o=this.safeCurrencyCode(i),h=this.safeCurrencyCode(n),d=this.safeString(t,"state"),l=this.safeString(t,"leverage-ratio","1"),c=this.safeString(t,"super-margin-leverage-ratio","1"),u=r.Y.stringGt(l,"1")||r.Y.stringGt(c,"1"),f="OMG"===o?this.parseNumber("0"):this.parseNumber("0.002");a.push({id:i+n,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:i,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:u,swap:!1,future:!1,option:!1,active:"online"===d,contract:!1,linear:void 0,inverse:void 0,taker:f,maker:f,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"price-precision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount-precision"))),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"value-precision")))},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(l),superMax:this.parseNumber(c)},amount:{min:this.safeNumber(t,"min-order-amt"),max:this.safeNumber(t,"max-order-amt")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min-order-value"),max:void 0}},created:void 0,info:t})}return a}parseTicker(e,t){let i,s,r,a;let n=this.safeSymbol(void 0,t),o=this.safeInteger(e,"ts");"bid"in e&&(Array.isArray(e.bid)?(i=this.safeString(e.bid,0),s=this.safeString(e.bid,1)):(i=this.safeString(e,"bid"),s=this.safeString(e,"bidSize"))),"ask"in e&&(Array.isArray(e.ask)?(r=this.safeString(e.ask,0),a=this.safeString(e.ask,1)):(r=this.safeString(e,"ask"),a=this.safeString(e,"askSize")));let h=this.safeString(e,"open"),d=this.safeString(e,"close"),l=this.safeString(e,"amount"),c=this.safeString(e,"vol");return this.safeTicker({symbol:n,timestamp:o,datetime:this.iso8601(o),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:i,bidVolume:s,ask:r,askVolume:a,vwap:void 0,open:h,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:l,quoteVolume:c,info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id,type:"step0"},r=await this.marketGetDepth(this.extend(s,i));if("tick"in r){if(!r.tick)throw new n.BadSymbol(this.id+" fetchOrderBook() returned empty response: "+this.json(r));let t=this.safeValue(r,"tick"),i=this.safeInteger(t,"ts",this.safeInteger(r,"ts")),s=this.parseOrderBook(t,e,i);return s.nonce=this.safeInteger(t,"version"),s}throw new n.ExchangeError(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(r))}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.marketGetDetailMerged(this.extend(s,t)),a=this.parseTicker(r.tick,i),n=this.safeInteger(r,"ts");return a.timestamp=n,a.datetime=this.iso8601(n),a}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.marketGetTickers(t),s=this.safeValue(i,"data",[]),r=this.safeInteger(i,"ts"),a={};for(let e=0;e<s.length;e++){let t=this.safeString(s[e],"symbol"),i=this.safeMarket(t),n=i.symbol,o=this.parseTicker(s[e],i);o.timestamp=r,o.datetime=this.iso8601(r),a[n]=o}return this.filterByArrayTickers(a,"symbol",e)}parseTrade(e,t){let i;let s=this.safeString(e,"symbol"),a=this.safeSymbol(s,t),n=this.safeInteger2(e,"ts","created-at"),o=this.safeString(e,"order-id"),h=this.safeString(e,"direction"),d=this.safeString(e,"type");if(void 0!==d){let e=d.split("-");h=e[0],d=e[1]}let l=this.safeString(e,"role"),c=this.safeString(e,"price"),u=this.safeString2(e,"filled-amount","amount"),f=r.Y.stringMul(c,u),p=this.safeString(e,"filled-fees"),m=this.safeCurrencyCode(this.safeString(e,"fee-currency")),g=this.safeString(e,"filled-points");void 0!==g&&(void 0===p||r.Y.stringEq(p,"0.0"))&&(p=g,m=this.safeCurrencyCode(this.safeString(e,"fee-deduct-currency"))),void 0!==p&&(i={cost:p,currency:m});let y=this.safeString2(e,"trade-id","tradeId"),v=this.safeString(e,"id",y);return this.safeTrade({info:e,id:v,symbol:a,order:o,timestamp:n,datetime:this.iso8601(n),type:d,side:h,takerOrMaker:l,price:c,amount:u,cost:f,fee:i})}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=await this.privateGetOrderOrdersIdMatchresults(this.extend({id:e},r));return this.parseTrades(a.data,void 0,i,s)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.size=i),void 0!==t&&(a["start-time"]=t);let n=await this.privateGetOrderMatchresults(this.extend(a,s));return this.parseTrades(n.data,r,t,i)}async fetchTrades(e,t,i=1e3,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.size=Math.min(i,2e3));let n=await this.marketGetHistoryTrade(this.extend(a,s)),o=this.safeValue(n,"data",[]),h=[];for(let e=0;e<o.length;e++){let t=this.safeValue(o[e],"data",[]);for(let e=0;e<t.length;e++){let i=this.parseTrade(t[e],r);h.push(i)}}return h=this.sortBy(h,"timestamp"),this.filterBySymbolSinceLimit(h,r.symbol,t,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,"id"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"amount")]}async fetchOHLCV(e,t="1m",i,s=1e3,r={}){await this.loadMarkets();let a=this.market(e),n={symbol:a.id,period:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.size=Math.min(s,2e3));let o=await this.marketGetHistoryKline(this.extend(n,r)),h=this.safeList(o,"data",[]);return this.parseOHLCVs(h,a,t,i,s)}async fetchAccounts(e={}){return await this.loadMarkets(),(await this.privateGetAccountAccounts(e)).data}async fetchCurrencies(e={}){let t={language:this.options.language},i=await this.publicGetSettingsCurrencys(this.extend(t,e)),s=this.safeValue(i,"data",[]),r={};for(let e=0;e<s.length;e++){let t=s[e],i=this.safeValue(t,"name"),a=this.safeCurrencyCode(i),n=this.safeValue(t,"deposit-enabled"),o=this.safeValue(t,"withdraw-enabled"),h=this.safeValue(t,"country-disabled"),d=this.safeBool(t,"visible",!1),l=this.safeString(t,"state"),c=d&&n&&o&&"online"===l&&!h,u=this.safeString(t,"display-name"),f=this.parseNumber(this.parsePrecision(this.safeString(t,"withdraw-precision")));r[a]={id:i,code:a,type:"crypto",name:u,active:c,deposit:n,withdraw:o,fee:void 0,precision:f,limits:{amount:{min:f,max:void 0},deposit:{min:this.safeNumber(t,"deposit-min-amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw-min-amount"),max:void 0}},info:t}}return r}parseBalance(e){let t=this.safeValue(e.data,"list",[]),i={info:e};for(let e=0;e<t.length;e++){let s;let r=t[e],a=this.safeString(r,"currency"),n=this.safeCurrencyCode(a);s=n in i?i[n]:this.account(),"trade"===r.type&&(s.free=this.safeString(r,"balance")),"frozen"===r.type&&(s.used=this.safeString(r,"balance")),i[n]=s}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets(),await this.loadAccounts();let t=this.options.fetchBalanceMethod,i={id:this.accounts[0].id},s=await this[t](this.extend(i,e));return this.parseBalance(s)}async fetchOrdersByStates(e,t,i,s,r={}){let a;await this.loadMarkets();let n={states:e};void 0!==t&&(a=this.market(t),n.symbol=a.id);let o=this.safeString(this.options,"fetchOrdersByStatesMethod","private_get_order_orders"),h=await this[o](this.extend(n,r));return this.parseOrders(h.data,a,i,s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrderOrdersId(this.extend({id:e},i)),r=this.safeDict(s,"data");return this.parseOrder(r)}async fetchOrders(e,t,i,s={}){return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled,filled,partial-canceled,canceled",e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){let r=this.safeString(this.options,"fetchOpenOrdersMethod","fetch_open_orders_v1");return await this[r](e,t,i,s)}async fetchOpenOrdersV1(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrdersV1() requires a symbol argument");return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersByStates("filled,partial-canceled,canceled",e,t,i,s)}async fetchOpenOrdersV2(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);let n=this.safeString(s,"account-id");if(void 0===n){await this.loadAccounts();for(let e=0;e<this.accounts.length;e++){let t=this.accounts[e];if("spot"===t.type&&void 0!==(n=this.safeString(t,"id")))break}}a["account-id"]=n,void 0!==i&&(a.size=i);let o=this.omit(s,"account-id"),h=await this.privateGetOrderOpenOrders(this.extend(a,o)),d=this.safeList(h,"data",[]);return this.parseOrders(d,r,t,i)}parseOrderStatus(e){return this.safeString({"partial-filled":"open","partial-canceled":"canceled",filled:"closed",canceled:"canceled",submitted:"open"},e,e)}parseOrder(e,t){let i,s,r,a;let n=this.safeString(e,"id");if("type"in e){let t=e.type.split("-");i=t[0],s=t[1],r=this.parseOrderStatus(this.safeString(e,"state"))}let o=this.safeString(e,"symbol");t=this.safeMarket(o,t);let h=this.safeInteger(e,"created-at"),d=this.safeString(e,"client-order-id"),l=this.safeString(e,"amount"),c=this.safeString2(e,"filled-amount","field-amount"),u=this.safeString(e,"price"),f=this.safeString2(e,"filled-cash-amount","field-cash-amount"),p=this.safeString2(e,"filled-fees","field-fees");return void 0!==p&&(a={cost:p,currency:"sell"===i?t.quote:t.base}),this.safeOrder({info:e,id:n,clientOrderId:d,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,symbol:t.symbol,type:s,timeInForce:void 0,postOnly:void 0,side:i,price:u,triggerPrice:void 0,average:void 0,cost:f,amount:l,filled:c,remaining:void 0,status:r,fee:a,trades:void 0},t)}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new n.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return i.createMarketBuyOrderRequiresPrice=!1,await this.createOrder(e,"market","buy",t,void 0,i)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets(),await this.loadAccounts();let h=this.market(e),d={"account-id":this.accounts[0].id,symbol:h.id,type:i+"-"+t},l=this.safeString2(o,"clientOrderId","client-order-id");if(void 0===l){let e=this.safeValue(this.options,"broker",{}),t=this.safeString(e,"id");d["client-order-id"]=t+this.uuid()}else d["client-order-id"]=l;if(o=this.omit(o,["clientOrderId","client-order-id"]),"market"===t&&"buy"===i){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let h=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0!==h)t=this.amountToPrecision(e,h);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a);t=this.amountToPrecision(e,r.Y.stringMul(i,n))}}else t=this.amountToPrecision(e,s);d.amount=t}else d.amount=this.amountToPrecision(e,s);("limit"===t||"ioc"===t||"limit-maker"===t||"stop-limit"===t||"stop-limit-fok"===t)&&(d.price=this.priceToPrecision(e,a));let c=this.options.createOrderMethod,u=await this[c](this.extend(d,o)),f=this.safeString(u,"data");return this.safeOrder({info:u,id:f,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:void 0,symbol:e,type:t,side:i,price:a,amount:s,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0},h)}async cancelOrder(e,t,i={}){let s=await this.privatePostOrderOrdersIdSubmitcancel({id:e});return this.extend(this.parseOrder(s),{id:e,status:"canceled"})}async cancelOrders(e,t,i={}){await this.loadMarkets();let s=this.safeValue2(i,"clientOrderIds","client-order-ids");i=this.omit(i,["clientOrderIds","client-order-ids"]);let r={};void 0===s?r["order-ids"]=e:r["client-order-ids"]=s;let a=await this.privatePostOrderOrdersBatchcancel(this.extend(r,i));return this.parseCancelOrders(a)}parseCancelOrders(e){let t;let i=this.safeString(e,"successes");t=void 0!==i?i.split(","):this.safeList(e,"success",[]);let s=this.safeList2(e,"errors","failed",[]),r=[];for(let e=0;e<t.length;e++){let i=t[e];r.push(this.safeOrder({info:i,id:i,status:"canceled"}))}for(let e=0;e<s.length;e++){let t=s[e];r.push(this.safeOrder({info:t,id:this.safeString2(t,"order-id","order_id"),status:"failed",clientOrderId:this.safeString(t,"client-order-id")}))}return r}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e&&(i=this.market(e),s.symbol=i.id);let r=await this.privatePostOrderOrdersBatchCancelOpenOrders(this.extend(s,t)),a=this.safeDict(r,"data",{});return[this.safeOrder({info:a})]}parseDepositAddress(e,t){let i=this.safeString(e,"address"),s=this.safeString(e,"addressTag"),r=this.safeString(e,"currency");t=this.safeCurrency(r,t);let a=this.safeCurrencyCode(r,t),n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),h=this.indexBy(o,"id"),d=this.safeValue(h,n,n),l=this.safeString(d,"network");return this.checkAddress(i),{currency:a,address:i,tag:s,network:l,info:e}}async fetchDeposits(e,t,i,s={}){let r;(void 0===i||i>100)&&(i=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a={type:"deposit",from:0};void 0!==r&&(a.currency=r.id),void 0!==i&&(a.size=i);let n=await this.privateGetQueryDepositWithdraw(this.extend(a,s));return this.parseTransactions(n.data,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;(void 0===i||i>100)&&(i=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a={type:"withdraw",from:0};void 0!==r&&(a.currency=r.id),void 0!==i&&(a.size=i);let n=await this.privateGetQueryDepositWithdraw(this.extend(a,s));return this.parseTransactions(n.data,r,t,i)}parseTransaction(e,t){let i=this.safeInteger(e,"created-at"),s=this.safeCurrencyCode(this.safeString(e,"currency")),a=this.safeString(e,"type");"withdraw"===a&&(a="withdrawal");let n=this.safeString(e,"fee");return void 0!==n&&(n=r.Y.stringAbs(n)),{info:e,id:this.safeString2(e,"id","data"),txid:this.safeString(e,"tx-hash"),timestamp:i,datetime:this.iso8601(i),network:this.safeStringUpper(e,"chain"),address:this.safeString(e,"address"),addressTo:void 0,addressFrom:void 0,tag:this.safeString(e,"address-tag"),tagTo:void 0,tagFrom:void 0,type:a,amount:this.safeNumber(e,"amount"),currency:s,status:this.parseTransactionStatus(this.safeString(e,"state")),updated:this.safeInteger(e,"updated-at"),comment:void 0,internal:void 0,fee:{currency:s,cost:this.parseNumber(n),rate:void 0}}}parseTransactionStatus(e){return this.safeString({unknown:"failed",confirming:"pending",confirmed:"ok",safe:"ok",orphan:"failed",submitted:"pending",canceled:"canceled",reexamine:"pending",reject:"failed",pass:"pending","wallet-reject":"failed","confirm-error":"failed",repealed:"failed","wallet-transfer":"pending","pre-transfer":"pending"},e,e)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);let a=this.currency(e),n={address:i,amount:t,currency:a.id.toLowerCase()};void 0!==s&&(n["addr-tag"]=s);let o=this.safeValue(this.options,"networks",{}),h=this.safeStringUpper(r,"network");void 0!==(h=this.safeStringLower(o,h,h))&&("erc20"===h?n.chain=a.id+h:n.chain=h+a.id,r=this.omit(r,"network"));let d=await this.privatePostDwWithdrawApiCreate(this.extend(n,r));return this.parseTransaction(d,a)}sign(e,t="public",i="GET",s={},r,a){let n="/";"market"===t?n+=t:"public"===t||"private"===t?n+=this.version:("v2Public"===t||"v2Private"===t)&&(n+="v2"),n+="/"+this.implodeParams(e,s);let o=this.omit(s,this.extractParams(e));if("private"===t||"v2Private"===t){this.checkRequiredCredentials();let e=this.ymdhms(this.milliseconds(),"T"),t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==i&&(t=this.extend(t,o));let s=this.keysort(t),h=this.urlencode(s),d=[i,this.hostname,n,h].join("\n"),c=this.hmac(this.encode(d),this.encode(this.secret),l.s,"base64");h+="&"+this.urlencode({Signature:c}),n+="?"+h,"POST"===i?(a=this.json(o),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(s).length&&(n+="?"+this.urlencode(s));return{url:n=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&"status"in o&&"error"===this.safeString(o,"status")){let e=this.safeString(o,"err-code"),t=this.id+" "+a;this.throwBroadlyMatchedException(this.exceptions.broad,a,t),this.throwExactlyMatchedException(this.exceptions.exact,e,t);let i=this.safeString(o,"err-msg");throw this.throwExactlyMatchedException(this.exceptions.exact,i,t),new n.ExchangeError(t)}}}class t$ extends s.k{}let tQ=t$;var tZ=i(1672),tJ=i(2389);class t0 extends tQ{describe(){return this.deepExtend(super.describe(),{id:"hyperliquid",name:"Hyperliquid",countries:[],version:"v1",rateLimit:50,certified:!0,pro:!0,dex:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!0,option:!1,addMargin:!0,borrowCrossMargin:!1,borrowIsolatedMargin:!1,cancelAllOrders:!1,cancelAllOrdersAfter:!0,cancelOrder:!0,cancelOrders:!0,cancelOrdersForSymbols:!0,closeAllPositions:!1,closePosition:!1,createMarketBuyOrderWithCost:!1,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!0,createReduceOnlyOrder:!0,createStopOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledAndClosedOrders:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchLiquidations:!1,fetchMarginMode:void 0,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyLiquidations:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!1,fetchOpenInterests:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!1,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:"emulated",fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!0,repayCrossMargin:!1,repayIsolatedMargin:!1,sandbox:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},hostname:"hyperliquid.xyz",urls:{logo:"https://github.com/ccxt/ccxt/assets/43336371/b371bc6c-4a8c-489f-87f4-20a913dd8d4b",api:{public:"https://api.{hostname}",private:"https://api.{hostname}"},test:{public:"https://api.hyperliquid-testnet.xyz",private:"https://api.hyperliquid-testnet.xyz"},www:"https://hyperliquid.xyz",doc:"https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/api",fees:"https://hyperliquid.gitbook.io/hyperliquid-docs/trading/fees",referral:"https://app.hyperliquid.xyz/"},api:{public:{post:{info:{cost:20,byType:{l2Book:2,allMids:2,clearinghouseState:2,orderStatus:2,spotClearinghouseState:2,exchangeStatus:2}}}},private:{post:{exchange:1}}},fees:{swap:{taker:this.parseNumber("0.00035"),maker:this.parseNumber("0.0001")},spot:{taker:this.parseNumber("0.00035"),maker:this.parseNumber("0.0001")}},requiredCredentials:{apiKey:!1,secret:!1,walletAddress:!0,privateKey:!0},exceptions:{exact:{},broad:{"Price must be divisible by tick size.":n.InvalidOrder,"Order must have minimum value of $10":n.InvalidOrder,"Insufficient margin to place order.":n.InvalidOrder,"Reduce only order would increase position.":n.InvalidOrder,"Post only order would have immediately matched,":n.InvalidOrder,"Order could not immediately match against any resting orders.":n.InvalidOrder,"Invalid TP/SL price.":n.InvalidOrder,"No liquidity available for market order.":n.InvalidOrder,"Order was never placed, already canceled, or filled.":n.OrderNotFound,"User or API Wallet ":n.InvalidOrder,"Order has invalid size":n.InvalidOrder,"Order price cannot be more than 80% away from the reference price":n.InvalidOrder,"Order has zero size.":n.InvalidOrder,"Insufficient spot balance asset":n.InsufficientFunds}},precisionMode:d.kb,commonCurrencies:{},options:{defaultType:"swap",sandboxMode:!1,defaultSlippage:.05,zeroAddress:"0x0000000000000000000000000000000000000000"},features:{default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!1},createOrders:{max:1e3},fetchMyTrades:{marginMode:!1,limit:2e3,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:2e3,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:2e3,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:2e3,daysBack:void 0,daysBackCanceled:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchOHLCV:{limit:5e3}},spot:{extends:"default"},forPerps:{extends:"default",createOrder:{stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0}},swap:{linear:{extends:"forPerps"},inverse:{extends:"forPerps"}},future:{linear:{extends:"forPerps"},inverse:{extends:"forPerps"}}}})}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}async fetchCurrencies(e={}){let t=await this.publicPostInfo(this.extend({type:"meta"},e)),i=this.safeList(t,"universe",[]),s={};for(let e=0;e<i.length;e++){let t=this.safeDict(i,e,{}),r=e,a=this.safeString(t,"name"),n=this.safeCurrencyCode(a);s[n]={id:r,name:a,code:n,precision:void 0,info:t,active:void 0,deposit:void 0,withdraw:void 0,networks:void 0,fee:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return s}async fetchMarkets(e={}){let t=[this.fetchSwapMarkets(e),this.fetchSpotMarkets(e)],i=await Promise.all(t),s=i[0],r=i[1];return this.arrayConcat(s,r)}async fetchSwapMarkets(e={}){let t=await this.publicPostInfo(this.extend({type:"metaAndAssetCtxs"},e)),i=this.safeDict(t,0,{}),s=this.safeList(i,"universe",[]),r=this.safeList(t,1,[]),a=[];for(let e=0;e<s.length;e++){let t=this.extend(this.safeDict(s,e,{}),this.safeDict(r,e,{}));t.baseId=e,a.push(t)}return this.parseMarkets(a)}calculatePricePrecision(e,t,i){let s=0,a=this.numberToString(e);if(void 0===a)return 0;let n=a.split(".");if(r.Y.stringEq(a,"0"))s=Math.min(i-t,5);else if(r.Y.stringGt(a,"0")&&r.Y.stringLt(a,"1")){let e=this.safeString(n,1,""),r=0;for(;r<=e.length&&"0"===e[r];)r+=1;s=Math.min(i-t,s=r+5)}else{let e=this.safeString(n,0,"");s=Math.min(i-t,Math.max(5,e.length)-e.length)}return this.parseToInt(s)}async fetchSpotMarkets(e={}){let t=await this.publicPostInfo(this.extend({type:"spotMetaAndAssetCtxs"},e)),i=this.safeDict(t,0,{}),s=this.safeList(t,1,[]),r=this.safeList(i,"universe",[]),a=this.safeList(i,"tokens",[]),n=[];for(let e=0;e<r.length;e++){let t=this.safeDict(r,e,{}),i=this.safeInteger(t,"index"),o=this.safeDict(s,i,{}),h=this.safeString(t,"name"),d=this.safeDict(this.fees,"spot",{}),l=this.safeNumber(d,"taker"),c=this.safeNumber(d,"maker"),u=this.safeList(t,"tokens",[]),f=this.safeInteger(u,0),p=this.safeInteger(u,1),m=this.safeDict(a,f,{}),g=this.safeDict(a,p,{}),y=this.safeString(m,"name"),v=this.safeString(g,"name"),b=this.safeCurrencyCode(y),w=this.safeCurrencyCode(v),k=b+"/"+w,S=this.safeDict(m,"spec",m),O=this.safeString(S,"szDecimals"),T=parseInt(O),I=this.safeNumber(o,"midPx"),x=this.calculatePricePrecision(I,T,8),P=this.numberToString(x),M=this.numberToString(i+1e4);n.push(this.safeMarketStructure({id:h,symbol:k,base:b,quote:w,settle:void 0,baseId:M,quoteId:v,settleId:void 0,type:"spot",spot:!0,subType:void 0,margin:void 0,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:l,maker:c,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(O)),price:this.parseNumber(this.parsePrecision(P))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.parseNumber("10"),max:void 0}},created:void 0,info:this.extend(o,t)}))}return n}parseMarket(e){let t="USDC",i=this.safeString(e,"name"),s=this.safeCurrencyCode(t),r=this.safeString(e,"baseId"),a="USDC",n=this.safeCurrencyCode(a),o=i+"/"+s;o=o+":"+n;let h=this.safeDict(this.fees,"swap",{}),d=this.safeNumber(h,"taker"),l=this.safeNumber(h,"maker"),c=this.safeString(e,"szDecimals"),u=parseInt(c),f=this.safeNumber(e,"markPx",0),p=this.calculatePricePrecision(f,u,6),m=this.numberToString(p),g=this.safeBool(e,"isDelisted"),y=!0;return void 0!==g&&(y=!g),this.safeMarketStructure({id:r,symbol:o,base:i,quote:s,settle:n,baseId:r,quoteId:t,settleId:a,type:"swap",spot:!1,margin:void 0,swap:!0,future:!1,option:!1,active:y,contract:!0,linear:!0,inverse:!1,taker:d,maker:l,contractSize:this.parseNumber("1"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(c)),price:this.parseNumber(this.parsePrecision(m))},limits:{leverage:{min:void 0,max:this.safeInteger(e,"maxLeverage")},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.parseNumber("10"),max:void 0}},created:void 0,info:e})}async fetchBalance(e={}){let t,i;[t,e]=this.handlePublicAddress("fetchBalance",e),[i,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let s=await this.publicPostInfo(this.extend({type:"spot"===i?"spotClearinghouseState":"clearinghouseState",user:t},e)),r=this.safeList(s,"balances");if(void 0!==r){let e={info:s};for(let t=0;t<r.length;t++){let i=r[t],s=this.safeCurrencyCode(this.safeString(i,"coin")),a=this.account(),n=this.safeString(i,"total"),o=this.safeString(i,"hold");a.total=n,a.used=o,e[s]=a}return this.safeBalance(e)}let a=this.safeDict(s,"marginSummary",{}),n={info:s,USDC:{total:this.safeNumber(a,"accountValue"),free:this.safeNumber(s,"withdrawable")}},o=this.safeInteger(s,"time");return n.timestamp=o,n.datetime=this.iso8601(o),this.safeBalance(n)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={type:"l2Book",coin:s.swap?s.base:s.id},a=await this.publicPostInfo(this.extend(r,i)),n=this.safeList(a,"levels",[]),o={bids:this.safeList(n,0,[]),asks:this.safeList(n,1,[])},h=this.safeInteger(a,"time");return this.parseOrderBook(o,s.symbol,h,"bids","asks","px","sz")}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=[],s=this.safeString(t,"type");t=this.omit(t,"type"),i="spot"===s?await this.fetchSpotMarkets(t):"swap"===s?await this.fetchSwapMarkets(t):await this.fetchMarkets(t);let r={};for(let e=0;e<i.length;e++){let t=i[e],s=t.info,a=this.parseTicker(s,t);r[this.safeString(a,"symbol")]=a}return this.filterByArrayTickers(r,"symbol",e)}async fetchFundingRates(e,t={}){let i=await this.publicPostInfo(this.extend({type:"metaAndAssetCtxs"},t)),s=this.safeDict(i,0,{}),r=this.safeList(s,"universe",[]),a=this.safeList(i,1,[]),n=[];for(let e=0;e<r.length;e++){let t=this.extend(this.safeDict(r,e,{}),this.safeDict(a,e,{}));n.push(t)}return this.parseFundingRates(n,e)}parseFundingRate(e,t){let i=this.safeString(e,"name"),s=this.coinToMarketId(i),r=this.safeSymbol(s,t),a=this.safeNumber(e,"funding"),n=this.safeNumber(e,"markPx"),o=this.safeNumber(e,"oraclePx"),h=(Math.floor(this.milliseconds()/60/60/1e3)+1)*36e5;return{info:e,symbol:r,markPrice:n,indexPrice:o,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:a,fundingTimestamp:h,fundingDatetime:this.iso8601(h),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:"1h"}}parseTicker(e,t){let i=this.safeList(e,"impactPxs");return this.safeTicker({symbol:t.symbol,timestamp:void 0,datetime:void 0,previousClose:this.safeNumber(e,"prevDayPx"),close:this.safeNumber(e,"midPx"),bid:this.safeNumber(i,0),ask:this.safeNumber(i,1),quoteVolume:this.safeNumber(e,"dayNtlVlm"),info:e},t)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeInteger(r,"until",this.milliseconds()),o=void 0===i,h=i;if(void 0===i){if(void 0!==s){let e=1e3*this.parseTimeframe(t);i=this.sum(n,-(e*s*1)),o=!1}else i=0}r=this.omit(r,["until"]);let d={type:"candleSnapshot",req:{coin:a.swap?a.base:a.id,interval:this.safeString(this.timeframes,t,t),startTime:i,endTime:n}},l=await this.publicPostInfo(this.extend(d,r));return this.parseOHLCVs(l,a,t,h,s,o)}parseOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchTrades(e,t,i,s={}){let r;[r,s]=this.handlePublicAddress("fetchTrades",s),await this.loadMarkets();let a=this.safeMarket(e),n={user:r};void 0!==t?(n.type="userFillsByTime",n.startTime=t):n.type="userFills";let o=this.safeInteger(s,"until");s=this.omit(s,"until"),void 0!==o&&(n.endTime=o);let h=await this.publicPostInfo(this.extend(n,s));return this.parseTrades(h,a,t,i)}amountToPrecision(e,t){let i=this.market(e);return this.decimalToPrecision(t,d.D_,i.precision.amount,this.precisionMode,this.paddingMode)}priceToPrecision(e,t){let i=this.market(e),s=Math.max(5,this.numberToString(t).split(".")[0].length),r=this.decimalToPrecision(t,d.D_,s,d.v,this.paddingMode),a=(i.spot?8:6)-this.precisionFromString(this.safeString(i.precision,"amount"));return this.decimalToPrecision(r,d.D_,a,d.fv,this.paddingMode)}hashMessage(e){return"0x"+this.hash(e,tZ.lY,"hex")}signHash(e,t){let i=(0,tB.h1)(e.slice(-64),t.slice(-64),tJ.bI,void 0);return{r:"0x"+i.r,s:"0x"+i.s,v:this.sum(27,i.v)}}signMessage(e,t){return this.signHash(this.hashMessage(e),t.slice(-64))}constructPhantomAgent(e,t=!0){return{source:t?"b":"a",connectionId:e}}actionHash(e,t,i){let s=this.packb(e),r=this.binaryToBase16(s);return r+="00000"+this.intToBase16(i),void 0===t?r+="00":(r+="01",r+=t),this.hash(this.base16ToBinary(r),tZ.lY,"binary")}signL1Action(e,t,i){let s=this.actionHash(e,i,t),r=this.safeBool(this.options,"sandboxMode",!1),a=this.constructPhantomAgent(s,r),n=this.safeString(this.options,"zeroAddress"),o=this.ethEncodeStructuredData({chainId:1337,name:"Exchange",verifyingContract:n,version:"1"},{Agent:[{name:"source",type:"string"},{name:"connectionId",type:"bytes32"}]},a);return this.signMessage(o,this.privateKey)}signUserSignedAction(e,t){let i=this.safeString(this.options,"zeroAddress"),s=this.ethEncodeStructuredData({chainId:421614,name:"HyperliquidSignTransaction",verifyingContract:i,version:"1"},e,t);return this.signMessage(s,this.privateKey)}buildUsdSendSig(e){return this.signUserSignedAction({"HyperliquidTransaction:UsdSend":[{name:"hyperliquidChain",type:"string"},{name:"destination",type:"string"},{name:"amount",type:"string"},{name:"time",type:"uint64"}]},e)}buildUsdClassSendSig(e){return this.signUserSignedAction({"HyperliquidTransaction:UsdClassTransfer":[{name:"hyperliquidChain",type:"string"},{name:"amount",type:"string"},{name:"toPerp",type:"bool"},{name:"nonce",type:"uint64"}]},e)}buildWithdrawSig(e){return this.signUserSignedAction({"HyperliquidTransaction:Withdraw":[{name:"hyperliquidChain",type:"string"},{name:"destination",type:"string"},{name:"amount",type:"string"},{name:"time",type:"uint64"}]},e)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let[n,o]=this.parseCreateOrderArgs(e,t,i,s,r,a);return(await this.createOrders([n],o))[0]}async createOrders(e,t={}){await this.loadMarkets();let i=this.createOrdersRequest(e,t),s=await this.privatePostExchange(i),r=this.safeDict(s,"response",{}),a=this.safeDict(r,"data",{}),n=this.safeList(a,"statuses",[]);return this.parseOrders(n,void 0)}createOrdersRequest(e,t={}){this.checkRequiredCredentials();let i=this.safeString(this.options,"defaultSlippage");i=this.safeString(t,"slippage",i);let s=!1;for(let t=0;t<e.length;t++){let i=e[t],r=this.safeDict(i,"params",{});void 0!==this.safeString2(r,"clientOrderId","client_id")&&(s=!0)}if(s)for(let t=0;t<e.length;t++){let i=e[t],s=this.safeDict(i,"params",{});if(void 0===this.safeString2(s,"clientOrderId","client_id"))throw new n.ArgumentsRequired(this.id+" createOrders() all orders must have clientOrderId if at least one has a clientOrderId")}t=this.omit(t,["slippage","clientOrderId","client_id","slippage","triggerPrice","stopPrice","stopLossPrice","takeProfitPrice","timeInForce"]);let a=this.milliseconds(),o=[];for(let t=0;t<e.length;t++){let s;let a=e[t],h=this.safeString(a,"symbol"),d=this.market(h),l=d.symbol,c="MARKET"===this.safeStringUpper(a,"type"),u="BUY"===this.safeStringUpper(a,"side"),f=this.safeString(a,"amount"),p=this.safeString(a,"price"),m=this.safeDict(a,"params",{}),g=this.safeString2(m,"clientOrderId","client_id"),y=this.safeString(m,"slippage",i),v=c?"ioc":"gtc";this.safeBool(m,"postOnly",!1)&&(v="alo");let b=this.safeStringLower(m,"timeInForce",v);b=this.capitalize(b);let w=this.safeString2(m,"triggerPrice","stopPrice"),k=this.safeString(m,"stopLossPrice",w),S=this.safeString(m,"takeProfitPrice"),O=k||S;if(c){if(void 0===p)throw new n.ArgumentsRequired(this.id+"  market orders require price to calculate the max slippage price. Default slippage can be set in options (default is 5%).");s=u?r.Y.stringMul(p,r.Y.stringAdd("1",y)):r.Y.stringMul(p,r.Y.stringSub("1",y)),s=this.priceToPrecision(l,s)}else s=this.priceToPrecision(l,p);let T=this.amountToPrecision(l,f),I=this.safeBool(m,"reduceOnly",!1),x={};if(O){let e=!1;void 0!==S?(w=this.priceToPrecision(l,S),e=!0):w=this.priceToPrecision(l,k),x.trigger={isMarket:c,triggerPx:w,tpsl:e?"tp":"sl"}}else x.limit={tif:b};m=this.omit(m,["clientOrderId","slippage","triggerPrice","stopPrice","stopLossPrice","takeProfitPrice","timeInForce","client_id","reduceOnly","postOnly"]);let P={a:this.parseToInt(d.baseId),b:u,p:s,s:T,r:I,t:x};void 0!==g&&(P.c=g),o.push(P)}let h=this.formatVaultAddress(this.safeString(t,"vaultAddress")),d={type:"order",orders:o,grouping:"na"};void 0===h&&(d.brokerCode=1);let l=this.signL1Action(d,a,h),c={action:d,nonce:a,signature:l};return void 0!==h&&(t=this.omit(t,"vaultAddress"),c.vaultAddress=h),c}async cancelOrder(e,t,i={}){let s=await this.cancelOrders([e],t,i);return this.safeDict(s,0)}async cancelOrders(e,t,i={}){if(this.checkRequiredCredentials(),void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r=this.safeValue2(i,"clientOrderId","client_id");i=this.omit(i,["clientOrderId","client_id"]);let a=this.milliseconds(),o={nonce:a},h=[],d={type:"",cancels:[]},l=this.parseToNumeric(s.baseId);if(void 0!==r){Array.isArray(r)||(r=[r]),d.type="cancelByCloid";for(let e=0;e<r.length;e++)h.push({asset:l,cloid:r[e]})}else{d.type="cancel";for(let t=0;t<e.length;t++)h.push({a:l,o:this.parseToNumeric(e[t])})}d.cancels=h;let c=this.formatVaultAddress(this.safeString(i,"vaultAddress")),u=this.signL1Action(d,a,c);o.action=d,o.signature=u,void 0!==c&&(i=this.omit(i,"vaultAddress"),o.vaultAddress=c);let f=await this.privatePostExchange(o),p=this.safeDict(f,"response"),m=this.safeDict(p,"data"),g=this.safeList(m,"statuses"),y=[];for(let e=0;e<g.length;e++){let t=g[e];y.push(this.safeOrder({info:t,status:t}))}return y}async cancelOrdersForSymbols(e,t={}){this.checkRequiredCredentials(),await this.loadMarkets();let i=this.milliseconds(),s={nonce:i},r=[],a={type:"",cancels:[]},o=!1;for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,"clientOrderId");void 0!==s&&(o=!0);let a=this.safeString(i,"id"),h=this.safeString(i,"symbol");if(void 0===h)throw new n.ArgumentsRequired(this.id+" cancelOrdersForSymbols() requires a symbol argument in each order");if(void 0!==a&&o)throw new n.BadRequest(this.id+" cancelOrdersForSymbols() all orders must have either id or clientOrderId");let d=o?"asset":"a",l=o?"cloid":"o",c=this.market(h),u={};u[d]=this.parseToNumeric(c.baseId),u[l]=o?s:this.parseToNumeric(a),r.push(u)}a.type=o?"cancelByCloid":"cancel",a.cancels=r;let h=this.formatVaultAddress(this.safeString(t,"vaultAddress")),d=this.signL1Action(a,i,h);return s.action=a,s.signature=d,void 0!==h&&(t=this.omit(t,"vaultAddress"),s.vaultAddress=h),await this.privatePostExchange(s)}async cancelAllOrdersAfter(e,t={}){this.checkRequiredCredentials(),await this.loadMarkets(),t=this.omit(t,["clientOrderId","client_id"]);let i=this.milliseconds(),s={nonce:i},r={type:"scheduleCancel",time:i+e},a=this.formatVaultAddress(this.safeString(t,"vaultAddress")),n=this.signL1Action(r,i,a);return s.action=r,s.signature=n,void 0!==a&&(t=this.omit(t,"vaultAddress"),s.vaultAddress=a),await this.privatePostExchange(s)}editOrderRequest(e,t,i,s,a,o,h={}){if(this.checkRequiredCredentials(),void 0===e)throw new n.ArgumentsRequired(this.id+" editOrder() requires an id argument");let d=this.market(t),l="MARKET"===(i=i.toUpperCase()),c="BUY"===(s=s.toUpperCase()),u=this.safeString(this.options,"defaultSlippage"),f=this.safeString(h,"slippage",u),p=l?"ioc":"gtc";this.safeBool(h,"postOnly",!1)&&(p="alo");let m=this.safeStringLower(h,"timeInForce",p);m=this.capitalize(m);let g=this.safeString2(h,"clientOrderId","client_id"),y=this.safeString2(h,"triggerPrice","stopPrice"),v=this.safeString(h,"stopLossPrice",y),b=this.safeString(h,"takeProfitPrice"),w=v||b;h=this.omit(h,["slippage","timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","clientOrderId","client_id"]);let k=o.toString();k=l?c?r.Y.stringMul(o.toString(),r.Y.stringAdd("1",f)):r.Y.stringMul(o.toString(),r.Y.stringSub("1",f)):this.priceToPrecision(t,o.toString());let S=this.amountToPrecision(t,a),O=this.safeBool(h,"reduceOnly",!1),T={};if(w){let e=!1;void 0!==b?(y=this.priceToPrecision(t,b),e=!0):y=this.priceToPrecision(t,v),T.trigger={isMarket:l,triggerPx:y,tpsl:e?"tp":"sl"}}else T.limit={tif:m};void 0===y&&(y="0");let I=this.milliseconds(),x={a:this.parseToInt(d.baseId),b:c,p:k,s:S,r:O,t:T};void 0!==g&&(x.c=g);let P={type:"batchModify",modifies:[{oid:this.parseToInt(e),order:x}]},M=this.formatVaultAddress(this.safeString(h,"vaultAddress")),A=this.signL1Action(P,I,M),C={action:P,nonce:I,signature:A};return void 0!==M&&(h=this.omit(h,"vaultAddress"),C.vaultAddress=M),C}async editOrder(e,t,i,s,r,a,n={}){await this.loadMarkets();let o=this.market(t),h=this.editOrderRequest(e,t,i,s,r,a,n),d=await this.privatePostExchange(h),l=this.safeDict(d,"response",{}),c=this.safeDict(l,"data",{}),u=this.safeList(c,"statuses",[]),f=this.safeDict(u,0,{});return this.parseOrder(f,o)}async fetchFundingRateHistory(e,t,i,s={}){if(await this.loadMarkets(),void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");let r=this.market(e),a={type:"fundingHistory",coin:r.base};if(void 0!==t)a.startTime=t;else{let e=void 0===i?500:i;a.startTime=this.milliseconds()-36e5*e}let o=this.safeInteger(s,"until");s=this.omit(s,"until"),void 0!==o&&(a.endTime=o);let h=await this.publicPostInfo(this.extend(a,s)),d=[];for(let e=0;e<h.length;e++){let t=h[e],i=this.safeInteger(t,"time");d.push({info:t,symbol:this.safeSymbol(void 0,r),fundingRate:this.safeNumber(t,"fundingRate"),timestamp:i,datetime:this.iso8601(i)})}let l=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(l,e,t,i)}async fetchOpenOrders(e,t,i,s={}){let r,a;[r,s]=this.handlePublicAddress("fetchOpenOrders",s),[a,s]=this.handleOptionAndParams(s,"fetchOpenOrders","method","frontendOpenOrders"),await this.loadMarkets();let n=this.safeMarket(e),o=await this.publicPostInfo(this.extend({type:a,user:r},s)),h=[];for(let e=0;e<o.length;e++){let t=o[e],i={};void 0===this.safeString(t,"status")&&(i.ccxtStatus="open"),h.push(this.extend(t,i))}return this.parseOrders(h,n,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.fetchOrders(e,void 0,void 0,s),a=this.filterByArray(r,"status",["closed"],!1);return this.filterBySymbolSinceLimit(a,e,t,i)}async fetchCanceledOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.fetchOrders(e,void 0,void 0,s),a=this.filterByArray(r,"status",["canceled"],!1);return this.filterBySymbolSinceLimit(a,e,t,i)}async fetchCanceledAndClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.fetchOrders(e,void 0,void 0,s),a=this.filterByArray(r,"status",["canceled","closed","rejected"],!1);return this.filterBySymbolSinceLimit(a,e,t,i)}async fetchOrders(e,t,i,s={}){let r;[r,s]=this.handlePublicAddress("fetchOrders",s),await this.loadMarkets();let a=this.safeMarket(e),n=await this.publicPostInfo(this.extend({type:"historicalOrders",user:r},s));return this.parseOrders(n,a,t,i)}async fetchOrder(e,t,i={}){let s;[s,i]=this.handlePublicAddress("fetchOrder",i),await this.loadMarkets();let r=this.safeMarket(t),a={type:"orderStatus",oid:e.length>=34?e:this.parseToNumeric(e),user:s},n=await this.publicPostInfo(this.extend(a,i)),o=this.safeDict(n,"order");return this.parseOrder(o,r)}parseOrder(e,t){let i,s=this.safeDictN(e,["order","resting","filled"]);void 0===s&&(s=e);let a=this.safeString(s,"coin");void 0!==a&&(i=this.coinToMarketId(a));let n=(t=void 0===this.safeString(s,"id")?this.safeMarket(i,void 0):this.safeMarket(i,t)).symbol,o=this.safeInteger(s,"timestamp"),h=this.safeString2(e,"status","ccxtStatus");e=this.omit(e,["ccxtStatus"]);let d=this.safeString(s,"side");void 0!==d&&(d="A"===d?"sell":"buy");let l=this.safeString2(s,"origSz","totalSz"),c=this.safeString(s,"sz");return this.safeOrder({info:e,id:this.safeString(s,"oid"),clientOrderId:this.safeString(s,"cloid"),timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,lastUpdateTimestamp:this.safeInteger(e,"statusTimestamp"),symbol:n,type:this.parseOrderType(this.safeStringLower(s,"orderType")),timeInForce:this.safeStringUpper(s,"tif"),postOnly:void 0,reduceOnly:this.safeBool(s,"reduceOnly"),side:d,price:this.safeString(s,"limitPx"),triggerPrice:this.safeBool(s,"isTrigger")?this.safeNumber(s,"triggerPx"):void 0,amount:l,cost:void 0,average:this.safeString(s,"avgPx"),filled:r.Y.stringSub(l,c),remaining:c,status:this.parseOrderStatus(h),fee:void 0,trades:void 0},t)}parseOrderStatus(e){return this.safeString({triggered:"open",filled:"closed",open:"open",canceled:"canceled",rejected:"rejected",marginCanceled:"canceled"},e,e)}parseOrderType(e){return this.safeString({"stop limit":"limit","stop market":"market"},e,e)}async fetchMyTrades(e,t,i,s={}){let r;[r,s]=this.handlePublicAddress("fetchMyTrades",s),await this.loadMarkets();let a=this.safeMarket(e),n={user:r};void 0!==t?(n.type="userFillsByTime",n.startTime=t):n.type="userFills";let o=this.safeInteger(s,"until");s=this.omit(s,"until"),void 0!==o&&(n.endTime=o);let h=await this.publicPostInfo(this.extend(n,s));return this.parseTrades(h,a,t,i)}parseTrade(e,t){let i=this.safeInteger(e,"time"),s=this.safeString(e,"px"),r=this.safeString(e,"sz"),a=this.safeString(e,"coin"),n=this.coinToMarketId(a),o=(t=this.safeMarket(n,void 0)).symbol,h=this.safeString(e,"tid"),d=this.safeString(e,"side");void 0!==d&&(d="A"===d?"sell":"buy");let l=this.safeString(e,"fee");return this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:o,id:h,order:this.safeString(e,"oid"),type:void 0,side:d,takerOrMaker:void 0,price:s,amount:r,cost:void 0,fee:{cost:l,currency:this.safeString(e,"feeToken"),rate:void 0}},t)}async fetchPosition(e,t={}){let i=await this.fetchPositions([e],t);return this.safeDict(i,0,{})}async fetchPositions(e,t={}){let i;await this.loadMarkets(),[i,t]=this.handlePublicAddress("fetchPositions",t),e=this.marketSymbols(e);let s=await this.publicPostInfo(this.extend({type:"clearinghouseState",user:i},t)),r=this.safeList(s,"assetPositions",[]),a=[];for(let e=0;e<r.length;e++)a.push(this.parsePosition(r[e],void 0));return this.filterByArrayPositions(a,"symbol",e,!1)}parsePosition(e,t){let i;let s=this.safeDict(e,"position",{}),a=this.safeString(s,"coin"),n=this.coinToMarketId(a),o=this.safeMarket(n,void 0).symbol,h=this.safeDict(s,"leverage",{}),d=this.safeString(h,"type"),l=this.safeString(s,"szi"),c=l;void 0!==c&&(i=r.Y.stringGt(l,"0")?"long":"short",c=r.Y.stringAbs(c));let u=this.safeString(s,"unrealizedPnl"),f=r.Y.stringAbs(u),p=this.safeString(s,"marginUsed"),m=r.Y.stringMul(r.Y.stringDiv(f,p),"100");return this.safePosition({info:e,id:void 0,symbol:o,timestamp:void 0,datetime:void 0,isolated:"isolated"===d,hedged:void 0,side:i,contracts:this.parseNumber(c),contractSize:void 0,entryPrice:this.safeNumber(s,"entryPx"),markPrice:void 0,notional:this.safeNumber(s,"positionValue"),leverage:this.safeNumber(h,"value"),collateral:this.safeNumber(s,"marginUsed"),initialMargin:this.parseNumber(p),maintenanceMargin:void 0,initialMarginPercentage:void 0,maintenanceMarginPercentage:void 0,unrealizedPnl:this.parseNumber(u),liquidationPrice:this.safeNumber(s,"liquidationPx"),marginMode:d,percentage:this.parseNumber(m)})}async setMarginMode(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r=this.safeInteger(i,"leverage");if(void 0===r)throw new n.ArgumentsRequired(this.id+" setMarginMode() requires a leverage parameter");let a=this.parseToInt(s.baseId),o=this.milliseconds();i=this.omit(i,["leverage"]);let h={type:"updateLeverage",asset:a,isCross:"cross"===e,leverage:r},d=this.safeString(i,"vaultAddress");void 0!==d&&(i=this.omit(i,"vaultAddress"),d.startsWith("0x")&&(d=d.replace("0x","")));let l=this.signL1Action(h,o,d),c={action:h,nonce:o,signature:l};return void 0!==d&&(c.vaultAddress=d),await this.privatePostExchange(c)}async setLeverage(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r=this.safeString(i,"marginMode","cross"),a=this.parseToInt(s.baseId),o=this.milliseconds();i=this.omit(i,"marginMode");let h={type:"updateLeverage",asset:a,isCross:"cross"===r,leverage:e},d=this.formatVaultAddress(this.safeString(i,"vaultAddress")),l=this.signL1Action(h,o,d),c={action:h,nonce:o,signature:l};return void 0!==d&&(i=this.omit(i,"vaultAddress"),c.vaultAddress=d),await this.privatePostExchange(c)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"reduce",i)}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),n=this.parseToInt(a.baseId),o=this.parseToInt(r.Y.stringMul(this.amountToPrecision(e,t),"1000000"));"reduce"===i&&(o=-o);let h=this.milliseconds(),d={type:"updateIsolatedMargin",asset:n,isBuy:!0,ntli:o},l=this.formatVaultAddress(this.safeString(s,"vaultAddress")),c=this.signL1Action(d,h,l),u={action:d,nonce:h,signature:c};void 0!==l&&(s=this.omit(s,"vaultAddress"),u.vaultAddress=l);let f=await this.privatePostExchange(u);return this.extend(this.parseMarginModification(f,a),{code:this.safeString(f,"status")})}parseMarginModification(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),type:void 0,marginMode:"isolated",amount:void 0,total:void 0,code:this.safeString(t,"settle"),status:void 0,timestamp:void 0,datetime:void 0}}async transfer(e,t,i,s,r={}){this.checkRequiredCredentials(),await this.loadMarkets();let a=this.safeBool(this.options,"sandboxMode"),o=this.milliseconds();if(this.inArray(i,["spot","swap","perp"])){if(!this.inArray(s,["spot","swap","perp"]))throw new n.NotSupported(this.id+"transfer() only support spot <> swap transfer");let e=this.numberToString(t),i=this.formatVaultAddress(this.safeString(r,"vaultAddress"));r=this.omit(r,"vaultAddress"),void 0!==i&&(e=e+" subaccount:"+i);let h="perp"===s||"swap"===s,d={hyperliquidChain:a?"Testnet":"Mainnet",amount:e,toPerp:h,nonce:o},l=this.buildUsdClassSendSig(d),c={action:{hyperliquidChain:d.hyperliquidChain,signatureChainId:"0x66eee",type:"usdClassTransfer",amount:e,toPerp:h,nonce:o},nonce:o,signature:l};return void 0!==i&&(c.vaultAddress=i),await this.privatePostExchange(c)}if(this.checkAddress(s),void 0!==e&&"USDC"!==(e=e.toUpperCase()))throw new n.NotSupported(this.id+"transfer() only support USDC");let h={hyperliquidChain:a?"Testnet":"Mainnet",destination:s,amount:this.numberToString(t),time:o},d=this.buildUsdSendSig(h),l={action:{hyperliquidChain:h.hyperliquidChain,signatureChainId:"0x66eee",destination:s,amount:t.toString(),time:o,type:"usdSend"},nonce:o,signature:d};return await this.privatePostExchange(l)}async withdraw(e,t,i,s,r={}){let a;if(this.checkRequiredCredentials(),await this.loadMarkets(),this.checkAddress(i),void 0!==e&&"USDC"!==(e=e.toUpperCase()))throw new n.NotSupported(this.id+"withdraw() only support USDC");let o=this.formatVaultAddress(this.safeString(r,"vaultAddress"));r=this.omit(r,"vaultAddress");let h=this.milliseconds(),d={};if(void 0!==o)d={type:"vaultTransfer",vaultAddress:"0x"+o,isDeposit:!1,usd:t},a=this.signL1Action(d,h);else{let e={hyperliquidChain:this.safeBool(this.options,"sandboxMode",!1)?"Testnet":"Mainnet",destination:i,amount:t.toString(),time:h};a=this.buildWithdrawSig(e),d={hyperliquidChain:e.hyperliquidChain,signatureChainId:"0x66eee",destination:i,amount:t.toString(),time:h,type:"withdraw3"}}let l={action:d,nonce:h,signature:a},c=await this.privatePostExchange(l);return this.parseTransaction(c)}parseTransaction(e,t){let i,s;let r=this.safeInteger(e,"time"),a=this.safeDict(e,"delta",{}),n=this.safeInteger(a,"fee");void 0!==n&&(i={currency:"USDC",cost:n});let o=this.safeString(a,"type");return void 0!==o&&(s="internalTransfer"===o),{info:e,id:void 0,txid:this.safeString(e,"hash"),timestamp:r,datetime:this.iso8601(r),network:void 0,address:void 0,addressTo:this.safeString(a,"destination"),addressFrom:this.safeString(a,"user"),tag:void 0,tagTo:void 0,tagFrom:void 0,type:void 0,amount:this.safeInteger(a,"usdc"),currency:void 0,status:this.safeString(e,"status"),updated:void 0,comment:void 0,internal:s,fee:i}}async fetchTradingFee(e,t={}){let i;await this.loadMarkets(),[i,t]=this.handlePublicAddress("fetchTradingFee",t);let s=this.market(e),r=await this.publicPostInfo(this.extend({type:"userFees",user:i},t)),a={userCrossRate:this.safeString(r,"userCrossRate"),userAddRate:this.safeString(r,"userAddRate")};return this.parseTradingFee(a,s)}parseTradingFee(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.safeNumber(e,"userAddRate"),taker:this.safeNumber(e,"userCrossRate"),percentage:void 0,tierBased:void 0}}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets(),[r,s]=this.handlePublicAddress("fetchLedger",s);let a={type:"userNonFundingLedgerUpdates",user:r};void 0!==t&&(a.startTime=t);let n=this.safeInteger(s,"until");void 0!==n&&(a.endTime=n,s=this.omit(s,["until"]));let o=await this.publicPostInfo(this.extend(a,s));return this.parseLedger(o,void 0,t,i)}parseLedgerEntry(e,t){let i;let s=this.safeInteger(e,"time"),r=this.safeDict(e,"delta",{}),a=this.safeInteger(r,"fee");void 0!==a&&(i={currency:"USDC",cost:a});let n=this.safeString(r,"type"),o=this.safeString(r,"usdc");return this.safeLedgerEntry({info:e,id:this.safeString(e,"hash"),direction:void 0,account:void 0,referenceAccount:this.safeString(r,"user"),referenceId:this.safeString(e,"hash"),type:this.parseLedgerEntryType(n),currency:void 0,amount:this.parseNumber(o),timestamp:s,datetime:this.iso8601(s),before:void 0,after:void 0,status:void 0,fee:i},t)}parseLedgerEntryType(e){return this.safeString({internalTransfer:"transfer",accountClassTransfer:"transfer"},e,e)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets(),[r,s]=this.handlePublicAddress("fetchDepositsWithdrawals",s);let a={type:"userNonFundingLedgerUpdates",user:r};void 0!==t&&(a.startTime=t);let n=this.safeInteger(s,"until");void 0!==n&&(a.endTime=n,s=this.omit(s,["until"]));let o=await this.publicPostInfo(this.extend(a,s)),h=this.extractTypeFromDelta(o),d=this.filterByArray(h,"type",["deposit"],!1);return this.parseTransactions(d,void 0,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets(),[r,s]=this.handlePublicAddress("fetchDepositsWithdrawals",s);let a={type:"userNonFundingLedgerUpdates",user:r};void 0!==t&&(a.startTime=t);let n=this.safeInteger(s,"until");void 0!==n&&(a.endTime=n,s=this.omit(s,["until"]));let o=await this.publicPostInfo(this.extend(a,s)),h=this.extractTypeFromDelta(o),d=this.filterByArray(h,"type",["withdraw"],!1);return this.parseTransactions(d,void 0,t,i)}async fetchOpenInterests(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.fetchSwapMarkets();return this.parseOpenInterests(i,e)}async fetchOpenInterest(e,t={}){return e=this.symbol(e),await this.loadMarkets(),(await this.fetchOpenInterests([e],t))[e]}parseOpenInterest(e,t){let i;e=this.safeDict(e,"info",{});let s=this.safeString(e,"name");return void 0!==s&&(i=this.coinToMarketId(s)),this.safeOpenInterest({symbol:this.safeSymbol(i),openInterestAmount:this.safeNumber(e,"openInterest"),openInterestValue:void 0,timestamp:void 0,datetime:void 0,info:e},t)}extractTypeFromDelta(e=[]){let t=[];for(let i=0;i<e.length;i++){let s=e[i];s.type=s.delta.type,t.push(s)}return t}formatVaultAddress(e){return void 0===e?void 0:e.startsWith("0x")?e.replace("0x",""):e}handlePublicAddress(e,t){let i;[i,t]=this.handleOptionAndParams(t,e,"user");let s=i;if([s,t]=this.handleOptionAndParams(t,e,"address",i),void 0!==s&&""!==s)return[s,t];if(void 0!==this.walletAddress&&""!==this.walletAddress)return[this.walletAddress,t];throw new n.ArgumentsRequired(this.id+" "+e+"() requires a user parameter inside 'params' or the wallet address set")}coinToMarketId(e){return e.indexOf("/")>-1||e.indexOf("@")>-1?e:e+"/USDC:USDC"}handleErrors(e,t,i,s,r,a,o,h,d){let l;if(!o)return;if("err"===this.safeString(o,"status",""))l=this.safeString(o,"response");else{let e=this.safeDict(o,"response",{}),t=this.safeDict(e,"data",{}),i=this.safeList(t,"statuses",[]),s=this.safeDict(i,0);l=this.safeString(s,"error")}let c=this.id+" "+a,u=void 0!==l&&""!==l;if(u&&(this.throwExactlyMatchedException(this.exceptions.exact,l,c),this.throwBroadlyMatchedException(this.exceptions.broad,l,c)),u)throw new n.ExchangeError(c)}sign(e,t="public",i="GET",s={},r,a){let n=this.implodeHostname(this.urls.api[t])+"/"+e;return"POST"===i&&(r={"Content-Type":"application/json"},a=this.json(s)),{url:n,method:i,body:a,headers:r}}calculateRateLimiterCost(e,t,i,s,r={}){if("byType"in r&&"type"in s){let e=s.type,t=r.byType;if(e in t)return t[e]}return this.safeValue(r,"cost",1)}parseCreateOrderArgs(e,t,i,s,r,a={}){let n=this.market(e),o=this.safeString(a,"vaultAddress");a=this.omit(a,"vaultAddress");let h={symbol:e=n.symbol,type:t,side:i,amount:s,price:r,params:a},d={};return void 0!==o&&(d.vaultAddress=o),[h,d]}}class t1 extends s.k{}let t2=t1;class t3 extends t2{describe(){return this.deepExtend(super.describe(),{id:"idex",name:"IDEX",countries:["US"],rateLimit:1e3,version:"v3",pro:!0,dex:!0,certified:!1,requiresWeb3:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","6h":"6h","1d":"1d"},urls:{test:{MATIC:"https://api-sandbox-matic.idex.io"},logo:"https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg",api:{MATIC:"https://api-matic.idex.io"},www:"https://idex.io",doc:["https://api-docs-v3.idex.io/"]},api:{public:{get:{ping:1,time:1,exchange:1,assets:1,markets:1,tickers:1,candles:1,trades:1,orderbook:1}},private:{get:{user:1,wallets:1,balances:1,orders:.1,fills:.1,deposits:1,withdrawals:1,wsToken:1},post:{wallets:1,orders:.1,"orders/test":.1,withdrawals:1},delete:{orders:.1}}},options:{defaultTimeInForce:"gtc",defaultSelfTradePrevention:"cn",network:"MATIC"},exceptions:{exact:{INVALID_ORDER_QUANTITY:n.InvalidOrder,INSUFFICIENT_FUNDS:n.InsufficientFunds,SERVICE_UNAVAILABLE:n.ExchangeNotAvailable,EXCEEDED_RATE_LIMIT:n.DDoSProtection,INVALID_PARAMETER:n.BadRequest,WALLET_NOT_ASSOCIATED:n.InvalidAddress,INVALID_WALLET_SIGNATURE:n.AuthenticationError}},requiredCredentials:{walletAddress:!0,privateKey:!0,apiKey:!0,secret:!0},precisionMode:d.kb,paddingMode:d.ex,commonCurrencies:{}})}priceToPrecision(e,t){let i=this.market(e);return t=this.decimalToPrecision(t,d.D_,i.precision.price,this.precisionMode),this.decimalToPrecision(t,d.R3,i.precision.quote,d.kb,d.ex)}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e),i=await this.publicGetExchange(),s=this.safeNumber(i,"makerFeeRate"),a=this.safeNumber(i,"takerFeeRate"),n=this.safeString(i,"makerTradeMinimum"),o=this.safeString(i,"takerTradeMinimum"),h=this.parseNumber(r.Y.stringMin(n,o)),d=[];for(let e=0;e<t.length;e++){let i;let r=t[e],n=this.safeString(r,"market"),o=this.safeString(r,"baseAsset"),l=this.safeString(r,"quoteAsset"),c=this.safeCurrencyCode(o),u=this.safeCurrencyCode(l),f=this.parseNumber(this.parsePrecision(this.safeString(r,"baseAssetPrecision"))),p=this.parseNumber(this.parsePrecision(this.safeString(r,"quoteAssetPrecision"))),m=this.safeString(r,"status");"ETH"===u&&(i=h),d.push({id:n,symbol:c+"/"+u,base:c,quote:u,settle:void 0,baseId:o,quoteId:l,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"inactive"!==m,contract:!1,linear:void 0,inverse:void 0,taker:a,maker:s,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:f,price:this.safeNumber(r,"tickSize"),base:f,quote:p},limits:{leverage:{min:void 0,max:void 0},amount:{min:f,max:void 0},price:{min:p,max:void 0},cost:{min:i,max:void 0}},created:void 0,info:r})}return d}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={market:i.id},r=await this.publicGetTickers(this.extend(s,t)),a=this.safeDict(r,0);return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t);return this.parseTickers(i,e)}parseTicker(e,t){let i=this.safeString(e,"market"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.safeInteger(e,"time"),a=this.safeString(e,"close");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString(e,"percentChange"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={market:a.id,interval:t};void 0!==i&&(n.start=i),void 0!==s&&(n.limit=Math.min(s,1e3));let o=await this.publicGetCandles(this.extend(n,r));return Array.isArray(o)?this.parseOHLCVs(o,a,t,i,s):[]}parseOHLCV(e,t){let i=this.safeInteger(e,"start"),s=this.safeNumber(e,"open"),r=this.safeNumber(e,"high");return[i,s,r,this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market:r.id};void 0!==t&&(a.start=t),void 0!==i&&(a.limit=Math.min(i,1e3));let n=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseTrade(e,t){let i;let s=this.safeString(e,"fillId"),r=this.safeString(e,"price"),a=this.safeString(e,"quantity"),n=this.safeString(e,"quoteQuantity"),o=this.safeInteger(e,"time"),h=this.safeString(e,"market"),d=this.safeSymbol(h,t,"-"),l=this.safeString(e,"makerSide"),c=this.safeString(e,"side","buy"===l?"sell":"buy"),u=this.safeString(e,"liquidity","taker"),f=this.safeString(e,"fee");if(void 0!==f){let t=this.safeString(e,"feeAsset");i={cost:f,currency:this.safeCurrencyCode(t)}}let p=this.safeString(e,"orderId");return this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:d,id:s,order:p,type:"limit",side:c,takerOrMaker:u,price:r,amount:a,cost:n,fee:i},t)}async fetchTradingFees(e={}){let t;this.checkRequiredCredentials(),await this.loadMarkets();let i=this.uuidv1();t=await this.privateGetUser(this.extend({nonce:i},e));let s=this.safeNumber(t,"makerFeeRate"),r=this.safeNumber(t,"takerFeeRate"),a={};for(let e=0;e<this.symbols.length;e++){let i=this.symbols[e];a[i]={info:t,symbol:i,maker:s,taker:r,percentage:!0,tierBased:!1}}return a}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.market(e).id,level:2};void 0!==t&&(s.limit=t);let r=await this.publicGetOrderbook(this.extend(s,i));return{symbol:e,timestamp:void 0,datetime:void 0,nonce:this.safeInteger(r,"sequence"),bids:this.parseSide(r,"bids"),asks:this.parseSide(r,"asks")}}parseSide(e,t){let i=this.safeValue(e,t,[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeNumber(t,0),a=this.safeNumber(t,1),n=this.safeInteger(t,2);s.push([r,a,n])}return this.sortBy(s,0,"bids"===t)}async fetchCurrencies(e={}){let t=await this.publicGetAssets(e),i={};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"name"),a=this.safeString(s,"symbol"),n=this.safeCurrencyCode(a),o=this.parseNumber(this.parsePrecision(this.safeString(s,"exchangeDecimals")));i[n]={id:a,code:n,info:s,type:void 0,name:r,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:o,max:void 0}}}}return i}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"quantity"),n.free=this.safeString(s,"availableForTrade"),n.used=this.safeString(s,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){let t;this.checkRequiredCredentials(),await this.loadMarkets();let i={nonce:this.uuidv1(),wallet:this.walletAddress},s=this.extend(i,e);if(void 0===s.wallet)throw new n.BadRequest(this.id+' fetchBalance() wallet is undefined, set this.walletAddress or "address" in params');try{t=await this.privateGetBalances(s)}catch(e){if(e instanceof n.InvalidAddress){let e=s.wallet;await this.associateWallet(e),t=await this.privateGetBalances(s)}else throw e}return this.parseBalance(t)}async fetchMyTrades(e,t,i,s={}){let r,a;this.checkRequiredCredentials(),await this.loadMarkets();let o={nonce:this.uuidv1(),wallet:this.walletAddress};void 0!==e&&(r=this.market(e),o.market=r.id),void 0!==t&&(o.start=t),void 0!==i&&(o.limit=i);let h=this.extend(o,s);if(void 0===h.wallet)throw new n.BadRequest(this.id+' fetchMyTrades() walletAddress is undefined, set this.walletAddress or "address" in params');try{a=await this.privateGetFills(h)}catch(e){if(e instanceof n.InvalidAddress){let e=h.wallet;await this.associateWallet(e),a=await this.privateGetFills(h)}else throw e}return this.parseTrades(a,r,t,i)}async fetchOrder(e,t,i={}){return await this.fetchOrdersHelper(t,void 0,void 0,this.extend({orderId:e},i))}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersHelper(e,t,i,this.extend({closed:!1},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersHelper(e,t,i,this.extend({closed:!0},s))}async fetchOrdersHelper(e,t,i,s={}){let r;await this.loadMarkets();let a={nonce:this.uuidv1(),wallet:this.walletAddress};void 0!==e&&(r=this.market(e),a.market=r.id),void 0!==t&&(a.start=t),void 0!==i&&(a.limit=i);let n=await this.privateGetOrders(this.extend(a,s));return Array.isArray(n)?this.parseOrders(n,r,t,i):this.parseOrder(n,r)}parseOrderStatus(e){return this.safeString({active:"open",partiallyFilled:"open",rejected:"canceled",filled:"closed"},e,e)}parseOrder(e,t){let i=this.safeInteger(e,"time"),s=this.safeValue(e,"fills",[]),r=this.safeString(e,"orderId"),a=this.safeString(e,"clientOrderId"),n=this.safeString(e,"market"),o=this.safeString(e,"side"),h=this.safeSymbol(n,t,"-"),d=this.safeString(e,"type"),l=this.safeString(e,"originalQuantity"),c=this.safeString(e,"executedQuantity"),u=this.safeString(e,"avgExecutionPrice"),f=this.safeString(e,"price"),p=this.safeString(e,"status"),m=this.safeStringUpper(e,"timeInForce"),g=this.parseOrderStatus(p);return this.safeOrder({info:e,id:r,clientOrderId:a,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:h,type:d,timeInForce:m,postOnly:void 0,side:o,price:f,triggerPrice:void 0,amount:l,cost:void 0,average:u,filled:c,remaining:void 0,status:g,fee:void 0,trades:s},t)}async associateWallet(e,t={}){let i=this.uuidv1(),s=this.remove0xPrefix(e),r=[this.base16ToBinary(i),this.base16ToBinary(s)],a=this.binaryConcatArray(r),n=this.hash(a,tZ.lY,"hex"),o=this.signMessageString(n,this.privateKey);return await this.privatePostWallets({parameters:{nonce:i,wallet:e},signature:o})}async createOrder(e,t,i,s,r,a={}){let o,h,d,l,c,u;this.checkRequiredCredentials(),await this.loadMarkets();let f=this.safeBool(a,"test",!1);a=this.omit(a,"test");let p=this.market(e),m=this.uuidv1(),g={stopLoss:3,stopLossLimit:4,takeProfit:5,takeProfitLimit:6},y=this.safeString(a,"triggerPrice","stopPrice");if("stopLossLimit"===t||"takeProfitLimit"===t){if(void 0===y)throw new n.BadRequest(this.id+" createOrder() triggerPrice is a required parameter for "+t+"orders");h=this.priceToPrecision(e,y)}let v={limit:1,limitMaker:2},b=t.toLowerCase().indexOf("limit")>=0;if(t in v)o=v[t],d=this.priceToPrecision(e,r);else if(t in g)o=g[t],d=this.priceToPrecision(e,r);else if("market"===t)o=0;else throw new n.BadRequest(this.id+" "+t+" is not a valid order type");let w=0;if("quoteOrderQuantity"in a){if("market"!==t)throw new n.NotSupported(this.id+" createOrder() quoteOrderQuantity is not supported for "+t+" orders, only supported for market orders");w=1,s=this.safeNumber(a,"quoteOrderQuantity")}let k=this.remove0xPrefix(this.walletAddress),S=this.safeString(this.options,"network","ETH"),O=this.getSupportedMapping(S,{ETH:1,BSC:2,MATIC:4}),T=this.amountToPrecision(e,s),I={gtc:0,ioc:2,fok:3},x=this.safeString(this.options,"defaultTimeInForce","gtc"),P=this.safeString(a,"timeInForce",x);if(P in I)l=I[P];else{let e=Object.keys(I).join(", ");throw new n.BadRequest(this.id+" "+P+" is not a valid timeInForce, please choose one of "+e)}let M={dc:0,co:1,cn:2,cb:3},A=this.safeString(this.options,"defaultSelfTradePrevention","cn"),C=this.safeString(a,"selfTradePrevention",A);if(C in M)c=M[C];else{let e=Object.keys(M).join(", ");throw new n.BadRequest(this.id+" "+C+" is not a valid selfTradePrevention, please choose one of "+e)}let B=[this.numberToBE(O,1),this.base16ToBinary(m),this.base16ToBinary(k),this.encode(p.id),this.numberToBE(o,1),this.numberToBE("buy"===i?0:1,1),this.encode(T),this.numberToBE(w,1)];if(b){let e=this.encode(d);B.push(e)}if(t in g){let e=this.encode(h||d);B.push(e)}let E=this.safeString(a,"clientOrderId");void 0!==E&&B.push(this.encode(E));let _=[this.numberToBE(l,1),this.numberToBE(c,1),this.numberToBE(0,8)],N=this.arrayConcat(B,_),L=this.binaryConcatArray(N),R=this.hash(L,tZ.lY,"hex"),D=this.signMessageString(R,this.privateKey),V={parameters:{nonce:m,market:p.id,side:i,type:t,wallet:this.walletAddress,selfTradePrevention:C},signature:D};return"market"!==t&&(V.parameters.timeInForce=P),b&&(V.parameters.price=d),t in g&&(V.parameters.stopPrice=h||d),0===w?V.parameters.quantity=T:V.parameters.quoteOrderQuantity=T,void 0!==E&&(V.parameters.clientOrderId=E),u=f?await this.privatePostOrdersTest(V):await this.privatePostOrders(V),this.parseOrder(u,p)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkRequiredCredentials(),await this.loadMarkets();let a=this.uuidv1(),n=this.currencyToPrecision(e,t),o=this.currency(e),h=this.remove0xPrefix(this.walletAddress),d=[this.base16ToBinary(a),this.base16ToBinary(h),this.encode(o.id),this.encode(n),this.numberToBE(1,1)],l=this.binaryConcatArray(d),c=this.hash(l,tZ.lY,"hex"),u=this.signMessageString(c,this.privateKey),f={parameters:{nonce:a,wallet:i,asset:o.id,quantity:n},signature:u},p=await this.privatePostWithdrawals(f);return this.parseTransaction(p,o)}async cancelAllOrders(e,t={}){let i;this.checkRequiredCredentials(),await this.loadMarkets(),void 0!==e&&(i=this.market(e));let s=this.uuidv1(),r={parameters:{nonce:s,wallet:this.walletAddress}},a=this.remove0xPrefix(this.walletAddress),n=[this.base16ToBinary(s),this.base16ToBinary(a)];void 0!==i&&(n.push(this.encode(i.id)),r.parameters.market=i.id);let o=this.binaryConcatArray(n),h=this.hash(o,tZ.lY,"hex"),d=this.signMessageString(h,this.privateKey);r.signature=d;let l=await this.privateDeleteOrders(this.extend(r,t));return this.parseOrders(l,i)}async cancelOrder(e,t,i={}){let s;this.checkRequiredCredentials(),await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=this.uuidv1(),a=this.remove0xPrefix(this.walletAddress),n=[this.base16ToBinary(r),this.base16ToBinary(a),this.encode(e)],o=this.binaryConcatArray(n),h=this.hash(o,tZ.lY,"hex"),d=this.signMessageString(h,this.privateKey),l={parameters:{nonce:r,wallet:this.walletAddress,orderId:e},signature:d},c=await this.privateDeleteOrders(this.extend(l,i)),u=this.safeDict(c,0);return this.parseOrder(u,s)}handleErrors(e,t,i,s,r,a,o,h,d){let l=this.safeString(o,"code"),c=this.safeString(o,"message");if(void 0!==l)throw this.throwExactlyMatchedException(this.exceptions.exact,l,c),new n.ExchangeError(this.id+" "+c)}async fetchDeposit(e,t,i={}){await this.loadMarkets();let s={nonce:this.uuidv1(),wallet:this.walletAddress,depositId:e},r=await this.privateGetDeposits(this.extend(s,i));return this.parseTransaction(r)}async fetchDeposits(e,t,i,s={}){return s=this.extend({method:"privateGetDeposits"},s),await this.fetchTransactionsHelper(e,t,i,s)}async fetchStatus(e={}){return{status:"ok",updated:void 0,eta:void 0,url:void 0,info:await this.publicGetPing(e)}}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.safeInteger(t,"serverTime")}async fetchWithdrawal(e,t,i={}){await this.loadMarkets();let s={nonce:this.uuidv1(),wallet:this.walletAddress,withdrawalId:e},r=await this.privateGetWithdrawals(this.extend(s,i));return this.parseTransaction(r)}async fetchWithdrawals(e,t,i,s={}){return s=this.extend({method:"privateGetWithdrawals"},s),await this.fetchTransactionsHelper(e,t,i,s)}async fetchTransactionsHelper(e,t,i,s={}){let r,a;await this.loadMarkets();let o={nonce:this.uuidv1(),wallet:this.walletAddress};void 0!==e&&(r=this.currency(e),o.asset=r.id),void 0!==t&&(o.start=t),void 0!==i&&(o.limit=i);let h=s.method;if(s=this.omit(s,"method"),"privateGetDeposits"===h)a=await this.privateGetDeposits(this.extend(o,s));else if("privateGetWithdrawals"===h)a=await this.privateGetWithdrawals(this.extend(o,s));else throw new n.NotSupported(this.id+" fetchTransactionsHelper() not support this method");return this.parseTransactions(a,r,t,i)}parseTransactionStatus(e){return this.safeString({mined:"ok"},e,e)}parseTransaction(e,t){let i,s;"depositId"in e?i="deposit":("withdrawId"in e||"withdrawalId"in e)&&(i="withdrawal");let r=this.safeString2(e,"depositId","withdrawId");r=this.safeString(e,"withdrawalId",r);let a=this.safeCurrencyCode(this.safeString(e,"asset"),t),n=this.safeNumber(e,"quantity"),o=this.safeString(e,"txId"),h=this.safeInteger2(e,"txTime","time");"fee"in e&&(s={cost:this.safeNumber(e,"fee"),currency:"ETH"});let d=this.safeString(e,"txStatus"),l=this.parseTransactionStatus(d),c=this.safeInteger(e,"confirmationTime");return{info:e,id:r,txid:o,timestamp:h,datetime:this.iso8601(h),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:i,amount:n,currency:a,status:l,updated:c,comment:void 0,internal:void 0,fee:s}}calculateRateLimiterCost(e,t,i,s,r={}){let a=void 0!==this.apiKey,n=void 0!==this.secret,o=void 0!==this.walletAddress,h=void 0!==this.privateKey,d=this.safeValue(r,"cost",1);return a&&n&&o&&h?d/2:d}async fetchDepositAddress(e,t={}){let i={};i.nonce=this.uuidv1();let s=await this.privateGetWallets(this.extend(i,t));return this.parseDepositAddress(s)}parseDepositAddress(e,t){let i=e.length,s=this.safeDict(e,i-1),r=this.safeString(s,"address");return this.checkAddress(r),{info:e,currency:void 0,network:"MATIC",address:r,tag:void 0}}sign(e,t="public",i="GET",s={},r,a){let n;let o=this.safeString(this.options,"network","ETH"),h=this.safeString(this.options,"version","v1"),d=this.urls.api[o]+"/"+h+"/"+e;if(Object.keys(s).length>0&&("GET"===i?d=d+"?"+(n=this.urlencode(s)):a=this.json(s)),r={"Content-Type":"application/json"},void 0!==this.apiKey&&(r["IDEX-API-Key"]=this.apiKey),"private"===t){let e;e="GET"===i?n:a,r["IDEX-HMAC-Signature"]=this.hmac(this.encode(e),this.encode(this.secret),l.s,"hex")}return{url:d,method:i,body:a,headers:r}}remove0xPrefix(e){return"0x"===e.slice(0,2)?e.slice(2):e}hashMessage(e){let t=this.base16ToBinary(this.remove0xPrefix(e)),i=this.encode("\x19Ethereum Signed Message:\n"+t.byteLength);return"0x"+this.hash(this.binaryConcat(i,t),tZ.lY,"hex")}signHash(e,t){let i=(0,tB.h1)(e.slice(-64),t.slice(-64),tJ.bI,void 0);return{r:"0x"+i.r,s:"0x"+i.s,v:27+i.v}}signMessage(e,t){return this.signHash(this.hashMessage(e),t.slice(-64))}signMessageString(e,t){let i=this.signMessage(e,t);return i.r+this.remove0xPrefix(i.s)+this.binaryToBase16(this.numberToBE(i.v,1))}}class t5 extends s.k{}let t6=t5;class t4 extends t6{describe(){return this.deepExtend(super.describe(),{id:"independentreserve",name:"Independent Reserve",countries:["AU","NZ"],rateLimit:1e3,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182090-1e9e9080-c2ec-11ea-8e49-563db9a38f37.jpg",api:{public:"https://api.independentreserve.com/Public",private:"https://api.independentreserve.com/Private"},www:"https://www.independentreserve.com",doc:"https://www.independentreserve.com/API"},api:{public:{get:["GetValidPrimaryCurrencyCodes","GetValidSecondaryCurrencyCodes","GetValidLimitOrderTypes","GetValidMarketOrderTypes","GetValidOrderTypes","GetValidTransactionTypes","GetMarketSummary","GetOrderBook","GetAllOrders","GetTradeHistorySummary","GetRecentTrades","GetFxRates","GetOrderMinimumVolumes","GetCryptoWithdrawalFees","GetCryptoWithdrawalFees2","GetNetworks","GetPrimaryCurrencyConfig2"]},private:{post:["GetOpenOrders","GetClosedOrders","GetClosedFilledOrders","GetOrderDetails","GetAccounts","GetTransactions","GetFiatBankAccounts","GetDigitalCurrencyDepositAddress","GetDigitalCurrencyDepositAddress2","GetDigitalCurrencyDepositAddresses","GetDigitalCurrencyDepositAddresses2","GetTrades","GetBrokerageFees","GetDigitalCurrencyWithdrawal","PlaceLimitOrder","PlaceMarketOrder","CancelOrder","SynchDigitalCurrencyDepositAddressWithBlockchain","RequestFiatWithdrawal","WithdrawFiatCurrency","WithdrawDigitalCurrency","WithdrawCrypto"]}},fees:{trading:{taker:this.parseNumber("0.005"),maker:this.parseNumber("0.005"),percentage:!0,tierBased:!1}},commonCurrencies:{PLA:"PlayChip"},precisionMode:d.kb,options:{defaultNetworks:{USDT:"Ethereum",USDC:"Ethereum",BTC:"Bitcoin",BCH:"BitcoinCash",ETH:"Ethereum",LTC:"Litecoin",XRP:"XrpLedger",ZRX:"Ethereum",EOS:"EosIo",XLM:"Stellar",BAT:"Ethereum",ETC:"EthereumClassic",LINK:"Ethereum",MKR:"Ethereum",DAI:"Ethereum",COMP:"Ethereum",SNX:"Ethereum",YFI:"Ethereum",AAVE:"Ethereum",GRT:"Ethereum",DOT:"Polkadot",UNI:"Ethereum",ADA:"Cardano",MATIC:"Ethereum",DOGE:"Dogecoin",SOL:"Solana",MANA:"Ethereum",SAND:"Ethereum",SHIB:"Ethereum",TRX:"Tron",RENDER:"Solana",WIF:"Solana",RLUSD:"Ethereum",PEPE:"Ethereum"},networks:{BTC:"Bitcoin",ETH:"Ethereum",BCH:"BitcoinCash",LTC:"Litecoin",XRP:"XrpLedger",EOS:"EosIo",XLM:"Stellar",ETC:"EthereumClassic",BSV:"BitcoinSV",DOGE:"Dogecoin",DOT:"Polkadot",ADA:"Cardano",SOL:"Solana",TRX:"Tron"}}})}async fetchMarkets(e={}){let t=this.publicGetGetValidPrimaryCurrencyCodes(e),i=this.publicGetGetValidSecondaryCurrencyCodes(e),s=this.publicGetGetOrderMinimumVolumes(e),[r,a,n]=await Promise.all([t,i,s]),o=[];for(let e=0;e<r.length;e++){let t=r[e],i=this.safeCurrencyCode(t),s=this.safeNumber(n,t);for(let e=0;e<a.length;e++){let r=a[e],n=this.safeCurrencyCode(r),h=t+"/"+r;o.push({id:h,symbol:i+"/"+n,base:i,quote:n,settle:void 0,baseId:t,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:s,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:h})}}return o}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"CurrencyCode"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"AvailableBalance"),n.total=this.safeString(s,"TotalBalance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetAccounts(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={primaryCurrencyCode:s.baseId,secondaryCurrencyCode:s.quoteId},a=await this.publicGetGetOrderBook(this.extend(r,i)),n=this.parse8601(this.safeString(a,"CreatedTimestampUtc"));return this.parseOrderBook(a,s.symbol,n,"BuyOrders","SellOrders","Price","Volume")}parseTicker(e,t){let i;let s=this.parse8601(this.safeString(e,"CreatedTimestampUtc")),r=this.safeString(e,"PrimaryCurrencyCode"),a=this.safeString(e,"SecondaryCurrencyCode");void 0!==r&&void 0!==a&&(i=r+"/"+a);let n=(t=this.safeMarket(i,t,"/")).symbol,o=this.safeString(e,"LastPrice");return this.safeTicker({symbol:n,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"DayHighestPrice"),low:this.safeString(e,"DayLowestPrice"),bid:this.safeString(e,"CurrentHighestBidPrice"),bidVolume:void 0,ask:this.safeString(e,"CurrentLowestOfferPrice"),askVolume:void 0,vwap:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"DayAvgPrice"),baseVolume:this.safeString(e,"DayVolumeXbtInSecondaryCurrrency"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={primaryCurrencyCode:i.baseId,secondaryCurrencyCode:i.quoteId},r=await this.publicGetGetMarketSummary(this.extend(s,t));return this.parseTicker(r,i)}parseOrder(e,t){let i,s,a,n;let o=this.safeString(e,"PrimaryCurrencyCode"),h=this.safeString(e,"SecondaryCurrencyCode");void 0!==o&&void 0!==h?i=(s=this.safeCurrencyCode(o))+"/"+this.safeCurrencyCode(h):void 0!==t&&(i=t.symbol,s=t.base,t.quote);let d=this.safeString2(e,"Type","OrderType");void 0!==d&&(d.indexOf("Bid")>=0?a="buy":d.indexOf("Offer")>=0&&(a="sell"),d.indexOf("Market")>=0?d="market":d.indexOf("Limit")>=0&&(d="limit"));let l=this.parse8601(this.safeString(e,"CreatedTimestampUtc")),c=this.safeString(e,"VolumeFilled"),u=this.safeString(e,"FeePercent");return void 0!==u&&void 0!==c&&(n=r.Y.stringMul(u,c)),this.safeOrder({info:e,id:this.safeString(e,"OrderGuid"),clientOrderId:void 0,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,symbol:i,type:d,timeInForce:void 0,postOnly:void 0,side:a,price:this.safeString(e,"Price"),triggerPrice:void 0,cost:this.safeString(e,"Value"),average:this.safeString(e,"AvgPrice"),amount:this.safeString2(e,"VolumeOrdered","Volume"),filled:c,remaining:this.safeString(e,"Outstanding"),status:this.parseOrderStatus(this.safeString(e,"Status")),fee:{rate:u,cost:n,currency:s},trades:void 0},t)}parseOrderStatus(e){return this.safeString({Open:"open",PartiallyFilled:"open",Filled:"closed",PartiallyFilledAndCancelled:"canceled",Cancelled:"canceled",PartiallyFilledAndExpired:"canceled",Expired:"canceled"},e,e)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets();let r=await this.privatePostGetOrderDetails(this.extend({orderGuid:e},i));return void 0!==t&&(s=this.market(t)),this.parseOrder(r,s)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=this.ordered({});void 0!==e&&(r=this.market(e),a.primaryCurrencyCode=r.baseId,a.secondaryCurrencyCode=r.quoteId),void 0===i&&(i=50),a.pageIndex=1,a.pageSize=i;let n=await this.privatePostGetOpenOrders(this.extend(a,s)),o=this.safeList(n,"Data",[]);return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=this.ordered({});void 0!==e&&(r=this.market(e),a.primaryCurrencyCode=r.baseId,a.secondaryCurrencyCode=r.quoteId),void 0===i&&(i=50),a.pageIndex=1,a.pageSize=i;let n=await this.privatePostGetClosedOrders(this.extend(a,s)),o=this.safeList(n,"Data",[]);return this.parseOrders(o,r,t,i)}async fetchMyTrades(e,t,i=50,s={}){let r;await this.loadMarkets();let a=this.safeInteger(s,"pageIndex",1);void 0===i&&(i=50);let n=this.ordered({pageIndex:a,pageSize:i}),o=await this.privatePostGetTrades(this.extend(n,s));return void 0!==e&&(r=this.market(e)),this.parseTrades(o.Data,r,t,i)}parseTrade(e,t){let i;let s=this.parse8601(e.TradeTimestampUtc),a=this.safeString(e,"TradeGuid"),n=this.safeString(e,"OrderGuid"),o=this.safeString2(e,"Price","SecondaryCurrencyTradePrice"),h=this.safeString2(e,"VolumeTraded","PrimaryCurrencyAmount"),d=this.parseNumber(o),l=this.parseNumber(h),c=this.parseNumber(r.Y.stringMul(o,h)),u=this.safeString(e,"PrimaryCurrencyCode"),f=this.safeString(e,"SecondaryCurrencyCode");void 0!==u&&void 0!==f&&(i=u+"/"+f);let p=this.safeSymbol(i,t,"/"),m=this.safeString(e,"OrderType");return void 0!==m&&(m.indexOf("Bid")>=0?m="buy":m.indexOf("Offer")>=0&&(m="sell")),this.safeTrade({id:a,info:e,timestamp:s,datetime:this.iso8601(s),symbol:p,order:n,type:void 0,side:m,takerOrMaker:void 0,price:d,amount:l,cost:c,fee:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={primaryCurrencyCode:r.baseId,secondaryCurrencyCode:r.quoteId,numberOfRecentTradesToRetrieve:50},n=await this.publicGetGetRecentTrades(this.extend(a,s));return this.parseTrades(n.Trades,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostGetBrokerageFees(e),i={};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"CurrencyCode"),a=this.safeCurrencyCode(r),n=this.safeNumber(s,"Fee");i[a]={info:s,fee:n}}let s={};for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e],r=this.market(t),a=this.safeValue(i,r.base,{});s[t]={info:this.safeValue(a,"info"),symbol:t,maker:this.safeNumber(a,"fee"),taker:this.safeNumber(a,"fee"),percentage:!0,tierBased:!0}}return s}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets();let o=this.market(e),h=this.capitalize(t);h+="sell"===i?"Offer":"Bid";let d=this.ordered({primaryCurrencyCode:o.baseId,secondaryCurrencyCode:o.quoteId,orderType:h});return d.volume=s,"limit"===t?(d.price=r,n=await this.privatePostPlaceLimitOrder(this.extend(d,a))):n=await this.privatePostPlaceMarketOrder(this.extend(d,a)),this.safeOrder({info:n,id:n.OrderGuid},o)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostCancelOrder(this.extend({orderGuid:e},i));return this.parseOrder(s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={primaryCurrencyCode:this.currency(e).id},s=await this.privatePostGetDigitalCurrencyDepositAddress(this.extend(i,t));return this.parseDepositAddress(s)}parseDepositAddress(e,t){let i=this.safeString(e,"DepositAddress");return this.checkAddress(i),{info:e,currency:this.safeString(t,"code"),network:void 0,address:i,tag:this.safeString(e,"Tag")}}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let o=this.currency(e),h={primaryCurrencyCode:o.id,withdrawalAddress:i,amount:this.currencyToPrecision(e,t)};if(void 0!==s&&(h.destinationTag=s),[a,r]=this.handleNetworkCodeAndParams(r),void 0!==a)throw new n.BadRequest(this.id+' withdraw () does not accept params["networkCode"]');let d=await this.privatePostWithdrawDigitalCurrency(this.extend(h,r));return this.parseTransaction(d,o)}parseTransaction(e,t){let i=this.safeDict(e,"Amount"),s=this.safeDict(e,"Destination"),r=this.safeString(e,"PrimaryCurrencyCode"),a=this.safeString(e,"CreatedTimestampUtc"),n=this.safeString(s,"Address"),o=this.safeString(s,"Tag"),h=this.safeCurrencyCode(r,t);return{info:e,id:this.safeString(e,"TransactionGuid"),txid:void 0,type:"withdraw",currency:h,network:void 0,amount:this.safeNumber(i,"Total"),status:this.safeString(e,"Status"),timestamp:this.parse8601(a),datetime:a,address:n,addressFrom:void 0,addressTo:n,tag:o,tagFrom:void 0,tagTo:o,updated:void 0,comment:void 0,fee:{currency:h,cost:this.safeNumber(i,"Fee"),rate:void 0},internal:!1}}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce(),t=[n,"apiKey="+this.apiKey,"nonce="+e.toString()],i=Object.keys(s);for(let e=0;e<i.length;e++){let r=i[e],a=s[r].toString();t.push(r+"="+a)}let o=t.join(","),h=this.hmac(this.encode(o),this.encode(this.secret),l.s),d=this.ordered({});d.apiKey=this.apiKey,d.nonce=e,d.signature=h.toUpperCase();for(let e=0;e<i.length;e++){let t=i[e];d[t]=s[t]}a=this.json(d),r={"Content-Type":"application/json"}}return{url:n,method:i,body:a,headers:r}}}class t8 extends s.k{}let t7=t8;class t9 extends t7{describe(){return this.deepExtend(super.describe(),{id:"indodax",name:"INDODAX",countries:["ID"],rateLimit:50,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDeposit:!1,fetchDepositAddress:"emulated",fetchDepositAddresses:!0,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFee:!0,fetchTransactionFees:!1,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},version:"2.0",urls:{logo:"https://user-images.githubusercontent.com/51840849/87070508-9358c880-c221-11ea-8dc5-5391afbbb422.jpg",api:{public:"https://indodax.com",private:"https://indodax.com/tapi"},www:"https://www.indodax.com",doc:"https://github.com/btcid/indodax-official-api-docs",referral:"https://indodax.com/ref/testbitcoincoid/1"},api:{public:{get:{"api/server_time":5,"api/pairs":5,"api/price_increments":5,"api/summaries":5,"api/ticker/{pair}":5,"api/ticker_all":5,"api/trades/{pair}":5,"api/depth/{pair}":5,"tradingview/history_v2":5}},private:{post:{getInfo:4,transHistory:4,trade:1,tradeHistory:4,openOrders:4,orderHistory:4,getOrder:4,cancelOrder:4,withdrawFee:4,withdrawCoin:4,listDownline:4,checkDownline:4,createVoucher:4}}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:.003}},exceptions:{exact:{invalid_pair:n.BadSymbol,"Insufficient balance.":n.InsufficientFunds,"invalid order.":n.OrderNotFound,"Invalid credentials. API not found or session has expired.":n.AuthenticationError,"Invalid credentials. Bad sign.":n.AuthenticationError},broad:{"Minimum price":n.InvalidOrder,"Minimum order":n.InvalidOrder}},options:{recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,networks:{XLM:"Stellar Token",BSC:"bep20",TRC20:"trc20",MATIC:"polygon"},timeframes:{"1m":"1","15m":"15","30m":"30","1h":"60","4h":"240","1d":"1D","3d":"3D","1w":"1W"}},commonCurrencies:{STR:"XLM",BCHABC:"BCH",BCHSV:"BSV",DRK:"DASH",NEM:"XEM"},precisionMode:d.kb})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){let t=await this.publicGetApiServerTime(e);return this.safeInteger(t,"server_time")}async fetchMarkets(e={}){let t=await this.publicGetApiPairs(e),i=[];for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"ticker_id"),a=this.safeString(s,"traded_currency"),n=this.safeString(s,"base_currency"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.safeInteger(s,"is_maintenance");i.push({id:r,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!d,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(s,"trade_fee_percent"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,percentage:!0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber(this.parsePrecision(this.safeString(s,"price_round"))),cost:this.parseNumber(this.parsePrecision(this.safeString(s,"volume_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"trade_min_traded_currency"),max:void 0},price:{min:this.safeNumber(s,"trade_min_base_currency"),max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:s})}return i}parseBalance(e){let t=this.safeValue(e,"return",{}),i=this.safeValue(t,"balance",{}),s=this.safeValue(t,"balance_hold",{}),r=this.safeTimestamp(t,"server_time"),a={info:e,timestamp:r,datetime:this.iso8601(r)},n=Object.keys(i);for(let e=0;e<n.length;e++){let t=n[e],r=this.safeCurrencyCode(t),o=this.account();o.free=this.safeString(i,t),o.used=this.safeString(s,t),a[r]=o}return this.safeBalance(a)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.base+s.quote},a=await this.publicGetApiDepthPair(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"buy","sell")}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"server_time"),r="vol_"+t.baseId.toLowerCase(),a="vol_"+t.quoteId.toLowerCase(),n=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,r),quoteVolume:this.safeString(e,a),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.base+i.quote},r=await this.publicGetApiTickerPair(this.extend(s,t)),a=this.safeDict(r,"ticker",{});return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetApiTickerAll(t),s=this.safeDict(i,"tickers",{});return this.parseTickers(s,e)}parseTrade(e,t){let i=this.safeTimestamp(e,"date");return this.safeTrade({id:this.safeString(e,"tid"),info:e,timestamp:i,datetime:this.iso8601(i),symbol:this.safeSymbol(void 0,t),type:void 0,side:this.safeString(e,"type"),order:void 0,takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.base+r.quote},n=await this.publicGetApiTradesPair(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,"Time"),this.safeNumber(e,"Open"),this.safeNumber(e,"High"),this.safeNumber(e,"Low"),this.safeNumber(e,"Close"),this.safeNumber(e,"Volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.options.timeframes,o=this.safeString(n,t,t),h=this.seconds(),d=this.safeInteger(r,"until",h);r=this.omit(r,["until"]);let l={to:d,tf:o,symbol:a.base+a.quote};if(void 0===s&&(s=1e3),void 0!==i)l.from=Math.floor(i/1e3);else{let e=this.parseTimeframe(t);l.from=h-s*e-1}let c=await this.publicGetTradingviewHistoryV2(this.extend(l,r));return this.parseOHLCVs(c,a,t,i,s)}parseOrderStatus(e){return this.safeString({open:"open",filled:"closed",cancelled:"canceled"},e,e)}parseOrder(e,t){let i,s,r,a,n;"type"in e&&(i=e.type);let o=this.parseOrderStatus(this.safeString(e,"status","open")),h=this.safeString(e,"price"),d=this.safeString(e,"pair");if(void 0!==(t=this.safeMarket(d,t))){s=t.symbol;let i=t.quoteId,o=t.baseId;"idr"===t.quoteId&&"order_rp"in e&&(i="rp"),"idr"===t.baseId&&"remain_rp"in e&&(o="rp"),(r=this.safeString(e,"order_"+i))||(a=this.safeString(e,"order_"+o),n=this.safeString(e,"remain_"+o))}let l=this.safeInteger(e,"submit_time"),c=this.safeString(e,"order_id");return this.safeOrder({info:e,id:c,clientOrderId:this.safeString(e,"client_order_id"),timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,symbol:s,type:"limit",timeInForce:void 0,postOnly:void 0,side:i,price:h,triggerPrice:void 0,cost:r,average:void 0,amount:a,filled:void 0,remaining:n,status:o,fee:void 0,trades:void 0})}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={pair:s.id,order_id:e},a=await this.privatePostGetOrder(this.extend(r,i)),o=a.return,h=this.parseOrder(this.extend({id:e},o.order),s);return h.info=a,h}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pair=r.id);let n=(await this.privatePostOpenOrders(this.extend(a,s))).return.orders;if(!n)return[];if(void 0!==e)return this.parseOrders(n,r,t,i);let o=Object.keys(n),h=[];for(let e=0;e<o.length;e++){let s=o[e],a=n[s];r=this.safeMarket(s);let d=this.parseOrders(a,r,t,i);h=this.arrayConcat(h,d)}return h}async fetchClosedOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={pair:r.id},o=await this.privatePostOrderHistory(this.extend(a,s)),h=this.parseOrders(o.return.orders,r);return h=this.filterBy(h,"status","closed"),this.filterBySymbolSinceLimit(h,e,t,i)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let h=this.market(e),d={pair:h.id,type:i,price:a},l=!1,c=!1;if("market"===t){if("buy"===i){let t;let i=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0!==i)t=this.costToPrecision(e,i);else{if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price).");let i=this.numberToString(s),o=this.numberToString(a),h=r.Y.stringMul(i,o);t=this.costToPrecision(e,h)}d[h.quoteId]=t}else c=!0}else"limit"===t&&(l=!0,c=!0,"buy"===i&&(d[h.quoteId]=this.parseToNumeric(r.Y.stringMul(this.numberToString(s),this.numberToString(a)))));if(l){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires a price argument for a "+t+" order");d.price=a}c&&(d[h.baseId]=this.amountToPrecision(e,s));let u=await this.privatePostTrade(this.extend(d,o)),f=this.safeValue(u,"return",{}),p=this.safeString(f,"order_id");return this.safeOrder({info:u,id:p},h)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");let s=this.safeValue(i,"side");if(void 0===s)throw new n.ArgumentsRequired(this.id+' cancelOrder() requires an extra "side" param');await this.loadMarkets();let r={order_id:e,pair:this.market(t).id,type:s},a=await this.privatePostCancelOrder(this.extend(r,i)),o=this.safeDict(a,"return");return this.parseOrder(o)}async fetchTransactionFee(e,t={}){await this.loadMarkets();let i=this.currency(e),s={currency:i.id},r=await this.privatePostWithdrawFee(this.extend(s,t)),a=this.safeValue(r,"return",{}),n=this.safeString(a,"currency");return{info:r,rate:this.safeNumber(a,"withdraw_fee"),currency:this.safeCurrencyCode(n,i)}}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};if(void 0!==t){let e=this.iso8601(t).slice(0,10);a.start=e,a.end=this.iso8601(this.milliseconds()).slice(0,10)}let n=await this.privatePostTransHistory(this.extend(a,s)),o=this.safeValue(n,"return",{}),h=this.safeValue(o,"withdraw",{}),d=this.safeValue(o,"deposit",{}),l=[];if(void 0===e){let e=Object.keys(h);for(let t=0;t<e.length;t++){let i=e[t];l=this.arrayConcat(l,h[i])}e=Object.keys(d);for(let t=0;t<e.length;t++){let i=e[t];l=this.arrayConcat(l,d[i])}}else{r=this.currency(e);let t=this.safeValue(h,r.id,[]),i=this.safeValue(d,r.id,[]);l=this.arrayConcat(t,i)}return this.parseTransactions(l,r,t,i)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),n=this.milliseconds(),o={currency:a.id,withdraw_amount:t,withdraw_address:i,request_id:n.toString()};s&&(o.withdraw_memo=s);let h=await this.privatePostWithdrawCoin(this.extend(o,r));return this.parseTransaction(h,a)}parseTransaction(e,t){let i;let s=this.safeString(e,"status"),r=this.safeTimestamp2(e,"success_time","submit_time"),a=this.safeString(e,"deposit_id"),n=this.safeNumber(e,"fee");return void 0!==n&&(i={currency:this.safeCurrencyCode(void 0,t),cost:n,rate:void 0}),{id:this.safeString2(e,"withdraw_id","deposit_id"),txid:this.safeString2(e,"txid","tx"),timestamp:r,datetime:this.iso8601(r),network:void 0,addressFrom:void 0,address:this.safeString(e,"withdraw_address"),addressTo:void 0,amount:this.safeNumberN(e,["amount","withdraw_amount","deposit_amount"]),type:void 0===a?"withdraw":"deposit",currency:this.safeCurrencyCode(void 0,t),status:this.parseTransactionStatus(s),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:this.safeString(e,"withdraw_memo"),internal:void 0,fee:i,info:e}}parseTransactionStatus(e){return this.safeString({success:"ok"},e,e)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();let i=await this.privatePostGetInfo(t),s=this.safeDict(i,"return"),r=this.safeDict(s,"address",{}),a=this.safeDict(s,"network",{}),n=Object.keys(r),o={info:s};for(let t=0;t<n.length;t++){let i=n[t],s=this.safeCurrencyCode(i),h=this.safeString(r,i);if(void 0!==h&&(void 0===e||this.inArray(s,e))){let e;if(this.checkAddress(h),i in a){let t=this.safeString(a,i);if(t.indexOf(",")>=0){e=[];let i=t.split(",");for(let t=0;t<i.length;t++)e.push(this.networkIdToCode(i[t]).toUpperCase())}else e=this.networkIdToCode(t).toUpperCase()}o[s]={info:{},currency:s,network:e,address:h,tag:void 0}}}return o}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t];if("public"===t){let t=this.omit(s,this.extractParams(e));n+="/"+this.implodeParams(e,s),Object.keys(t).length&&(n+="?"+this.urlencodeWithArrayRepeat(t))}else this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,timestamp:this.nonce(),recvWindow:this.options.recvWindow},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),A.Zf)};return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o||Array.isArray(o))return;let l=this.safeValue(o,"error","");if(!("success"in o)&&""===l||"approved"===this.safeString(o,"success"))return;if(1===this.safeInteger(o,"success",0)){if("return"in o)return;throw new n.ExchangeError(this.id+": malformed response: "+this.json(o))}let c=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,c),this.throwBroadlyMatchedException(this.exceptions.broad,l,c),new n.ExchangeError(c)}}class ie extends s.k{}let it=ie;class ii extends it{describe(){return this.deepExtend(super.describe(),{id:"kraken",name:"Kraken",countries:["US"],version:"0",rateLimit:1e3,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelAllOrdersAfter:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,createTrailingAmountOrder:!0,createTrailingPercentOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLedgerEntry:!0,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:"emulated",fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":1,"5m":5,"15m":15,"30m":30,"1h":60,"4h":240,"1d":1440,"1w":10080,"2w":21600},urls:{logo:"https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg",api:{public:"https://api.kraken.com",private:"https://api.kraken.com",zendesk:"https://kraken.zendesk.com/api/v2/help_center/en-us/articles"},www:"https://www.kraken.com",doc:"https://docs.kraken.com/rest/",fees:"https://www.kraken.com/en-us/features/fee-schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0026"),maker:this.parseNumber("0.0016"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0026")],[this.parseNumber("50000"),this.parseNumber("0.0024")],[this.parseNumber("100000"),this.parseNumber("0.0022")],[this.parseNumber("250000"),this.parseNumber("0.0020")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("1000000"),this.parseNumber("0.0016")],[this.parseNumber("2500000"),this.parseNumber("0.0014")],[this.parseNumber("5000000"),this.parseNumber("0.0012")],[this.parseNumber("10000000"),this.parseNumber("0.0001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0016")],[this.parseNumber("50000"),this.parseNumber("0.0014")],[this.parseNumber("100000"),this.parseNumber("0.0012")],[this.parseNumber("250000"),this.parseNumber("0.0010")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0002")],[this.parseNumber("10000000"),this.parseNumber("0.0")]]}}},handleContentTypeApplicationZip:!0,api:{zendesk:{get:["360000292886","201893608"]},public:{get:{Assets:1,AssetPairs:1,Depth:1.2,OHLC:1.2,Spread:1,SystemStatus:1,Ticker:1,Time:1,Trades:1.2}},private:{post:{AddOrder:0,AddOrderBatch:0,AddExport:3,AmendOrder:0,Balance:3,CancelAll:3,CancelAllOrdersAfter:3,CancelOrder:0,CancelOrderBatch:0,ClosedOrders:3,DepositAddresses:3,DepositMethods:3,DepositStatus:3,EditOrder:0,ExportStatus:3,GetWebSocketsToken:3,Ledgers:6,OpenOrders:3,OpenPositions:3,QueryLedgers:3,QueryOrders:3,QueryTrades:3,RetrieveExport:3,RemoveExport:3,BalanceEx:3,TradeBalance:3,TradesHistory:6,TradeVolume:3,Withdraw:3,WithdrawCancel:3,WithdrawInfo:3,WithdrawMethods:3,WithdrawAddresses:3,WithdrawStatus:3,WalletTransfer:3,CreateSubaccount:3,AccountTransfer:3,"Earn/Allocate":3,"Earn/Deallocate":3,"Earn/AllocateStatus":3,"Earn/DeallocateStatus":3,"Earn/Strategies":3,"Earn/Allocations":3}}},commonCurrencies:{LUNA:"LUNC",LUNA2:"LUNA",REPV2:"REP",REP:"REPV1",UST:"USTC",XBT:"BTC","XBT.M":"BTC.M",XDG:"DOGE"},options:{timeDifference:0,adjustForTimeDifference:!1,marketsByAltname:{},delistedMarketsById:{},inactiveCurrencies:["CAD","USD","JPY","GBP"],networks:{ETH:"ERC20",TRX:"TRC20"},depositMethods:{"1INCH":"1inch (1INCH)",AAVE:"Aave",ADA:"ADA",ALGO:"Algorand",ANKR:"ANKR (ANKR)",ANT:"Aragon (ANT)",ATOM:"Cosmos",AXS:"Axie Infinity Shards (AXS)",BADGER:"Bager DAO (BADGER)",BAL:"Balancer (BAL)",BAND:"Band Protocol (BAND)",BAT:"BAT",BCH:"Bitcoin Cash",BNC:"Bifrost (BNC)",BNT:"Bancor (BNT)",BTC:"Bitcoin",CHZ:"Chiliz (CHZ)",COMP:"Compound (COMP)",CQT:"	Covalent Query Token (CQT)",CRV:"Curve DAO Token (CRV)",CTSI:"Cartesi (CTSI)",DAI:"Dai",DASH:"Dash",DOGE:"Dogecoin",DOT:"Polkadot",DYDX:"dYdX (DYDX)",ENJ:"Enjin Coin (ENJ)",EOS:"EOS",ETC:"Ether Classic (Hex)",ETH:"Ether (Hex)",EWT:"Energy Web Token",FEE:"Kraken Fee Credit",FIL:"Filecoin",FLOW:"Flow",GHST:"Aavegotchi (GHST)",GNO:"GNO",GRT:"GRT",ICX:"Icon",INJ:"Injective Protocol (INJ)",KAR:"Karura (KAR)",KAVA:"Kava",KEEP:"Keep Token (KEEP)",KNC:"Kyber Network (KNC)",KSM:"Kusama",LINK:"Link",LPT:"Livepeer Token (LPT)",LRC:"Loopring (LRC)",LSK:"Lisk",LTC:"Litecoin",MANA:"MANA",MATIC:"Polygon (MATIC)",MINA:"Mina",MIR:"Mirror Protocol (MIR)",MKR:"Maker (MKR)",MLN:"MLN",MOVR:"Moonriver (MOVR)",NANO:"NANO",OCEAN:"OCEAN",OGN:"Origin Protocol (OGN)",OMG:"OMG",OXT:"Orchid (OXT)",OXY:"Oxygen (OXY)",PAXG:"PAX (Gold)",PERP:"Perpetual Protocol (PERP)",PHA:"Phala (PHA)",QTUM:"QTUM",RARI:"Rarible (RARI)",RAY:"Raydium (RAY)",REN:"Ren Protocol (REN)",REP:"REPv2",REPV1:"REP",SAND:"The Sandbox (SAND)",SC:"Siacoin",SDN:"Shiden (SDN)",SOL:"Solana",SNX:"Synthetix  Network (SNX)",SRM:"Serum",STORJ:"Storj (STORJ)",SUSHI:"Sushiswap (SUSHI)",TBTC:"tBTC",TRX:"Tron",UNI:"UNI",USDC:"USDC",USDT:"Tether USD (ERC20)","USDT-TRC20":"Tether USD (TRC20)",WAVES:"Waves",WBTC:"Wrapped Bitcoin (WBTC)",XLM:"Stellar XLM",XMR:"Monero",XRP:"Ripple XRP",XTZ:"XTZ",YFI:"YFI",ZEC:"Zcash (Transparent)",ZRX:"0x (ZRX)"},withdrawMethods:{Lightning:"Lightning",Bitcoin:"BTC",Ripple:"XRP",Litecoin:"LTC",Dogecoin:"DOGE",Stellar:"XLM",Ethereum:"ERC20","Arbitrum One":"Arbitrum",Polygon:"MATIC","Arbitrum Nova":"Arbitrum",Optimism:"Optimism","zkSync Era":"zkSync","Ethereum Classic":"ETC",Zcash:"ZEC",Monero:"XMR",Tron:"TRC20",Solana:"SOL",EOS:"EOS","Bitcoin Cash":"BCH",Cardano:"ADA",Qtum:"QTUM",Tezos:"XTZ",Cosmos:"ATOM",Nano:"NANO",Siacoin:"SC",Lisk:"LSK",Waves:"WAVES",ICON:"ICX",Algorand:"ALGO","Polygon - USDC.e":"MATIC","Arbitrum One - USDC.e":"Arbitrum",Polkadot:"DOT",Kava:"KAVA",Filecoin:"FIL",Kusama:"KSM",Flow:"FLOW","Energy Web":"EW",Mina:"MINA",Centrifuge:"CFG",Karura:"KAR",Moonriver:"MOVR",Shiden:"SDN",Khala:"PHA","Bifrost Kusama":"BNC",Songbird:"SGB","Terra classic":"LUNC",KILT:"KILT",Basilisk:"BSX",Flare:"FLR","Avalanche C-Chain":"AVAX",Kintsugi:"KINT",Altair:"AIR",Moonbeam:"GLMR",Acala:"ACA",Astar:"ASTR",Akash:"AKT",Robonomics:"XRT",Fantom:"FTM",Elrond:"EGLD",THORchain:"RUNE",Secret:"SCRT",Near:"NEAR","Internet Computer Protocol":"ICP",Picasso:"PICA","Crust Shadow":"CSM",Integritee:"TEER","Parallel Finance":"PARA",HydraDX:"HDX",Interlay:"INTR","Fetch.ai":"FET",NYM:"NYM","Terra 2.0":"LUNA2",Juno:"JUNO",Nodle:"NODL",Stacks:"STX","Ethereum PoW":"ETHW",Aptos:"APT",Sui:"SUI",Genshiro:"GENS",Aventus:"AVT",Sei:"SEI",OriginTrail:"OTP",Celestia:"TIA"}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!0,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!0,iceberg:!0},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:void 0,daysBack:void 0,untilDays:void 0},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:void 0,daysBack:void 0,daysBackCanceled:void 0,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:720}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{"EQuery:Invalid asset pair":n.BadSymbol,"EAPI:Invalid key":n.AuthenticationError,"EFunding:Unknown withdraw key":n.InvalidAddress,"EFunding:Invalid amount":n.InsufficientFunds,"EService:Unavailable":n.ExchangeNotAvailable,"EDatabase:Internal error":n.ExchangeNotAvailable,"EService:Busy":n.ExchangeNotAvailable,"EQuery:Unknown asset":n.BadSymbol,"EAPI:Rate limit exceeded":n.DDoSProtection,"EOrder:Rate limit exceeded":n.DDoSProtection,"EGeneral:Internal error":n.ExchangeNotAvailable,"EGeneral:Temporary lockout":n.DDoSProtection,"EGeneral:Permission denied":n.PermissionDenied,"EGeneral:Invalid arguments:price":n.InvalidOrder,"EOrder:Unknown order":n.InvalidOrder,"EOrder:Invalid price:Invalid price argument":n.InvalidOrder,"EOrder:Order minimum not met":n.InvalidOrder,"EOrder:Insufficient funds":n.InsufficientFunds,"EGeneral:Invalid arguments":n.BadRequest,"ESession:Invalid session":n.AuthenticationError,"EAPI:Invalid nonce":n.InvalidNonce,"EFunding:No funding method":n.BadRequest,"EFunding:Unknown asset":n.BadSymbol,"EService:Market in post_only mode":n.OnMaintenance,"EGeneral:Too many requests":n.DDoSProtection,"ETrade:User Locked":n.AccountSuspended},broad:{":Invalid order":n.InvalidOrder,":Invalid arguments:volume":n.InvalidOrder,":Invalid arguments:viqc":n.InvalidOrder,":Invalid nonce":n.InvalidNonce,":IInsufficient funds":n.InsufficientFunds,":Cancel pending":n.CancelPending,":Rate limit exceeded":n.RateLimitExceeded}}})}feeToPrecision(e,t){return this.decimalToPrecision(t,d.R3,this.markets[e].precision.amount,this.precisionMode)}async fetchMarkets(e={}){this.options.adjustForTimeDifference&&await this.loadTimeDifference();let t=await this.publicGetAssetPairs(e),i=this.safeValue(t,"result",{}),s=Object.keys(i),a=[];for(let e=0;e<s.length;e++){let t,n;let o=s[e],h=i[o],d=this.safeString(h,"base"),l=this.safeString(h,"quote"),c=this.safeCurrencyCode(d),u=this.safeCurrencyCode(l),f=o.indexOf(".d")>=0,p=this.safeString(h,"altname"),m=this.safeValue(h,"fees_maker",[]),g=this.safeValue(m,0,[]),y=this.safeString(g,1);void 0!==y&&(t=this.parseNumber(r.Y.stringDiv(y,"100")));let v=this.safeValue(h,"fees",[]),b=this.safeValue(v,0,[]),w=this.safeString(b,1);void 0!==w&&(n=this.parseNumber(r.Y.stringDiv(w,"100")));let k=this.safeValue(h,"leverage_buy",[]),S=k.length,O=this.parseNumber(this.parsePrecision(this.safeString(h,"pair_decimals"))),T="online"===this.safeString(h,"status");a.push({id:o,wsId:this.safeString(h,"wsname"),symbol:f?p:c+"/"+u,base:c,quote:u,settle:void 0,baseId:d,quoteId:l,settleId:void 0,darkpool:f,altname:h.altname,type:"spot",spot:!0,margin:S>0,swap:!1,future:!1,option:!1,active:T,contract:!1,linear:void 0,inverse:void 0,taker:n,maker:t,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(h,"lot_decimals"))),price:O},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(k,S-1,1)},amount:{min:this.safeNumber(h,"ordermin"),max:void 0},price:{min:O,max:void 0},cost:{min:this.safeNumber(h,"costmin"),max:void 0}},created:void 0,info:h})}return a=this.appendInactiveMarkets(a),this.options.marketsByAltname=this.indexBy(a,"altname"),a}safeCurrency(e,t){return void 0!==e&&e.length>3&&(0===e.indexOf("X")||0===e.indexOf("Z"))&&!(e.indexOf(".")>0)&&"ZEUS"!==e&&(e=e.slice(1)),super.safeCurrency(e,t)}appendInactiveMarkets(e){let t={amount:this.parseNumber("1e-8"),price:this.parseNumber("1e-8")},i={min:t.price,max:void 0},s={min:t.amount,max:void 0},r={darkpool:!1,info:void 0,maker:void 0,taker:void 0,active:!1,precision:t,limits:{amount:s,price:i,cost:{min:void 0,max:void 0}}},a=[];for(let t=0;t<a.length;t++)e.push(this.extend(r,a[t]));return e}async fetchStatus(e={}){let t=await this.publicGetSystemStatus(e),i=this.safeDict(t,"result");return{status:"online"===this.safeString(i,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchCurrencies(e={}){let t=await this.publicGetAssets(e),i=this.safeValue(t,"result",{}),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){let t=s[e],a=i[t],n=this.safeCurrencyCode(t),o=this.parseNumber(this.parsePrecision(this.safeString(a,"decimals"))),h="enabled"===this.safeString(a,"status");r[n]={id:t,code:n,info:a,name:this.safeString(a,"altname"),active:h,deposit:void 0,withdraw:void 0,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:void 0,max:void 0}},networks:{}}}return r}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id,"fee-info":!0},r=await this.privatePostTradeVolume(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parseTradingFee(a,i)}parseTradingFee(e,t){let i=this.safeValue(e,"fees_maker",{}),s=this.safeValue(e,"fees",{}),a=this.safeValue(i,t.id,{}),n=this.safeValue(s,t.id,{});return{info:e,symbol:t.symbol,maker:this.parseNumber(r.Y.stringDiv(this.safeString(a,"fee"),"100")),taker:this.parseNumber(r.Y.stringDiv(this.safeString(n,"fee"),"100")),percentage:!0,tierBased:!0}}parseBidAsk(e,t=0,i=1,s=2){return[this.safeNumber(e,t),this.safeNumber(e,i),this.safeInteger(e,2)]}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);if(s.darkpool)throw new n.ExchangeError(this.id+" fetchOrderBook() does not provide an order book for darkpool symbol "+e);let r={pair:s.id};void 0!==t&&(r.count=t);let a=await this.publicGetDepth(this.extend(r,i)),o=this.safeValue(a,"result",{}),h=this.safeValue(o,s.id),d=this.safeValue(s,"info",{}),l=this.safeValue(d,"wsname");return void 0!==l&&(h=this.safeValue(o,l,h)),this.parseOrderBook(h,e)}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeValue(e,"v",[]),a=this.safeString(s,1),n=this.safeValue(e,"p",[]),o=this.safeString(n,1),h=r.Y.stringMul(a,o),d=this.safeValue(e,"c",[]),l=this.safeString(d,0),c=this.safeValue(e,"h",[]),u=this.safeValue(e,"l",[]),f=this.safeValue(e,"b",[]),p=this.safeValue(e,"a",[]);return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:this.safeString(c,1),low:this.safeString(u,1),bid:this.safeString(f,0),bidVolume:void 0,ask:this.safeString(p,0),askVolume:void 0,vwap:o,open:this.safeString(e,"o"),close:l,last:l,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:h,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let i={};if(void 0!==e){e=this.marketSymbols(e);let t=[];for(let i=0;i<e.length;i++){let s=e[i],r=this.markets[s];r.active&&!r.darkpool&&t.push(r.id)}i.pair=t.join(",")}let s=(await this.publicGetTicker(this.extend(i,t))).result,r=Object.keys(s),a={};for(let e=0;e<r.length;e++){let t=r[e],i=this.safeMarket(t),n=i.symbol,o=s[t];a[n]=this.parseTicker(o,i)}return this.filterByArrayTickers(a,"symbol",e)}async fetchTicker(e,t={}){if(await this.loadMarkets(),e.indexOf(".d")>=0)throw new n.ExchangeError(this.id+" fetchTicker() does not provide a ticker for darkpool symbol "+e);let i=this.market(e),s={pair:i.id},r=(await this.publicGetTicker(this.extend(s,t))).result[i.id];return this.parseTicker(r,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,6)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,720);let n=this.market(e),o=this.safeInteger(this.timeframes,t),h={pair:n.id};if(void 0!==o?h.interval=o:h.interval=t,void 0!==i){let e=this.parseToInt(i/1e3),t=60*o;h.since=this.numberToString(e-t)}let d=await this.publicGetOHLC(this.extend(h,r)),l=this.safeValue(d,"result",{}),c=this.safeList(l,n.id,[]);return this.parseOHLCVs(c,n,t,i,s)}parseLedgerEntryType(e){return this.safeString({trade:"trade",withdrawal:"transaction",deposit:"transaction",transfer:"transfer",margin:"margin"},e,e)}parseLedgerEntry(e,t){let i;let s=this.safeString(e,"id"),a=this.safeString(e,"refid"),n=this.parseLedgerEntryType(this.safeString(e,"type")),o=this.safeString(e,"asset"),h=this.safeCurrencyCode(o,t);t=this.safeCurrency(o,t);let d=this.safeString(e,"amount");r.Y.stringLt(d,"0")?(i="out",d=r.Y.stringAbs(d)):i="in";let l=this.safeIntegerProduct(e,"time",1e3);return this.safeLedgerEntry({info:e,id:s,direction:i,account:void 0,referenceId:a,referenceAccount:void 0,type:n,currency:h,amount:this.parseNumber(d),before:void 0,after:this.safeNumber(e,"balance"),status:"ok",timestamp:l,datetime:this.iso8601(l),fee:{cost:this.safeNumber(e,"fee"),currency:h}},t)}async fetchLedger(e,t,i,s={}){let a;await this.loadMarkets();let n={};void 0!==e&&(a=this.currency(e),n.asset=a.id),void 0!==t&&(n.start=this.parseToInt(t/1e3));let o=this.safeStringN(s,["until","till"]);if(void 0!==o){s=this.omit(s,["until","till"]);let e=r.Y.stringDiv(o,"1000");n.end=this.parseToInt(r.Y.stringAdd(e,"1"))}let h=await this.privatePostLedgers(this.extend(n,s)),d=this.safeValue(h,"result",{}),l=this.safeValue(d,"ledger",{}),c=Object.keys(l),u=[];for(let e=0;e<c.length;e++){let t=c[e],i=l[t];i.id=t,u.push(i)}return this.parseLedger(u,a,t,i)}async fetchLedgerEntriesByIds(e,t,i={}){await this.loadMarkets(),e=e.join(",");let s=this.extend({id:e},i),r=(await this.privatePostQueryLedgers(s)).result,a=Object.keys(r),n=[];for(let e=0;e<a.length;e++){let t=a[e],i=r[t];i.id=t,n.push(i)}return this.parseLedger(n)}async fetchLedgerEntry(e,t,i={}){return(await this.fetchLedgerEntriesByIds([e],t,i))[0]}parseTrade(e,t){let i,s,r,a,n,o,h,d,l,c;if(Array.isArray(e))i=this.safeTimestamp(e,2),s="s"===e[3]?"sell":"buy",r="l"===e[4]?"limit":"market",a=this.safeString(e,0),n=this.safeString(e,1),e.length>6&&(o=this.safeString(e,6));else if("string"==typeof e)o=e;else if("ordertxid"in e){let l=this.safeString(e,"pair"),c=this.findMarketByAltnameOrId(l);if(void 0!==c?t=c:void 0!==l&&(t=this.getDelistedMarketById(l)),h=this.safeString(e,"ordertxid"),o=this.safeString2(e,"id","postxid"),i=this.safeTimestamp(e,"time"),s=this.safeString(e,"type"),r=this.safeString(e,"ordertype"),a=this.safeString(e,"price"),n=this.safeString(e,"vol"),"fee"in e){let i;void 0!==t&&(i=t.quote),d={cost:this.safeString(e,"fee"),currency:i}}}void 0!==t&&(l=t.symbol);let u=this.safeString(e,"cost"),f=this.safeBool(e,"maker");return void 0!==f&&(c=f?"maker":"taker"),this.safeTrade({id:o,order:h,info:e,timestamp:i,datetime:this.iso8601(i),symbol:l,type:r,side:s,takerOrMaker:c,price:a,amount:n,cost:u,fee:d},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=r.id,n={pair:a};void 0!==t&&(n.since=this.numberToString(this.parseToInt(t/1e3))),void 0!==i&&(n.count=i);let o=(await this.publicGetTrades(this.extend(n,s))).result,h=o[a],d=h.length;if(d<=0)return[];let l=h[d-1],c=this.safeString(o,"last");return l.push(c),h[d-1]=l,this.parseTrades(h,r,t,i)}parseBalance(e){let t=this.safeValue(e,"result",{}),i={info:e,timestamp:void 0,datetime:void 0},s=Object.keys(t);for(let e=0;e<s.length;e++){let r=s[e],a=this.safeCurrencyCode(r),n=this.safeValue(t,r,{}),o=this.account();o.used=this.safeString(n,"hold_trade"),o.total=this.safeString(n,"balance"),i[a]=o}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalanceEx(e);return this.parseBalance(t)}async createMarketOrderWithCost(e,t,i,s={}){return await this.loadMarkets(),await this.createOrder(e,"market",t,1,void 0,this.extend({cost:i},s))}async createMarketBuyOrderWithCost(e,t,i={}){return await this.loadMarkets(),await this.createMarketOrderWithCost(e,"buy",t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n={pair:this.market(e).id,type:i,ordertype:t,volume:this.amountToPrecision(e,s)},o=this.orderRequest("createOrder",e,t,n,s,r,a),h=await this.privatePostAddOrder(this.extend(o[0],o[1])),d=this.safeDict(h,"result");return this.parseOrder(d)}findMarketByAltnameOrId(e){let t=this.safeValue(this.options,"marketsByAltname",{});return e in t?t[e]:this.safeMarket(e)}getDelistedMarketById(e){if(void 0===e)return e;let t=this.safeValue(this.options.delistedMarketsById,e);if(void 0!==t)return t;let i=3,s=3,r=6;8===e.length?(i=4,s=4,r=8):7===e.length&&(i=4,s=4,r=7);let a=e.slice(0,i),n=e.slice(s,r),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n);return t={symbol:o+"/"+h,base:o,quote:h,baseId:a,quoteId:n},this.options.delistedMarketsById[e]=t,t}parseOrderStatus(e){return this.safeString({pending:"open",open:"open",closed:"closed",canceled:"canceled",expired:"expired"},e,e)}parseOrderType(e){return this.safeString({"take-profit":"market","stop-loss":"market","stop-loss-limit":"limit","take-profit-limit":"limit","trailing-stop-limit":"limit"},e,e)}parseOrder(e,t){let i,s,a,n,o,h,d,l,c,u,f;let p=this.safeDict(e,"descr",{}),m=this.safeDict(e,"descr");if(void 0!==(i=void 0!==m?this.safeString(m,"order"):this.safeString(e,"descr"))){let e=i.split(" ");s=this.safeString(e,0),h=this.safeString(e,1),n=this.safeString(e,2);let t=this.safeString(e,4),r=this.safeString(e,5);"stop loss"===(a="limit"===t||"market"===t?t:t+" "+r)||"take profit"===a?(d=this.safeString(e,6),o=this.safeString(e,9)):"limit"===a&&(o=this.safeString(e,5))}s=this.safeString(p,"type",s),a=this.safeString(p,"ordertype",a),n=this.safeString(p,"pair",n);let g=this.findMarketByAltnameOrId(n);void 0!==g?t=g:void 0!==n&&(t=this.getDelistedMarketById(n));let y=this.safeTimestamp(e,"opentm");h=this.safeString(e,"vol",h);let v=this.safeString(e,"vol_exec");void 0!==(o=this.safeString(p,"price",o))&&o.endsWith("%")&&(o=void 0),(void 0===o||r.Y.stringEquals(o,"0"))&&(o=this.safeString(p,"price2")),(void 0===o||r.Y.stringEquals(o,"0"))&&(o=this.safeString(e,"price",o));let b=this.safeString(e,"oflags",""),w=b.indexOf("post")>-1,k=this.safeNumber(e,"price");void 0!==t&&(l=t.symbol,"fee"in e&&(c={cost:this.safeString(e,"fee"),rate:void 0},b.indexOf("fciq")>=0?c.currency=t.quote:b.indexOf("fcib")>=0&&(c.currency=t.base)));let S=this.parseOrderStatus(this.safeString(e,"status")),O=this.safeStringN(e,["id","txid","amend_id"]);if(void 0===O||O.startsWith("[")){let t=this.safeList(e,"txid");O=this.safeString(t,0)}let T=this.safeString(e,"userref"),I=this.safeString(e,"cl_ord_id",T),x=this.safeValue(e,"trades",[]),P=[];for(let e=0;e<x.length;e++){let t=x[e];"string"==typeof t?P.push(this.safeTrade({id:t,orderId:O,symbol:l,info:{}})):P.push(t)}void 0!==a&&(a.startsWith("take-profit")?(f=this.safeString(p,"price"),o=this.omitZero(this.safeString(p,"price2"))):a.startsWith("stop-loss")?(u=this.safeString(p,"price"),o=this.omitZero(this.safeString(p,"price2"))):"take profit"===a?f=d:"stop loss"===a&&(u=d));let M=this.parseOrderType(a);return this.inArray(M,["stop loss","take profit"])&&(M=void 0===o?"market":"limit"),void 0!==this.safeString(e,"amend_id")&&(w=void 0),this.safeOrder({id:O,clientOrderId:I,info:e,timestamp:y,datetime:this.iso8601(y),lastTradeTimestamp:void 0,status:S,symbol:l,type:M,timeInForce:void 0,postOnly:w,side:s,price:o,triggerPrice:d,takeProfitPrice:f,stopLossPrice:u,cost:void 0,amount:h,filled:v,average:k,remaining:void 0,reduceOnly:this.safeBool2(e,"reduceOnly","reduce_only"),fee:c,trades:P},t)}orderRequest(e,t,i,s,r,a,n={}){let o;let h=this.safeString(n,"clientOrderId");n=this.omit(n,["clientOrderId"]),void 0!==h&&(s.cl_ord_id=h);let d=this.safeString(n,"stopLossPrice"),l=this.safeString(n,"takeProfitPrice"),c=void 0!==d,u=void 0!==l,f=this.safeString(n,"trailingAmount"),p=this.safeString(n,"trailingPercent"),m=this.safeString(n,"trailingLimitAmount"),g=this.safeString(n,"trailingLimitPercent"),y=void 0!==f,v=void 0!==p,b=i.endsWith("limit"),w="market"===i,k=this.safeString(n,"cost"),S=this.safeString(n,"oflags");n=this.omit(n,["cost","oflags"]);let O=void 0!==S&&S.indexOf("viqc")>-1;if(w&&(void 0!==k||O)){void 0===k&&void 0!==r?s.volume=this.costToPrecision(t,this.numberToString(r)):s.volume=this.costToPrecision(t,k);let e=void 0!==S?S+",viqc":"viqc";s.oflags=e}else!b||y||v||(s.price=this.priceToPrecision(t,a));let T=this.safeBool2(n,"reduceOnly","reduce_only");if(c||u)c?(s.price=this.priceToPrecision(t,d),b?s.ordertype="stop-loss-limit":s.ordertype="stop-loss"):u&&(s.price=this.priceToPrecision(t,l),b?s.ordertype="take-profit-limit":s.ordertype="take-profit"),b&&(s.price2=this.priceToPrecision(t,a));else if(y||v){let e;void 0!==p&&(e=p.endsWith("%")?"+"+p:"+"+p+"%");let t=void 0!==f?"+"+f:void 0,i=this.safeString(n,"offset","-"),r=void 0!==m?i+this.numberToString(m):void 0,a=this.safeString(n,"trigger","last");if(s.trigger=a,b||void 0!==m||void 0!==g){if(s.ordertype="trailing-stop-limit",void 0!==g){let t=g.endsWith("%")?i+g:i+g+"%";s.price=e,s.price2=t}else void 0!==m&&(s.price=t,s.price2=r)}else s.ordertype="trailing-stop",void 0!==p?s.price=e:s.price=t}T&&("createOrderWs"===e?s.reduce_only=!0:s.reduce_only="true");let I=this.safeDict(n,"close");if(void 0!==I){I=this.extend({},I);let e=this.safeValue(I,"price");void 0!==e&&(I.price=this.priceToPrecision(t,e));let i=this.safeValue(I,"price2");void 0!==i&&(I.price2=this.priceToPrecision(t,i)),s.close=I}let x=this.safeString2(n,"timeInForce","timeinforce");void 0!==x&&(s.timeinforce=x);let P="market"===i;if([o,n]=this.handlePostOnly(P,!1,n),o){let e=void 0!==S?S+",post":"post";s.oflags=e}return void 0===S||"oflags"in s||(s.oflags=S),[s,n=this.omit(n,["timeInForce","reduceOnly","stopLossPrice","takeProfitPrice","trailingAmount","trailingPercent","trailingLimitAmount","trailingLimitPercent","offset"])]}async editOrder(e,t,i,s,r,a,o={}){let h;await this.loadMarkets();let d=this.market(t);if(!d.spot)throw new n.NotSupported(this.id+" editOrder() does not support "+d.type+" orders, only spot orders are accepted");let l={txid:e},c=this.safeString2(o,"clientOrderId","cl_ord_id");void 0!==c&&(l.cl_ord_id=c,o=this.omit(o,["clientOrderId","cl_ord_id"]),l=this.omit(l,"txid")),[h,o]=this.handlePostOnly("market"===i,!1,o),h&&(l.post_only="true"),void 0!==r&&(l.order_qty=this.amountToPrecision(t,r)),void 0!==a&&(l.limit_price=this.priceToPrecision(t,a));let u=this.safeStringN(o,["stopLossPrice","takeProfitPrice","trailingAmount","trailingPercent","trailingLimitAmount","trailingLimitPercent"]);if(void 0!==u){let e=this.safeString(o,"offset");o=this.omit(o,["stopLossPrice","takeProfitPrice","trailingAmount","trailingPercent","trailingLimitAmount","trailingLimitPercent","offset"]),void 0!==e?(u=e+u,l.trigger_price=u):l.trigger_price=this.priceToPrecision(t,u)}let f=await this.privatePostAmendOrder(this.extend(l,o)),p=this.safeDict(f,"result",{});return this.parseOrder(p,d)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.safeValue2(i,"userref","clientOrderId"),r={trades:!0,txid:e},a=i;void 0!==s&&(r.userref=s,a=this.omit(i,["userref","clientOrderId"]));let o=await this.privatePostQueryOrders(this.extend(r,a)),h=this.safeValue(o,"result",[]);if(!(e in h))throw new n.OrderNotFound(this.id+" fetchOrder() could not find order id "+e);return this.parseOrder(this.extend({id:e},h[e]))}async fetchOrderTrades(e,t,i,s,r={}){let a=this.safeValue(r,"trades"),o=[];if(void 0===a)throw new n.ArgumentsRequired(this.id+" fetchOrderTrades() requires a unified order structure in the params argument or a 'trades' param (an array of trade id strings)");for(let e=0;e<a.length;e++){let t=a[e];"string"==typeof t?o.push(t):o.push(t.id)}await this.loadMarkets(),void 0!==t&&(t=this.symbol(t));let h=this.safeValue(this.options,"fetchOrderTrades",{}),d=this.safeInteger(h,"batchSize",20),l=o.length,c=this.parseToInt(l/d);c=this.sum(c,1);let u=[];for(let e=0;e<c;e++){let r=[];for(let t=0;t<d;t++){let i=this.sum(e*d,t);i<l&&r.push(o[i])}let a={txid:r.join(",")},n=await this.privatePostQueryTrades(a),h=this.safeValue(n,"result"),c=Object.keys(h);for(let e=0;e<c.length;e++)h[c[e]].id=c[e];let f=this.parseTrades(h,void 0,i,s),p=this.filterBySymbol(f,t);u=this.arrayConcat(u,p)}return u}async fetchOrdersByIds(e,t,i={}){await this.loadMarkets();let s=await this.privatePostQueryOrders(this.extend({trades:!0,txid:e.join(",")},i)),r=this.safeValue(s,"result",{}),a=[],n=Object.keys(r);for(let e=0;e<n.length;e++){let t=n[e],i=r[t],s=this.parseOrder(this.extend({id:t},i));a.push(s)}return a}async fetchMyTrades(e,t,i,s={}){let a;await this.loadMarkets();let n={};void 0!==t&&(n.start=this.parseToInt(t/1e3));let o=this.safeStringN(s,["until","till"]);if(void 0!==o){s=this.omit(s,["until","till"]);let e=r.Y.stringDiv(o,"1000");n.end=this.parseToInt(r.Y.stringAdd(e,"1"))}let h=(await this.privatePostTradesHistory(this.extend(n,s))).result.trades,d=Object.keys(h);for(let e=0;e<d.length;e++)h[d[e]].id=d[e];return void 0!==e&&(a=this.market(e)),this.parseTrades(h,a,t,i)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets();let r=this.safeValue(i,"userref",e);i=this.omit(i,"userref");let a={txid:r},o=this.safeString2(i,"clientOrderId","cl_ord_id");void 0!==o&&(a.cl_ord_id=o,i=this.omit(i,["clientOrderId","cl_ord_id"]),a=this.omit(a,"txid"));try{s=await this.privatePostCancelOrder(this.extend(a,i))}catch(e){if(this.last_http_response&&this.last_http_response.indexOf("EOrder:Unknown order")>=0)throw new n.OrderNotFound(this.id+" cancelOrder() error "+this.last_http_response);throw e}return this.safeOrder({info:s})}async cancelOrders(e,t,i={}){let s=await this.privatePostCancelOrderBatch(this.extend({orders:e},i));return[this.safeOrder({info:s})]}async cancelAllOrders(e,t={}){await this.loadMarkets();let i=await this.privatePostCancelAll(t);return[this.safeOrder({info:i})]}async cancelAllOrdersAfter(e,t={}){if(e>864e5)throw new n.BadRequest(this.id+"cancelAllOrdersAfter timeout should be less than 86400000 milliseconds");await this.loadMarkets();let i={timeout:e>0?this.parseToInt(e/1e3):0};return await this.privatePostCancelAllOrdersAfter(this.extend(i,t))}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==t&&(a.start=this.parseToInt(t/1e3));let n=this.safeInteger(s,"userref");void 0!==n&&(a.userref=n,s=this.omit(s,"userref"));let o=this.safeString(s,"clientOrderId");void 0!==o&&(a.cl_ord_id=o,s=this.omit(s,"clientOrderId"));let h=await this.privatePostOpenOrders(this.extend(a,s));void 0!==e&&(r=this.market(e));let d=this.safeDict(h,"result",{}),l=this.safeDict(d,"open",{}),c=[],u=Object.keys(l);for(let e=0;e<u.length;e++){let t=u[e],i=l[t];c.push(this.extend({id:t},i))}return this.parseOrders(c,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==t&&(a.start=this.parseToInt(t/1e3));let n=this.safeInteger(s,"userref");void 0!==n&&(a.userref=n,s=this.omit(s,"userref"));let o=this.safeString(s,"clientOrderId");void 0!==o&&(a.cl_ord_id=o,s=this.omit(s,"clientOrderId")),[a,s]=this.handleUntilOption("end",a,s);let h=await this.privatePostClosedOrders(this.extend(a,s));void 0!==e&&(r=this.market(e));let d=this.safeDict(h,"result",{}),l=this.safeDict(d,"closed",{}),c=[],u=Object.keys(l);for(let e=0;e<u.length;e++){let t=u[e],i=l[t];c.push(this.extend({id:t},i))}return this.parseOrders(c,r,t,i)}parseTransactionStatus(e){return this.safeString({Initial:"pending",Pending:"pending",Success:"ok",Settled:"pending",Failure:"failed",Partial:"ok"},e,e)}parseNetwork(e){let t=this.safeValue(this.options,"withdrawMethods",{});return this.safeString(t,e,e)}parseTransaction(e,t){let i=this.safeString(e,"refid"),s=this.safeString(e,"txid"),r=this.safeTimestamp(e,"time"),a=this.safeString(e,"asset"),n=this.safeCurrencyCode(a,t),o=this.safeString(e,"info"),h=this.safeNumber(e,"amount"),d=this.parseTransactionStatus(this.safeString(e,"status")),l=this.safeString(e,"status-prop");("on-hold"===l||"cancel-pending"===l||"onhold"===l)&&(d="pending");let c=this.safeString(e,"type"),u=this.safeNumber(e,"fee");return void 0===u&&"deposit"===c&&(u=0),{info:e,id:i,currency:n,amount:h,network:this.parseNetwork(this.safeString(e,"network")),address:o,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:d,type:c,updated:void 0,txid:s,timestamp:r,datetime:this.iso8601(r),comment:void 0,internal:void 0,fee:{currency:n,cost:u}}}parseTransactionsByType(e,t,i,s,r){let a=[];for(let i=0;i<t.length;i++){let s=this.parseTransaction(this.extend({type:e},t[i]));a.push(s)}return this.filterByCurrencySinceLimit(a,i,s,r)}async fetchDeposits(e,t,i,s={}){await this.loadMarkets();let a={};if(void 0!==e){let t=this.currency(e);a.asset=t.id}if(void 0!==t){let e=this.numberToString(t);a.start=r.Y.stringDiv(e,"1000")}let n=this.safeStringN(s,["until","till"]);if(void 0!==n){s=this.omit(s,["until","till"]);let e=r.Y.stringDiv(n,"1000");a.end=r.Y.stringAdd(e,"1")}let o=await this.privatePostDepositStatus(this.extend(a,s));return this.parseTransactionsByType("deposit",o.result,e,t,i)}async fetchTime(e={}){let t=await this.publicGetTime(e),i=this.safeValue(t,"result",{});return this.safeTimestamp(i,"unixtime")}async fetchWithdrawals(e,t,i,s={}){let a;await this.loadMarkets();let n=!1;if([n,s]=this.handleOptionAndParams(s,"fetchWithdrawals","paginate"),n)return s.cursor=!0,await this.fetchPaginatedCallCursor("fetchWithdrawals",e,t,i,s,"next_cursor","cursor");let o={};if(void 0!==e){let t=this.currency(e);o.asset=t.id}if(void 0!==t){let e=this.numberToString(t);o.start=r.Y.stringDiv(e,"1000")}let h=this.safeStringN(s,["until","till"]);if(void 0!==h){s=this.omit(s,["until","till"]);let e=r.Y.stringDiv(h,"1000");o.end=r.Y.stringAdd(e,"1")}let d=await this.privatePostWithdrawStatus(this.extend(o,s)),l=this.safeValue(d,"result");return a=Array.isArray(l)?l:this.addPaginationCursorToResult(l),this.parseTransactionsByType("withdrawal",a,e,t,i)}addPaginationCursorToResult(e){let t=this.safeString(e,"next_cursor"),i=this.safeValue(e,"withdrawals"),s=i.length;if(void 0!==t&&s>0){let e=i[s-1];e.next_cursor=t,i[s-1]=e}return i}async createDepositAddress(e,t={}){return await this.fetchDepositAddress(e,this.extend({new:"true"},t))}async fetchDepositMethods(e,t={}){await this.loadMarkets();let i={asset:this.currency(e).id},s=await this.privatePostDepositMethods(this.extend(i,t));return this.safeValue(s,"result")}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=this.safeStringUpper(t,"network"),r=this.safeValue(this.options,"networks",{});s=this.safeString(r,s,s),t=this.omit(t,"network"),"USDT"===e&&"TRC20"===s&&(e=e+"-"+s);let a=this.safeValue(this.options,"depositMethods",{}),o=this.safeString(a,e),h=this.safeString(t,"method",o);if(void 0===h){let t=await this.fetchDepositMethods(e);if(void 0!==s)for(let e=0;e<t.length;e++){let i=this.safeString(t[e],"method");if(i.indexOf(s)>=0){h=i;break}}if(void 0===h){let e=this.safeValue(t,0,{});h=this.safeString(e,"method")}}let d={asset:i.id,method:h},l=await this.privatePostDepositAddresses(this.extend(d,t)),c=this.safeValue(l,"result",[]),u=this.safeValue(c,0,{});if(void 0===u)throw new n.InvalidAddress(this.id+" privatePostDepositAddresses() returned no addresses for "+e);return this.parseDepositAddress(u,i)}parseDepositAddress(e,t){let i=this.safeString(e,"address"),s=this.safeString(e,"tag"),r=(t=this.safeCurrency(void 0,t)).code;return this.checkAddress(i),{info:e,currency:r,network:void 0,address:i,tag:s}}async withdraw(e,t,i,s,r={}){if([s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),"key"in r){await this.loadMarkets();let s=this.currency(e),a={asset:s.id,amount:t,address:i},n=await this.privatePostWithdraw(this.extend(a,r)),o=this.safeDict(n,"result",{});return this.parseTransaction(o,s)}throw new n.ExchangeError(this.id+" withdraw() requires a 'key' parameter (withdrawal key name, as set up on your account)")}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.privatePostOpenPositions(this.extend({docalcs:"true",consolidation:"market"},t));e=this.marketSymbols(e);let s=this.safeList(i,"result"),r=this.parsePositions(s,e);return this.filterByArrayPositions(r,"symbol",e,!1)}parsePosition(e,t){let i=this.safeString(e,"pair"),s=this.safeString(e,"type");return this.safePosition({info:e,id:void 0,symbol:this.safeSymbol(i,t),notional:void 0,marginMode:void 0,liquidationPrice:void 0,entryPrice:void 0,unrealizedPnl:this.safeNumber(e,"net"),realizedPnl:void 0,percentage:void 0,contracts:this.safeNumber(e,"vol"),contractSize:void 0,markPrice:void 0,lastPrice:void 0,side:"buy"===s?"long":"short",hedged:void 0,timestamp:void 0,datetime:void 0,lastUpdateTimestamp:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:void 0,initialMargin:this.safeNumber(e,"margin"),initialMarginPercentage:void 0,leverage:this.safeNumber(e,"leverage"),marginRatio:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}parseAccountType(e){return this.safeString({spot:"Spot Wallet",swap:"Futures Wallet",future:"Futures Wallet"},e,e)}async transferOut(e,t,i={}){return await this.transfer(e,t,"spot","swap",i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e);i=this.parseAccountType(i),s=this.parseAccountType(s);let o={amount:this.currencyToPrecision(e,t),from:i,to:s,asset:a.id};if("Spot Wallet"!==i)throw new n.BadRequest(this.id+" transfer cannot transfer from "+i+" to "+s+". Use krakenfutures instead to transfer from the futures account.");let h=await this.privatePostWalletTransfer(this.extend(o,r)),d=this.parseTransfer(h,a);return this.extend(d,{amount:t,fromAccount:i,toAccount:s})}parseTransfer(e,t){let i=this.safeValue(e,"result",{});return{info:e,id:this.safeString(i,"refid"),timestamp:void 0,datetime:void 0,currency:this.safeString(t,"code"),amount:void 0,fromAccount:void 0,toAccount:void 0,status:"sucess"}}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.version+"/"+t+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencodeNested(s));else if("private"===t){let t=this.safeString(s,"price"),i=!1;void 0!==t&&(i=!!t.endsWith("%"));let o="CancelOrderBatch"===e;this.checkRequiredCredentials();let h=this.nonce().toString();a=o||i?this.json(this.extend({nonce:h},s)):this.urlencodeNested(this.extend({nonce:h},s));let d=this.encode(h+a),c=this.hash(d,l.s,"binary"),u=this.encode(n),f=this.binaryConcat(u,c),p=this.base64ToBinary(this.secret),m=this.hmac(f,p,A.Zf,"base64");r={"API-Key":this.apiKey,"API-Sign":m},o||i?r["Content-Type"]="application/json":r["Content-Type"]="application/x-www-form-urlencoded"}else n="/"+e;return{url:n=this.urls.api[t]+n,method:i,body:a,headers:r}}nonce(){return this.milliseconds()-this.options.timeDifference}handleErrors(e,t,i,s,r,a,o,h,d){if(520===e)throw new n.ExchangeNotAvailable(this.id+" "+e.toString()+" "+t);if(void 0!==o&&"{"===a[0]&&"string"!=typeof o&&"error"in o&&o.error.length){let e=this.id+" "+a;for(let t=0;t<o.error.length;t++){let i=o.error[t];this.throwExactlyMatchedException(this.exceptions.exact,i,e),this.throwExactlyMatchedException(this.exceptions.broad,i,e)}throw new n.ExchangeError(e)}}}class is extends s.k{}let ir=is;class ia extends ir{describe(){return this.deepExtend(super.describe(),{id:"krakenfutures",name:"Kraken Futures",countries:["US"],version:"v3",userAgent:void 0,rateLimit:600,pro:!0,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:!1,cancelAllOrders:!0,cancelAllOrdersAfter:!0,cancelOrder:!0,cancelOrders:!0,createMarketOrder:!1,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:void 0,fetchFundingRate:"emulated",fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchIsolatedPositions:!1,fetchLeverage:!0,fetchLeverages:!0,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!1,fetchOrderBook:!0,fetchOrders:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTickers:!0,fetchTrades:!0,sandbox:!0,setLeverage:!0,setMarginMode:!1,transfer:!0},urls:{test:{public:"https://demo-futures.kraken.com/derivatives/api/",private:"https://demo-futures.kraken.com/derivatives/api/",charts:"https://demo-futures.kraken.com/api/charts/",history:"https://demo-futures.kraken.com/api/history/",www:"https://demo-futures.kraken.com"},logo:"https://user-images.githubusercontent.com/24300605/81436764-b22fd580-9172-11ea-9703-742783e6376d.jpg",api:{charts:"https://futures.kraken.com/api/charts/",history:"https://futures.kraken.com/api/history/",feeschedules:"https://futures.kraken.com/api/feeschedules/",public:"https://futures.kraken.com/derivatives/api/",private:"https://futures.kraken.com/derivatives/api/"},www:"https://futures.kraken.com/",doc:["https://docs.futures.kraken.com/#introduction"],fees:"https://support.kraken.com/hc/en-us/articles/360022835771-Transaction-fees-and-rebates-for-Kraken-Futures",referral:void 0},api:{public:{get:["feeschedules","instruments","orderbook","tickers","history","historicalfundingrates"]},private:{get:["feeschedules/volumes","openpositions","notifications","accounts","openorders","recentorders","fills","transfers","leveragepreferences","pnlpreferences","assignmentprogram/current","assignmentprogram/history"],post:["sendorder","editorder","cancelorder","transfer","batchorder","cancelallorders","cancelallordersafter","withdrawal","assignmentprogram/add","assignmentprogram/delete"],put:["leveragepreferences","pnlpreferences"]},charts:{get:["{price_type}/{symbol}/{interval}"]},history:{get:["orders","executions","triggers","accountlogcsv","account-log","market/{symbol}/orders","market/{symbol}/executions"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0005"),maker:this.parseNumber("0.0002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0005")],[this.parseNumber("100000"),this.parseNumber("0.0004")],[this.parseNumber("1000000"),this.parseNumber("0.0003")],[this.parseNumber("5000000"),this.parseNumber("0.00025")],[this.parseNumber("10000000"),this.parseNumber("0.0002")],[this.parseNumber("20000000"),this.parseNumber("0.00015")],[this.parseNumber("50000000"),this.parseNumber("0.000125")],[this.parseNumber("100000000"),this.parseNumber("0.0001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0002")],[this.parseNumber("100000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.000125")],[this.parseNumber("5000000"),this.parseNumber("0.0001")],[this.parseNumber("10000000"),this.parseNumber("0.000075")],[this.parseNumber("20000000"),this.parseNumber("0.00005")],[this.parseNumber("50000000"),this.parseNumber("0.000025")],[this.parseNumber("100000000"),this.parseNumber("0")]]}}},exceptions:{exact:{apiLimitExceeded:n.RateLimitExceeded,marketUnavailable:n.ContractUnavailable,requiredArgumentMissing:n.BadRequest,unavailable:n.ExchangeNotAvailable,authenticationError:n.AuthenticationError,accountInactive:n.ExchangeError,invalidAccount:n.BadRequest,invalidAmount:n.BadRequest,insufficientFunds:n.InsufficientFunds,"Bad Request":n.BadRequest,Unavailable:n.ExchangeNotAvailable,invalidUnit:n.BadRequest,"Json Parse Error":n.ExchangeError,nonceBelowThreshold:n.InvalidNonce,nonceDuplicate:n.InvalidNonce,notFound:n.BadRequest,"Server Error":n.ExchangeError,unknownError:n.ExchangeError},broad:{invalidArgument:n.BadRequest,nonceBelowThreshold:n.InvalidNonce,nonceDuplicate:n.InvalidNonce}},precisionMode:d.kb,options:{access:{history:{GET:{orders:"private",executions:"private",triggers:"private",accountlogcsv:"private"}}},settlementCurrencies:{flex:["USDT","BTC","USD","GBP","EUR","USDC"]},symbol:{quoteIds:["USD","XBT"],reversed:!1},versions:{public:{GET:{historicalfundingrates:"v4"}},charts:{GET:{"{price_type}/{symbol}/{interval}":"v1"}},history:{GET:{orders:"v2",executions:"v2",triggers:"v2",accountlogcsv:"v2"}}},fetchTrades:{method:"historyGetMarketSymbolExecutions"}},features:{default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!0},triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!1},createOrders:{max:100},fetchMyTrades:{marginMode:!1,limit:void 0,daysBack:void 0,untilDays:1e5},fetchOrder:void 0,fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:void 0,daysBack:void 0,daysBackCanceled:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchOHLCV:{limit:5e3}},spot:void 0,swap:{linear:{extends:"default"},inverse:{extends:"default"}},future:{linear:{extends:"default"},inverse:{extends:"default"}}},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","12h":"12h","1d":"1d","1w":"1w"}})}async fetchMarkets(e={}){let t=await this.publicGetInstruments(e),i=this.safeValue(t,"instruments",[]),s=[];for(let e=0;e<i.length;e++){let t,r,a,n,o,h;let d=i[e],l=this.safeString(d,"symbol"),c=this.safeString(d,"type"),u=c.indexOf(" index")>=0;if(u)t="index";else{a=!(r=c.indexOf("_vanilla")>=0);let e=this.safeString(d,"lastTradingTime");t=void 0===e?"swap":"future",n=this.parse8601(e)}let f="swap"===t,p="future"===t,m=l,g=l.split("_"),y=this.safeString(g,1),v=y.slice(0,y.length-3),b=this.safeCurrencyCode(v),w=this.safeCurrencyCode("usd"),k=this.safeString(d,"contractValueTradePrecision"),S=this.parseNumber(this.integerPrecisionToAmount(k)),O=this.safeNumber(d,"tickSize"),T=f||p||u;(f||p)&&("futures_inverse"===this.safeString(d,"type")?(o=b,h=v,a=!0):(o=w,h="usd",a=!1),r=!a,m=b+"/"+w+":"+o,p&&(m=m+"-"+this.yymmdd(n))),s.push({id:l,symbol:m,base:b,quote:w,settle:o,baseId:v,quoteId:"usd",settleId:h,type:t,spot:!1,margin:!1,swap:f,future:p,option:!1,index:u,active:void 0,contract:T,linear:r,inverse:a,contractSize:this.safeNumber(d,"contractSize"),maintenanceMarginRate:void 0,expiry:n,expiryDatetime:this.iso8601(n),strike:void 0,optionType:void 0,precision:{amount:S,price:O},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:this.parse8601(this.safeString(d,"openingDate")),info:d})}let r=this.options.settlementCurrencies.flex,a=[];for(let e=0;e<r.length;e++){let t=r[e];a.push({id:t.toLowerCase(),numericId:void 0,code:t,precision:void 0})}return this.currencies=this.deepExtend(a,this.currencies),s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id},r=await this.publicGetOrderbook(this.extend(s,i)),a=this.parse8601(r.serverTime);return this.parseOrderBook(r.orderBook,e,a)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=this.safeList(i,"tickers");return this.parseTickers(s,e)}parseTicker(e,t){let i,s;let a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.parse8601(this.safeString(e,"lastTime")),h=this.safeString(e,"open24h"),d=this.safeString(e,"last"),l=r.Y.stringSub(d,h),c=r.Y.stringMul(r.Y.stringDiv(l,h),"100"),u=r.Y.stringDiv(r.Y.stringAdd(h,d),"2"),f=this.safeString(e,"vol24h");return!this.safeBool(t,"index",!1)&&(t.linear?i=f:t.inverse&&(s=f)),this.safeTicker({symbol:n,timestamp:o,datetime:this.iso8601(o),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),vwap:void 0,open:h,close:d,last:d,previousClose:void 0,change:l,percentage:c,average:u,baseVolume:i,quoteVolume:s,markPrice:this.safeString(e,"markPrice"),indexPrice:this.safeString(e,"indexPrice"),info:e})}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=!1;if([n,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),n)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,5e3);let o={symbol:a.id,price_type:this.safeString(r,"price","trade"),interval:this.timeframes[t]};if(r=this.omit(r,"price"),void 0!==i){let e=this.parseTimeframe(t);o.from=this.parseToInt(i/1e3),void 0===s&&(s=5e3),s=Math.min(s,5e3);let r=this.sum(o.from,s*e-1),a=this.seconds();o.to=Math.min(r,a)}else if(void 0!==s){s=Math.min(s,5e3);let e=this.parseTimeframe(t);o.to=this.seconds(),o.from=this.parseToInt(o.to-e*s)}let h=await this.chartsGetPriceTypeSymbolInterval(this.extend(o,r)),d=this.safeList(h,"candles");return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTrades(e,t,i,s={}){let r,a;await this.loadMarkets();let n=!1;if([n,s]=this.handleOptionAndParams(s,"fetchTrades","paginate"),n)return await this.fetchPaginatedCallDynamic("fetchTrades",e,t,i,s);let o=this.market(e),h={symbol:o.id};if([r,s]=this.handleOptionAndParams(s,"fetchTrades","method","historyGetMarketSymbolExecutions"),"historyGetMarketSymbolExecutions"===r){[h,s]=this.handleUntilOption("before",h,s),void 0!==t&&(h.since=t,h.sort="asc"),void 0!==i&&(h.count=i);let e=await this.historyGetMarketSymbolExecutions(this.extend(h,s)),r=this.safeList(e,"elements",[]);a=[];let n=r.length;for(let e=0;e<n;e++){let t=r[n-1-e],i=this.safeDict(t,"event",{}),s=this.safeDict(i,"Execution",{}),o=this.safeDict(s,"execution",{});a.push(o)}}else{[h,s]=this.handleUntilOption("lastTime",h,s);let e=await this.publicGetHistory(this.extend(h,s));a=this.safeList(e,"history",[])}return this.parseTrades(a,o,t,i)}parseTrade(e,t){let i,s,a,n=this.parse8601(this.safeString2(e,"time","fillTime")),o=this.safeString(e,"price"),h=this.safeStringN(e,["size","amount","quantity"],"0.0"),d=this.safeString2(e,"uid","fill_id");void 0===d&&(d=this.safeString(e,"executionId"));let l=this.safeString(e,"order_id"),c=this.safeString(e,"symbol"),u=this.safeString(e,"side"),f=this.safeValue(e,"orderPriorEdit"),p=this.safeValue(e,"orderPriorExecution");void 0!==p?(l=this.safeString(p,"orderId"),c=this.safeString(p,"symbol"),u=this.safeString(p,"side"),i=this.safeString(p,"type")):void 0!==f&&(l=this.safeString(f,"orderId"),c=this.safeString(f,"symbol"),u=this.safeString(f,"type"),i=this.safeString(f,"type")),void 0!==i&&(i=this.parseOrderType(i)),t=this.safeMarket(c,t);let m=this.safeBool(t,"linear");if(void 0!==h&&void 0!==o&&void 0!==t){s=m?r.Y.stringMul(h,o):r.Y.stringDiv(h,o);let e=this.safeString(t,"contractSize");s=r.Y.stringMul(s,e)}let g=this.safeString(e,"fillType");if(void 0!==g&&(g.indexOf("taker")>=0?a="taker":g.indexOf("maker")>=0&&(a="maker")),"takerOrder"in e){n=this.safeInteger(e,"timestamp");let t=this.safeDict(e,"takerOrder",{});void 0!==t&&(u=this.safeStringLower(t,"direction"),a="taker")}return this.safeTrade({info:e,id:d,symbol:this.safeString(t,"symbol"),timestamp:n,datetime:this.iso8601(n),order:l,type:i,side:u,takerOrMaker:a,price:o,amount:m?h:void 0,cost:s,fee:void 0})}createOrderRequest(e,t,i,s,r,a={}){let n=this.market(e);e=n.symbol,t=this.safeString(a,"orderType",t);let o=this.safeString(a,"timeInForce"),h=!1;[h,a]=this.handlePostOnly("market"===t,"post"===t,a),h?t="post":"ioc"===o?t="ioc":"limit"===t?t="lmt":"market"===t&&(t="mkt");let d={symbol:n.id,side:i,size:this.amountToPrecision(e,s)},l=this.safeString2(a,"clientOrderId","cliOrdId");void 0!==l&&(d.cliOrdId=l);let c=this.safeString2(a,"triggerPrice","stopPrice"),u=void 0!==c,f=this.safeString(a,"stopLossPrice"),p=this.safeString(a,"takeProfitPrice"),m=void 0!==f,g=void 0!==p,y=m||g,v=this.safeString(a,"triggerSignal","last"),b=this.safeValue(a,"reduceOnly");return(y||u)&&(d.triggerSignal=v),u?(t="stp",d.stopPrice=this.priceToPrecision(e,c)):y&&(b=!0,m?(t="stp",d.stopPrice=this.priceToPrecision(e,f)):g&&(t="take_profit",d.stopPrice=this.priceToPrecision(e,p))),b&&(d.reduceOnly=!0),d.orderType=t,void 0!==r&&(d.limitPrice=this.priceToPrecision(e,r)),a=this.omit(a,["clientOrderId","timeInForce","triggerPrice","stopLossPrice","takeProfitPrice"]),this.extend(d,a)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o=this.createOrderRequest(e,t,i,s,r,a),h=await this.privatePostSendorder(o),d=this.safeValue(h,"sendStatus"),l=this.safeString(d,"status");return this.verifyOrderActionSuccess(l,"createOrder",["filled"]),this.parseOrder(d,n)}async createOrders(e,t={}){await this.loadMarkets();let i=[];for(let s=0;s<e.length;s++){let r=e[s],a=this.safeString(r,"symbol"),n=this.safeString(r,"type"),o=this.safeString(r,"side"),h=this.safeValue(r,"amount"),d=this.safeValue(r,"price"),l=this.safeValue(r,"params",{}),c=this.extend(l,t);"order_tag"in c||(c.order_tag=this.sum(s,1).toString()),c.order="send";let u=this.createOrderRequest(a,n,o,h,d,c);i.push(u)}let s=await this.privatePostBatchorder(this.extend({batchOrder:i},t)),r=this.safeList(s,"batchStatus",[]);return this.parseOrders(r)}async editOrder(e,t,i,s,r,a,n={}){await this.loadMarkets();let o={orderId:e};void 0!==r&&(o.size=r),void 0!==a&&(o.limitPrice=a);let h=await this.privatePostEditorder(this.extend(o,n)),d=this.safeString(h.editStatus,"status");this.verifyOrderActionSuccess(d,"editOrder",["filled"]);let l=this.parseOrder(h.editStatus);return l.info=h,l}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostCancelorder(this.extend({order_id:e},i)),r=this.safeString(this.safeValue(s,"cancelStatus",{}),"status");this.verifyOrderActionSuccess(r,"cancelOrder");let a={};return"cancelStatus"in s&&(a=this.parseOrder(s.cancelStatus)),this.extend({info:s},a)}async cancelOrders(e,t,i={}){await this.loadMarkets();let s=[],r=this.safeValue(i,"clientOrderIds",[]);if(r.length>0)for(let e=0;e<r.length;e++)s.push({order:"cancel",cliOrdId:r[e]});else for(let t=0;t<e.length;t++)s.push({order:"cancel",order_id:e[t]});let a=await this.privatePostBatchorder(this.extend({batchOrder:s},i)),n=this.safeList(a,"batchStatus",[]);return this.parseOrders(n)}async cancelAllOrders(e,t={}){let i={};void 0!==e&&(i.symbol=this.marketId(e));let s=await this.privatePostCancelallorders(this.extend(i,t)),r=this.safeDict(s,"cancelStatus"),a=this.safeList(r,"orderEvents",[]),n=[];for(let e=0;e<a.length;e++){let e=this.safeDict(a,0),t=this.safeDict(e,"order",{});n.push(t)}return this.parseOrders(n)}async cancelAllOrdersAfter(e,t={}){await this.loadMarkets();let i={timeout:e>0?this.parseToInt(e/1e3):0};return await this.privatePostCancelallordersafter(this.extend(i,t))}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privateGetOpenorders(s),n=this.safeList(a,"openOrders",[]);return this.parseOrders(n,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={};void 0!==i&&(a.count=i),void 0!==t&&(a.from=t);let n=await this.historyGetOrders(this.extend(a,s)),o=this.safeList(n,"elements",[]),h=[];for(let e=0;e<o.length;e++){let t=o[e],i=this.safeDict(t,"event",{}),s=this.safeDict(i,"OrderPlaced");if(void 0!==s){let e=this.safeDict(s,"order",{});"0"!==this.safeString(e,"filled")&&(e.status="closed",h.push(e))}}return this.parseOrders(h,r,t,i)}async fetchCanceledOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={};void 0!==i&&(a.count=i),void 0!==t&&(a.from=t);let n=await this.historyGetOrders(this.extend(a,s)),o=this.safeList(n,"elements",[]),h=[];for(let e=0;e<o.length;e++){let t=o[e],i=this.safeDict(t,"event",{}),s=this.safeDict(i,"OrderPlaced");if(void 0!==s){let e=this.safeDict(s,"order",{});"0"===this.safeString(e,"filled")&&(e.status="canceled",h.push(e))}let r=this.safeDict(i,"OrderCancelled");if(void 0!==r){let e=this.safeDict(r,"order",{});e.status="canceled",h.push(e)}let a=this.safeDict(i,"OrderRejected");if(void 0!==a){let e=this.safeDict(a,"order",{});e.status="rejected",h.push(e)}}return this.parseOrders(h,r,t,i)}parseOrderType(e){return this.safeString({lmt:"limit",mkt:"market",post:"limit",ioc:"market"},e,e)}verifyOrderActionSuccess(e,t,i=[]){let s={invalidOrderType:n.InvalidOrder,invalidSide:n.InvalidOrder,invalidSize:n.InvalidOrder,invalidPrice:n.InvalidOrder,insufficientAvailableFunds:n.InsufficientFunds,selfFill:n.ExchangeError,tooManySmallOrders:n.ExchangeError,maxPositionViolation:n.BadRequest,marketSuspended:n.ExchangeNotAvailable,marketInactive:n.ExchangeNotAvailable,clientOrderIdAlreadyExist:n.DuplicateOrderId,clientOrderIdTooLong:n.BadRequest,outsidePriceCollar:n.InvalidOrder,postWouldExecute:n.OrderImmediatelyFillable,iocWouldNotExecute:n.OrderNotFillable,wouldNotReducePosition:n.ExchangeError,orderForEditNotFound:n.OrderNotFound,orderForEditNotAStop:n.InvalidOrder,filled:n.OrderNotFound,notFound:n.OrderNotFound};if(e in s&&!this.inArray(e,i))throw new s[e](this.id+": "+t+" failed due to "+e)}parseOrderStatus(e){return this.safeString({placed:"open",cancelled:"canceled",invalidOrderType:"rejected",invalidSide:"rejected",invalidSize:"rejected",invalidPrice:"rejected",insufficientAvailableFunds:"rejected",selfFill:"rejected",tooManySmallOrders:"rejected",maxPositionViolation:"rejected",marketSuspended:"rejected",marketInactive:"rejected",clientOrderIdAlreadyExist:"rejected",clientOrderIdTooLong:"rejected",outsidePriceCollar:"rejected",postWouldExecute:"rejected",iocWouldNotExecute:"rejected",wouldNotReducePosition:"rejected",edited:"open",orderForEditNotFound:"rejected",orderForEditNotAStop:"rejected",filled:"closed",notFound:"rejected",untouched:"open",partiallyFilled:"open"},e,e)}parseOrder(e,t){let i,s,a,n,o;let h=this.safeValue(e,"orderEvents",[]),d=this.safeString(e,"status"),l=h.length;if("orderEvents"in e&&void 0!==d&&0===l)return this.safeOrder({info:e,status:"rejected"});let c=!1,u=!1,f=[];if(l){let t=[];for(let e=0;e<h.length;e++){let s=h[e];"EXECUTION"===this.safeString(s,"type")&&t.push(s);let r=this.safeValue(s,"orderTrigger");if(void 0===i){if(void 0!==(i=this.safeValue2(s,"new","order",r)))c=!1,u=!0;else if(!u){let e=this.safeValue(s,"orderPriorExecution");i=this.safeValue2(s,"orderPriorExecution","orderPriorEdit"),a=this.safeString(e,"limitPrice"),void 0!==i&&(c=!0)}}}f=this.parseTrades(t),s=this.safeString(e,"status")}void 0===i&&(i=e),void 0===s&&(s=this.safeString(i,"status"));let p=this.parseOrderStatus(s),m=this.inArray(p,["canceled","rejected","closed"]),g=this.safeString(i,"symbol");t=this.safeMarket(g,t);let y=this.parse8601(this.safeString2(i,"timestamp","receivedTime")),v=this.parse8601(this.safeString(i,"lastUpdateTime"));void 0===a&&(a=this.safeString(i,"limitPrice"));let b=this.safeString(i,"quantity"),w=this.safeString2(i,"filledSize","filled","0.0"),k=this.safeString(i,"unfilledSize"),S="0.0";if(f.length>0){let e="0.0";for(let t=0;t<f.length;t++){let i=f[t],s=this.safeString(i,"amount"),a=this.safeString(i,"price");S=r.Y.stringAdd(S,s),e=r.Y.stringAdd(e,r.Y.stringMul(s,a))}n=r.Y.stringDiv(e,S),void 0!==b&&!m&&c&&r.Y.stringGe(S,b)&&(p="closed",m=!0),w=c?r.Y.stringAdd(w,S):r.Y.stringMax(w,S)}if(void 0===k&&(c?void 0!==b&&(k=r.Y.stringSub(b,S)):k=b),void 0!==b||c||void 0===k||(b=r.Y.stringAdd(w,k)),void 0!==w&&void 0!==t){let e=void 0!==n?n:a;void 0!==e&&(o=t.linear?r.Y.stringMul(w,e):r.Y.stringDiv(w,e))}let O=this.safeString2(e,"order_id","orderId");void 0===O&&(O=this.safeString2(i,"orderId","uid"));let T=this.safeStringLower2(i,"type","orderType"),I="gtc";return("ioc"===T||"market"===this.parseOrderType(T))&&(I="ioc"),this.safeOrder({info:e,id:O,clientOrderId:this.safeStringN(i,["clientOrderId","clientId","cliOrdId"]),timestamp:y,datetime:this.iso8601(y),lastTradeTimestamp:void 0,lastUpdateTimestamp:v,symbol:this.safeString(t,"symbol"),type:this.parseOrderType(T),timeInForce:I,postOnly:"post"===T,reduceOnly:this.safeBool2(i,"reduceOnly","reduce_only"),side:this.safeString(i,"side"),price:a,triggerPrice:this.safeString(i,"triggerPrice"),amount:b,cost:o,average:n,filled:w,remaining:k,status:p,fee:void 0,fees:void 0,trades:f})}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privateGetFills(s);return this.parseTrades(a.fills,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString2(e,"type","account"),i=this.safeString(e,"symbol");e=this.omit(e,["type","account","symbol"]);let s=await this.privateGetAccounts(e),r=this.safeString(s,"serverTime");if("marginAccount"===t||"margin"===t){if(void 0===i)throw new n.ArgumentsRequired(this.id+" fetchBalance requires symbol argument for margin accounts");t=i}void 0===t&&(t=void 0===i?"flex":i);let a=this.parseAccount(t),o=this.safeValue(s,"accounts"),h=this.safeValue(o,a);if(void 0===h)throw t=void 0===t?"":t,i=void 0===i?"":i,new n.BadRequest(this.id+" fetchBalance has no account for "+t);let d=this.parseBalance(h);return d.info=s,d.timestamp=this.parse8601(r),d.datetime=r,d}parseBalance(e){let t=this.safeString2(e,"accountType","type"),i="multiCollateralMarginAccount"===t,s="cashAccount"===t,r=this.safeValue2(e,"balances","currencies",{}),a={},n=Object.keys(r);for(let t=0;t<n.length;t++){let o=n[t],h=r[o],d=this.safeCurrencyCode(o);if(d.split("_").length>1)continue;let l=this.account();if(i)l.total=this.safeString(h,"quantity"),l.free=this.safeString(h,"available");else if(s)l.used="0.0",l.total=h;else{let t=this.safeValue(e,"auxiliary");l.free=this.safeString(t,"af"),l.total=this.safeString(t,"pv")}a[d]=l}return this.safeBalance(a)}async fetchFundingRates(e,t={}){await this.loadMarkets();let i=this.marketIds(e),s=await this.publicGetTickers(t),r=this.safeList(s,"tickers",[]),a=[];for(let e=0;e<r.length;e++){let t=r[e],s=this.safeValue(t,"symbol");if(void 0!==i&&!this.inArray(s,i))continue;let n=this.safeMarket(s),o=this.parseFundingRate(t,n);a.push(o)}return this.indexBy(a,"symbol")}parseFundingRate(e,t){let i=this.safeString(e,"symbol"),s=this.symbol(i),a=this.parse8601(this.safeString(e,"lastTime")),n=this.safeNumber(e,"indexPrice"),o=this.safeString(e,"markPrice"),h=this.parseNumber(o),d=this.safeString(e,"fundingRate"),l=r.Y.stringDiv(r.Y.stringMul(d,"8"),o),c=this.parseNumber(l),u=this.safeString(e,"fundingRatePrediction"),f=r.Y.stringDiv(r.Y.stringMul(u,"8"),o),p=this.parseNumber(f);return{info:e,symbol:s,markPrice:h,indexPrice:n,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:a,datetime:this.iso8601(a),fundingRate:c,fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:p,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async fetchFundingRateHistory(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let r=this.market(e);if(!r.swap)throw new n.BadRequest(this.id+" fetchFundingRateHistory() supports swap contracts only");let a={symbol:r.id.toUpperCase()},o=await this.publicGetHistoricalfundingrates(this.extend(a,s)),h=this.safeValue(o,"rates"),d=[];for(let t=0;t<h.length;t++){let i=h[t],s=this.safeString(i,"timestamp");d.push({info:i,symbol:e,fundingRate:this.safeNumber(i,"relativeFundingRate"),timestamp:this.parse8601(s),datetime:s})}let l=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(l,e,t,i)}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.privateGetOpenpositions({}),s=this.parsePositions(i);return this.filterByArrayPositions(s,"symbol",e,!1)}parsePositions(e,t,i={}){let s=[],r=this.safeValue(e,"openPositions");for(let e=0;e<r.length;e++){let t=this.parsePosition(r[e]);s.push(t)}return s}parsePosition(e,t){let i=this.safeNumber(e,"maxFixedLeverage"),s="cross";void 0!==i&&(s="isolated");let r=this.safeString(e,"fillTime"),a=this.safeString(e,"symbol");return{info:e,symbol:(t=this.safeMarket(a,t)).symbol,timestamp:this.parse8601(r),datetime:r,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:this.safeNumber(e,"price"),notional:void 0,leverage:i,unrealizedPnl:void 0,contracts:this.safeNumber(e,"size"),contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:void 0,markPrice:void 0,collateral:void 0,marginType:s,side:this.safeString(e,"side"),percentage:void 0}}async fetchLeverageTiers(e,t={}){await this.loadMarkets();let i=await this.publicGetInstruments(t),s=this.safeList(i,"instruments");return this.parseLeverageTiers(s,e,"symbol")}parseMarketLeverageTiers(e,t){let i=this.safeValue(e,"marginLevels"),s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let a=[];if(void 0===i)return a;for(let e=0;e<i.length;e++){let n=i[e],o=this.safeString(n,"initialMargin"),h=this.safeNumber(n,"numNonContractUnits");if(0!==e){let e=a.length;a[e-1].maxNotional=h}a.push({tier:this.sum(e,1),symbol:this.safeSymbol(s,t),currency:t.quote,minNotional:h,maxNotional:void 0,maintenanceMarginRate:this.safeNumber(n,"maintenanceMargin"),maxLeverage:this.parseNumber(r.Y.stringDiv("1",o)),info:n})}return a}parseTransfer(e,t){let i=this.safeString(e,"serverTime");return{info:e,id:void 0,timestamp:this.parse8601(i),datetime:i,currency:this.safeString(t,"code"),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.safeString(e,"result")}}parseAccount(e){let t={main:"cash",funding:"cash",future:"cash",futures:"cash",cashAccount:"cash",multiCollateralMarginAccount:"flex",multiCollateral:"flex",multiCollateralMargin:"flex"};if(e in t)return t[e];if(!(e in this.markets))return e;{let t=this.market(e),i=t.id.split("_");return t.inverse?"fi_"+this.safeString(i,1):"fv_"+this.safeString(i,1)}}async transferOut(e,t,i={}){return await this.transfer(e,t,"future","spot",i)}async transfer(e,t,i,s,r={}){let a;await this.loadMarkets();let o=this.currency(e);if("spot"===i)throw new n.BadRequest(this.id+" transfer does not yet support transfers from spot");let h={amount:t};if("spot"===s){if("cash"!==this.parseAccount(i))throw new n.BadRequest(this.id+" transfer cannot transfer from "+i+" to "+s);h.currency=o.id,a=await this.privatePostWithdrawal(this.extend(h,r))}else h.fromAccount=this.parseAccount(i),h.toAccount=this.parseAccount(s),h.unit=o.id,a=await this.privatePostTransfer(this.extend(h,r));let d=this.parseTransfer(a,o);return this.extend(d,{amount:t,fromAccount:i,toAccount:s})}async setLeverage(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();let s={maxLeverage:e,symbol:this.marketId(t).toUpperCase()};return await this.privatePutLeveragepreferences(this.extend(s,i))}async fetchLeverages(e,t={}){await this.loadMarkets();let i=await this.privateGetLeveragepreferences(t),s=this.safeList(i,"leveragePreferences",[]);return this.parseLeverages(s,e,"symbol")}async fetchLeverage(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchLeverage() requires a symbol argument");await this.loadMarkets();let i=this.market(e),s={symbol:this.marketId(e).toUpperCase()},r=await this.privateGetLeveragepreferences(this.extend(s,t)),a=this.safeList(r,"leveragePreferences",[]),o=this.safeDict(a,0,{});return this.parseLeverage(o,i)}parseLeverage(e,t){let i=this.safeString(e,"symbol"),s=this.safeInteger(e,"maxLeverage");return{info:e,symbol:this.safeSymbol(i,t),marginMode:void 0,longLeverage:s,shortLeverage:s}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;if(429===e)throw new n.DDoSProtection(this.id+" "+a);let l=this.safeValue(o,"errors"),c=this.safeValue(l,0),u=this.safeString(c,"message"),f=this.safeString(o,"error",u);if(void 0===f)return;let p=this.id+" "+a;if(this.throwExactlyMatchedException(this.exceptions.exact,f,p),this.throwBroadlyMatchedException(this.exceptions.broad,f,p),400===e)throw new n.BadRequest(p);throw new n.ExchangeError(p)}sign(e,t="public",i="GET",s={},r,a){let n=this.safeValue(this.options.versions,t,{}),o=this.safeValue(n,i,{}),h=this.safeString(o,e,this.version),d=this.safeString(s,"version",h);s=this.omit(s,"version");let c=this.safeValue(this.options.access,t,{}),u=this.safeValue(c,i,{}),f=this.safeString(u,e,"public"),p=d+"/"+this.implodeParams(e,s);s=this.omit(s,this.extractParams(e));let m=p,g="";"batchorder"===e?a=g="json="+this.json(s):Object.keys(s).length&&(m+="?"+(g=this.urlencode(s)));let y=this.urls.api[t]+m;if("private"===t||"private"===f){this.checkRequiredCredentials();let e=g+"/api/";"private"!==t&&(e+=t+"/"),e+=p;let i=this.hash(this.encode(e),l.s,"binary"),s=this.base64ToBinary(this.secret),a=this.hmac(i,s,A.Zf,"base64");r={"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json",APIKey:this.apiKey,Authent:a}}return{url:y,method:i,body:a,headers:r}}}var io=i(8191);class ih extends io.A{}let id=ih;class il extends id{describe(){return this.deepExtend(super.describe(),{id:"kucoinfutures",name:"KuCoin Futures",countries:["SC"],rateLimit:75,version:"v1",certified:!0,pro:!0,comment:"Platform 2.0",quoteJsonNumbers:!1,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!0,closePositions:!1,createDepositAddress:!0,createOrder:!0,createOrders:!0,createOrderWithTakeProfitAndStopLoss:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopLossOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,createTakeProfitOrder:!0,createTriggerOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!0,fetchFundingInterval:!0,fetchFundingIntervals:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!0,fetchLedger:!0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!0,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMarkPrice:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!0,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsHistory:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTransactionFee:!1,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!0,transfer:!0,withdraw:void 0},urls:{logo:"https://user-images.githubusercontent.com/1294454/147508995-9e35030a-d046-43a1-a006-6fabd981b554.jpg",doc:["https://docs.kucoin.com/futures","https://docs.kucoin.com"],www:"https://futures.kucoin.com/",referral:"https://futures.kucoin.com/?rcode=E5wkqe",api:{public:"https://openapi-v2.kucoin.com",private:"https://openapi-v2.kucoin.com",futuresPrivate:"https://api-futures.kucoin.com",futuresPublic:"https://api-futures.kucoin.com",webExchange:"https://futures.kucoin.com/_api/web-front"}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{futuresPublic:{get:{"contracts/active":1,"contracts/{symbol}":1,"contracts/risk-limit/{symbol}":1,ticker:1,allTickers:1,"level2/snapshot":1.33,"level2/depth{limit}":1,"level2/message/query":1,"level3/message/query":1,"level3/snapshot":1,"trade/history":1,"interest/query":1,"index/query":1,"mark-price/{symbol}/current":1,"premium/query":1,"funding-rate/{symbol}/current":1,timestamp:1,status:1,"kline/query":1},post:{"bullet-public":1}},futuresPrivate:{get:{"account-overview":1.33,"transaction-history":4.44,"deposit-address":1,"deposit-list":1,"withdrawals/quotas":1,"withdrawal-list":1,"transfer-list":1,orders:1.33,stopOrders:1,recentDoneOrders:1,"orders/{orderId}":1,"orders/byClientOid":1,fills:4.44,recentFills:4.44,openOrderStatistics:1,position:1,positions:4.44,"funding-history":4.44,"sub/api-key":1,"trade-statistics":1,"trade-fees":1,"history-positions":1,getMaxOpenSize:1,getCrossUserLeverage:1,"position/getMarginMode":1},post:{withdrawals:1,"transfer-out":1,"transfer-in":1,orders:1.33,"st-orders":1.33,"orders/test":1.33,"position/margin/auto-deposit-status":1,"position/margin/deposit-margin":1,"position/risk-limit-level/change":1,"bullet-private":1,"sub/api-key":1,"sub/api-key/update":1,changeCrossUserLeverage:1,"position/changeMarginMode":1},delete:{"withdrawals/{withdrawalId}":1,"cancel/transfer-out":1,"orders/{orderId}":1,orders:4.44,stopOrders:1,"sub/api-key":1,"orders/client-order/{clientOid}":1,"orders/multi-cancel":20}},webExchange:{get:{"contract/{symbol}/funding-rates":1}}},precisionMode:d.kb,exceptions:{exact:{400:n.BadRequest,401:n.AuthenticationError,403:n.NotSupported,404:n.NotSupported,405:n.NotSupported,415:n.BadRequest,429:n.RateLimitExceeded,500:n.ExchangeNotAvailable,503:n.ExchangeNotAvailable,100001:n.InvalidOrder,100004:n.BadRequest,101030:n.PermissionDenied,200004:n.InsufficientFunds,230003:n.InsufficientFunds,260100:n.InsufficientFunds,300003:n.InsufficientFunds,300012:n.InvalidOrder,400001:n.AuthenticationError,400002:n.InvalidNonce,400003:n.AuthenticationError,400004:n.AuthenticationError,400005:n.AuthenticationError,400006:n.AuthenticationError,400007:n.AuthenticationError,404e3:n.NotSupported,400100:n.BadRequest,411100:n.AccountSuspended,5e5:n.ExchangeNotAvailable,300009:n.InvalidOrder},broad:{"Position does not exist":n.OrderNotFound}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0006"),maker:this.parseNumber("0.0002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0006")],[this.parseNumber("50"),this.parseNumber("0.0006")],[this.parseNumber("200"),this.parseNumber("0.0006")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0004")],[this.parseNumber("2000"),this.parseNumber("0.0004")],[this.parseNumber("4000"),this.parseNumber("0.00038")],[this.parseNumber("8000"),this.parseNumber("0.00035")],[this.parseNumber("15000"),this.parseNumber("0.00032")],[this.parseNumber("25000"),this.parseNumber("0.0003")],[this.parseNumber("40000"),this.parseNumber("0.0003")],[this.parseNumber("60000"),this.parseNumber("0.0003")],[this.parseNumber("80000"),this.parseNumber("0.0003")]],maker:[[this.parseNumber("0"),this.parseNumber("0.02")],[this.parseNumber("50"),this.parseNumber("0.015")],[this.parseNumber("200"),this.parseNumber("0.01")],[this.parseNumber("500"),this.parseNumber("0.01")],[this.parseNumber("1000"),this.parseNumber("0.01")],[this.parseNumber("2000"),this.parseNumber("0")],[this.parseNumber("4000"),this.parseNumber("0")],[this.parseNumber("8000"),this.parseNumber("0")],[this.parseNumber("15000"),this.parseNumber("-0.003")],[this.parseNumber("25000"),this.parseNumber("-0.006")],[this.parseNumber("40000"),this.parseNumber("-0.009")],[this.parseNumber("60000"),this.parseNumber("-0.012")],[this.parseNumber("80000"),this.parseNumber("-0.015")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{HOT:"HOTNOW",EDGE:"DADI",WAX:"WAXP",TRY:"Trias",VAI:"VAIOT",XBT:"BTC"},timeframes:{"1m":1,"3m":void 0,"5m":5,"15m":15,"30m":30,"1h":60,"2h":120,"4h":240,"6h":void 0,"8h":480,"12h":720,"1d":1440,"1w":10080},options:{version:"v1",symbolSeparator:"-",defaultType:"swap",code:"USDT",marginModes:{},marginTypes:{},versions:{futuresPrivate:{GET:{getMaxOpenSize:"v2",getCrossUserLeverage:"v2","position/getMarginMode":"v2"},POST:{"transfer-out":"v2",changeCrossUserLeverage:"v2","position/changeMarginMode":"v2"}},futuresPublic:{GET:{"level3/snapshot":"v2"}}},networks:{OMNI:"omni",ERC20:"eth",TRC20:"trx"}},features:{spot:void 0,forDerivs:{sandbox:!1,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!0},triggerDirection:!0,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:{triggerPriceType:void 0,price:!0},timeInForce:{IOC:!0,FOK:!1,PO:!0,GTD:!1},hedged:!1,trailing:!1,leverage:!0,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!0,iceberg:!0},createOrders:{max:20},fetchMyTrades:{marginMode:!0,limit:1e3,daysBack:void 0,untilDays:7},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:1e3,trigger:!0,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:void 0,daysBackCanceled:void 0,untilDays:void 0,trigger:!0,trailing:!1},fetchOHLCV:{limit:500}},swap:{linear:{extends:"forDerivs"},inverse:{extends:"forDerivs"}},future:{linear:{extends:"forDerivs"},inverse:{extends:"forDerivs"}}}})}async fetchStatus(e={}){let t=await this.futuresPublicGetStatus(e),i=this.safeValue(t,"data",{});return{status:"open"===this.safeString(i,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){let t=await this.futuresPublicGetContractsActive(e),i=[],s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){let t=s[e],a=this.safeString(t,"symbol"),n=this.safeInteger(t,"expireDate"),o=!!n,h=!o,d=this.safeString(t,"baseCurrency"),l=this.safeString(t,"quoteCurrency"),c=this.safeString(t,"settleCurrency"),u=this.safeCurrencyCode(d),f=this.safeCurrencyCode(l),p=this.safeCurrencyCode(c),m=u+"/"+f+":"+p,g="swap";o&&(m=m+"-"+this.yymmdd(n,""),g="future");let y=this.safeValue(t,"isInverse"),v=this.safeString(t,"status"),b=this.safeString(t,"multiplier"),w=this.safeNumber(t,"tickSize"),k=this.safeNumber(t,"lotSize"),S=k;void 0===S&&(S=this.safeNumber(t,"baseMinSize"));let O=this.safeNumber(t,"maxOrderQty");void 0===O&&(O=this.safeNumber(t,"baseMaxSize"));let T=this.safeNumber(t,"maxPrice");if(void 0===T){let e=this.safeString(t,"baseMinSize"),i=this.safeString(t,"quoteMaxSize");T=this.parseNumber(r.Y.stringDiv(i,e))}i.push({id:a,symbol:m,base:u,quote:f,settle:p,baseId:d,quoteId:l,settleId:c,type:g,spot:!1,margin:!1,swap:h,future:o,option:!1,active:"Open"===v,contract:!0,linear:!y,inverse:y,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.parseNumber(r.Y.stringAbs(b)),expiry:n,expiryDatetime:this.iso8601(n),strike:void 0,optionType:void 0,precision:{amount:k,price:w},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(t,"maxLeverage")},amount:{min:S,max:O},price:{min:w,max:T},cost:{min:this.safeNumber(t,"quoteMinSize"),max:this.safeNumber(t,"quoteMaxSize")}},created:this.safeInteger(t,"firstOpenDate"),info:t})}return i}async fetchTime(e={}){let t=await this.futuresPublicGetTimestamp(e);return this.safeInteger(t,"data")}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,200);let n=this.market(e),o=n.id,h=this.safeInteger(this.timeframes,t),d={symbol:o};void 0!==h?d.granularity=h:d.granularity=t;let l=1e3*this.parseTimeframe(t),c=this.milliseconds();void 0!==i?(d.from=i,void 0===s&&(s=this.safeInteger(this.options,"fetchOHLCVLimit",200)),c=this.sum(i,s*l)):void 0!==s&&(i=c-s*l,d.from=i),d.to=c;let u=await this.futuresPublicGetKlineQuery(this.extend(d,r)),f=this.safeList(u,"data",[]);return this.parseOHLCVs(f,n,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e).id,s=await this.futuresPrivateGetDepositAddress(this.extend({currency:i},t)),r=this.safeValue(s,"data",{}),a=this.safeString(r,"address");return"NIM"!==i&&this.checkAddress(a),{info:s,currency:i,network:this.safeString(r,"chain"),address:a,tag:this.safeString(r,"memo")}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.safeNumber(i,"level");if(2!==s&&void 0!==s)throw new n.BadRequest(this.id+" fetchOrderBook() can only return level 2");let r=this.market(e),a={symbol:r.id};if(void 0!==t){if(20===t||100===t)a.limit=t;else throw new n.BadRequest(this.id+" fetchOrderBook() limit argument must be 20 or 100")}else a.limit=20;let o=await this.futuresPublicGetLevel2DepthLimit(this.extend(a,i)),h=this.safeValue(o,"data",{}),d=this.parseToInt(this.safeInteger(h,"ts")/1e6),l=this.parseOrderBook(h,r.symbol,d,"bids","asks",0,1);return l.nonce=this.safeInteger(h,"sequence"),l}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.futuresPublicGetTicker(this.extend(s,t));return this.parseTicker(r.data,i)}async fetchMarkPrice(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.futuresPublicGetMarkPriceSymbolCurrent(this.extend(s,t));return this.parseTicker(r.data,i)}async fetchTickers(e,t={}){let i,s;await this.loadMarkets(),e=this.marketSymbols(e),[i,t]=this.handleOptionAndParams(t,"fetchTickers","method","futuresPublicGetContractsActive"),s="futuresPublicGetAllTickers"===i?await this.futuresPublicGetAllTickers(t):await this.futuresPublicGetContractsActive(t);let r=this.safeList(s,"data"),a=this.parseTickers(r,e);return this.filterByArrayTickers(a,"symbol",e)}parseTicker(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t,"-");let s=this.safeString2(e,"price","lastTradePrice"),r=this.safeIntegerProduct(e,"ts",1e-6);return this.safeTicker({symbol:t.symbol,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bestBidPrice"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString(e,"bestAskPrice"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:this.safeString(e,"priceChg"),percentage:this.safeString(e,"priceChgPct"),average:void 0,baseVolume:this.safeString(e,"volumeOf24h"),quoteVolume:this.safeString(e,"turnoverOf24h"),markPrice:this.safeString2(e,"markPrice","value"),indexPrice:this.safeString(e,"indexPrice"),info:e},t)}async fetchBidsAsks(e,t={}){return await this.fetchTickers(e,this.extend({method:"futuresPublicGetAllTickers"},t))}async fetchFundingHistory(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");await this.loadMarkets();let r={symbol:this.market(e).id};void 0!==t&&(r.startAt=t),void 0!==i&&(r.maxCount=i);let a=await this.futuresPrivateGetFundingHistory(this.extend(r,s)),o=this.safeValue(a,"data"),h=this.safeValue(o,"dataList",[]),d=[];for(let t=0;t<h.length;t++){let i=h[t],s=this.safeInteger(i,"timePoint");d.push({info:i,symbol:e,code:this.safeCurrencyCode(this.safeString(i,"settleCurrency")),timestamp:s,datetime:this.iso8601(s),id:this.safeNumber(i,"id"),amount:this.safeNumber(i,"funding"),fundingRate:this.safeNumber(i,"fundingRate"),markPrice:this.safeNumber(i,"markPrice"),positionQty:this.safeNumber(i,"positionQty"),positionCost:this.safeNumber(i,"positionCost")})}return d}async fetchPosition(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.futuresPrivateGetPosition(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parsePosition(a,i)}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.futuresPrivateGetPositions(t),s=this.safeList(i,"data");return this.parsePositions(s,e)}async fetchPositionsHistory(e,t,i,s={}){await this.loadMarkets(),void 0===i&&(i=200);let r={limit:i};void 0!==t&&(r.from=t);let a=this.safeInteger(s,"until");void 0!==a&&(s=this.omit(s,"until"),r.to=a);let n=await this.futuresPrivateGetHistoryPositions(this.extend(r,s)),o=this.safeDict(n,"data"),h=this.safeList(o,"items",[]);return this.parsePositions(h,e)}parsePosition(e,t){let i,s;let a=this.safeString(e,"symbol");t=this.safeMarket(a,t);let n=this.safeInteger(e,"currentTimestamp"),o=this.safeString(e,"currentQty"),h=this.safeStringLower(e,"type");void 0!==o?r.Y.stringGt(o,"0")?i="long":r.Y.stringLt(o,"0")&&(i="short"):void 0!==h&&(i=h.indexOf("long")>-1?"long":"short");let d=r.Y.stringAbs(this.safeString(e,"posCost")),l=this.safeString(e,"posInit"),c=r.Y.stringDiv(l,d),u=this.safeString(e,"unrealisedPnl"),f=this.safeValue(e,"crossMode");return void 0!==f&&(s=f?"cross":"isolated"),this.safePosition({info:e,id:this.safeString2(e,"id","positionId"),symbol:this.safeString(t,"symbol"),timestamp:n,datetime:this.iso8601(n),lastUpdateTimestamp:this.safeInteger(e,"closeTime"),initialMargin:this.parseNumber(l),initialMarginPercentage:this.parseNumber(c),maintenanceMargin:this.safeNumber(e,"posMaint"),maintenanceMarginPercentage:this.safeNumber(e,"maintMarginReq"),entryPrice:this.safeNumber2(e,"avgEntryPrice","openPrice"),notional:this.parseNumber(d),leverage:this.safeNumber2(e,"realLeverage","leverage"),unrealizedPnl:this.parseNumber(u),contracts:this.parseNumber(r.Y.stringAbs(o)),contractSize:this.safeValue(t,"contractSize"),realizedPnl:this.safeNumber2(e,"realisedPnl","pnl"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liquidationPrice"),markPrice:this.safeNumber(e,"markPrice"),lastPrice:void 0,collateral:this.safeNumber(e,"maintMargin"),marginMode:s,side:i,percentage:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets();let o=this.market(e),h=this.safeBool(a,"test",!1);a=this.omit(a,"test");let d=void 0!==this.safeValue(a,"stopLoss")||void 0!==this.safeValue(a,"takeProfit"),l=this.createContractOrderRequest(e,t,i,s,r,a);n=h?await this.futuresPrivatePostOrdersTest(l):d?await this.futuresPrivatePostStOrders(l):await this.futuresPrivatePostOrders(l);let c=this.safeDict(n,"data",{});return this.parseOrder(c,o)}async createOrders(e,t={}){await this.loadMarkets();let i=[];for(let t=0;t<e.length;t++){let s=e[t],r=this.safeString(s,"symbol"),a=this.market(r),n=this.safeString(s,"type"),o=this.safeString(s,"side"),h=this.safeValue(s,"amount"),d=this.safeValue(s,"price"),l=this.safeValue(s,"params",{}),c=this.createContractOrderRequest(a.id,n,o,h,d,l);i.push(c)}let s=await this.futuresPrivatePostOrdersMulti(i),r=this.safeList(s,"data",[]);return this.parseOrders(r)}createContractOrderRequest(e,t,i,s,r,a={}){let o;let h=this.market(e),d=this.safeString2(a,"clientOid","clientOrderId",this.uuid());a=this.omit(a,["clientOid","clientOrderId"]);let l={clientOid:d,side:i,symbol:h.id,type:t,leverage:1},c=this.safeString(a,"cost");if(a=this.omit(a,"cost"),void 0!==c)l.valueQty=this.costToPrecision(e,c);else{if(s<1)throw new n.InvalidOrder(this.id+" createOrder() minimum contract order amount is 1");l.size=parseInt(this.amountToPrecision(e,s))}let[u,f,p]=this.handleTriggerPrices(a),m=this.safeDict(a,"stopLoss"),g=this.safeDict(a,"takeProfit"),y={mark:"MP",last:"TP",index:"IP"},v=this.safeString(a,"triggerPriceType","mark"),b=this.safeString(y,v,v);if(a=this.omit(a,["stopLossPrice","takeProfitPrice","triggerPrice","stopPrice","takeProfit","stopLoss"]),u)l.stop="buy"===i?"up":"down",l.stopPrice=this.priceToPrecision(e,u),l.stopPriceType=b;else if(void 0!==m||void 0!==g){let t=b;if(void 0!==m){let i=this.safeString2(m,"triggerPrice","stopPrice");l.triggerStopDownPrice=this.priceToPrecision(e,i),t=this.safeString(m,"triggerPriceType","mark"),t=this.safeString(y,t,t)}if(void 0!==g){let i=this.safeString2(g,"triggerPrice","takeProfitPrice");l.triggerStopUpPrice=this.priceToPrecision(e,i),t=this.safeString(g,"triggerPriceType","mark"),t=this.safeString(y,t,t)}l.stopPriceType=t}else(f||p)&&(f?(l.stop="buy"===i?"up":"down",l.stopPrice=this.priceToPrecision(e,f)):(l.stop="buy"===i?"down":"up",l.stopPrice=this.priceToPrecision(e,p)),l.reduceOnly=!0,l.stopPriceType=b);let w=t.toUpperCase(),k=this.safeStringUpper(a,"timeInForce");if("LIMIT"===w){if(void 0===r)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for limit orders");l.price=this.priceToPrecision(e,r),void 0!==k&&(l.timeInForce=k)}[o,a]=this.handlePostOnly("market"===t,!1,a),o&&(l.postOnly=!0);let S=this.safeValue(a,"hidden");if(o&&void 0!==S)throw new n.BadRequest(this.id+" createOrder() does not support the postOnly parameter together with a hidden parameter");if(this.safeValue(a,"iceberg")&&void 0===this.safeValue(a,"visibleSize"))throw new n.ArgumentsRequired(this.id+" createOrder() requires a visibleSize parameter for iceberg orders");return a=this.omit(a,["timeInForce","stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]),this.extend(l,a)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets();let r=this.safeString2(i,"clientOid","clientOrderId");i=this.omit(i,["clientOrderId"]);let a={};if(void 0!==r){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument when cancelling by clientOrderId");let e=this.market(t);a.symbol=e.id,a.clientOid=r,s=await this.futuresPrivateDeleteOrdersClientOrderClientOid(this.extend(a,i))}else a.orderId=e,s=await this.futuresPrivateDeleteOrdersOrderId(this.extend(a,i));return this.safeValue(s,"data")}async cancelOrders(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=[],a=this.safeList2(i,"clientOrderIds","clientOids",[]);i=this.omit(i,["clientOrderIds","clientOids"]);let o=!1;for(let e=0;e<a.length;e++){if(o=!0,void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument when cancelling by clientOrderIds");r.push({symbol:s.id,clientOid:this.safeString(a,e)})}for(let t=0;t<e.length;t++)r.push(e[t]);let h={};h[o?"clientOidsList":"orderIdsList"]=r;let d=await this.futuresPrivateDeleteOrdersMultiCancel(this.extend(h,i)),l=this.safeList(d,"data",[]);return this.parseOrders(l,s)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e&&(s.symbol=this.marketId(e));let r=this.safeValue2(t,"stop","trigger");return t=this.omit(t,["stop","trigger"]),i=r?await this.futuresPrivateDeleteStopOrders(this.extend(s,t)):await this.futuresPrivateDeleteOrders(this.extend(s,t)),this.safeValue(i,"data")}async addMargin(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=this.uuid(),a={symbol:s.id,margin:this.amountToPrecision(e,t),bizNo:r},n=await this.futuresPrivatePostPositionMarginDepositMargin(this.extend(a,i)),o=this.safeValue(n,"data");return this.extend(this.parseMarginModification(o,s),{amount:this.amountToPrecision(e,t),direction:"in"})}parseMarginModification(e,t){let i=this.safeString(e,"id");t=this.safeMarket(i,t);let s=this.safeString(e,"settleCurrency"),r=this.safeValue(e,"crossMode"),a=this.safeString(t,"symbol"),n=this.safeInteger(e,"currentTimestamp");return{info:e,symbol:this.safeSymbol(a,t),type:void 0,marginMode:r?"cross":"isolated",amount:void 0,total:void 0,code:this.safeCurrencyCode(s),status:void 0,timestamp:n,datetime:this.iso8601(n)}}async fetchOrdersByStatus(e,t,i,s,r={}){let a,o;await this.loadMarkets();let h=!1;if([h,r]=this.handleOptionAndParams(r,"fetchOrdersByStatus","paginate"),h)return await this.fetchPaginatedCallDynamic("fetchOrdersByStatus",t,i,s,r);let d=this.safeBool2(r,"stop","trigger"),l=this.safeInteger(r,"until");r=this.omit(r,["stop","until","trigger"]),"closed"===e?e="done":"open"===e&&(e="active");let c={};if(d){if("active"!==e)throw new n.BadRequest(this.id+" fetchOrdersByStatus() can only fetch untriggered stop orders")}else c.status=e;void 0!==t&&(a=this.market(t),c.symbol=a.id),void 0!==i&&(c.startAt=i),void 0!==l&&(c.endAt=l),o=d?await this.futuresPrivateGetStopOrders(this.extend(c,r)):await this.futuresPrivateGetOrders(this.extend(c,r));let u=this.safeValue(o,"data",{}),f=this.safeList(u,"items",[]);return this.parseOrders(f,a,i,s)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=!1;return([r,s]=this.handleOptionAndParams(s,"fetchClosedOrders","paginate"),r)?await this.fetchPaginatedCallDynamic("fetchClosedOrders",e,t,i,s):await this.fetchOrdersByStatus("done",e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=!1;return([r,s]=this.handleOptionAndParams(s,"fetchOpenOrders","paginate"),r)?await this.fetchPaginatedCallDynamic("fetchOpenOrders",e,t,i,s):await this.fetchOrdersByStatus("open",e,t,i,s)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets();let r={};if(void 0===e){let e=this.safeString2(i,"clientOid","clientOrderId");if(void 0===e)throw new n.InvalidOrder(this.id+" fetchOrder() requires parameter id or params.clientOid");r.clientOid=e,i=this.omit(i,["clientOid","clientOrderId"]),s=await this.futuresPrivateGetOrdersByClientOid(this.extend(r,i))}else r.orderId=e,s=await this.futuresPrivateGetOrdersOrderId(this.extend(r,i));let a=void 0!==t?this.market(t):void 0,o=this.safeDict(s,"data");return this.parseOrder(o,a)}parseOrder(e,t){let i,s;let a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeString2(e,"id","orderId"),h=this.safeString(e,"type"),d=this.safeInteger(e,"createdAt"),l=this.iso8601(d),c=this.safeString(e,"price"),u=this.safeString(e,"side"),f=this.safeString(e,"feeCurrency"),p=this.safeCurrencyCode(f),m=this.safeNumber(e,"fee"),g=this.safeString(e,"size"),y=this.safeString(e,"filledSize"),v=this.safeString(e,"filledValue"),b=this.safeString(e,"avgDealPrice");if(void 0===b&&r.Y.stringGt(y,"0")){let e=this.safeString(t,"contractSize");b=t.linear?r.Y.stringDiv(v,r.Y.stringMul(e,y)):r.Y.stringDiv(r.Y.stringMul(e,y),v)}let w=this.safeValue(e,"isActive"),k=this.safeBool(e,"cancelExist",!1);void 0!==w&&(i=w?"open":"closed"),i=k?"canceled":i,void 0!==m&&(s={currency:p,cost:m});let S=this.safeString(e,"clientOid"),O=this.safeString(e,"timeInForce"),T=this.safeValue(e,"postOnly"),I=this.safeValue(e,"reduceOnly"),x=this.safeInteger(e,"updatedAt");return this.safeOrder({id:o,clientOrderId:S,symbol:n,type:h,timeInForce:O,postOnly:T,reduceOnly:I,side:u,amount:g,price:c,triggerPrice:this.safeNumber(e,"stopPrice"),cost:v,filled:y,remaining:void 0,timestamp:d,datetime:l,fee:s,status:i,info:e,lastTradeTimestamp:void 0,lastUpdateTimestamp:x,average:b,trades:void 0},t)}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.futuresPublicGetFundingRateSymbolCurrent(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseFundingRate(a,i)}async fetchFundingInterval(e,t={}){return await this.fetchFundingRate(e,t)}parseFundingRate(e,t){let i=this.safeInteger(e,"timePoint"),s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t,void 0,"contract"),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"value"),fundingTimestamp:i,fundingDatetime:this.iso8601(i),nextFundingRate:this.safeNumber(e,"predictedValue"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:this.parseFundingInterval(this.safeString(e,"granularity"))}}parseFundingInterval(e){return this.safeString({36e5:"1h",144e5:"4h",288e5:"8h",576e5:"16h",864e5:"24h"},e,e)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data"),s=this.safeString(i,"currency"),r=this.safeCurrencyCode(s),a=this.account();return a.free=this.safeString(i,"availableBalance"),a.total=this.safeString(i,"accountEquity"),t[r]=a,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(this.options,"code"),i=this.safeValue(this.options,"fetchBalance",{});t=this.safeString(i,"code",t);let s=this.safeString(e,"code",t),r={currency:this.currency(s).id},a=await this.futuresPrivateGetAccountOverview(this.extend(r,e));return this.parseBalance(a)}async transfer(e,t,i,s,r={}){let a;await this.loadMarkets();let o=this.currency(e),h=this.currencyToPrecision(e,t),d={currency:this.safeString(o,"id"),amount:h},l=this.parseTransferType(s);if("TRADE"===l||"MAIN"===l)d.recAccountType=l,a=await this.futuresPrivatePostTransferOut(this.extend(d,r));else if("future"===s||"swap"===s||"contract"===s)d.payAccountType=this.parseTransferType(i),a=await this.futuresPrivatePostTransferIn(this.extend(d,r));else throw new n.BadRequest(this.id+" transfer() only supports transfers between future/swap, spot and funding accounts");let c=this.safeDict(a,"data",{});return this.extend(this.parseTransfer(c,o),{amount:this.parseNumber(h),fromAccount:i,toAccount:s})}parseTransfer(e,t){let i=this.safeInteger(e,"updatedAt");return{id:this.safeString(e,"applyId"),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(void 0,t),amount:this.safeNumber(e,"amount"),fromAccount:void 0,toAccount:void 0,status:this.safeString(e,"status"),info:e}}parseTransferStatus(e){return this.safeString({PROCESSING:"pending"},e,e)}parseTransferType(e){return this.safeStringUpper({spot:"TRADE",funding:"MAIN"},e,e)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s);let n={};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==t&&(n.startAt=t),void 0!==i&&(n.pageSize=Math.min(1e3,i)),[n,s]=this.handleUntilOption("endAt",n,s);let o=await this.futuresPrivateGetFills(this.extend(n,s)),h=this.safeDict(o,"data",{}),d=this.safeList(h,"items",[]);return this.parseTrades(d,r,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id},n=await this.futuresPublicGetTradeHistory(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i;let s=this.safeString(e,"symbol");t=this.safeMarket(s,t,"-");let a=this.safeString2(e,"tradeId","id"),n=this.safeString(e,"orderId"),o=this.safeString(e,"liquidity"),h=this.safeInteger(e,"ts");void 0!==h?h=this.parseToInt(h/1e6):(h=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==h&&(h*=1e3));let d=this.safeString2(e,"price","dealPrice"),l=this.safeString2(e,"size","amount"),c=this.safeString(e,"side"),u=this.safeString(e,"fee");if(void 0!==u){let s=this.safeString(e,"feeCurrency"),r=this.safeCurrencyCode(s);void 0===r&&(r="sell"===c?t.quote:t.base),i={cost:u,currency:r,rate:this.safeString(e,"feeRate")}}let f=this.safeString2(e,"type","orderType");"match"===f&&(f=void 0);let p=this.safeString2(e,"funds","value");if(void 0===p){let e=this.safeString(t,"contractSize"),i=r.Y.stringMul(d,l);p=r.Y.stringMul(i,e)}return this.safeTrade({info:e,id:a,order:n,timestamp:h,datetime:this.iso8601(h),symbol:t.symbol,type:f,takerOrMaker:o,side:c,price:d,amount:l,cost:p,fee:i},t)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.pageSize=i),void 0!==t&&(a.startAt=t);let n=(await this.futuresPrivateGetDepositList(this.extend(a,s))).data.items;return this.parseTransactions(n,r,t,i,{type:"deposit"})}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.pageSize=i),void 0!==t&&(a.startAt=t);let n=(await this.futuresPrivateGetWithdrawalList(this.extend(a,s))).data.items;return this.parseTransactions(n,r,t,i,{type:"withdrawal"})}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.contract)throw new n.BadRequest(this.id+" fetchMarketLeverageTiers() supports contract markets only");let s={symbol:i.id},r=await this.futuresPublicGetContractsRiskLimitSymbol(this.extend(s,t)),a=this.safeValue(r,"data");return this.parseMarketLeverageTiers(a,i)}parseMarketLeverageTiers(e,t){let i=[];for(let s=0;s<e.length;s++){let r=e[s],a=this.safeString(r,"symbol");i.push({tier:this.safeNumber(r,"level"),symbol:this.safeSymbol(a,t,void 0,"contract"),currency:t.base,minNotional:this.safeNumber(r,"minRiskLimit"),maxNotional:this.safeNumber(r,"maxRiskLimit"),maintenanceMarginRate:this.safeNumber(r,"maintainMargin"),maxLeverage:this.safeNumber(r,"maxLeverage"),info:r})}return i}async fetchFundingRateHistory(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id,from:0,to:this.milliseconds()},o=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==t&&(a.from=t,void 0===o&&(a.to=t+288e7)),void 0!==o&&(a.to=o,void 0===t&&(a.to=o-288e7));let h=await this.futuresPublicGetContractFundingRates(this.extend(a,s)),d=this.safeValue(h,"data");return this.parseFundingRateHistories(d,r,t,i)}parseFundingRateHistory(e,t){let i=this.safeInteger(e,"timepoint"),s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t),fundingRate:this.safeNumber(e,"fundingRate"),timestamp:i,datetime:this.iso8601(i)}}async closePosition(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),a=this.safeString(i,"clientOrderId"),n=this.safeBool(i,"test",!1);i=this.omit(i,["test","clientOrderId"]),void 0===a&&(a=this.numberToString(this.nonce()));let o={symbol:r.id,closeOrder:!0,clientOid:a,type:"market"};return s=n?await this.futuresPrivatePostOrdersTest(this.extend(o,i)):await this.futuresPrivatePostOrders(this.extend(o,i)),this.parseOrder(s,r)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbols:i.id},r=await this.privateGetTradeFees(this.extend(s,t)),a=this.safeList(r,"data",[]),n=this.safeDict(a,0),o=this.safeString(n,"symbol");return{info:r,symbol:this.safeSymbol(o,i),maker:this.safeNumber(n,"makerFeeRate"),taker:this.safeNumber(n,"takerFeeRate"),percentage:!0,tierBased:!0}}async fetchMarginMode(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.futuresPrivateGetPositionGetMarginMode(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseMarginMode(a,i)}parseMarginMode(e,t){let i=this.safeString(e,"marginMode");return i="ISOLATED"===i?"isolated":"cross",{info:e,symbol:t.symbol,marginMode:i}}async setMarginMode(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");this.checkRequiredArgument("setMarginMode",e,"marginMode",["cross","isolated"]),await this.loadMarkets();let s=this.market(t),r={symbol:s.id,marginMode:e.toUpperCase()},a=await this.futuresPrivatePostPositionChangeMarginMode(this.extend(r,i)),o=this.safeDict(a,"data",{});return this.parseMarginMode(o,s)}async fetchLeverage(e,t={}){let i;if([i,t]=this.handleMarginModeAndParams(e,t),"cross"!==i)throw new n.NotSupported(this.id+' fetchLeverage() currently supports only params["marginMode"] = "cross"');await this.loadMarkets();let s=this.market(e),r={symbol:s.id},a=await this.futuresPrivateGetGetCrossUserLeverage(this.extend(r,t)),o=this.safeDict(a,"data",{}),h=this.parseLeverage(o,s);return this.extend(h,{marginMode:i})}async setLeverage(e,t,i={}){let s;if([s,i]=this.handleMarginModeAndParams(t,i),"cross"!==s)throw new n.NotSupported(this.id+' setLeverage() currently supports only params["marginMode"] = "cross"');await this.loadMarkets();let r=this.market(t),a={symbol:r.id,leverage:e.toString()},o=await this.futuresPrivatePostChangeCrossUserLeverage(this.extend(a,i));return this.parseLeverage(o,r)}parseLeverage(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeInteger(e,"leverage");return{info:e,symbol:t.symbol,marginMode:void 0,longLeverage:s,shortLeverage:s}}}class ic extends s.k{}let iu=ic;class ip extends iu{describe(){return this.deepExtend(super.describe(),{id:"kuna",name:"Kuna",countries:["UA"],rateLimit:1e3,version:"v4",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!0,createOrder:!0,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchIsolatedPositions:!1,fetchL3OrderBook:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:"emulated",fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrdersByStatus:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawAddresses:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!0},timeframes:void 0,urls:{extension:".json",referral:"https://kuna.io?r=kunaid-gvfihe8az7o4",logo:"https://user-images.githubusercontent.com/51840849/87153927-f0578b80-c2c0-11ea-84b6-74612568e9e1.jpg",api:{xreserve:"https://api.xreserve.fund",v3:"https://api.kuna.io",v4:"https://api.kuna.io",public:"https://kuna.io",private:"https://kuna.io"},www:"https://kuna.io",doc:"https://kuna.io/documents/api",fees:"https://kuna.io/documents/api"},api:{xreserve:{get:{nonce:1,fee:1,"delegated-transactions":1},post:{"delegate-transfer":1}},v4:{private:{get:{"private/me":1,"private/getBalance":1,"order/private/active":1,"order/private/history":1,"order/private/{id}/trades":1,"order/private/details/{id}":1,"trade/private/history":1,"transaction/private/{hash}":1,"deposit/private/preRequest":1,"deposit/private/crypto/address":1,"deposit/private/crypto/getMerchantAddress":1,"deposit/private/history":1,"deposit/private/details/{depositId}":1,"withdraw/private/preRequest":1,"withdraw/private/history":1,"withdraw/private/details/{withdrawId}":1,"kuna-code/{id}":1,"kuna-code/{code}/check":1,"kuna-code/issued-by-me":1,"kuna-code/redeemed-by-me":1},post:{"order/private/create":1,"order/private/cancel":1,"order/private/cancel/multi":1,"deposit/private/crypto/generateAddress":1,"deposit/private/crypto/generateMerchantAddress":1,"withdraw/private/create":1,"kuna-code":1},put:{"kuna-code/redeem":1}},public:{get:{"public/timestamp":1,"public/fees":1,"public/currencies?type={type}":1,"public/currencies":1,"markets/public/getAll":1,"markets/public/tickers?pairs={pairs}":1,"order/public/book/{pairs}":1,"trade/public/book/{pairs}":1}}},v3:{public:{get:{timestamp:1,currencies:1,markets:1,tickers:1,k:1,trades_history:1,fees:1,"exchange-rates":1,"exchange-rates/currency":1,"book/market":1,"kuna_codes/code/check":1,landing_page_statistic:1,"translations/locale":1,"trades/market/hist":1},post:{http_test:1,deposit_channels:1,withdraw_channels:1,subscription_plans:1,send_to:1,confirm_token:1,kunaid:1,"withdraw/prerequest":1,"deposit/prerequest":1,"deposit/exchange-rates":1}},sign:{get:{"reset_password/token":1},post:{"signup/google":1,"signup/resend_confirmation":1,signup:1,signin:1,"signin/two_factor":1,"signin/resend_confirm_device":1,"signin/confirm_device":1,reset_password:1,"cool-signin":1},put:{"reset_password/token":1,"signup/code/confirm":1}},private:{post:{"auth/w/order/submit":1,"auth/r/orders":1,"auth/r/orders/market":1,"auth/r/orders/markets":1,"auth/api_tokens/delete":1,"auth/api_tokens/create":1,"auth/api_tokens":1,"auth/signin_history/uniq":1,"auth/signin_history":1,"auth/disable_withdraw_confirmation":1,"auth/change_password":1,"auth/deposit_address":1,"auth/announcements/accept":1,"auth/announcements/unaccepted":1,"auth/otp/deactivate":1,"auth/otp/activate":1,"auth/otp/secret":1,"auth/r/order/market/:order_id/trades":1,"auth/r/orders/market/hist":1,"auth/r/orders/hist":1,"auth/r/orders/hist/markets":1,"auth/r/orders/details":1,"auth/assets-history":1,"auth/assets-history/withdraws":1,"auth/assets-history/deposits":1,"auth/r/wallets":1,"auth/markets/favorites":1,"auth/markets/favorites/list":1,"auth/me/update":1,"auth/me":1,"auth/fund_sources":1,"auth/fund_sources/list":1,"auth/withdraw/resend_confirmation":1,"auth/withdraw":1,"auth/withdraw/details":1,"auth/withdraw/info":1,"auth/payment_addresses":1,"auth/deposit/prerequest":1,"auth/deposit/exchange-rates":1,"auth/deposit":1,"auth/deposit/details":1,"auth/deposit/info":1,"auth/kuna_codes/count":1,"auth/kuna_codes/details":1,"auth/kuna_codes/edit":1,"auth/kuna_codes/send-pdf":1,"auth/kuna_codes":1,"auth/kuna_codes/redeemed-by-me":1,"auth/kuna_codes/issued-by-me":1,"auth/payment_requests/invoice":1,"auth/payment_requests/type":1,"auth/referral_program/weekly_earnings":1,"auth/referral_program/stats":1,"auth/merchant/payout_services":1,"auth/merchant/withdraw":1,"auth/merchant/payment_services":1,"auth/merchant/deposit":1,"auth/verification/auth_token":1,"auth/kunaid_purchase/create":1,"auth/devices/list":1,"auth/sessions/list":1,"auth/subscriptions/reactivate":1,"auth/subscriptions/cancel":1,"auth/subscriptions/prolong":1,"auth/subscriptions/create":1,"auth/subscriptions/list":1,"auth/kuna_ids/list":1,"order/cancel/multi":1,"order/cancel":1},put:{"auth/fund_sources/id":1,"auth/kuna_codes/redeem":1},delete:{"auth/markets/favorites":1,"auth/fund_sources":1,"auth/devices":1,"auth/devices/list":1,"auth/sessions/list":1,"auth/sessions":1}}},public:{get:["depth","k_with_pending_trades","k","markets","order_book","order_book/{market}","tickers","tickers/{market}","timestamp","trades","trades/{market}"]},private:{get:["members/me","deposits","deposit","deposit_address","orders","order","trades/my","withdraws","withdraw"],post:["orders","orders/multi","orders/clear","order/delete","withdraw"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025")},funding:{withdraw:{UAH:"1%",BTC:.001,BCH:.001,ETH:.01,WAVES:.01,GOL:0,GBG:0},deposit:{}}},commonCurrencies:{PLA:"Plair"},precisionMode:d.kb,exceptions:{ARGUMENT_VALIDATION_ERROR:n.BadRequest,PAYMENT_METHOD_NOT_SUPPORTED:n.BadRequest,NOT_FOUND:n.OrderNotFound,"INVALID:ORDER_SIZE":n.InvalidOrder,WrongRequestException:n.BadRequest,INSUFFICIENT_FUNDS:n.InsufficientFunds,2002:n.InsufficientFunds,2003:n.OrderNotFound},options:{}})}async fetchTime(e={}){let t=await this.v4PublicGetPublicTimestamp(e),i=this.safeValue(t,"data",{});return this.safeInteger(i,"timestamp_miliseconds")}async fetchCurrencies(e={}){let t=await this.v4PublicGetPublicCurrencies(e),i=this.safeValue(t,"data",[]);return this.parseCurrencies(i)}parseCurrency(e){let t=this.safeString(e,"code"),i=this.safeString(e,"precision"),s=this.safeString(e,"tradePrecision");return this.safeCurrencyStructure({info:e,id:t,code:this.safeCurrencyCode(t),type:void 0,margin:void 0,name:this.safeString(e,"name"),active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.parseNumber(r.Y.stringMin(i,s)),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},networks:{}})}async fetchMarkets(e={}){let t=await this.v4PublicGetMarketsPublicGetAll(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"pair"),a=this.safeValue(t,"baseAsset"),n=this.safeValue(t,"quoteAsset"),o=this.safeString(a,"code"),h=this.safeString(n,"code"),d=this.safeCurrencyCode(o),l=this.safeCurrencyCode(h),c=this.safeString(a,"precision"),u=this.safeString(n,"precision");s.push({id:r,symbol:d+"/"+l,base:d,quote:l,settle:void 0,baseId:o,quoteId:h,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(c)),price:this.parseNumber(this.parsePrecision(u))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:t})}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pairs:s.id};void 0!==t&&(r.level=t);let a=await this.v4PublicGetOrderPublicBookPairs(this.extend(r,i)),n=this.safeDict(a,"data",{});return this.parseOrderBook(n,s.symbol,void 0,"bids","asks",0,1)}parseTicker(e,t){let i=this.safeString(e,"pair");return this.safeTicker({info:e,symbol:this.safeSymbol(i,t),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bestBidPrice"),ask:this.safeString(e,"bestAskPrice"),vwap:void 0,open:this.safeString(e,"open"),close:void 0,last:void 0,previousClose:void 0,change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"percentagePriceChange"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume")},t)}async fetchTickers(e,t={}){if(await this.loadMarkets(),void 0===e)throw new n.ArgumentsRequired(this.id+" fetchTickers () requires a symbols argument");e=this.marketSymbols(e);let i={pairs:this.marketIds(e).join(",")},s=await this.v4PublicGetMarketsPublicTickersPairsPairs(this.extend(i,t)),r=this.safeList(s,"data",[]);return this.parseTickers(r,e,t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pairs:i.id},r=await this.v4PublicGetMarketsPublicTickersPairsPairs(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeDict(a,0);return this.parseTicker(n,i)}async fetchL3OrderBook(e,t,i={}){return await this.fetchOrderBook(e,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pairs:r.id};void 0!==i&&(a.limit=i);let n=await this.v4PublicGetTradePublicBookPairs(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i=this.safeString(e,"createdAt"),s=this.safeString(e,"pair"),r=this.safeValue(e,"isMaker"),a=this.safeStringLower(e,"side");return void 0===a&&(a=this.safeValue(e,"isBuyer")?"buy":"sell"),this.safeTrade({info:e,id:this.safeString(e,"id"),symbol:this.safeSymbol(s,t),timestamp:this.parse8601(i),datetime:i,type:void 0,side:a,order:this.safeString(e,"orderId"),takerOrMaker:r?"taker":"maker",price:this.safeString2(e,"matchPrice","price"),amount:this.safeString2(e,"matchQuantity","quantity"),cost:this.safeString(e,"quoteQuantity"),fee:{cost:this.safeString(e,"fee"),currency:this.safeCurrencyCode(this.safeString(e,"feeCurrency"))}},t)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"balance"),n.used=this.safeString(s,"lockBalance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.v4PrivateGetPrivateGetBalance(e),i=this.safeValue(t,"data",[]);return this.parseBalance(i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h=this.safeString2(a,"triggerPrice","stopPrice");a=this.omit(a,["triggerPrice","stopPrice"]);let d=this.capitalize(t),l={pair:o.id,orderSide:"buy"===i?"Bid":"Ask",quantity:this.numberToString(s),type:d};if("Limit"===d&&(l.price=this.priceToPrecision(o.symbol,r)),void 0!==h){if("Market"===d)throw new n.BadRequest(this.id+" createOrder () cannot place trigger market orders, or trigger limit");l.stopPrice=this.priceToPrecision(o.symbol,h),"TakeProfitLimit"!==d&&(l.type="StopLossLimit")}let c=await this.v4PrivatePostOrderPrivateCreate(this.extend(l,a)),u=this.safeDict(c,"data",{});return this.parseOrder(u,o)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets();let r=await this.v4PrivatePostOrderPrivateCancel(this.extend({orderId:e},i)),a=this.safeValue(r,"data",{});void 0!==t&&(s=this.market(t));let n=this.parseOrder(a,s);return n.id=e,n}async cancelOrders(e,t,i={}){await this.loadMarkets();let s=await this.v4PrivatePostOrderPrivateCancelMulti(this.extend({orderIds:e},i)),r=this.safeList(s,"data",[]);return this.parseOrders(r)}parseOrderStatus(e){return this.safeString({Canceled:"canceled",Closed:"filled",Pending:"open",Open:"open",done:"closed",wait:"open",cancel:"canceled"},e,e)}parseOrder(e,t){let i=this.safeString(e,"pair"),s=this.safeString(e,"createdAt"),r=this.safeString(e,"side");"Bid"===r?r="buy":"Ask"===r&&(r="sell");let a=this.safeValue(e,"trades",[]);return this.safeOrder({info:e,id:this.safeString2(e,"id","orderId"),clientOrderId:void 0,symbol:this.safeSymbol(i,t),timestamp:this.parse8601(s),datetime:s,lastTradeTimestamp:this.parse8601(this.safeString(e,"updatedAt")),status:this.parseOrderStatus(this.safeString(e,"status")),type:this.safeStringLower(e,"type"),timeInForce:void 0,postOnly:void 0,side:r,price:this.safeString(e,"price"),triggerPrice:this.safeString(e,"stopPrice"),amount:this.safeString(e,"quantity"),filled:this.safeString(e,"executedQuantity"),remaining:void 0,trades:this.parseTrades(a),cost:this.safeString(e,"cost"),average:void 0,fee:void 0},t)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.v4PrivateGetOrderPrivateDetailsId(this.extend({id:e,withTrades:!0},i)),r=this.safeDict(s,"data",{});return this.parseOrder(r)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeInteger(s,"until");s=this.omit(s,["until"]);let n={};void 0!==e&&(r=this.market(e),n.pairs=r.id),void 0!==t&&(n.start=this.iso8601(t)),void 0!==i&&(n.limit=i),void 0!==a&&(n.end=this.iso8601(a));let o=await this.v4PrivateGetOrderPrivateActive(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseOrders(h,r,t,i)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersByStatus("closed",e,t,i,s)}async fetchOrdersByStatus(e,t,i,s,r={}){let a;if(await this.loadMarkets(),"open"===e)return this.fetchOpenOrders(t,i,s,r);let n=this.safeInteger(r,"until");r=this.omit(r,["until"]);let o={status:this.capitalize(e)};void 0!==t&&(a=this.market(t),o.pairs=a.id),void 0!==i&&(o.start=this.iso8601(i)),void 0!==s&&(o.limit=s),void 0!==n&&(o.end=this.iso8601(n));let h=await this.v4PrivateGetOrderPrivateHistory(o),d=this.safeList(h,"data",[]);return this.parseOrders(d,a,i,s)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.pair=r.id);let n=await this.v4PrivateGetTradePrivateHistory(this.extend(a,s)),o=this.safeList(n,"data");return this.parseTrades(o,r,t,i)}async withdraw(e,t,i,s,r={}){this.checkAddress(i);let a=this.safeString2(r,"chain","network");r=this.omit(r,["chain","network"]),await this.loadMarkets();let o=this.currency(e);if(void 0===a){if(o.code.indexOf("USD")>0)throw new n.ArgumentsRequired(this.id+' withdraw () requires an extra parameter params["network"] to withdraw '+o.code);a=o.id.toUpperCase()}let h={currency:this.networkCodeToId(a),amount:t,address:i,paymentMethod:a};void 0!==s&&(h.paymentId=s);let d=await this.v4PrivatePostWithdrawPrivateCreate(this.extend(h,r)),l=this.safeDict(d,"data",{});return this.parseTransaction(l,o)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeInteger(s,"until");s=this.omit(s,"until"),void 0!==e&&(r=this.currency(e));let n={};void 0!==e&&(n.currency=e),void 0!==t&&(n.dateFrom=this.iso8601(t)),void 0!==i&&(n.take=i),void 0!==a&&(n.dateTo=this.iso8601(a));let o=await this.v4PrivateGetWithdrawPrivateHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r)}async fetchWithdrawal(e,t,i={}){await this.loadMarkets();let s=await this.v4PrivateGetWithdrawPrivateDetailsWithdrawId(this.extend({withdrawId:e},i)),r=this.safeDict(s,"data",{});return this.parseTransaction(r)}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={source:i.id},r=await this.v4PrivatePostDepositPrivateCryptoGenerateAddress(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseDepositAddress(a,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={source:i.id.toUpperCase()},r=await this.v4PrivateGetDepositPrivateCryptoAddress(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseDepositAddress(a,i)}parseDepositAddress(e,t){let i=this.safeString(e,"source");return{info:this.safeString(e,""),currency:this.safeCurrencyCode(i,t),network:void 0,address:this.safeString(e,"address"),tag:void 0}}parseTransactionStatus(e){return this.safeString({Created:"pending",Canceled:"canceled",PartiallyProcessed:"pending",Processing:"pending",Processed:"ok",WaitForConfirmation:"pending",Pending:"pending",AmlChecking:"pending"},e,e)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeInteger(s,"until");s=this.omit(s,"until"),void 0!==e&&(r=this.currency(e));let n={};void 0!==e&&(n.currency=e),void 0!==t&&(n.dateFrom=this.iso8601(t)),void 0!==i&&(n.take=i),void 0!==a&&(n.dateTo=this.iso8601(a));let o=await this.v4PrivateGetDepositPrivateHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r)}async fetchDeposit(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.currency(t));let r=await this.v4PrivateGetDepositPrivateDetailsDepositId(this.extend({depositId:e},i)),a=this.safeDict(r,"data",{});return this.parseTransaction(a,s)}parseTransaction(e,t){let i=this.safeString(e,"createdAt"),s=this.safeString(e,"asset"),r=this.safeCurrencyCode(s,t),a=this.safeString(e,"paymentCode"),n=this.safeStringLower(e,"type"),o=this.safeString(e,"address");return{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"txId"),currency:r,timestamp:this.parse8601(i),datetime:i,network:this.networkIdToCode(a),addressFrom:void 0,address:o,addressTo:o,amount:this.safeNumber(e,"amount"),type:"deposit"===n?n:"withdrawal",status:this.parseTransactionStatus(this.safeString(e,"status")),updated:this.parse8601(this.safeString(e,"updatedAt")),tagFrom:void 0,tag:void 0,tagTo:void 0,comment:this.safeString(e,"memo"),internal:void 0,fee:{cost:this.safeNumber(e,"fee"),currency:r}}}nonce(){return this.milliseconds()}encodeParams(e){if("orders"in e){let t=e.orders,i=this.urlencode(this.keysort(this.omit(e,"orders")));for(let e=0;e<t.length;e++){let s=t[e],r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e],a=s[t];i+="&orders%5B%5D%5B"+t+"%5D="+a.toString()}}return i}return this.urlencode(this.keysort(e))}sign(e,t="public",i="GET",s={},r,a){let o;if(Array.isArray(t)){let h="GET"===i,d=this.safeString(t,0),l=this.safeString(t,1);if("v3"===d){if(o=this.urls.api[d]+"/"+d+"/"+this.implodeParams(e,s),"public"===l)h?Object.keys(s).length&&(o+="?"+this.urlencode(s)):("POST"===i||"PUT"===i)&&(r={"Content-Type":"application/json"},a=this.json(s));else if("private"===l)throw new n.NotSupported(this.id+" private v3 API is not supported yet")}else if("v4"===d){let t=this.extractParams(e),i="/"+d+"/"+this.implodeParams(e,s);if(s=this.omit(s,t),h&&Object.keys(s).length>0&&(i+="?"+this.urlencode(s)),"private"===l){let e=this.nonce().toString(),t=i+e;h?t+=this.json({}):(t+=this.json(s),a=s),r={"Content-Type":"application/json",accept:"application/json",nonce:e,"public-key":this.apiKey,signature:this.hmac(this.encode(t),this.encode(this.secret),A.qt,"hex")},"pro"===this.safeString(this.options,"account")&&(r.account="pro")}o=this.urls.api[d]+i}}else{let n="/api/"+this.version+"/"+this.implodeParams(e,s);"extension"in this.urls&&(n+=this.urls.extension);let h=this.omit(s,this.extractParams(e));if(o=this.urls.api[t]+n,"public"===t)Object.keys(h).length&&(o+="?"+this.urlencode(h));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=i+"|"+n+"|"+this.encodeParams(this.extend({access_key:this.apiKey,tonce:e},s)),d=h+"&signature="+this.hmac(this.encode(t),this.encode(this.secret),l.s);"GET"===i?o+="?"+d:(a=d,r={"Content-Type":"application/x-www-form-urlencoded"})}}return void 0!==a&&(a=JSON.stringify(a)),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){let l=this.safeValue(o,"errors");if((void 0!==o||void 0!==l)&&(void 0!==l||400===e)){let e=this.safeValue(l,0);void 0===e&&(e=this.safeValue(o,"error"));let t=this.safeString(e,"code"),i=this.id+" "+this.json(o);throw this.throwExactlyMatchedException(this.exceptions,t,i),new n.ExchangeError(i)}}}class im extends s.k{}let ig=im;class iy extends ig{describe(){return this.deepExtend(super.describe(),{id:"latoken",name:"Latoken",countries:["KY"],version:"v2",rateLimit:1e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createPostOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingInterval:!1,fetchFundingIntervals:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!0,transfer:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg",api:{rest:"https://api.latoken.com"},www:"https://latoken.com",doc:["https://api.latoken.com"],fees:"https://latoken.com/fees",referral:"https://latoken.com/invite?r=mvgp2djk"},api:{public:{get:{"book/{currency}/{quote}":1,"chart/week":1,"chart/week/{currency}/{quote}":1,currency:1,"currency/available":1,"currency/quotes":1,"currency/{currency}":1,pair:1,"pair/available":1,ticker:1,"ticker/{base}/{quote}":1,time:1,"trade/history/{currency}/{quote}":1,"trade/fee/{currency}/{quote}":1,"trade/feeLevels":1,"transaction/bindings":1}},private:{get:{"auth/account":1,"auth/account/currency/{currency}/{type}":1,"auth/order":1,"auth/order/getOrder/{id}":1,"auth/order/pair/{currency}/{quote}":1,"auth/order/pair/{currency}/{quote}/active":1,"auth/stopOrder":1,"auth/stopOrder/getOrder/{id}":1,"auth/stopOrder/pair/{currency}/{quote}":1,"auth/stopOrder/pair/{currency}/{quote}/active":1,"auth/trade":1,"auth/trade/pair/{currency}/{quote}":1,"auth/trade/fee/{currency}/{quote}":1,"auth/transaction":1,"auth/transaction/bindings":1,"auth/transaction/bindings/{currency}":1,"auth/transaction/{id}":1,"auth/transfer":1},post:{"auth/order/cancel":1,"auth/order/cancelAll":1,"auth/order/cancelAll/{currency}/{quote}":1,"auth/order/place":1,"auth/spot/deposit":1,"auth/spot/withdraw":1,"auth/stopOrder/cancel":1,"auth/stopOrder/cancelAll":1,"auth/stopOrder/cancelAll/{currency}/{quote}":1,"auth/stopOrder/place":1,"auth/transaction/depositAddress":1,"auth/transaction/withdraw":1,"auth/transaction/withdraw/cancel":1,"auth/transaction/withdraw/confirm":1,"auth/transaction/withdraw/resendCode":1,"auth/transfer/email":1,"auth/transfer/id":1,"auth/transfer/phone":1}}},precisionMode:d.kb,fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.0049"),taker:this.parseNumber("0.0049")}},commonCurrencies:{BUX:"Buxcoin",CBT:"Community Business Token",CTC:"CyberTronchain",DMD:"Diamond Coin",FREN:"Frenchie",GDX:"GoldenX",GEC:"Geco One",GEM:"NFTmall",GMT:"GMT Token",IMC:"IMCoin",MT:"Monarch",TPAY:"Tetra Pay",TRADE:"Smart Trade Coin",TSL:"Treasure SL",UNO:"Unobtanium",WAR:"Warrior Token"},exceptions:{exact:{INTERNAL_ERROR:n.ExchangeError,SERVICE_UNAVAILABLE:n.ExchangeNotAvailable,NOT_AUTHORIZED:n.AuthenticationError,FORBIDDEN:n.PermissionDenied,BAD_REQUEST:n.BadRequest,NOT_FOUND:n.ExchangeError,ACCESS_DENIED:n.PermissionDenied,REQUEST_REJECTED:n.ExchangeError,HTTP_MEDIA_TYPE_NOT_SUPPORTED:n.BadRequest,MEDIA_TYPE_NOT_ACCEPTABLE:n.BadRequest,METHOD_ARGUMENT_NOT_VALID:n.BadRequest,VALIDATION_ERROR:n.BadRequest,ACCOUNT_EXPIRED:n.AccountSuspended,BAD_CREDENTIALS:n.AuthenticationError,COOKIE_THEFT:n.AuthenticationError,CREDENTIALS_EXPIRED:n.AccountSuspended,INSUFFICIENT_AUTHENTICATION:n.AuthenticationError,UNKNOWN_LOCATION:n.AuthenticationError,TOO_MANY_REQUESTS:n.RateLimitExceeded,INSUFFICIENT_FUNDS:n.InsufficientFunds,ORDER_VALIDATION:n.InvalidOrder,BAD_TICKS:n.InvalidOrder},broad:{"invalid API key, signature or digest":n.AuthenticationError,"The API key was revoked":n.AuthenticationError,"request expired or bad":n.InvalidNonce,"For input string":n.BadRequest,"Unable to resolve currency by tag":n.BadSymbol,"Can't find currency with tag":n.BadSymbol,"Unable to place order because pair is in inactive state":n.BadSymbol,"API keys are not available for":n.AccountSuspended}},options:{defaultType:"spot",types:{wallet:"ACCOUNT_TYPE_WALLET",funding:"ACCOUNT_TYPE_WALLET",spot:"ACCOUNT_TYPE_SPOT"},accounts:{ACCOUNT_TYPE_WALLET:"wallet",ACCOUNT_TYPE_SPOT:"spot"},fetchTradingFee:{method:"fetchPrivateTradingFee"}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.safeInteger(t,"serverTime")}async fetchMarkets(e={}){let t=await this.fetchCurrenciesFromCache(e),i=await this.publicGetPair(e);this.safeValue(this.options,"adjustForTimeDifference",!0)&&await this.loadTimeDifference();let s=this.indexBy(t,"id"),r=[];for(let e=0;e<i.length;e++){let t=i[e],a=this.safeString(t,"id"),n=this.safeString(t,"baseCurrency"),o=this.safeString(t,"quoteCurrency"),h=this.safeValue(s,n),d=this.safeValue(s,o);if(void 0!==h&&void 0!==d){let e=this.safeCurrencyCode(this.safeString(h,"tag")),i=this.safeCurrencyCode(this.safeString(d,"tag")),s=i.toLowerCase(),l=this.capitalize(s),c=this.safeString(t,"status");r.push({id:a,symbol:e+"/"+i,base:e,quote:i,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"PAIR_STATUS_ACTIVE"===c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"quantityTick"),price:this.safeNumber(t,"priceTick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minOrderQuantity"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOrderCost"+l),max:this.safeNumber(t,"maxOrderCost"+l)}},created:this.safeInteger(t,"created"),info:t})}}return r}async fetchCurrenciesFromCache(e={}){let t=this.safeValue(this.options,"fetchCurrencies",{}),i=this.safeInteger(t,"timestamp"),s=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){let i=await this.publicGetCurrency(e);this.options.fetchCurrencies=this.extend(t,{response:i,timestamp:r})}return this.safeValue(this.options.fetchCurrencies,"response")}async fetchCurrencies(e={}){let t=await this.fetchCurrenciesFromCache(e),i={};for(let e=0;e<t.length;e++){let s;let r=t[e],a=this.safeString(r,"id"),n=this.safeString(r,"tag"),o=this.safeCurrencyCode(n),h=this.safeNumber(r,"fee");s="CURRENCY_TYPE_ALTERNATIVE"===this.safeString(r,"type")?"other":"crypto";let d="CURRENCY_STATUS_ACTIVE"===this.safeString(r,"status"),l=this.safeString(r,"name");i[o]={id:a,code:o,info:r,name:l,type:s,active:d,deposit:void 0,withdraw:void 0,fee:h,precision:this.parseNumber(this.parsePrecision(this.safeString(r,"decimals"))),limits:{amount:{min:this.safeNumber(r,"minTransferAmount"),max:void 0},withdraw:{min:void 0,max:void 0}},networks:{}}}return i}async fetchBalance(e={}){let t;await this.loadMarkets();let i=await this.privateGetAuthAccount(e),s={info:i,timestamp:void 0,datetime:void 0},r=this.safeString2(this.options,"fetchBalance","defaultType","spot"),a=this.safeString(e,"type",r),n=this.safeValue(this.options,"types",{}),o=this.safeString(n,a,a),h=this.groupBy(i,"type"),d=this.safeValue(h,o,[]);for(let e=0;e<d.length;e++){let i=d[e],r=this.safeString(i,"currency"),a=this.safeInteger(i,"timestamp");void 0!==a&&(t=void 0===t?a:Math.max(t,a));let n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(i,"available"),o.used=this.safeString(i,"blocked"),s[n]=o}return s.timestamp=t,s.datetime=this.iso8601(t),this.safeBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={currency:s.baseId,quote:s.quoteId};void 0!==t&&(r.limit=t);let a=await this.publicGetBookCurrencyQuote(this.extend(r,i));return this.parseOrderBook(a,e,void 0,"bid","ask","price","quantity")}parseTicker(e,t){let i=this.safeString(e,"symbol"),s=this.safeString(e,"lastPrice"),r=this.safeIntegerOmitZero(e,"updateTimestamp");return this.safeTicker({symbol:this.safeSymbol(i,t),timestamp:r,datetime:this.iso8601(r),low:void 0,high:void 0,bid:this.safeString(e,"bestBid"),bidVolume:this.safeString(e,"bestBidQuantity"),ask:this.safeString(e,"bestAsk"),askVolume:this.safeString(e,"bestAskQuantity"),vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:this.safeString(e,"change24h"),average:void 0,baseVolume:this.safeString(e,"amount24h"),quoteVolume:this.safeString(e,"volume24h"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={base:i.baseId,quote:i.quoteId},r=await this.publicGetTickerBaseQuote(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t);return this.parseTickers(i,e)}parseTrade(e,t){let i;let s=this.safeInteger(e,"timestamp"),r=this.safeString(e,"price"),a=this.safeString(e,"quantity"),n=this.safeString(e,"cost"),o=this.safeValue(e,"makerBuyer"),h=this.safeString(e,"direction");void 0===h?h=o?"sell":"buy":"TRADE_DIRECTION_BUY"===h?h="buy":"TRADE_DIRECTION_SELL"===h&&(h="sell");let d="buy"===h,l=this.safeString(e,"baseCurrency"),c=this.safeString(e,"quoteCurrency"),u=this.safeCurrencyCode(l),f=this.safeCurrencyCode(c),p=u+"/"+f;p in this.markets&&(t=this.market(p));let m=this.safeString(e,"id"),g=this.safeString(e,"order"),y=this.safeString(e,"fee");return void 0!==y&&(i={cost:y,currency:f}),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:p,id:m,order:g,type:void 0,takerOrMaker:o&&d?"maker":"taker",side:h,price:r,amount:a,cost:n,fee:i},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={currency:r.baseId,quote:r.quoteId};void 0!==i&&(a.limit=Math.min(i,100));let n=await this.publicGetTradeHistoryCurrencyQuote(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFee(e,t={}){let i=this.safeValue(this.options,"fetchTradingFee",{}),s=this.safeString(i,"method","fetchPrivateTradingFee"),r=this.safeString(t,"method",s);if(t=this.omit(t,"method"),"fetchPrivateTradingFee"===r)return await this.fetchPrivateTradingFee(e,t);if("fetchPublicTradingFee"===r)return await this.fetchPublicTradingFee(e,t);throw new n.NotSupported(this.id+" not support this method")}async fetchPublicTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={currency:i.baseId,quote:i.quoteId},r=await this.publicGetTradeFeeCurrencyQuote(this.extend(s,t));return{info:r,symbol:i.symbol,maker:this.safeNumber(r,"makerFee"),taker:this.safeNumber(r,"takerFee"),percentage:void 0,tierBased:void 0}}async fetchPrivateTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={currency:i.baseId,quote:i.quoteId},r=await this.privateGetAuthTradeFeeCurrencyQuote(this.extend(s,t));return{info:r,symbol:i.symbol,maker:this.safeNumber(r,"makerFee"),taker:this.safeNumber(r,"takerFee"),percentage:void 0,tierBased:void 0}}async fetchMyTrades(e,t,i,s={}){let r,a;await this.loadMarkets();let n={};return void 0!==i&&(n.limit=i),void 0!==e?(r=this.market(e),n.currency=r.baseId,n.quote=r.quoteId,a=await this.privateGetAuthTradePairCurrencyQuote(this.extend(n,s))):a=await this.privateGetAuthTrade(this.extend(n,s)),this.parseTrades(a,r,t,i)}parseOrderStatus(e){return this.safeString({ORDER_STATUS_PLACED:"open",ORDER_STATUS_CLOSED:"closed",ORDER_STATUS_CANCELLED:"canceled"},e,e)}parseOrderType(e){return this.safeString({ORDER_TYPE_MARKET:"market",ORDER_TYPE_LIMIT:"limit"},e,e)}parseTimeInForce(e){return this.safeString({ORDER_CONDITION_GOOD_TILL_CANCELLED:"GTC",ORDER_CONDITION_IMMEDIATE_OR_CANCEL:"IOC",ORDER_CONDITION_FILL_OR_KILL:"FOK"},e,e)}parseOrder(e,t){let i,s;let r=this.safeString(e,"id"),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"baseCurrency"),o=this.safeString(e,"quoteCurrency"),h=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o);void 0!==h&&void 0!==d&&(i=h+"/"+d)in this.markets&&(t=this.market(i));let l=this.safeString(e,"side");if(void 0!==l){let e=l.split("_"),t=e.length;s=this.safeStringLower(e,t-1)}let c=this.parseOrderType(this.safeString(e,"type")),u=this.safeString(e,"price"),f=this.safeString(e,"quantity"),p=this.safeString(e,"filled"),m=this.safeString(e,"cost"),g=this.parseOrderStatus(this.safeString(e,"status")),y=this.safeString(e,"message");void 0!==y&&(y.indexOf("cancel")>=0?g="canceled":y.indexOf("accept")>=0&&(g="open"));let v=this.safeString(e,"clientOrderId"),b=this.parseTimeInForce(this.safeString(e,"condition"));return this.safeOrder({id:r,clientOrderId:v,info:e,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,status:g,symbol:i,type:c,timeInForce:b,postOnly:void 0,side:s,price:u,triggerPrice:this.safeString(e,"stopPrice"),cost:m,amount:f,filled:p,average:void 0,remaining:void 0,fee:void 0,trades:void 0},t)}async fetchOpenOrders(e,t,i,s={}){let r;if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let a=this.safeValue2(s,"trigger","stop");s=this.omit(s,"stop");let o=this.market(e),h={currency:o.baseId,quote:o.quoteId};return r=a?await this.privateGetAuthStopOrderPairCurrencyQuoteActive(this.extend(h,s)):await this.privateGetAuthOrderPairCurrencyQuoteActive(this.extend(h,s)),this.parseOrders(r,o,t,i)}async fetchOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n={},o=this.safeValue2(s,"trigger","stop");return s=this.omit(s,["stop","trigger"]),void 0!==i&&(n.limit=i),void 0!==e?(r=this.market(e),n.currency=r.baseId,n.quote=r.quoteId,a=o?await this.privateGetAuthStopOrderPairCurrencyQuote(this.extend(n,s)):await this.privateGetAuthOrderPairCurrencyQuote(this.extend(n,s))):a=o?await this.privateGetAuthStopOrder(this.extend(n,s)):await this.privateGetAuthOrder(this.extend(n,s)),this.parseOrders(a,r,t,i)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets();let r={id:e},a=this.safeValue2(i,"trigger","stop");return i=this.omit(i,["stop","trigger"]),s=a?await this.privateGetAuthStopOrderGetOrderId(this.extend(r,i)):await this.privateGetAuthOrderGetOrderId(this.extend(r,i)),this.parseOrder(s)}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets();let o=this.market(e),h=t.toUpperCase(),d={baseCurrency:o.baseId,quoteCurrency:o.quoteId,side:i.toUpperCase(),condition:"GTC",type:h,clientOrderId:this.uuid(),quantity:this.amountToPrecision(e,s),timestamp:this.seconds()};"LIMIT"===h&&(d.price=this.priceToPrecision(e,r));let l=this.safeString2(a,"triggerPrice","stopPrice");return a=this.omit(a,["triggerPrice","stopPrice"]),void 0!==l?(d.stopPrice=this.priceToPrecision(e,l),n=await this.privatePostAuthStopOrderPlace(this.extend(d,a))):n=await this.privatePostAuthOrderPlace(this.extend(d,a)),this.parseOrder(n,o)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets();let r={id:e},a=this.safeValue2(i,"trigger","stop");return i=this.omit(i,["stop","trigger"]),s=a?await this.privatePostAuthStopOrderCancel(this.extend(r,i)):await this.privatePostAuthOrderCancel(this.extend(r,i)),this.parseOrder(s)}async cancelAllOrders(e,t={}){let i,s;await this.loadMarkets();let r={},a=this.safeValue2(t,"trigger","stop");return t=this.omit(t,["stop","trigger"]),void 0!==e?(i=this.market(e),r.currency=i.baseId,r.quote=i.quoteId,s=a?await this.privatePostAuthStopOrderCancelAllCurrencyQuote(this.extend(r,t)):await this.privatePostAuthOrderCancelAllCurrencyQuote(this.extend(r,t))):s=a?await this.privatePostAuthStopOrderCancelAll(this.extend(r,t)):await this.privatePostAuthOrderCancelAll(this.extend(r,t)),[this.safeOrder({info:s})]}async fetchTransactions(e,t,i,s={}){let r;await this.loadMarkets();let a=await this.privateGetAuthTransaction(this.extend({},s));void 0!==e&&(r=this.currency(e));let n=this.safeList(a,"content",[]);return this.parseTransactions(n,r,t,i)}parseTransaction(e,t){let i=this.safeString(e,"id"),s=this.safeInteger(e,"timestamp"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=this.parseTransactionStatus(this.safeString(e,"status")),o=this.safeNumber(e,"amount"),h=this.safeString(e,"senderAddress"),d=this.safeString(e,"recipientAddress"),l=this.safeString(e,"transactionHash"),c=this.safeString(e,"memo"),u={currency:void 0,cost:void 0,rate:void 0},f=this.safeNumber(e,"transactionFee");void 0!==f&&(u.cost=f,u.currency=a);let p=this.parseTransactionType(this.safeString(e,"type"));return{info:e,id:i,txid:l,timestamp:s,datetime:this.iso8601(s),network:void 0,addressFrom:h,addressTo:d,address:d,tagFrom:void 0,tagTo:c,tag:c,type:p,amount:o,currency:a,status:n,updated:void 0,comment:void 0,internal:void 0,fee:u}}parseTransactionStatus(e){return this.safeString({TRANSACTION_STATUS_CONFIRMED:"ok",TRANSACTION_STATUS_EXECUTED:"ok",TRANSACTION_STATUS_CHECKING:"pending",TRANSACTION_STATUS_CANCELLED:"canceled"},e,e)}parseTransactionType(e){return this.safeString({TRANSACTION_TYPE_DEPOSIT:"deposit",TRANSACTION_TYPE_WITHDRAWAL:"withdrawal"},e,e)}async fetchTransfers(e,t,i,s={}){await this.loadMarkets();let r=this.currency(e),a=await this.privateGetAuthTransfer(s),n=this.safeList(a,"content",[]);return this.parseTransfers(n,r,t,i)}async transfer(e,t,i,s,r={}){let a;await this.loadMarkets();let n={currency:this.currency(e).id,recipient:s,value:this.currencyToPrecision(e,t)};return a=s.indexOf("@")>=0?await this.privatePostAuthTransferEmail(this.extend(n,r)):36===s.length?await this.privatePostAuthTransferId(this.extend(n,r)):await this.privatePostAuthTransferPhone(this.extend(n,r)),this.parseTransfer(a)}parseTransfer(e,t){let i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"currency"),r=this.safeString(e,"status");return{info:e,id:this.safeString(e,"id"),timestamp:this.safeInteger(e,"timestamp"),datetime:this.iso8601(i),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"transferringFunds"),fromAccount:this.safeString(e,"fromAccount"),toAccount:this.safeString(e,"toAccount"),status:this.parseTransferStatus(r)}}parseTransferStatus(e){return this.safeString({TRANSFER_STATUS_COMPLETED:"ok",TRANSFER_STATUS_PENDING:"pending",TRANSFER_STATUS_REJECTED:"failed",TRANSFER_STATUS_UNVERIFIED:"pending",TRANSFER_STATUS_CANCELLED:"canceled"},e,e)}sign(e,t="public",i="GET",s,r,a){let n="/"+this.version+"/"+this.implodeParams(e,s),o=n,h=this.omit(s,this.extractParams(e)),d=this.urlencode(h);if("GET"===i&&Object.keys(h).length&&(o+="?"+d),"private"===t){this.checkRequiredCredentials();let e=this.hmac(this.encode(i+n+d),this.encode(this.secret),A.Zf);r={"X-LA-APIKEY":this.apiKey,"X-LA-SIGNATURE":e,"X-LA-DIGEST":"HMAC-SHA512"},"POST"===i&&(r["Content-Type"]="application/json",a=this.json(h))}return{url:this.urls.api.rest+o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(!o)return;let l=this.safeString(o,"message"),c=this.id+" "+a;void 0!==l&&(this.throwExactlyMatchedException(this.exceptions.exact,l,c),this.throwBroadlyMatchedException(this.exceptions.broad,l,c));let u=this.safeValue(o,"error"),f=this.safeString(u,"message");if(void 0!==u||void 0!==f)throw this.throwExactlyMatchedException(this.exceptions.exact,u,c),this.throwBroadlyMatchedException(this.exceptions.broad,a,c),new n.ExchangeError(c)}}class iv extends s.k{}let ib=iv;class iw extends ib{describe(){return this.deepExtend(super.describe(),{id:"lbank",name:"LBank",countries:["CN"],version:"v2",rateLimit:20,pro:!0,has:{CORS:!1,spot:!0,margin:!1,swap:void 0,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchIsolatedPositions:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFees:!0,fetchTransactionFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"minute1","5m":"minute5","15m":"minute15","30m":"minute30","1h":"hour1","2h":"hour2","4h":"hour4","6h":"hour6","8h":"hour8","12h":"hour12","1d":"day1","1w":"week1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg",api:{rest:"https://api.lbank.info",contract:"https://lbkperp.lbank.com"},api2:"https://api.lbkex.com",www:"https://www.lbank.com",doc:"https://www.lbank.com/en-US/docs/index.html",fees:"https://support.lbank.site/hc/en-gb/articles/900000535703-Trading-Fees-From-14-00-on-April-7-2020-UTC-8-",referral:"https://www.lbank.com/login/?icode=7QCY"},api:{spot:{public:{get:{currencyPairs:2.5,accuracy:2.5,usdToCny:2.5,withdrawConfigs:2.5,timestamp:2.5,"ticker/24hr":2.5,ticker:2.5,depth:2.5,incrDepth:2.5,trades:2.5,kline:2.5,"supplement/system_ping":2.5,"supplement/incrDepth":2.5,"supplement/trades":2.5,"supplement/ticker/price":2.5,"supplement/ticker/bookTicker":2.5},post:{"supplement/system_status":2.5}},private:{post:{user_info:2.5,"subscribe/get_key":2.5,"subscribe/refresh_key":2.5,"subscribe/destroy_key":2.5,get_deposit_address:2.5,deposit_history:2.5,create_order:1,batch_create_order:1,cancel_order:1,cancel_clientOrders:1,orders_info:2.5,orders_info_history:2.5,order_transaction_detail:2.5,transaction_history:2.5,orders_info_no_deal:2.5,withdraw:2.5,withdrawCancel:2.5,withdraws:2.5,"supplement/user_info":2.5,"supplement/withdraw":2.5,"supplement/deposit_history":2.5,"supplement/withdraws":2.5,"supplement/get_deposit_address":2.5,"supplement/asset_detail":2.5,"supplement/customer_trade_fee":2.5,"supplement/api_Restrictions":2.5,"supplement/system_ping":2.5,"supplement/create_order_test":1,"supplement/create_order":1,"supplement/cancel_order":1,"supplement/cancel_order_by_symbol":1,"supplement/orders_info":2.5,"supplement/orders_info_no_deal":2.5,"supplement/orders_info_history":2.5,"supplement/user_info_account":2.5,"supplement/transaction_history":2.5}}},contract:{public:{get:{"cfd/openApi/v1/pub/getTime":2.5,"cfd/openApi/v1/pub/instrument":2.5,"cfd/openApi/v1/pub/marketData":2.5,"cfd/openApi/v1/pub/marketOrder":2.5}}}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},commonCurrencies:{HIT:"Hiver",VET_ERC20:"VEN",PNT:"Penta"},precisionMode:d.kb,options:{cacheSecretAsPem:!0,createMarketBuyOrderRequiresPrice:!0,fetchTrades:{method:"spotPublicGetTrades"},fetchTransactionFees:{method:"fetchPrivateTransactionFees"},fetchDepositWithdrawFees:{method:"fetchPrivateDepositWithdrawFees"},fetchDepositAddress:{method:"fetchDepositAddressDefault"},createOrder:{method:"spotPrivatePostSupplementCreateOrder"},fetchOrder:{method:"fetchOrderSupplement"},fetchBalance:{method:"spotPrivatePostSupplementUserInfo"},networks:{ERC20:"erc20",ETH:"erc20",TRC20:"trc20",TRX:"trc20",OMNI:"omni",ASA:"asa",BEP20:"bep20(bsc)",BSC:"bep20(bsc)",HT:"heco",BNB:"bep2",BTC:"btc",DOGE:"dogecoin",MATIC:"matic",POLYGON:"matic",OEC:"oec",BTCTRON:"btctron",XRP:"xrp"},"inverse-networks":{erc20:"ERC20",trc20:"TRC20",omni:"OMNI",asa:"ASA","bep20(bsc)":"BSC",bep20:"BSC",heco:"HT",bep2:"BNB",btc:"BTC",dogecoin:"DOGE",matic:"MATIC",oec:"OEC",btctron:"BTCTRON",xrp:"XRP"},defaultNetworks:{USDT:"TRC20"}}})}async fetchTime(e={}){let t,i;return[t,e]=this.handleMarketTypeAndParams("fetchTime",void 0,e),i="swap"===t?await this.contractPublicGetCfdOpenApiV1PubGetTime(e):await this.spotPublicGetTimestamp(e),this.safeInteger(i,"data")}async fetchMarkets(e={}){let t=[this.fetchSpotMarkets(e),this.fetchSwapMarkets(e)],i=await Promise.all(t);return this.arrayConcat(i[0],i[1])}async fetchSpotMarkets(e={}){let t=await this.spotPublicGetAccuracy(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"symbol"),a=r.split("_"),n=a[0],o=a[1],h=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),l=h+"/"+d;s.push({id:r,symbol:l,base:h,quote:d,baseId:n,quoteId:o,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantityAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceAccuracy")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minTranQua"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:t})}return s}async fetchSwapMarkets(e={}){let t=await this.contractPublicGetCfdOpenApiV1PubInstrument(this.extend({productGroup:"SwapU"},e)),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseCurrency"),n=this.safeString(t,"clearCurrency"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.safeCurrencyCode(n),l=o+"/"+h+":"+d;s.push({id:r,symbol:l,base:o,quote:h,settle:d,baseId:a,quoteId:n,settleId:n,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:!0,contract:!0,linear:!0,inverse:void 0,contractSize:this.safeNumber(t,"volumeMultiple"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"volumeTick"),price:this.safeNumber(t,"priceTick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minOrderVolume"),max:this.safeNumber(t,"maxOrderVolume")},price:{min:this.safeNumber(t,"priceLimitLowerValue"),max:this.safeNumber(t,"priceLimitUpperValue")},cost:{min:this.safeNumber(t,"minOrderCost"),max:void 0}},created:void 0,info:t})}return s}parseTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeValue(e,"ticker",{}),n=(t=this.safeMarket(s,t)).contract?e:a;return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString2(n,"high","highestPrice"),low:this.safeString2(n,"low","lowestPrice"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(n,"openPrice"),close:void 0,last:this.safeString2(n,"latest","lastPrice"),previousClose:void 0,change:void 0,percentage:this.safeString(n,"change"),average:void 0,baseVolume:this.safeString2(n,"vol","volume"),quoteVolume:this.safeString(n,"turnover"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);if(i.swap){let e=await this.fetchTickers([i.symbol],t);return this.safeValue(e,i.symbol)}let s={symbol:i.id},r=await this.spotPublicGetTicker24hr(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeDict(a,0,{});return this.parseTicker(n,i)}async fetchTickers(e,t={}){let i,s,r;await this.loadMarkets(),void 0!==e&&(e=this.marketSymbols(e)).length>0&&(i=this.market(e[0]));let a={};[s,t]=this.handleMarketTypeAndParams("fetchTickers",i,t),"swap"===s?(a.productGroup="SwapU",r=await this.contractPublicGetCfdOpenApiV1PubMarketData(this.extend(a,t))):(a.symbol="all",r=await this.spotPublicGetTicker24hr(this.extend(a,t)));let n=this.safeList(r,"data",[]);return this.parseTickers(n,e)}async fetchOrderBook(e,t,i={}){let s,r;await this.loadMarkets();let a=this.market(e);void 0===t&&(t=60);let n={symbol:a.id};[s,i]=this.handleMarketTypeAndParams("fetchOrderBook",a,i),"swap"===s?(n.depth=t,r=await this.contractPublicGetCfdOpenApiV1PubMarketOrder(this.extend(n,i))):(n.size=t,r=await this.spotPublicGetDepth(this.extend(n,i)));let o=this.safeValue(r,"data",{}),h=this.milliseconds();return a.swap?this.parseOrderBook(o,a.symbol,h,"bids","asks","price","volume"):this.parseOrderBook(o,a.symbol,h)}parseTrade(e,t){let i,s,r,a=this.safeInteger2(e,"date_ms","time");void 0===a&&(a=this.safeInteger(e,"dealTime"));let n=this.safeString2(e,"amount","qty");void 0===n&&(n=this.safeString(e,"dealQuantity"));let o=this.safeString(e,"price");void 0===o&&(o=this.safeString(e,"dealPrice"));let h=this.safeString(e,"quoteQty");void 0===h&&(h=this.safeString(e,"dealVolumePrice"));let d=this.safeString2(e,"tradeType","type");if(void 0!==d){let e=d.split("_");d=this.safeString(e,0);let t=this.safeString(e,1);i="limit",s="taker",void 0!==t&&("market"===t?i="market":"maker"===t&&(s="maker"))}let l=this.safeString2(e,"tid","id");void 0===l&&(l=this.safeString(e,"txUuid"));let c=this.safeString(e,"orderUuid"),u=this.safeSymbol(void 0,t),f=this.safeString(e,"tradeFee");return void 0!==f&&(r={cost:f,currency:"buy"===d?t.base:t.quote,rate:this.safeString(e,"tradeFeeRate")}),this.safeTrade({timestamp:a,datetime:this.iso8601(a),symbol:u,id:l,order:c,type:i,takerOrMaker:s,side:d,price:o,amount:n,cost:h,fee:r,info:e},t)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n={symbol:a.id};void 0!==t&&(n.time=t),void 0!==i?n.size=Math.min(i,600):n.size=600;let o=this.safeValue(this.options,"fetchTrades",{}),h=this.safeString(o,"method","spotPublicGetTrades"),d=this.safeString(s,"method",h);s=this.omit(s,"method"),r="spotPublicGetSupplementTrades"===d?await this.spotPublicGetSupplementTrades(this.extend(n,s)):await this.spotPublicGetTrades(this.extend(n,s));let l=this.safeList(r,"data",[]);return this.parseTrades(l,a,t,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);if(s=void 0===s?100:Math.min(s,2e3),void 0===i){let e=this.parseTimeframe(t);i=this.milliseconds()-1e3*e*s}let n={symbol:a.id,type:this.safeString(this.timeframes,t,t),time:this.parseToInt(i/1e3),size:Math.min(s+1,2e3)},o=await this.spotPublicGetKline(this.extend(n,r)),h=this.safeList(o,"data",[]);return this.parseOHLCVs(h,a,t,i,s)}parseBalance(e){let t=this.safeInteger(e,"ts"),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeValue(e,"data");if(void 0!==this.safeValue(s,"toBtc")){let e=this.safeValue(s,"freeze",{}),t=this.safeValue(s,"free",{}),r=Object.keys(t);for(let s=0;s<r.length;s++){let a=r[s],n=this.safeCurrencyCode(a),o=this.account();o.used=this.safeString(e,a),o.free=this.safeString(t,a),i[n]=o}return this.safeBalance(i)}let r=this.safeValue(s,"balances");if(void 0!==r){for(let e=0;e<r.length;e++){let t=r[e],s=this.safeString(t,"asset"),a=this.safeCurrencyCode(s),n=this.account();n.free=this.safeString(t,"free"),n.used=this.safeString(t,"locked"),i[a]=n}return this.safeBalance(i)}if(!0===Array.isArray(s)){for(let e=0;e<s.length;e++){let t=s[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"usableAmt"),n.used=this.safeString(t,"freezeAmt"),i[a]=n}return this.safeBalance(i)}}parseFundingRate(e,t){let i;let s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeNumber(e,"markedPrice"),n=this.safeNumber(e,"underlyingPrice"),o=this.safeNumber(e,"fundingRate"),h=this.safeInteger(e,"nextFeeTime"),d=this.safeInteger(e,"positionFeeTime");return void 0!==d&&(i=this.parseToInt(d/60/60).toString()+"h"),{info:e,symbol:r,markPrice:a,indexPrice:n,fundingRate:o,fundingTimestamp:h,fundingDatetime:this.iso8601(h),timestamp:void 0,datetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:i}}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.fetchFundingRates([i.symbol],t);return this.safeValue(s,i.symbol)}async fetchFundingRates(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.contractPublicGetCfdOpenApiV1PubMarketData(this.extend({productGroup:"SwapU"},t)),s=this.safeList(i,"data",[]);return this.parseFundingRates(s,e)}async fetchBalance(e={}){let t;await this.loadMarkets();let i=this.safeValue(this.options,"fetchBalance",{}),s=this.safeString(i,"method","spotPrivatePostSupplementUserInfo"),r=this.safeString(e,"method",s);return t="spotPrivatePostSupplementUserInfoAccount"===r?await this.spotPrivatePostSupplementUserInfoAccount():"spotPrivatePostUserInfo"===r?await this.spotPrivatePostUserInfo():await this.spotPrivatePostSupplementUserInfo(),this.parseBalance(t)}parseTradingFee(e,t){let i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i),maker:this.safeNumber(e,"makerCommission"),taker:this.safeNumber(e,"takerCommission"),percentage:void 0,tierBased:void 0}}async fetchTradingFee(e,t={}){let i=this.market(e),s=await this.fetchTradingFees(this.extend(t,{category:i.id}));return this.safeDict(s,e)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.spotPrivatePostSupplementCustomerTradeFee(this.extend({},e)),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t=this.parseTradingFee(i[e]);s[t.symbol]=t}return s}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new n.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return i.createMarketBuyOrderRequiresPrice=!1,await this.createOrder(e,"market","buy",t,void 0,i)}async createOrder(e,t,i,s,a,o={}){let h;await this.loadMarkets();let d=this.market(e),l=this.safeString2(o,"custom_id","clientOrderId"),c=this.safeBool(o,"postOnly",!1),u=this.safeStringUpper(o,"timeInForce");o=this.omit(o,["custom_id","clientOrderId","timeInForce","postOnly"]);let f={symbol:d.id},p="IOC"===u,m="FOK"===u,g=c||"PO"===u;if("market"===t&&(p||m||g))throw new n.InvalidOrder(this.id+" createOrder () does not allow market FOK, IOC, or postOnly orders. Only limit IOC, FOK, and postOnly orders are allowed");if("limit"===t)f.type=i,f.price=this.priceToPrecision(e,a),f.amount=this.amountToPrecision(e,s),p?f.type=i+"_ioc":m?f.type=i+"_fok":g&&(f.type=i+"_maker");else if("market"===t){if("sell"===i)f.type=i+"_market",f.amount=this.amountToPrecision(e,s);else if("buy"===i){let t;f.type=i+"_market";let h=!0;[h,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let d=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0!==d)t=this.costToPrecision(e,d);else if(h){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);f.price=t}}void 0!==l&&(f.custom_id=l);let y=this.safeValue(this.options,"createOrder",{}),v=this.safeString(y,"method","spotPrivatePostSupplementCreateOrder"),b=this.safeString(o,"method",v);o=this.omit(o,"method"),h="spotPrivatePostCreateOrder"===b?await this.spotPrivatePostCreateOrder(this.extend(f,o)):await this.spotPrivatePostSupplementCreateOrder(this.extend(f,o));let w=this.safeValue(h,"data",{});return this.safeOrder({id:this.safeString(w,"order_id"),info:w},d)}parseOrderStatus(e){return this.safeString({"-1":"canceled",0:"open",1:"open",2:"closed",3:"canceled",4:"closed"},e,e)}parseOrder(e,t){let i,s;let r=this.safeString2(e,"orderId","order_id"),a=this.safeString2(e,"clientOrderId","custom_id"),n=this.safeInteger2(e,"time","create_time"),o=this.safeString(e,"status"),h=this.safeString(e,"symbol");t=this.safeMarket(h,t);let d=!1,l="limit",c=this.safeString2(e,"type","tradeType"),u=c.split("_"),f=this.safeString(u,0),p=this.safeString(u,1);"market"===p&&(l="market"),"maker"===p&&(d=!0,i="PO"),"ioc"===p&&(i="IOC"),"fok"===p&&(i="FOK");let m=this.safeString(e,"price"),g=this.safeString(e,"cummulativeQuoteQty");"buy_market"!==c&&(s=this.safeString2(e,"origQty","amount"));let y=this.safeString2(e,"executedQty","deal_amount");return this.safeOrder({id:r,clientOrderId:a,datetime:this.iso8601(n),timestamp:n,lastTradeTimestamp:void 0,status:this.parseOrderStatus(o),symbol:t.symbol,type:l,timeInForce:i,postOnly:d,side:f,price:m,triggerPrice:void 0,cost:g,amount:s,filled:y,remaining:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.safeString(i,"method");if(void 0===s){let e=this.safeValue(this.options,"fetchOrder",{});s=this.safeString(e,"method","fetchOrderSupplement")}return"fetchOrderSupplement"===s?await this.fetchOrderSupplement(e,t,i):await this.fetchOrderDefault(e,t,i)}async fetchOrderSupplement(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s={symbol:this.market(t).id,orderId:e},r=await this.spotPrivatePostSupplementOrdersInfo(this.extend(s,i)),a=this.safeDict(r,"data",{});return this.parseOrder(a)}async fetchOrderDefault(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s={symbol:this.market(t).id,order_id:e},r=await this.spotPrivatePostOrdersInfo(this.extend(s,i)),a=this.safeValue(r,"data",[]);if(1===a.length)return this.parseOrder(a[0]);throw new n.BadRequest(this.id+" fetchOrder() can only fetch one order at a time")}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e);t=this.safeValue(s,"start_date",t),s=this.omit(s,"start_date");let a={symbol:r.id};void 0!==i&&(a.size=i),void 0!==t&&(a.start_date=this.ymd(t,"-"),a.end_date=this.ymd(t+864e5,"-"));let o=await this.spotPrivatePostTransactionHistory(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e);void 0===i&&(i=100);let a={symbol:r.id,current_page:1,page_length:i},o=await this.spotPrivatePostSupplementOrdersInfoHistory(this.extend(a,s)),h=this.safeValue(o,"data",{}),d=this.safeList(h,"orders",[]);return this.parseOrders(d,r,t,i)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e);void 0===i&&(i=100);let a={symbol:r.id,current_page:1,page_length:i},o=await this.spotPrivatePostSupplementOrdersInfoNoDeal(this.extend(a,s)),h=this.safeValue(o,"data",{}),d=this.safeList(h,"orders",[]);return this.parseOrders(d,r,t,i)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.safeString2(i,"origClientOrderId","clientOrderId");i=this.omit(i,["origClientOrderId","clientOrderId"]);let r={symbol:this.market(t).id,orderId:e};void 0!==s&&(r.origClientOrderId=s);let a=await this.spotPrivatePostSupplementCancelOrder(this.extend(r,i)),o=this.safeDict(a,"data",{});return this.parseOrder(o)}async cancelAllOrders(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();let i={symbol:this.market(e).id},s=await this.spotPrivatePostSupplementCancelOrderBySymbol(this.extend(i,t)),r=this.safeList(s,"data",[]);return this.parseOrders(r)}getNetworkCodeForCurrency(e,t){let i=this.safeValue(this.options,"defaultNetworks"),s=this.safeStringUpper(i,e),r=this.safeValue(this.options,"networks",{}),a=this.safeStringUpper(t,"network",s);return this.safeString(r,a,a)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.safeValue(this.options,"fetchDepositAddress",{}),s=this.safeString(i,"method","fetchDepositAddressDefault"),r=this.safeString(t,"method",s);return t=this.omit(t,"method"),"fetchDepositAddressSupplement"===r?await this.fetchDepositAddressSupplement(e,t):await this.fetchDepositAddressDefault(e,t)}async fetchDepositAddressDefault(e,t={}){await this.loadMarkets();let i={assetCode:this.currency(e).id},s=this.getNetworkCodeForCurrency(e,t);void 0!==s&&(i.netWork=s,t=this.omit(t,"network"));let r=await this.spotPrivatePostGetDepositAddress(this.extend(i,t)),a=this.safeValue(r,"data"),n=this.safeString(a,"address"),o=this.safeString(a,"memo"),h=this.safeString(a,"netWork"),d=this.safeValue(this.options,"inverse-networks",{});return{info:r,currency:e,network:this.safeStringUpper(d,h,h),address:n,tag:o}}async fetchDepositAddressSupplement(e,t={}){await this.loadMarkets();let i={coin:this.currency(e).id},s=this.safeValue(this.options,"networks"),r=this.safeStringUpper(t,"network");void 0!==(r=this.safeString(s,r,r))&&(i.networkName=r,t=this.omit(t,"network"));let a=await this.spotPrivatePostSupplementGetDepositAddress(this.extend(i,t)),n=this.safeValue(a,"data"),o=this.safeString(n,"address"),h=this.safeString(n,"memo"),d=this.safeValue(this.options,"inverse-networks",{});return{info:a,currency:e,network:this.safeStringUpper(d,r,r),address:o,tag:h}}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.safeString(r,"fee");r=this.omit(r,"fee"),this.checkRequiredArgument("withdraw",a,"fee");let n={address:i,coin:this.currency(e).id,amount:t,fee:a};void 0!==s&&(n.memo=s);let o=this.safeStringUpper2(r,"network","networkName");r=this.omit(r,["network","networkName"]);let h=this.safeValue(this.options,"networks"),d=this.safeString(h,o,o);void 0!==d&&(n.networkName=d);let l=await this.spotPrivatePostSupplementWithdraw(this.extend(n,r)),c=this.safeValue(l,"data",{});return{info:c,id:this.safeString(c,"withdrawId")}}parseTransactionStatus(e,t){return this.safeString(this.safeValue({deposit:{1:"pending",2:"ok",3:"failed",4:"canceled",5:"transfer"},withdrawal:{1:"pending",2:"canceled",3:"failed",4:"ok"}},t,{}),e,e)}parseTransaction(e,t){let i,s,r,a;let n=this.safeString(e,"id");i=void 0===n?"deposit":"withdrawal";let o=this.safeString(e,"txId"),h=this.safeInteger2(e,"insertTime","applyTime"),d=this.safeValue(this.options,"inverse-networks",{}),l=this.safeString(e,"networkName"),c=this.safeString(d,l,l),u=this.safeString(e,"address");"deposit"===i?s=u:r=u;let f=this.safeNumber(e,"amount"),p=this.safeString2(e,"coin","coid"),m=this.safeCurrencyCode(p,t),g=this.parseTransactionStatus(this.safeString(e,"status"),i),y=this.safeNumber(e,"fee");return void 0!==y&&(a={cost:y,currency:m}),{info:e,id:n,txid:o,timestamp:h,datetime:this.iso8601(h),network:c,address:u,addressTo:r,addressFrom:s,tag:void 0,tagTo:void 0,tagFrom:void 0,type:i,amount:f,currency:m,status:g,updated:void 0,comment:void 0,internal:"transfer"===g,fee:a}}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t&&(a.startTime=t);let n=await this.spotPrivatePostSupplementDepositHistory(this.extend(a,s)),o=this.safeValue(n,"data",{}),h=this.safeList(o,"depositOrders",[]);return this.parseTransactions(h,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t&&(a.startTime=t);let n=await this.spotPrivatePostSupplementWithdraws(this.extend(a,s)),o=this.safeValue(n,"data",{}),h=this.safeList(o,"withdraws",[]);return this.parseTransactions(h,r,t,i)}async fetchTransactionFees(e,t={}){let i;if(await this.loadMarkets(),!0===this.checkRequiredCredentials(!1)){let e=this.safeValue(this.options,"fetchTransactionFees",{}),s=this.safeString(e,"method","fetchPrivateTransactionFees"),r=this.safeString(t,"method",s);t=this.omit(t,"method"),i="fetchPublicTransactionFees"===r?await this.fetchPublicTransactionFees(t):await this.fetchPrivateTransactionFees(t)}else i=await this.fetchPublicTransactionFees(t);return i}async fetchPrivateTransactionFees(e={}){await this.loadMarkets();let t=await this.spotPrivatePostSupplementUserInfo(),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"networkList",[]);s[a]={};for(let e=0;e<n.length;e++){let t=n[e],i=this.safeString(t,"name"),r=this.safeString(this.options["inverse-networks"],i,i),o=this.safeNumber(t,"withdrawFee");void 0!==o&&(s[a][r]=o)}}return{withdraw:s,deposit:{},info:t}}async fetchPublicTransactionFees(e={}){await this.loadMarkets();let t=this.safeString2(e,"coin","assetCode");e=this.omit(e,["coin","assetCode"]);let i={};if(void 0!==t){let e=this.currency(t);i.assetCode=e.id}let s=await this.spotPublicGetWithdrawConfigs(this.extend(i,e)),r=this.safeValue(s,"data",[]),a={};for(let e=0;e<r.length;e++){let t=r[e];if("true"===this.safeValue(t,"canWithDraw")){let e=this.safeString(t,"assetCode"),i=this.safeCurrencyCode(e),s=this.safeString(t,"chain"),r=this.safeString(this.options["inverse-networks"],s,s);void 0===r&&(r=i);let n=this.safeString(t,"fee");void 0===a[i]&&(a[i]={}),a[i][r]=this.parseNumber(n)}}return{withdraw:a,deposit:{},info:s}}async fetchDepositWithdrawFees(e,t={}){let i;if(await this.loadMarkets(),!0===this.checkRequiredCredentials(!1)){let s=this.safeValue(this.options,"fetchDepositWithdrawFees",{}),r=this.safeString(s,"method","fetchPrivateDepositWithdrawFees"),a=this.safeString(t,"method",r);t=this.omit(t,"method"),i="fetchPublicDepositWithdrawFees"===a?await this.fetchPublicDepositWithdrawFees(e,t):await this.fetchPrivateDepositWithdrawFees(e,t)}else i=await this.fetchPublicDepositWithdrawFees(e,t);return i}async fetchPrivateDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.spotPrivatePostSupplementUserInfo(t),s=this.safeList(i,"data",[]);return this.parseDepositWithdrawFees(s,e,"coin")}async fetchPublicDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.spotPublicGetWithdrawConfigs(this.extend({},t)),s=this.safeValue(i,"data",[]);return this.parsePublicDepositWithdrawFees(s,e)}parsePublicDepositWithdrawFees(e,t){let i={};for(let s=0;s<e.length;s++){let r=e[s];if(!0===this.safeValue(r,"canWithDraw")){let e=this.safeString(r,"assetCode"),s=this.safeCurrencyCode(e);if(void 0===t||this.inArray(s,t)){let e=this.safeNumber(r,"fee");if(void 0!==e){void 0===this.safeValue(i,s)?i[s]=this.depositWithdrawFee([r]):i[s].info.push(r);let t=this.safeString(r,"chain"),a=this.safeString(this.options["inverse-networks"],t,t);void 0!==a?i[s].networks[a]={withdraw:{fee:e,percentage:void 0},deposit:{fee:void 0,percentage:void 0}}:i[s].withdraw={fee:e,percentage:void 0}}}}}return i}parseDepositWithdrawFee(e,t){let i=this.depositWithdrawFee(e),s=this.safeValue(e,"networkList",[]);for(let e=0;e<s.length;e++){let t=s[e],r=this.safeString(t,"name"),a=this.safeStringUpper(this.options["inverse-networks"],r,r),n=this.safeNumber(t,"withdrawFee"),o=this.safeValue(t,"isDefault");void 0!==n&&(o&&(i.withdraw={fee:n,percentage:void 0}),i.networks[a]={withdraw:{fee:n,percentage:void 0},deposit:{fee:void 0,percentage:void 0}})}return i}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s);if("spot"===t[0]?o+=".do":o=this.urls.api.contract+"/"+this.implodeParams(e,s),"public"===t[1])Object.keys(n).length&&(o+="?"+this.urlencode(this.keysort(n)));else{let e,t;this.checkRequiredCredentials();let i=this.milliseconds().toString(),s=this.uuid22()+this.uuid16();n=this.extend({api_key:this.apiKey},n),e=this.secret.length>32?"RSA":"HmacSHA256";let o=this.rawencode(this.keysort(this.extend({echostr:s,signature_method:e,timestamp:i},n))),h=this.encode(o),d=this.hash(h,eD.F).toUpperCase();if("RSA"===e){let e;this.safeBool(this.options,"cacheSecretAsPem",!0)?void 0===(e=this.safeValue(this.options,"pem"))&&(e=this.convertSecretToPem(this.encode(this.secret)),this.options.pem=e):e=this.convertSecretToPem(this.encode(this.secret)),t=(0,w.n)(d,e,l.s)}else"HmacSHA256"===e&&(t=this.hmac(this.encode(d),this.encode(this.secret),l.s));n.sign=t,a=this.urlencode(this.keysort(n)),r={"Content-Type":"application/x-www-form-urlencoded",timestamp:i,signature_method:e,echostr:s}}return{url:o,method:i,body:a,headers:r}}convertSecretToPem(e){let t=e.length-0,i=this.parseToInt(t/64);i=this.sum(i,1);let s="-----BEGIN PRIVATE KEY-----\n";for(let e=0;e<i;e++){let t=64*e,i=this.sum(t,64);s+=this.secret.slice(t,i)+"\n"}return s+"-----END PRIVATE KEY-----"}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeValue(o,"result");if("false"===l||!l){let e=this.safeString(o,"error_code"),t=this.safeString({1e4:"Internal error",10001:"The required parameters can not be empty",10002:"Validation failed",10003:"Invalid parameter",10004:"Request too frequent",10005:"Secret key does not exist",10006:"User does not exist",10007:"Invalid signature",10008:"Invalid Trading Pair",10009:"Price and/or Amount are required for limit order",10010:"Price and/or Amount must be less than minimum requirement",10013:"The amount is too small",10014:"Insufficient amount of money in the account",10015:"Invalid order type",10016:"Insufficient account balance",10017:"Server Error",10018:"Page size should be between 1 and 50",10019:"Cancel NO more than 3 orders in one request",10020:"Volume < 0.001",10021:"Price < 0.01",10022:"Invalid authorization",10023:"Market Order is not supported yet",10024:"User cannot trade on this pair",10025:"Order has been filled",10026:"Order has been cancelld",10027:"Order is cancelling",10028:"Wrong query time",10029:"from is not in the query time",10030:"from do not match the transaction type of inqury",10031:"echostr length must be valid and length must be from 30 to 40",10033:"Failed to create order",10036:"customID duplicated",10100:"Has no privilege to withdraw",10101:"Invalid fee rate to withdraw",10102:"Too little to withdraw",10103:"Exceed daily limitation of withdraw",10104:"Cancel was rejected",10105:"Request has been cancelled",10106:"None trade time",10107:"Start price exception",10108:"can not create order",10109:"wallet address is not mapping",10110:"transfer fee is not mapping",10111:"mount > 0",10112:"fee is too lower",10113:"transfer fee is 0",10600:"intercepted by replay attacks filter, check timestamp",10601:"Interface closed unavailable",10701:"invalid asset code",10702:"not allowed deposit"},e,this.json(o));throw new(this.safeValue({10001:n.BadRequest,10002:n.AuthenticationError,10003:n.BadRequest,10004:n.RateLimitExceeded,10005:n.AuthenticationError,10006:n.AuthenticationError,10007:n.AuthenticationError,10008:n.BadSymbol,10009:n.InvalidOrder,10010:n.InvalidOrder,10013:n.InvalidOrder,10014:n.InsufficientFunds,10015:n.InvalidOrder,10016:n.InsufficientFunds,10017:n.ExchangeError,10018:n.BadRequest,10019:n.BadRequest,10020:n.BadRequest,10021:n.InvalidOrder,10022:n.PermissionDenied,10023:n.InvalidOrder,10024:n.PermissionDenied,10025:n.InvalidOrder,10026:n.InvalidOrder,10027:n.InvalidOrder,10028:n.BadRequest,10029:n.BadRequest,10030:n.BadRequest,10031:n.InvalidNonce,10033:n.ExchangeError,10036:n.DuplicateOrderId,10100:n.PermissionDenied,10101:n.BadRequest,10102:n.InsufficientFunds,10103:n.ExchangeError,10104:n.ExchangeError,10105:n.ExchangeError,10106:n.BadRequest,10107:n.BadRequest,10108:n.ExchangeError,10109:n.InvalidAddress,10110:n.ExchangeError,10111:n.BadRequest,10112:n.BadRequest,10113:n.BadRequest,10600:n.BadRequest,10601:n.ExchangeError,10701:n.BadSymbol,10702:n.PermissionDenied},e,n.ExchangeError))(t)}}}class ik extends s.k{}let iS=ik;class iO extends iS{describe(){return this.deepExtend(super.describe(),{id:"luno",name:"luno",countries:["GB","SG","ZA"],rateLimit:200,version:"1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{referral:"https://www.luno.com/invite/44893A",logo:"https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg",api:{public:"https://api.luno.com/api",private:"https://api.luno.com/api",exchange:"https://api.luno.com/api/exchange",exchangePrivate:"https://api.luno.com/api/exchange"},www:"https://www.luno.com",doc:["https://www.luno.com/en/api","https://npmjs.org/package/bitx","https://github.com/bausmeier/node-bitx"]},api:{exchange:{get:{markets:1}},exchangePrivate:{get:{candles:1}},public:{get:{orderbook:1,orderbook_top:1,ticker:1,tickers:1,trades:1}},private:{get:{"accounts/{id}/pending":1,"accounts/{id}/transactions":1,balance:1,beneficiaries:1,fee_info:1,funding_address:1,listorders:1,listtrades:1,send_fee:1,"orders/{id}":1,withdrawals:1,"withdrawals/{id}":1,transfers:1},post:{accounts:1,"address/validate":1,postorder:1,marketorder:1,stoporder:1,funding_address:1,withdrawals:1,send:1,"oauth2/grant":1,beneficiaries:1},put:{"accounts/{id}/name":1},delete:{"withdrawals/{id}":1,"beneficiaries/{id}":1}}},timeframes:{"1m":60,"5m":300,"15m":900,"30m":1800,"1h":3600,"3h":10800,"4h":14400,"1d":86400,"3d":259200,"1w":604800},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0")}},precisionMode:d.kb})}async fetchMarkets(e={}){let t=await this.exchangeGetMarkets(e),i=[],s=this.safeValue(t,"markets",[]);for(let e=0;e<s.length;e++){let t=s[e],r=this.safeString(t,"market_id"),a=this.safeString(t,"base_currency"),n=this.safeString(t,"counter_currency"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.safeString(t,"trading_status");i.push({id:r,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ACTIVE"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"volume_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_volume"),max:this.safeNumber(t,"max_volume")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:void 0,max:void 0}},created:void 0,info:t})}return i}async fetchAccounts(e={}){let t=await this.privateGetBalance(e),i=this.safeValue(t,"balance",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"account_id"),a=this.safeString(t,"asset"),n=this.safeCurrencyCode(a);s.push({id:r,type:void 0,currency:n,info:t})}return s}parseBalance(e){let t=this.safeValue(e,"balance",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){let s=t[e],a=this.safeString(s,"asset"),n=this.safeCurrencyCode(a),o=this.safeString(s,"reserved"),h=this.safeString(s,"unconfirmed"),d=this.safeString(s,"balance"),l=r.Y.stringAdd(o,h),c=r.Y.stringAdd(d,h);if(n in i)i[n].used=r.Y.stringAdd(i[n].used,l),i[n].total=r.Y.stringAdd(i[n].total,c);else{let e=this.account();e.used=l,e.total=c,i[n]=e}}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),a={pair:r.id};s=void 0!==t&&t<=100?await this.publicGetOrderbookTop(this.extend(a,i)):await this.publicGetOrderbook(this.extend(a,i));let n=this.safeInteger(s,"timestamp");return this.parseOrderBook(s,r.symbol,n,"bids","asks","price","volume")}parseOrderStatus(e){return this.safeString({PENDING:"open"},e,e)}parseOrder(e,t){let i,s;let r=this.safeInteger(e,"creation_timestamp"),a=this.parseOrderStatus(this.safeString(e,"state")),n=this.safeString(e,"type");"ASK"===n||"SELL"===n?i="sell":("BID"===n||"BUY"===n)&&(i="buy");let o=this.safeString(e,"pair");t=this.safeMarket(o,t);let h=this.safeString(e,"limit_price"),d=this.safeString(e,"limit_volume"),l=this.safeNumber(e,"fee_counter"),c=this.safeNumber(e,"fee_base"),u=this.safeString(e,"base"),f=this.safeString(e,"counter");void 0!==l?s={cost:l,currency:t.quote}:void 0!==c&&(s={cost:c,currency:t.base});let p=this.safeString(e,"order_id");return this.safeOrder({id:p,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:a,symbol:t.symbol,type:void 0,timeInForce:void 0,postOnly:void 0,side:i,price:h,triggerPrice:void 0,amount:d,filled:u,cost:f,remaining:void 0,trades:void 0,fee:s,info:e,average:void 0},t)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrdersByState(e,t,i,s,r={}){let a;await this.loadMarkets();let n={};void 0!==e&&(n.state=e),void 0!==t&&(a=this.market(t),n.pair=a.id);let o=await this.privateGetListorders(this.extend(n,r)),h=this.safeList(o,"orders",[]);return this.parseOrders(h,a,i,s)}async fetchOrders(e,t,i,s={}){return await this.fetchOrdersByState(void 0,e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersByState("PENDING",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersByState("COMPLETE",e,t,i,s)}parseTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"pair"),r=this.safeSymbol(s,t),a=this.safeString(e,"last_trade");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"rolling_24_hour_volume"),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetTickers(t),s=this.indexBy(i.tickers,"pair"),r=Object.keys(s),a={};for(let e=0;e<r.length;e++){let t=r[e],i=this.safeMarket(t),n=i.symbol,o=s[t];a[n]=this.parseTicker(o,i)}return this.filterByArrayTickers(a,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i,s,a,n;let o=this.safeString(e,"order_id"),h=this.safeString(e,"sequence");if(void 0!==o){let t=this.safeString(e,"type");"ASK"===t||"SELL"===t?s="sell":("BID"===t||"BUY"===t)&&(s="buy"),i="sell"===s&&e.is_buy?"maker":"buy"!==s||e.is_buy?"taker":"maker"}else s=e.is_buy?"buy":"sell";let d=this.safeString(e,"fee_base"),l=this.safeString(e,"fee_counter");void 0!==d?r.Y.stringEquals(d,"0.0")||(a=t.base,n=d):void 0===l||r.Y.stringEquals(l,"0.0")||(a=t.quote,n=l);let c=this.safeInteger(e,"timestamp");return this.safeTrade({info:e,id:h,timestamp:c,datetime:this.iso8601(c),symbol:t.symbol,order:o,type:void 0,side:s,takerOrMaker:i,price:this.safeString(e,"price"),amount:this.safeString2(e,"volume","base"),cost:this.safeString(e,"counter"),fee:{cost:n,currency:a}},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==t&&(a.since=t);let n=await this.publicGetTrades(this.extend(a,s)),o=this.safeList(n,"trades",[]);return this.parseTrades(o,r,t,i)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={duration:this.safeValue(this.timeframes,t,t),pair:a.id};if(void 0!==i)n.since=this.parseToInt(i);else{let e=1e6*this.parseTimeframe(t);n.since=this.milliseconds()-e}let o=await this.exchangePrivateGetCandles(this.extend(n,r)),h=this.safeList(o,"candles",[]);return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==t&&(a.since=t),void 0!==i&&(a.limit=i);let o=await this.privateGetListtrades(this.extend(a,s)),h=this.safeList(o,"trades",[]);return this.parseTrades(h,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i={pair:this.market(e).id},s=await this.privateGetFeeInfo(this.extend(i,t));return{info:s,symbol:e,maker:this.safeNumber(s,"maker_fee"),taker:this.safeNumber(s,"taker_fee"),percentage:void 0,tierBased:void 0}}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets();let o=this.market(e),h={pair:o.id};return"market"===t?(h.type=i.toUpperCase(),"buy"===i?h.counter_volume=this.amountToPrecision(o.symbol,s):h.base_volume=this.amountToPrecision(o.symbol,s),n=await this.privatePostMarketorder(this.extend(h,a))):(h.volume=this.amountToPrecision(o.symbol,s),h.price=this.priceToPrecision(o.symbol,r),h.type="buy"===i?"BID":"ASK",n=await this.privatePostPostorder(this.extend(h,a))),this.safeOrder({info:n,id:n.order_id},o)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostStoporder(this.extend({order_id:e},i));return this.safeOrder({info:s})}async fetchLedgerByEntries(e,t,i,s={}){void 0===t&&(t=-1),void 0===i&&(i=1);let r={min_row:t,max_row:this.sum(t,i)};return await this.fetchLedger(e,void 0,i,this.extend(r,s))}async fetchLedger(e,t,i,s={}){let r;await this.loadMarkets(),await this.loadAccounts();let a=this.safeString(s,"id"),o=this.safeValue(s,"min_row"),h=this.safeValue(s,"max_row");if(void 0===a){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchLedger() requires a currency code argument if no account id specified in params");r=this.currency(e);let t=this.indexBy(this.accounts,"currency"),i=this.safeValue(t,e);if(void 0===i)throw new n.ExchangeError(this.id+" fetchLedger() could not find account id for "+e);a=i.id}if(void 0===o&&void 0===h)h=0,o=-1e3;else if(void 0===o||void 0===h)throw new n.ExchangeError(this.id+" fetchLedger() require both params 'max_row' and 'min_row' or neither to be defined");if(void 0!==i&&h-o>i&&(h<=0?o=h-i:o>0&&(h=o+i)),h-o>1e3)throw new n.ExchangeError(this.id+" fetchLedger() requires the params 'max_row' - 'min_row' <= 1000");let d={id:a,min_row:o,max_row:h},l=await this.privateGetAccountsIdTransactions(this.extend(s,d)),c=this.safeValue(l,"transactions",[]);return this.parseLedger(c,r,t,i)}parseLedgerComment(e){let t;let i=e.split(" "),s=this.safeString(i,0),r=this.safeString(i,2),a=this.safeString(i,3),n=this.safeString({Withdrawal:"fee",Trading:"fee",Payment:"transaction",Sent:"transaction",Deposit:"transaction",Received:"transaction",Released:"released",Reserved:"reserved",Sold:"trade",Bought:"trade",Failure:"failed"},s,void 0);return void 0===n&&"fee"===r&&(n="fee"),"reserved"===n&&"order"===a&&(t=this.safeString(i,4)),{type:n,referenceId:t}}parseLedgerEntry(e,t){let i,s;let a=this.safeString(e,"row_index"),n=this.safeString(e,"account_id"),o=this.safeInteger(e,"timestamp"),h=this.safeString(e,"currency"),d=this.safeCurrencyCode(h,t);t=this.safeCurrency(h,t);let l=this.safeString(e,"available_delta"),c=this.safeString(e,"balance_delta"),u=this.safeString(e,"balance"),f=this.safeString(e,"description"),p=u,m="0.0",g=this.parseLedgerComment(f),y=g.type,v=g.referenceId;return r.Y.stringEquals(c,"0.0")?r.Y.stringLt(l,"0.0")?(s="pending",m=r.Y.stringAbs(l)):r.Y.stringGt(l,"0.0")&&(s="canceled",m=r.Y.stringAbs(l)):(p=r.Y.stringSub(u,c),s="ok",m=r.Y.stringAbs(c)),r.Y.stringGt(c,"0")||r.Y.stringGt(l,"0")?i="in":(r.Y.stringLt(c,"0")||r.Y.stringLt(l,"0"))&&(i="out"),this.safeLedgerEntry({info:e,id:a,direction:i,account:n,referenceId:v,referenceAccount:void 0,type:y,currency:d,amount:this.parseToNumeric(m),timestamp:o,datetime:this.iso8601(o),before:this.parseToNumeric(p),after:this.parseToNumeric(u),status:s,fee:void 0},t)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));return Object.keys(o).length&&(n+="?"+this.urlencode(o)),("private"===t||"exchangePrivate"===t)&&(this.checkRequiredCredentials(),r={Authorization:"Basic "+this.stringToBase64(this.apiKey+":"+this.secret)}),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&void 0!==this.safeValue(o,"error"))throw new n.ExchangeError(this.id+" "+this.json(o))}}class iT extends s.k{}let iI=iT;class ix extends iI{describe(){return this.deepExtend(super.describe(),{id:"lykke",name:"Lykke",countries:["UK"],version:"2",rateLimit:200,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:void 0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!1,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:"emulated",fetchWithdrawals:!1,setLeverage:!1,setMarginMode:!1,withdraw:!0},requiredCredentials:{apiKey:!0,secret:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/155840500-1ea4fdf0-47c0-4daa-9597-c6c1cd51b9ec.jpg",api:{public:"https://hft-apiv2.lykke.com/api",private:"https://hft-apiv2.lykke.com/api"},www:"https://www.lykke.com",doc:["https://hft-apiv2.lykke.com/swagger/ui/index.html","https://lykkecity.github.io/Trading-API"],fees:"https://support.lykke.com/hc/en-us/articles/115002141125-What-are-the-fees-and-charges-"},api:{public:{get:{assetpairs:2.5,"assetpairs/{id}":2.5,assets:2.5,"assets/{id}":2.5,isalive:2.5,orderbooks:2.5,tickers:2.5,prices:2.5,"trades/public/{assetPairId}":2.5}},private:{get:{balance:2.5,trades:2.5,"trades/order/{orderId}":2.5,"orders/active":1,"orders/closed":1,"orders/{orderId}":1,operations:2.5,"operations/deposits/addresses":2.5,"operations/deposits/addresses/{assetId}":2.5},post:{"orders/limit":1,"orders/market":1,"orders/bulk":1,"operations/withdrawals":2.5,"operations/deposits/addresses":2.5},delete:{orders:1,"orders/{orderId}":1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:0}},precisionMode:d.kb,exceptions:{exact:{1001:n.ExchangeError,1100:n.ExchangeError,1101:n.ExchangeError,2e3:n.BadRequest,2001:n.InsufficientFunds,2202:n.DuplicateOrderId,2003:n.ExchangeError,2004:n.NotSupported,2005:n.ExchangeError,2006:n.InsufficientFunds,2007:n.InsufficientFunds,2008:n.InsufficientFunds,2009:n.ExchangeError,2010:n.InsufficientFunds,2011:n.InvalidOrder,2012:n.InvalidOrder,2013:n.InvalidOrder,2014:n.InvalidOrder,2015:n.InvalidOrder,2016:n.InvalidOrder,2017:n.InvalidOrder,2018:n.InvalidOrder,2019:n.InvalidOrder,2020:n.InvalidOrder,2021:n.InvalidOrder,2022:n.InvalidOrder,2023:n.ExchangeError},broad:{}},commonCurrencies:{}})}async fetchCurrencies(e={}){let t=await this.publicGetAssets(e),i=this.safeValue(t,"payload",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"assetId"),a=this.safeString(t,"symbol"),n=this.safeString(t,"name"),o="erc20Token"===this.safeString(t,"type")?"crypto":"other",h=this.safeValue(t,"blockchainDepositEnabled"),d=this.safeValue(t,"blockchainWithdrawal"),l=!this.safeValue(t,"isDisabled");s[a]={id:r,code:a,info:t,type:o,name:n,active:l,deposit:h,withdraw:d,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"accuracy"))),limits:{withdraw:{min:this.safeValue(t,"cashoutMinimalAmount"),max:void 0},amount:{min:this.safeValue(t,"lowVolumeAmount"),max:void 0}},networks:{}}}return s}async fetchMarkets(e={}){let t=await this.publicGetAssetpairs(e),i=this.safeValue(t,"payload",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"assetPairId"),a=this.safeString(t,"name"),n=this.safeString(t,"baseAssetId"),o=this.safeString(t,"quoteAssetId"),[h,d]=a.split("/"),l=this.safeCurrencyCode(h),c=this.safeCurrencyCode(d),u=l+"/"+c;s.push({id:r,symbol:u,base:l,quote:c,baseId:n,quoteId:o,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,contract:!1,active:!0,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceAccuracy")))},limits:{amount:{min:this.safeNumber(t,"minVolume"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOppositeVolume"),max:void 0},leverage:{min:void 0,max:void 0}},created:void 0,info:t})}return s}parseTicker(e,t){let i=void 0,s=this.safeString(e,"assetPairId");t=this.safeMarket(s,t);let r=this.safeString(e,"lastPrice");return this.safeTicker({symbol:this.safeString(t,"symbol"),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeString(e,"priceChange"),percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volumeBase"),quoteVolume:this.safeString(e,"volumeQuote"),info:e},t)}async fetchTicker(e,t={}){let i;await this.loadMarkets();let s=this.market(e),r={assetPairIds:s.id};i="publicGetPrices"===this.safeString(this.options,"fetchTickerMethod","publicGetTickers")?await this.publicGetPrices(this.extend(r,t)):await this.publicGetTickers(this.extend(r,t));let a=this.safeValue(i,"payload",[]);return this.parseTicker(this.safeValue(a,0,{}),s)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=this.safeValue(i,"payload",[]);return this.parseTickers(s,e)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={assetPairId:s.id};void 0!==t&&(r.depth=t);let a=await this.publicGetOrderbooks(this.extend(r,i)),n=this.safeValue(a,"payload",[]),o=this.safeValue(n,0,{}),h=this.safeInteger(o,"timestamp");return this.parseOrderBook(o,s.symbol,h,"bids","asks","p","v")}parseTrade(e,t){let i=this.safeString(e,"assetPairId"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString2(e,"id","id"),a=this.safeString(e,"orderId"),n=this.safeInteger(e,"timestamp"),o=this.safeString2(e,"price","price"),h=this.safeString2(e,"volume","amount");void 0===h&&(h=this.safeString2(e,"baseVolume","amount"));let d=this.safeStringLower(e,"side");return this.safeTrade({id:r,info:e,timestamp:n,datetime:this.iso8601(n),symbol:s,type:void 0,order:a,side:d,takerOrMaker:void 0,price:o,amount:h,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={assetPairId:r.id};void 0!==i&&(a.take=i);let n=await this.publicGetTradesPublicAssetPairId(this.extend(a,s)),o=this.safeValue(n,"payload",[]);return this.parseTrades(o,r,t,i)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"assetId"),a=this.safeCurrencyCode(r),n=this.account(),o=this.safeString(s,"available"),h=this.safeString(s,"reserved");n.total=o,n.used=h,t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(e),i=this.safeValue(t,"payload",[]);return this.parseBalance(i)}parseOrderStatus(e){return this.safeString({Open:"open",Pending:"open",InOrderBook:"open",Processing:"open",Matched:"closed",Cancelled:"canceled",Rejected:"rejected",Replaced:"canceled",Placed:"open"},e,e)}parseOrder(e,t){let i=this.safeString(e,"id"),s=this.parseOrderStatus(this.safeString(e,"status")),r=this.safeString(e,"assetPairId"),a=this.safeSymbol(r,t),n=this.safeStringLower(e,"type"),o=this.safeInteger(e,"lastTradeTimestamp"),h=this.safeInteger(e,"timestamp"),d=this.safeString(e,"price"),l=this.safeStringLower(e,"side"),c=this.safeString(e,"volume"),u=this.safeString(e,"remainingVolume"),f=this.safeString(e,"filledVolume"),p=this.safeString(e,"cost");return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:o,symbol:a,type:n,timeInForce:void 0,postOnly:void 0,side:l,price:d,triggerPrice:void 0,amount:c,cost:p,average:void 0,filled:f,remaining:u,status:s,fee:void 0,trades:void 0},t)}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets();let o=this.market(e),h={assetPairId:o.id,side:this.capitalize(i),volume:parseFloat(this.amountToPrecision(o.symbol,s))};"limit"===t&&(h.price=parseFloat(this.priceToPrecision(o.symbol,r))),n="Market"===this.capitalize(t)?await this.privatePostOrdersMarket(this.extend(h,a)):await this.privatePostOrdersLimit(this.extend(h,a));let d=this.safeValue(n,"payload"),l=this.safeString(d,"orderId");return"market"===t&&(r=this.safeNumber(d,"price")),this.safeOrder({id:l,info:n,clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:o.symbol,type:t,side:i,price:r,amount:s,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0},o)}async cancelOrder(e,t,i={}){let s=await this.privateDeleteOrdersOrderId(this.extend({orderId:e},i));return this.safeOrder({info:s})}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e&&(i=this.market(e),s.assetPairId=i.id);let r=await this.privateDeleteOrders(this.extend(s,t));return[this.safeOrder({info:r})]}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersOrderId(this.extend({orderId:e},i)),r=this.safeValue(s,"payload");return this.parseOrder(r)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={};void 0!==i&&(a.take=i);let n=await this.privateGetOrdersActive(this.extend(a,s)),o=this.safeValue(n,"payload");return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={};void 0!==i&&(a.take=i);let n=await this.privateGetOrdersClosed(this.extend(a,s)),o=this.safeValue(n,"payload");return this.parseOrders(o,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==i&&(a.take=i),void 0!==e&&(r=this.market(e),a.assetPairId=r.id),void 0!==t&&(a.from=t);let n=await this.privateGetTrades(this.extend(a,s)),o=this.safeValue(n,"payload");return this.parseTrades(o,r,t,i)}parseBidAsk(e,t=0,i=1,s=2){let a=this.safeString(e,t),n=r.Y.stringAbs(this.safeString(e,i));return[this.parseNumber(a),this.parseNumber(n)]}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={assetId:this.safeString(i,"id")},r=await this.privateGetOperationsDepositsAddressesAssetId(this.extend(s,t)),a=this.safeString(r,"baseAddress"),n=this.safeString(r,"addressExtension");return this.checkAddress(a),{info:r,currency:e,network:void 0,address:a,tag:n}}parseTransaction(e,t){let i,s,r,a,n,o,h;return"string"==typeof e?i=e:(i=this.safeString(e,"operationId"),s=this.safeString(e,"assetId"),r=this.safeCurrencyCode(s,t),a=this.safeNumber(e,"totalVolume"),o=this.safeString(e,"type"),h=this.safeInteger(e,"timestamp"),n={currency:r,cost:this.safeNumber(e,"fee")}),{info:e,id:i,txid:void 0,timestamp:h,datetime:this.iso8601(h),network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:o,amount:a,currency:r,status:void 0,updated:void 0,internal:void 0,comment:void 0,fee:n}}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==i&&(a.take=i);let n=await this.privateGetOperations(this.extend(a,s)),o=this.safeValue(n,"payload",[]);return void 0!==e&&(r=this.currency(e)),this.parseTransactions(o,r,t,i)}async withdraw(e,t,i,s,r={}){await this.loadMarkets(),this.checkAddress(i);let a=this.currency(e),n={assetId:a.id,volume:parseFloat(this.currencyToPrecision(e,t)),destinationAddress:i};void 0!==s&&(n.destinationAddressExtension=s);let o=await this.privatePostOperationsWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));return r={Accept:"application/json","Content-Type":"application/json"},"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):"private"===t&&(("GET"===i||"DELETE"===i)&&Object.keys(o).length&&(n+="?"+this.urlencode(o)),this.checkRequiredCredentials(),r.Authorization="Bearer "+this.apiKey,"POST"===i&&Object.keys(s).length&&(a=this.json(s)),"operations/withdrawals"===e&&(r["X-Request-ID"]=this.uuid())),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeValue(o,"error",{}),c=this.safeString(l,"code");if(void 0!==c&&"0"!==c){let e=this.id+" "+a,t=this.safeString(l,"message");throw this.throwExactlyMatchedException(this.exceptions.exact,c,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new n.ExchangeError(e)}}}class iP extends s.k{}let iM=iP;class iA extends iM{describe(){return this.deepExtend(super.describe(),{id:"mercado",name:"Mercado Bitcoin",countries:["BR"],rateLimit:1e3,version:"v3",has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:"emulated",fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"15m":"15m","1h":"1h","3h":"3h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg",api:{public:"https://www.mercadobitcoin.net/api",private:"https://www.mercadobitcoin.net/tapi",v4Public:"https://www.mercadobitcoin.com.br/v4",v4PublicNet:"https://api.mercadobitcoin.net/api/v4"},www:"https://www.mercadobitcoin.com.br",doc:["https://www.mercadobitcoin.com.br/api-doc","https://www.mercadobitcoin.com.br/trade-api"]},api:{public:{get:["coins","{coin}/orderbook/","{coin}/ticker/","{coin}/trades/","{coin}/trades/{from}/","{coin}/trades/{from}/{to}","{coin}/day-summary/{year}/{month}/{day}/"]},private:{post:["cancel_order","get_account_info","get_order","get_withdrawal","list_system_messages","list_orders","list_orderbook","place_buy_order","place_sell_order","place_market_buy_order","place_market_sell_order","withdraw_coin"]},v4Public:{get:["{coin}/candle/"]},v4PublicNet:{get:["candles"]}},fees:{trading:{maker:.003,taker:.007}},options:{limits:{BTC:.001,BCH:.001,ETH:.01,LTC:.01,XRP:.1}},precisionMode:d.kb})}async fetchMarkets(e={}){let t=await this.publicGetCoins(e),i=[],s=this.safeValue(this.options,"limits",{});for(let e=0;e<t.length;e++){let r=t[e],a=this.safeCurrencyCode(r),n=this.safeCurrencyCode("BRL"),o=n+a;i.push({id:o,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:r,quoteId:"BRL",settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber("1e-5")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,r),max:void 0},price:{min:this.parseNumber("1e-5"),max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:r})}return i}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={coin:s.base},a=await this.publicGetCoinOrderbook(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"date"),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={coin:i.base},r=await this.publicGetCoinTicker(this.extend(s,t)),a=this.safeValue(r,"ticker",{});return this.parseTicker(a,i)}parseTrade(e,t){let i;let s=this.safeTimestamp2(e,"date","executed_timestamp");t=this.safeMarket(void 0,t);let r=this.safeString2(e,"tid","operation_id"),a=this.safeString(e,"type"),n=this.safeString(e,"price"),o=this.safeString2(e,"amount","quantity"),h=this.safeString(e,"fee_rate");return void 0!==h&&(i={cost:h,currency:void 0}),this.safeTrade({id:r,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:void 0,type:void 0,side:a,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:i},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="publicGetCoinTrades",n={coin:r.base};void 0!==t&&(a+="From",n.from=this.parseToInt(t/1e3)),void 0!==this.safeInteger(s,"to")&&(a+="To");let o=await this[a](this.extend(n,s));return this.parseTrades(o,r,t,i)}parseBalance(e){let t=this.safeValue(e,"response_data",{}),i=this.safeValue(t,"balance",{}),s={info:e},r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],a=this.safeCurrencyCode(t);if(t in i){let e=this.safeValue(i,t,{}),r=this.account();r.free=this.safeString(e,"available"),r.total=this.safeString(e,"total"),s[a]=r}}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetAccountInfo(e);return this.parseBalance(t)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let h=this.market(e),d={coin_pair:h.id},l=this.capitalize(i)+"Order";if("limit"===t)l="privatePostPlace"+l,d.limit_price=this.priceToPrecision(h.symbol,a),d.quantity=this.amountToPrecision(h.symbol,s);else if(l="privatePostPlaceMarket"+l,"buy"===i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount");let e=this.numberToString(s),t=this.numberToString(a),i=this.parseToNumeric(r.Y.stringMul(e,t));d.cost=this.priceToPrecision(h.symbol,i)}else d.quantity=this.amountToPrecision(h.symbol,s);let c=await this[l](this.extend(d,o));return this.safeOrder({info:c,id:c.response_data.order.order_id.toString()},h)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={coin_pair:s.id,order_id:e},a=await this.privatePostCancelOrder(this.extend(r,i)),o=this.safeValue(a,"response_data",{}),h=this.safeDict(o,"order",{});return this.parseOrder(h,s)}parseOrderStatus(e){return this.safeString({2:"open",3:"canceled",4:"closed"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"order_id"),r=this.safeString(e,"order_type");"order_type"in e&&(i="1"===r?"buy":"sell");let a=this.parseOrderStatus(this.safeString(e,"status")),n=this.safeString(e,"coin_pair");t=this.safeMarket(n,t);let o=this.safeTimestamp(e,"created_timestamp"),h={cost:this.safeString(e,"fee"),currency:t.quote},d=this.safeString(e,"limit_price"),l=this.safeString(e,"executed_price_avg"),c=this.safeString(e,"quantity"),u=this.safeString(e,"executed_quantity"),f=this.safeTimestamp(e,"updated_timestamp"),p=this.safeValue(e,"operations",[]);return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:f,symbol:t.symbol,type:"limit",timeInForce:void 0,postOnly:void 0,side:i,price:d,triggerPrice:void 0,cost:void 0,average:l,amount:c,filled:u,remaining:void 0,status:a,fee:h,trades:p},t)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={coin_pair:s.id,order_id:parseInt(e)},a=await this.privatePostGetOrder(this.extend(r,i)),o=this.safeValue(a,"response_data",{}),h=this.safeDict(o,"order");return this.parseOrder(h,s)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o={coin:a.id,quantity:t.toFixed(10),address:i};if("BRL"===e){if(!("account_ref"in r))throw new n.ArgumentsRequired(this.id+" withdraw() requires account_ref parameter to withdraw "+e)}else if("LTC"!==e){if(!("tx_fee"in r))throw new n.ArgumentsRequired(this.id+" withdraw() requires tx_fee parameter to withdraw "+e);if("XRP"===e){if(void 0===s){if(!("destination_tag"in r))throw new n.ArgumentsRequired(this.id+" withdraw() requires a tag argument or destination_tag parameter to withdraw "+e)}else o.destination_tag=s}}let h=await this.privatePostWithdrawCoin(this.extend(o,r)),d=this.safeValue(h,"response_data",{}),l=this.safeDict(d,"withdrawal");return this.parseTransaction(l,a)}parseTransaction(e,t){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,internal:void 0,fee:void 0,info:e}}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="15m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={resolution:this.safeString(this.timeframes,t,t),symbol:a.base+"-"+a.quote};void 0===s&&(s=100),void 0!==i?(n.from=this.parseToInt(i/1e3),n.to=this.sum(n.from,s*this.parseTimeframe(t))):(n.to=this.seconds(),n.from=n.to-s*this.parseTimeframe(t));let o=await this.v4PublicNetGetCandles(this.extend(n,r)),h=this.convertTradingViewToOHLCV(o,"t","o","h","l","c","v");return this.parseOHLCVs(h,a,t,i,s)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={coin_pair:r.id},o=await this.privatePostListOrders(this.extend(a,s)),h=this.safeValue(o,"response_data",{}),d=this.safeList(h,"orders",[]);return this.parseOrders(d,r,t,i)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={coin_pair:r.id,status_list:"[2]"},o=await this.privatePostListOrders(this.extend(a,s)),h=this.safeValue(o,"response_data",{}),d=this.safeList(h,"orders",[]);return this.parseOrders(d,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={coin_pair:r.id,has_fills:!0},o=await this.privatePostListOrders(this.extend(a,s)),h=this.safeValue(o,"response_data",{}),d=this.safeValue(h,"orders",[]),l=this.parseOrders(d,r,t,i),c=this.ordersToTrades(l);return this.filterBySymbolSinceLimit(c,r.symbol,t,i)}ordersToTrades(e){let t=[];for(let i=0;i<e.length;i++){let s=this.safeValue(e[i],"trades",[]);for(let e=0;e<s.length;e++)t.push(s[e])}return t}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/",o=this.omit(s,this.extractParams(e));if("public"===t||"v4Public"===t||"v4PublicNet"===t)n+=this.implodeParams(e,s),Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),n+=this.version+"/";let t=this.nonce();a=this.urlencode(this.extend({tapi_method:e,tapi_nonce:t},s));let i="/tapi/"+this.version+"/?"+a;r={"Content-Type":"application/x-www-form-urlencoded","TAPI-ID":this.apiKey,"TAPI-MAC":this.hmac(this.encode(i),this.encode(this.secret),A.Zf)}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&void 0!==this.safeValue(o,"error_message"))throw new n.ExchangeError(this.id+" "+this.json(o))}}var iC=i(357),iB=i(2284);class iE extends iB.A{describe(){return this.deepExtend(super.describe(),{id:"myokx",name:"MyOKX (EEA)",certified:!1,pro:!0,hostname:"eea.okx.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg",api:{rest:"https://{hostname}"},www:"https://my.okx.com",doc:"https://my.okx.com/docs-v5/en/#overview",fees:"https://my.okx.com/pages/products/fees.html",referral:{url:"https://www.my.okx.com/join/CCXT2023",discount:.2},test:{rest:"https://{hostname}"}},has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1}})}}class i_ extends s.k{}let iN=i_;class iL extends iN{describe(){return this.deepExtend(super.describe(),{id:"ndax",name:"NDAX",countries:["CA"],rateLimit:1e3,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingInterval:!1,fetchFundingIntervals:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchGreeks:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchIsolatedPositions:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverages:!1,fetchLeverageTiers:!1,fetchLiquidations:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarginModes:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMarkPrices:!1,fetchMyLiquidations:!1,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOption:!1,fetchOptionChain:!1,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawals:!0,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,sandbox:!0,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2419200","4M":"9676800"},urls:{logo:"https://user-images.githubusercontent.com/1294454/108623144-67a3ef00-744e-11eb-8140-75c6b851e945.jpg",test:{public:"https://ndaxmarginstaging.cdnhop.net:8443/AP",private:"https://ndaxmarginstaging.cdnhop.net:8443/AP"},api:{public:"https://api.ndax.io:8443/AP",private:"https://api.ndax.io:8443/AP"},www:"https://ndax.io",doc:["https://apidoc.ndax.io/"],fees:"https://ndax.io/fees",referral:"https://one.ndax.io/bfQiSL"},api:{public:{get:{Activate2FA:1,Authenticate2FA:1,AuthenticateUser:1,GetL2Snapshot:1,GetLevel1:1,GetValidate2FARequiredEndpoints:1,LogOut:1,GetTickerHistory:1,GetProduct:1,GetProducts:1,GetInstrument:1,GetInstruments:1,Ping:1,trades:1,GetLastTrades:1,SubscribeLevel1:1,SubscribeLevel2:1,SubscribeTicker:1,SubscribeTrades:1,SubscribeBlockTrades:1,UnsubscribeBlockTrades:1,UnsubscribeLevel1:1,UnsubscribeLevel2:1,UnsubscribeTicker:1,UnsubscribeTrades:1,Authenticate:1}},private:{get:{GetUserAccountInfos:1,GetUserAccounts:1,GetUserAffiliateCount:1,GetUserAffiliateTag:1,GetUserConfig:1,GetAllUnredactedUserConfigsForUser:1,GetUnredactedUserConfigByKey:1,GetUserDevices:1,GetUserReportTickets:1,GetUserReportWriterResultRecords:1,GetAccountInfo:1,GetAccountPositions:1,GetAllAccountConfigs:1,GetTreasuryProductsForAccount:1,GetAccountTrades:1,GetAccountTransactions:1,GetOpenTradeReports:1,GetAllOpenTradeReports:1,GetTradesHistory:1,GetOpenOrders:1,GetOpenQuotes:1,GetOrderFee:1,GetOrderHistory:1,GetOrdersHistory:1,GetOrderStatus:1,GetOmsFeeTiers:1,GetAccountDepositTransactions:1,GetAccountWithdrawTransactions:1,GetAllDepositRequestInfoTemplates:1,GetDepositInfo:1,GetDepositRequestInfoTemplate:1,GetDeposits:1,GetDepositTicket:1,GetDepositTickets:1,GetOMSWithdrawFees:1,GetWithdrawFee:1,GetWithdraws:1,GetWithdrawTemplate:1,GetWithdrawTemplateTypes:1,GetWithdrawTicket:1,GetWithdrawTickets:1},post:{AddUserAffiliateTag:1,CancelUserReport:1,RegisterNewDevice:1,SubscribeAccountEvents:1,UpdateUserAffiliateTag:1,GenerateTradeActivityReport:1,GenerateTransactionActivityReport:1,GenerateTreasuryActivityReport:1,ScheduleTradeActivityReport:1,ScheduleTransactionActivityReport:1,ScheduleTreasuryActivityReport:1,CancelAllOrders:1,CancelOrder:1,CancelQuote:1,CancelReplaceOrder:1,CreateQuote:1,ModifyOrder:1,SendOrder:1,SubmitBlockTrade:1,UpdateQuote:1,CancelWithdraw:1,CreateDepositTicket:1,CreateWithdrawTicket:1,SubmitDepositTicketComment:1,SubmitWithdrawTicketComment:1,GetOrderHistoryByOrderId:1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.0025")}},requiredCredentials:{apiKey:!0,secret:!0,uid:!0,login:!0,password:!0},precisionMode:d.kb,exceptions:{exact:{Not_Enough_Funds:n.InsufficientFunds,"Server Error":n.ExchangeError,"Resource Not Found":n.OrderNotFound},broad:{"Invalid InstrumentId":n.BadSymbol,"This endpoint requires 2FACode along with the payload":n.AuthenticationError}},options:{omsId:1,orderTypes:{Market:1,Limit:2,StopMarket:3,StopLimit:4,TrailingStopMarket:5,TrailingStopLimit:6,BlockTrade:7,1:1,2:2,3:3,4:4,5:5,6:6,7:7}}})}async signIn(e={}){if(this.checkRequiredCredentials(),void 0===this.login||void 0===this.password)throw new n.AuthenticationError(this.id+" signIn() requires exchange.login, exchange.password");let t={grant_type:"client_credentials"},i=await this.publicGetAuthenticate(this.extend(t,e)),s=this.safeString(i,"SessionToken");if(void 0!==s)return this.options.sessionToken=s,i;let r=this.safeString(i,"Pending2FaToken");if(void 0!==r){if(void 0===this.twofa)throw new n.AuthenticationError(this.id+" signIn() requires exchange.twofa credentials");this.options.pending2faToken=r,t={Code:(0,J.O)(this.twofa)};let i=await this.publicGetAuthenticate2FA(this.extend(t,e));return s=this.safeString(i,"SessionToken"),this.options.sessionToken=s,i}return i}async fetchCurrencies(e={}){let t=this.safeInteger(this.options,"omsId",1),i=await this.publicGetGetProducts(this.extend({omsId:t},e)),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"ProductId"),a=this.safeString(t,"ProductFullName"),n=this.safeString(t,"ProductType"),o="NationalCurrency"===n?"fiat":"crypto";"Unknown"===n&&(o="other");let h=this.safeCurrencyCode(this.safeString(t,"Product")),d=!this.safeValue(t,"IsDisabled");s[h]={id:r,name:a,code:h,type:o,precision:this.safeNumber(t,"TickSize"),info:t,active:d,deposit:void 0,withdraw:void 0,fee:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},networks:{}}}return s}async fetchMarkets(e={}){let t=this.safeInteger(this.options,"omsId",1),i=await this.publicGetGetInstruments(this.extend({omsId:t},e));return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"InstrumentId"),i=this.safeString(e,"Product1"),s=this.safeString(e,"Product2"),r=this.safeCurrencyCode(this.safeString(e,"Product1Symbol")),a=this.safeCurrencyCode(this.safeString(e,"Product2Symbol")),n=this.safeString(e,"SessionStatus"),o=this.safeValue(e,"IsDisable");return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"Running"===n&&!o,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"QuantityIncrement"),price:this.safeNumber(e,"PriceIncrement")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"MinimumQuantity"),max:void 0},price:{min:this.safeNumber(e,"MinimumPrice"),max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}parseOrderBook(e,t,i,s="bids",r="asks",a=6,n=8,o=2){let h;let d={symbol:t,bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0};for(let t=0;t<e.length;t++){let o=e[t];if(void 0===i)i=this.safeInteger(o,2);else{let e=this.safeInteger(o,2);i=Math.max(i,e)}h=void 0===h?this.safeInteger(o,0):Math.max(h,this.safeInteger(o,0));let l=this.parseBidAsk(o,a,n);d[this.safeInteger(o,9)?r:s].push(l)}return d.bids=this.sortBy(d.bids,0,!0),d.asks=this.sortBy(d.asks,0),d.timestamp=i,d.datetime=this.iso8601(i),d.nonce=h,d}async fetchOrderBook(e,t,i={}){let s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let r=this.market(e);t=void 0===t?100:t;let a={omsId:s,InstrumentId:r.id,Depth:t},n=await this.publicGetGetL2Snapshot(this.extend(a,i));return this.parseOrderBook(n,e)}parseTicker(e,t){let i=this.safeInteger(e,"TimeStamp"),s=this.safeString(e,"InstrumentId");t=this.safeMarket(s,t);let r=this.safeSymbol(s,t),a=this.safeString(e,"LastTradedPx"),n=this.safeString(e,"Rolling24HrPxChangePercent"),o=this.safeString(e,"Rolling24HrPxChange"),h=this.safeString(e,"SessionOpen"),d=this.safeString(e,"Rolling24HrVolume"),l=this.safeString(e,"Rolling24HrNotional");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"SessionHigh"),low:this.safeString(e,"SessionLow"),bid:this.safeString(e,"BestBid"),bidVolume:void 0,ask:this.safeString(e,"BestOffer"),askVolume:void 0,vwap:void 0,open:h,close:a,last:a,previousClose:void 0,change:o,percentage:n,average:void 0,baseVolume:d,quoteVolume:l,info:e},t)}async fetchTicker(e,t={}){let i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let s=this.market(e),r={omsId:i,InstrumentId:s.id},a=await this.publicGetGetLevel1(this.extend(r,t));return this.parseTicker(a,s)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,3),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let n=this.market(e),o={omsId:a,InstrumentId:n.id,Interval:this.safeString(this.timeframes,t,t)},h=this.parseTimeframe(t),d=this.milliseconds();void 0===i?void 0!==s&&(o.FromDate=this.ymdhms(d-h*s*1e3),o.ToDate=this.ymdhms(d)):(o.FromDate=this.ymdhms(i),void 0===s?o.ToDate=this.ymdhms(d):o.ToDate=this.ymdhms(this.sum(i,h*s*1e3)));let l=await this.publicGetGetTickerHistory(this.extend(o,r));return this.parseOHLCVs(l,n,t,i,s)}parseTrade(e,t){let i,s,r,a,n,o,h,d,l,c,u;if(Array.isArray(e))i=this.safeString(e,3),s=this.safeString(e,2),a=this.safeInteger(e,6),n=this.safeString(e,0),o=this.safeString(e,1),h=this.safeValue(e,8)?"sell":"buy",d=this.safeString(e,4);else{a=this.safeInteger2(e,"TradeTimeMS","ReceiveTime"),n=this.safeString(e,"TradeId"),d=this.safeString2(e,"OrderId","OrigOrderId"),o=this.safeString2(e,"InstrumentId","Instrument"),i=this.safeString(e,"Price"),s=this.safeString(e,"Quantity"),r=this.safeString2(e,"Value","GrossValueExecuted"),l=this.safeStringLower(e,"MakerTaker"),h=this.safeStringLower(e,"Side"),u=this.safeStringLower(e,"OrderType");let t=this.safeString(e,"Fee");if(void 0!==t){let i=this.safeString(e,"FeeProductId");c={cost:t,currency:this.safeCurrencyCode(i)}}}let f=this.safeSymbol(o,t);return this.safeTrade({info:e,id:n,symbol:f,timestamp:a,datetime:this.iso8601(a),order:d,type:u,side:h,takerOrMaker:l,price:i,amount:s,cost:r,fee:c},t)}async fetchTrades(e,t,i,s={}){let r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let a=this.market(e),n={omsId:r,InstrumentId:a.id};void 0!==i&&(n.Count=i);let o=await this.publicGetGetLastTrades(this.extend(n,s));return this.parseTrades(o,a,t,i)}async fetchAccounts(e={}){if(!this.login)throw new n.AuthenticationError(this.id+" fetchAccounts() requires exchange.login email credential");let t=this.safeInteger(this.options,"omsId",1);this.checkRequiredCredentials();let i={omsId:t,UserId:this.uid,UserName:this.login},s=await this.privateGetGetUserAccounts(this.extend(i,e)),r=[];for(let e=0;e<s.length;e++){let t=this.safeString(s,e);r.push({id:t,type:void 0,currency:void 0,info:t})}return r}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"ProductId");if(r in this.currencies_by_id){let e=this.safeCurrencyCode(r),i=this.account();i.total=this.safeString(s,"Amount"),i.used=this.safeString(s,"Hold"),t[e]=i}}return this.safeBalance(t)}async fetchBalance(e={}){let t=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let i=this.safeInteger2(this.options,"accountId","AccountId"),s=this.safeInteger2(e,"accountId","AccountId",i);void 0===s&&(s=parseInt(this.accounts[0].id)),e=this.omit(e,["accountId","AccountId"]);let r={omsId:t,AccountId:s},a=await this.privateGetGetAccountPositions(this.extend(r,e));return this.parseBalance(a)}parseLedgerEntryType(e){return this.safeString({Trade:"trade",Deposit:"transaction",Withdraw:"transaction",Transfer:"transfer",OrderHold:"trade",WithdrawHold:"transaction",DepositHold:"transaction",MarginHold:"trade",ManualHold:"trade",ManualEntry:"trade",MarginAcquisition:"trade",MarginRelinquish:"trade",MarginQuoteHold:"trade"},e,e)}parseLedgerEntry(e,t){let i,s,a;let n=this.safeString(e,"ProductId");t=this.safeCurrency(n,t);let o=this.safeString(e,"CR"),h=this.safeString(e,"DR");r.Y.stringLt(o,"0")?(i=o,s="in"):r.Y.stringLt(h,"0")&&(i=h,s="out");let d=this.safeString(e,"Balance");"out"===s?a=r.Y.stringAdd(d,i):"in"===s&&(a=r.Y.stringMax("0",r.Y.stringSub(d,i)));let l=this.safeInteger(e,"TimeStamp");return this.safeLedgerEntry({info:e,id:this.safeString(e,"TransactionId"),direction:s,account:this.safeString(e,"AccountId"),referenceId:this.safeString(e,"ReferenceId"),referenceAccount:this.safeString(e,"Counterparty"),type:this.parseLedgerEntryType(this.safeString(e,"ReferenceType")),currency:this.safeCurrencyCode(n,t),amount:this.parseNumber(i),before:this.parseNumber(a),after:this.parseNumber(d),status:"ok",timestamp:l,datetime:this.iso8601(l),fee:void 0},t)}async fetchLedger(e,t,i,s={}){let r;let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let n=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),o=this.safeInteger2(s,"accountId","AccountId",n);s=this.omit(s,["accountId","AccountId"]);let h={omsId:a,AccountId:o};void 0!==i&&(h.Depth=i);let d=await this.privateGetGetAccountTransactions(this.extend(h,s));return void 0!==e&&(r=this.currency(e)),this.parseLedger(d,r,t,i)}parseOrderStatus(e){return this.safeString({Accepted:"open",Rejected:"rejected",Working:"open",Canceled:"canceled",Expired:"expired",FullyExecuted:"closed"},e,e)}parseOrder(e,t){let i=this.safeInteger(e,"ReceiveTime"),s=this.safeString(e,"Instrument");return this.safeOrder({id:this.safeString2(e,"ReplacementOrderId","OrderId"),clientOrderId:this.safeString2(e,"ReplacementClOrdId","ClientOrderId"),info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:this.safeInteger(e,"LastUpdatedTime"),status:this.parseOrderStatus(this.safeString(e,"OrderState")),symbol:this.safeSymbol(s,t),type:this.safeStringLower(e,"OrderType"),timeInForce:void 0,postOnly:void 0,side:this.safeStringLower(e,"Side"),price:this.safeString(e,"Price"),triggerPrice:this.parseNumber(this.omitZero(this.safeString(e,"StopPrice"))),cost:this.safeString(e,"GrossValueExecuted"),amount:this.safeString(e,"OrigQuantity"),filled:this.safeString(e,"QuantityExecuted"),average:this.safeString(e,"AvgPrice"),remaining:void 0,fee:void 0,trades:void 0},t)}async createOrder(e,t,i,s,r,a={}){let n=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let o=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),h=this.safeInteger2(a,"accountId","AccountId",o),d=this.safeInteger2(a,"ClientOrderId","clientOrderId"),l=this.safeInteger(this.options.orderTypes,this.capitalize(t)),c=this.safeString(a,"triggerPrice");void 0!==c&&("market"===t?l=3:"limit"===t&&(l=4)),a=this.omit(a,["accountId","AccountId","clientOrderId","ClientOrderId","triggerPrice"]);let u=this.market(e),f={InstrumentId:parseInt(u.id),omsId:n,AccountId:h,TimeInForce:1,Side:"buy"===i?0:1,Quantity:parseFloat(this.amountToPrecision(e,s)),OrderType:l};void 0!==r&&(f.LimitPrice=parseFloat(this.priceToPrecision(e,r))),void 0!==d&&(f.ClientOrderId=d),void 0!==c&&(f.StopPrice=c);let p=await this.privatePostSendOrder(this.extend(f,a));return this.parseOrder(p,u)}async editOrder(e,t,i,s,r,a,n={}){let o=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let h=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),d=this.safeInteger2(n,"accountId","AccountId",h),l=this.safeInteger2(n,"ClientOrderId","clientOrderId");n=this.omit(n,["accountId","AccountId","clientOrderId","ClientOrderId"]);let c=this.market(t),u={OrderIdToReplace:parseInt(e),InstrumentId:parseInt(c.id),omsId:o,AccountId:d,TimeInForce:1,Side:"buy"===s?0:1,Quantity:parseFloat(this.amountToPrecision(t,r)),OrderType:this.safeInteger(this.options.orderTypes,this.capitalize(i))};void 0!==a&&(u.LimitPrice=parseFloat(this.priceToPrecision(t,a))),void 0!==l&&(u.ClientOrderId=l);let f=await this.privatePostCancelReplaceOrder(this.extend(u,n));return this.parseOrder(f,c)}async fetchMyTrades(e,t,i,s={}){let r;let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let n=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),o=this.safeInteger2(s,"accountId","AccountId",n);s=this.omit(s,["accountId","AccountId"]);let h={omsId:a,AccountId:o};void 0!==e&&(r=this.market(e),h.InstrumentId=r.id),void 0!==t&&(h.StartTimeStamp=this.parseToInt(t/1e3)),void 0!==i&&(h.Depth=i);let d=await this.privateGetGetTradesHistory(this.extend(h,s));return this.parseTrades(d,r,t,i)}async cancelAllOrders(e,t={}){let i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let s=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),r=this.safeInteger2(t,"accountId","AccountId",s);t=this.omit(t,["accountId","AccountId"]);let a={omsId:i,AccountId:r};if(void 0!==e){let t=this.market(e);a.IntrumentId=t.id}let n=await this.privatePostCancelAllOrders(this.extend(a,t));return[this.safeOrder({info:n})]}async cancelOrder(e,t,i={}){let s;let r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(s=this.market(t));let a={omsId:r},n=this.safeInteger2(i,"clientOrderId","ClOrderId");void 0!==n?a.ClOrderId=n:a.OrderId=parseInt(e),i=this.omit(i,["clientOrderId","ClOrderId"]);let o=await this.privatePostCancelOrder(this.extend(a,i)),h=this.parseOrder(o,s);return this.extend(h,{id:e,clientOrderId:n})}async fetchOpenOrders(e,t,i,s={}){let r;let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let n=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),o=this.safeInteger2(s,"accountId","AccountId",n);s=this.omit(s,["accountId","AccountId"]),void 0!==e&&(r=this.market(e));let h=await this.privateGetGetOpenOrders(this.extend({omsId:a,AccountId:o},s));return this.parseOrders(h,r,t,i)}async fetchOrders(e,t,i,s={}){let r;let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let n=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),o=this.safeInteger2(s,"accountId","AccountId",n);s=this.omit(s,["accountId","AccountId"]);let h={omsId:a,AccountId:o};void 0!==e&&(r=this.market(e),h.InstrumentId=r.id),void 0!==t&&(h.StartTimeStamp=this.parseToInt(t/1e3)),void 0!==i&&(h.Depth=i);let d=await this.privateGetGetOrdersHistory(this.extend(h,s));return this.parseOrders(d,r,t,i)}async fetchOrder(e,t,i={}){let s;let r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(i,"accountId","AccountId",a);i=this.omit(i,["accountId","AccountId"]),void 0!==t&&(s=this.market(t));let o={omsId:r,AccountId:n,OrderId:parseInt(e)},h=await this.privateGetGetOrderStatus(this.extend(o,i));return this.parseOrder(h,s)}async fetchOrderTrades(e,t,i,s,r={}){let a;let n=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(a=this.market(t));let o={OMSId:this.parseToInt(n),OrderId:parseInt(e)},h=await this.privatePostGetOrderHistoryByOrderId(this.extend(o,r)),d=this.groupBy(h,"ChangeReason"),l=this.safeList(d,"Trade",[]);return this.parseTrades(l,a,i,s)}async fetchDepositAddress(e,t={}){let i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let s=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),r=this.safeInteger2(t,"accountId","AccountId",s);t=this.omit(t,["accountId","AccountId"]);let a=this.currency(e),n={omsId:i,AccountId:r,ProductId:a.id,GenerateNewKey:!1},o=await this.privateGetGetDepositInfo(this.extend(n,t));return this.parseDepositAddress(o,a)}parseDepositAddress(e,t){let i;let s=JSON.parse(this.safeString(e,"DepositInfo")),r=s.length,a=this.safeString(s,r-1).split("?memo="),n=this.safeString(a,0),o=this.safeString(a,1);return void 0!==t&&(i=t.code),this.checkAddress(n),{info:e,currency:i,network:void 0,address:n,tag:o}}async createDepositAddress(e,t={}){return await this.fetchDepositAddress(e,this.extend({GenerateNewKey:!0},t))}async fetchDeposits(e,t,i,s={}){let r;let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let n=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),o=this.safeInteger2(s,"accountId","AccountId",n);s=this.omit(s,["accountId","AccountId"]),void 0!==e&&(r=this.currency(e));let h=await this.privateGetGetDeposits(this.extend({omsId:a,AccountId:o},s));return"string"==typeof h?this.parseTransactions(JSON.parse(h),r,t,i):this.parseTransactions(h,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let n=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),o=this.safeInteger2(s,"accountId","AccountId",n);s=this.omit(s,["accountId","AccountId"]),void 0!==e&&(r=this.currency(e));let h=await this.privateGetGetWithdraws(this.extend({omsId:a,AccountId:o},s));return this.parseTransactions(h,r,t,i)}parseTransactionStatusByType(e,t){let i=this.safeValue({deposit:{New:"pending",AdminProcessing:"pending",Accepted:"pending",Rejected:"rejected",SystemProcessing:"pending",FullyProcessed:"ok",Failed:"failed",Pending:"pending",Confirmed:"pending",AmlProcessing:"pending",AmlAccepted:"pending",AmlRejected:"rejected",AmlFailed:"failed",LimitsAccepted:"pending",LimitsRejected:"rejected"},withdrawal:{New:"pending",AdminProcessing:"pending",Accepted:"pending",Rejected:"rejected",SystemProcessing:"pending",FullyProcessed:"ok",Failed:"failed",Pending:"pending",Pending2Fa:"pending",AutoAccepted:"pending",Delayed:"pending",UserCanceled:"canceled",AdminCanceled:"canceled",AmlProcessing:"pending",AmlAccepted:"pending",AmlRejected:"rejected",AmlFailed:"failed",LimitsAccepted:"pending",LimitsRejected:"rejected",Submitted:"pending",Confirmed:"pending",ManuallyConfirmed:"pending",Confirmed2Fa:"pending"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t){let i,s,r;let a=this.safeString(e,"ProductId"),n=this.safeCurrencyCode(a,t);"DepositId"in e?(i=this.safeString(e,"DepositId"),s="deposit"):"WithdrawId"in e&&(i=this.safeString(e,"WithdrawId"),s="withdrawal");let o=this.parseJson(this.safeValue2(e,"TemplateForm","DepositInfo")),h=this.safeInteger(e,"LastUpdateTimeStamp");void 0!==o&&(h=this.safeInteger(o,"LastUpdated",h));let d=this.safeString2(o,"ExternalAddress","ToAddress"),l=this.safeInteger(o,"TimeSubmitted"),c=this.safeNumber(e,"FeeAmount"),u=this.safeString(e,"TicketStatus");return void 0!==c&&(r={currency:n,cost:c}),{info:e,id:i,txid:this.safeString2(o,"TxId","TXId"),timestamp:l,datetime:this.iso8601(l),address:d,addressTo:d,addressFrom:this.safeString(o,"FromAddress"),tag:void 0,tagTo:void 0,tagFrom:void 0,type:s,amount:this.safeNumber(e,"Amount"),currency:n,status:this.parseTransactionStatusByType(u,s),updated:h,fee:r,internal:void 0,comment:void 0,network:void 0}}async withdraw(e,t,i,s,r={}){if([s,r]=this.handleWithdrawTagAndParams(s,r),void 0===this.safeString(this.options,"sessionToken"))throw new n.AuthenticationError(this.id+" call signIn() method to obtain a session token");if(void 0===this.twofa)throw new n.AuthenticationError(this.id+" withdraw() requires exchange.twofa credentials");this.checkAddress(i);let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();let o=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),h=this.safeInteger2(r,"accountId","AccountId",o);r=this.omit(r,["accountId","AccountId"]);let d=this.currency(e),l={omsId:a,AccountId:h,ProductId:d.id},c=await this.privateGetGetWithdrawTemplateTypes(l),u=this.safeValue(c,"TemplateTypes",[]),f=this.safeValue(u,0);if(void 0===f)throw new n.ExchangeError(this.id+" withdraw() could not find a withdraw template type for "+d.code);let p=this.safeString(f,"TemplateName"),m={omsId:a,AccountId:h,ProductId:d.id,TemplateType:p,AccountProviderId:f.AccountProviderId},g=await this.privateGetGetWithdrawTemplate(m),y=this.safeString(g,"Template");if(void 0===y)throw new n.ExchangeError(this.id+" withdraw() could not find a withdraw template for "+d.code);let v=JSON.parse(y);v.ExternalAddress=i,void 0!==s&&"Memo"in v&&(v.Memo=s);let b={omsId:a,AccountId:h,ProductId:d.id,TemplateForm:this.json(v),TemplateType:p},w={TfaType:"Google",TFaCode:(0,J.O)(this.twofa),Payload:this.json(b)},k=await this.privatePostCreateWithdrawTicket(this.deepExtend(w,r));return this.parseTransaction(k,d)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if("public"===t){if("Authenticate"===e){let e=this.login+":"+this.password;r={Authorization:"Basic "+this.stringToBase64(e)}}else if("Authenticate2FA"===e){let e=this.safeString(this.options,"pending2faToken");void 0!==e&&(r={Pending2FaToken:e},o=this.omit(o,"pending2faToken"))}Object.keys(o).length&&(n+="?"+this.urlencode(o))}else if("private"===t){this.checkRequiredCredentials();let e=this.safeString(this.options,"sessionToken");if(void 0===e){let e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret),l.s);r={Nonce:e,APIKey:this.apiKey,Signature:i,UserId:this.uid}}else r={APToken:e};"POST"===i?(r["Content-Type"]="application/json",a=this.json(o)):Object.keys(o).length&&(n+="?"+this.urlencode(o))}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(404===e)throw new n.AuthenticationError(this.id+" "+a);if(void 0===o)return;let l=this.safeString(o,"errormsg");if(void 0!==l&&""!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,a,e),new n.ExchangeError(e)}}}class iR extends s.k{}let iD=iR;class iV extends iD{describe(){return this.deepExtend(super.describe(),{id:"novadax",name:"NovaDAX",countries:["BR"],rateLimit:10,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:"emulated",fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"ONE_MIN","5m":"FIVE_MIN","15m":"FIFTEEN_MIN","30m":"HALF_HOU","1h":"ONE_HOU","1d":"ONE_DAY","1w":"ONE_WEE","1M":"ONE_MON"},urls:{logo:"https://user-images.githubusercontent.com/1294454/92337550-2b085500-f0b3-11ea-98e7-5794fb07dd3b.jpg",api:{public:"https://api.novadax.com",private:"https://api.novadax.com"},www:"https://www.novadax.com.br",doc:["https://doc.novadax.com/pt-BR/"],fees:"https://www.novadax.com.br/fees-and-limits",referral:"https://www.novadax.com.br/?s=ccxt"},api:{public:{get:{"common/symbol":1,"common/symbols":1,"common/timestamp":1,"market/tickers":5,"market/ticker":1,"market/depth":1,"market/trades":5,"market/kline/history":5}},private:{get:{"orders/get":1,"orders/list":10,"orders/fill":3,"orders/fills":10,"account/getBalance":1,"account/subs":1,"account/subs/balance":1,"account/subs/transfer/record":10,"wallet/query/deposit-withdraw":3},post:{"orders/create":5,"orders/batch-create":50,"orders/cancel":1,"orders/batch-cancel":10,"orders/cancel-by-symbol":10,"account/subs/transfer":5,"wallet/withdraw/coin":3,"account/withdraw/coin":3}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.005"),maker:this.parseNumber("0.0025")}},requiredCredentials:{apiKey:!0,secret:!0},precisionMode:d.kb,exceptions:{exact:{A99999:n.ExchangeError,A10001:n.BadRequest,A10002:n.ExchangeError,A10003:n.AuthenticationError,A10004:n.RateLimitExceeded,A10005:n.PermissionDenied,A10006:n.AccountSuspended,A10007:n.AccountNotEnabled,A10011:n.BadSymbol,A10012:n.BadSymbol,A10013:n.OnMaintenance,A30001:n.OrderNotFound,A30002:n.InvalidOrder,A30003:n.InvalidOrder,A30004:n.InvalidOrder,A30005:n.InvalidOrder,A30006:n.InvalidOrder,A30007:n.InsufficientFunds,A30008:n.InvalidOrder,A30009:n.InvalidOrder,A30010:n.CancelPending,A30011:n.InvalidOrder,A30012:n.InvalidOrder,A40004:n.InsufficientFunds},broad:{}},options:{fetchOHLCV:{volume:"amount"},transfer:{fillResponseFromRequest:!0}}})}async fetchTime(e={}){let t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchMarkets(e={}){let t=await this.publicGetCommonSymbols(e),i=this.safeValue(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"baseCurrency"),i=this.safeString(e,"quoteCurrency"),s=this.safeString(e,"symbol"),r=this.safeCurrencyCode(t),a=this.safeCurrencyCode(i);return{id:s,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:t,quoteId:i,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ONLINE"===this.safeString(e,"status"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"amountPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"pricePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"minOrderAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(e,"minOrderValue"),max:void 0}},created:void 0,info:e}}parseTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t,"_"),a=this.safeString(e,"open24h"),n=this.safeString(e,"lastPrice"),o=this.safeString(e,"baseVolume24h"),h=this.safeString(e,"quoteVolume24h");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:a,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:h,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetMarketTicker(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetMarketTickers(t),s=this.safeValue(i,"data",[]),r={};for(let e=0;e<s.length;e++){let t=this.parseTicker(s[e]);r[t.symbol]=t}return this.filterByArrayTickers(r,"symbol",e)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);let a=await this.publicGetMarketDepth(this.extend(r,i)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,s.symbol,o,"bids","asks")}parseTrade(e,t){let i;let s=this.safeString(e,"id"),r=this.safeString(e,"orderId"),a=this.safeInteger(e,"timestamp"),n=this.safeStringLower(e,"side"),o=this.safeString(e,"price"),h=this.safeString(e,"amount"),d=this.safeString(e,"symbol"),l=this.safeSymbol(d,t,"_"),c=this.safeStringLower(e,"role");if(void 0!==this.safeString(e,"fee")){let t=this.safeString(e,"feeCurrency"),s=this.safeCurrencyCode(t);i={cost:this.safeString(e,"feeAmount"),currency:s}}return this.safeTrade({id:s,order:r,timestamp:a,datetime:this.iso8601(a),symbol:l,type:void 0,side:n,price:o,amount:h,cost:void 0,takerOrMaker:c,fee:i,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i);let n=await this.publicGetMarketTrades(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={symbol:a.id,unit:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t),h=this.seconds();if(void 0===s&&(s=3e3),void 0===i)n.from=h-s*o,n.to=h;else{let e=this.parseToInt(i/1e3);n.from=e,n.to=this.sum(e,s*o)}let d=await this.publicGetMarketKlineHistory(this.extend(n,r)),l=this.safeList(d,"data",[]);return this.parseOHLCVs(l,a,t,i,s)}parseOHLCV(e,t){let i=this.safeValue(this.options,"fetchOHLCV",{}),s=this.safeString(i,"volume","amount");return[this.safeTimestamp(e,"score"),this.safeNumber(e,"openPrice"),this.safeNumber(e,"highPrice"),this.safeNumber(e,"lowPrice"),this.safeNumber(e,"closePrice"),this.safeNumber(e,s)]}parseBalance(e){let t=this.safeValue(e,"data",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.free=this.safeString(s,"available"),n.used=this.safeString(s,"hold"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountGetBalance(e);return this.parseBalance(t)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let h=this.market(e),d=t.toUpperCase(),l=i.toUpperCase(),c={symbol:h.id,side:l},u=this.safeValue2(o,"triggerPrice","stopPrice");if(void 0===u){if("STOP_LIMIT"===d||"STOP_MARKET"===d)throw new n.ArgumentsRequired(this.id+" createOrder() requires a stopPrice parameter for "+d+" orders")}else"LIMIT"===d?d="STOP_LIMIT":"MARKET"===d&&(d="STOP_MARKET"),c.operator=this.safeString(o,"operator","BUY"===l?"LTE":"GTE"),c.stopPrice=this.priceToPrecision(e,u),o=this.omit(o,["triggerPrice","stopPrice"]);if("LIMIT"===d||"STOP_LIMIT"===d)c.price=this.priceToPrecision(e,a),c.amount=this.amountToPrecision(e,s);else if("MARKET"===d||"STOP_MARKET"===d){if("SELL"===l)c.amount=this.amountToPrecision(e,s);else if("BUY"===l){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let h=this.safeNumber2(o,"cost","value");if(o=this.omit(o,"cost"),void 0!==h)t=this.costToPrecision(e,h);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);c.value=t}}c.type=d;let f=await this.privatePostOrdersCreate(this.extend(c,o)),p=this.safeDict(f,"data",{});return this.parseOrder(p,h)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrdersCancel(this.extend({id:e},i)),r=this.safeDict(s,"data",{});return this.parseOrder(r)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersGet(this.extend({id:e},i)),r=this.safeDict(s,"data",{});return this.parseOrder(r)}async fetchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.fromTimestamp=t);let n=await this.privateGetOrdersList(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseOrders(o,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"SUBMITTED,PROCESSING,PARTIAL_FILLED,CANCELING"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"FILLED,CANCELED,REJECTED"},s))}async fetchOrderTrades(e,t,i,s,r={}){let a;await this.loadMarkets();let n=await this.privateGetOrdersFill(this.extend({id:e},r));void 0!==t&&(a=this.market(t));let o=this.safeValue(n,"data",[]);return this.parseTrades(o,a,i,s)}parseOrderStatus(e){return this.safeString({SUBMITTED:"open",PROCESSING:"open",PARTIAL_FILLED:"open",CANCELING:"open",FILLED:"closed",CANCELED:"canceled",REJECTED:"rejected"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"id"),r=this.safeString(e,"amount"),a=this.safeString(e,"price"),n=this.safeString2(e,"filledValue","value"),o=this.safeStringLower(e,"type"),h=this.safeStringLower(e,"side"),d=this.parseOrderStatus(this.safeString(e,"status")),l=this.safeInteger(e,"timestamp"),c=this.safeString(e,"averagePrice"),u=this.safeString(e,"filledAmount"),f=this.safeNumber(e,"filledFee");void 0!==f&&(i={cost:f,currency:void 0});let p=this.safeString(e,"symbol"),m=this.safeSymbol(p,t,"_");return this.safeOrder({id:s,clientOrderId:void 0,info:e,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,symbol:m,type:o,timeInForce:void 0,postOnly:void 0,side:h,price:a,triggerPrice:this.safeNumber(e,"stopPrice"),amount:r,cost:n,average:c,filled:u,remaining:void 0,status:d,fee:i,trades:void 0},t)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e);if("main"!==i&&"main"!==s)throw new n.ExchangeError(this.id+" transfer() supports transfers between main account and subaccounts only");let o="main"===i?"master-transfer-in":"master-transfer-out",h={transferAmount:this.currencyToPrecision(e,t),currency:a.id,subId:"master-transfer-in"===o?s:i,transferType:o},d=await this.privatePostAccountSubsTransfer(this.extend(h,r)),l=this.parseTransfer(d,a),c=this.safeValue(this.options,"transfer",{});return this.safeBool(c,"fillResponseFromRequest",!0)&&(l.fromAccount=i,l.toAccount=s,l.amount=t),l}parseTransfer(e,t){let i=this.safeString(e,"data"),s=this.safeString(e,"message");return{info:e,id:i,amount:void 0,currency:this.safeCurrencyCode(void 0,t),fromAccount:void 0,toAccount:void 0,timestamp:void 0,datetime:void 0,status:s}}parseTransferStatus(e){return this.safeString({SUCCESS:"pending"},e,"failed")}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let a=this.currency(e),n={code:a.id,amount:this.currencyToPrecision(e,t),wallet:i};void 0!==s&&(n.tag=s);let o=await this.privatePostAccountWithdrawCoin(this.extend(n,r));return this.parseTransaction(o,a)}async fetchAccounts(e={}){let t=await this.privateGetAccountSubs(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"subId"),a=this.safeString(t,"subAccount");s.push({id:r,type:a,currency:void 0,info:t})}return s}async fetchDeposits(e,t,i,s={}){return await this.fetchDepositsWithdrawals(e,t,i,this.extend({type:"coin_in"},s))}async fetchWithdrawals(e,t,i,s={}){return await this.fetchDepositsWithdrawals(e,t,i,this.extend({type:"coin_out"},s))}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.size=i);let n=await this.privateGetWalletQueryDepositWithdraw(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i)}parseTransactionStatus(e){let t=e.split(" ");return e=this.safeString(t,1,e),this.safeString({Pending:"pending",confirming:"pending",SUCCESS:"ok",FAIL:"failed"},e,e)}parseTransaction(e,t){let i=this.safeString2(e,"id","data"),s=this.safeString(e,"type");"COIN_IN"===s?s="deposit":"COIN_OUT"===s&&(s="withdraw");let r=this.safeNumber(e,"amount"),a=this.safeString(e,"address"),n=this.safeString(e,"addressTag"),o=this.safeString(e,"txHash"),h=this.safeInteger(e,"createdAt"),d=this.safeInteger(e,"updatedAt"),l=this.safeString(e,"currency"),c=this.safeCurrencyCode(l,t),u=this.parseTransactionStatus(this.safeString(e,"state")),f=this.safeString(e,"chain");return{info:e,id:i,currency:c,amount:r,network:f,address:a,addressTo:a,addressFrom:void 0,tag:n,tagTo:n,tagFrom:void 0,status:u,type:s,updated:d,txid:o,timestamp:h,datetime:this.iso8601(h),comment:void 0,internal:void 0,fee:{currency:void 0,cost:void 0,rate:void 0}}}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.fromTimestamp=t);let n=await this.privateGetOrdersFills(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}sign(e,t="public",i="GET",s={},r,a){let n="/"+this.version+"/"+this.implodeParams(e,s),o=this.urls.api[t]+n,h=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(h).length&&(o+="?"+this.urlencode(h));else if("private"===t){let e;this.checkRequiredCredentials();let t=this.milliseconds().toString();r={"X-Nova-Access-Key":this.apiKey,"X-Nova-Timestamp":t},"POST"===i?(a=this.json(h),e=this.hash(this.encode(a),eD.F),r["Content-Type"]="application/json"):(Object.keys(h).length&&(o+="?"+this.urlencode(h)),e=this.urlencode(this.keysort(h)));let s=i+"\n"+n+"\n"+e+"\n"+t;r["X-Nova-Signature"]=this.hmac(this.encode(s),this.encode(this.secret),l.s)}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code");if("A10000"!==l){let e=this.safeString(o,"message"),t=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new n.ExchangeError(t)}}}class iq extends s.k{}let iF=iq;class iH extends iF{describe(){return this.deepExtend(super.describe(),{id:"oceanex",name:"OceanEx",countries:["BS"],version:"v1",rateLimit:3e3,urls:{logo:"https://user-images.githubusercontent.com/1294454/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg",api:{rest:"https://api.oceanex.pro"},www:"https://www.oceanex.pro.com",doc:"https://api.oceanex.pro/doc/v1",referral:"https://oceanex.pro/signup?referral=VE24QX"},has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createMarketOrder:!0,createOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:"emulated",fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:!0,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchMarkets:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:void 0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"1440","3d":"4320","1w":"10080"},api:{public:{get:["markets","tickers/{pair}","tickers_multi","order_book","order_book/multi","fees/trading","trades","timestamp"],post:["k"]},private:{get:["key","members/me","orders","orders/filter"],post:["orders","orders/multi","order/delete","order/delete/multi","orders/clear","/withdraws/special/new","/deposit_address","/deposit_addresses","/deposit_history","/withdraw_history"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")}},commonCurrencies:{PLA:"Plair"},precisionMode:d.kb,exceptions:{codes:{"-1":n.BadRequest,"-2":n.BadRequest,1001:n.BadRequest,1004:n.ArgumentsRequired,1006:n.AuthenticationError,1008:n.AuthenticationError,1010:n.AuthenticationError,1011:n.PermissionDenied,2001:n.AuthenticationError,2002:n.InvalidOrder,2004:n.OrderNotFound,9003:n.PermissionDenied},exact:{"market does not have a valid value":n.BadRequest,"side does not have a valid value":n.BadRequest,"Account::AccountError: Cannot lock funds":n.InsufficientFunds,"The account does not exist":n.AuthenticationError}}})}async fetchMarkets(e={}){let t=await this.publicGetMarkets(this.extend({show_details:!0},e)),i=this.safeValue(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeValue(e,"id"),[i,s]=this.safeValue(e,"name").split("/"),r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s);return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i=i.toLowerCase(),quoteId:s=s.toLowerCase(),settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(e,"minimum_trading_amount"),max:void 0}},created:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetTickersPair(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets(),void 0===(e=this.marketSymbols(e))&&(e=this.symbols);let i=this.marketIds(e),s=await this.publicGetTickersMulti(this.extend({markets:i},t)),r=this.safeValue(s,"data",[]),a={};for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"market"),s=this.safeMarket(i);a[s.symbol]=this.parseTicker(t,s)}return this.filterByArrayTickers(a,"symbol",e)}parseTicker(e,t){let i=this.safeValue(e,"ticker",{}),s=this.safeTimestamp(e,"at"),r=this.safeSymbol(void 0,t);return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(i,"high"),low:this.safeString(i,"low"),bid:this.safeString(i,"buy"),bidVolume:void 0,ask:this.safeString(i,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(i,"last"),last:this.safeString(i,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(i,"volume"),quoteVolume:void 0,info:i},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.publicGetOrderBook(this.extend(s,i)),a=this.safeValue(r,"data",{}),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,e,n)}async fetchOrderBooks(e,t,i={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);let s={markets:this.marketIds(e)};void 0!==t&&(s.limit=t);let r=await this.publicGetOrderBookMulti(this.extend(s,i)),a=this.safeValue(r,"data",[]),n={};for(let e=0;e<a.length;e++){let t=a[e],i=this.safeString(t,"market"),s=this.safeSymbol(i),r=this.safeTimestamp(t,"timestamp");n[s]=this.parseOrderBook(t,s,r)}return n}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=Math.min(i,1e3));let n=await this.publicGetTrades(this.extend(a,s)),o=this.safeList(n,"data");return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i=this.safeValue(e,"side");"bid"===i?i="buy":"ask"===i&&(i="sell");let s=this.safeValue(e,"market"),r=this.safeSymbol(s,t),a=this.safeTimestamp(e,"created_on");void 0===a&&(a=this.parse8601(this.safeString(e,"created_at")));let n=this.safeString(e,"price"),o=this.safeString(e,"volume");return this.safeTrade({info:e,timestamp:a,datetime:this.iso8601(a),symbol:r,id:this.safeString(e,"id"),order:void 0,type:"limit",takerOrMaker:void 0,side:i,price:n,amount:o,cost:void 0,fee:void 0},t)}async fetchTime(e={}){let t=await this.publicGetTimestamp(e);return this.safeTimestamp(t,"data")}async fetchTradingFees(e={}){let t=await this.publicGetFeesTrading(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeValue(t,"ask_fee",{}),a=this.safeValue(t,"bid_fee",{}),n=this.safeString(t,"market"),o=this.safeSymbol(n);s[o]={info:t,symbol:o,maker:this.safeNumber(r,"value"),taker:this.safeNumber(a,"value"),percentage:!0}}return s}async fetchKey(e={}){let t=await this.privateGetKey(e);return this.safeValue(t,"data")}parseBalance(e){let t=this.safeValue(e,"data"),i=this.safeValue(t,"accounts",[]),s={info:e};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeValue(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"balance"),n.used=this.safeString(t,"locked"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetMembersMe(e);return this.parseBalance(t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={market:n.id,side:i,ord_type:t,volume:this.amountToPrecision(e,s)};"limit"===t&&(o.price=this.priceToPrecision(e,r));let h=await this.privatePostOrders(this.extend(o,a)),d=this.safeDict(h,"data");return this.parseOrder(d,n)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=await this.privateGetOrders(this.extend({ids:[e]},i)),a=this.safeValue(r,"data"),o=a.length;if(void 0===a)throw new n.OrderNotFound(this.id+" could not found matching order");if(Array.isArray(e))return this.parseOrders(a,s)[0];if(0===o)throw new n.OrderNotFound(this.id+" could not found matching order");return this.parseOrder(a[0],s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({states:["wait"]},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({states:["done","cancel"]},s))}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a=this.safeValue(s,"states",["wait","done","cancel"]),o=this.omit(s,"states"),h={market:r.id,states:a,need_price:"True"};void 0!==i&&(h.limit=i);let d=await this.privateGetOrdersFilter(this.extend(h,o)),l=this.safeValue(d,"data",[]),c=[];for(let e=0;e<l.length;e++){let s=this.safeValue(l[e],"orders",[]),a=this.parseOrderStatus(this.safeValue(l[e],"state")),n=this.parseOrders(s,r,t,i,{status:a});c=this.arrayConcat(c,n)}return c}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={market:a.id,period:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.timestamp=i),void 0!==s&&(n.limit=Math.min(s,1e4));let o=await this.publicPostK(this.extend(n,r)),h=this.safeList(o,"data",[]);return this.parseOHLCVs(h,a,t,i,s)}parseOrder(e,t){let i=this.parseOrderStatus(this.safeValue(e,"state")),s=this.safeString2(e,"market","market_id"),r=this.safeSymbol(s,t),a=this.safeTimestamp(e,"created_on");void 0===a&&(a=this.parse8601(this.safeString(e,"created_at")));let n=this.safeString(e,"price"),o=this.safeString(e,"avg_price"),h=this.safeString(e,"volume"),d=this.safeString(e,"remaining_volume"),l=this.safeString(e,"executed_volume");return this.safeOrder({info:e,id:this.safeString(e,"id"),clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:r,type:this.safeValue(e,"ord_type"),timeInForce:void 0,postOnly:void 0,side:this.safeValue(e,"side"),price:n,triggerPrice:void 0,average:o,amount:h,remaining:d,filled:l,status:i,cost:void 0,trades:void 0,fee:void 0},t)}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderDelete(this.extend({id:e},i)),r=this.safeDict(s,"data");return this.parseOrder(r)}async cancelOrders(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderDeleteMulti(this.extend({ids:e},i)),r=this.safeList(s,"data");return this.parseOrders(r)}async cancelAllOrders(e,t={}){await this.loadMarkets();let i=await this.privatePostOrdersClear(t),s=this.safeList(i,"data");return this.parseOrders(s)}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();let i=this.currency(e),s={currency:i.id},r=await this.privatePostDepositAddresses(this.extend(s,t)),a=this.safeDict(r,"data",{}),n=this.safeDict(a,"data",{}),o=this.safeList(n,"resources",[]),h={};for(let e=0;e<o.length;e++){let t=o[e];if("enabled"===this.safeString(t,"deposit_status")){let e=this.parseDepositAddress(t,i);h[e.currency]=e}}return h}parseDepositAddress(e,t){let i=this.safeString(e,"address");this.checkAddress(i);let s=this.safeString(e,"currency_id"),r=this.safeString(e,"chain_name");return{info:e,currency:this.safeCurrencyCode(s,t),network:this.networkIdToCode(r),address:i,tag:this.safeString(e,"memo")}}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if("public"===t){if("tickers_multi"===e||"order_book/multi"===e){let e="?",t=this.safeValue(s,"markets");for(let i=0;i<t.length;i++)e+="markets[]="+t[i]+"&";let i=this.safeValue(s,"limit");void 0!==i&&(e+="limit="+i),n+=e}else Object.keys(o).length&&(n+="?"+this.urlencode(o))}else if("private"===t){this.checkRequiredCredentials();let e={uid:this.apiKey,data:o};n+="?user_jwt="+(0,w.a)(e,this.encode(this.secret),l.s,!0)}return{url:n,method:i,body:a,headers:{"Content-Type":"application/json"}}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code"),c=this.safeString(o,"message");if(void 0!==l&&"0"!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.codes,l,e),this.throwExactlyMatchedException(this.exceptions.exact,c,e),new n.ExchangeError(e)}}}class iG extends s.k{}let iU=iG;class iW extends iU{describe(){return this.deepExtend(super.describe(),{id:"okcoin",name:"OKCoin",countries:["CN","US"],version:"v5",rateLimit:20,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!0,option:void 0,cancelOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchLedger:!0,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTransactions:void 0,fetchWithdrawals:!0,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setMargin:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","6h":"6H","12h":"12H","1d":"1D","1w":"1W","1M":"1M","3M":"3M"},hostname:"okcoin.com",urls:{logo:"https://user-images.githubusercontent.com/51840849/87295551-102fbf00-c50e-11ea-90a9-462eebba5829.jpg",api:{rest:"https://www.{hostname}"},www:"https://www.okcoin.com",doc:"https://www.okcoin.com/docs/en/",fees:"https://www.okcoin.com/coin-fees",referral:"https://www.okcoin.com/account/register?flag=activity&channelId=600001513",test:{rest:"https://testnet.okex.com"}},api:{public:{get:{"market/tickers":1,"market/ticker":1,"market/books":.5,"market/candles":.5,"market/history-candles":.5,"market/trades":.2,"market/history-trades":2,"market/platform-24-volume":10,"market/open-oracle":50,"market/exchange-rate":20,"public/instruments":1,"public/time":2}},private:{get:{"trade/order":1/3,"trade/orders-pending":1/3,"trade/orders-history":.5,"trade/orders-history-archive":.5,"trade/fills":1/3,"trade/fills-history":2.2,"trade/fills-archive":2,"trade/order-algo":1,"trade/orders-algo-pending":1,"trade/orders-algo-history":1,"otc/rfq/trade":4,"otc/rfq/history":4,"account/balance":2,"account/bills":5/3,"account/bills-archive":5/3,"account/config":4,"account/max-size":4,"account/max-avail-size":4,"account/trade-fee":4,"account/max-withdrawal":4,"asset/currencies":5/3,"asset/balances":5/3,"asset/asset-valuation":10,"asset/transfer-state":10,"asset/bills":5/3,"asset/deposit-lightning":5,"asset/deposit-address":5/3,"asset/deposit-history":5/3,"asset/withdrawal-history":5/3,"asset/deposit-withdraw-status":20,"fiat/deposit-history":5/3,"fiat-withdraw-history":5/3,"fiat-channel":5/3,"users/subaccount/list":10,"users/subaccount/apiKey":10,"account/subaccount/balances":10,"asset/subaccount/balances":10,"asset/subaccount/bills":10},post:{"trade/order":1/3,"trade/batch-orders":1/15,"trade/cancel-order":1/3,"trade/cancel-batch-orders":1/15,"trade/amend-order":1/3,"trade/amend-batch-orders":1/150,"trade/order-algo":1,"trade/cancel-algos":1,"trade/cancel-advance-algos":1,"otc/rfq/quote":4,"otc/rfq/trade":4,"asset/transfer":4,"asset/withdrawal":4,"asset/withdrawal-lightning":4,"asset/withdrawal-cancel":4,"fiat/deposit":5/3,"fiat/cancel-deposit":5/3,"fiat/withdrawal":5/3,"fiat/cancel-withdrawal":5/3,"asset/subaccount/transfer":10}}},fees:{trading:{taker:.002,maker:.001},spot:{taker:.0015,maker:.001}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:n.ExchangeError,2:n.ExchangeError,5e4:n.BadRequest,50001:n.OnMaintenance,50002:n.BadRequest,50004:n.RequestTimeout,50005:n.ExchangeNotAvailable,50006:n.BadRequest,50007:n.AccountSuspended,50008:n.AuthenticationError,50009:n.AccountSuspended,50010:n.ExchangeError,50011:n.RateLimitExceeded,50012:n.ExchangeError,50013:n.ExchangeNotAvailable,50014:n.BadRequest,50015:n.ExchangeError,50016:n.ExchangeError,50017:n.ExchangeError,50018:n.ExchangeError,50019:n.ExchangeError,50020:n.ExchangeError,50021:n.ExchangeError,50022:n.ExchangeError,50023:n.ExchangeError,50024:n.BadRequest,50025:n.ExchangeError,50026:n.ExchangeNotAvailable,50027:n.PermissionDenied,50028:n.ExchangeError,50029:n.ExchangeError,50030:n.PermissionDenied,50032:n.AccountSuspended,50033:n.AccountSuspended,50035:n.BadRequest,50036:n.BadRequest,50037:n.BadRequest,50038:n.ExchangeError,50039:n.ExchangeError,50041:n.ExchangeError,50044:n.BadRequest,50100:n.ExchangeError,50101:n.AuthenticationError,50102:n.InvalidNonce,50103:n.AuthenticationError,50104:n.AuthenticationError,50105:n.AuthenticationError,50106:n.AuthenticationError,50107:n.AuthenticationError,50108:n.ExchangeError,50109:n.ExchangeError,50110:n.PermissionDenied,50111:n.AuthenticationError,50112:n.AuthenticationError,50113:n.AuthenticationError,50114:n.AuthenticationError,50115:n.BadRequest,51e3:n.BadRequest,51001:n.BadSymbol,51002:n.BadSymbol,51003:n.BadRequest,51004:n.InvalidOrder,51005:n.InvalidOrder,51006:n.InvalidOrder,51007:n.InvalidOrder,51008:n.InsufficientFunds,51009:n.AccountSuspended,51010:n.AccountNotEnabled,51011:n.InvalidOrder,51012:n.BadSymbol,51014:n.BadSymbol,51015:n.BadSymbol,51016:n.InvalidOrder,51017:n.ExchangeError,51018:n.ExchangeError,51019:n.ExchangeError,51020:n.InvalidOrder,51023:n.ExchangeError,51024:n.AccountSuspended,51025:n.ExchangeError,51026:n.BadSymbol,51030:n.InvalidOrder,51031:n.InvalidOrder,51032:n.InvalidOrder,51033:n.InvalidOrder,51037:n.InvalidOrder,51038:n.InvalidOrder,51044:n.InvalidOrder,51046:n.InvalidOrder,51047:n.InvalidOrder,51048:n.InvalidOrder,51049:n.InvalidOrder,51050:n.InvalidOrder,51051:n.InvalidOrder,51052:n.InvalidOrder,51053:n.InvalidOrder,51054:n.BadRequest,51056:n.InvalidOrder,51058:n.InvalidOrder,51059:n.InvalidOrder,51100:n.InvalidOrder,51102:n.InvalidOrder,51103:n.InvalidOrder,51108:n.InvalidOrder,51109:n.InvalidOrder,51110:n.InvalidOrder,51111:n.BadRequest,51112:n.InvalidOrder,51113:n.RateLimitExceeded,51115:n.InvalidOrder,51116:n.InvalidOrder,51117:n.InvalidOrder,51118:n.InvalidOrder,51119:n.InsufficientFunds,51120:n.InvalidOrder,51121:n.InvalidOrder,51122:n.InvalidOrder,51124:n.InvalidOrder,51125:n.InvalidOrder,51126:n.InvalidOrder,51127:n.InsufficientFunds,51128:n.InvalidOrder,51129:n.InvalidOrder,51130:n.BadSymbol,51131:n.InsufficientFunds,51132:n.InvalidOrder,51133:n.InvalidOrder,51134:n.InvalidOrder,51135:n.InvalidOrder,51136:n.InvalidOrder,51137:n.InvalidOrder,51138:n.InvalidOrder,51139:n.InvalidOrder,51156:n.BadRequest,51159:n.BadRequest,51162:n.InvalidOrder,51163:n.InvalidOrder,51166:n.InvalidOrder,51174:n.InvalidOrder,51201:n.InvalidOrder,51202:n.InvalidOrder,51203:n.InvalidOrder,51204:n.InvalidOrder,51205:n.InvalidOrder,51250:n.InvalidOrder,51251:n.InvalidOrder,51252:n.InvalidOrder,51253:n.InvalidOrder,51254:n.InvalidOrder,51255:n.InvalidOrder,51256:n.InvalidOrder,51257:n.InvalidOrder,51258:n.InvalidOrder,51259:n.InvalidOrder,51260:n.InvalidOrder,51261:n.InvalidOrder,51262:n.InvalidOrder,51263:n.InvalidOrder,51264:n.InvalidOrder,51265:n.InvalidOrder,51267:n.InvalidOrder,51268:n.InvalidOrder,51269:n.InvalidOrder,51270:n.InvalidOrder,51271:n.InvalidOrder,51272:n.InvalidOrder,51273:n.InvalidOrder,51274:n.InvalidOrder,51275:n.InvalidOrder,51276:n.InvalidOrder,51277:n.InvalidOrder,51278:n.InvalidOrder,51279:n.InvalidOrder,51280:n.InvalidOrder,51321:n.InvalidOrder,51322:n.InvalidOrder,51323:n.BadRequest,51324:n.BadRequest,51325:n.InvalidOrder,51327:n.InvalidOrder,51328:n.InvalidOrder,51329:n.InvalidOrder,51330:n.InvalidOrder,51400:n.OrderNotFound,51401:n.OrderNotFound,51402:n.OrderNotFound,51403:n.InvalidOrder,51404:n.InvalidOrder,51405:n.ExchangeError,51406:n.ExchangeError,51407:n.BadRequest,51408:n.ExchangeError,51409:n.ExchangeError,51410:n.CancelPending,51500:n.ExchangeError,51501:n.ExchangeError,51502:n.InsufficientFunds,51503:n.ExchangeError,51506:n.ExchangeError,51508:n.ExchangeError,51509:n.ExchangeError,51510:n.ExchangeError,51511:n.ExchangeError,51600:n.ExchangeError,51601:n.ExchangeError,51602:n.ExchangeError,51603:n.OrderNotFound,51732:n.AuthenticationError,51733:n.AuthenticationError,51734:n.AuthenticationError,51735:n.ExchangeError,51736:n.InsufficientFunds,52e3:n.ExchangeError,54e3:n.ExchangeError,54001:n.ExchangeError,58e3:n.ExchangeError,58001:n.AuthenticationError,58002:n.PermissionDenied,58003:n.ExchangeError,58004:n.AccountSuspended,58005:n.ExchangeError,58006:n.ExchangeError,58007:n.ExchangeError,58100:n.ExchangeError,58101:n.AccountSuspended,58102:n.RateLimitExceeded,58103:n.ExchangeError,58104:n.ExchangeError,58105:n.ExchangeError,58106:n.ExchangeError,58107:n.ExchangeError,58108:n.ExchangeError,58109:n.ExchangeError,58110:n.ExchangeError,58111:n.ExchangeError,58112:n.ExchangeError,58114:n.ExchangeError,58115:n.ExchangeError,58116:n.ExchangeError,58117:n.ExchangeError,58125:n.BadRequest,58126:n.BadRequest,58127:n.BadRequest,58128:n.BadRequest,58200:n.ExchangeError,58201:n.ExchangeError,58202:n.ExchangeError,58203:n.InvalidAddress,58204:n.AccountSuspended,58205:n.ExchangeError,58206:n.ExchangeError,58207:n.InvalidAddress,58208:n.ExchangeError,58209:n.ExchangeError,58210:n.ExchangeError,58211:n.ExchangeError,58212:n.ExchangeError,58213:n.AuthenticationError,58221:n.BadRequest,58222:n.BadRequest,58224:n.BadRequest,58227:n.BadRequest,58228:n.BadRequest,58229:n.InsufficientFunds,58300:n.ExchangeError,58350:n.InsufficientFunds,59e3:n.ExchangeError,59001:n.ExchangeError,59100:n.ExchangeError,59101:n.ExchangeError,59102:n.ExchangeError,59103:n.InsufficientFunds,59104:n.ExchangeError,59105:n.ExchangeError,59106:n.ExchangeError,59107:n.ExchangeError,59108:n.InsufficientFunds,59109:n.ExchangeError,59128:n.InvalidOrder,59200:n.InsufficientFunds,59201:n.InsufficientFunds,59216:n.BadRequest,59300:n.ExchangeError,59301:n.ExchangeError,59313:n.ExchangeError,59401:n.ExchangeError,59500:n.ExchangeError,59501:n.ExchangeError,59502:n.ExchangeError,59503:n.ExchangeError,59504:n.ExchangeError,59505:n.ExchangeError,59506:n.ExchangeError,59507:n.ExchangeError,59508:n.AccountSuspended,60001:n.AuthenticationError,60002:n.AuthenticationError,60003:n.AuthenticationError,60004:n.AuthenticationError,60005:n.AuthenticationError,60006:n.InvalidNonce,60007:n.AuthenticationError,60008:n.AuthenticationError,60009:n.AuthenticationError,60010:n.AuthenticationError,60011:n.AuthenticationError,60012:n.BadRequest,60013:n.BadRequest,60014:n.RateLimitExceeded,60015:n.NetworkError,60016:n.ExchangeNotAvailable,60017:n.BadRequest,60018:n.BadRequest,60019:n.BadRequest,63999:n.ExchangeError,70010:n.BadRequest,70013:n.BadRequest,70016:n.BadRequest},broad:{"Internal Server Error":n.ExchangeNotAvailable,"server error":n.ExchangeNotAvailable}},precisionMode:d.kb,options:{fetchOHLCV:{type:"Candles"},createMarketBuyOrderRequiresPrice:!0,fetchMarkets:["spot"],defaultType:"spot",accountsByType:{classic:"1",spot:"1",funding:"6",main:"6",unified:"18"},accountsById:{1:"spot",6:"funding",18:"unified"},auth:{time:"public",currencies:"private",instruments:"public",rate:"public","{instrument_id}/constituents":"public"},warnOnFetchCurrenciesWithoutAuthorization:!1,defaultNetwork:"ERC20",networks:{ERC20:"Ethereum",BTC:"Bitcoin",OMNI:"Omni",TRC20:"TRON"}},commonCurrencies:{AE:"AET",BOX:"DefiBox",HOT:"Hydro Protocol",HSR:"HC",MAG:"Maggie",SBTC:"Super Bitcoin",TRADE:"Unitrade",YOYO:"YOYOW",WIN:"WinToken"}})}async fetchTime(e={}){let t=await this.publicGetPublicTime(e);return this.parse8601(this.safeString(t,"iso"))}async fetchMarkets(e={}){let t=await this.publicGetPublicInstruments(this.extend({instType:"SPOT"},e)),i=this.safeValue(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"instId"),i=this.safeStringLower(e,"instType");"futures"===i&&(i="future");let s="spot"===i,a="future"===i,n="swap"===i,o="option"===i,h=n||a||o,d=this.safeString(e,"baseCcy"),l=this.safeString(e,"quoteCcy"),c=this.safeCurrencyCode(d),u=this.safeCurrencyCode(l),f=this.safeString(e,"tickSz"),p=this.safeValue2(this.fees,i,"trading",{}),m=this.safeString(e,"lever","1");m=r.Y.stringMax(m,"1");let g=this.safeNumber(e,"maxMktSz");return this.extend(p,{id:t,symbol:c+"/"+u,base:c,quote:u,settle:void 0,baseId:d,quoteId:l,settleId:void 0,type:i,spot:s,margin:s&&r.Y.stringGt(m,"1"),swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:h?this.safeNumber(e,"ctVal"):void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,created:this.safeInteger(e,"listTime"),precision:{amount:this.safeNumber(e,"lotSz"),price:this.parseNumber(f)},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(m)},amount:{min:this.safeNumber(e,"minSz"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:h?void 0:g}},info:e})}async fetchCurrencies(e={}){if(this.checkRequiredCredentials(!1)){let t=await this.privateGetAssetCurrencies(e),i=this.safeValue(t,"data",[]),s={},a=this.groupBy(i,"ccy"),n=Object.keys(a);for(let e=0;e<n.length;e++){let t;let i=n[e],o=this.safeCurrency(i).code,h=a[i],d={},l=!1,c=!1,u=!1;for(let e=0;e<h.length;e++){let i=h[e],s=this.safeValue(i,"canDep");c=s||c;let a=this.safeValue(i,"canWd");u=a||u;let n=this.safeValue(i,"canInternal"),o=!!s&&!!a&&!!n;l=o||l;let f=this.safeString(i,"chain");if(void 0!==f&&f.indexOf("-")>=0){let e=f.split("-"),n=this.safeString(e,1,f),h=this.networkIdToCode(n),l=this.parsePrecision(this.safeString(i,"wdTickSz"));t=void 0===t?l:r.Y.stringMin(t,l),d[h]={id:f,network:h,active:o,deposit:s,withdraw:a,fee:this.safeNumber(i,"minFee"),precision:this.parseNumber(l),limits:{withdraw:{min:this.safeNumber(i,"minWd"),max:this.safeNumber(i,"maxWd")}},info:i}}}let f=this.safeValue(h,0);s[o]={info:h,code:o,id:i,name:this.safeString(f,"name"),active:l,deposit:c,withdraw:u,fee:void 0,precision:this.parseNumber(t),limits:{amount:{min:void 0,max:void 0}},networks:d}}return s}if(this.options.warnOnFetchCurrenciesWithoutAuthorization)throw new n.ExchangeError(this.id+' fetchCurrencies() is a private API endpoint that requires authentication with API keys. Set the API keys on the exchange instance or exchange.options["warnOnFetchCurrenciesWithoutAuthorization"] = false to suppress this warning message.')}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={instId:this.market(e).id};void 0!==(t=void 0===t?20:t)&&(s.sz=t);let r=await this.publicGetMarketBooks(this.extend(s,i)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{}),o=this.safeInteger(n,"ts");return this.parseOrderBook(n,e,o)}parseTicker(e,t){let i=this.safeInteger(e,"ts"),s=this.safeString(e,"instId"),r=(t=this.safeMarket(s,t,"-")).symbol,a=this.safeString(e,"last"),n=this.safeString(e,"open24h"),o=this.safeBool(t,"spot",!1)?this.safeString(e,"volCcy24h"):void 0,h=this.safeString(e,"vol24h"),d=this.safeString(e,"high24h"),l=this.safeString(e,"low24h");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:d,low:l,bid:this.safeString(e,"bidPx"),bidVolume:this.safeString(e,"bidSz"),ask:this.safeString(e,"askPx"),askVolume:this.safeString(e,"askSz"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:h,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={instId:i.id},r=await this.publicGetMarketTicker(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTicker(n,i)}async fetchTickers(e,t={}){e=this.marketSymbols(e);let i=await this.publicGetMarketTickers(this.extend({instType:"SPOT"},t)),s=this.safeList(i,"data",[]);return this.parseTickers(s,e,t)}parseTrade(e,t){let i;let s=this.safeString(e,"tradeId"),a=this.safeString(e,"instId"),n=(t=this.safeMarket(a,t,"-")).symbol,o=this.safeInteger(e,"ts"),h=this.safeString2(e,"fillPx","px"),d=this.safeString2(e,"fillSz","sz"),l=this.safeString(e,"side"),c=this.safeString(e,"ordId"),u=this.safeString(e,"fee");if(void 0!==u){let t=r.Y.stringNeg(u),s=this.safeString(e,"feeCcy");i={cost:t,currency:this.safeCurrencyCode(s)}}let f=this.safeString(e,"execType");return"T"===f?f="taker":"M"===f&&(f="maker"),this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:n,id:s,order:c,type:void 0,takerOrMaker:f,side:l,price:h,amount:d,cost:void 0,fee:i},t)}async fetchTrades(e,t,i,s={}){let r,a;await this.loadMarkets();let n=this.market(e);(void 0===i||i>100)&&(i=100);let o={instId:n.id};[r,s]=this.handleOptionAndParams(s,"fetchTrades","method","publicGetMarketTrades"),a="publicGetMarketTrades"===r?await this.publicGetMarketTrades(this.extend(o,s)):await this.publicGetMarketHistoryTrades(this.extend(o,s));let h=this.safeList(a,"data",[]);return this.parseTrades(h,n,t,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){let a,n;await this.loadMarkets();let o=this.market(e),h=this.parseTimeframe(t),d=this.safeValue(this.options,"fetchOHLCV",{}),l=this.safeString(this.timeframes,t,t),c=this.safeString(d,"timezone","UTC");"UTC"===c&&h>=21600&&(l+=c.toLowerCase());let u={instId:o.id,bar:l};void 0!==s&&(u.limit=s),[a,r]=this.handleOptionAndParams(r,"fetchOHLCV","method","publicGetMarketCandles"),n="publicGetMarketCandles"===a?await this.publicGetMarketCandles(this.extend(u,r)):await this.publicGetMarketHistoryCandles(this.extend(u,r));let f=this.safeList(n,"data",[]);return this.parseOHLCVs(f,o,t,i,s)}parseAccountBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.used=this.safeString(s,"hold"),n.free=this.safeString(s,"available"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){let t;await this.loadMarkets();let[i,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),r={};return(t="funding"===i?await this.privateGetAssetBalances(this.extend(r,s)):await this.privateGetAccountBalance(this.extend(r,s)),"funding"===i)?this.parseFundingBalance(t):this.parseTradingBalance(t)}parseTradingBalance(e){let t={info:e},i=this.safeValue(e,"data",[]),s=this.safeValue(i,0,{}),r=this.safeInteger(s,"uTime"),a=this.safeValue(s,"details",[]);for(let e=0;e<a.length;e++){let i=a[e],s=this.safeString(i,"ccy"),r=this.safeCurrencyCode(s),n=this.account(),o=this.safeString(i,"eq"),h=this.safeString(i,"availEq");void 0===o||void 0===h?(n.free=this.safeString(i,"availBal"),n.used=this.safeString(i,"frozenBal")):(n.total=o,n.free=h),t[r]=n}return t.timestamp=r,t.datetime=this.iso8601(r),this.safeBalance(t)}parseFundingBalance(e){let t={info:e},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){let s=i[e],r=this.safeString(s,"ccy"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"bal"),n.free=this.safeString(s,"availBal"),n.used=this.safeString(s,"frozenBal"),t[a]=n}return this.safeBalance(t)}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new n.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return i.createMarketBuyOrderRequiresPrice=!1,i.tgtCcy="quote_ccy",await this.createOrder(e,"market","buy",t,void 0,i)}async createOrder(e,t,i,s,r,a={}){let o;await this.loadMarkets();let h=this.market(e),d=this.createOrderRequest(e,t,i,s,r,a),l=this.safeString(this.options,"createOrder","privatePostTradeBatchOrders"),c=this.safeString(d,"ordType");if(("trigger"===c||"conditional"===c||"oco"===t||"move_order_stop"===t||"iceberg"===t||"twap"===t)&&(l="privatePostTradeOrderAlgo"),"privatePostTradeBatchOrders"===l&&(d=[d]),"privatePostTradeOrder"===l)o=await this.privatePostTradeOrder(d);else if("privatePostTradeOrderAlgo"===l)o=await this.privatePostTradeOrderAlgo(d);else if("privatePostTradeBatchOrders"===l)o=await this.privatePostTradeBatchOrders(d);else throw new n.ExchangeError(this.id+' createOrder() this.options["createOrder"] must be either privatePostTradeBatchOrders or privatePostTradeOrder or privatePostTradeOrderAlgo');let u=this.safeValue(o,"data",[]),f=this.safeValue(u,0),p=this.parseOrder(f,h);return p.type=t,p.side=i,p}createOrderRequest(e,t,i,s,a,o={}){let h=this.market(e),d={instId:h.id,side:i,ordType:t},l=this.safeValueN(o,["triggerPrice","stopPrice","triggerPx"]),c=this.safeString(o,"timeInForce","GTC"),u=this.safeValue2(o,"takeProfitPrice","tpTriggerPx"),f=this.safeValue(o,"tpOrdPx",a),p=this.safeString(o,"tpTriggerPxType","last"),m=this.safeValue2(o,"stopLossPrice","slTriggerPx"),g=this.safeValue(o,"slOrdPx",a),y=this.safeString(o,"slTriggerPxType","last"),v=this.safeString2(o,"clOrdId","clientOrderId"),b=this.safeValue(o,"stopLoss"),w=void 0!==b,k=this.safeValue(o,"takeProfit"),S=void 0!==k,O=this.safeString2(this.options,"defaultMarginMode","marginMode","cross"),T=this.safeString2(o,"marginMode","tdMode"),I=!1;if(void 0!==T&&"cash"!==T?I=!0:(T=O,I=this.safeBool(o,"margin",!1)),I){let e="buy"===i?h.quote:h.base,t=this.safeString(o,"ccy",e);d.ccy=this.safeCurrencyCode(t)}let x=I?T:"cash";d.tdMode=x;let P="market"===t,M=!1;[M,o]=this.handlePostOnly(P,"post_only"===t,o),o=this.omit(o,["currency","ccy","marginMode","timeInForce","stopPrice","triggerPrice","clientOrderId","stopLossPrice","takeProfitPrice","slOrdPx","tpOrdPx","margin","stopLoss","takeProfit"]);let A="IOC"===c||"ioc"===t,C="FOK"===c||"fok"===t,B=void 0!==l||"trigger"===t,E=void 0!==m||void 0!==u||"conditional"===t,_=P&&A||"optimal_limit_ioc"===t,N=this.safeString(this.options,"tgtCcy","base_ccy"),L=this.safeString(o,"tgtCcy",N);if(I||(d.tgtCcy=L),P||_){if(d.ordType="market","buy"===i){if("quote_ccy"===L){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let h=this.safeNumber2(o,"cost","sz");if(o=this.omit(o,["cost","sz"]),void 0!==h)t=this.costToPrecision(e,h);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);d.sz=t}else d.sz=this.amountToPrecision(e,s)}else d.sz=this.amountToPrecision(e,s)}else d.sz=this.amountToPrecision(e,s),B||E||(d.px=this.priceToPrecision(e,a));if(M)d.ordType="post_only";else if(A&&!_)d.ordType="ioc";else if(C)d.ordType="fok";else if(w||S){if(w){let t=this.safeValueN(b,["triggerPrice","stopPrice","slTriggerPx"]);if(void 0===t)throw new n.InvalidOrder(this.id+' createOrder() requires a trigger price in params["stopLoss"]["triggerPrice"], or params["stopLoss"]["stopPrice"], or params["stopLoss"]["slTriggerPx"] for a stop loss order');d.slTriggerPx=this.priceToPrecision(e,t);let i=this.safeValueN(b,["price","stopLossPrice","slOrdPx"]),s=this.safeString(b,"type");if(void 0!==s){let t="limit"===s;if(t||"market"===s){if(t){if(void 0===i)throw new n.InvalidOrder(this.id+' createOrder() requires a limit price in params["stopLoss"]["price"] or params["stopLoss"]["slOrdPx"] for a stop loss limit order');d.slOrdPx=this.priceToPrecision(e,i)}else"market"===s&&(d.slOrdPx="-1")}else throw new n.InvalidOrder(this.id+' createOrder() params["stopLoss"]["type"] must be either "limit" or "market"')}else void 0!==i?d.slOrdPx=this.priceToPrecision(e,i):d.slOrdPx="-1";let r=this.safeString2(b,"triggerPriceType","slTriggerPxType","last");if(void 0!==r){if("last"!==r&&"index"!==r&&"mark"!==r)throw new n.InvalidOrder(this.id+' createOrder() stop loss trigger price type must be one of "last", "index" or "mark"');d.slTriggerPxType=r}}if(S){let t=this.safeValueN(k,["triggerPrice","stopPrice","tpTriggerPx"]);if(void 0===t)throw new n.InvalidOrder(this.id+' createOrder() requires a trigger price in params["takeProfit"]["triggerPrice"], or params["takeProfit"]["stopPrice"], or params["takeProfit"]["tpTriggerPx"] for a take profit order');d.tpTriggerPx=this.priceToPrecision(e,t);let i=this.safeValueN(k,["price","takeProfitPrice","tpOrdPx"]),s=this.safeString(k,"type");if(void 0!==s){let t="limit"===s;if(t||"market"===s){if(t){if(void 0===i)throw new n.InvalidOrder(this.id+' createOrder() requires a limit price in params["takeProfit"]["price"] or params["takeProfit"]["tpOrdPx"] for a take profit limit order');d.tpOrdPx=this.priceToPrecision(e,i)}else"market"===s&&(d.tpOrdPx="-1")}else throw new n.InvalidOrder(this.id+' createOrder() params["takeProfit"]["type"] must be either "limit" or "market"')}else void 0!==i?d.tpOrdPx=this.priceToPrecision(e,i):d.tpOrdPx="-1";let r=this.safeString2(k,"triggerPriceType","tpTriggerPxType","last");if(void 0!==r){if("last"!==r&&"index"!==r&&"mark"!==r)throw new n.InvalidOrder(this.id+' createOrder() take profit trigger price type must be one of "last", "index" or "mark"');d.tpTriggerPxType=r}}}else B?(d.ordType="trigger",d.triggerPx=this.priceToPrecision(e,l),d.orderPx=P?"-1":this.priceToPrecision(e,a)):E&&(d.ordType="conditional",void 0!==u&&void 0!==m&&(d.ordType="oco"),void 0!==u&&(d.tpTriggerPx=this.priceToPrecision(e,u),d.tpOrdPx=void 0===f?"-1":this.priceToPrecision(e,f),d.tpTriggerPxType=p),void 0!==m&&(d.slTriggerPx=this.priceToPrecision(e,m),d.slOrdPx=void 0===g?"-1":this.priceToPrecision(e,g),d.slTriggerPxType=y));if(void 0===v){let e=this.safeString(this.options,"brokerId");void 0!==e&&(d.clOrdId=e+this.uuid16(),d.tag=e)}else d.clOrdId=v,o=this.omit(o,["clOrdId","clientOrderId"]);return this.extend(d,o)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.safeValue2(i,"stop","trigger"),r=this.safeValue(i,"advanced");if(s||r){let s=await this.cancelOrders([e],t,i);return this.safeValue(s,0)}let a=this.market(t),o={instId:a.id},h=this.safeString2(i,"clOrdId","clientOrderId");void 0!==h?o.clOrdId=h:o.ordId=e.toString();let d=this.omit(i,["clOrdId","clientOrderId"]),l=await this.privatePostTradeCancelOrder(this.extend(o,d)),c=this.safeValue(l,"data",[]),u=this.safeDict(c,0);return this.parseOrder(u,a)}parseIds(e){return"string"==typeof e?e.split(","):e}async cancelOrders(e,t,i={}){let s;if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let r=this.safeValue2(i,"stop","trigger"),a=this.safeValue(i,"advanced");i=this.omit(i,["stop","trigger","advanced"]);let o=this.market(t),h=[],d=this.parseIds(this.safeValue2(i,"clOrdId","clientOrderId")),l=this.parseIds(this.safeValue(i,"algoId"));if(void 0===d){if(e=this.parseIds(e),void 0!==l)for(let e=0;e<l.length;e++)h.push({algoId:l[e],instId:o.id});for(let t=0;t<e.length;t++)r||a?h.push({algoId:e[t],instId:o.id}):h.push({ordId:e[t],instId:o.id})}else for(let e=0;e<d.length;e++)h.push({instId:o.id,clOrdId:d[e]});s=r?await this.privatePostTradeCancelAlgos(h):a?await this.privatePostTradeCancelAdvanceAlgos(h):await this.privatePostTradeCancelBatchOrders(h);let c=this.safeList(s,"data",[]);return this.parseOrders(c,o,void 0,void 0,i)}parseOrderStatus(e){return this.safeString({canceled:"canceled",live:"open",partially_filled:"open",filled:"closed",effective:"closed"},e,e)}parseOrder(e,t){let i,s,a,n,o;let h=this.safeString2(e,"algoId","ordId"),d=this.safeInteger(e,"cTime"),l=this.safeInteger(e,"uTime"),c=this.safeInteger(e,"fillTime"),u=this.safeString(e,"side"),f=this.safeString(e,"ordType");"post_only"===f?(i=!0,f="limit"):"fok"===f?(s="FOK",f="limit"):"ioc"===f&&(s="IOC",f="limit");let p=this.safeString(e,"instId");t=this.safeMarket(p,t);let m=this.safeSymbol(p,t,"-"),g=this.safeString(e,"accFillSz"),y=this.safeString2(e,"px","ordPx"),v=this.safeString(e,"avgPx"),b=this.parseOrderStatus(this.safeString(e,"state")),w=this.safeString(e,"fee"),k=this.safeString(this.options,"tgtCcy","base_ccy"),S=this.safeString(e,"tgtCcy",k);if("buy"===u&&"market"===f&&"quote_ccy"===S?n=this.safeString(e,"sz"):a=this.safeString(e,"sz"),void 0!==w){let t=r.Y.stringNeg(w),i=this.safeString(e,"feeCcy"),s=this.safeCurrencyCode(i);o={cost:this.parseNumber(t),currency:s}}let O=this.safeString(e,"clOrdId");void 0!==O&&O.length<1&&(O=void 0);let T=this.safeNumber2(e,"slTriggerPx","slOrdPx"),I=this.safeNumber2(e,"tpTriggerPx","tpOrdPx"),x=this.safeString(e,"reduceOnly"),P=!1;return P="true"===x,this.safeOrder({info:e,id:h,clientOrderId:O,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:c,lastUpdateTimestamp:l,symbol:m,type:f,timeInForce:s,postOnly:i,side:u,price:y,stopLossPrice:T,takeProfitPrice:I,triggerPrice:this.safeNumberN(e,["triggerPx","moveTriggerPx"]),average:v,cost:n,amount:a,filled:g,remaining:void 0,status:b,fee:o,trades:void 0,reduceOnly:P},t)}async fetchOrder(e,t,i={}){let s;if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let r={instId:this.market(t).id},a=this.safeString2(i,"clOrdId","clientOrderId"),o=this.safeValue2(i,"stop","trigger");o?void 0!==a?r.algoClOrdId=a:r.algoId=e:void 0!==a?r.clOrdId=a:r.ordId=e;let h=this.omit(i,["clientOrderId","stop","trigger"]);s=o?await this.privateGetTradeOrderAlgo(this.extend(r,h)):await this.privateGetTradeOrder(this.extend(r,h));let d=this.safeValue(s,"data",[]),l=this.safeDict(d,0);return this.parseOrder(l)}async fetchOpenOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n={};void 0!==e&&(r=this.market(e),n.instId=r.id),void 0!==i&&(n.limit=i);let o=this.safeString(s,"ordType"),h=this.safeValue(s,"stop")||void 0!==this.safeString(s,"ordType");h&&void 0===o&&(n.ordType="trigger"),s=this.omit(s,["stop"]),a=h?await this.privateGetTradeOrdersAlgoPending(this.extend(n,s)):await this.privateGetTradeOrdersPending(this.extend(n,s));let d=this.safeList(a,"data",[]);return this.parseOrders(d,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n={instType:"SPOT"};void 0!==e&&(r=this.market(e),n.instId=r.id);let o=this.safeString(s,"ordType"),h=this.safeValue(s,"stop")||void 0!==this.safeString(s,"ordType");if(h&&void 0===o&&(n.ordType="trigger"),s=this.omit(s,["stop"]),h)a=await this.privateGetTradeOrdersAlgoHistory(this.extend(n,s));else{let e;[e,s]=this.handleOptionAndParams(s,"fetchClosedOrders","method","privateGetTradeOrdersHistory"),a="privateGetTradeOrdersHistory"===e?await this.privateGetTradeOrdersHistory(this.extend(n,s)):await this.privateGetTradeOrdersHistoryArchive(this.extend(n,s))}let d=this.safeList(a,"data",[]);return this.parseOrders(d,r,t,i)}parseDepositAddress(e,t){let i=this.safeString(e,"addr"),s=this.safeStringN(e,["tag","pmtId","memo"]);if(void 0===s){let t=this.safeValue(e,"addrEx",{});s=this.safeString(t,"comment")}let r=this.safeString(e,"ccy"),a=(t=this.safeCurrency(r,t)).code,n=this.safeString(e,"chain").replace(r+"-",""),o=this.networkIdToCode(n);return this.checkAddress(i),{info:e,currency:a,network:o,address:i,tag:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.safeString(this.options,"defaultNetwork","ERC20"),s=this.safeString(t,"network",i),r=this.networkIdToCode(s);t=this.omit(t,"network");let a=await this.fetchDepositAddressesByNetwork(e,t),o=this.safeValue(a,r);if(void 0===o)throw new n.InvalidAddress(this.id+" fetchDepositAddress() cannot find "+r+" deposit address for "+e);return o}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();let i=this.currency(e),s={ccy:i.id},r=await this.privateGetAssetDepositAddress(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.filterBy(a,"selected",!0),o=this.parseDepositAddresses(n,[i.code],!1);return this.indexBy(o,"network")}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),h=this.safeString(n,s,s),d={ccy:a.id,amt:this.currencyToPrecision(e,t),type:"0",from:o,to:h};"master"===o?(d.type="1",d.subAcct=h,d.from=this.safeString(r,"from","6"),d.to=this.safeString(r,"to","6")):"master"===h&&(d.type="2",d.subAcct=o,d.from=this.safeString(r,"from","6"),d.to=this.safeString(r,"to","6"));let l=await this.privatePostAssetTransfer(this.extend(d,r)),c=this.safeValue(l,"data",[]),u=this.safeDict(c,0,{});return this.parseTransfer(u,a)}parseTransfer(e,t){let i=this.safeString2(e,"transId","billId"),s=this.safeString(e,"ccy"),a=this.safeCurrencyCode(s,t),n=this.safeNumber(e,"amt"),o=this.safeString(e,"from"),h=this.safeString(e,"to"),d=this.safeValue(this.options,"accountsById",{}),l=this.safeInteger(e,"ts",this.milliseconds()),c=this.safeString(e,"sz");return void 0!==c&&(n=this.parseNumber(r.Y.stringAbs(c))),{info:e,id:i,timestamp:l,datetime:this.iso8601(l),currency:a,amount:n,fromAccount:this.safeString(d,o),toAccount:this.safeString(d,h),status:this.parseTransferStatus(this.safeString(e,"state"))}}parseTransferStatus(e){return this.safeString({success:"ok"},e,e)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e);void 0!==s&&s.length>0&&(i=i+":"+s);let o={ccy:a.id,toAddr:i,dest:"4",amt:this.numberToString(t)},h=this.safeString(r,"network");if(void 0!==h){let e=this.safeValue(this.options,"networks",{});h=this.safeString(e,h.toUpperCase(),h),o.chain=a.id+"-"+h,r=this.omit(r,"network")}let d=this.safeString(r,"fee");if(void 0===d){let e=this.safeValue(a.networks,this.networkIdToCode(h),{});if(void 0===(d=this.safeString(e,"fee")))throw new n.ArgumentsRequired(this.id+' withdraw() requires a "fee" string parameter, network transaction fee must be ≥ 0. Withdrawals to OKCoin or OKX are fee-free, please set "0". Withdrawing to external digital asset address requires network transaction fee.')}o.fee=this.numberToString(d);let l=await this.privatePostAssetWithdrawal(this.extend(o,r)),c=this.safeValue(l,"data",[]),u=this.safeDict(c,0);return this.parseTransaction(u,a)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.ccy=r.id),void 0!==t&&(a.before=Math.max(t-1,0)),void 0!==i&&(a.limit=i),[a,s]=this.handleUntilOption("after",a,s);let n=await this.privateGetAssetDepositHistory(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i,s)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.ccy=r.id),void 0!==t&&(a.before=Math.max(t-1,0)),void 0!==i&&(a.limit=i),[a,s]=this.handleUntilOption("after",a,s);let n=await this.privateGetAssetWithdrawalHistory(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTransactions(o,r,t,i,s)}parseTransactionStatus(e){return this.safeString({"-3":"pending","-2":"canceled","-1":"failed",0:"pending",1:"pending",2:"ok",3:"pending",4:"pending",5:"pending"},e,e)}parseTransaction(e,t){let i,s,r;let a=this.safeString(e,"wdId"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),h=this.safeString2(e,"tag","memo");h=this.safeString2(e,"pmtId",h),void 0!==a?(i="withdrawal",s=a):(s=this.safeString(e,"depId"),i="deposit");let d=this.safeString(e,"ccy"),l=this.safeCurrencyCode(d),c=this.safeNumber(e,"amt"),u=this.parseTransactionStatus(this.safeString(e,"state")),f=this.safeString(e,"txId"),p=this.safeInteger(e,"ts");return r="deposit"===i?0:this.safeNumber(e,"fee"),{info:e,id:s,currency:l,amount:c,network:void 0,addressFrom:n,addressTo:o,address:o,tagFrom:void 0,tagTo:h,tag:h,status:u,type:i,updated:void 0,txid:f,timestamp:p,datetime:this.iso8601(p),comment:void 0,internal:void 0,fee:{currency:l,cost:r}}}async fetchMyTrades(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o={instType:"SPOT"};void 0!==i&&i>100&&(i=100),void 0!==e&&(r=this.market(e),o.instId=r.id),[a,s]=this.handleOptionAndParams(s,"fetchMyTrades","method","privateGetTradeFillsHistory"),n="privateGetTradeFillsHistory"===a?await this.privateGetTradeFillsHistory(this.extend(o,s)):await this.privateGetTradeFills(this.extend(o,s));let h=this.safeList(n,"data",[]);return this.parseTrades(h,r,t,i)}async fetchOrderTrades(e,t,i,s,r={}){return await this.fetchMyTrades(t,i,s,this.extend({order_id:e},r))}async fetchLedger(e,t,i,s={}){let r,a,n;await this.loadMarkets(),[r,s]=this.handleOptionAndParams(s,"fetchLedger","method","privateGetAccountBills");let o={};void 0!==i&&(o.limit=i),void 0!==e&&(a=this.currency(e),o.ccy=a.id),[o,s]=this.handleUntilOption("end",o,s),n="privateGetAccountBillsArchive"===r?await this.privateGetAccountBillsArchive(this.extend(o,s)):"privateGetAssetBills"===r?await this.privateGetAssetBills(this.extend(o,s)):await this.privateGetAccountBills(this.extend(o,s));let h=this.safeValue(n,"data",[]);return this.parseLedger(h,a,t,i)}parseLedgerEntryType(e){return this.safeString({1:"transfer",2:"trade",3:"trade",4:"rebate",5:"trade",6:"transfer",7:"trade",8:"fee",9:"trade",10:"trade",11:"trade"},e,e)}parseLedgerEntry(e,t){let i;let s=this.safeString(e,"ccy"),a=this.safeCurrencyCode(s,t);t=this.safeCurrency(s,t);let n=this.safeInteger(e,"ts"),o=this.safeString(e,"fee");void 0!==o&&(i={cost:this.parseToNumeric(r.Y.stringNeg(o)),currency:a});let h=this.safeString(e,"instId"),d=this.safeSymbol(h,void 0,"-");return this.safeLedgerEntry({info:e,id:this.safeString(e,"billId"),timestamp:n,datetime:this.iso8601(n),account:void 0,referenceId:this.safeString(e,"ordId"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:a,symbol:d,amount:this.safeNumber(e,"balChg"),before:void 0,after:this.safeNumber(e,"bal"),status:"ok",fee:i},t)}sign(e,t="public",i="GET",s={},r,a){let n=Array.isArray(s),o="/api/"+this.version+"/"+this.implodeParams(e,s),h=this.omit(s,this.extractParams(e)),d=this.implodeHostname(this.urls.api.rest)+o;if("public"===t)Object.keys(h).length&&(d+="?"+this.urlencode(h));else if("private"===t){this.checkRequiredCredentials();let e=this.iso8601(this.milliseconds());r={"OK-ACCESS-KEY":this.apiKey,"OK-ACCESS-PASSPHRASE":this.password,"OK-ACCESS-TIMESTAMP":e};let t=e+i+o;if("GET"===i){if(Object.keys(h).length){let e="?"+this.urlencode(h);d+=e,t+=e}}else(n||Object.keys(h).length)&&(t+=a=this.json(h)),r["Content-Type"]="application/json";let s=this.hmac(this.encode(t),this.encode(this.secret),l.s,"base64");r["OK-ACCESS-SIGN"]=s}return{url:d,method:i,body:a,headers:r}}parseBalanceByType(e,t){return"funding"===e?this.parseFundingBalance(t):this.parseTradingBalance(t)}handleErrors(e,t,i,s,r,a,o,h,d){if(!o)return;let l=this.safeString(o,"code");if("0"!==l){let e=this.id+" "+a,t=this.safeValue(o,"data",[]);for(let i=0;i<t.length;i++){let s=t[i],r=this.safeString(s,"sCode"),a=this.safeString(s,"sMsg");this.throwExactlyMatchedException(this.exceptions.exact,r,e),this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),new n.ExchangeError(e)}}}class ij extends s.k{}let iK=ij;class iz extends iK{describe(){return this.deepExtend(super.describe(),{id:"oxfun",name:"OXFUN",countries:["PA"],version:"v3",rateLimit:120,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,deposit:!1,editOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!0,fetchFundingRate:"emulated",fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!1,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!0,withdraw:!0,ws:!0},timeframes:{"1m":"60s","5m":"300s","15m":"900s","30m":"1800s","1h":"3600s","2h":"7200s","4h":"14400s","1d":"86400s"},urls:{logo:"https://github.com/ccxt/ccxt/assets/43336371/6a196124-c1ee-4fae-8573-962071b61a85",referral:"https://ox.fun/register?shareAccountId=5ZUD4a7G",api:{public:"https://api.ox.fun",private:"https://api.ox.fun"},test:{public:"https://stgapi.ox.fun",private:"https://stgapi.ox.fun"},www:"https://ox.fun/",doc:"https://docs.ox.fun/",fees:"https://support.ox.fun/en/articles/8819866-trading-fees"},api:{public:{get:{"v3/markets":1,"v3/assets":1,"v3/tickers":1,"v3/funding/estimates":1,"v3/candles":1,"v3/depth":1,"v3/markets/operational":1,"v3/exchange-trades":1,"v3/funding/rates":1,"v3/leverage/tiers":1}},private:{get:{"v3/account":1,"v3/account/names":1,"v3/wallet":1,"v3/transfer":1,"v3/balances":1,"v3/positions":1,"v3/funding":1,"v3/deposit-addresses":1,"v3/deposit":1,"v3/withdrawal-addresses":1,"v3/withdrawal":1,"v3/withdrawal-fees":1,"v3/orders/status":1,"v3/orders/working":1,"v3/trades":1},post:{"v3/transfer":1,"v3/withdrawal":1,"v3/orders/place":1},delete:{"v3/orders/cancel":1,"v3/orders/cancel-all":1}}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.00020"),taker:this.parseNumber("0.00070"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.00020")],[this.parseNumber("2500000"),this.parseNumber("0.00010")],[this.parseNumber("25000000"),this.parseNumber("0")]],taker:[[this.parseNumber("0"),this.parseNumber("0.00070")],[this.parseNumber("2500000"),this.parseNumber("0.00050")],[this.parseNumber("25000000"),this.parseNumber("0.00040")]]}}},precisionMode:d.kb,options:{sandboxMode:!1,networks:{BTC:"Bitcoin",ERC20:"Ethereum",AVAX:"Avalanche",SOL:"Solana",ARB:"Arbitrum",MATIC:"Polygon",FTM:"Fantom",BNB:"BNBSmartChain",OPTIMISM:"Optimism"},networksById:{Bitcoin:"BTC",Ethereum:"ERC20",Avalanche:"AVAX",Solana:"SOL",Arbitrum:"ARB",Polygon:"MATIC",Fantom:"FTM",Base:"BASE",BNBSmartChain:"BNB",Optimism:"OPTIMISM"}},exceptions:{exact:{"-0010":n.OperationFailed,"-429":n.RateLimitExceeded,"-05001":n.AuthenticationError,"-10001":n.ExchangeError,"-20000":n.BadRequest,"-20001":n.BadRequest,"-20002":n.BadRequest,"-20003":n.NotSupported,"-20005":n.AuthenticationError,"-20006":n.BadRequest,"-20007":n.AuthenticationError,"-20008":n.BadRequest,"-20009":n.BadRequest,"-20010":n.ArgumentsRequired,"-20011":n.ArgumentsRequired,"-20012":n.ArgumentsRequired,"-20013":n.ArgumentsRequired,"-20014":n.BadRequest,"-20015":n.BadSymbol,"-20016":n.BadRequest,"-20017":n.BadRequest,"-20018":n.BadRequest,"-20019":n.BadRequest,"-20020":n.BadRequest,"-20021":n.BadRequest,"-20022":n.ArgumentsRequired,"-20023":n.ArgumentsRequired,"-20024":n.ExchangeError,"-20025":n.AuthenticationError,"-20026":n.BadRequest,"-20027":n.BadRequest,"-20028":n.BadRequest,"-20029":n.BadRequest,"-20030":n.BadRequest,"-20031":n.MarketClosed,"-20032":n.NetworkError,"-20033":n.BadRequest,"-20034":n.BadRequest,"-20050":n.ExchangeError,"-30001":n.BadRequest,"-35034":n.AuthenticationError,"-35046":n.AuthenticationError,"-40001":n.ExchangeError,"-50001":n.ExchangeError,"-300001":n.AccountNotEnabled,"-300011":n.InvalidOrder,"-300012":n.InvalidOrder,"-100005":n.OrderNotFound,"-100006":n.InvalidOrder,"-100008":n.BadRequest,"-100015":n.NetworkError,"-710001":n.ExchangeError,"-710002":n.BadRequest,"-710003":n.BadRequest,"-710004":n.BadRequest,"-710005":n.InsufficientFunds,"-710006":n.InsufficientFunds,"-710007":n.InsufficientFunds,"-000101":n.NetworkError,"-000201":n.NetworkError},broad:{"-20001":n.OperationFailed,"-200050":n.RequestTimeout}}})}async fetchMarkets(e={}){let[t,i]=await Promise.all([this.publicGetV3Markets(e),this.publicGetV3Tickers(e)]),s=this.safeList(t,"data",[]),r=this.safeList(i,"data",[]),a=this.arrayConcat(s,r);return this.parseMarkets(a)}parseMarkets(e){let t=[],i=[];for(let s=0;s<e.length;s++){let r=e[s],a=this.safeString(r,"marketCode");this.inArray(a,t)||(t.push(a),i.push(this.parseMarket(r)))}return i}parseMarket(e){let t,i;let s=this.safeString(e,"marketCode",""),r=s.split("-"),a=this.safeString(r,0),n=this.safeString(r,1),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=o+"/"+h,l=this.safeStringLower(e,"type","spot"),c="future"===l;c&&(l="swap",t="OX",d=d+":"+(i=this.safeCurrencyCode("OX")));let u="spot"===l;return this.safeMarketStructure({id:s,numericId:void 0,symbol:d,base:o,quote:h,settle:i,baseId:a,quoteId:n,settleId:t,type:l,spot:u,margin:!1,swap:c,future:!1,option:!1,active:!0,contract:c,linear:!!c||void 0,inverse:!c&&void 0,taker:this.fees.trading.taker,maker:this.fees.trading.maker,contractSize:c?1:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"minSize"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:this.safeInteger(e,"listedAt"),index:void 0,info:e})}async fetchCurrencies(e={}){let t=await this.publicGetV3Assets(e),i=this.safeList(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t,a,n;let o=i[e],h=this.safeString(o,"asset","").split(".")[0],d=this.safeCurrencyCode(h),l={},c=this.safeList(o,"networkList",[]);for(let e=0;e<c.length;e++){let i=c[e],s=this.safeString(i,"network"),o=this.networkIdToCode(s),h=this.safeBool(i,"canDeposit"),d=this.safeBool(i,"canWithdraw"),u=h&&d,f=this.safeString(i,"minDeposit"),p=this.safeString(i,"minWithdrawal"),m=this.parsePrecision(this.safeString(i,"transactionPrecision"));l[o]={id:s,network:o,margin:void 0,deposit:h,withdraw:d,active:u,fee:void 0,precision:this.parseNumber(m),limits:{deposit:{min:f,max:void 0},withdraw:{min:p,max:void 0}},info:i},(void 0===a||h)&&(a=h),(void 0===n||d)&&(n=d),(void 0===t||r.Y.stringGt(t,m))&&(t=m)}d in s&&(l=this.extend(s[d].networks,l)),s[d]={id:h,code:d,name:void 0,type:void 0,active:void 0,deposit:a,withdraw:n,fee:void 0,precision:this.parseNumber(t),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},networks:l,info:o}}return s}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetV3Tickers(t),s=this.safeList(i,"data",[]);return this.parseTickers(s,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={marketCode:i.id},r=await this.publicGetV3Tickers(this.extend(s,t)),a=this.safeList(r,"data",[]),n=this.safeDict(a,0,{});return this.parseTicker(n,i)}parseTicker(e,t){let i=this.safeInteger(e,"lastUpdatedAt"),s=this.safeString(e,"marketCode"),r=(t=this.safeMarket(s,t)).symbol,a=this.safeString(e,"lastTradedPrice");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open24h"),close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"currencyVolume24h"),quoteVolume:void 0,markPrice:this.safeString(e,"markPrice"),info:e},t)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);t=this.safeString(this.timeframes,t,t);let n={marketCode:a.id,timeframe:t};void 0!==i&&(n.startTime=i),void 0!==s&&(n.limit=s);let o=this.safeInteger(r,"until");void 0!==o?(n.endTime=o,r=this.omit(r,"until")):void 0!==i&&(n.endTime=this.sum(i,6048e5));let h=await this.publicGetV3Candles(this.extend(n,r)),d=this.safeList(h,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,"openedAt"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"currencyVolume")]}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={marketCode:s.id};void 0!==t&&(r.level=t);let a=await this.publicGetV3Depth(this.extend(r,i)),n=this.safeDict(a,"data",{}),o=this.safeInteger(n,"lastUpdatedAt");return this.parseOrderBook(n,s.symbol,o)}async fetchFundingRates(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetV3FundingEstimates(t),s=this.safeList(i,"data",[]);return this.parseFundingRates(s,e)}parseFundingRate(e,t){let i=this.safeString(e,"marketCode");t=this.market(i);let s=this.safeInteger(e,"fundingAt");return{info:e,symbol:t.symbol,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:s,datetime:this.iso8601(s),fundingRate:this.safeNumber(e,"estFundingRate"),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async fetchFundingRateHistory(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={marketCode:r.id};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");void 0!==n&&(a.endTime=n,s=this.omit(s,"until"));let o=await this.publicGetV3FundingRates(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseFundingRateHistories(h,r,t,i)}parseFundingRateHistory(e,t){let i=this.safeString(e,"marketCode"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeInteger(e,"createdAt");return{info:e,symbol:s,fundingRate:this.safeNumber(e,"fundingRate"),timestamp:r,datetime:this.iso8601(r)}}async fetchFundingHistory(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={marketCode:r.id};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");void 0!==n&&(a.endTime=n,s=this.omit(s,"until"));let o=await this.privateGetV3Funding(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseIncomes(h,r,t,i)}parseIncome(e,t){let i=this.safeString(e,"marketCode"),s=this.safeSymbol(i,t),r=this.safeNumber(e,"payment"),a=this.safeCurrencyCode("OX"),n=this.safeString(e,"id"),o=this.safeTimestamp(e,"createdAt"),h=this.safeNumber(e,"fundingRate");return{info:e,symbol:s,code:a,timestamp:o,datetime:this.iso8601(o),id:n,amount:r,rate:h}}async fetchLeverageTiers(e,t={}){await this.loadMarkets();let i=await this.publicGetV3LeverageTiers(t),s=this.safeList(i,"data",[]);return this.parseLeverageTiers(s,e,"marketCode")}parseMarketLeverageTiers(e,t){let i=this.safeString(e,"marketCode");t=this.safeMarket(i,t);let s=this.safeList(e,"tiers",[]),r=[];for(let e=0;e<s.length;e++){let a=s[e];r.push({tier:this.safeNumber(a,"tier"),symbol:this.safeSymbol(i,t),currency:t.settle,minNotional:this.safeNumber(a,"positionFloor"),maxNotional:this.safeNumber(a,"positionCap"),maintenanceMarginRate:this.safeNumber(a,"maintenanceMargin"),maxLeverage:this.safeNumber(a,"leverage"),info:a})}return r}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={marketCode:r.id};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");void 0!==n?(a.endTime=n,s=this.omit(s,"until")):void 0!==t&&(a.endTime=this.sum(t,6048e5));let o=await this.publicGetV3ExchangeTrades(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.marketCode=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");void 0!==n?(a.endTime=n,s=this.omit(s,"until")):void 0!==t&&(a.endTime=this.sum(t,6048e5));let o=await this.privateGetV3Trades(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}parseTrade(e,t){let i=this.safeString(e,"marketCode"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeInteger(e,"matchedAt"),a={cost:this.safeString(e,"fee"),currency:this.safeCurrencyCode(this.safeString(e,"feeAsset"))};return this.safeTrade({id:this.safeString(e,"matchId"),timestamp:r,datetime:this.iso8601(r),symbol:s,type:void 0,order:this.safeString(e,"orderId"),side:this.safeStringLower(e,"side"),takerOrMaker:this.safeStringLower2(e,"matchType","orderMatchType"),price:this.safeString(e,"matchPrice"),amount:this.safeString2(e,"matchQuantity","matchedQuantity"),cost:void 0,fee:a,info:e},t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetV3Balances(e),i=this.safeList(t,"data",[]),s=i[0],r=this.safeString(e,"subAcc");if(void 0!==r)for(let e=0;e<i.length;e++){let t=i[e];if(this.safeString(t,"name")===r){s=t;break}}return this.parseBalance(s)}parseBalance(e){let t={info:e},i=this.safeList(e,"balances",[]);for(let e=0;e<i.length;e++){let s=i[e],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"total"),n.free=this.safeString(s,"available"),n.used=this.safeString(s,"reserved"),t[a]=n}return this.safeBalance(t)}async fetchAccounts(e={}){await this.loadMarkets();let t=await this.privateGetV3AccountNames(e),i=this.safeList(t,"data",[]);return this.parseAccounts(i,e)}parseAccount(e){return{id:this.safeString(e,"accountId"),type:void 0,code:void 0,info:e}}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n={asset:a.id,quantity:this.currencyToPrecision(e,t),fromAccount:i,toAccount:s},o=await this.privatePostV3Transfer(this.extend(n,r)),h=this.safeDict(o,"data",{});return this.parseTransfer(h,a)}async fetchTransfers(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.asset=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");void 0!==n?(a.endTime=n,s=this.omit(s,"until")):void 0!==t&&(a.endTime=this.sum(t,6048e5));let o=await this.privateGetV3Transfer(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransfers(h,r,t,i)}parseTransfer(e,t){let i=this.safeInteger(e,"transferredAt"),s=this.safeString(e,"asset");return{id:this.safeString(e,"id"),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"quantity"),fromAccount:this.safeString(e,"fromAccount"),toAccount:this.safeString(e,"toAccount"),status:this.parseTransferStatus(this.safeString(e,"status")),info:e}}parseTransferStatus(e){return this.safeString({COMPLETED:"ok"},e,e)}async fetchDepositAddress(e,t={}){let i=this.safeString(t,"network"),s=this.networkCodeToId(i,e);if(void 0===s)throw new n.BadRequest(this.id+" fetchDepositAddress() require network parameter");await this.loadMarkets();let r=this.currency(e),a={asset:r.id,network:s};t=this.omit(t,"network");let o=await this.privateGetV3DepositAddresses(this.extend(a,t)),h=this.safeDict(o,"data",{});return this.parseDepositAddress(h,r)}parseDepositAddress(e,t){let i=this.safeString(e,"address");return this.checkAddress(i),{info:e,currency:t.code,network:void 0,address:i,tag:void 0}}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.asset=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");void 0!==n&&(a.endTime=n,s=this.omit(s,"until"));let o=await this.privateGetV3Deposit(this.extend(a,s)),h=this.safeList(o,"data",[]);for(let e=0;e<h.length;e++)h[e].type="deposit";return this.parseTransactions(h,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.asset=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");void 0!==n&&(a.endTime=n,s=this.omit(s,"until"));let o=await this.privateGetV3Withdrawal(this.extend(a,s)),h=this.safeList(o,"data",[]);for(let e=0;e<h.length;e++)h[e].type="withdrawal";return this.parseTransactions(h,r,t,i)}parseTransactions(e,t,i,s,r={}){let a=[];for(let i=0;i<e.length;i++){e[i]=this.extend(e[i],r);let s=this.parseTransaction(e[i],t);a.push(s)}a=this.sortBy(a,"timestamp");let n=void 0!==t?t.code:void 0;return this.filterByCurrencySinceLimit(a,n,i,s)}parseTransaction(e,t){let i,s,r,a;let n=this.safeString(e,"id"),o=this.safeString(e,"type");e=this.omit(e,"type"),"deposit"===o?(i=this.safeString(e,"address"),r=this.parseDepositStatus(this.safeString(e,"status"))):"withdrawal"===o&&(s=this.safeString(e,"address"),r=this.parseWithdrawalStatus(this.safeString(e,"status")));let h=this.safeString(e,"txId"),d=this.safeString(e,"asset"),l=this.safeCurrencyCode(d,t),c=this.safeString(e,"network"),u=this.networkIdToCode(c),f=this.safeInteger2(e,"creditedAt","requestedAt"),p=this.safeNumber(e,"quantity"),m=this.safeNumber(e,"fee");return void 0!==m&&(a={cost:m,currency:l}),{info:e,id:n,txid:h,timestamp:f,datetime:this.iso8601(f),network:u,address:i,addressTo:s,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:o,amount:p,currency:l,status:r,updated:void 0,internal:void 0,comment:void 0,fee:a}}parseDepositStatus(e){return this.safeString({COMPLETED:"ok"},e,e)}parseWithdrawalStatus(e){return this.safeString({COMPLETED:"ok",PROCESSING:"pending","IN SWEEPING":"pending",PENDING:"pending","ON HOLD":"pending",CANCELED:"canceled",FAILED:"failed"},e,e)}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let n=this.currency(e),o=this.currencyToPrecision(e,t),h={asset:n.id,address:i,quantity:o};void 0!==s&&(h.memo=s),[a,r]=this.handleNetworkCodeAndParams(r),void 0!==a&&(h.network=this.networkCodeToId(a)),h.externalFee=!1;let d=await this.privatePostV3Withdrawal(this.extend(h,r)),l=this.safeDict(d,"data",{});return l.type="withdrawal",this.parseTransaction(l,n)}async fetchPositions(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.privateGetV3Positions(t),s=this.safeList(i,"data",[]),r=[];for(let e=0;e<s.length;e++){let t=s[e],i=this.safeList(t,"positions",[]);r=this.arrayConcat(r,i)}return this.parsePositions(r,e)}parsePosition(e,t){let i=this.safeString(e,"marketCode");return t=this.safeMarket(i,t),this.safePosition({info:e,id:void 0,symbol:t.symbol,notional:void 0,marginMode:"cross",liquidationPrice:this.safeNumber(e,"estLiquidationPrice"),entryPrice:this.safeNumber(e,"entryPrice"),unrealizedPnl:this.safeNumber(e,"positionPnl"),realizedPnl:void 0,percentage:void 0,contracts:this.safeNumber(e,"position"),contractSize:void 0,markPrice:this.safeNumber(e,"markPrice"),lastPrice:void 0,side:void 0,hedged:void 0,timestamp:void 0,datetime:void 0,lastUpdateTimestamp:this.safeInteger(e,"lastUpdatedAt"),maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:void 0,marginRatio:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n={responseType:this.safeString(a,"responseType","FULL"),timestamp:this.safeInteger(a,"timestamp",this.milliseconds())};a=this.omit(a,["responseType","timestamp"]);let o=this.safeInteger(a,"recvWindow");void 0!==o&&(n.recvWindow=o,a=this.omit(a,"recvWindow"));let h=this.createOrderRequest(e,t,i,s,r,a);n.orders=[h];let d=await this.privatePostV3OrdersPlace(n),l=this.safeList(d,"data",[]),c=this.safeDict(l,0,{});return this.parseOrder(c)}async createOrders(e,t={}){await this.loadMarkets();let i=[];for(let t=0;t<e.length;t++){let s=e[t],r=this.safeString(s,"symbol"),a=this.safeString(s,"type"),n=this.safeString(s,"side"),o=this.safeNumber(s,"amount"),h=this.safeNumber(s,"price"),d=this.safeDict(s,"params",{}),l=this.createOrderRequest(r,a,n,o,h,d);i.push(l)}let s={responseType:"FULL",timestamp:this.milliseconds(),orders:i},r=await this.privatePostV3OrdersPlace(this.extend(s,t)),a=this.safeList(r,"data",[]);return this.parseOrders(a)}createOrderRequest(e,t,i,s,r,a={}){let n;let o={marketCode:this.market(e).id,side:i.toUpperCase(),source:1e3},h=this.safeString2(a,"cost","amount");void 0!==h?(o.amount=h,a=this.omit(a,["cost","amount"])):o.quantity=s;let d=this.safeString2(a,"triggerPrice","stopPrice"),l=t.toUpperCase();void 0!==d&&("MARKET"===l?l="STOP_MARKET":"LIMIT"===l&&(l="STOP_LIMIT"),o.stopPrice=d,a=this.omit(a,["triggerPrice","stopPrice"])),o.orderType=l,"STOP_LIMIT"===l?o.limitPrice=r:void 0!==r&&(o.price=r);let c="MARKET"===l||"STOP_MARKET"===l;[n,a]=this.handlePostOnly(c,!1,a);let u=this.safeStringUpper(a,"timeInForce");return n&&"MAKER_ONLY_REPRICE"!==u&&(o.timeInForce="MAKER_ONLY"),this.extend(o,a)}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new n.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return await this.createOrder(e,"market","buy",void 0,void 0,this.extend({cost:t},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetV3OrdersStatus(this.extend({orderId:e},i)),r=this.safeDict(s,"data",{});return this.parseOrder(r)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privateGetV3OrdersWorking(this.extend({},s)),n=this.safeList(a,"data",[]);return this.parseOrders(n,r,t,i)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");let s=this.market(t).id,r={timestamp:this.milliseconds(),responseType:"FULL"},a={marketCode:s,orderId:e},o=this.safeInteger(i,"clientOrderId");void 0!==o&&(a.clientOrderId=o),r.orders=[a];let h=await this.privateDeleteV3OrdersCancel(this.extend(r,i)),d=this.safeList(h,"data",[]),l=this.safeDict(d,0,{});return this.parseOrder(l)}async cancelAllOrders(e,t={}){let i={};if(void 0!==e){let t=this.market(e);i.marketCode=t.id}return await this.privateDeleteV3OrdersCancelAll(this.extend(i,t))}async cancelOrders(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r=s.id,a={timestamp:this.milliseconds(),responseType:"FULL"},o=[];for(let t=0;t<e.length;t++){let i={marketCode:r,orderId:e[t]};o.push(i)}a.orders=o;let h=await this.privateDeleteV3OrdersCancel(this.extend(a,i)),d=this.safeList(h,"data",[]);return this.parseOrders(d,s)}parseOrder(e,t){let i;let s=this.safeString(e,"marketCode");t=this.safeMarket(s,t);let r=this.safeInteger(e,"createdAt"),a=this.safeString(e,"feeInstrumentId");void 0!==a&&(i={currency:this.safeCurrencyCode(a),cost:this.safeNumber(e,"fees")});let n=this.safeString(e,"status");void 0!==this.safeInteger(e,"code")&&(n="rejected");let o=this.safeString(e,"stopPrice");return this.safeOrder({id:this.safeString(e,"orderId"),clientOrderId:this.safeString(e,"clientOrderId"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:this.safeInteger(e,"lastMatchedAt"),lastUpdateTimestamp:this.safeInteger(e,"lastModifiedAt"),status:this.parseOrderStatus(n),symbol:t.symbol,type:this.parseOrderType(this.safeString(e,"orderType")),timeInForce:this.parseOrderTimeInForce(this.safeString(e,"timeInForce")),side:this.safeStringLower(e,"side"),price:this.safeStringN(e,["price","matchPrice","limitPrice"]),average:void 0,amount:this.safeString2(e,"totalQuantity","quantity"),filled:this.safeString2(e,"cumulativeMatchedQuantity","matchQuantity"),remaining:this.safeString(e,"remainQuantity"),triggerPrice:o,stopLossPrice:o,cost:this.omitZero(this.safeString(e,"amount")),trades:void 0,fee:i,info:e},t)}parseOrderStatus(e){return this.safeString({OPEN:"open",PARTIALLY_FILLED:"open",PARTIAL_FILL:"open",FILLED:"closed",CANCELED:"canceled",CANCELED_BY_USER:"canceled",CANCELED_BY_MAKER_ONLY:"rejected",CANCELED_BY_FOK:"rejected",CANCELED_ALL_BY_IOC:"rejected",CANCELED_PARTIAL_BY_IOC:"canceled",CANCELED_BY_SELF_TRADE_PROTECTION:"rejected"},e,e)}parseOrderType(e){return this.safeString({LIMIT:"limit",STOP_LIMIT:"limit",MARKET:"market",STOP_MARKET:"market"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",IOC:"IOC",FOK:"FOK",MAKER_ONLY:"PO",MAKER_ONLY_REPRICE:"PO"},e,e)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t],o=n+"/"+e,h="";if("GET"===i&&0!==(h=this.urlencode(s)).length&&(o+="?"+h),"private"===t){this.checkRequiredCredentials();let t=this.milliseconds(),o=this.iso8601(t).split(".")[0],d=this.nonce(),c=n.split("//");("POST"===i||"DELETE"===i)&&(h=a=this.json(s));let u=o+"\n"+d.toString()+"\n"+i+"\n"+c[1]+"\n/"+e+"\n"+h,f=this.hmac(this.encode(u),this.encode(this.secret),l.s,"base64");r={"Content-Type":"application/json",AccessKey:this.apiKey,Timestamp:o,Signature:f,Nonce:d}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&200!==e){let e=this.safeString(o,"code",void 0),t=this.id+" "+a;throw this.throwBroadlyMatchedException(this.exceptions.broad,a,t),this.throwExactlyMatchedException(this.exceptions.exact,e,t),new n.ExchangeError(t)}}}class iY extends s.k{}let iX=iY;class i$ extends iX{describe(){return this.deepExtend(super.describe(),{id:"p2b",name:"p2b",countries:["LT"],rateLimit:100,version:"v2",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createMarketOrder:!1,createOrder:!0,createOrders:!1,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!1,fetchLedgerEntry:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawAddresses:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","1h":"1h","1d":"1d"},urls:{extension:".json",referral:"https://p2pb2b.com?referral=ee784c53",logo:"https://github.com/ccxt/ccxt/assets/43336371/8da13a80-1f0a-49be-bb90-ff8b25164755",api:{public:"https://api.p2pb2b.com/api/v2/public",private:"https://api.p2pb2b.com/api/v2"},www:"https://p2pb2b.com/",doc:"https://github.com/P2B-team/p2b-api-docs/blob/master/api-doc.md",fees:"https://p2pb2b.com/fee-schedule/"},api:{public:{get:{markets:1,market:1,tickers:1,ticker:1,book:1,history:1,"depth/result":1,"market/kline":1}},private:{post:{"account/balances":1,"account/balance":1,"order/new":1,"order/cancel":1,orders:1,"account/market_order_history":1,"account/market_deal_history":1,"account/order":1,"account/order_history":1,"account/executed_history":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:[[this.parseNumber("0"),this.parseNumber("0.2")],[this.parseNumber("1"),this.parseNumber("0.19")],[this.parseNumber("5"),this.parseNumber("0.18")],[this.parseNumber("10"),this.parseNumber("0.17")],[this.parseNumber("25"),this.parseNumber("0.16")],[this.parseNumber("75"),this.parseNumber("0.15")],[this.parseNumber("100"),this.parseNumber("0.14")],[this.parseNumber("150"),this.parseNumber("0.13")],[this.parseNumber("300"),this.parseNumber("0.12")],[this.parseNumber("450"),this.parseNumber("0.11")],[this.parseNumber("500"),this.parseNumber("0.1")]],maker:[[this.parseNumber("0"),this.parseNumber("0.2")],[this.parseNumber("1"),this.parseNumber("0.18")],[this.parseNumber("5"),this.parseNumber("0.16")],[this.parseNumber("10"),this.parseNumber("0.14")],[this.parseNumber("25"),this.parseNumber("0.12")],[this.parseNumber("75"),this.parseNumber("0.1")],[this.parseNumber("100"),this.parseNumber("0.08")],[this.parseNumber("150"),this.parseNumber("0.06")],[this.parseNumber("300"),this.parseNumber("0.04")],[this.parseNumber("450"),this.parseNumber("0.02")],[this.parseNumber("500"),this.parseNumber("0.01")]]}},commonCurrencies:{},precisionMode:d.kb,exceptions:{1001:n.AuthenticationError,1002:n.AuthenticationError,1003:n.AuthenticationError,1004:n.AuthenticationError,1005:n.AuthenticationError,1006:n.AuthenticationError,1007:n.AuthenticationError,1008:n.AuthenticationError,1009:n.AuthenticationError,1010:n.AuthenticationError,1011:n.AuthenticationError,1012:n.AuthenticationError,1013:n.AuthenticationError,1014:n.AuthenticationError,1015:n.AuthenticationError,1016:n.AuthenticationError,2010:n.BadRequest,2020:n.BadRequest,2021:n.BadRequest,2030:n.BadRequest,2040:n.InsufficientFunds,2050:n.BadRequest,2051:n.BadRequest,2052:n.BadRequest,2060:n.BadRequest,2061:n.BadRequest,2062:n.BadRequest,2070:n.BadRequest,3001:n.BadRequest,3020:n.BadRequest,3030:n.BadRequest,3040:n.BadRequest,3050:n.BadRequest,3060:n.BadRequest,3070:n.BadRequest,3080:n.BadRequest,3090:n.BadRequest,3100:n.BadRequest,3110:n.BadRequest,4001:n.ExchangeNotAvailable,6010:n.InsufficientFunds},options:{}})}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e),i=this.safeValue(t,"result",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"name"),i=this.safeString(e,"stock"),s=this.safeString(e,"money"),r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s),n=this.safeValue(e,"limits"),o=this.safeString(n,"max_amount"),h=this.safeString(n,"max_price");return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(n,"step_size"),price:this.safeNumber(n,"tick_size")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_amount"),max:this.parseNumber(this.omitZero(o))},price:{min:this.safeNumber(n,"min_price"),max:this.parseNumber(this.omitZero(h))},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=this.safeValue(i,"result",{});return this.parseTickers(s,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={market:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeValue(r,"result",{}),n=this.safeIntegerProduct(r,"cache_time",1e3);return this.extend({timestamp:n,datetime:this.iso8601(n)},this.parseTicker(a,i))}parseTicker(e,t){let i=this.safeIntegerProduct(e,"at",1e3);"ticker"in e&&(e=this.safeValue(e,"ticker"));let s=this.safeString(e,"last");return this.safeTicker({symbol:this.safeString(t,"symbol"),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:s,last:s,previousClose:void 0,change:void 0,percentage:this.safeString(e,"change"),average:void 0,baseVolume:this.safeString2(e,"vol","volume"),quoteVolume:this.safeString(e,"deal"),info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={market:s.id};void 0!==t&&(r.limit=t);let a=await this.publicGetDepthResult(this.extend(r,i)),n=this.safeValue(a,"result",{}),o=this.safeIntegerProduct(a,"current_time",1e3);return this.parseOrderBook(n,s.symbol,o,"bids","asks",0,1)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.safeInteger(s,"lastId");if(void 0===r)throw new n.ArgumentsRequired(this.id+' fetchTrades () requires an extra parameter params["lastId"]');let a=this.market(e),o={market:a.id,lastId:r};void 0!==i&&(o.limit=i);let h=await this.publicGetHistory(this.extend(o,s)),d=this.safeList(h,"result",[]);return this.parseTrades(d,a,t,i)}parseTrade(e,t){let i=this.safeIntegerProduct2(e,"time","deal_time",1e3),s=this.safeString(e,"role");return"1"===s?s="maker":"2"===s&&(s="taker"),this.safeTrade({info:e,id:this.safeString2(e,"id","deal_id"),timestamp:i,datetime:this.iso8601(i),symbol:this.safeString(t,"symbol"),order:this.safeString2(e,"dealOrderId","deal_order_id"),type:void 0,side:this.safeString2(e,"type","side"),takerOrMaker:s,price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:this.safeString(e,"deal"),fee:{currency:t.quote,cost:this.safeString2(e,"fee","deal_fee")}},t)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={market:a.id,interval:t};void 0!==s&&(n.limit=s);let o=await this.publicGetMarketKline(this.extend(n,r)),h=this.safeList(o,"result",[]);return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.safeIntegerProduct(e,0,1e3),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostAccountBalances(e),i=this.safeValue(t,"result",{});return this.parseBalance(i)}parseBalance(e){let t={info:e},i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s],a=e[r],n=this.safeCurrencyCode(r),o=this.safeString(a,"freeze"),h={free:this.safeString(a,"available"),used:o};t[n]=h}return this.safeBalance(t)}async createOrder(e,t,i,s,r,a={}){if(await this.loadMarkets(),"market"===t)throw new n.BadRequest(this.id+' createOrder () can only accept orders with type "limit"');let o=this.market(e),h={market:o.id,side:i,amount:this.amountToPrecision(e,s),price:this.priceToPrecision(e,r)},d=await this.privatePostOrderNew(this.extend(h,a)),l=this.safeDict(d,"result");return this.parseOrder(l,o)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s={market:this.market(t).id,orderId:e},r=await this.privatePostOrderCancel(this.extend(s,i)),a=this.safeDict(r,"result");return this.parseOrder(a)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders () requires the symbol argument");await this.loadMarkets();let r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=i);let o=await this.privatePostOrders(this.extend(a,s)),h=this.safeList(o,"result",[]);return this.parseOrders(h,r,t,i)}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=this.safeMarket(t),n={orderId:e};void 0!==s&&(n.limit=s);let o=await this.privatePostAccountOrder(this.extend(n,r)),h=this.safeValue(o,"result",{}),d=this.safeList(h,"records",[]);return this.parseTrades(d,a,i,s)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.safeInteger(s,"until");if(s=this.omit(s,"until"),void 0===r&&(r=void 0===t?this.milliseconds():t+864e5),void 0===t&&(t=r-864e5),r-t>864e5)throw new n.BadRequest(this.id+' fetchMyTrades () the time between since and params["until"] cannot be greater than 24 hours');let a=this.market(e),o={market:a.id,startTime:this.parseToInt(t/1e3),endTime:this.parseToInt(r/1e3)};void 0!==i&&(o.limit=i);let h=await this.privatePostAccountMarketDealHistory(this.extend(o,s)),d=this.safeValue(h,"result",{}),l=this.safeList(d,"deals",[]);return this.parseTrades(l,a,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeInteger(s,"until");if(s=this.omit(s,"until"),void 0!==e&&(r=this.market(e)),void 0===a&&(a=void 0===t?this.milliseconds():t+864e5),void 0===t&&(t=a-864e5),a-t>864e5)throw new n.BadRequest(this.id+' fetchClosedOrders () the time between since and params["until"] cannot be greater than 24 hours');let o={startTime:this.parseToInt(t/1e3),endTime:this.parseToInt(a/1e3)};void 0!==r&&(o.market=r.id),void 0!==i&&(o.limit=i);let h=await this.privatePostAccountOrderHistory(this.extend(o,s)),d=this.safeValue(h,"result"),l=[],c=Object.keys(d);for(let e=0;e<c.length;e++){let s=d[c[e]],a=this.parseOrders(s,r,t,i);l=this.arrayConcat(l,a)}return l}parseOrder(e,t){let i=this.safeIntegerProduct2(e,"timestamp","ctime",1e3),s=this.safeString(e,"market");return t=this.safeMarket(s,t),this.safeOrder({info:e,id:this.safeString2(e,"id","orderId"),clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:t.symbol,type:this.safeString(e,"type"),timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"side"),price:this.safeString(e,"price"),triggerPrice:void 0,amount:this.safeString(e,"amount"),cost:void 0,average:void 0,filled:this.safeString(e,"dealStock"),remaining:this.safeString(e,"left"),status:void 0,fee:{currency:t.quote,cost:this.safeString(e,"dealFee")},trades:void 0},t)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t]+"/"+this.implodeParams(e,s);if(s=this.omit(s,this.extractParams(e)),"GET"===i&&Object.keys(s).length&&(n+="?"+this.urlencode(s)),"private"===t){s.request="/api/v2/"+e,s.nonce=this.nonce().toString();let t=this.stringToBase64(this.json(s));r={"Content-Type":"application/json","X-TXC-APIKEY":this.apiKey,"X-TXC-PAYLOAD":t,"X-TXC-SIGNATURE":this.hmac(this.encode(t),this.encode(this.secret),A.Zf)},a=this.json(s)}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,h){if(void 0!==n&&400===e){let e=this.safeValue(n,"error"),t=this.safeString(e,"code"),i=this.id+" "+this.json(n);this.throwExactlyMatchedException(this.exceptions,t,i)}}}class iQ extends s.k{}let iZ=iQ;class iJ extends iZ{describe(){return this.deepExtend(super.describe(),{id:"paradex",name:"Paradex",countries:[],version:"v1",rateLimit:50,certified:!1,pro:!0,dex:!0,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,borrowCrossMargin:!1,borrowIsolatedMargin:!1,cancelAllOrders:!0,cancelAllOrdersAfter:!1,cancelOrder:!1,cancelOrders:!1,cancelOrdersForSymbols:!1,closeAllPositions:!1,closePosition:!1,createMarketBuyOrderWithCost:!1,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!1,createReduceOnlyOrder:!1,createStopOrder:!0,createTriggerOrder:!0,editOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDeposits:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchLiquidations:!0,fetchMarginMode:void 0,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyLiquidations:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!1,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":1,"3m":3,"5m":5,"15m":15,"30m":30,"1h":60},hostname:"paradex.trade",urls:{logo:"https://github.com/user-attachments/assets/84628770-784e-4ec4-a759-ec2fbb2244ea",api:{v1:"https://api.prod.{hostname}/v1"},test:{v1:"https://api.testnet.{hostname}/v1"},www:"https://www.paradex.trade/",doc:"https://docs.api.testnet.paradex.trade/",fees:"https://docs.paradex.trade/getting-started/trading-fees",referral:"https://app.paradex.trade/r/ccxt24"},api:{public:{get:{"bbo/{market}":1,"funding/data":1,markets:1,"markets/klines":1,"markets/summary":1,"orderbook/{market}":1,insurance:1,"referrals/config":1,"system/config":1,"system/state":1,"system/time":1,trades:1}},private:{get:{account:1,"account/profile":1,balance:1,fills:1,"funding/payments":1,positions:1,tradebusts:1,transactions:1,liquidations:1,orders:1,"orders-history":1,"orders/by_client_id/{client_id}":1,"orders/{order_id}":1,"points_data/{market}/{program}":1,"referrals/summary":1,transfers:1},post:{"account/profile/referral_code":1,"account/profile/username":1,auth:1,onboarding:1,orders:1},delete:{orders:1,"orders/by_client_id/{client_id}":1,"orders/{order_id}":1}}},fees:{swap:{taker:this.parseNumber("0.0002"),maker:this.parseNumber("0.0002")},spot:{taker:this.parseNumber("0.0002"),maker:this.parseNumber("0.0002")}},requiredCredentials:{apiKey:!1,secret:!1,walletAddress:!0,privateKey:!0},exceptions:{exact:{VALIDATION_ERROR:n.AuthenticationError,BINDING_ERROR:n.OperationRejected,INTERNAL_ERROR:n.ExchangeError,NOT_FOUND:n.BadRequest,SERVICE_UNAVAILABLE:n.ExchangeError,INVALID_REQUEST_PARAMETER:n.BadRequest,ORDER_ID_NOT_FOUND:n.InvalidOrder,ORDER_IS_CLOSED:n.InvalidOrder,ORDER_IS_NOT_OPEN_YET:n.InvalidOrder,CLIENT_ORDER_ID_NOT_FOUND:n.InvalidOrder,DUPLICATED_CLIENT_ID:n.InvalidOrder,INVALID_PRICE_PRECISION:n.OperationRejected,INVALID_SYMBOL:n.OperationRejected,INVALID_TOKEN:n.OperationRejected,INVALID_ETHEREUM_ADDRESS:n.OperationRejected,INVALID_ETHEREUM_SIGNATURE:n.OperationRejected,INVALID_STARKNET_ADDRESS:n.OperationRejected,INVALID_STARKNET_SIGNATURE:n.OperationRejected,STARKNET_SIGNATURE_VERIFICATION_FAILED:n.AuthenticationError,BAD_STARKNET_REQUEST:n.BadRequest,ETHEREUM_SIGNER_MISMATCH:n.BadRequest,ETHEREUM_HASH_MISMATCH:n.BadRequest,NOT_ONBOARDED:n.BadRequest,INVALID_TIMESTAMP:n.BadRequest,INVALID_SIGNATURE_EXPIRATION:n.AuthenticationError,ACCOUNT_NOT_FOUND:n.AuthenticationError,INVALID_ORDER_SIGNATURE:n.AuthenticationError,PUBLIC_KEY_INVALID:n.BadRequest,UNAUTHORIZED_ETHEREUM_ADDRESS:n.BadRequest,ETHEREUM_ADDRESS_ALREADY_ONBOARDED:n.BadRequest,MARKET_NOT_FOUND:n.BadRequest,ALLOWLIST_ENTRY_NOT_FOUND:n.BadRequest,USERNAME_IN_USE:n.AuthenticationError,GEO_IP_BLOCK:n.PermissionDenied,ETHEREUM_ADDRESS_BLOCKED:n.PermissionDenied,PROGRAM_NOT_FOUND:n.BadRequest,INVALID_DASHBOARD:n.OperationRejected,MARKET_NOT_OPEN:n.BadRequest,INVALID_REFERRAL_CODE:n.OperationRejected,PARENT_ADDRESS_ALREADY_ONBOARDED:n.BadRequest,INVALID_PARENT_ACCOUNT:n.OperationRejected,INVALID_VAULT_OPERATOR_CHAIN:n.OperationRejected,VAULT_OPERATOR_ALREADY_ONBOARDED:n.OperationRejected,VAULT_NAME_IN_USE:n.OperationRejected,BATCH_SIZE_OUT_OF_RANGE:n.OperationRejected,ISOLATED_MARKET_ACCOUNT_MISMATCH:n.OperationRejected,POINTS_SUMMARY_NOT_FOUND:n.OperationRejected,"-32700":n.BadRequest,"-32600":n.BadRequest,"-32601":n.BadRequest,"-32602":n.BadRequest,"-32603":n.ExchangeError,100:n.BadRequest,40110:n.AuthenticationError,40111:n.AuthenticationError,40112:n.PermissionDenied},broad:{"missing or malformed jwt":n.AuthenticationError}},precisionMode:d.kb,commonCurrencies:{},options:{paradexAccount:void 0,broker:"CCXT"}})}async fetchTime(e={}){let t=await this.publicGetSystemTime(e);return this.safeInteger(t,"server_time")}async fetchStatus(e={}){let t=await this.publicGetSystemState(e);return{status:"ok"===this.safeString(t,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e),i=this.safeList(t,"results");return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"symbol"),i=this.safeString(e,"quote_currency"),s=this.safeString(e,"base_currency"),r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s),n=this.safeString(e,"settlement_currency"),o=this.safeCurrencyCode(n),h=this.safeInteger(e,"expiry_at"),d=this.parseNumber("0.0003"),l=this.parseNumber("-0.00005");return this.safeMarketStructure({id:t,symbol:a+"/"+r+":"+o,base:a,quote:r,settle:o,baseId:s,quoteId:i,settleId:n,type:"swap",spot:!1,margin:void 0,swap:!0,future:!1,option:!1,active:this.safeBool(e,"enableTrading"),contract:!0,linear:!0,inverse:void 0,taker:d,maker:l,contractSize:this.parseNumber("1"),expiry:0===h?void 0:h,expiryDatetime:0===h?void 0:this.iso8601(h),strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"order_size_increment"),price:this.safeNumber(e,"price_tick_size")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:this.safeNumber(e,"max_order_size")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(e,"min_notional"),max:void 0}},created:void 0,info:e})}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={resolution:this.safeString(this.timeframes,t,t),symbol:a.id},o=this.milliseconds(),h=this.parseTimeframe(t),d=this.safeInteger2(r,"until","till",o);r=this.omit(r,["until","till"]),void 0!==i?(n.start_at=i,void 0!==s?n.end_at=this.sum(i,h*(s+1)*1e3)-1:n.end_at=d):(n.end_at=d,void 0!==s?n.start_at=d-h*(s+1)*1e3+1:n.start_at=d-101e3*h+1);let l=await this.publicGetMarketsKlines(this.extend(n,r)),c=this.safeList(l,"results",[]);return this.parseOHLCVs(c,a,t,i,s)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchTickers(e,t={}){await this.loadMarkets();let i={};void 0!==(e=this.marketSymbols(e))?Array.isArray(e)?i.market=this.marketId(e[0]):i.market=this.marketId(e):i.market="ALL";let s=await this.publicGetMarketsSummary(this.extend(i,t)),r=this.safeList(s,"results",[]);return this.parseTickers(r,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={market:i.id},r=await this.publicGetMarketsSummary(this.extend(s,t)),a=this.safeList(r,"results",[]),n=this.safeDict(a,0,{});return this.parseTicker(n,i)}parseTicker(e,t){let i=this.safeString(e,"price_change_rate_24h");void 0!==i&&(i=r.Y.stringMul(i,"100"));let s=this.safeString(e,"last_traded_price"),a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeInteger(e,"created_at");return this.safeTicker({symbol:n,timestamp:o,datetime:this.iso8601(o),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:i,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"volume_24h"),markPrice:this.safeString(e,"mark_price"),info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={market:s.id},a=await this.publicGetOrderbookMarket(this.extend(r,i));void 0!==t&&(r.depth=t);let n=this.safeInteger(a,"last_updated_at"),o=this.parseOrderBook(a,s.symbol,n);return o.nonce=this.safeInteger(a,"seq_no"),o}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchTrades","paginate"),r)return await this.fetchPaginatedCallCursor("fetchTrades",e,t,i,s,"next","cursor",void 0,100);let a=this.market(e),n={market:a.id};void 0!==i&&(n.page_size=i),void 0!==t&&(n.start_at=t),[n,s]=this.handleUntilOption("end_at",n,s);let o=await this.publicGetTrades(this.extend(n,s)),h=this.safeList(o,"results",[]);for(let e=0;e<h.length;e++)h[e].next=this.safeString(o,"next");return this.parseTrades(h,a,t,i)}parseTrade(e,t){let i=this.safeString(e,"market");t=this.safeMarket(i,t);let s=this.safeString(e,"id"),r=this.safeInteger(e,"created_at"),a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeStringLower(e,"side"),h=this.safeStringLower(e,"liquidity","taker"),d=this.safeString(e,"fee_currency"),l=this.safeCurrencyCode(d);return this.safeTrade({info:e,id:s,order:this.safeString(e,"order_id"),timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,type:void 0,takerOrMaker:"taker"===h?"taker":"maker",side:o,price:a,amount:n,cost:void 0,fee:{cost:this.safeString(e,"fee"),currency:l,rate:void 0}},t)}async fetchOpenInterest(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.contract)throw new n.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");let s={market:i.id},r=await this.publicGetMarketsSummary(this.extend(s,t)),a=this.safeList(r,"results",[]),o=this.safeDict(a,0,{});return this.parseOpenInterest(o,i)}parseOpenInterest(e,t){let i=this.safeInteger(e,"created_at"),s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t)).symbol;return this.safeOpenInterest({symbol:r,openInterestAmount:this.safeString(e,"open_interest"),openInterestValue:void 0,timestamp:i,datetime:this.iso8601(i),info:e},t)}hashMessage(e){return"0x"+this.hash(e,tZ.lY,"hex")}signHash(e,t){let i=(0,tB.h1)(e.slice(-64),t.slice(-64),tJ.bI,void 0),s=i.r,r=i.s,a=this.intToBase16(this.sum(27,i.v));return"0x"+s.padStart(64,"0")+r.padStart(64,"0")+a}signMessage(e,t){return this.signHash(this.hashMessage(e),t.slice(-64))}async getSystemConfig(){let e=this.safeDict(this.options,"systemConfig");if(void 0!==e)return e;let t=await this.publicGetSystemConfig();return this.options.systemConfig=t,t}async prepareParadexDomain(e=!1){let t=await this.getSystemConfig();return!0===e?{name:"Paradex",chainId:t.l1_chain_id,version:"1"}:{name:"Paradex",chainId:t.starknet_chain_id,version:1}}async retrieveAccount(){let e=this.safeDict(this.options,"paradexAccount");if(void 0!==e)return e;this.checkRequiredCredentials();let t=await this.getSystemConfig(),i=await this.prepareParadexDomain(!0),s=this.ethEncodeStructuredData(i,{Constant:[{name:"action",type:"string"}]},{action:"STARK Key"}),r=this.signMessage(s,this.privateKey),a=this.retrieveStarkAccount(r,t.paraclear_account_hash,t.paraclear_account_proxy_hash);return this.options.paradexAccount=a,a}async onboarding(e={}){let t=await this.retrieveAccount(),i=await this.prepareParadexDomain(),s=this.starknetEncodeStructuredData(i,{Constant:[{name:"action",type:"felt"}]},{action:"Onboarding"},t.address),r=this.starknetSign(s,t.privateKey);return e.signature=r,e.account=t.address,e.public_key=t.publicKey,await this.privatePostOnboarding(e)}async authenticateRest(e={}){let t=this.safeString(this.options,"authToken"),i=this.nonce();if(void 0!==t&&i<this.safeInteger(this.options,"expires"))return t;let s=await this.retrieveAccount(),r=i+180,a={method:"POST",path:"/v1/auth",body:"",timestamp:i,expiration:r},n=await this.prepareParadexDomain(),o=this.starknetEncodeStructuredData(n,{Request:[{name:"method",type:"felt"},{name:"path",type:"felt"},{name:"body",type:"felt"},{name:"timestamp",type:"felt"},{name:"expiration",type:"felt"}]},a,s.address),h=this.starknetSign(o,s.privateKey);e.signature=h,e.account=s.address,e.timestamp=a.timestamp,e.expiration=a.expiration;let d=await this.privatePostAuth(e),l=this.safeString(d,"jwt_token");return this.options.authToken=l,this.options.expires=r,l}parseOrder(e,t){let i=this.safeInteger(e,"created_at"),s=this.safeString(e,"id"),r=this.omitZero(this.safeString(e,"client_id")),a=this.safeString(e,"market"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeString(e,"price"),h=this.safeString(e,"size"),d=this.safeString(e,"type"),l=this.safeString(e,"status"),c=this.safeStringLower(e,"side"),u=this.omitZero(this.safeString(e,"avg_fill_price")),f=this.omitZero(this.safeString(e,"remaining_size")),p=this.safeInteger(e,"last_updated_at");return this.safeOrder({id:s,clientOrderId:r,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,lastUpdateTimestamp:p,status:this.parseOrderStatus(l),symbol:n,type:this.parseOrderType(d),timeInForce:this.parseTimeInForce(this.safeString(e,"instrunction")),postOnly:void 0,reduceOnly:void 0,side:c,price:o,triggerPrice:this.safeString(e,"trigger_price"),takeProfitPrice:void 0,stopLossPrice:void 0,average:u,amount:h,filled:void 0,remaining:f,cost:void 0,trades:void 0,fee:{cost:void 0,currency:void 0},info:e},t)}parseTimeInForce(e){return this.safeString({IOC:"IOC",GTC:"GTC",POST_ONLY:"PO"},e,void 0)}parseOrderStatus(e){return void 0!==e?this.safeString({NEW:"open",UNTRIGGERED:"open",OPEN:"open",CLOSED:"closed"},e,e):e}parseOrderType(e){return this.safeStringLower({LIMIT:"limit",MARKET:"market",STOP_LIMIT:"limit",STOP_MARKET:"market"},e,e)}convertShortString(e){return"0x"+this.binaryToBase16(this.base64ToBinary(this.stringToBase64(e)))}scaleNumber(e){return r.Y.stringMul(e,"100000000")}async createOrder(e,t,i,s,r,a={}){await this.authenticateRest(),await this.loadMarkets();let n=this.market(e),o=this.safeBool2(a,"reduceOnly","reduce_only"),h=t.toUpperCase(),d=i.toUpperCase(),l={market:n.id,side:d,type:h,size:this.amountToPrecision(e,s)},c=this.safeString2(a,"triggerPrice","stopPrice"),u="MARKET"===h,f=this.safeStringUpper(a,"timeInForce"),p=this.isPostOnly(u,void 0,a);u||(p?l.instruction="POST_ONLY":"ioc"!==f||(l.instruction="IOC")),o&&(l.flags=["REDUCE_ONLY"]),void 0!==r&&(l.price=this.priceToPrecision(e,r));let m=this.safeStringN(a,["clOrdID","clientOrderId","client_order_id"]);void 0!==m&&(l.client_id=m),void 0!==c&&(u?l.type="STOP_MARKET":l.type="STOP_LIMIT",l.trigger_price=this.priceToPrecision(e,c)),a=this.omit(a,["reduceOnly","reduce_only","clOrdID","clientOrderId","client_order_id","postOnly","timeInForce","stopPrice","triggerPrice"]);let g=await this.retrieveAccount(),y={timestamp:1e3*this.nonce(),market:this.convertShortString(l.market),side:"BUY"===d?"1":"2",orderType:this.convertShortString(l.type),size:this.scaleNumber(l.size),price:u?"0":this.scaleNumber(l.price)},v=await this.prepareParadexDomain(),b=this.starknetEncodeStructuredData(v,{Order:[{name:"timestamp",type:"felt"},{name:"market",type:"felt"},{name:"side",type:"felt"},{name:"orderType",type:"felt"},{name:"size",type:"felt"},{name:"price",type:"felt"}]},y,g.address),w=this.starknetSign(b,g.privateKey);l.signature=w,l.signature_timestamp=y.timestamp;let k=await this.privatePostOrders(this.extend(l,a));return this.parseOrder(k,n)}async cancelOrder(e,t,i={}){let s;await this.authenticateRest(),await this.loadMarkets();let r={},a=this.safeStringN(i,["clOrdID","clientOrderId","client_order_id"]);return void 0!==a?(r.client_id=a,s=await this.privateDeleteOrdersByClientIdClientId(this.extend(r,i))):(r.order_id=e,s=await this.privateDeleteOrdersOrderId(this.extend(r,i))),this.parseOrder(s)}async cancelAllOrders(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.authenticateRest(),await this.loadMarkets();let i={market:this.market(e).id};return await this.privateDeleteOrders(this.extend(i,t))}async fetchOrder(e,t,i={}){let s;await this.authenticateRest(),await this.loadMarkets();let r={},a=this.safeStringN(i,["clOrdID","clientOrderId","client_order_id"]);return i=this.omit(i,["clOrdID","clientOrderId","client_order_id"]),void 0!==a?(r.client_id=a,s=await this.privateGetOrdersByClientIdClientId(this.extend(r,i))):(r.order_id=e,s=await this.privateGetOrdersOrderId(this.extend(r,i))),this.parseOrder(s)}async fetchOrders(e,t,i,s={}){let r;await this.authenticateRest(),await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchOrders","paginate"),a)return await this.fetchPaginatedCallCursor("fetchOrders",e,t,i,s,"next","cursor",void 0,50);let n={};void 0!==e&&(r=this.market(e),n.market=r.id),void 0!==t&&(n.start_at=t),void 0!==i&&(n.page_size=i),[n,s]=this.handleUntilOption("end_at",n,s);let o=await this.privateGetOrdersHistory(this.extend(n,s)),h=this.safeList(o,"results",[]),d=this.safeString(o,"next"),l=h.length;if(void 0!==d&&l>0){let e=h[0];e.next=d,h[0]=e}return this.parseOrders(h,r,t,i)}async fetchOpenOrders(e,t,i,s={}){let r;await this.authenticateRest(),await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.market=r.id);let n=await this.privateGetOrders(this.extend(a,s)),o=this.safeList(n,"results",[]);return this.parseOrders(o,r,t,i)}async fetchBalance(e={}){await this.authenticateRest(),await this.loadMarkets();let t=await this.privateGetBalance(),i=this.safeList(t,"results",[]);return this.parseBalance(i)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=this.safeDict(e,i,{}),r=this.safeString(s,"token"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"size"),t[a]=n}return this.safeBalance(t)}async fetchMyTrades(e,t,i,s={}){let r;await this.authenticateRest(),await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallCursor("fetchMyTrades",e,t,i,s,"next","cursor",void 0,100);let n={};void 0!==e&&(r=this.market(e),n.market=r.id),void 0!==i&&(n.page_size=i),void 0!==t&&(n.start_at=t),[n,s]=this.handleUntilOption("end_at",n,s);let o=await this.privateGetFills(this.extend(n,s)),h=this.safeList(o,"results",[]);for(let e=0;e<h.length;e++)h[e].next=this.safeString(o,"next");return this.parseTrades(h,r,t,i)}async fetchPosition(e,t={}){await this.authenticateRest(),await this.loadMarkets();let i=this.market(e),s=await this.fetchPositions([i.symbol],t);return this.safeDict(s,0,{})}async fetchPositions(e,t={}){await this.authenticateRest(),await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.privateGetPositions(),s=this.safeList(i,"results",[]);return this.parsePositions(s,e)}parsePosition(e,t){let i=this.safeString(e,"market"),s=(t=this.safeMarket(i,t)).symbol,a=this.safeStringLower(e,"side"),n=this.safeString(e,"size");"long"!==a&&(n=r.Y.stringMul("-1",n));let o=this.safeInteger(e,"time");return this.safePosition({info:e,id:this.safeString(e,"id"),symbol:s,entryPrice:this.safeString(e,"average_entry_price"),markPrice:void 0,notional:void 0,collateral:this.safeString(e,"cost"),unrealizedPnl:this.safeString(e,"unrealized_pnl"),side:a,contracts:this.parseNumber(n),contractSize:void 0,timestamp:o,datetime:this.iso8601(o),hedged:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:void 0,liquidationPrice:void 0,marginRatio:void 0,marginMode:void 0,percentage:void 0})}async fetchLiquidations(e,t,i,s={}){await this.authenticateRest();let r={};void 0!==t?r.from=t:r.from=1;let a=this.market(e);[r,s]=this.handleUntilOption("to",r,s);let n=await this.privateGetLiquidations(this.extend(r,s)),o=this.safeList(n,"results",[]);return this.parseLiquidations(o,a,t,i)}parseLiquidation(e,t){let i=this.safeInteger(e,"created_at");return this.safeLiquidation({info:e,symbol:void 0,contracts:void 0,contractSize:void 0,price:void 0,baseValue:void 0,quoteValue:void 0,timestamp:i,datetime:this.iso8601(i)})}async fetchDeposits(e,t,i,s={}){await this.authenticateRest(),await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchDeposits","paginate"),r)return await this.fetchPaginatedCallCursor("fetchDeposits",e,t,i,s,"next","cursor",void 0,100);let a={};void 0!==i&&(a.page_size=i),void 0!==t&&(a.start_at=t),[a,s]=this.handleUntilOption("end_at",a,s);let n=await this.privateGetTransfers(this.extend(a,s)),o=this.safeList(n,"results",[]),h=[];for(let e=0;e<o.length;e++){let t=o[e];"DEPOSIT"===t.kind&&h.push(t)}return this.parseTransactions(h,void 0,t,i)}async fetchWithdrawals(e,t,i,s={}){await this.authenticateRest(),await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchWithdrawals","paginate"),r)return await this.fetchPaginatedCallCursor("fetchWithdrawals",e,t,i,s,"next","cursor",void 0,100);let a={};void 0!==i&&(a.page_size=i),void 0!==t&&(a.start_at=t),[a,s]=this.handleUntilOption("end_at",a,s);let n=await this.privateGetTransfers(this.extend(a,s)),o=this.safeList(n,"results",[]),h=[];for(let e=0;e<o.length;e++){let t=o[e];"WITHDRAWAL"===t.kind&&h.push(t)}return this.parseTransactions(h,void 0,t,i)}parseTransaction(e,t){let i=this.safeString(e,"id"),s=this.safeString(e,"account"),r=this.safeString(e,"txn_hash"),a=this.safeString(e,"token"),n=this.safeCurrencyCode(a,t),o=this.safeInteger(e,"created_at"),h=this.safeInteger(e,"last_updated_at"),d=this.safeString(e,"kind");d="DEPOSIT"===d?"deposit":"withdrawal";let l=this.parseTransactionStatus(this.safeString(e,"status")),c=this.safeNumber(e,"amount");return{info:e,id:i,txid:r,timestamp:o,datetime:this.iso8601(o),network:void 0,address:s,addressTo:s,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:d,amount:c,currency:n,status:l,updated:h,internal:void 0,comment:void 0,fee:void 0}}parseTransactionStatus(e){return this.safeString({PENDING:"pending",AVAILABLE:"pending",COMPLETED:"ok",FAILED:"failed"},e,e)}sign(e,t="public",i="GET",s={},r,a){let n=this.implodeHostname(this.urls.api[this.version])+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else if("private"===t){if(r={Accept:"application/json","PARADEX-PARTNER":this.safeString(this.options,"broker","CCXT")},"auth"===e)r["PARADEX-STARKNET-ACCOUNT"]=o.account,r["PARADEX-STARKNET-SIGNATURE"]=o.signature,r["PARADEX-TIMESTAMP"]=o.timestamp.toString(),r["PARADEX-SIGNATURE-EXPIRATION"]=o.expiration.toString();else if("onboarding"===e)r["PARADEX-ETHEREUM-ACCOUNT"]=this.walletAddress,r["PARADEX-STARKNET-ACCOUNT"]=o.account,r["PARADEX-STARKNET-SIGNATURE"]=o.signature,r["PARADEX-TIMESTAMP"]=this.nonce().toString(),r["Content-Type"]="application/json",a=this.json({public_key:o.public_key});else{let e=this.options.authToken;r.Authorization="Bearer "+e,"POST"===i?(r["Content-Type"]="application/json",a=this.json(o)):n=n+"?"+this.urlencode(o)}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(!o)return;let l=this.safeString(o,"error");if(void 0!==l){let e=this.id+" "+a;throw this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),new n.ExchangeError(e)}}}class i0 extends s.k{}let i1=i0;class i2 extends i1{describe(){return this.deepExtend(super.describe(),{id:"paymium",name:"Paymium",countries:["FR","EU"],rateLimit:2e3,version:"v1",has:{CORS:!0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,fetchBalance:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,transfer:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87153930-f0f02200-c2c0-11ea-9c0a-40337375ae89.jpg",api:{rest:"https://paymium.com/api"},www:"https://www.paymium.com",fees:"https://www.paymium.com/page/help/fees",doc:["https://github.com/Paymium/api-documentation","https://www.paymium.com/page/developers","https://paymium.github.io/api-documentation/"],referral:"https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj"},api:{public:{get:["countries","currencies","data/{currency}/ticker","data/{currency}/trades","data/{currency}/depth","bitcoin_charts/{id}/trades","bitcoin_charts/{id}/depth"]},private:{get:["user","user/addresses","user/addresses/{address}","user/orders","user/orders/{uuid}","user/price_alerts","merchant/get_payment/{uuid}"],post:["user/addresses","user/orders","user/withdrawals","user/email_transfers","user/payment_requests","user/price_alerts","merchant/create_payment"],delete:["user/orders/{uuid}","user/orders/{uuid}/cancel","user/price_alerts/{id}"]}},markets:{"BTC/EUR":this.safeMarketStructure({id:"eur",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"btc",quoteId:"eur",type:"spot",spot:!0})},fees:{trading:{maker:this.parseNumber("-0.001"),taker:this.parseNumber("0.005")}},precisionMode:d.kb})}parseBalance(e){let t={info:e},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){let r=i[s],a=this.currency(r).id,n="balance_"+a;if(n in e){let i=this.account(),s="locked_"+a;i.free=this.safeString(e,n),i.used=this.safeString(e,s),t[r]=i}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUser(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={currency:s.id},a=await this.publicGetDataCurrencyDepth(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"at"),a=this.safeString(e,"vwap"),n=this.safeString(e,"volume"),o=r.Y.stringMul(n,a),h=this.safeString(e,"price");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:a,open:this.safeString(e,"open"),close:h,last:h,previousClose:void 0,change:void 0,percentage:this.safeString(e,"variation"),average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={currency:i.id},r=await this.publicGetDataCurrencyTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i=this.safeTimestamp(e,"created_at_int"),s=this.safeString(e,"uuid");t=this.safeMarket(void 0,t);let r=this.safeString(e,"side"),a=this.safeString(e,"price"),n="traded_"+t.base.toLowerCase(),o=this.safeString(e,n);return this.safeTrade({info:e,id:s,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:r,takerOrMaker:void 0,price:a,amount:o,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={currency:r.id},n=await this.publicGetDataCurrencyTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createDepositAddress(e,t={}){await this.loadMarkets();let i=await this.privatePostUserAddresses(t);return this.parseDepositAddress(i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=await this.privateGetUserAddressesAddress(this.extend({address:e},t));return this.parseDepositAddress(i)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();let i=await this.privateGetUserAddresses(t);return this.parseDepositAddresses(i,e)}parseDepositAddress(e,t){let i=this.safeString(e,"address"),s=this.safeString(e,"currency");return{info:e,currency:this.safeCurrencyCode(s,t),network:void 0,address:i,tag:void 0}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e),o={type:this.capitalize(t)+"Order",currency:n.id,direction:i,amount:s};"market"!==t&&(o.price=r);let h=await this.privatePostUserOrders(this.extend(o,a));return this.safeOrder({info:h,id:h.uuid},n)}async cancelOrder(e,t,i={}){let s=await this.privateDeleteUserOrdersUuidCancel(this.extend({uuid:e},i));return this.safeOrder({info:s})}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e);if(0>s.indexOf("@"))throw new n.ExchangeError(this.id+" transfer() only allows transfers to an email address");if("BTC"!==e&&"EUR"!==e)throw new n.ExchangeError(this.id+" transfer() only allows BTC or EUR");let o={currency:a.id,amount:this.currencyToPrecision(e,t),email:s},h=await this.privatePostUserEmailTransfers(this.extend(o,r));return this.parseTransfer(h,a)}parseTransfer(e,t){let i=this.safeString(e,"currency"),s=this.safeString(e,"updated_at"),r=this.parseDate(s),a=this.safeValue(e,"account_operations"),n=this.safeValue(a,0,{}),o=this.safeString(e,"state");return{info:e,id:this.safeString(e,"uuid"),timestamp:r,datetime:this.iso8601(r),currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amount"),fromAccount:void 0,toAccount:this.safeString(n,"address"),status:this.parseTransferStatus(o)}}parseTransferStatus(e){return this.safeString({executed:"ok"},e,e)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s),o=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+n;if(r={"Api-Key":this.apiKey,"Api-Nonce":e},"POST"===i)Object.keys(o).length&&(t+=a=this.json(o),r["Content-Type"]="application/json");else if(Object.keys(o).length){let e=this.urlencode(o);t+=e,n+="?"+e}r["Api-Signature"]=this.hmac(this.encode(t),this.encode(this.secret),l.s)}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&void 0!==this.safeValue(o,"errors"))throw new n.ExchangeError(this.id+" "+this.json(o))}}var i3=i(4925);class i5 extends s.k{}let i6=i5;class i4 extends i6{describe(){return this.deepExtend(super.describe(),{id:"poloniex",name:"Poloniex",countries:["US"],rateLimit:5,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrder:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingInterval:!1,fetchFundingIntervals:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,sandbox:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"MINUTE_1","5m":"MINUTE_5","10m":"MINUTE_10","15m":"MINUTE_15","30m":"MINUTE_30","1h":"HOUR_1","2h":"HOUR_2","4h":"HOUR_4","6h":"HOUR_6","12h":"HOUR_12","1d":"DAY_1","3d":"DAY_3","1w":"WEEK_1","1M":"MONTH_1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg",api:{rest:"https://api.poloniex.com"},test:{rest:"https://sand-spot-api-gateway.poloniex.com"},www:"https://www.poloniex.com",doc:"https://api-docs.poloniex.com/spot/",fees:"https://poloniex.com/fees",referral:"https://poloniex.com/signup?c=UBFZJRPJ"},api:{public:{get:{markets:20,"markets/{symbol}":1,currencies:20,"currencies/{currency}":20,"v2/currencies":20,"v2/currencies/{currency}":20,timestamp:1,"markets/price":1,"markets/{symbol}/price":1,"markets/markPrice":1,"markets/{symbol}/markPrice":1,"markets/{symbol}/markPriceComponents":1,"markets/{symbol}/orderBook":1,"markets/{symbol}/candles":1,"markets/{symbol}/trades":20,"markets/ticker24h":20,"markets/{symbol}/ticker24h":20,"markets/collateralInfo":1,"markets/{currency}/collateralInfo":1,"markets/borrowRatesInfo":1}},private:{get:{accounts:4,"accounts/balances":4,"accounts/{id}/balances":4,"accounts/activity":20,"accounts/transfer":20,"accounts/transfer/{id}":4,feeinfo:20,"accounts/interest/history":1,subaccounts:4,"subaccounts/balances":20,"subaccounts/{id}/balances":4,"subaccounts/transfer":20,"subaccounts/transfer/{id}":4,"wallets/addresses":20,"wallets/addresses/{currency}":20,"wallets/activity":20,"margin/accountMargin":4,"margin/borrowStatus":4,"margin/maxSize":4,orders:20,"orders/{id}":4,"orders/killSwitchStatus":4,smartorders:20,"smartorders/{id}":4,"orders/history":20,"smartorders/history":20,trades:20,"orders/{id}/trades":4},post:{"accounts/transfer":4,"subaccounts/transfer":20,"wallets/address":20,"wallets/withdraw":20,"v2/wallets/withdraw":20,orders:4,"orders/batch":20,"orders/killSwitch":4,smartorders:4},delete:{"orders/{id}":4,"orders/cancelByIds":20,orders:20,"smartorders/{id}":4,"smartorders/cancelByIds":20,smartorders:20},put:{"orders/{id}":20,"smartorders/{id}":20}}},fees:{trading:{feeSide:"get",maker:this.parseNumber("0.0009"),taker:this.parseNumber("0.0009")},funding:{}},commonCurrencies:{AIR:"AirCoin",APH:"AphroditeCoin",BCC:"BTCtalkcoin",BCHABC:"BCHABC",BDG:"Badgercoin",BTM:"Bitmark",CON:"Coino",ETHTRON:"ETH",GOLD:"GoldEagles",GPUC:"GPU",HOT:"Hotcoin",ITC:"Information Coin",KEY:"KEYCoin",MASK:"NFTX Hashmasks Index",MEME:"Degenerator Meme",PLX:"ParallaxCoin",REPV2:"REP",STR:"XLM",SOC:"SOCC",TRADE:"Unitrade",TRXETH:"TRX",XAP:"API Coin",USDTBSC:"USDT",USDTTRON:"USDT",USDTETH:"USDT",UST:"USTC"},options:{createMarketBuyOrderRequiresPrice:!0,networks:{BEP20:"BSC",ERC20:"ETH",TRC20:"TRON"},limits:{cost:{min:{BTC:1e-4,ETH:1e-4,USDT:1,TRX:100,BNB:.06,USDC:1,USDJ:1,TUSD:1e-4,DAI:1,PAX:1,BUSD:1}}},accountsByType:{spot:"spot",future:"futures"},accountsById:{exchange:"spot",futures:"future"}},features:{default:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!1,GTD:!1},hedged:!1,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!0,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:1e5,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:2e3,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:void 0,fetchOHLCV:{limit:500}},spot:{extends:"default"},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{500:n.ExchangeNotAvailable,603:n.RequestTimeout,601:n.BadRequest,415:n.ExchangeError,602:n.ArgumentsRequired,21604:n.BadRequest,21600:n.AuthenticationError,21605:n.AuthenticationError,21102:n.ExchangeError,21100:n.AuthenticationError,21704:n.AuthenticationError,21700:n.BadRequest,21705:n.BadRequest,21707:n.ExchangeError,21708:n.BadRequest,21601:n.AccountSuspended,21711:n.ExchangeError,21709:n.InsufficientFunds,25e4:n.ExchangeError,250001:n.BadRequest,250002:n.BadRequest,250003:n.BadRequest,250004:n.BadRequest,250005:n.InsufficientFunds,250008:n.BadRequest,250012:n.ExchangeError,21110:n.BadRequest,10040:n.BadSymbol,10060:n.ExchangeError,10020:n.BadSymbol,10041:n.BadSymbol,21340:n.OnMaintenance,21341:n.InvalidOrder,21342:n.InvalidOrder,21343:n.InvalidOrder,21351:n.AccountSuspended,21352:n.BadSymbol,21353:n.PermissionDenied,21354:n.PermissionDenied,21359:n.OrderNotFound,21360:n.InvalidOrder,24106:n.BadRequest,24201:n.ExchangeNotAvailable,21301:n.OrderNotFound,21302:n.ExchangeError,21304:n.ExchangeError,21305:n.OrderNotFound,21307:n.ExchangeError,21309:n.InvalidOrder,21310:n.InvalidOrder,21311:n.InvalidOrder,21312:n.InvalidOrder,21314:n.InvalidOrder,21315:n.InvalidOrder,21317:n.InvalidOrder,21319:n.InvalidOrder,21320:n.InvalidOrder,21321:n.InvalidOrder,21322:n.InvalidOrder,21324:n.BadRequest,21327:n.InvalidOrder,21328:n.InvalidOrder,21330:n.InvalidOrder,21335:n.InvalidOrder,21336:n.InvalidOrder,21337:n.InvalidOrder,21344:n.InvalidOrder,21345:n.InvalidOrder,21346:n.InvalidOrder,21348:n.InvalidOrder,21347:n.InvalidOrder,21349:n.InvalidOrder,21350:n.InvalidOrder,21355:n.ExchangeError,21356:n.BadRequest,21721:n.InsufficientFunds,24101:n.BadSymbol,24102:n.InvalidOrder,24103:n.InvalidOrder,24104:n.InvalidOrder,24105:n.InvalidOrder,25020:n.InvalidOrder,25e3:n.InvalidOrder,25001:n.InvalidOrder,25002:n.InvalidOrder,25003:n.ExchangeError,25004:n.InvalidOrder,25005:n.ExchangeError,25006:n.InvalidOrder,25007:n.InvalidOrder,25008:n.InvalidOrder,25009:n.ExchangeError,25010:n.PermissionDenied,25011:n.InvalidOrder,25012:n.ExchangeError,25013:n.OrderNotFound,25014:n.OrderNotFound,25015:n.OrderNotFound,25016:n.ExchangeError,25017:n.ExchangeError,25018:n.BadRequest,25019:n.BadSymbol},broad:{}}})}parseOHLCV(e,t){return[this.safeInteger(e,12),this.safeNumber(e,2),this.safeNumber(e,1),this.safeNumber(e,0),this.safeNumber(e,3),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate",!1),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,500);let n=this.market(e),o={symbol:n.id,interval:this.safeString(this.timeframes,t,t)};void 0!==i&&(o.startTime=i),void 0!==s&&(o.limit=s),[o,r]=this.handleUntilOption("endTime",o,r);let h=await this.publicGetMarketsSymbolCandles(this.extend(o,r));return this.parseOHLCVs(h,n,t,i,s)}async loadMarkets(e=!1,t={}){let i=await super.loadMarkets(e,t);return(void 0===this.safeValue(this.options,"currenciesByNumericId")||e)&&(this.options.currenciesByNumericId=this.indexBy(this.currencies,"numericId")),i}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e);return this.parseMarkets(t)}parseMarket(e){let t=this.safeString(e,"symbol"),i=this.safeString(e,"baseCurrencyName"),s=this.safeString(e,"quoteCurrencyName"),r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s),n=this.safeString(e,"state"),o=this.safeValue(e,"symbolTradeLimit");return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"NORMAL"===n,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(o,"quantityScale"))),price:this.parseNumber(this.parsePrecision(this.safeString(o,"priceScale")))},limits:{amount:{min:this.safeNumber(o,"minQuantity"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(o,"minAmount"),max:void 0}},created:this.safeInteger(e,"tradableStartTime"),info:e}}async fetchTime(e={}){let t=await this.publicGetTimestamp(e);return this.safeInteger(t,"serverTime")}parseTicker(e,t){let i=this.safeInteger(e,"ts"),s=this.safeString(e,"symbol");t=this.safeMarket(s);let a=this.safeString(e,"close"),n=this.safeString(e,"dailyChange"),o=r.Y.stringMul(n,"100"),h=this.safeString(e,"bidQuantity"),d=this.safeString(e,"askQuantity");return this.safeTicker({id:s,symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:h,ask:this.safeString(e,"ask"),askVolume:d,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:void 0,percentage:o,average:void 0,baseVolume:this.safeString(e,"quantity"),quoteVolume:this.safeString(e,"amount"),markPrice:this.safeString(e,"markPrice"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetMarketsTicker24h(t);return this.parseTickers(i,e)}async fetchCurrencies(e={}){let t=await this.publicGetCurrencies(this.extend(e,{includeMultiChainCurrencies:!0})),i={};for(let e=0;e<t.length;e++){let s;let a=this.safeValue(t,e),n=Object.keys(a),o=this.safeValue(n,0),h=this.safeValue(a,o),d=this.safeCurrencyCode(o),l=this.safeString(h,"name"),c=this.safeString(h,"blockchain");void 0!==c&&(s=this.networkIdToCode(c,d));let u=this.safeValue(h,"delisted"),f="ENABLED"===this.safeString(h,"walletState"),p="ENABLED"===this.safeString(h,"walletDepositState"),m="ENABLED"===this.safeString(h,"walletWithdrawalState"),g=!u&&f&&p&&m,y=this.safeInteger(h,"id"),v=this.safeString(h,"withdrawalFee"),b=void 0===this.safeValue(h,"parentChain");void 0===this.safeValue(i,d)&&(i[d]={id:o,code:d,info:void 0,name:l,active:g,deposit:p,withdraw:m,fee:this.parseNumber(v),precision:void 0,limits:{amount:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}});let w=this.safeString(i[d],"fee");void 0!==v&&(w=void 0===w?v:r.Y.stringMin(v,w));let k=this.safeValue(i[d],"deposit");k=p||k;let S=this.safeValue(i[d],"withdraw");S=m||S;let O=this.safeValue(i[d],"networks",{});void 0!==s&&(O[s]={info:h,id:c,network:s,currencyId:o,numericId:y,deposit:p,withdraw:m,active:g,fee:this.parseNumber(v),precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}}}),i[d].networks=O;let T=this.safeValue(i[d],"info",[]),I={};I[o]=h,T.push(I),i[d].info=T,b&&(i[d].id=o,i[d].name=l),i[d].active=k&&S,i[d].deposit=k,i[d].withdraw=S,i[d].fee=this.parseNumber(w)}return i}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetMarketsSymbolTicker24h(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i;let s=this.safeString2(e,"id","tradeID"),r=this.safeString(e,"orderId"),a=this.safeInteger2(e,"ts","createTime"),n=this.safeString(e,"symbol"),o=(t=this.safeMarket(n,t,"_")).symbol,h=this.safeStringLower2(e,"side","takerSide"),d=this.safeString(e,"price"),l=this.safeString(e,"quantity"),c=this.safeString(e,"amount"),u=this.safeString(e,"feeCurrency"),f=this.safeString(e,"feeAmount");return void 0!==f&&(i={cost:f,currency:this.safeCurrencyCode(u)}),this.safeTrade({id:s,info:e,timestamp:a,datetime:this.iso8601(a),symbol:o,order:r,type:this.safeStringLower(e,"type"),side:h,takerOrMaker:this.safeStringLower(e,"matchRole"),price:d,amount:l,cost:c,fee:i},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i);let n=await this.publicGetMarketsSymbolTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s);void 0!==e&&(r=this.market(e));let n={};void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i),[n,s]=this.handleUntilOption("endTime",n,s);let o=await this.privateGetTrades(this.extend(n,s));return this.parseTrades(o,r,t,i)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",PENDING_CANCEL:"canceled",PARTIALLY_CANCELED:"canceled",CANCELED:"canceled",FAILED:"canceled"},e,e)}parseOrder(e,t){let i,s,r,a=this.safeInteger2(e,"timestamp","createTime");void 0===a&&(a=this.parse8601(this.safeString(e,"date")));let n=this.safeString(e,"symbol"),o=(t=this.safeMarket(n,t,"_")).symbol,h=this.safeValue(e,"resultingTrades");void 0===h||Array.isArray(h)||(h=this.safeValue(h,this.safeString(t,"id",n)));let d=this.safeString2(e,"price","rate"),l=this.safeString(e,"quantity"),c=this.safeString(e,"filledQuantity"),u=this.parseOrderStatus(this.safeString(e,"state")),f=this.safeStringLower(e,"side"),p=this.safeString(e,"type"),m=this.parseOrderType(p),g=this.safeStringN(e,["orderNumber","id","orderId"]),y=this.safeString(e,"tokenFeeCurrency"),v=this.safeString(e,"fee");void 0===y?r="buy"===f?t.base:t.quote:(r=this.safeCurrencyCode(y),s=this.safeString(e,"tokenFee")),void 0!==s&&(i={rate:v,cost:s,currency:r});let b=this.safeString(e,"clientOrderId");return this.safeOrder({info:e,id:g,clientOrderId:b,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:this.safeInteger(e,"updateTime"),status:u,symbol:o,type:m,timeInForce:this.safeString(e,"timeInForce"),postOnly:void 0,side:f,price:d,triggerPrice:this.safeString2(e,"triggerPrice","stopPrice"),cost:void 0,average:this.safeString(e,"avgPrice"),amount:l,filled:c,remaining:void 0,trades:h,fee:i},t)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit","STOP-LIMIT":"limit","STOP-MARKET":"market"},e,e)}parseOpenOrders(e,t,i){for(let s=0;s<e.length;s++){let r=e[s],a=this.extend(r,{status:"open",type:"limit",side:r.type,price:r.rate});i.push(this.parseOrder(a,t))}return i}async fetchOpenOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n={};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==i&&(n.limit=i);let o=this.safeValue2(s,"trigger","stop");return s=this.omit(s,["trigger","stop"]),a=o?await this.privateGetSmartorders(this.extend(n,s)):await this.privateGetOrders(this.extend(n,s)),this.parseOrders(a,r,t,i,{status:"open"})}async createOrder(e,t,i,s,r,a={}){let o;await this.loadMarkets();let h=this.market(e);if(!h.spot)throw new n.NotSupported(this.id+" createOrder() does not support "+h.type+" orders, only spot orders are accepted");let d={symbol:h.id,side:i},l=this.safeNumber2(a,"stopPrice","triggerPrice");return[d,a]=this.orderRequest(e,t,i,s,d,r,a),o=void 0!==l?await this.privatePostSmartorders(this.extend(d,a)):await this.privatePostOrders(this.extend(d,a)),o=this.extend(o,{type:t,side:i}),this.parseOrder(o,h)}orderRequest(e,t,i,s,a,o,h={}){let d=t.toUpperCase(),l="MARKET"===d,c=this.isPostOnly(l,"LIMIT_MAKER"===d,h),u=this.safeNumber2(h,"stopPrice","triggerPrice");if(h=this.omit(h,["postOnly","triggerPrice","stopPrice"]),void 0!==u?(d=void 0===o?"STOP":"STOP_LIMIT",a.stopPrice=u):c&&(d="LIMIT_MAKER"),a.type=d,l){if("buy"===i){let t;let i=!0;[i,h]=this.handleOptionAndParams(h,"createOrder","createMarketBuyOrderRequiresPrice",!0);let d=this.safeNumber(h,"cost");if(h=this.omit(h,"cost"),void 0!==d)t=this.costToPrecision(e,d);else if(i){if(void 0===o)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let i=this.numberToString(s),a=this.numberToString(o),n=r.Y.stringMul(i,a);t=this.costToPrecision(e,n)}}else t=this.costToPrecision(e,s);a.amount=t}else a.quantity=this.amountToPrecision(e,s)}else a.quantity=this.amountToPrecision(e,s),a.price=this.priceToPrecision(e,o);let f=this.safeString(h,"clientOrderId");return void 0!==f&&(a.clientOrderId=f,h=this.omit(h,"clientOrderId")),[a,h]}async editOrder(e,t,i,s,r,a,o={}){let h;await this.loadMarkets();let d=this.market(t);if(!d.spot)throw new n.NotSupported(this.id+" editOrder() does not support "+d.type+" orders, only spot orders are accepted");let l={id:e},c=this.safeNumber2(o,"stopPrice","triggerPrice");return[l,o]=this.orderRequest(t,i,s,r,l,a,o),h=void 0!==c?await this.privatePutSmartordersId(this.extend(l,o)):await this.privatePutOrdersId(this.extend(l,o)),h=this.extend(h,{side:s,type:i}),this.parseOrder(h,d)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets();let r={},a=this.safeValue(i,"clientOrderId");void 0!==a&&(e=a),r.id=e;let n=this.safeValue2(i,"trigger","stop");return i=this.omit(i,["clientOrderId","trigger","stop"]),s=n?await this.privateDeleteSmartordersId(this.extend(r,i)):await this.privateDeleteOrdersId(this.extend(r,i)),this.parseOrder(s)}async cancelAllOrders(e,t={}){let i,s;await this.loadMarkets();let r={symbols:[]};void 0!==e&&(i=this.market(e),r.symbols=[i.id]);let a=this.safeValue2(t,"trigger","stop");return t=this.omit(t,["trigger","stop"]),s=a?await this.privateDeleteSmartorders(this.extend(r,t)):await this.privateDeleteOrders(this.extend(r,t)),this.parseOrders(s,i)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets();let r={id:e=e.toString()},a=this.safeValue2(i,"trigger","stop");i=this.omit(i,["trigger","stop"]),a?(s=await this.privateGetSmartordersId(this.extend(r,i)),s=this.safeValue(s,0)):s=await this.privateGetOrdersId(this.extend(r,i));let n=this.parseOrder(s);return n.id=e,n}async fetchOrderStatus(e,t,i={}){await this.loadMarkets();let s=await this.fetchOpenOrders(t,void 0,void 0,i);return e in this.indexBy(s,"id")?"open":"closed"}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=await this.privateGetOrdersIdTrades(this.extend({id:e},r));return this.parseTrades(a)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){let s=this.safeValue(e,i,{}),r=this.safeValue(s,"balances");for(let e=0;e<r.length;e++){let i=this.safeValue(r,e),s=this.safeString(i,"currency"),a=this.safeCurrencyCode(s),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"hold"),t[a]=n}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountsBalances(this.extend({accountType:"SPOT"},e));return this.parseBalance(t)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetFeeinfo(e),i={};for(let e=0;e<this.symbols.length;e++){let s=this.symbols[e];i[s]={info:t,symbol:s,maker:this.safeNumber(t,"makerRate"),taker:this.safeNumber(t,"takerRate"),percentage:!0,tierBased:!0}}return i}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);let a=await this.publicGetMarketsSymbolOrderBook(this.extend(r,i)),n=this.safeInteger(a,"time"),o=this.safeValue(a,"asks"),h=this.safeValue(a,"bids"),d=[],l=[];for(let e=0;e<o.length;e++)if(e%2<1){let t=this.safeNumber(o,e),i=this.safeNumber(o,this.sum(e,1));d.push([t,i])}for(let e=0;e<h.length;e++)if(e%2<1){let t=this.safeNumber(h,e),i=this.safeNumber(h,this.sum(e,1));l.push([t,i])}return{symbol:s.symbol,bids:this.sortBy(l,0,!0),asks:this.sortBy(d,0),timestamp:n,datetime:this.iso8601(n),nonce:void 0}}async createDepositAddress(e,t={}){let i;await this.loadMarkets();let s=this.currency(e),r={currency:s.id},a=this.safeValue(this.options,"networks",{}),o=this.safeStringUpper(t,"network");if(void 0!==(o=this.safeString(a,o,o)))r.currency+=o,t=this.omit(t,"network");else if("USDT"===s.id)throw new n.ArgumentsRequired(this.id+" createDepositAddress requires a network parameter for "+e+".");let h=await this.privatePostWalletsAddress(this.extend(r,t)),d=this.safeString(h,"address");if(this.checkAddress(d),void 0!==s){let e=this.safeString(s.info,"depositAddress");void 0!==e&&(i=d,d=e)}return{currency:e,address:d,tag:i,network:o,info:h}}async fetchDepositAddress(e,t={}){let i;await this.loadMarkets();let s=this.currency(e),r={currency:s.id},a=this.safeValue(this.options,"networks",{}),o=this.safeStringUpper(t,"network");if(void 0!==(o=this.safeString(a,o,o)))r.currency+=o,t=this.omit(t,"network");else if("USDT"===s.id)throw new n.ArgumentsRequired(this.id+" fetchDepositAddress requires a network parameter for "+e+".");let h=await this.privateGetWalletsAddresses(this.extend(r,t)),d=this.safeString(h,r.currency);if(this.checkAddress(d),void 0!==s){let e=this.safeString(s.info,"depositAddress");void 0!==e&&(i=d,d=e)}return{info:h,currency:e,network:o,address:d,tag:i}}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),h=this.safeString(n,s,i),d={amount:this.currencyToPrecision(e,t),currency:a.id,fromAccount:o,toAccount:h},l=await this.privatePostAccountsTransfer(this.extend(d,r));return this.parseTransfer(l,a)}parseTransfer(e,t){return{info:e,id:this.safeString(e,"transferId"),timestamp:void 0,datetime:void 0,currency:this.safeString(t,"id"),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),n={currency:a.id,amount:t,address:i};void 0!==s&&(n.paymentId=s);let o=this.safeValue(this.options,"networks",{}),h=this.safeStringUpper(r,"network");void 0!==(h=this.safeString(o,h,h))&&(n.currency+=h,r=this.omit(r,"network"));let d=await this.privatePostWalletsWithdraw(this.extend(n,r));return this.parseTransaction(d,a)}async fetchTransactionsHelper(e,t,i,s={}){await this.loadMarkets();let r=this.seconds(),a=void 0!==t?this.parseToInt(t/1e3):r-31104e4;return await this.privateGetWalletsActivity(this.extend({start:a,end:r},s))}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a=await this.fetchTransactionsHelper(e,t,i,s);void 0!==e&&(r=this.currency(e));let n=this.safeValue(a,"withdrawals",[]),o=this.safeValue(a,"deposits",[]),h=this.parseTransactions(n,r,t,i),d=this.parseTransactions(o,r,t,i),l=this.arrayConcat(d,h);return this.filterByCurrencySinceLimit(this.sortBy(l,"timestamp"),e,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;let a=await this.fetchTransactionsHelper(e,t,i,s);void 0!==e&&(r=this.currency(e));let n=this.safeValue(a,"withdrawals",[]),o=this.parseTransactions(n,r,t,i);return this.filterByCurrencySinceLimit(o,e,t,i)}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetCurrencies(this.extend(t,{includeMultiChainCurrencies:!0})),s={};for(let e=0;e<i.length;e++){let t=i[e],r=Object.keys(t),a=this.safeString(r,0);s[a]=t[a]}return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t,i){let s={};t=this.marketCodes(t);let r=Object.keys(e);for(let i=0;i<r.length;i++){let a=r[i],n=this.safeCurrencyCode(a),o=e[a];if(void 0===t||this.inArray(n,t)){let t=this.currency(n);s[n]=this.parseDepositWithdrawFee(o,t);let i=this.safeValue(o,"childChains");if(i.length>0)for(let t=0;t<i.length;t++){let r=i[t];r=r.replace(n,"");let a=this.networkIdToCode(r),o=this.safeValue(e,r),h={},d=this.safeNumber(o,"withdrawalFee");h[a]={withdraw:{fee:d,percentage:void 0===d&&void 0},deposit:{fee:void 0,percentage:void 0}},s[n].networks=this.extend(s[n].networks,h)}}}return s}parseDepositWithdrawFee(e,t){let i=this.depositWithdrawFee({});i.info[t.code]=e;let s=this.safeString(e,"blockchain"),r=this.safeNumber(e,"withdrawalFee"),a={fee:r,percentage:void 0===r&&void 0},n={fee:void 0,percentage:void 0};i.withdraw=a,i.deposit=n;let o=this.networkIdToCode(s);return i.networks[o]={withdraw:a,deposit:n},i}async fetchDeposits(e,t,i,s={}){let r;let a=await this.fetchTransactionsHelper(e,t,i,s);void 0!==e&&(r=this.currency(e));let n=this.safeValue(a,"deposits",[]),o=this.parseTransactions(n,r,t,i);return this.filterByCurrencySinceLimit(o,e,t,i)}parseTransactionStatus(e){return this.safeString({COMPLETE:"ok",COMPLETED:"ok","AWAITING APPROVAL":"pending",AWAITING_APPROVAL:"pending",PENDING:"pending",PROCESSING:"pending","COMPLETE ERROR":"failed",COMPLETE_ERROR:"failed"},e,e)}parseTransaction(e,t){let i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"currency"),a=this.safeCurrencyCode(s),n=this.safeString(e,"status","pending");n=this.parseTransactionStatus(n);let o=this.safeString(e,"txid"),h="withdrawalRequestsId"in e?"withdrawal":"deposit",d=this.safeString2(e,"withdrawalRequestsId","depositNumber"),l=this.safeString(e,"address"),c=this.safeString(e,"paymentID"),u=this.safeString(e,"amount"),f=this.safeString(e,"fee");return"withdrawal"===h&&(u=r.Y.stringSub(u,f)),{info:e,id:d,currency:a,amount:this.parseNumber(u),network:void 0,address:l,addressTo:void 0,addressFrom:void 0,tag:c,tagTo:void 0,tagFrom:void 0,status:n,type:h,updated:void 0,txid:o,timestamp:i,datetime:this.iso8601(i),comment:void 0,internal:void 0,fee:{currency:a,cost:this.parseNumber(f),rate:void 0}}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest,o=this.omit(s,this.extractParams(e)),h=this.implodeParams(e,s);if("public"===t)n+="/"+h,Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=i+"\n";if(n+="/"+h,t+="/"+h,"POST"===i||"PUT"===i||"DELETE"===i)t+="\n",Object.keys(o).length&&(t+="requestBody="+(a=this.json(o))+"&"),t+="signTimestamp="+e;else{let i=this.extend({signTimestamp:e},o);i=this.keysort(i),t+="\n"+this.urlencode(i),Object.keys(o).length&&(n+="?"+this.urlencode(o))}let s=this.hmac(this.encode(t),this.encode(this.secret),l.s,"base64");r={"Content-Type":"application/json",key:this.apiKey,signTimestamp:e,signature:s}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code");if(void 0!==l&&"200"!==l){let e=o.code,t=this.safeString(o,"message"),i=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new n.ExchangeError(i)}}}class i8 extends s.k{}let i7=i8;class i9 extends i7{describe(){return this.deepExtend(super.describe(),{id:"poloniexfutures",name:"Poloniex Futures",countries:["US"],rateLimit:33.3,certified:!1,pro:!0,version:"v1",has:{CORS:void 0,spot:!1,margin:!0,swap:!0,future:!1,option:void 0,createOrder:!0,createStopOrder:!0,createTriggerOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingInterval:!0,fetchFundingIntervals:!1,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchL3OrderBook:!0,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrdersByStatus:!0,fetchPositions:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,setMarginMode:!0},timeframes:{"1m":1,"5m":5,"15m":15,"30m":30,"1h":60,"2h":120,"4h":480,"12h":720,"1d":1440,"1w":10080},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg",api:{public:"https://futures-api.poloniex.com",private:"https://futures-api.poloniex.com"},www:"https://www.poloniex.com",doc:"https://api-docs.poloniex.com/futures/",fees:"https://poloniex.com/fee-schedule",referral:"https://poloniex.com/signup?c=UBFZJRPJ"},api:{public:{get:{"contracts/active":10,"contracts/{symbol}":10,ticker:10,tickers:10,"level2/snapshot":180.002,"level2/depth":180.002,"level2/message/query":180.002,"level3/snapshot":180.002,"trade/history":10,"interest/query":10,"index/query":10,"mark-price/{symbol}/current":10,"premium/query":10,"funding-rate/{symbol}/current":10,timestamp:10,status:10,"kline/query":10},post:{"bullet-public":10}},private:{get:{"account-overview":1,"transaction-history":1,maxActiveOrders:1,maxRiskLimit:1,userFeeRate:1,"marginType/query":1,orders:1,stopOrders:1,recentDoneOrders:1,"orders/{order-id}":1,"clientOrderId/{clientOid}":1,fills:1,openOrderStatistics:1,position:1.5,positions:1.5,"funding-history":1},post:{orders:1.5,batchOrders:1.5,"position/margin/auto-deposit-status":1.5,"position/margin/deposit-margin":1.5,"position/margin/withdraw-margin":1.5,"bullet-private":1,"marginType/change":1},delete:{"orders/{order-id}":1.5,orders:150.016,stopOrders:150.016}}},precisionMode:d.kb,fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.00075"),maker:this.parseNumber("0.0001")},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{},requiredCredentials:{apiKey:!0,secret:!0,password:!0},options:{networks:{OMNI:"omni",ERC20:"eth",TRC20:"trx"},versions:{public:{GET:{ticker:"v2",tickers:"v2","level3/snapshot":"v2"}}}},features:{default:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!0},triggerDirection:!0,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!1,PO:!0,GTD:!1},hedged:!1,leverage:!0,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!1,trailing:!1,iceberg:!0},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:void 0,daysBack:1e5,untilDays:7},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:void 0,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:100,daysBack:1e5,daysBackCanceled:1,untilDays:1e5,trigger:!1,trailing:!1},fetchOHLCV:{limit:200}},spot:void 0,swap:{linear:{extends:"default"},inverse:void 0},future:{linear:void 0,inverse:void 0}},exceptions:{exact:{400:n.BadRequest,401:n.AuthenticationError,403:n.NotSupported,404:n.NotSupported,405:n.NotSupported,415:n.BadRequest,429:n.RateLimitExceeded,500:n.ExchangeNotAvailable,503:n.ExchangeNotAvailable,400001:n.AuthenticationError,400002:n.InvalidNonce,400003:n.AuthenticationError,400004:n.AuthenticationError,400005:n.AuthenticationError,400006:n.AuthenticationError,400007:n.AuthenticationError,404e3:n.NotSupported,400100:n.BadRequest,411100:n.AccountSuspended,5e5:n.ExchangeNotAvailable},broad:{"Position does not exist":n.OrderNotFound}}})}async fetchMarkets(e={}){let t=await this.publicGetContractsActive(e),i=this.safeValue(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"symbol"),i=this.safeString(e,"baseCurrency"),s=this.safeString(e,"quoteCurrency"),a=this.safeString(e,"rootSymbol"),n=this.safeCurrencyCode(i),o=this.safeCurrencyCode(s),h=this.safeCurrencyCode(a),d=this.safeValue(e,"isInverse"),l=this.safeString(e,"status"),c=this.safeString(e,"multiplier"),u=this.safeNumber(e,"indexPriceTickSize"),f=this.safeNumber(e,"lotSize"),p=this.safeNumber(e,"maxOrderQty"),m=this.safeNumber(e,"maxPrice");return{id:t,symbol:n+"/"+o+":"+h,base:n,quote:o,settle:h,baseId:i,quoteId:s,settleId:a,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"Open"===l,contract:!0,linear:!d,inverse:d,taker:this.safeNumber(e,"takerFeeRate"),maker:this.safeNumber(e,"makerFeeRate"),contractSize:this.parseNumber(r.Y.stringAbs(c)),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:f,price:u},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(e,"maxLeverage")},amount:{min:f,max:p},price:{min:u,max:m},cost:{min:void 0,max:void 0}},created:this.safeInteger(e,"firstOpenDate"),info:e}}parseTicker(e,t){let i;let s=this.safeString(e,"symbol"),a=this.safeSymbol(s,t),n=this.safeString(e,"ts");i=16===n.length?.001:17===n.length?1e-4:18===n.length?1e-5:1e-6;let o=this.safeIntegerProduct(e,"ts",i),h=this.safeString2(e,"price","lastPrice"),d=r.Y.stringMul(this.safeString(e,"priceChgPct"),"100");return this.safeTicker({symbol:a,timestamp:o,datetime:this.iso8601(o),high:void 0,low:void 0,bid:this.safeString(e,"bestBidPrice"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString(e,"bestAskPrice"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:void 0,close:h,last:h,previousClose:void 0,change:void 0,percentage:d,average:void 0,baseVolume:this.safeString2(e,"size","volume"),quoteVolume:this.safeString(e,"turnover"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(this.safeValue(r,"data",{}),i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=this.safeList(i,"data",[]);return this.parseTickers(s,e)}async fetchOrderBook(e,t,i={}){let s,r;await this.loadMarkets();let a=this.safeNumber(i,"level");if(i=this.omit(i,"level"),void 0!==a&&2!==a&&3!==a)throw new n.BadRequest(this.id+" fetchOrderBook() can only return level 2 & 3");let o=this.market(e),h={symbol:o.id};s=3===a?await this.publicGetLevel3Snapshot(this.extend(h,i)):await this.publicGetLevel2Snapshot(this.extend(h,i));let d=this.safeValue(s,"data",{}),l=this.safeIntegerProduct(d,"ts",1e-6);return(r=3===a?this.parseOrderBook(d,o.symbol,l,"bids","asks",1,2):this.parseOrderBook(d,o.symbol,l,"bids","asks",0,1)).nonce=this.safeInteger(d,"sequence"),r}async fetchL3OrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);return this.fetchOrderBook(s.id,void 0,{level:3})}parseTrade(e,t){let i;let s=this.safeString(e,"symbol");t=this.safeMarket(s,t,"-");let r=this.safeString(e,"tradeId"),a=this.safeString(e,"orderId"),n=this.safeString(e,"liquidity"),o=this.safeInteger(e,"ts");void 0!==o?o=this.parseToInt(o/1e6):(o=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==o&&(o*=1e3));let h=this.safeString(e,"price"),d=this.safeString(e,"size"),l=this.safeString(e,"side"),c=this.safeString(e,"fee");if(void 0!==c){let s=this.safeString(e,"feeCurrency"),r=this.safeCurrencyCode(s);void 0===r&&(r="sell"===l?t.quote:t.base),i={cost:c,currency:r,rate:this.safeString(e,"feeRate")}}let u=this.safeString(e,"orderType");"match"===u&&(u=void 0);let f=this.safeString(e,"value");return this.safeTrade({info:e,id:r,order:a,timestamp:o,datetime:this.iso8601(o),symbol:t.symbol,type:u,takerOrMaker:n,side:l,price:h,amount:d,cost:f,fee:i},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id},n=await this.publicGetTradeHistory(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTime(e={}){let t=await this.publicGetTimestamp(e);return this.safeInteger(t,"data")}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=a.id,o=this.safeInteger(this.timeframes,t),h={symbol:n};void 0!==o?h.granularity=o:h.granularity=t;let d=1e3*this.parseTimeframe(t),l=this.milliseconds();void 0!==i?(h.from=i,void 0===s&&(s=this.safeInteger(this.options,"fetchOHLCVLimit",200)),l=this.sum(i,s*d),h.to=l):void 0!==s&&(i=l-s*d,h.from=i);let c=await this.publicGetKlineQuery(this.extend(h,r)),u=this.safeList(c,"data",[]);return this.parseOHLCVs(u,a,t,i,s)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data"),s=this.safeString(i,"currency"),r=this.safeCurrencyCode(s),a=this.account();return a.free=this.safeString(i,"availableBalance"),a.total=this.safeString(i,"accountEquity"),t[r]=a,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"currency"),i={};void 0!==t&&(i={currency:this.currency(t).id});let s=await this.privateGetAccountOverview(this.extend(i,e));return this.parseBalance(s)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h=this.safeString2(a,"clientOid","clientOrderId",this.uuid());if(a=this.omit(a,["clientOid","clientOrderId"]),s<1)throw new n.InvalidOrder(this.id+" createOrder() minimum contract order amount is 1");let d=parseInt(this.amountToPrecision(e,s)),l={clientOid:h,side:i,symbol:o.id,type:t,size:d,leverage:1},c=this.safeValue2(a,"triggerPrice","stopPrice");if(c){l.stop="buy"===i?"up":"down";let t=this.safeString(a,"stopPriceType","TP");l.stopPriceType=t,l.stopPrice=this.priceToPrecision(e,c)}let u=this.safeStringUpper(a,"timeInForce");if("limit"===t){if(void 0===r)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for limit orders");l.price=this.priceToPrecision(e,r),void 0!==u&&(l.timeInForce=u)}let f=this.safeBool(a,"postOnly",!1),p=this.safeValue(a,"hidden");if(f&&void 0!==p)throw new n.BadRequest(this.id+" createOrder() does not support the postOnly parameter together with a hidden parameter");if(this.safeValue(a,"iceberg")&&void 0===this.safeValue(a,"visibleSize"))throw new n.ArgumentsRequired(this.id+" createOrder() requires a visibleSize parameter for iceberg orders");a=this.omit(a,["timeInForce","stopPrice","triggerPrice"]);let m=await this.privatePostOrders(this.extend(l,a)),g=this.safeValue(m,"data",{});return this.safeOrder({id:this.safeString(g,"orderId"),clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0,timeInForce:void 0,postOnly:void 0,triggerPrice:void 0,info:m},o)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteOrdersOrderId(this.extend({"order-id":e},i)),r=this.safeValue(s,"data");if(0===this.safeValue(r,"cancelledOrderIds").length)throw new n.InvalidOrder(this.id+" cancelOrder() order already cancelled");return this.parseOrder(r)}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.privateGetPositions(t),s=this.safeList(i,"data");return this.parsePositions(s,e)}parsePosition(e,t){let i;let s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let a=this.safeInteger(e,"currentTimestamp"),n=this.safeString(e,"currentQty");r.Y.stringGt(n,"0")?i="long":r.Y.stringLt(n,"0")&&(i="short");let o=r.Y.stringAbs(this.safeString(e,"posCost")),h=this.safeString(e,"posInit"),d=r.Y.stringDiv(h,o),l=this.safeString(e,"unrealisedPnl"),c=this.safeValue(e,"crossMode");return{info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:a,datetime:this.iso8601(a),initialMargin:this.parseNumber(h),initialMarginPercentage:this.parseNumber(d),maintenanceMargin:this.safeNumber(e,"posMaint"),maintenanceMarginPercentage:this.safeNumber(e,"maintMarginReq"),entryPrice:this.safeNumber(e,"avgEntryPrice"),notional:this.parseNumber(o),leverage:this.safeNumber(e,"realLeverage"),unrealizedPnl:this.parseNumber(l),contracts:this.parseNumber(r.Y.stringAbs(n)),contractSize:this.safeValue(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liquidationPrice"),markPrice:this.safeNumber(e,"markPrice"),collateral:this.safeNumber(e,"maintMargin"),marginMode:c?"cross":"isolated",side:i,percentage:this.parseNumber(r.Y.stringDiv(l,h)),stopLossPrice:void 0,takeProfitPrice:void 0}}async fetchFundingHistory(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");await this.loadMarkets();let r={symbol:this.market(e).id};void 0!==t&&(r.startAt=t),void 0!==i&&(r.maxCount=i);let a=await this.privateGetFundingHistory(this.extend(r,s)),o=this.safeValue(a,"data"),h=this.safeValue(o,"dataList",[]),d=h.length,l=[];for(let t=0;t<d;t++){let i=h[t],s=this.safeInteger(i,"timePoint");l.push({info:i,symbol:e,code:this.safeCurrencyCode(this.safeString(i,"settleCurrency")),timestamp:s,datetime:this.iso8601(s),id:this.safeNumber(i,"id"),amount:this.safeNumber(i,"funding"),fundingRate:this.safeNumber(i,"fundingRate"),markPrice:this.safeNumber(i,"markPrice"),positionQty:this.safeNumber(i,"positionQty"),positionCost:this.safeNumber(i,"positionCost")})}return l}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};void 0!==e&&(s.symbol=this.marketId(e));let r=this.safeValue2(t,"stop","trigger");t=this.omit(t,["stop","trigger"]),i=r?await this.privateDeleteStopOrders(this.extend(s,t)):await this.privateDeleteOrders(this.extend(s,t));let a=this.safeValue(i,"data"),n=[],o=this.safeValue(a,"cancelledOrderIds"),h=o.length;for(let e=0;e<h;e++){let t=this.safeString(o,e);n.push(this.safeOrder({id:t,clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0,timeInForce:void 0,postOnly:void 0,triggerPrice:void 0,info:i}))}return n}async fetchOrdersByStatus(e,t,i,s,r={}){let a,o;await this.loadMarkets();let h=this.safeValue2(r,"stop","trigger"),d=this.safeInteger(r,"until");r=this.omit(r,["trigger","stop","until"]),"closed"===e&&(e="done");let l={};if(h){if("open"!==e)throw new n.BadRequest(this.id+" fetchOrdersByStatus() can only fetch untriggered stop orders")}else l.status="open"===e?"active":"done";void 0!==t&&(a=this.market(t),l.symbol=a.id),void 0!==i&&(l.startAt=i),void 0!==d&&(l.endAt=d),o=h?await this.privateGetStopOrders(this.extend(l,r)):await this.privateGetOrders(this.extend(l,r));let c=this.safeValue(o,"data",{}),u=this.safeValue(c,"items",[]),f=u.length,p=[];for(let t=0;t<f;t++){let i=u[t],s=this.safeString(i,"status");e===s&&p.push(u[t])}return this.parseOrders(p,a,i,s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersByStatus("open",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersByStatus("closed",e,t,i,s)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets();let r={};if(void 0===e){let e=this.safeString2(i,"clientOid","clientOrderId");if(void 0===e)throw new n.InvalidOrder(this.id+" fetchOrder() requires parameter id or params.clientOid");r.clientOid=e,i=this.omit(i,["clientOid","clientOrderId"]),s=await this.privateGetClientOrderIdClientOid(this.extend(r,i))}else r["order-id"]=e,s=await this.privateGetOrdersOrderId(this.extend(r,i));let a=void 0!==t?this.market(t):void 0,o=this.safeDict(s,"data");return this.parseOrder(o,a)}parseOrder(e,t){let i;let s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let a=this.safeInteger(e,"createdAt"),n=this.safeString(e,"feeCurrency"),o=this.safeString(e,"dealSize"),h=this.safeString2(e,"dealFunds","filledValue");if(r.Y.stringGt(o,"0")){let e=this.safeString(t,"contractSize");i=t.linear?r.Y.stringDiv(h,r.Y.stringMul(e,o)):r.Y.stringDiv(r.Y.stringMul(e,o),h)}let d=this.safeBool(e,"isActive",!1),l=this.safeBool(e,"cancelExist",!1),c=this.safeString(e,"id");if("cancelledOrderIds"in e){let t=this.safeValue(e,"cancelledOrderIds");c=this.safeString(t,0)}return this.safeOrder({info:e,id:c,clientOrderId:this.safeString(e,"clientOid"),symbol:this.safeString(t,"symbol"),type:this.safeString(e,"type"),timeInForce:this.safeString(e,"timeInForce"),postOnly:this.safeValue(e,"postOnly"),side:this.safeString(e,"side"),amount:this.safeString(e,"size"),price:this.safeString(e,"price"),triggerPrice:this.safeString(e,"stopPrice"),cost:this.safeString(e,"dealValue"),filled:o,remaining:void 0,timestamp:a,datetime:this.iso8601(a),fee:{currency:this.safeCurrencyCode(n),cost:this.safeString(e,"fee")},status:l?"canceled":d?"open":"closed",lastTradeTimestamp:void 0,average:i,trades:void 0},t)}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetFundingRateSymbolCurrent(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseFundingRate(a,i)}async fetchFundingInterval(e,t={}){return await this.fetchFundingRate(e,t)}parseFundingRate(e,t){let i=this.safeInteger(e,"timePoint"),s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t,void 0,"contract"),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"value"),fundingTimestamp:i,fundingDatetime:this.iso8601(i),nextFundingRate:this.safeNumber(e,"predictedValue"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:this.parseFundingInterval(this.safeString(e,"granularity"))}}parseFundingInterval(e){return this.safeString({36e5:"1h",144e5:"4h",288e5:"8h",576e5:"16h",864e5:"24h"},e,e)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.startAt=t);let n=await this.privateGetFills(this.extend(a,s)),o=this.safeValue(n,"data",{}),h=this.safeList(o,"items",[]);return this.parseTrades(h,r,t,i)}async setMarginMode(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("0"!==e&&"1"!==e&&"isolated"!==e&&"cross"!==e)throw new n.ArgumentsRequired(this.id+" setMarginMode() marginMode must be 0/isolated or 1/cross");await this.loadMarkets(),"isolated"===e&&(e="0"),"cross"===e&&(e="1");let s={symbol:this.market(t).id,marginType:this.parseToInt(e)};return await this.privatePostMarginTypeChange(s)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t],o=this.safeValue(this.options,"versions",{}),h=this.safeValue(o,t,{}),d=this.safeValue(h,i,{}),c=this.safeString(d,e,this.version);n+="/api/"+this.safeString(s,"version",c)+"/"+this.implodeParams(e,s);let u=this.omit(s,this.extractParams(e)),f=Object.keys(u).length;if("public"===t)f&&(n+="?"+this.urlencode(u));else{this.checkRequiredCredentials();let t="/api/v1/"+this.implodeParams(e,s),o=this.urlencode(u);"GET"!==i&&"HEAD"!==i?a=u:f&&""!==o&&(n+="?"+o,t+="?"+o);let h=this.milliseconds().toString(),d="";void 0!==a&&(d=a=this.json(u));let c=h+i+t+d;(r={"PF-API-SIGN":this.hmac(this.encode(c),this.encode(this.secret),l.s,"base64"),"PF-API-TIMESTAMP":h,"PF-API-KEY":this.apiKey,"PF-API-PASSPHRASE":this.password})["Content-Type"]="application/json"}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,h){if(!n){this.throwBroadlyMatchedException(this.exceptions.broad,a,a);return}let d=this.safeString(n,"code"),l=this.safeString(n,"msg",""),c=this.id+" "+l;this.throwExactlyMatchedException(this.exceptions.exact,l,c),this.throwExactlyMatchedException(this.exceptions.exact,d,c),this.throwBroadlyMatchedException(this.exceptions.broad,a,c)}}class se extends s.k{}let st=se;class si extends st{describe(){return this.deepExtend(super.describe(),{id:"probit",name:"ProBit",countries:["SC","KR"],rateLimit:50,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrder:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","10m":"10m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"1W","1M":"1M"},version:"v1",urls:{logo:"https://user-images.githubusercontent.com/51840849/79268032-c4379480-7ea2-11ea-80b3-dd96bb29fd0d.jpg",api:{accounts:"https://accounts.probit.com",public:"https://api.probit.com/api/exchange",private:"https://api.probit.com/api/exchange"},www:"https://www.probit.com",doc:["https://docs-en.probit.com","https://docs-ko.probit.com"],fees:"https://support.probit.com/hc/en-us/articles/360020968611-Trading-Fees",referral:"https://www.probit.com/r/34608773"},api:{public:{get:{market:1,currency:1,currency_with_platform:1,time:1,ticker:1,order_book:1,trade:1,candle:1}},private:{post:{new_order:2,cancel_order:1,withdrawal:2},get:{balance:1,order:1,open_order:1,order_history:1,trade_history:1,deposit_address:1,"transfer/payment":1}},accounts:{post:{token:1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},exceptions:{exact:{UNAUTHORIZED:n.AuthenticationError,INVALID_ARGUMENT:n.BadRequest,TRADING_UNAVAILABLE:n.ExchangeNotAvailable,NOT_ENOUGH_BALANCE:n.InsufficientFunds,NOT_ALLOWED_COMBINATION:n.BadRequest,INVALID_ORDER:n.InvalidOrder,RATE_LIMIT_EXCEEDED:n.RateLimitExceeded,MARKET_UNAVAILABLE:n.ExchangeNotAvailable,INVALID_MARKET:n.BadSymbol,MARKET_CLOSED:n.MarketClosed,MARKET_NOT_FOUND:n.BadSymbol,INVALID_CURRENCY:n.BadRequest,TOO_MANY_OPEN_ORDERS:n.DDoSProtection,DUPLICATE_ADDRESS:n.InvalidAddress,invalid_grant:n.AuthenticationError}},requiredCredentials:{apiKey:!0,secret:!0},precisionMode:d.kb,options:{createMarketBuyOrderRequiresPrice:!0,timeInForce:{limit:"gtc",market:"ioc"},networks:{BEP20:"BSC",ERC20:"ETH",TRC20:"TRON"}},commonCurrencies:{BB:"Baby Bali",CBC:"CryptoBharatCoin",CTK:"Cryptyk",CTT:"Castweet",DKT:"DAKOTA",EGC:"EcoG9coin",EPS:"Epanus",FX:"Fanzy",GM:"GM Holding",GOGOL:"GOL",GOL:"Goldofir",HUSL:"The Hustle App",LAND:"Landbox",SST:"SocialSwap",TCT:"Top Coin Token",TOR:"Torex",UNI:"UNICORN Token",UNISWAP:"UNI"}})}async fetchMarkets(e={}){let t=await this.publicGetMarket(e),i=this.safeValue(t,"data",[]);return this.parseMarkets(i)}parseMarket(e){let t=this.safeString(e,"id"),i=this.safeString(e,"base_currency_id"),s=this.safeString(e,"quote_currency_id"),a=this.safeCurrencyCode(i),n=this.safeCurrencyCode(s),o=this.safeBool(e,"closed",!1),h=this.safeBool(e,"show_in_ui",!0),d=this.safeString(e,"taker_fee_rate"),l=r.Y.stringDiv(d,"100"),c=this.safeString(e,"maker_fee_rate"),u=r.Y.stringDiv(c,"100");return{id:t,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!o&&h,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(l),maker:this.parseNumber(u),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"quantity_precision"))),price:this.safeNumber(e,"price_increment"),cost:this.parseNumber(this.parsePrecision(this.safeString(e,"cost_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"min_quantity"),max:this.safeNumber(e,"max_quantity")},price:{min:this.safeNumber(e,"min_price"),max:this.safeNumber(e,"max_price")},cost:{min:this.safeNumber(e,"min_cost"),max:this.safeNumber(e,"max_cost")}},created:void 0,info:e}}async fetchCurrencies(e={}){let t=await this.publicGetCurrencyWithPlatform(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t;let r=i[e],a=this.safeString(r,"id"),n=this.safeCurrencyCode(a),o=this.safeValue(r,"display_name"),h=this.safeString(o,"en-us"),d=this.safeValue(r,"platform",[]),l=this.sortBy(d,"priority"),c={};for(let e=0;e<l.length;e++){let i=l[e],s=this.safeString(i,"id"),r=this.networkIdToCode(s),n=this.safeValue(i,"deposit_suspended"),o=this.safeValue(i,"withdrawal_suspended"),h=!n,d=!o,u=h&&d;u&&(t=i);let f=this.parsePrecision(this.safeString(i,"precision")),p=this.safeValue(i,"withdrawal_fee",[]),m=this.safeValue(p,0,{});for(let e=0;e<p.length;e++){let t=p[e];if(this.safeString(t,"currency_id")===a){m=t;break}}c[r]={id:s,network:r,active:u,deposit:h,withdraw:d,fee:this.safeNumber(m,"amount"),precision:this.parseNumber(f),limits:{withdraw:{min:this.safeNumber(i,"min_withdrawal_amount"),max:void 0},deposit:{min:this.safeNumber(i,"min_deposit_amount"),max:void 0}},info:i}}void 0===t&&(t=this.safeValue(l,0,{}));let u=this.safeValue(t,"deposit_suspended"),f=this.safeValue(t,"withdrawal_suspended"),p=!u,m=!f,g=p&&m,y=this.safeValue(t,"withdrawal_fee",{}),v=[];for(let e=0;e<y.length;e++){let t=y[e],i=this.safeNumber(t,"amount"),s=this.safeInteger(t,"priority");void 0!==i&&void 0!==s&&v.push(t)}let b=this.sortBy(v,"priority"),w=this.safeValue(b,0,{}),k=this.safeNumber(w,"amount");s[n]={id:a,code:n,info:r,name:h,active:g,deposit:p,withdraw:m,fee:k,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(t,"min_deposit_amount"),max:void 0},withdraw:{min:this.safeNumber(t,"min_withdrawal_amount"),max:void 0}},networks:c}}return s}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){let s=i[e],r=this.safeString(s,"currency_id"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"total"),n.free=this.safeString(s,"available"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={market_id:s.id},a=await this.publicGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"data",[]),o=this.groupBy(n,"side");return this.parseOrderBook(o,s.symbol,void 0,"buy","sell","price","quantity")}async fetchTickers(e,t={}){await this.loadMarkets();let i={};if(void 0!==e){let t=this.marketIds(e);i.market_ids=t.join(",")}let s=await this.publicGetTicker(this.extend(i,t)),r=this.safeList(s,"data",[]);return this.parseTickers(r,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={market_ids:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeValue(r,"data",[]),o=this.safeValue(a,0);if(void 0===o)throw new n.BadResponse(this.id+" fetchTicker() returned an empty response");return this.parseTicker(o,i)}parseTicker(e,t){let i=this.parse8601(this.safeString(e,"time")),s=this.safeString(e,"market_id"),r=this.safeSymbol(s,t,"-"),a=this.safeString(e,"last"),n=this.safeString(e,"change"),o=this.safeString(e,"base_volume"),h=this.safeString(e,"quote_volume");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:n,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:h,info:e},t)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.milliseconds(),n={limit:100,start_time:this.iso8601(a-31536e6),end_time:this.iso8601(a)};void 0!==e&&(r=this.market(e),n.market_id=r.id),void 0!==t&&(n.start_time=this.iso8601(t),n.end_time=this.iso8601(Math.min(a,t+31536e6))),void 0!==i&&(n.limit=i);let o=await this.privateGetTradeHistory(this.extend(n,s)),h=this.safeList(o,"data",[]);return this.parseTrades(h,r,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market_id:r.id,start_time:"1970-01-01T00:00:00.000Z",end_time:this.iso8601(this.milliseconds())};void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==i?a.limit=Math.min(i,1e3):a.limit=1e3;let n=await this.publicGetTrade(this.extend(a,s)),o=this.safeList(n,"data",[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i,s;let r=this.parse8601(this.safeString(e,"time")),a=this.safeString(e,"id");if(void 0!==a){let e=a.split(":");i=this.safeString(e,0)}i=this.safeString(e,"market_id",i);let n=this.safeSymbol(i,t,"-"),o=this.safeString(e,"side"),h=this.safeString(e,"price"),d=this.safeString(e,"quantity"),l=this.safeString(e,"order_id"),c=this.safeString(e,"fee_amount");if(void 0!==c){let t=this.safeString(e,"fee_currency_id");s={cost:c,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:a,info:e,timestamp:r,datetime:this.iso8601(r),symbol:n,order:l,type:void 0,side:o,takerOrMaker:void 0,price:h,amount:d,cost:void 0,fee:s},t)}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.parse8601(this.safeString(t,"data"))}normalizeOHLCVTimestamp(e,t,i=!1){let s=this.parseTimeframe(t);if("1M"===t){let t;let s=this.iso8601(e).split("-"),r=this.safeString(s,0),a=this.safeInteger(s,1);return i&&(t=this.sum(a,1).toString()),a<10&&(t="0"+a.toString()),r+"-"+t+"-01T00:00:00.000Z"}if("1w"!==t)return e=this.parseToInt(e/1e3),e=s*this.parseToInt(e/s),i&&(e=this.sum(e,s)),this.iso8601(1e3*e);{let t=Math.floor(((e=this.parseToInt(e/1e3))-259200)/s),r=this.sum(259200,t*s);return i&&(r=this.sum(r,s)),this.iso8601(1e3*r)}}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeString(this.timeframes,t,t);s=void 0===s?100:s;let o=this.sum(s,1);o=Math.min(1e3,o);let h={market_ids:a.id,interval:n,sort:"asc",limit:o},d=this.milliseconds(),l=this.parseTimeframe(t),c=i,u=d;void 0===i?(void 0===s&&(s=o),c=d-s*l*1e3):u=void 0===s?d:this.sum(i,this.sum(s,1)*l*1e3);let f=this.normalizeOHLCVTimestamp(c,t),p=this.normalizeOHLCVTimestamp(u,t,!0);h.start_time=f,h.end_time=p;let m=await this.publicGetCandle(this.extend(h,r)),g=this.safeList(m,"data",[]);return this.parseOHLCVs(g,a,t,i,s)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"start_time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"base_volume")]}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),t=this.parse8601(t);let a={};void 0!==e&&(r=this.market(e),a.market_id=r.id);let n=await this.privateGetOpenOrder(this.extend(a,s)),o=this.safeList(n,"data");return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={start_time:this.iso8601(0),end_time:this.iso8601(this.milliseconds()),limit:100};void 0!==e&&(r=this.market(e),a.market_id=r.id),t&&(a.start_time=this.iso8601(t)),i&&(a.limit=i);let n=await this.privateGetOrderHistory(this.extend(a,s)),o=this.safeList(n,"data");return this.parseOrders(o,r,t,i)}async fetchOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),r={market_id:s.id},a=this.safeString2(i,"clientOrderId","client_order_id");void 0!==a?r.client_order_id=a:r.order_id=e;let o=this.omit(i,["clientOrderId","client_order_id"]),h=await this.privateGetOrder(this.extend(r,o)),d=this.safeValue(h,"data",[]),l=this.safeDict(d,0);return this.parseOrder(l,s)}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed"},e,e)}parseOrder(e,t){let i=this.parseOrderStatus(this.safeString(e,"status")),s=this.safeString(e,"id"),a=this.safeString(e,"type"),n=this.safeString(e,"side"),o=this.safeString(e,"market_id"),h=this.safeSymbol(o,t,"-"),d=this.parse8601(this.safeString(e,"time")),l=this.safeString(e,"limit_price"),c=this.safeString(e,"filled_quantity"),u=this.safeString(e,"open_quantity"),f=this.safeString(e,"cancelled_quantity");void 0!==f&&(u=r.Y.stringAdd(u,f));let p=this.safeString(e,"quantity",r.Y.stringAdd(c,u)),m=this.safeString2(e,"filled_cost","cost");"market"===a&&(l=void 0);let g=this.safeString(e,"client_order_id"),y=this.safeStringUpper(e,"time_in_force");return this.safeOrder({id:s,info:e,clientOrderId:g,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:h,type:a,timeInForce:y,side:n,status:i,price:l,triggerPrice:void 0,amount:p,filled:c,remaining:u,average:void 0,cost:m,fee:void 0,trades:void 0},t)}costToPrecision(e,t){return this.decimalToPrecision(t,d.R3,this.markets[e].precision.cost,this.precisionMode)}async createOrder(e,t,i,s,a,o={}){let h;await this.loadMarkets();let d=this.market(e),l=this.safeValue(this.options,"timeInForce"),c=this.safeValue(l,t),u=this.safeString2(o,"timeInForce","time_in_force",c),f={market_id:d.id,type:t,side:i,time_in_force:u},p=this.safeString2(o,"clientOrderId","client_order_id");if(void 0!==p&&(f.client_order_id=p),"limit"===t)f.limit_price=this.priceToPrecision(e,a),f.quantity=this.amountToPrecision(e,s);else if("market"===t){if("buy"===i){let t=!0;[t,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let i=this.safeString(o,"cost");if(o=this.omit(o,"cost"),void 0!==i)h=this.costToPrecision(e,i);else if(t){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend in the amount argument");{let t=this.numberToString(s),i=this.numberToString(a),n=r.Y.stringMul(t,i);h=this.costToPrecision(e,n)}}else h=this.costToPrecision(e,s);f.cost=h}else f.quantity=this.amountToPrecision(e,s)}let m=this.omit(o,["timeInForce","time_in_force","clientOrderId","client_order_id"]),g=await this.privatePostNewOrder(this.extend(f,m)),y=this.safeValue(g,"data"),v=this.parseOrder(y,d);return"market"===t&&"buy"===i&&(v.amount=void 0,v.cost=this.parseNumber(h),v.remaining=void 0),v}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s={market_id:this.market(t).id,order_id:e},r=await this.privatePostCancelOrder(this.extend(s,i)),a=this.safeDict(r,"data");return this.parseOrder(a)}parseDepositAddress(e,t){let i=this.safeString(e,"address"),s=this.safeString(e,"destination_tag"),r=this.safeString(e,"currency_id"),a=(t=this.safeCurrency(r,t)).code,n=this.safeString(e,"platform_id");return this.checkAddress(i),{info:e,currency:a,network:n,address:i,tag:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={currency_id:i.id},r=this.safeValue(this.options,"networks",{}),a=this.safeStringUpper(t,"network");void 0!==(a=this.safeString(r,a,a))&&(s.platform_id=a,t=this.omit(t,"platform_id"));let o=await this.privateGetDepositAddress(this.extend(s,t)),h=this.safeValue(o,"data",[]),d=this.safeValue(h,0);if(void 0===d)throw new n.InvalidAddress(this.id+" fetchDepositAddress() returned an empty response");return this.parseDepositAddress(d,i)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();let i={};if(e){let t=[];for(let i=0;i<e.length;i++){let s=this.currency(e[i]);t.push(s.id)}i.currency_id=e.join(",")}let s=await this.privateGetDepositAddress(this.extend(i,t)),r=this.safeList(s,"data",[]);return this.parseDepositAddresses(r,e)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e);void 0===s&&(s="");let n={currency_id:a.id,address:i,destination_tag:s,amount:this.numberToString(t)},o=this.safeValue(this.options,"networks",{}),h=this.safeStringUpper(r,"network");void 0!==(h=this.safeString(o,h,h))&&(n.platform_id=h,r=this.omit(r,"network"));let d=await this.privatePostWithdrawal(this.extend(n,r)),l=this.safeDict(d,"data");return this.parseTransaction(l,a)}async fetchDeposits(e,t,i,s={}){return await this.fetchTransactions(e,t,i,this.extend({type:"deposit"},s))}async fetchWithdrawals(e,t,i,s={}){return await this.fetchTransactions(e,t,i,this.extend({type:"withdrawal"},s))}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency_id=r.id),void 0!==t?a.start_time=this.iso8601(t):a.start_time=this.iso8601(1);let n=this.safeInteger(s,"until");void 0!==n?(a.end_time=this.iso8601(n),s=this.omit(s,["until"])):a.end_time=this.iso8601(this.milliseconds()),void 0!==i?a.limit=i:a.limit=100;let o=await this.privateGetTransferPayment(this.extend(a,s)),h=this.safeList(o,"data",[]);return this.parseTransactions(h,r,t,i)}parseTransaction(e,t){let i;let s=this.safeString(e,"id"),r=this.safeString(e,"platform_id"),a=this.networkIdToCode(r),n=this.safeNumber(e,"amount"),o=this.safeString(e,"address"),h=this.safeString(e,"destination_tag"),d=this.safeString(e,"hash"),l=this.parse8601(this.safeString(e,"time")),c=this.safeString(e,"type"),u=this.safeString(e,"currency_id"),f=this.safeCurrencyCode(u),p=this.parseTransactionStatus(this.safeString(e,"status")),m=this.safeString(e,"fee");return void 0!==m&&"0"!==m&&(i={currency:f,cost:this.parseNumber(m)}),{id:s,currency:f,amount:n,network:a,addressFrom:void 0,address:o,addressTo:o,tagFrom:void 0,tag:h,tagTo:h,status:p,type:c,txid:d,timestamp:l,datetime:this.iso8601(l),updated:void 0,internal:void 0,comment:void 0,fee:i,info:e}}parseTransactionStatus(e){return this.safeString({requested:"pending",pending:"pending",confirming:"pending",confirmed:"pending",applying:"pending",done:"ok",cancelled:"canceled",cancelling:"canceled"},e,e)}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetCurrencyWithPlatform(t),s=this.safeList(i,"data");return this.parseDepositWithdrawFees(s,e,"id")}parseDepositWithdrawFee(e,t){let i=this.depositWithdrawFee({}),s=this.safeValue(e,"platform",[]),r={fee:void 0,percentage:void 0};for(let e=0;e<s.length;e++){let a=s[e],n=this.safeString(a,"id"),o=this.networkIdToCode(n,t.code),h=this.safeValue(a,"withdrawal_fee",{}),d=this.safeNumber(h[0],"amount");if(h.length){let t={fee:d,percentage:void 0===d&&void 0};0===e&&(i.withdraw=t),i.networks[o]={withdraw:t,deposit:r}}}return i.info=e,i}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/",h=this.omit(s,this.extractParams(e));if("accounts"===t){this.checkRequiredCredentials(),o+=this.implodeParams(e,s);let t=this.apiKey+":"+this.secret;r={Authorization:"Basic "+this.stringToBase64(t),"Content-Type":"application/json"},Object.keys(h).length&&(a=this.json(h))}else if(o+=this.version+"/","public"===t)o+=this.implodeParams(e,s),Object.keys(h).length&&(o+="?"+this.urlencode(h));else if("private"===t){let t=this.milliseconds();this.checkRequiredCredentials();let d=this.safeInteger(this.options,"expires");if(void 0===d||d<t)throw new n.AuthenticationError(this.id+" access token expired, call signIn() method");r={Authorization:"Bearer "+this.safeString(this.options,"accessToken")},o+=this.implodeParams(e,s),"GET"===i?Object.keys(h).length&&(o+="?"+this.urlencode(h)):Object.keys(h).length&&(a=this.json(h),r["Content-Type"]="application/json")}return{url:o,method:i,body:a,headers:r}}async signIn(e={}){this.checkRequiredCredentials();let t=await this.accountsPostToken(this.extend({grant_type:"client_credentials"},e)),i=this.safeInteger(t,"expires_in"),s=this.safeString(t,"access_token");return this.options.accessToken=s,this.options.expires=this.sum(this.milliseconds(),1e3*i),t}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&"errorCode"in o){let e=this.safeString(o,"errorCode");if(void 0!==e){let t=this.safeString(o,"message",""),i=this.safeValue(o,"details"),s=this.id+" "+e+" "+t+" "+this.json(i);throw"exact"in this.exceptions&&this.throwExactlyMatchedException(this.exceptions.exact,e,s),"broad"in this.exceptions&&this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new n.ExchangeError(s)}}}}class ss extends s.k{}let sr=ss;class sa extends sr{describe(){return this.deepExtend(super.describe(),{id:"timex",name:"TimeX",countries:["AU"],version:"v1",rateLimit:1500,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},timeframes:{"1m":"I1","5m":"I5","15m":"I15","30m":"I30","1h":"H1","2h":"H2","4h":"H4","6h":"H6","12h":"H12","1d":"D1","1w":"W1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/70423869-6839ab00-1a7f-11ea-8f94-13ae72c31115.jpg",api:{rest:"https://plasma-relay-backend.timex.io"},www:"https://timex.io",doc:"https://plasma-relay-backend.timex.io/swagger-ui/index.html",referral:"https://timex.io/?refcode=1x27vNkTbP1uwkCck"},api:{addressbook:{get:["me"],post:["","id/{id}","id/{id}/remove"]},custody:{get:["credentials","credentials/h/{hash}","credentials/k/{key}","credentials/me","credentials/me/address","deposit-addresses","deposit-addresses/h/{hash}"]},history:{get:["orders","orders/details","orders/export/csv","trades","trades/export/csv"]},currencies:{get:["a/{address}","i/{id}","s/{symbol}"],post:["perform","prepare","remove/perform","s/{symbol}/remove/prepare","s/{symbol}/update/perform","s/{symbol}/update/prepare"]},manager:{get:["deposits","transfers","withdrawals"]},markets:{get:["i/{id}","s/{symbol}"],post:["perform","prepare","remove/perform","s/{symbol}/remove/prepare","s/{symbol}/update/perform","s/{symbol}/update/prepare"]},public:{get:["candles","currencies","markets","orderbook","orderbook/raw","orderbook/v2","tickers","trades"]},statistics:{get:["address"]},trading:{get:["balances","fees","orders"],post:["orders","orders/json"],put:["orders","orders/json"],delete:["orders","orders/json"]},tradingview:{get:["config","history","symbol_info","time"]}},precisionMode:d.kb,exceptions:{exact:{0:n.ExchangeError,1:n.NotSupported,4e3:n.BadRequest,4001:n.BadRequest,4002:n.InsufficientFunds,4003:n.AuthenticationError,4004:n.AuthenticationError,4005:n.BadRequest,4006:n.BadRequest,4007:n.BadRequest,4300:n.PermissionDenied,4100:n.AuthenticationError,4400:n.OrderNotFound,5001:n.InvalidOrder,5002:n.ExchangeError,400:n.BadRequest,401:n.AuthenticationError,403:n.PermissionDenied,404:n.OrderNotFound,429:n.RateLimitExceeded,500:n.ExchangeError,503:n.ExchangeNotAvailable},broad:{Insufficient:n.InsufficientFunds}},options:{expireIn:31536e3,fetchTickers:{period:"1d"},fetchTrades:{sort:"timestamp,asc"},fetchMyTrades:{sort:"timestamp,asc"},fetchOpenOrders:{sort:"createdAt,asc"},fetchClosedOrders:{sort:"createdAt,asc"},defaultSort:"timestamp,asc",defaultSortOrders:"createdAt,asc"}})}async fetchTime(e={}){let t=await this.tradingviewGetTime(e);return 1e3*this.parseToInt(t)}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e);return this.parseMarkets(t)}async fetchCurrencies(e={}){let t=await this.publicGetCurrencies(e);return this.parseCurrencies(t)}async fetchDeposits(e,t,i,s={}){let r=this.safeString(s,"address");if(s=this.omit(s,"address"),void 0===r)throw new n.ArgumentsRequired(this.id+" fetchDeposits() requires an address parameter");let a=await this.managerGetDeposits(this.extend({address:r},s)),o=this.safeCurrency(e);return this.parseTransactions(a,o,t,i)}async fetchWithdrawals(e,t,i,s={}){let r=this.safeString(s,"address");if(s=this.omit(s,"address"),void 0===r)throw new n.ArgumentsRequired(this.id+" fetchDeposits() requires an address parameter");let a=await this.managerGetWithdrawals(this.extend({address:r},s)),o=this.safeCurrency(e);return this.parseTransactions(a,o,t,i)}getCurrencyByAddress(e){let t=this.currencies;for(let i=0;i<t.length;i++){let s=t[i],r=this.safeValue(s,"info",{});if(this.safeString(r,"address")===e)return s}}parseTransaction(e,t){let i=this.safeString(e,"timestamp"),s=this.safeString(e,"token","");return t=this.getCurrencyByAddress(s),{info:e,id:this.safeString(e,"transferHash"),txid:this.safeString(e,"txid"),timestamp:this.parse8601(i),datetime:i,network:void 0,address:void 0,addressTo:this.safeString(e,"to"),addressFrom:this.safeString(e,"from"),tag:void 0,tagTo:void 0,tagFrom:void 0,type:void 0,amount:this.safeNumber(e,"value"),currency:this.safeCurrencyCode(void 0,t),status:"ok",updated:void 0,internal:void 0,comment:void 0,fee:void 0}}async fetchTickers(e,t={}){await this.loadMarkets();let i=this.safeString(this.options.fetchTickers,"period","1d"),s={period:this.timeframes[i]},r=await this.publicGetTickers(this.extend(s,t));return this.parseTickers(r,e)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.safeString(this.options.fetchTickers,"period","1d"),r={market:i.id,period:this.timeframes[s]},a=await this.publicGetTickers(this.extend(r,t)),n=this.safeDict(a,0);return this.parseTicker(n,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.publicGetOrderbookV2(this.extend(s,i)),a=this.parse8601(this.safeString(r,"timestamp"));return this.parseOrderBook(r,e,a,"bid","ask","price","baseTokenAmount")}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=this.safeValue(this.options,"fetchTrades",{}),n=this.safeValue(a,"sort","timestamp,asc"),o=this.safeString(s,"sort",n),h=this.omit(s,"sort"),d={market:r.id,sort:o};void 0!==t&&(d.from=this.iso8601(t)),void 0!==i&&(d.size=i);let l=await this.publicGetTrades(this.extend(d,h));return this.parseTrades(l,r,t,i)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={market:a.id,period:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t);if(void 0===s&&(s=1e3),void 0!==i)n.from=this.iso8601(i),n.till=this.iso8601(this.sum(i,this.sum(s,1)*o*1e3));else{let e=this.milliseconds();n.till=this.iso8601(e),n.from=this.iso8601(e-s*o*1e3-1)}let h=await this.publicGetCandles(this.extend(n,r));return this.parseOHLCVs(h,a,t,i,s)}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"totalBalance"),n.used=this.safeString(s,"lockedBalance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.tradingGetBalances(e);return this.parseBalance(t)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),h=i.toUpperCase(),d=t.toUpperCase();this.safeBool(a,"postOnly",!1)&&(d="POST_ONLY",a=this.omit(a,["postOnly"]));let l={symbol:o.id,quantity:this.amountToPrecision(e,s),side:h,orderTypes:d},c=a;if("LIMIT"===d||"POST_ONLY"===d){l.price=this.priceToPrecision(e,r);let i=this.safeInteger(this.options,"expireIn"),s=this.safeValue(a,"expireTime"),o=this.safeValue(a,"expireIn",i);if(void 0!==s)l.expireTime=s;else if(void 0!==o)l.expireIn=o;else throw new n.InvalidOrder(this.id+" createOrder() method requires a expireTime or expireIn param for a "+t+" order, you can also set the expireIn exchange-wide option");c=this.omit(a,["expireTime","expireIn"])}else l.price=0;let u=await this.tradingPostOrders(this.extend(l,c)),f=this.safeValue(u,"orders",[]),p=this.safeDict(f,0,{});return this.parseOrder(p,o)}async editOrder(e,t,i,s,r,a,n={}){await this.loadMarkets();let o=this.market(t),h={id:e};void 0!==r&&(h.quantity=this.amountToPrecision(t,r)),void 0!==a&&(h.price=this.priceToPrecision(t,a));let d=await this.tradingPutOrders(this.extend(h,n));if("unchangedOrders"in d){let e=this.safeValue(d,"unchangedOrders",[]),t=this.safeString(e,0);return this.safeOrder({id:t,info:d})}let l=this.safeValue(d,"changedOrders",[]),c=this.safeValue(l,0,{}),u=this.safeDict(c,"newOrder",{});return this.parseOrder(u,o)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.cancelOrders([e],t,i);return this.safeDict(s,0)}async cancelOrders(e,t,i={}){await this.loadMarkets();let s=await this.tradingDeleteOrders(this.extend({id:e},i)),r=this.safeList(s,"changedOrders",[]),a=this.safeList(s,"unchangedOrders",[]),n=[];for(let e=0;e<r.length;e++){let t=this.safeDict(r[e],"newOrder");n.push(this.parseOrder(t))}for(let e=0;e<a.length;e++)n.push(this.safeOrder({info:a[e],id:a[e],status:"unchanged"}));return n}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.historyGetOrdersDetails({orderHash:e}),r=this.safeValue(s,"order",{}),a=this.safeList(s,"trades",[]);return this.parseOrder(this.extend(r,{trades:a}))}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeValue(this.options,"fetchOpenOrders",{}),n=this.safeValue(a,"sort","createdAt,asc"),o=this.safeString(s,"sort",n),h=this.omit(s,"sort"),d={sort:o};void 0!==e&&(r=this.market(e),d.symbol=r.id),void 0!==i&&(d.size=i);let l=await this.tradingGetOrders(this.extend(d,h)),c=this.safeList(l,"orders",[]);return this.parseOrders(c,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeValue(this.options,"fetchClosedOrders",{}),n=this.safeValue(a,"sort","createdAt,asc"),o=this.safeString(s,"sort",n),h=this.omit(s,"sort"),d={sort:o,side:"BUY"};void 0!==e&&(r=this.market(e),d.symbol=r.id),void 0!==t&&(d.from=this.iso8601(t)),void 0!==i&&(d.size=i);let l=await this.historyGetOrders(this.extend(d,h)),c=this.safeList(l,"orders",[]);return this.parseOrders(c,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.safeValue(this.options,"fetchMyTrades",{}),n=this.safeValue(a,"sort","timestamp,asc"),o=this.safeString(s,"sort",n),h=this.omit(s,"sort"),d={sort:o};void 0!==e&&(r=this.market(e),d.symbol=r.id),void 0!==t&&(d.from=this.iso8601(t)),void 0!==i&&(d.size=i);let l=await this.historyGetTrades(this.extend(d,h)),c=this.safeList(l,"trades",[]);return this.parseTrades(c,r,t,i)}parseTradingFee(e,t){let i=this.safeString(e,"market"),s=this.safeNumber(e,"fee");return{info:e,symbol:this.safeSymbol(i,t),maker:s,taker:s,percentage:void 0,tierBased:void 0}}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={markets:i.id},r=await this.tradingGetFees(this.extend(s,t)),a=this.safeValue(r,0,{});return this.parseTradingFee(a,i)}parseMarket(e){let t=this.safeValue(e,"locked"),i=this.safeString(e,"symbol"),s=this.safeString(e,"baseCurrency"),a=this.safeString(e,"quoteCurrency"),n=this.safeCurrencyCode(s),o=this.safeCurrencyCode(a),h=this.safeString(e,"quantityIncrement"),d=this.safeString(e,"baseMinSize"),l=r.Y.stringMax(h,d),c=this.safeString(e,"tickSize"),u=this.safeNumber(e,"quoteMinSize");return{id:i,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:s,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!t,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(e,"takerFee"),maker:this.safeNumber(e,"makerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"quantityIncrement"),price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(l),max:void 0},price:{min:this.parseNumber(c),max:void 0},cost:{min:u,max:void 0}},created:void 0,info:e}}parseCurrency(e){let t;let i=this.safeString(e,"symbol"),s=this.safeCurrencyCode(i),r=this.safeString(e,"name"),a=this.safeValue(e,"depositEnabled"),n=this.safeValue(e,"withdrawalEnabled"),o=this.safeValue(e,"active"),h=a&&n&&o,d=this.safeString(e,"withdrawalFee"),l=this.safeInteger(e,"tradeDecimals");if(void 0!==d&&void 0!==l){let e=d.length-l;if(e>0){let i=d.slice(0,e),s=d.slice(-e);t=this.parseNumber(i+"."+s)}else{let i=".";for(let t=0;t<-e;t++)i+="0";t=this.parseNumber(i+d)}}return this.safeCurrencyStructure({id:s,code:s,info:e,type:void 0,name:r,active:h,deposit:a,withdraw:n,fee:t,precision:this.parseNumber(this.parsePrecision(this.safeString(e,"decimals"))),limits:{withdraw:{min:t,max:void 0},amount:{min:void 0,max:void 0}},networks:{}})}parseTicker(e,t){let i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"/"),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"last"),n=this.safeString(e,"open");return this.safeTicker({symbol:s,info:e,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"volumeQuote")},t)}parseTrade(e,t){let i,s;let a=this.safeString(e,"symbol"),n=this.safeSymbol(a,t),o=this.parse8601(this.safeString(e,"timestamp")),h=this.safeString(e,"price"),d=this.safeString(e,"quantity"),l=this.parseNumber(h),c=this.parseNumber(d),u=this.parseNumber(r.Y.stringMul(h,d)),f=this.safeString(e,"id"),p=this.safeStringLower2(e,"direction","side"),m=this.safeStringLower(e,"makerOrTaker");void 0!==m&&(i=this.safeString(e,m+"OrderId"));let g=this.safeNumber(e,"fee"),y=this.safeCurrencyCode(this.safeString(e,"feeToken"));return void 0!==g&&(s={cost:g,currency:y}),{info:e,id:f,timestamp:o,datetime:this.iso8601(o),symbol:n,order:i,type:void 0,side:p,price:l,amount:c,cost:u,takerOrMaker:m,fee:s}}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}parseOrder(e,t){let i;let s=this.safeString(e,"id"),a=this.safeStringLower(e,"type"),n=this.safeStringLower(e,"side"),o=this.safeString(e,"symbol"),h=this.safeSymbol(o,t),d=this.parse8601(this.safeString(e,"createdAt")),l=this.safeString(e,"price"),c=this.safeString(e,"quantity"),u=this.safeString(e,"filledQuantity"),f=this.omitZero(this.safeString(e,"cancelledQuantity"));i=r.Y.stringEquals(u,c)?"closed":void 0!==f?"canceled":"open";let p=this.safeValue(e,"trades",[]),m=this.safeString(e,"clientOrderId");return this.safeOrder({info:e,id:s,clientOrderId:m,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:h,type:a,timeInForce:void 0,postOnly:void 0,side:n,price:l,triggerPrice:void 0,amount:c,cost:void 0,average:void 0,filled:u,remaining:void 0,status:i,fee:void 0,trades:p},t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={symbol:i.code},r=await this.currenciesGetSSymbol(this.extend(s,t)),a=this.safeDict(r,"currency",{});return this.parseDepositAddress(a,i)}parseDepositAddress(e,t){let i=this.safeString(e,"symbol");return{info:e,currency:this.safeCurrencyCode(i,t),network:void 0,address:this.safeString(e,"address"),tag:void 0}}sign(e,t="public",i="GET",s={},r,a){let n=this.extractParams(e);e=this.implodeParams(e,s),s=this.omit(s,n);let o=this.urls.api.rest+"/"+t+"/"+e;return Object.keys(s).length&&(o+="?"+this.urlencodeWithArrayRepeat(s)),"public"!==t&&"tradingview"!==t&&(this.checkRequiredCredentials(),r={authorization:"Basic "+this.stringToBase64(this.apiKey+":"+this.secret)}),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&e>=400){let e=this.id+" "+a,t=this.safeValue(o,"error");void 0===t&&(t=o);let i=this.safeString2(t,"code","status"),s=this.safeString2(t,"message","debugMessage");throw this.throwBroadlyMatchedException(this.exceptions.broad,s,e),this.throwExactlyMatchedException(this.exceptions.exact,i,e),this.throwExactlyMatchedException(this.exceptions.exact,s,e),new n.ExchangeError(e)}}}class sn extends s.k{}let so=sn;class sh extends so{describe(){return this.deepExtend(super.describe(),{id:"tokocrypto",name:"Tokocrypto",countries:["ID"],certified:!1,pro:!1,version:"v1",has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:void 0,borrowMargin:void 0,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:!1,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createReduceOnlyOrder:void 0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowInterest:void 0,fetchBorrowRateHistories:void 0,fetchBorrowRateHistory:void 0,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:"emulated",fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!1,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:void 0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!1,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!1,fetchTickers:!1,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/183870484-d3398d0c-f6a1-4cce-91b8-d58792308716.jpg",api:{rest:{public:"https://www.tokocrypto.com",binance:"https://api.binance.com/api/v3",private:"https://www.tokocrypto.com"}},www:"https://tokocrypto.com",doc:"https://www.tokocrypto.com/apidocs/",fees:"https://www.tokocrypto.com/fees/newschedule"},api:{binance:{get:{ping:1,time:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10],[5e3,50]]},trades:1,aggTrades:1,historicalTrades:5,klines:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},exchangeInfo:10},put:{userDataStream:1},post:{userDataStream:1},delete:{userDataStream:1}},public:{get:{"open/v1/common/time":1,"open/v1/common/symbols":1,"open/v1/market/depth":1,"open/v1/market/trades":1,"open/v1/market/agg-trades":1,"open/v1/market/klines":1}},private:{get:{"open/v1/orders/detail":1,"open/v1/orders":1,"open/v1/account/spot":1,"open/v1/account/spot/asset":1,"open/v1/orders/trades":1,"open/v1/withdraws":1,"open/v1/deposits":1,"open/v1/deposits/address":1},post:{"open/v1/orders":1,"open/v1/orders/cancel":1,"open/v1/orders/oco":1,"open/v1/withdraws":1,"open/v1/user-data-stream":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0075"),maker:this.parseNumber("0.0075")}},precisionMode:d.kb,options:{createMarketBuyOrderRequiresPrice:!0,defaultTimeInForce:"GTC",hasAlreadyAuthenticatedSuccessfully:!1,warnOnFetchOpenOrdersWithoutSymbol:!0,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,newOrderRespType:{market:"FULL",limit:"FULL"},quoteOrderQty:!1,networks:{ERC20:"ETH",TRC20:"TRX",BEP2:"BNB",BEP20:"BSC",OMNI:"OMNI",EOS:"EOS",SPL:"SOL"},reverseNetworks:{"tronscan.org":"TRC20","etherscan.io":"ERC20","bscscan.com":"BSC","explorer.binance.org":"BEP2","bithomp.com":"XRP","bloks.io":"EOS","stellar.expert":"XLM","blockchair.com/bitcoin":"BTC","blockchair.com/bitcoin-cash":"BCH","blockchair.com/ecash":"XEC","explorer.litecoin.net":"LTC","explorer.avax.network":"AVAX","solscan.io":"SOL","polkadot.subscan.io":"DOT","dashboard.internetcomputer.org":"ICP","explorer.chiliz.com":"CHZ","cardanoscan.io":"ADA","mainnet.theoan.com":"AION","algoexplorer.io":"ALGO","explorer.ambrosus.com":"AMB","viewblock.io/zilliqa":"ZIL","viewblock.io/arweave":"AR","explorer.ark.io":"ARK","atomscan.com":"ATOM","www.mintscan.io":"CTK","explorer.bitcoindiamond.org":"BCD","btgexplorer.com":"BTG","bts.ai":"BTS","explorer.celo.org":"CELO","explorer.nervos.org":"CKB","cerebro.cortexlabs.ai":"CTXC","chainz.cryptoid.info":"VIA","explorer.dcrdata.org":"DCR","digiexplorer.info":"DGB","dock.subscan.io":"DOCK","dogechain.info":"DOGE","explorer.elrond.com":"EGLD","blockscout.com":"ETC","explore-fetchhub.fetch.ai":"FET","filfox.info":"FIL","fio.bloks.io":"FIO","explorer.firo.org":"FIRO","neoscan.io":"NEO","ftmscan.com":"FTM","explorer.gochain.io":"GO","block.gxb.io":"GXS","hash-hash.info":"HBAR","www.hiveblockexplorer.com":"HIVE","explorer.helium.com":"HNT","tracker.icon.foundation":"ICX","www.iostabc.com":"IOST","explorer.iota.org":"IOTA","iotexscan.io":"IOTX","irishub.iobscan.io":"IRIS","kava.mintscan.io":"KAVA","scope.klaytn.com":"KLAY","kmdexplorer.io":"KMD","kusama.subscan.io":"KSM","explorer.lto.network":"LTO","polygonscan.com":"POLYGON","explorer.ont.io":"ONT","minaexplorer.com":"MINA","nanolooker.com":"NANO","explorer.nebulas.io":"NAS","explorer.nbs.plus":"NBS","explorer.nebl.io":"NEBL","nulscan.io":"NULS","nxscan.com":"NXS","explorer.harmony.one":"ONE","explorer.poa.network":"POA","qtum.info":"QTUM","explorer.rsk.co":"RSK","www.oasisscan.com":"ROSE","ravencoin.network":"RVN","sc.tokenview.com":"SC","secretnodes.com":"SCRT","explorer.skycoin.com":"SKY","steemscan.com":"STEEM","explorer.stacks.co":"STX","www.thetascan.io":"THETA","scan.tomochain.com":"TOMO","explore.vechain.org":"VET","explorer.vite.net":"VITE","www.wanscan.org":"WAN","wavesexplorer.com":"WAVES","wax.eosx.io":"WAXP","waltonchain.pro":"WTC","chain.nem.ninja":"XEM","verge-blockchain.info":"XVG","explorer.yoyow.org":"YOYOW","explorer.zcha.in":"ZEC","explorer.zensystem.io":"ZEN"},impliedNetworks:{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}},legalMoney:{MXN:!0,UGX:!0,SEK:!0,CHF:!0,VND:!0,AED:!0,DKK:!0,KZT:!0,HUF:!0,PEN:!0,PHP:!0,USD:!0,TRY:!0,EUR:!0,NGN:!0,PLN:!0,BRL:!0,ZAR:!0,KES:!0,ARS:!0,RUB:!0,AUD:!0,NOK:!0,CZK:!0,GBP:!0,UAH:!0,GHS:!0,HKD:!0,CAD:!0,INR:!0,JPY:!0,NZD:!0}},exceptions:{exact:{"System is under maintenance.":n.OnMaintenance,"System abnormality":n.ExchangeError,"You are not authorized to execute this request.":n.PermissionDenied,"API key does not exist":n.AuthenticationError,"Order would trigger immediately.":n.OrderImmediatelyFillable,"Stop price would trigger immediately.":n.OrderImmediatelyFillable,"Order would immediately match and take.":n.OrderImmediatelyFillable,"Account has insufficient balance for requested action.":n.InsufficientFunds,"Rest API trading is not enabled.":n.ExchangeNotAvailable,"You don't have permission.":n.PermissionDenied,"Market is closed.":n.ExchangeNotAvailable,"Too many requests. Please try again later.":n.DDoSProtection,"This action disabled is on this account.":n.AccountSuspended,"-1000":n.ExchangeNotAvailable,"-1001":n.ExchangeNotAvailable,"-1002":n.AuthenticationError,"-1003":n.RateLimitExceeded,"-1004":n.DDoSProtection,"-1005":n.PermissionDenied,"-1006":n.BadResponse,"-1007":n.RequestTimeout,"-1010":n.BadResponse,"-1011":n.PermissionDenied,"-1013":n.InvalidOrder,"-1014":n.InvalidOrder,"-1015":n.RateLimitExceeded,"-1016":n.ExchangeNotAvailable,"-1020":n.BadRequest,"-1021":n.InvalidNonce,"-1022":n.AuthenticationError,"-1023":n.BadRequest,"-1099":n.AuthenticationError,"-1100":n.BadRequest,"-1101":n.BadRequest,"-1102":n.BadRequest,"-1103":n.BadRequest,"-1104":n.BadRequest,"-1105":n.BadRequest,"-1106":n.BadRequest,"-1108":n.BadRequest,"-1109":n.AuthenticationError,"-1110":n.BadRequest,"-1111":n.BadRequest,"-1112":n.InvalidOrder,"-1113":n.BadRequest,"-1114":n.BadRequest,"-1115":n.BadRequest,"-1116":n.BadRequest,"-1117":n.BadRequest,"-1118":n.BadRequest,"-1119":n.BadRequest,"-1120":n.BadRequest,"-1121":n.BadSymbol,"-1125":n.AuthenticationError,"-1127":n.BadRequest,"-1128":n.BadRequest,"-1130":n.BadRequest,"-1131":n.BadRequest,"-1136":n.BadRequest,"-2008":n.AuthenticationError,"-2010":n.ExchangeError,"-2011":n.OrderNotFound,"-2013":n.OrderNotFound,"-2014":n.AuthenticationError,"-2015":n.AuthenticationError,"-2016":n.BadRequest,"-2018":n.InsufficientFunds,"-2019":n.InsufficientFunds,"-2020":n.OrderNotFillable,"-2021":n.OrderImmediatelyFillable,"-2022":n.InvalidOrder,"-2023":n.InsufficientFunds,"-2024":n.InsufficientFunds,"-2025":n.InvalidOrder,"-2026":n.InvalidOrder,"-2027":n.InvalidOrder,"-2028":n.InsufficientFunds,"-3000":n.ExchangeError,"-3001":n.AuthenticationError,"-3002":n.BadSymbol,"-3003":n.BadRequest,"-3004":n.ExchangeError,"-3005":n.InsufficientFunds,"-3006":n.InsufficientFunds,"-3007":n.ExchangeError,"-3008":n.InsufficientFunds,"-3009":n.BadRequest,"-3010":n.ExchangeError,"-3011":n.BadRequest,"-3012":n.ExchangeError,"-3013":n.BadRequest,"-3014":n.AccountSuspended,"-3015":n.ExchangeError,"-3016":n.BadRequest,"-3017":n.ExchangeError,"-3018":n.AccountSuspended,"-3019":n.AccountSuspended,"-3020":n.InsufficientFunds,"-3021":n.BadRequest,"-3022":n.AccountSuspended,"-3023":n.BadRequest,"-3024":n.ExchangeError,"-3025":n.BadRequest,"-3026":n.BadRequest,"-3027":n.BadSymbol,"-3028":n.BadSymbol,"-3029":n.ExchangeError,"-3036":n.AccountSuspended,"-3037":n.ExchangeError,"-3038":n.BadRequest,"-3041":n.InsufficientFunds,"-3042":n.BadRequest,"-3043":n.BadRequest,"-3044":n.DDoSProtection,"-3045":n.ExchangeError,"-3999":n.ExchangeError,"-4001":n.BadRequest,"-4002":n.BadRequest,"-4003":n.BadRequest,"-4004":n.AuthenticationError,"-4005":n.RateLimitExceeded,"-4006":n.BadRequest,"-4007":n.BadRequest,"-4008":n.BadRequest,"-4010":n.BadRequest,"-4011":n.BadRequest,"-4012":n.BadRequest,"-4013":n.AuthenticationError,"-4014":n.PermissionDenied,"-4015":n.ExchangeError,"-4016":n.PermissionDenied,"-4017":n.PermissionDenied,"-4018":n.BadSymbol,"-4019":n.BadSymbol,"-4021":n.BadRequest,"-4022":n.BadRequest,"-4023":n.ExchangeError,"-4024":n.InsufficientFunds,"-4025":n.InsufficientFunds,"-4026":n.InsufficientFunds,"-4027":n.ExchangeError,"-4028":n.BadRequest,"-4029":n.BadRequest,"-4030":n.ExchangeError,"-4031":n.ExchangeError,"-4032":n.ExchangeError,"-4033":n.BadRequest,"-4034":n.ExchangeError,"-4035":n.PermissionDenied,"-4036":n.BadRequest,"-4037":n.ExchangeError,"-4038":n.ExchangeError,"-4039":n.BadRequest,"-4040":n.BadRequest,"-4041":n.ExchangeError,"-4042":n.ExchangeError,"-4043":n.BadRequest,"-4044":n.BadRequest,"-4045":n.ExchangeError,"-4046":n.AuthenticationError,"-4047":n.BadRequest,"-5001":n.BadRequest,"-5002":n.InsufficientFunds,"-5003":n.InsufficientFunds,"-5004":n.BadRequest,"-5005":n.InsufficientFunds,"-5006":n.BadRequest,"-5007":n.BadRequest,"-5008":n.InsufficientFunds,"-5009":n.BadRequest,"-5010":n.ExchangeError,"-5011":n.BadRequest,"-5012":n.ExchangeError,"-5013":n.InsufficientFunds,"-5021":n.BadRequest,"-6001":n.BadRequest,"-6003":n.BadRequest,"-6004":n.ExchangeError,"-6005":n.InvalidOrder,"-6006":n.BadRequest,"-6007":n.BadRequest,"-6008":n.BadRequest,"-6009":n.RateLimitExceeded,"-6011":n.BadRequest,"-6012":n.InsufficientFunds,"-6013":n.ExchangeError,"-6014":n.BadRequest,"-6015":n.BadRequest,"-6016":n.BadRequest,"-6017":n.BadRequest,"-6018":n.BadRequest,"-6019":n.AuthenticationError,"-6020":n.BadRequest,"-7001":n.BadRequest,"-7002":n.BadRequest,"-9000":n.InsufficientFunds,"-10017":n.BadRequest,"-11008":n.InsufficientFunds,"-12014":n.RateLimitExceeded,"-13000":n.BadRequest,"-13001":n.BadRequest,"-13002":n.BadRequest,"-13003":n.BadRequest,"-13004":n.BadRequest,"-13005":n.BadRequest,"-13006":n.InvalidOrder,"-13007":n.AuthenticationError,"-21001":n.BadRequest,"-21002":n.BadRequest,"-21003":n.BadRequest,0x5f5e4eb:n.BadRequest,2202:n.InsufficientFunds,3210:n.InvalidOrder,3203:n.InvalidOrder,3211:n.InvalidOrder,3207:n.InvalidOrder,3218:n.OrderNotFound},broad:{"has no operation privilege":n.PermissionDenied,MAX_POSITION:n.InvalidOrder}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){let t=await this.publicGetOpenV1CommonTime(e);return this.safeInteger(t,"serverTime")}async fetchMarkets(e={}){let t=await this.publicGetOpenV1CommonSymbols(e);this.options.adjustForTimeDifference&&await this.loadTimeDifference();let i=this.safeValue(t,"data",{}),s=this.safeValue(i,"list",[]),r=[];for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"baseAsset"),a=this.safeString(t,"quoteAsset"),n=this.safeString(t,"symbol"),o=this.safeStringLower(t,"symbol"),h=this.safeString(t,"marginAsset"),d=this.safeCurrencyCode(i),l=this.safeCurrencyCode(a),c=this.safeCurrencyCode(h),u=d+"/"+l,f=this.safeValue(t,"filters",[]),p=this.indexBy(f,"filterType"),m="1"===this.safeString(t,"spotTradingEnable"),g=this.safeValue(t,"permissions",[]);for(let e=0;e<g.length;e++)if("TRD_GRP_003"===g[e]){m=!1;break}let y={id:n,lowercaseId:o,symbol:u,base:d,quote:l,settle:c,baseId:i,quoteId:a,settleId:h,type:"spot",spot:!0,margin:this.safeBool(t,"isMarginTradingAllowed",!1),swap:!1,future:!1,delivery:!1,option:!1,active:m,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantityPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricePrecision"))),base:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),quote:this.parseNumber(this.parsePrecision(this.safeString(t,"quotePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:t};if("PRICE_FILTER"in p){let e=this.safeValue(p,"PRICE_FILTER",{});y.precision.price=this.safeNumber(e,"tickSize"),y.limits.price={min:this.safeNumber(e,"minPrice"),max:this.safeNumber(e,"maxPrice")},y.precision.price=e.tickSize}if("LOT_SIZE"in p){let e=this.safeValue(p,"LOT_SIZE",{});y.precision.amount=this.safeNumber(e,"stepSize"),y.limits.amount={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MARKET_LOT_SIZE"in p){let e=this.safeValue(p,"MARKET_LOT_SIZE",{});y.limits.market={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in p){let e=this.safeValue(p,"MIN_NOTIONAL",{});y.limits.cost.min=this.safeNumber2(e,"minNotional","notional")}r.push(y)}return r}async fetchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),a={};void 0!==t&&(a.limit=t),"USDT"===r.quote?(a.symbol=r.baseId+r.quoteId,s=await this.binanceGetDepth(this.extend(a,i))):(a.symbol=r.id,s=await this.publicGetOpenV1MarketDepth(this.extend(a,i)));let n=this.safeValue(s,"data",s),o=this.safeInteger2(s,"T","timestamp"),h=this.parseOrderBook(n,e,o);return h.nonce=this.safeInteger(n,"lastUpdateId"),h}parseTrade(e,t){let i,s,r;let a=this.safeInteger2(e,"T","time"),n=this.safeString2(e,"p","price"),o=this.safeString2(e,"q","qty"),h=this.safeString2(e,"quoteQty","baseQty"),d=this.safeString(e,"symbol"),l=this.safeSymbol(d,t),c=this.safeString2(e,"t","a");c=this.safeString2(e,"id","tradeId",c);let u=this.safeString(e,"orderId"),f=this.safeValue2(e,"m","isBuyerMaker");return void 0!==f?(i=f?"sell":"buy",s="taker"):"side"in e?i=this.safeStringLower(e,"side"):"isBuyer"in e&&(i=e.isBuyer?"buy":"sell"),"commission"in e&&(r={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))}),"isMaker"in e&&(s=e.isMaker?"maker":"taker"),"maker"in e&&(s=e.maker?"maker":"taker"),this.safeTrade({info:e,timestamp:a,datetime:this.iso8601(a),symbol:l,id:c,order:u,type:void 0,side:i,takerOrMaker:s,price:n,amount:o,cost:h,fee:r},t)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n={symbol:this.getMarketIdByType(a)};if("USDT"!==a.quote){void 0!==i&&(n.limit=i);let e=this.publicGetOpenV1MarketTrades(this.extend(n,s)),r=this.safeDict(e,"data",{}),o=this.safeList(r,"list",[]);return this.parseTrades(o,a,t,i)}return void 0!==i&&(n.limit=i),"binanceGetAggTrades"===this.safeString(this.options,"fetchTradesMethod","binanceGetTrades")&&void 0!==t?(n.startTime=t,n.endTime=this.sum(t,36e5),r=await this.binanceGetAggTrades(this.extend(n,s))):r=await this.binanceGetTrades(this.extend(n,s)),this.parseTrades(r,a,t,i)}parseTicker(e,t){let i,s;let r=this.safeInteger(e,"closeTime"),a=this.safeString(e,"symbol"),n=this.safeSymbol(a,t),o=this.safeString(e,"lastPrice");return"baseVolume"in e?(i=this.safeString(e,"baseVolume"),s=this.safeString(e,"volume")):(i=this.safeString(e,"volume"),s=this.safeString(e,"quoteVolume")),this.safeTicker({symbol:n,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bidPrice"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString(e,"askPrice"),askVolume:this.safeString(e,"askQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:o,last:o,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:i,quoteVolume:s,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.binanceGetTicker24hr(t);return this.parseTickers(i,e)}getMarketIdByType(e){return"USDT"===e.quote?e.baseId+e.quoteId:e.id}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.baseId+i.quoteId},r=await this.binanceGetTicker24hr(this.extend(s,t));if(Array.isArray(r)){let e=this.safeDict(r,0,{});return this.parseTicker(e,i)}return this.parseTicker(r,i)}async fetchBidsAsks(e,t={}){await this.loadMarkets();let i=await this.binanceGetTickerBookTicker(t);return this.parseTickers(i,e)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o=this.safeString(r,"price"),h=this.safeInteger(r,"until");r=this.omit(r,["price","until"]),s=void 0===s?500:Math.min(s,1500);let d={interval:this.safeString(this.timeframes,t,t),limit:s};"index"===o?d.pair=n.id:d.symbol=this.getMarketIdByType(n),void 0!==i&&(d.startTime=i),void 0!==h&&(d.endTime=h),a="USDT"===n.quote?await this.binanceGetKlines(this.extend(d,r)):await this.publicGetOpenV1MarketKlines(this.extend(d,r));let l=this.safeList(a,"data",a);return this.parseOHLCVs(l,n,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString2(this.options,"fetchBalance","defaultType","spot"),i=this.safeString(e,"type",t),s=this.safeString2(this.options,"marginMode","defaultMarginMode"),r=this.safeStringLower(e,"marginMode",s),a=await this.privateGetOpenV1AccountSpot(this.extend({},e));return this.parseBalanceCustom(a,i,r)}parseBalanceCustom(e,t,i){let s=this.safeInteger(e,"updateTime"),r={info:e,timestamp:s,datetime:this.iso8601(s)},a=this.safeValue(e,"data",{}),n=this.safeValue(a,"accountAssets",[]);for(let e=0;e<n.length;e++){let t=n[e],i=this.safeString(t,"asset"),s=this.safeCurrencyCode(i),a=this.account();a.free=this.safeString(t,"free"),a.used=this.safeString(t,"locked"),r[s]=a}return this.safeBalance(r)}parseOrderStatus(e){return this.safeString({"-2":"open",0:"open",1:"open",2:"closed",3:"canceled",4:"canceling",5:"rejected",6:"expired",NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrder(e,t){let i=this.parseOrderStatus(this.safeString(e,"status")),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeString(e,"executedQty","0"),n=this.safeInteger(e,"createTime"),o=this.safeString(e,"avgPrice"),h=this.safeString2(e,"price","executedPrice"),d=this.safeString(e,"origQty"),l=this.safeStringN(e,["cummulativeQuoteQty","cumQuote","executedQuoteQty","cumBase"]),c=this.safeString(e,"orderId"),u=this.parseOrderType(this.safeStringLower(e,"type")),f=this.safeStringLower(e,"side");"0"===f?f="buy":"1"===f&&(f="sell");let p=this.safeValue(e,"fills",[]),m=this.safeString2(e,"clientOrderId","clientId"),g=this.safeString(e,"timeInForce");"GTX"===g&&(g="PO");let y="limit_maker"===u||"PO"===g;return this.safeOrder({info:e,id:c,clientOrderId:m,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,symbol:r,type:u,timeInForce:g,postOnly:y,reduceOnly:this.safeValue(e,"reduceOnly"),side:f,price:h,triggerPrice:this.parseNumber(this.omitZero(this.safeString(e,"stopPrice"))),amount:d,cost:l,average:o,filled:a,remaining:void 0,status:i,fee:void 0,trades:p},t)}parseOrderType(e){return this.safeString({2:"market",1:"limit",4:"limit",7:"limit"},e,e)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let h=this.market(e),l=this.safeString2(o,"clientOrderId","clientId");this.safeBool(o,"postOnly",!1)&&(t="LIMIT_MAKER"),o=this.omit(o,["clientId","clientOrderId"]);let c=t.toUpperCase(),u=c,f=this.safeValue2(o,"triggerPrice","stopPrice");void 0!==f&&(o=this.omit(o,["triggerPrice","stopPrice"]),"MARKET"===u?u="STOP_LOSS":"LIMIT"===u&&(u="STOP_LOSS_LIMIT"));let p=this.safeValue(h.info,"orderTypes");if(!this.inArray(u,p)){if(c!==u)throw new n.InvalidOrder(this.id+" triggerPrice parameter is not allowed for "+e+" "+t+" orders");throw new n.InvalidOrder(this.id+" "+t+" is not a valid order type for the "+e+" market")}let m={symbol:h.baseId+"_"+h.quoteId,type:this.safeString({LIMIT:1,MARKET:2,STOP_LOSS:3,STOP_LOSS_LIMIT:4,TAKE_PROFIT:5,TAKE_PROFIT_LIMIT:6,LIMIT_MAKER:7},u)};if("buy"===i?m.side=0:"sell"===i&&(m.side=1),void 0===l){let e=this.safeValue(this.options,"broker");if(void 0!==e){let t=this.safeString(e,"marketType");void 0!==t&&(m.clientId=t+this.uuid22())}}else m.clientId=l;let g=!1,y=!1,v=!1;if("MARKET"===u){if("buy"===i){let e;let t=h.precision.price,i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let l=this.safeNumber2(o,"cost","quoteOrderQty");if(o=this.omit(o,["cost","quoteOrderQty"]),void 0!==l)e=l;else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let t=this.numberToString(s),i=this.numberToString(a);e=r.Y.stringMul(t,i)}}else e=s;m.quoteOrderQty=this.decimalToPrecision(e,d.R3,t,this.precisionMode)}else v=!0}else"LIMIT"===u?(g=!0,v=!0):"STOP_LOSS"===u||"TAKE_PROFIT"===u?(y=!0,v=!0,(h.linear||h.inverse)&&(g=!0)):"STOP_LOSS_LIMIT"===u||"TAKE_PROFIT_LIMIT"===u?(v=!0,y=!0,g=!0):"LIMIT_MAKER"===u&&(g=!0,v=!0);if(v&&(m.quantity=this.amountToPrecision(e,s)),g){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires a price argument for a "+t+" order");m.price=this.priceToPrecision(e,a)}if(y){if(void 0===f)throw new n.InvalidOrder(this.id+" createOrder() requires a triggerPrice extra param for a "+t+" order");m.stopPrice=this.priceToPrecision(e,f)}let b=await this.privatePostOpenV1Orders(this.extend(m,o)),w=this.safeDict(b,"data",{});return this.parseOrder(w,h)}async fetchOrder(e,t,i={}){let s=await this.privateGetOpenV1Orders(this.extend({orderId:e},i)),r=this.safeValue(s,"data",{}),a=this.safeValue(r,"list",[]),n=this.safeDict(a,0,{});return this.parseOrder(n)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let o=await this.privateGetOpenV1Orders(this.extend(a,s)),h=this.safeValue(o,"data",{}),d=this.safeList(h,"list",[]);return this.parseOrders(d,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({type:1},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({type:2},s))}async cancelOrder(e,t,i={}){let s=await this.privatePostOpenV1OrdersCancel(this.extend({orderId:e},i)),r=this.safeDict(s,"data",{});return this.parseOrder(r)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id},o=this.safeInteger2(s,"until","endTime");void 0!==t&&(a.startTime=t),void 0!==o&&(a.endTime=o,s=this.omit(s,["endTime","until"])),void 0!==i&&(a.limit=i);let h=await this.privateGetOpenV1OrdersTrades(this.extend(a,s)),d=this.safeValue(h,"data",{}),l=this.safeList(d,"list",[]);return this.parseTrades(l,r,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={asset:this.currency(e).id},s=this.safeValue(this.options,"networks",{}),r=this.safeStringUpper(t,"network");void 0!==(r=this.safeString(s,r,r))&&(i.network=r,t=this.omit(t,"network"));let a=await this.privateGetOpenV1DepositsAddress(this.extend(i,t)),n=this.safeValue(a,"data",{}),o=this.safeString(n,"address"),h=this.safeString(n,"addressTag","");return 0===h.length&&(h=void 0),this.checkAddress(o),{info:a,currency:e,network:this.safeString(n,"network"),address:o,tag:h}}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={},n=this.safeInteger(s,"until");if(void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t){a.startTime=t;let e=this.sum(t,7776e6);void 0!==n&&(e=Math.min(e,n)),a.endTime=e}void 0!==i&&(a.limit=i);let o=await this.privateGetOpenV1Deposits(this.extend(a,s)),h=this.safeValue(o,"data",{}),d=this.safeList(h,"list",[]);return this.parseTransactions(d,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t&&(a.startTime=t,a.endTime=this.sum(t,7776e6)),void 0!==i&&(a.limit=i);let n=await this.privateGetOpenV1Withdraws(this.extend(a,s)),o=this.safeValue(n,"data",{}),h=this.safeList(o,"list",[]);return this.parseTransactions(h,r,t,i)}parseTransactionStatusByType(e,t){let i=this.safeValue({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",10:"ok"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t){let i;let s=this.safeString(e,"address"),r=this.safeString(e,"addressTag");void 0!==r&&r.length<1&&(r=void 0);let a=this.safeString(e,"txId");void 0!==a&&a.indexOf("Internal transfer ")>=0&&(a=a.slice(18));let n=this.safeString2(e,"coin","fiatCurrency"),o=this.safeCurrencyCode(n,t),h=this.safeInteger(e,"insertTime"),d=this.safeInteger2(e,"createTime","timestamp"),l=this.safeString(e,"type");void 0===l&&(void 0!==h&&void 0===d?(l="deposit",i=h):void 0===h&&void 0!==d&&(l="withdrawal",i=d));let c=this.safeNumber2(e,"transactionFee","totalFee"),u={currency:void 0,cost:void 0,rate:void 0};void 0!==c&&(u.currency=o,u.cost=c);let f=this.safeInteger(e,"transferType"),p=!1;void 0!==f&&(p=!0);let m=this.safeString(e,"id");if(void 0===m){let t=this.safeValue(e,"data",{});m=this.safeString(t,"withdrawId"),l="withdrawal"}return{info:e,id:m,txid:a,type:l,currency:o,network:this.safeString(e,"network"),amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatusByType(this.safeString(e,"status"),l),timestamp:i,datetime:this.iso8601(i),address:s,addressFrom:void 0,addressTo:s,tag:r,tagFrom:void 0,tagTo:r,updated:this.safeInteger2(e,"successTime","updateTime"),comment:void 0,internal:p,fee:u}}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);let a=this.currency(e),n={asset:a.id,address:i,amount:this.numberToString(t)};void 0!==s&&(n.addressTag=s);let[o,h]=this.handleNetworkCodeAndParams(r),d=this.networkCodeToId(o);void 0!==d&&(n.network=d.toUpperCase());let l=await this.privatePostOpenV1Withdraws(this.extend(n,h));return this.parseTransaction(l,a)}sign(e,t="public",i="GET",s={},r,a){if(!(t in this.urls.api.rest))throw new n.NotSupported(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");let o=this.urls.api.rest[t];if(o+="/"+e,"wapi"===t&&(o+=".html"),"userDataStream"===e||"listenKey"===e){if(this.apiKey)r={"X-MBX-APIKEY":this.apiKey,"Content-Type":"application/x-www-form-urlencoded"},"GET"!==i&&(a=this.urlencode(s));else throw new n.AuthenticationError(this.id+" userDataStream endpoint requires `apiKey` credential")}else if("private"===t||"sapi"===t&&"system/status"!==e||"sapiV3"===t||"wapi"===t&&"systemStatus"!==e||"dapiPrivate"===t||"dapiPrivateV2"===t||"fapiPrivate"===t||"fapiPrivateV2"===t){let n;this.checkRequiredCredentials();let h=this.safeInteger(this.options,"recvWindow"),d=this.extend({timestamp:this.nonce()},s);void 0!==h&&(d.recvWindow=h);let c=this.safeInteger(s,"recvWindow");void 0!==c&&(d.recvWindow=c),n="sapi"===t&&"asset/dust"===e?this.urlencodeWithArrayRepeat(d):"batchOrders"===e||e.indexOf("sub-account")>=0||"capital/withdraw/apply"===e||e.indexOf("staking")>=0?this.rawencode(d):this.urlencode(d);let u=this.hmac(this.encode(n),this.encode(this.secret),l.s);n+="&signature="+u,r={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i||"wapi"===t?o+="?"+n:(a=n,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(s).length&&(o+="?"+this.urlencode(s));return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o,h,d,l){if(418===e||429===e)throw new n.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+o);if(e>=400){if(o.indexOf("Price * QTY is zero or less")>=0)throw new n.InvalidOrder(this.id+" order cost = amount * price is zero or less "+o);if(o.indexOf("LOT_SIZE")>=0)throw new n.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+o);if(o.indexOf("PRICE_FILTER")>=0)throw new n.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid value in general, use this.priceToPrecision (symbol, amount) "+o)}if(void 0===h)return;let c=this.safeBool(h,"success",!0);if(!c){let e;let t=this.safeString(h,"msg");if(void 0!==t){try{e=JSON.parse(t)}catch(t){e=void 0}void 0!==e&&(h=e)}}let u=this.safeString(h,"msg");void 0!==u&&(this.throwExactlyMatchedException(this.exceptions.exact,u,this.id+" "+u),this.throwBroadlyMatchedException(this.exceptions.broad,u,this.id+" "+u));let f=this.safeString(h,"code");if(void 0!==f){if("200"===f||r.Y.stringEquals(f,"0"))return;if("-2015"===f&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new n.DDoSProtection(this.id+" "+o);let e=this.id+" "+o;if("No need to change margin type."===u)throw new n.MarginModeAlreadySet(e);throw this.throwExactlyMatchedException(this.exceptions.exact,f,e),new n.ExchangeError(e)}if(!c)throw new n.ExchangeError(this.id+" "+o)}calculateRateLimiterCost(e,t,i,s,r={}){if("noCoin"in r&&!("coin"in s))return r.noCoin;if("noSymbol"in r&&!("symbol"in s))return r.noSymbol;if("noPoolId"in r&&!("poolId"in s))return r.noPoolId;if("byLimit"in r&&"limit"in s){let e=s.limit,t=r.byLimit;for(let i=0;i<t.length;i++){let s=t[i];if(e<=s[0])return s[1]}}return this.safeInteger(r,"cost",1)}}class sd extends s.k{}let sl=sd;class sc extends sl{describe(){return this.deepExtend(super.describe(),{id:"tradeogre",name:"tradeogre",countries:[],rateLimit:100,version:"v2",pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createMarketOrder:!1,createOrder:!0,createOrders:!1,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDeposit:!1,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!1,fetchLedgerEntry:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!1,fetchOHLCV:!1,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!1,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTrades:!0,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawAddresses:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!1},urls:{referral:"",logo:"https://github.com/ccxt/ccxt/assets/43336371/3aa748b7-ea44-45e9-a9e7-b1d207a2578a",api:{rest:"https://tradeogre.com/api/v1"},www:"https://tradeogre.com",doc:"https://tradeogre.com/help/api",fees:"https://tradeogre.com/help/fees"},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},api:{public:{get:{markets:1,"orders/{market}":1,"ticker/{market}":1,"history/{market}":1}},private:{get:{"account/balance":1,"account/balances":1,"account/order/{uuid}":1},post:{"order/buy":1,"order/sell":1,"order/cancel":1,orders:1,"account/orders":1}}},commonCurrencies:{},precisionMode:d.kb,exceptions:{exact:{"Must be authorized":n.AuthenticationError,"Market not found":n.BadRequest,"Insufficient funds":n.InsufficientFunds,"Order not found":n.BadRequest}},options:{}})}async fetchMarkets(e={}){let t=await this.publicGetMarkets(e),i=[];for(let e=0;e<t.length;e++){let s=t[e],r=Object.keys(s),a=this.safeString(r,0),n=a.split("-"),o=this.safeString(n,0),h=this.safeString(n,1),d=this.safeCurrencyCode(o),l=this.safeCurrencyCode(h),c=this.safeMarketStructure({id:a,symbol:d+"/"+l,base:d,quote:l,settle:void 0,baseId:o,quoteId:h,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,taker:this.fees.trading.taker,maker:this.fees.trading.maker,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision("8")),price:this.parseNumber(this.parsePrecision("8"))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:s});i.push(c)}return i}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={market:i.id},r=await this.publicGetTickerMarket(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t){return this.safeTicker({symbol:this.safeString(t,"symbol"),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.market(e).id},r=await this.publicGetOrdersMarket(this.extend(s,i)),a=this.safeDict(r,"buy",{}),n=this.safeDict(r,"sell",{});return this.parseOrderBook({bids:a,asks:n},e)}parseBidsAsks(e,t=0,i=1,s=2){let r=Object.keys(e),a=[];for(let t=0;t<r.length;t++){let i=this.safeString(r,t),s=this.safeNumber(r,t),n=this.safeNumber(e,i);a.push([s,n])}return a}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market:r.id},n=await this.publicGetHistoryMarket(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseTrade(e,t){let i=this.safeIntegerProduct(e,"date",1e3);return this.safeTrade({info:e,id:void 0,timestamp:i,datetime:this.iso8601(i),symbol:this.safeString(t,"symbol"),order:void 0,type:void 0,side:this.safeString(e,"type"),takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString(e,"quantity"),cost:void 0,fee:{currency:void 0,cost:void 0}},t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountBalances(e),i=this.safeDict(t,"balances",{});return this.parseBalance(i)}parseBalance(e){let t={info:e},i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s],a=e[r],n=this.safeCurrencyCode(r),o={total:a};t[n]=o}return this.safeBalance(t)}async createOrder(e,t,i,s,r,a={}){let o;await this.loadMarkets();let h=this.market(e);if("market"===t)throw new n.BadRequest(this.id+" createOrder does not support market orders");if(void 0===r)throw new n.ArgumentsRequired(this.id+" createOrder requires a limit parameter");let d={market:h.id,quantity:this.parseToNumeric(this.amountToPrecision(e,s)),price:this.parseToNumeric(this.priceToPrecision(e,r))};return o="buy"===i?await this.privatePostOrderBuy(this.extend(d,a)):await this.privatePostOrderSell(this.extend(d,a)),this.parseOrder(o,h)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderCancel(this.extend({uuid:e},i));return this.parseOrder(s)}async cancelAllOrders(e,t={}){return await this.loadMarkets(),[await this.cancelOrder("all",e,t)]}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a={};void 0!==e&&(a.market=r.id);let n=await this.privatePostAccountOrders(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetAccountOrderUuid(this.extend({uuid:e},i));return this.parseOrder(s,void 0)}parseOrder(e,t){let i=this.safeIntegerProduct(e,"date",1e3),s=this.safeString(e,"market");return t=this.safeMarket(s,t),this.safeOrder({info:e,id:this.safeString(e,"uuid"),clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:t.symbol,type:void 0,timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"type"),price:this.safeString(e,"price"),triggerPrice:void 0,amount:this.safeString(e,"quantity"),cost:void 0,average:void 0,filled:this.safeString(e,"fulfilled"),remaining:void 0,status:void 0,fee:{currency:void 0,cost:void 0},trades:void 0},t)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+this.implodeParams(e,s);return s=this.omit(s,this.extractParams(e)),"GET"===i&&Object.keys(s).length&&(n+="?"+this.urlencode(s)),"private"===t&&(r={"Content-Type":"application/x-www-form-urlencoded",Referer:"CCXT",authorization:"Basic "+this.stringToBase64(this.apiKey+":"+this.secret)},"GET"!==i&&(a=this.urlencode(s))),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o||!("success"in o)||this.safeBool(o,"success")||"true"===this.safeString(o,"success"))return;let l=this.safeValue(o,"error"),c=this.safeString(l,"code"),u=this.id+" "+this.json(o);throw this.throwExactlyMatchedException(this.exceptions.exact,c,u),new n.ExchangeError(u)}}class su extends s.k{}let sf=su;class sp extends sf{describe(){return this.deepExtend(super.describe(),{id:"upbit",name:"Upbit",countries:["KR"],version:"v1",rateLimit:1e3,pro:!0,has:{CORS:!0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createDepositAddress:!0,createMarketBuyOrderWithCost:!0,createMarketOrder:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!1,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"minutes","3m":"minutes","5m":"minutes","10m":"minutes","15m":"minutes","30m":"minutes","1h":"minutes","4h":"minutes","1d":"days","1w":"weeks","1M":"months"},hostname:"api.upbit.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg",api:{public:"https://{hostname}",private:"https://{hostname}"},www:"https://upbit.com",doc:"https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C",fees:"https://upbit.com/service_center/guide"},api:{public:{get:["market/all","candles/{timeframe}","candles/{timeframe}/{unit}","candles/minutes/{unit}","candles/minutes/1","candles/minutes/3","candles/minutes/5","candles/minutes/10","candles/minutes/15","candles/minutes/30","candles/minutes/60","candles/minutes/240","candles/days","candles/weeks","candles/months","trades/ticks","ticker","orderbook"]},private:{get:["accounts","orders/chance","order","orders","orders/closed","orders/open","orders/uuids","withdraws","withdraw","withdraws/chance","deposits","deposit","deposits/coin_addresses","deposits/coin_address"],post:["orders","withdraws/coin","withdraws/krw","deposits/generate_coin_address"],delete:["order"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.0025")},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},features:{spot:{sandbox:!1,createOrder:{marginMode:!1,triggerPrice:!1,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!1,GTD:!1},hedged:!1,leverage:!1,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:void 0,fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:100,trigger:!1,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:1e3,daysBack:1e5,daysBackCanceled:1,untilDays:7,trigger:!1,trailing:!1},fetchOHLCV:{limit:200}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}},precisionMode:d.kb,exceptions:{exact:{"This key has expired.":n.AuthenticationError,"Missing request parameter error. Check the required parameters!":n.BadRequest,"side is missing, side does not have a valid value":n.InvalidOrder},broad:{thirdparty_agreement_required:n.PermissionDenied,out_of_scope:n.PermissionDenied,order_not_found:n.OrderNotFound,insufficient_funds:n.InsufficientFunds,invalid_access_key:n.AuthenticationError,jwt_verification:n.AuthenticationError,create_ask_error:n.ExchangeError,create_bid_error:n.ExchangeError,volume_too_large:n.InvalidOrder,invalid_funds:n.InvalidOrder}},options:{createMarketBuyOrderRequiresPrice:!0,fetchTickersMaxLength:4096,fetchOrderBooksMaxLength:4096,tradingFeesByQuoteCurrency:{KRW:5e-4}},commonCurrencies:{TON:"Tokamak Network"}})}async fetchCurrency(e,t={}){await this.loadMarkets();let i=this.currency(e);return await this.fetchCurrencyById(i.id,t)}async fetchCurrencyById(e,t={}){let i;let s=await this.privateGetWithdrawsChance(this.extend({currency:e},t)),a=this.safeValue(s,"member_level",{}),n=this.safeValue(s,"currency",{}),o=this.safeValue(s,"withdraw_limit",{}),h=this.safeValue(o,"can_withdraw"),d=this.safeString(n,"wallet_state"),l=this.safeValue(a,"wallet_locked"),c=this.safeValue(a,"locked"),u=!0;void 0===h||h?"working"!==d?u=!1:void 0!==l&&l?u=!1:void 0!==c&&c&&(u=!1):u=!1;let f=this.safeString(o,"onetime"),p=this.safeString(o,"daily",f),m=this.safeString(o,"remaining_daily",p);i=r.Y.stringGt(m,"0")?m:p;let g=this.safeString(n,"code"),y=this.safeCurrencyCode(g);return{info:s,id:g,code:y,name:y,active:u,fee:this.safeNumber(n,"withdraw_fee"),precision:void 0,limits:{withdraw:{min:this.safeNumber(o,"minimum"),max:this.parseNumber(i)}}}}async fetchMarket(e,t={}){await this.loadMarkets();let i=this.market(e);return await this.fetchMarketById(i.id,t)}async fetchMarketById(e,t={}){let i=await this.privateGetOrdersChance(this.extend({market:e},t)),s=this.safeValue(i,"market"),a=this.safeValue(s,"bid"),n=this.safeValue(s,"ask"),o=this.safeString(s,"id"),h=this.safeString(n,"currency"),d=this.safeString(a,"currency"),l=this.safeCurrencyCode(h),c=this.safeCurrencyCode(d),u=this.safeString(s,"state"),f=this.safeString(i,"bid_fee"),p=this.safeString(i,"ask_fee"),m=this.parseNumber(r.Y.stringMax(f,p));return this.safeMarketStructure({id:o,symbol:l+"/"+c,base:l,quote:c,settle:void 0,baseId:h,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"active"===u,contract:!1,linear:void 0,inverse:void 0,taker:m,maker:m,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber("1e-8")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_total"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(a,"min_total"),max:this.safeNumber(s,"max_total")},info:i}})}async fetchMarkets(e={}){let t=await this.publicGetMarketAll(e);return this.parseMarkets(t)}parseMarket(e){let t=this.safeString(e,"market"),[i,s]=t.split("-"),r=this.safeCurrencyCode(s),a=this.safeCurrencyCode(i);return this.safeMarketStructure({id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:s,quoteId:i,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(this.options.tradingFeesByQuoteCurrency,a,this.fees.trading.taker),maker:this.safeNumber(this.options.tradingFeesByQuoteCurrency,a,this.fees.trading.maker),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber("1e-8"),amount:this.parseNumber("1e-8")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e})}parseBalance(e){let t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"balance"),n.used=this.safeString(s,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccounts(e);return this.parseBalance(t)}async fetchOrderBooks(e,t,i={}){let s;if(await this.loadMarkets(),void 0===e){if((s=this.ids.join(",")).length>this.options.fetchOrderBooksMaxLength){let e=this.ids.length;throw new n.ExchangeError(this.id+" fetchOrderBooks() has "+e.toString()+" symbols ("+s.length.toString()+" characters) exceeding max URL length ("+this.options.fetchOrderBooksMaxLength.toString()+" characters), you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else s=(s=this.marketIds(e)).join(",");let r={markets:s},a=await this.publicGetOrderbook(this.extend(r,i)),o={};for(let e=0;e<a.length;e++){let t=a[e],i=this.safeString(t,"market"),s=this.safeSymbol(i,void 0,"-"),r=this.safeInteger(t,"timestamp");o[s]={symbol:s,bids:this.sortBy(this.parseBidsAsks(t.orderbook_units,"bid_price","bid_size"),0,!0),asks:this.sortBy(this.parseBidsAsks(t.orderbook_units,"ask_price","ask_size"),0),timestamp:r,datetime:this.iso8601(r),nonce:void 0}}return o}async fetchOrderBook(e,t,i={}){let s=await this.fetchOrderBooks([e],t,i);return this.safeValue(s,e)}parseTicker(e,t){let i=this.safeInteger(e,"trade_timestamp"),s=this.safeString2(e,"market","code");t=this.safeMarket(s,t,"-");let r=this.safeString(e,"trade_price");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high_price"),low:this.safeString(e,"low_price"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"opening_price"),close:r,last:r,previousClose:this.safeString(e,"prev_closing_price"),change:this.safeString(e,"signed_change_price"),percentage:this.safeString(e,"signed_change_rate"),average:void 0,baseVolume:this.safeString(e,"acc_trade_volume_24h"),quoteVolume:this.safeString(e,"acc_trade_price_24h"),info:e},t)}async fetchTickers(e,t={}){let i;if(await this.loadMarkets(),void 0===(e=this.marketSymbols(e))){if((i=this.ids.join(",")).length>this.options.fetchTickersMaxLength){let e=this.ids.length;throw new n.ExchangeError(this.id+" fetchTickers() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchTickers")}}else i=(i=this.marketIds(e)).join(",");let s={markets:i},r=await this.publicGetTicker(this.extend(s,t)),a={};for(let e=0;e<r.length;e++){let t=this.parseTicker(r[e]);a[t.symbol]=t}return this.filterByArrayTickers(a,"symbol",e)}async fetchTicker(e,t={}){let i=await this.fetchTickers([e],t);return this.safeValue(i,e)}parseTrade(e,t){let i,s;let r=this.safeString2(e,"sequential_id","uuid"),a=this.safeInteger(e,"timestamp");void 0===a&&(a=this.parse8601(this.safeString(e,"created_at")));let n=this.safeStringLower2(e,"ask_bid","side");"ask"===n?i="sell":"bid"===n&&(i="buy");let o=this.safeString(e,"funds"),h=this.safeString2(e,"trade_price","price"),d=this.safeString2(e,"trade_volume","volume"),l=this.safeString2(e,"market","code");t=this.safeMarket(l,t,"-");let c=this.safeString(e,n+"_fee");return void 0!==c&&(s={currency:t.quote,cost:c}),this.safeTrade({id:r,info:e,order:void 0,timestamp:a,datetime:this.iso8601(a),symbol:t.symbol,type:void 0,side:i,takerOrMaker:void 0,price:h,amount:d,cost:o,fee:s},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);void 0===i&&(i=200);let a={market:r.id,count:i},n=await this.publicGetTradesTicks(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i={market:this.market(e).id},s=await this.privateGetOrdersChance(this.extend(i,t)),a=this.safeString(s,"ask_fee"),n=this.safeString(s,"bid_fee"),o=r.Y.stringMax(a,n),h=this.safeString(s,"maker_ask_fee"),d=this.safeString(s,"maker_bid_fee"),l=r.Y.stringMax(h,d);return{info:s,symbol:e,maker:this.parseNumber(l),taker:this.parseNumber(o),percentage:!0,tierBased:!1}}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"candle_date_time_utc")),this.safeNumber(e,"opening_price"),this.safeNumber(e,"high_price"),this.safeNumber(e,"low_price"),this.safeNumber(e,"trade_price"),this.safeNumber(e,"candle_acc_trade_volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o=this.parseTimeframe(t),h=this.safeString(this.timeframes,t,t);void 0===s&&(s=200);let d={market:n.id,timeframe:h,count:s};if(void 0!==i&&(d.to=this.iso8601(this.sum(i,o*s*1e3))),"minutes"===h){let e=Math.round(o/60);d.unit=e,a=await this.publicGetCandlesTimeframeUnit(this.extend(d,r))}else a=await this.publicGetCandlesTimeframe(this.extend(d,r));return this.parseOHLCVs(a,n,t,i,s)}async createOrder(e,t,i,s,a,o={}){let h;await this.loadMarkets();let d=this.market(e);if("buy"===i)h="bid";else if("sell"===i)h="ask";else throw new n.InvalidOrder(this.id+" createOrder() allows buy or sell side only!");let l={market:d.id,side:h};if("limit"===t&&(l.price=this.priceToPrecision(e,a)),"market"===t&&"buy"===i){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let h=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0!==h)t=this.costToPrecision(e,h);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);l.ord_type="price",l.price=t}else l.ord_type=t,l.volume=this.amountToPrecision(e,s);let c=this.safeString2(o,"clientOrderId","identifier");if(void 0!==c&&(l.identifier=c),"market"!==t){let e=this.safeStringLower2(o,"timeInForce","time_in_force");o=this.omit(o,"timeInForce"),void 0!==e&&(l.time_in_force=e)}o=this.omit(o,["clientOrderId","identifier"]);let u=await this.privatePostOrders(this.extend(l,o));return this.parseOrder(u)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteOrder(this.extend({uuid:e},i));return this.parseOrder(s)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetDeposits(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchDeposit(e,t,i={}){let s;await this.loadMarkets();let r={uuid:e};void 0!==t&&(s=this.currency(t),r.currency=s.id);let a=await this.privateGetDeposit(this.extend(r,i));return this.parseTransaction(a,s)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetWithdraws(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchWithdrawal(e,t,i={}){let s;await this.loadMarkets();let r={uuid:e};void 0!==t&&(s=this.currency(t),r.currency=s.id);let a=await this.privateGetWithdraw(this.extend(r,i));return this.parseTransaction(a,s)}parseTransactionStatus(e){return this.safeString({submitting:"pending",submitted:"pending",almost_accepted:"pending",rejected:"failed",accepted:"ok",processing:"pending",done:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t){let i=this.safeString(e,"done_at"),s=this.parse8601(this.safeString(e,"created_at",i)),r=this.safeString(e,"type");"withdraw"===r&&(r="withdrawal");let a=this.safeString(e,"currency"),n=this.safeCurrencyCode(a,t);return{info:e,id:this.safeString(e,"uuid"),currency:n,amount:this.safeNumber(e,"amount"),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:this.parseTransactionStatus(this.safeStringLower(e,"state")),type:r,updated:this.parse8601(i),txid:this.safeString(e,"txid"),timestamp:s,datetime:this.iso8601(s),internal:void 0,comment:void 0,fee:{currency:n,cost:this.safeNumber(e,"fee")}}}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}parseOrder(e,t){let i,s,a,n;let o=this.safeString(e,"uuid"),h=this.safeString(e,"side");h="bid"===h?"buy":"sell";let d=this.safeString(e,"ord_type"),l=this.parse8601(this.safeString(e,"created_at")),c=this.parseOrderStatus(this.safeString(e,"state")),u=this.safeString(e,"price"),f=this.safeString(e,"volume"),p=this.safeString(e,"remaining_volume"),m=this.safeString(e,"executed_volume");"price"===d&&(d="market",s=u,u=void 0);let g=this.safeString(e,"paid_fee"),y=this.safeString(e,"market");t=this.safeMarket(y,t);let v=this.safeValue(e,"trades",[]),b=(v=this.parseTrades(v,t,void 0,void 0,{order:o,type:d})).length;if(b>0){i=v[b-1].timestamp;let e=!1;void 0===g&&(e=!0,g="0"),s="0";for(let t=0;t<b;t++){let i=v[t];if(s=r.Y.stringAdd(s,this.safeString(i,"cost")),e){let e=this.safeValue(v[t],"fee",{}),i=this.safeString(e,"cost");void 0!==i&&(g=r.Y.stringAdd(g,i))}}a=r.Y.stringDiv(s,m)}return void 0!==g&&(n={currency:t.quote,cost:g}),this.safeOrder({info:e,id:o,clientOrderId:void 0,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:i,symbol:t.symbol,type:d,timeInForce:this.safeStringUpper(e,"time_in_force"),postOnly:void 0,side:h,price:u,triggerPrice:void 0,cost:this.parseNumber(s),average:this.parseNumber(a),amount:f,filled:m,remaining:p,status:c,fee:n,trades:v})}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.market=r.id),void 0!==i&&(a.limit=i);let n=await this.privateGetOrdersOpen(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={state:"done"};void 0!==e&&(r=this.market(e),a.market=r.id),void 0!==t&&(a.start_time=t),void 0!==i&&(a.limit=i),[a,s]=this.handleUntilOption("end_time",a,s);let n=await this.privateGetOrdersClosed(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchCanceledOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={state:"cancel"};void 0!==e&&(r=this.market(e),a.market=r.id),void 0!==t&&(a.start_time=t),void 0!==i&&(a.limit=i),[a,s]=this.handleUntilOption("end_time",a,s);let n=await this.privateGetOrdersClosed(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrder(this.extend({uuid:e},i));return this.parseOrder(s)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();let i=await this.privateGetDepositsCoinAddresses(t);return this.parseDepositAddresses(i,e)}parseDepositAddress(e,t){let i=this.safeString(e,"deposit_address"),s=this.safeString(e,"secondary_address"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(e,"net_type");return this.checkAddress(i),{info:e,currency:a,network:this.networkIdToCode(n),address:i,tag:s}}async fetchDepositAddress(e,t={}){let i;await this.loadMarkets();let s=this.currency(e);if([i,t]=this.handleNetworkCodeAndParams(t),void 0===i)throw new n.ArgumentsRequired(this.id+' fetchDepositAddress requires params["network"]');let r=await this.privateGetDepositsCoinAddress(this.extend({currency:s.id,net_type:this.networkCodeToId(i,s.code)},t));return this.parseDepositAddress(r)}async createDepositAddress(e,t={}){await this.loadMarkets();let i={currency:this.currency(e).id},s=await this.privatePostDepositsGenerateCoinAddress(this.extend(i,t));if(void 0!==this.safeString(s,"message"))throw new n.AddressPending(this.id+" is generating "+e+" deposit address, call fetchDepositAddress or createDepositAddress one more time later to retrieve the generated address");return this.parseDepositAddress(s)}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();let o=this.currency(e),h={amount:t};if("KRW"!==e){this.checkAddress(i);let e=this.safeStringUpper2(r,"network","net_type");if(void 0===e)throw new n.ArgumentsRequired(this.id+" withdraw() requires a network argument");r=this.omit(r,["network"]),h.net_type=e,h.currency=o.id,h.address=i,void 0!==s&&(h.secondary_address=s),r=this.omit(r,"network"),a=await this.privatePostWithdrawsCoin(this.extend(h,r))}else a=await this.privatePostWithdrawsKrw(this.extend(h,r));return this.parseTransaction(a)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.implodeParams(this.urls.api[t],{hostname:this.hostname});n+="/"+this.version+"/"+this.implodeParams(e,s);let o=this.omit(s,this.extractParams(e));if("POST"!==i&&Object.keys(o).length&&(n+="?"+this.urlencode(o)),"private"===t){let e;this.checkRequiredCredentials(),r={};let t=this.uuid(),n={access_key:this.apiKey,nonce:t},h=Object.keys(o).length;if("GET"!==i&&"DELETE"!==i&&(a=this.json(s),r["Content-Type"]="application/json"),h&&(e=this.rawencode(o)),void 0!==e){let t=this.hash(this.encode(e),A.Zf);n.query_hash=t,n.query_hash_alg="SHA512"}let d=(0,w.a)(n,this.encode(this.secret),l.s);r.Authorization="Bearer "+d}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeValue(o,"error");if(void 0!==l){let e=this.safeString(l,"message"),t=this.safeString(l,"name"),i=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.broad,e,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new n.ExchangeError(i)}}}class sm extends s.k{}let sg=sm;class sy extends sg{describe(){return this.deepExtend(super.describe(),{id:"vertex",name:"Vertex",countries:[],version:"v1",rateLimit:50,certified:!1,pro:!0,dex:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!0,option:!1,addMargin:!1,borrowCrossMargin:!1,borrowIsolatedMargin:!1,cancelAllOrders:!0,cancelAllOrdersAfter:!1,cancelOrder:!0,cancelOrders:!0,cancelOrdersForSymbols:!1,closeAllPositions:!1,closePosition:!1,createMarketBuyOrderWithCost:!1,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!0,createReduceOnlyOrder:!0,createStopOrder:!0,createTriggerOrder:!0,editOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDeposits:!1,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchLiquidations:!1,fetchMarginMode:void 0,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyLiquidations:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!1,fetchOpenInterests:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!1,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":60,"5m":300,"15m":900,"1h":3600,"2h":7200,"4h":14400,"1d":86400,"1w":604800,"1M":604800},hostname:"vertexprotocol.com",urls:{logo:"https://github.com/ccxt/ccxt/assets/43336371/bd04a0fa-3b48-47b6-9d8b-124954d520a8",api:{v1:{archive:"https://archive.prod.{hostname}/v1",gateway:"https://gateway.prod.{hostname}/v1",trigger:"https://trigger.prod.{hostname}/v1"},v2:{archive:"https://archive.prod.{hostname}/v2",gateway:"https://gateway.prod.{hostname}/v2"}},test:{v1:{archive:"https://archive.sepolia-test.{hostname}/v1",gateway:"https://gateway.sepolia-test.{hostname}/v1",trigger:"https://trigger.sepolia-test.{hostname}/v1"},v2:{archive:"https://archive.sepolia-test.{hostname}/v2",gateway:"https://gateway.sepolia-test.{hostname}/v2"}},www:"https://vertexprotocol.com/",doc:"https://docs.vertexprotocol.com/",fees:"https://docs.vertexprotocol.com/basics/fees",referral:"https://app.vertexprotocol.com?referrer=0xCfC9BaB96a2eA3d3c3F031c005e82E1D9F295aC1"},api:{v1:{archive:{post:{"":1}},gateway:{get:{query:1,symbols:1,time:1},post:{query:1,execute:1}},trigger:{post:{execute:1,query:1}}},v2:{archive:{get:{tickers:1,contracts:1,trades:1,vrtx:1}},gateway:{get:{assets:.6667,pairs:1,orderbook:1}}}},fees:{swap:{taker:this.parseNumber("0.0002"),maker:this.parseNumber("0.0002")},spot:{taker:this.parseNumber("0.0002"),maker:this.parseNumber("0.0002")}},requiredCredentials:{apiKey:!1,secret:!1,walletAddress:!0,privateKey:!0},exceptions:{exact:{1e3:n.RateLimitExceeded,1015:n.RateLimitExceeded,1001:n.PermissionDenied,1002:n.PermissionDenied,1003:n.PermissionDenied,2e3:n.InvalidOrder,2001:n.InvalidOrder,2002:n.InvalidOrder,2003:n.InvalidOrder,2004:n.InvalidOrder,2005:n.InvalidOrder,2006:n.InvalidOrder,2007:n.InvalidOrder,2008:n.InvalidOrder,2009:n.InvalidOrder,2010:n.InvalidOrder,2011:n.BadRequest,2012:n.BadRequest,2013:n.InvalidOrder,2014:n.PermissionDenied,2015:n.InvalidOrder,2016:n.InvalidOrder,2017:n.InvalidOrder,2019:n.InvalidOrder,2020:n.InvalidOrder,2021:n.InvalidOrder,2022:n.InvalidOrder,2023:n.InvalidOrder,2024:n.InsufficientFunds,2025:n.InsufficientFunds,2026:n.BadRequest,2027:n.AuthenticationError,2028:n.AuthenticationError,2029:n.AuthenticationError,2030:n.BadRequest,2031:n.InvalidOrder,2033:n.InvalidOrder,2034:n.InvalidOrder,2035:n.InvalidOrder,2036:n.InvalidOrder,2037:n.InvalidOrder,2038:n.InvalidOrder,2039:n.InvalidOrder,2040:n.InvalidOrder,2041:n.InvalidOrder,2042:n.InvalidOrder,2043:n.InvalidOrder,2044:n.InvalidOrder,2045:n.InvalidOrder,2046:n.InvalidOrder,2047:n.InvalidOrder,2048:n.InvalidOrder,2049:n.ExchangeError,2050:n.PermissionDenied,2051:n.InvalidOrder,2052:n.InvalidOrder,2053:n.InvalidOrder,2054:n.InvalidOrder,2055:n.InvalidOrder,2056:n.InvalidOrder,2057:n.InvalidOrder,2058:n.InvalidOrder,2059:n.InvalidOrder,2060:n.InvalidOrder,2061:n.InvalidOrder,2062:n.InvalidOrder,2063:n.InvalidOrder,2064:n.InvalidOrder,2065:n.InvalidOrder,2066:n.InvalidOrder,2067:n.InvalidOrder,2068:n.InvalidOrder,2069:n.InvalidOrder,2070:n.InvalidOrder,2071:n.InvalidOrder,2072:n.InvalidOrder,2073:n.InvalidOrder,2074:n.InvalidOrder,2075:n.InvalidOrder,2076:n.InvalidOrder,3e3:n.BadRequest,3001:n.BadRequest,3002:n.BadRequest,3003:n.BadRequest,4e3:n.BadRequest,4001:n.ExchangeError,4002:n.ExchangeError,4003:n.ExchangeError,4004:n.InvalidOrder,5e3:n.ExchangeError},broad:{}},precisionMode:d.kb,commonCurrencies:{},options:{defaultType:"swap",sandboxMode:!1,timeDifference:0,brokerId:0x151157cae65f2c}})}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}convertToX18(e){if("string"==typeof e)return r.Y.stringMul(e,"1000000000000000000");let t=this.numberToString(e);return r.Y.stringMul(t,"1000000000000000000")}convertFromX18(e){if("string"==typeof e)return r.Y.stringDiv(e,"1000000000000000000");let t=this.numberToString(e);return r.Y.stringDiv(t,"1000000000000000000")}async fetchCurrencies(e={}){let t=await this.v2GatewayGetAssets(this.extend({},e)),i={};for(let e=0;e<t.length;e++){let s=this.safeDict(t,e,{}),r=this.safeString(s,"ticker_id");if(void 0!==r&&r.indexOf("PERP")>0)continue;let a=this.safeString(s,"product_id"),n=this.safeString(s,"symbol"),o=this.safeCurrencyCode(n);i[o]={id:a,name:n,code:o,precision:void 0,info:s,active:void 0,deposit:this.safeBool(s,"can_deposit"),withdraw:this.safeBool(s,"can_withdraw"),networks:void 0,fee:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}parseMarket(e){let t=this.safeString(e,"type"),i="USDC",s=this.safeCurrencyCode(i),r=this.safeString(e,"symbol"),a=this.safeCurrencyCode(r),n=this.safeCurrencyCode(i),o=a+"/"+s,h="spot"===t,d=!h;d&&(o=a.split("-")[0]+"/"+s+":"+n);let l=this.safeString(e,"price_increment_x18"),c=this.safeString(e,"size_increment"),u=this.safeString(e,"min_size"),f=this.safeNumber(e,"taker_fee_rate_x18"),p=this.safeNumber(e,"maker_fee_rate_x18"),m=h?void 0:this.parseNumber("1");return{id:this.safeString(e,"product_id"),symbol:o,base:a,quote:s,settle:h?void 0:n,baseId:r,quoteId:i,settleId:h?void 0:i,type:h?"spot":"swap",spot:h,margin:void 0,swap:d,future:!1,option:!1,active:!0,contract:!h,linear:!h||void 0,inverse:!!h&&void 0,taker:this.parseNumber(this.convertFromX18(f)),maker:this.parseNumber(this.convertFromX18(p)),contractSize:m,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.convertFromX18(c)),price:this.parseNumber(this.convertFromX18(l))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(this.convertFromX18(u)),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchMarkets(e={}){let t=await this.v1GatewayGetQuery(this.extend({type:"symbols"},e)),i=this.safeDict(t,"data",{}),s=this.safeDict(i,"symbols",{}),r=Object.keys(s),a=[];for(let e=0;e<r.length;e++){let t=r[e],i=this.safeDict(s,t,{});a.push(this.parseMarket(i))}return a}async fetchTime(e={}){let t=await this.v1GatewayGetTime(e);return this.parseNumber(t)}async fetchStatus(e={}){let t=await this.v1GatewayGetQuery(this.extend({type:"status"},e)),i=this.safeString(t,"data");return{status:i="active"===i?"ok":"error",updated:void 0,eta:void 0,url:void 0,info:t}}parseTrade(e,t){let i,s,a,n;let o=this.convertFromX18(this.safeString(e,"fee"));void 0!==o&&(n={cost:o,currency:void 0});let h=this.safeString2(e,"trade_id","submission_idx"),d=this.safeString(e,"digest"),l=this.safeTimestamp(e,"timestamp");if(void 0===l){let n;let o=this.safeDict(this.safeDict(e,"pre_balance",{}),"base",{});n="perp"in o?this.safeString(this.safeDict(o,"perp",{}),"product_id"):this.safeString(this.safeDict(o,"spot",{}),"product_id"),t=this.safeMarket(n);let h=this.safeDict(e,"order",{});i=this.convertFromX18(this.safeString(h,"priceX18")),s=this.convertFromX18(this.safeString(e,"base_filled")),a=r.Y.stringLt(s,"0")?"sell":"buy"}else{let r=this.safeString(e,"ticker_id").split("_"),n=r[0].split("-")[0]+r[1];t=this.safeMarket(n,t),i=this.safeString(e,"price"),s=this.safeString(e,"base_filled"),a=this.safeStringLower(e,"trade_type")}s=r.Y.stringAbs(s);let c=t.symbol;return this.safeTrade({id:h,timestamp:l,datetime:this.iso8601(l),symbol:c,side:a,price:i,amount:s,cost:void 0,order:d,takerOrMaker:void 0,type:void 0,fee:n,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={ticker_id:r.baseId+"_USDC"};void 0!==i&&(a.limit=i);let n=await this.v2ArchiveGetTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r,a;await this.loadMarkets(),[r,s]=this.handlePublicAddress("fetchMyTrades",s);let n={subaccount:this.convertAddressToSender(r)};void 0!==e&&(a=this.market(e),n.product_ids=[this.parseToNumeric(a.id)]);let o=this.safeInteger(s,"until");void 0!==o&&(s=this.omit(s,"until"),n.max_time=o),void 0!==i&&(n.limit=i);let h=await this.v1ArchivePost(this.extend({matches:n},s)),d=this.safeList(h,"matches",[]);return this.parseTrades(d,a,t,i,s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e).baseId+"_USDC";void 0===t&&(t=100);let r={ticker_id:s,depth:t},a=await this.v2GatewayGetOrderbook(this.extend(r,i)),n=this.safeInteger(a,"timestamp");return this.parseOrderBook(a,e,n,"bids","asks")}async fetchTradingFees(e={}){let t;await this.loadMarkets(),[t,e]=this.handlePublicAddress("fetchTradingFees",e);let i={type:"fee_rates",sender:this.convertAddressToSender(t)},s=await this.v1GatewayGetQuery(this.extend(i,e)),r=this.safeDict(s,"data",{}),a=this.safeList(r,"maker_fee_rates_x18",[]),n=this.safeList(r,"taker_fee_rates_x18",[]),o={};for(let e=0;e<n.length;e++){let t=this.safeMarket(this.numberToString(e));if(void 0===t.id)continue;let i=t.symbol;o[i]={info:s,symbol:i,maker:this.parseNumber(this.convertFromX18(a[e])),taker:this.parseNumber(this.convertFromX18(n[e])),percentage:!0,tierBased:!1}}return o}parseOHLCV(e,t){return[this.safeTimestamp(e,"timestamp"),this.parseNumber(this.convertFromX18(this.safeString(e,"open_x18"))),this.parseNumber(this.convertFromX18(this.safeString(e,"high_x18"))),this.parseNumber(this.convertFromX18(this.safeString(e,"low_x18"))),this.parseNumber(this.convertFromX18(this.safeString(e,"close_x18"))),this.parseNumber(this.convertFromX18(this.safeString(e,"volume")))]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={product_id:this.parseToInt(a.id),granularity:this.safeInteger(this.timeframes,t)},o=this.safeInteger(r,"until");void 0!==o&&(r=this.omit(r,"until"),n.max_time=o),void 0!==s&&(n.limit=Math.min(s,1e3));let h=await this.v1ArchivePost(this.extend({candlesticks:n},r)),d=this.safeList(h,"candlesticks",[]);return this.parseOHLCVs(d,a,t,i,s)}parseFundingRate(e,t){let i=this.safeNumber(e,"funding_rate");if(void 0===i){let t=this.safeString(e,"funding_rate_x18");i=this.parseNumber(this.convertFromX18(t))}let s=this.safeTimestamp2(e,"update_time","next_funding_rate_timestamp"),r=this.safeNumber(e,"mark_price"),a=this.safeNumber(e,"index_price");return{info:e,symbol:t.symbol,markPrice:r,indexPrice:a,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:i,fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s={funding_rate:{product_id:this.parseToInt(i.id)}},r=await this.v1ArchivePost(this.extend(s,t));return this.parseFundingRate(r,i)}async fetchFundingRates(e,t={}){await this.loadMarkets(),void 0!==e&&(e=this.marketSymbols(e));let i=await this.v2ArchiveGetContracts(this.extend({},t)),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){let t=s[e],a=t.split("-"),n=i[t],o=a[0]+"/USDC:USDC",h=this.market(o),d=this.parseFundingRate(n,h);r[d.symbol]=d}return this.filterByArray(r,"symbol",e)}parseOpenInterest(e,t){let i=this.safeString(e,"ticker_id");return this.safeOpenInterest({symbol:this.safeSymbol(i,t),openInterestAmount:this.safeNumber(e,"open_interest"),openInterestValue:this.safeNumber(e,"open_interest_usd"),timestamp:void 0,datetime:void 0,info:e},t)}async fetchOpenInterests(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.v2ArchiveGetContracts(t),s=[],r=[],a=Object.keys(i);if(void 0===e){e=[];for(let t=0;t<a.length;t++){let i=a[t].split("-")[0]+"/USDC:USDC";this.inArray(i,e)||e.push(i)}}for(let t=0;t<a.length;t++){let n=a[t],o=this.safeMarket(n),h=this.safeDict(i,n,{});for(let t=0;t<e.length;t++){let i=this.market(e[t]),a=i.base+"_USDC";o.marketId===a&&(s.push(i.symbol),r.push(this.parseOpenInterest(h,i)))}}return this.filterByArray(r,"symbol",s)}async fetchOpenInterest(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.contract)throw new n.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");let s=await this.v2ArchiveGetContracts(this.extend({},t)),r=i.base+"_USDC",a=this.safeDict(s,r,{});return this.parseOpenInterest(a,i)}parseTicker(e,t){let i=this.safeString(e,"base_currency"),s=i+"/"+this.safeString(e,"quote_currency");i.indexOf("PERP")>0&&(s=s.replace("-PERP","")+":USDC"),t=this.market(s);let r=this.safeString(e,"last_price");return this.safeTicker({symbol:t.symbol,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:this.safeString(e,"price_change_percent_24h"),average:void 0,baseVolume:this.safeString(e,"base_volume"),quoteVolume:this.safeString(e,"quote_volume"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0,!0,!0);let i=Object.values(await this.v2ArchiveGetTickers(this.extend({},t)));return this.parseTickers(i,e)}async queryContracts(e={}){let t=this.safeDict(this.options,"v1contracts");if(void 0!==t)return t;let i=await this.v1GatewayGetQuery(this.extend({type:"contracts"},e)),s=this.safeDict(i,"data",{});return this.options.v1contracts=s,s}nonce(){return this.milliseconds()-this.options.timeDifference}hashMessage(e){return"0x"+this.hash(e,tZ.lY,"hex")}signHash(e,t){let i=(0,tB.h1)(e.slice(-64),t.slice(-64),tJ.bI,void 0),s=i.r,r=i.s,a=this.intToBase16(this.sum(27,i.v));return"0x"+s.padStart(64,"0")+r.padStart(64,"0")+a}signMessage(e,t){return this.signHash(this.hashMessage(e),t.slice(-64))}buildSig(e,t,i,s=""){let r=this.ethEncodeStructuredData({chainId:e,name:"Vertex",verifyingContract:s,version:"0.0.1"},t,i);return this.signMessage(r,this.privateKey)}buildCreateOrderSig(e,t,i){return this.buildSig(t,{Order:[{name:"sender",type:"bytes32"},{name:"priceX18",type:"int128"},{name:"amount",type:"int128"},{name:"expiration",type:"uint64"},{name:"nonce",type:"uint64"}]},e,i)}buildListTriggerTxSig(e,t,i){return this.buildSig(t,{ListTriggerOrders:[{name:"sender",type:"bytes32"},{name:"recvTime",type:"uint64"}]},e,i)}buildCancelAllOrdersSig(e,t,i){return this.buildSig(t,{CancellationProducts:[{name:"sender",type:"bytes32"},{name:"productIds",type:"uint32[]"},{name:"nonce",type:"uint64"}]},e,i)}buildCancelOrdersSig(e,t,i){return this.buildSig(t,{Cancellation:[{name:"sender",type:"bytes32"},{name:"productIds",type:"uint32[]"},{name:"digests",type:"bytes32[]"},{name:"nonce",type:"uint64"}]},e,i)}buildWithdrawSig(e,t,i){return this.buildSig(t,{WithdrawCollateral:[{name:"sender",type:"bytes32"},{name:"productId",type:"uint32"},{name:"amount",type:"uint128"},{name:"nonce",type:"uint64"}]},e,i)}convertAddressToSender(e){return(e+"64656661756c74").padEnd(66,"0")}getNonce(e,t){return void 0===e&&(e=this.nonce()),r.Y.stringAdd(r.Y.stringMul(r.Y.stringAdd(this.numberToString(e),this.numberToString(t)),"1048576"),"1000")}getExpiration(e,t,i,s){let a=r.Y.stringAdd(this.numberToString(e),"86400");return"ioc"===t?a=r.Y.stringOr(a,"4611686018427387904"):"fok"===t?a=r.Y.stringOr(a,"9223372036854775808"):i&&(a=r.Y.stringOr(a,"13835058055282163712")),s&&(a=r.Y.stringOr(a,"2305843009213693952")),a}getAmount(e,t){let i=this.numberToString(e);return"sell"===t?e>0&&(i=r.Y.stringMul(i,"-1")):e<0&&(i=r.Y.stringMul(i,"-1")),i}async createOrder(e,t,i,s,a,o={}){let h;this.checkRequiredCredentials();let d="market"===t.toLowerCase();if(d&&void 0===a)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for market order");await this.loadMarkets();let l=this.market(e),c=this.parseToInt(l.id),u=await this.queryContracts(),f=this.safeString(u,"chain_id"),p=this.safeList(u,"book_addrs",[]),m=this.safeString(p,c),g=this.safeStringLower(o,"timeInForce",d?"fok":void 0),y=this.safeBool(o,"postOnly",!1),v=this.safeBool(o,"reduceOnly",!1),b=this.safeString2(o,"triggerPrice","stopPrice"),w=this.safeString(o,"stopLossPrice",b),k=this.safeString(o,"takeProfitPrice"),S=w||k,O=this.nonce(),T=this.getNonce(O,9e4);if(y&&v)throw new n.NotSupported(this.id+" reduceOnly not supported when postOnly is enabled");let I=this.getExpiration(O,g,y,v);S&&(T=r.Y.stringOr(T,"9223372036854775808"));let x=this.getAmount(s,i),P={sender:this.convertAddressToSender(this.walletAddress),priceX18:this.convertToX18(this.priceToPrecision(e,a)),amount:this.convertToX18(this.amountToPrecision(e,x)),expiration:I,nonce:T},M={place_order:{product_id:c,order:{sender:P.sender,priceX18:P.priceX18,amount:P.amount,expiration:this.numberToString(P.expiration),nonce:P.nonce},signature:this.buildCreateOrderSig(P,f,m),id:this.safeInteger(this.options,"brokerId",0x151157cae65f2c)}};if(o=this.omit(o,["timeInForce","reduceOnly","postOnly","triggerPrice","stopPrice","stopLossPrice","takeProfitPrice"]),S){let e={};void 0!==w?e.last_price_below=this.convertToX18(w):void 0!==k&&(e.last_price_above=this.convertToX18(k)),M.place_order.trigger=e,h=await this.v1TriggerPostExecute(this.extend(M,o))}else h=await this.v1GatewayPostExecute(this.extend(M,o));let A=this.safeDict(h,"data",{});return this.safeOrder({id:this.safeString(A,"digest")})}async editOrder(e,t,i,s,r,a,o={}){this.checkRequiredCredentials();let h="market"===i.toLowerCase();if(h&&void 0===a)throw new n.ArgumentsRequired(this.id+" editOrder() requires a price argument for market order");await this.loadMarkets();let d=this.market(t),l=this.parseToInt(d.id),c=this.safeStringLower(o,"timeInForce",h?"fok":void 0),u=this.safeBool(o,"postOnly",!1),f=this.safeBool(o,"reduceOnly",!1),p=this.safeString2(o,"triggerPrice","stopPrice"),m=this.safeString(o,"stopLossPrice",p),g=this.safeString(o,"takeProfitPrice"),y=await this.queryContracts(),v=this.safeString(y,"chain_id"),b=this.safeList(y,"book_addrs",[]),w=this.safeString(b,l),k=this.safeString(y,"endpoint_addr"),S=this.nonce(),O=this.getNonce(S,9e4),T=this.convertAddressToSender(this.walletAddress);if(u&&f)throw new n.NotSupported(this.id+" reduceOnly not supported when postOnly is enabled");if(m||g)throw new n.NotSupported(this.id+" editOrder() not supported for trigger order");let I=this.getExpiration(S,c,u,f),x=this.getAmount(r,s),P={sender:T,priceX18:this.convertToX18(this.priceToPrecision(t,a)),amount:this.convertToX18(this.amountToPrecision(t,x)),expiration:I,nonce:O},M={sender:T,productIds:[l],digests:[e],nonce:O},A={cancel_and_place:{cancel_tx:{sender:M.sender,productIds:M.productIds,digests:M.digests,nonce:this.numberToString(M.nonce)},cancel_signature:this.buildCancelOrdersSig(M,v,k),place_order:{product_id:l,order:{sender:P.sender,priceX18:P.priceX18,amount:P.amount,expiration:this.numberToString(P.expiration),nonce:P.nonce},signature:this.buildCreateOrderSig(P,v,w),id:this.safeInteger(this.options,"brokerId",0x151157cae65f2c)}}};o=this.omit(o,["timeInForce","reduceOnly","postOnly","triggerPrice","stopPrice","stopLossPrice","takeProfitPrice"]);let C=await this.v1GatewayPostExecute(this.extend(A,o)),B=this.safeDict(C,"data",{});return this.safeOrder({id:this.safeString(B,"digest")})}parseOrderStatus(e){if(void 0!==e){if("string"==typeof e)return this.safeString({pending:"open"},e,e);if(void 0!==this.safeDict(e,"cancelled"))return"canceled";let t=this.safeDict(e,"triggered",{});return"success"===this.safeString(t,"status","failure")?"closed":"canceled"}return e}parseOrder(e,t){let i,s,r,a,n,o=this.safeString(e,"product_id"),h=this.safeTimestamp(e,"placed_at"),d=this.safeString(e,"amount"),l=this.safeString(e,"price_x18"),c=this.safeString(e,"unfilled_amount"),u=this.safeValue(e,"status");if(void 0!==u){let t=this.safeDict(e,"order",{}),s=this.safeDict(t,"order",{});o=this.safeString(t,"product_id"),d=this.safeString(s,"amount"),l=this.safeString(s,"priceX18"),h=this.safeTimestamp(e,"updated_at");let r=this.safeDict(t,"trigger",{}),a=this.safeStringN(r,["price_above","price_below","last_price_above","last_price_below"]);void 0!==a&&(i=this.parseToNumeric(this.convertFromX18(a)))}let f=(t=this.safeMarket(o,t)).symbol;void 0!==l&&(s=this.parseToNumeric(this.convertFromX18(l))),void 0!==d&&(r=this.parseToNumeric(this.convertFromX18(d))),void 0!==c&&(a=this.parseToNumeric(this.convertFromX18(c))),void 0!==r&&void 0!==a&&(n=r<0||a<0?"sell":"buy");let p=this.parseTimeInForce(this.safeString(e,"order_type"));return this.safeOrder({info:e,id:this.safeString(e,"digest"),clientOrderId:void 0,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,lastUpdateTimestamp:void 0,symbol:f,type:void 0,timeInForce:p,postOnly:"PO"===p,reduceOnly:void 0,side:n,price:s,triggerPrice:i,amount:r,cost:void 0,average:void 0,filled:void 0,remaining:a,status:this.parseOrderStatus(u),fee:void 0,trades:void 0},t)}parseTimeInForce(e){return this.safeStringUpper({POST_ONLY:"PO"},e,e)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r={type:"order",product_id:this.parseToInt(s.id),digest:e},a=await this.v1GatewayGetQuery(this.extend(r,i)),n=this.safeDict(a,"data");return this.parseOrder(n,s)}async fetchOpenOrders(e,t,i,s={}){let r,a,n;this.checkRequiredCredentials(),await this.loadMarkets(),[r,s]=this.handlePublicAddress("fetchOpenOrders",s);let o={},h=this.safeBool2(s,"stop","trigger");if(s=this.omit(s,["stop","trigger"]),void 0!==e&&(a=this.market(e),o.product_id=this.parseToNumeric(a.id)),h){let e=await this.queryContracts(),t=this.safeString(e,"chain_id"),a=this.safeString(e,"endpoint_addr"),h={sender:this.convertAddressToSender(r),recvTime:this.nonce()+9e4};o.signature=this.buildListTriggerTxSig(h,t,a),o.tx={sender:h.sender,recvTime:this.numberToString(h.recvTime)},o.type="list_trigger_orders",o.pending=!0;let d=this.safeInteger(s,"until");s=this.omit(s,"until"),void 0!==d&&(o.max_update_time=d),void 0!==i&&(o.limit=i),n=await this.v1TriggerPostQuery(this.extend(o,s))}else this.checkRequiredArgument("fetchOpenOrders",e,"symbol"),o.type="subaccount_orders",o.sender=this.convertAddressToSender(r),n=await this.v1GatewayPostQuery(this.extend(o,s));let d=this.safeDict(n,"data",{}),l=this.safeList(d,"orders");return this.parseOrders(l,a,t,i)}async fetchOrders(e,t,i,s={}){let r,a;this.checkRequiredCredentials();let o=this.safeBool2(s,"stop","trigger");if(s=this.omit(s,["stop","trigger"]),!o)throw new n.NotSupported(this.id+" fetchOrders only support trigger orders");[r,s]=this.handlePublicAddress("fetchOrders",s),await this.loadMarkets();let h={type:"list_trigger_orders",pending:!1};void 0!==e&&(a=this.market(e),h.product_id=this.parseToNumeric(a.id));let d=await this.queryContracts(),l=this.safeString(d,"chain_id"),c=this.safeString(d,"endpoint_addr"),u={sender:this.convertAddressToSender(r),recvTime:this.nonce()+9e4};h.signature=this.buildListTriggerTxSig(u,l,c),h.tx={sender:u.sender,recvTime:this.numberToString(u.recvTime)};let f=this.safeInteger(s,"until");s=this.omit(s,"until"),void 0!==f&&(h.max_update_time=f),void 0!==i&&(h.limit=i);let p=await this.v1TriggerPostQuery(this.extend(h,s)),m=this.safeDict(p,"data",{}),g=this.safeList(m,"orders");return this.parseOrders(g,a,t,i)}async cancelAllOrders(e,t={}){if(this.checkRequiredCredentials(),await this.loadMarkets(),void 0===e)throw new n.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");let i=this.market(e).id,s=await this.queryContracts(),r=this.safeString(s,"chain_id"),a=this.safeString(s,"endpoint_addr"),o=this.nonce(),h=this.getNonce(o,9e4),d={sender:this.convertAddressToSender(this.walletAddress),productIds:[this.parseToNumeric(i)],nonce:h},l={cancel_product_orders:{tx:{sender:d.sender,productIds:d.productIds,nonce:this.numberToString(d.nonce)},signature:this.buildCancelAllOrdersSig(d,r,a)}},c=this.safeBool2(t,"stop","trigger");return t=this.omit(t,["stop","trigger"]),c?await this.v1TriggerPostExecute(this.extend(l,t)):await this.v1GatewayPostExecute(this.extend(l,t))}async cancelOrder(e,t,i={}){return await this.cancelOrders([e],t,i)}async cancelOrders(e,t,i={}){if(this.checkRequiredCredentials(),void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let s=this.market(t).id,r=await this.queryContracts(),a=this.safeString(r,"chain_id"),o=this.safeString(r,"endpoint_addr"),h=this.nonce(),d=this.getNonce(h,9e4),l={sender:this.convertAddressToSender(this.walletAddress),productIds:[],digests:e,nonce:d},c=this.parseToNumeric(s);for(let t=0;t<e.length;t++)l.productIds.push(c);let u={cancel_orders:{tx:{sender:l.sender,productIds:l.productIds,digests:l.digests,nonce:this.numberToString(l.nonce)},signature:this.buildCancelOrdersSig(l,a,o)}},f=this.safeBool2(i,"stop","trigger");return i=this.omit(i,["stop","trigger"]),f?await this.v1TriggerPostExecute(this.extend(u,i)):await this.v1GatewayPostExecute(this.extend(u,i))}async fetchBalance(e={}){let t;[t,e]=this.handlePublicAddress("fetchBalance",e);let i={type:"subaccount_info",subaccount:this.convertAddressToSender(t)},s=await this.v1GatewayGetQuery(this.extend(i,e)),r=this.safeDict(s,"data",{}),a=this.safeList(r,"spot_balances",[]),n={info:s};for(let e=0;e<a.length;e++){let t=a[e],i=this.safeString(t,"product_id"),s=this.safeMarket(i),r="0"===i;if(void 0===s.id&&!r)continue;let o=r?"USDC":this.safeString(s,"baseId"),h=this.safeCurrencyCode(o),d=this.account(),l=this.safeDict(t,"balance",{}),c=this.convertFromX18(this.safeString(l,"amount"));d.total=c,n[h]=d}return this.safeBalance(n)}parsePosition(e,t){let i=this.safeString(e,"product_id");t=this.safeMarket(i);let s=this.safeDict(e,"balance",{}),a=this.convertFromX18(this.safeString(s,"amount")),n="buy";return r.Y.stringLt(a,"1")&&(n="sell"),this.safePosition({info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:void 0,datetime:void 0,lastUpdateTimestamp:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:void 0,notional:void 0,leverage:void 0,unrealizedPnl:void 0,contracts:void 0,contractSize:this.parseToNumeric(a),marginRatio:void 0,liquidationPrice:void 0,markPrice:void 0,lastPrice:void 0,collateral:void 0,marginMode:"cross",marginType:void 0,side:n,percentage:void 0,hedged:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchPositions(e,t={}){let i;[i,t]=this.handlePublicAddress("fetchPositions",t);let s={type:"subaccount_info",subaccount:this.convertAddressToSender(i)},r=await this.v1GatewayGetQuery(this.extend(s,t)),a=this.safeDict(r,"data",{}),n=this.safeList(a,"perp_balances",[]);e=this.marketSymbols(e);let o=[];for(let e=0;e<n.length;e++){let i=this.extend(this.parsePosition(n[e],void 0),t);0!==i.contractSize&&o.push(i)}return this.filterByArrayPositions(o,"symbol",e,!1)}async queryNonces(){let e={type:"nonces",address:this.walletAddress},t=await this.v1GatewayGetQuery(e);return this.safeDict(t,"data",{})}async withdraw(e,t,i,s,r={}){this.checkRequiredCredentials(),await this.loadMarkets();let a=this.currency(e),n=await this.queryContracts(),o=this.safeString(n,"chain_id"),h=this.safeString(n,"endpoint_addr"),d=await this.queryNonces(),l=this.safeNumber(d,"tx_nonce"),c={sender:this.convertAddressToSender(this.walletAddress),productId:this.parseToNumeric(a.id),amount:t.toString(),nonce:l},u={withdraw_collateral:{tx:{sender:c.sender,productId:c.productId,amount:c.amount,nonce:this.numberToString(c.nonce)},signature:this.buildWithdrawSig(c,o,h)}},f=await this.v1GatewayPostExecute(this.extend(u,r)),p=this.parseTransaction(f,a);return this.extend(p,{amount:t,address:i})}parseTransaction(e,t){let i;return void 0!==t&&(i=t.code),{info:e,id:void 0,txid:void 0,timestamp:void 0,datetime:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:"withdrawal",amount:void 0,currency:i,status:this.parseTransactionStatus(this.safeString(e,"status")),updated:void 0,network:void 0,comment:void 0,internal:void 0,fee:void 0}}parseTransactionStatus(e){return this.safeString({success:"ok"},e,e)}handlePublicAddress(e,t){let i;[i,t]=this.handleOptionAndParams(t,e,"user");let s=i;if([s,t]=this.handleOptionAndParams(t,e,"address",i),void 0!==s&&""!==s)return[s,t];if(void 0!==this.walletAddress&&""!==this.walletAddress)return[this.walletAddress,t];throw new n.ArgumentsRequired(this.id+" "+e+"() requires a user parameter inside 'params' or the wallet address set")}handleErrors(e,t,i,s,r,a,o,h,d){if(o&&"failure"===this.safeString(o,"status","")){let e=this.safeString(o,"error"),t=this.id+" "+a,i=this.safeString(o,"error_code");throw this.throwExactlyMatchedException(this.exceptions.exact,i,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new n.ExchangeError(t)}}sign(e,t="public",i="GET",s={},r,a){let n=this.safeString(t,0),o=this.safeString(t,1),h=this.implodeHostname(this.urls.api[n][o]);return("v1"!==n||"archive"!==o)&&(h=h+"/"+e),"POST"===i?(r={"Content-Type":"application/json"},a=this.json(s)):Object.keys(s).length&&(h+="?"+this.urlencode(s)),"execute"!==e&&(void 0!==r?r["Accept-Encoding"]="gzip":r={"Accept-Encoding":"gzip"}),{url:h,method:i,body:a,headers:r}}}class sv extends s.k{}let sb=sv;class sw extends sb{describe(){return this.deepExtend(super.describe(),{id:"wavesexchange",name:"Waves.Exchange",countries:["CH"],certified:!1,pro:!1,dex:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:void 0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,sandbox:!0,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0,ws:!1},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg",test:{matcher:"https://matcher-testnet.wx.network",node:"https://nodes-testnet.wavesnodes.com",public:"https://api-testnet.wavesplatform.com/v0",private:"https://api-testnet.wx.network/v1",forward:"https://testnet.wx.network/api/v1/forward/matcher",market:"https://testnet.wx.network/api/v1/forward/marketdata/api/v1"},api:{matcher:"https://matcher.wx.network",node:"https://nodes.wx.network",public:"https://api.wavesplatform.com/v0",private:"https://api.wx.network/v1",forward:"https://wx.network/api/v1/forward/matcher",market:"https://wx.network/api/v1/forward/marketdata/api/v1"},doc:["https://docs.wx.network","https://docs.waves.tech","https://api.wavesplatform.com/v0/docs/","https://nodes.wavesnodes.com/api-docs/index.html","https://matcher.waves.exchange/api-docs/index.html"],www:"https://wx.network"},api:{matcher:{get:["matcher","matcher/settings","matcher/settings/rates","matcher/balance/reserved/{publicKey}","matcher/debug/allSnashotOffsets","matcher/debug/currentOffset","matcher/debug/lastOffset","matcher/debug/oldestSnapshotOffset","matcher/debug/config","matcher/debug/address/{address}","matcher/debug/status","matcher/debug/address/{address}/check","matcher/orderbook","matcher/orderbook/{baseId}/{quoteId}","matcher/orderbook/{baseId}/{quoteId}/publicKey/{publicKey}","matcher/orderbook/{baseId}/{quoteId}/{orderId}","matcher/orderbook/{baseId}/{quoteId}/info","matcher/orderbook/{baseId}/{quoteId}/status","matcher/orderbook/{baseId}/{quoteId}/tradableBalance/{address}","matcher/orderbook/{publicKey}","matcher/orderbook/{publicKey}/{orderId}","matcher/orders/{address}","matcher/orders/{address}/{orderId}","matcher/transactions/{orderId}","api/v1/orderbook/{baseId}/{quoteId}"],post:["matcher/orderbook","matcher/orderbook/market","matcher/orderbook/cancel","matcher/orderbook/{baseId}/{quoteId}/cancel","matcher/orderbook/{baseId}/{quoteId}/calculateFee","matcher/orderbook/{baseId}/{quoteId}/delete","matcher/orderbook/{baseId}/{quoteId}/cancelAll","matcher/debug/saveSnapshots","matcher/orders/{address}/cancel","matcher/orders/cancel/{orderId}","matcher/orders/serialize"],delete:["matcher/orderbook/{baseId}/{quoteId}","matcher/settings/rates/{assetId}"],put:["matcher/settings/rates/{assetId}"]},node:{get:["addresses","addresses/balance/{address}","addresses/balance/{address}/{confirmations}","addresses/balance/details/{address}","addresses/data/{address}","addresses/data/{address}/{key}","addresses/effectiveBalance/{address}","addresses/effectiveBalance/{address}/{confirmations}","addresses/publicKey/{publicKey}","addresses/scriptInfo/{address}","addresses/scriptInfo/{address}/meta","addresses/seed/{address}","addresses/seq/{from}/{to}","addresses/validate/{address}","alias/by-address/{address}","alias/by-alias/{alias}","assets/{assetId}/distribution/{height}/{limit}","assets/balance/{address}","assets/balance/{address}/{assetId}","assets/details/{assetId}","assets/nft/{address}/limit/{limit}","blockchain/rewards","blockchain/rewards/height","blocks/address/{address}/{from}/{to}/","blocks/at/{height}","blocks/delay/{signature}/{blockNum}","blocks/first","blocks/headers/last","blocks/headers/seq/{from}/{to}","blocks/height","blocks/height/{signature}","blocks/last","blocks/seq/{from}/{to}","blocks/signature/{signature}","consensus/algo","consensus/basetarget","consensus/basetarget/{blockId}","consensus/{generatingbalance}/address","consensus/generationsignature","consensus/generationsignature/{blockId}","debug/balances/history/{address}","debug/blocks/{howMany}","debug/configInfo","debug/historyInfo","debug/info","debug/minerInfo","debug/portfolios/{address}","debug/state","debug/stateChanges/address/{address}","debug/stateChanges/info/{id}","debug/stateWaves/{height}","leasing/active/{address}","node/state","node/version","peers/all","peers/blacklisted","peers/connected","peers/suspended","transactions/address/{address}/limit/{limit}","transactions/info/{id}","transactions/status","transactions/unconfirmed","transactions/unconfirmed/info/{id}","transactions/unconfirmed/size","utils/seed","utils/seed/{length}","utils/time","wallet/seed"],post:["addresses","addresses/data/{address}","addresses/sign/{address}","addresses/signText/{address}","addresses/verify/{address}","addresses/verifyText/{address}","debug/blacklist","debug/print","debug/rollback","debug/validate","node/stop","peers/clearblacklist","peers/connect","transactions/broadcast","transactions/calculateFee","tranasctions/sign","transactions/sign/{signerAddress}","tranasctions/status","utils/hash/fast","utils/hash/secure","utils/script/compileCode","utils/script/compileWithImports","utils/script/decompile","utils/script/estimate","utils/sign/{privateKey}","utils/transactionsSerialize"],delete:["addresses/{address}","debug/rollback-to/{signature}"]},public:{get:["assets","pairs","candles/{baseId}/{quoteId}","transactions/exchange"]},private:{get:["deposit/addresses/{currency}","deposit/addresses/{currency}/{platform}","platforms","deposit/currencies","withdraw/currencies","withdraw/addresses/{currency}/{address}"],post:["oauth2/token"]},forward:{get:["matcher/orders/{address}","matcher/orders/{address}/{orderId}"],post:["matcher/orders/{wavesAddress}/cancel"]},market:{get:["tickers"]}},currencies:{WX:this.safeCurrencyStructure({id:"EMAMLxDnv3xiz8RXg8Btj33jcEw3wLczL3JKYYmuubpc",numericId:void 0,code:"WX",precision:this.parseNumber("1e-8")})},precisionMode:d.kb,options:{allowedCandles:1440,accessToken:void 0,createMarketBuyOrderRequiresPrice:!0,matcherPublicKey:void 0,quotes:void 0,createOrderDefaultExpiry:24192e5,wavesAddress:void 0,withdrawFeeUSDN:7420,withdrawFeeWAVES:1e5,wavesPrecision:1e-8,messagePrefix:"W",networks:{ERC20:"ETH",BEP20:"BSC"}},commonCurrencies:{EGG:"Waves Ducks"},requiresEddsa:!0,exceptions:{3147270:n.InsufficientFunds,112:n.InsufficientFunds,4:n.ExchangeError,13:n.ExchangeNotAvailable,14:n.ExchangeNotAvailable,3145733:n.AccountSuspended,3148040:n.DuplicateOrderId,3148801:n.AuthenticationError,9440512:n.AuthenticationError,9440771:n.BadSymbol,9441026:n.InvalidOrder,9441282:n.InvalidOrder,9441286:n.InvalidOrder,9441295:n.InvalidOrder,9441540:n.InvalidOrder,9441542:n.InvalidOrder,0x6600000:n.AuthenticationError,0x6600011:n.AuthenticationError,0x6600c04:n.AuthenticationError,0x6601503:n.AuthenticationError,0x6606711:n.AuthenticationError,9437184:n.BadRequest,9437193:n.OrderNotFound,1048577:n.BadRequest,1051904:n.AuthenticationError}})}setSandboxMode(e){this.options.messagePrefix=e?"T":"W",this.options.sandboxMode=e,super.setSandboxMode(e)}async getFeesForAsset(e,t,i,s,r={}){await this.loadMarkets();let a=this.market(e);i=this.toRealSymbolAmount(e,i),s=this.toRealSymbolPrice(e,s);let n=this.extend({baseId:a.baseId,quoteId:a.quoteId,orderType:t,amount:i,price:s},r);return await this.matcherPostMatcherOrderbookBaseIdQuoteIdCalculateFee(n)}async customCalculateFee(e,t,i,s,a,n="taker",o={}){let h;let d=await this.getFeesForAsset(e,i,s,a);h=this.safeBool(o,"isDiscountFee",!1)?this.safeValue(d,"discount"):this.safeValue(d,"base");let l=this.safeString(h,"matcherFee"),c=this.safeString(h,"feeAssetId"),u=this.safeCurrencyCode(c),f=this.fromRealCurrencyAmount(u,l),p=this.numberToString(s),m=this.numberToString(a),g=this.feeToPrecision(e,this.parseNumber(f)),y=r.Y.stringDiv(f,r.Y.stringMul(p,m));return{type:n,currency:u,rate:this.parseNumber(y),cost:this.parseNumber(g)}}async getQuotes(){let e=this.safeValue(this.options,"quotes");if(e)return e;{let t=await this.matcherGetMatcherSettings();e={};let i=this.safeValue(t,"priceAssets");for(let t=0;t<i.length;t++)e[i[t]]=!0;return this.options.quotes=e,e}}async fetchMarkets(e={}){let t=await this.marketGetTickers(),i=[];for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"amountAssetID"),a=this.safeString(s,"priceAssetID"),n=r+"/"+a,[o,h]=this.safeString(s,"symbol").split("/"),d=(o=this.safeCurrencyCode(o))+"/"+(h=this.safeCurrencyCode(h));i.push({id:n,symbol:d,base:o,quote:h,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"amountAssetDecimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"priceAssetDecimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:s})}return i}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=this.extend({baseId:s.baseId,quoteId:s.quoteId},i),a=await this.matcherGetMatcherOrderbookBaseIdQuoteId(r),n=this.safeInteger(a,"timestamp");return{symbol:e,bids:this.parseOrderBookSide(this.safeValue(a,"bids"),s,t),asks:this.parseOrderBookSide(this.safeValue(a,"asks"),s,t),timestamp:n,datetime:this.iso8601(n),nonce:void 0}}parseOrderBookSide(e,t,i){let s=t.precision,a=this.safeString(this.options,"wavesPrecision","1e-8"),n=this.safeString(s,"amount"),o=this.safeString(s,"price"),h=r.Y.stringDiv(n,o),d=r.Y.stringDiv(a,h),l=[];for(let t=0;t<e.length;t++){let s,a;let o=e[t],h=this.safeString(o,"price","0"),c=this.safeString(o,"amount","0");if(void 0!==d&&void 0!==h&&(s=r.Y.stringMul(h,d)),void 0!==n&&void 0!==c&&(a=r.Y.stringMul(c,n)),void 0!==i&&t>i)break;l.push([this.parseNumber(s),this.parseNumber(a)])}return l}checkRequiredKeys(){let e,t;if(void 0===this.apiKey)throw new n.AuthenticationError(this.id+" requires apiKey credential");if(void 0===this.secret)throw new n.AuthenticationError(this.id+" requires secret credential");try{e=this.base58ToBinary(this.apiKey)}catch(e){throw new n.AuthenticationError(this.id+" apiKey must be a base58 encoded public key")}try{t=this.base58ToBinary(this.secret)}catch(e){throw new n.AuthenticationError(this.id+" secret must be a base58 encoded private key")}let i=this.binaryToBase16(e),s=this.binaryToBase16(t);if(64!==i.length)throw new n.AuthenticationError(this.id+" apiKey must be a base58 encoded public key");if(64!==s.length)throw new n.AuthenticationError(this.id+" secret must be a base58 encoded private key")}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o="matcher/orders/{wavesAddress}/cancel"===e;e=this.implodeParams(e,s);let h=this.urls.api[t]+"/"+e,d=this.urlencodeWithArrayRepeat(n);if("private"===t||"forward"===t){r={Accept:"application/json"};let e=this.safeString(this.options,"accessToken");e&&(r.Authorization="Bearer "+e),"POST"===i?r["content-type"]="application/json":r["content-type"]="application/x-www-form-urlencoded",o&&(a=this.json([n.orderId]),d=""),d.length>0&&(h+="?"+d)}else"matcher"===t?"POST"===i?(r={Accept:"application/json","Content-Type":"application/json"},a=this.json(n)):r=n:"POST"===i?(r={"content-type":"application/json"},a=this.json(n)):(r={"content-type":"application/x-www-form-urlencoded"},d.length>0&&(h+="?"+d));return{url:h,method:i,body:a,headers:r}}async signIn(e={}){if(!this.safeString(this.options,"accessToken")){let e=this.sum(this.seconds(),604800);e=e.toString();let t="wx.network",i=this.safeString(this.options,"messagePrefix","W")+":"+t+":"+e,s=this.binaryToBase16(this.encode(i)),r=this.binaryToBase16(this.base58ToBinary(this.secret)),a=this.axolotl("ffffff01"+s,r,tC.ev),n={grant_type:"password",scope:"general",username:this.apiKey,password:e+":"+a,client_id:t},o=await this.privatePostOauth2Token(n);return this.options.accessToken=this.safeString(o,"access_token"),this.options.accessToken}}parseTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t,"/")).symbol,a=this.safeString2(e,"24h_close","lastPrice"),n=this.safeString2(e,"24h_low","low"),o=this.safeString2(e,"24h_high","high"),h=this.safeString2(e,"24h_vwap","weightedAveragePrice"),d=this.safeString2(e,"24h_volume","volume"),l=this.safeString2(e,"24h_priceVolume","quoteVolume"),c=this.safeString2(e,"24h_open","firstPrice");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:o,low:n,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:h,open:c,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:l,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pairs:i.id},r=await this.publicGetPairs(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{}),o=this.safeDict(n,"data",{});return this.parseTicker(o,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.marketGetTickers(t);return this.parseTickers(i,e)}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o={baseId:n.baseId,quoteId:n.quoteId,interval:this.safeString(this.timeframes,t,t)},h=this.safeInteger(this.options,"allowedCandles",1440);void 0===s&&(s=h),s=Math.min(h,s);let d=1e3*this.parseTimeframe(t);if(void 0===i){let e=this.parseToInt(this.milliseconds()/d)*d,t=(s-1)*d;o.timeStart=(e-t).toString()}else{o.timeStart=i.toString();let e=this.sum(i,d*s);o.timeEnd=e.toString()}let l=await this.publicGetCandlesBaseIdQuoteId(this.extend(o,r)),c=this.safeValue(l,"data",[]),u=this.parseOHLCVs(c,n,t,i,s),f=(u=this.filterFutureCandles(u)).length;for(let e=0;e<u.length;e++){let t=f-e-1,i=u[t];void 0===i[1]&&(i[1]=a,i[2]=a,i[3]=a,i[4]=a,u[t]=i),a=i[4]}return u}filterFutureCandles(e){let t=[],i=this.milliseconds();for(let s=0;s<e.length&&!(e[s][0]>i);s++)t.push(e[s]);return t}parseOHLCV(e,t){let i=this.safeValue(e,"data",{});return[this.parse8601(this.safeString(i,"time")),this.safeNumber(i,"open"),this.safeNumber(i,"high"),this.safeNumber(i,"low"),this.safeNumber(i,"close"),this.safeNumber(i,"volume",0)]}async fetchDepositAddress(e,t={}){let i;await this.signIn();let s=this.safeValue(this.options,"networks",{}),r=this.safeStringUpper(t,"network"),a=this.safeString(s,r,r);t=this.omit(t,["network"]);let o=await this.privateGetPlatforms(),h={},d={},l=this.safeValue(o,"items",[]);for(let e=0;e<l.length;e++){let t=l[e],i=this.safeString(t,"id"),s=this.safeValue(t,"currencies",[]);for(let e=0;e<s.length;e++){let t=this.safeString(s,e);h[t]=!0,t in d||(d[t]={}),d[t][i]=!0}}if(!(e in h)){let t=Object.keys(h);throw new n.ExchangeError(this.id+" fetchDepositAddress() "+e+" not supported. Currency code must be one of "+t.join(", "))}if(void 0===a)i=await this.privateGetDepositAddressesCurrency(this.extend({currency:e},t));else{let s=d[e];if(!(a in s)){let t=Object.keys(s);throw new n.ExchangeError(this.id+" "+a+" network "+e+" deposit address not supported. Network must be one of "+t.join(", "))}if("WAVES"===a){let t={publicKey:this.apiKey};return{info:await this.nodeGetAddressesPublicKeyPublicKey(this.extend(t,t)),currency:e,network:a,address:this.safeString(i,"address"),tag:void 0}}i=await this.privateGetDepositAddressesCurrencyPlatform(this.extend({currency:e,platform:a},t))}let c=this.safeValue(i,"currency"),u=this.safeString(c,"platform_id"),f=this.safeValue(this.options,"networkByIds",{}),p=this.safeString(f,u,u),m=this.safeValue(i,"deposit_addresses");return{info:i,currency:e,network:p,address:this.safeString(m,0),tag:void 0}}async getMatcherPublicKey(){let e=this.safeString(this.options,"matcherPublicKey");if(e)return e;{let e=await this.matcherGetMatcher();return this.options.matcherPublicKey=e.slice(1,e.length-1),this.options.matcherPublicKey}}getAssetBytes(e){return"WAVES"===e?this.numberToBE(0,1):this.binaryConcat(this.numberToBE(1,1),this.base58ToBinary(e))}getAssetId(e){return"WAVES"===e?"":e}toRealCurrencyAmount(e,t,i){let s=this.currency(e);return parseInt(r.Y.stringDiv(this.numberToString(t),this.safeString(s,"precision")))}fromRealCurrencyAmount(e,t){if(!(e in this.currencies))return t;let i=this.currency(e),s=this.safeString(i,"precision");return r.Y.stringMul(t,s)}toRealSymbolPrice(e,t){let i=this.market(e);return parseInt(r.Y.stringDiv(this.numberToString(t),this.safeString(i.precision,"price")))}fromRealSymbolPrice(e,t){let i=this.markets[e];return r.Y.stringMul(t,this.safeString(i.precision,"price"))}toRealSymbolAmount(e,t){let i=this.market(e);return parseInt(r.Y.stringDiv(this.numberToString(t),this.safeString(i.precision,"amount")))}fromRealSymbolAmount(e,t){let i=this.markets[e];return r.Y.stringMul(t,i.precision.amount)}safeGetDynamic(e){let t=this.safeValue(e,"orderFee");return"dynamic"in t?this.safeValue(t,"dynamic"):this.safeValue(t.composite.default,"dynamic")}safeGetRates(e){let t=this.safeValue(e,"rates");return void 0===t?{WAVES:1}:t}async createOrder(e,t,i,s,r,a={}){let o,h,d;this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets();let l=this.market(e),c=await this.getMatcherPublicKey(),u=this.getAssetId(l.baseId),f=this.getAssetId(l.quoteId),p="market"===t,m=this.safeFloat2(a,"triggerPrice","stopPrice"),g=void 0!==m;if(p&&void 0===r)throw new n.InvalidOrder(this.id+" createOrder() requires a price argument for "+t+" orders to determine the max price for buy and the min price for sell");let y=this.milliseconds();[o,a]=this.handleOptionAndParams(a,"createOrder","defaultExpiry",this.safeInteger(this.options,"createOrderDefaultExpiry",24192e5));let v=this.sum(y,o),b=await this.getFeesForAsset(e,i,s,r),w=this.safeValue2(b,"base","discount"),k=this.safeString(w,"feeAssetId"),S=this.safeCurrencyCode(k),O=this.safeString(w,"matcherFee"),T=this.safeValue(b,"discount"),I=this.safeString(T,"feeAssetId"),x=this.safeCurrencyCode(I),P=this.safeString(T,"matcherFee");if("feeAsset"in a||"feeAsset"in this.options){let e=this.safeString(a,"feeAsset",this.safeString(this.options,"feeAsset")),t=this.currency(e);h=this.safeString(t,"id")}let M=await this.fetchBalance();if(void 0!==h){if(k!==h&&I!==h)throw new n.InvalidOrder(this.id+" asset fee must be "+S+" or "+x);let e=this.safeCurrencyCode(h),t=h===k?O:P,i=parseFloat(this.fromRealCurrencyAmount(e,t));if(e in M&&M[e].free>=i)d=parseInt(t);else throw new n.InsufficientFunds(this.id+" not enough funds of the selected asset fee")}let A=this.fromRealCurrencyAmount(S,O),C=this.fromRealCurrencyAmount(x,P);if(void 0===h&&(S in M&&M[S].free>=parseFloat(A)?(h=k,d=parseInt(O)):x in M&&M[x].free>=parseFloat(C)&&(h=I,d=parseInt(P))),void 0===h)throw new n.InsufficientFunds(this.id+" not enough funds on none of the eligible asset fees: "+S+" "+A+" or "+x+" "+C);s=this.toRealSymbolAmount(e,s),r=this.toRealSymbolPrice(e,r);let B=this.safeBool(this.options,"sandboxMode",!1),E={senderPublicKey:this.apiKey,matcherPublicKey:c,assetPair:{amountAsset:u,priceAsset:f},orderType:i,price:r,amount:s,timestamp:y,expiration:v,matcherFee:parseInt(d),priceMode:"assetDecimals",version:4,chainId:B?84:87};if(g){let t={v:1,c:{t:"sp",v:{p:this.toRealSymbolPrice(e,m)}}};E.attachment=this.binaryToBase58(this.encode(JSON.stringify(t)))}"WAVES"!==h&&(E.matcherFeeAssetId=h);let _=await this.matcherPostMatcherOrdersSerialize(E);'"'===_[0]&&'"'===_[_.length-1]&&(_=_.slice(1,_.length-1));let N=this.axolotl(this.binaryToBase16(this.base58ToBinary(_)),this.binaryToBase16(this.base58ToBinary(this.secret)),tC.ev);if(E.signature=N,p){let e=await this.matcherPostMatcherOrderbookMarket(this.extend(E,a)),t=this.safeDict(e,"message");return this.parseOrder(t,l)}{let e=await this.matcherPostMatcherOrderbook(this.extend(E,a)),t=this.safeDict(e,"message");return this.parseOrder(t,l)}}async cancelOrder(e,t,i={}){this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.signIn();let s=await this.getWavesAddress(),r=await this.forwardPostMatcherOrdersWavesAddressCancel({wavesAddress:s,orderId:e}),a=this.safeValue(r,"message"),n=this.safeValue(a,0),o=this.safeValue(n,0),h=this.safeString(o,"orderId");return this.safeOrder({info:r,id:h,clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:t,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0})}async fetchOrder(e,t,i={}){let s;this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=this.milliseconds(),a=[this.base58ToBinary(this.apiKey),this.numberToBE(r,8)],n=this.binaryConcatArray(a),o=this.binaryToBase16(this.base58ToBinary(this.secret)),h=this.axolotl(this.binaryToBase16(n),o,tC.ev),d={Timestamp:r.toString(),Signature:h,publicKey:this.apiKey,orderId:e},l=await this.matcherGetMatcherOrderbookPublicKeyOrderId(this.extend(d,i));return this.parseOrder(l,s)}async fetchOrders(e,t,i,s={}){if(this.checkRequiredDependencies(),this.checkRequiredKeys(),void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a=this.milliseconds(),o=[this.base58ToBinary(this.apiKey),this.numberToBE(a,8)],h=this.binaryConcatArray(o),d=this.binaryToBase16(this.base58ToBinary(this.secret)),l=this.axolotl(this.binaryToBase16(h),d,tC.ev),c={Accept:"application/json",Timestamp:a.toString(),Signature:l,publicKey:this.apiKey,baseId:r.baseId,quoteId:r.quoteId},u=await this.matcherGetMatcherOrderbookBaseIdQuoteIdPublicKeyPublicKey(this.extend(c,s));return this.parseOrders(u,r,t,i)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets(),await this.signIn(),void 0!==e&&(r=this.market(e));let a=await this.getWavesAddress(),n=await this.forwardGetMatcherOrdersAddress({address:a,activeOnly:!0});return this.parseOrders(n,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets(),await this.signIn(),void 0!==e&&(r=this.market(e));let a=await this.getWavesAddress(),n=await this.forwardGetMatcherOrdersAddress({address:a,closedOnly:!0});return this.parseOrders(n,r,t,i)}parseOrderStatus(e){return this.safeString({Cancelled:"canceled",Accepted:"open",Filled:"closed",PartiallyFilled:"open"},e,e)}getSymbolFromAssetPair(e){let t=this.safeString(e,"amountAsset","WAVES"),i=this.safeString(e,"priceAsset","WAVES");return this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(i)}parseOrder(e,t){let i,s,r;let a=this.safeInteger(e,"timestamp"),n=this.safeString2(e,"type","orderType"),o="limit";"type"in e&&(o=this.safeString(e,"orderType",o));let h=this.safeString(e,"id"),d=this.safeString(e,"filled"),l=this.safeString(e,"price"),c=this.safeString(e,"amount"),u=this.safeValue(e,"assetPair");void 0!==u?i=this.getSymbolFromAssetPair(u):void 0!==t&&(i=t.symbol);let f=this.safeCurrencyCode(this.safeString(u,"amountAsset","WAVES")),p=this.fromRealSymbolPrice(i,l),m=this.fromRealCurrencyAmount(f,c),g=this.fromRealCurrencyAmount(f,d),y=this.fromRealSymbolPrice(i,this.safeString(e,"avgWeighedPrice")),v=this.parseOrderStatus(this.safeString(e,"status"));if("type"in e){let t=this.safeCurrencyCode(this.safeString(e,"feeAsset"));s={currency:t,fee:this.parseNumber(this.fromRealCurrencyAmount(t,this.safeString(e,"filledFee")))}}else{let t=this.safeCurrencyCode(this.safeString(e,"matcherFeeAssetId","WAVES"));s={currency:t,fee:this.parseNumber(this.fromRealCurrencyAmount(t,this.safeString(e,"matcherFee")))}}let b=this.safeString(e,"attachment");if(void 0!==b){let e=this.parseJson(this.decode(this.base58ToBinary(b)));if(void 0!==e){let t=this.safeValue(e,"c");if(void 0!==t){let e=this.safeValue(t,"v");void 0!==e&&(r=this.safeString(e,"p"))}}}return this.safeOrder({info:e,id:h,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:i,type:o,timeInForce:void 0,postOnly:void 0,side:n,price:p,triggerPrice:r,amount:m,cost:void 0,average:y,filled:g,remaining:void 0,status:v,fee:s,trades:void 0},t)}async getWavesAddress(){let e=this.safeString(this.options,"wavesAddress");if(void 0!==e)return e;{let e={publicKey:this.apiKey},t=await this.nodeGetAddressesPublicKeyPublicKey(e);return this.options.wavesAddress=this.safeString(t,"address"),this.options.wavesAddress}}async fetchBalance(e={}){let t;this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets();let i=await this.getWavesAddress(),s=await this.nodeGetAssetsBalanceAddress({address:i}),a=this.safeValue(s,"balances",[]),n={},o=[],h=[];for(let e=0;e<a.length;e++){let i=a[e],s=this.safeInteger(i,"timestamp");t=void 0===t?s:Math.max(t,s);let r=this.safeValue(i,"issueTransaction"),d=this.safeString(i,"assetId"),l=this.safeString(i,"balance");if(d in this.currencies_by_id){let e=this.safeCurrencyCode(d);n[e]=this.account(),n[e].total=this.fromRealCurrencyAmount(e,l)}else void 0===r&&(o.push(d),h.push(l))}if(o.length){let e=await this.publicGetAssets({ids:o}),t=this.safeValue(e,"data",[]);for(let e=0;e<t.length;e++){let i=t[e],s=h[e],a=this.safeValue(i,"data"),o=this.parsePrecision(this.safeString(a,"precision")),d=this.safeString(a,"ticker"),l=this.safeCurrencyCode(d);n[l]=this.account(),n[l].total=r.Y.stringMul(s,o)}}let d=this.milliseconds(),l=[this.base58ToBinary(this.apiKey),this.numberToBE(d,8)],c=this.binaryConcatArray(l),u=this.binaryToBase16(this.base58ToBinary(this.secret)),f=this.axolotl(this.binaryToBase16(c),u,tC.ev),p={publicKey:this.apiKey,signature:f,timestamp:d.toString()},m=await this.matcherGetMatcherBalanceReservedPublicKey(p),g=Object.keys(m);for(let e=0;e<g.length;e++){let t=g[e],i=this.safeCurrencyCode(t);i in n||(n[i]=this.account());let s=this.safeString(m,t);n[i].used=this.fromRealCurrencyAmount(i,s)}let y=await this.nodeGetAddressesBalanceAddress({address:i});return n.WAVES=this.safeValue(n,"WAVES",this.account()),n.WAVES.total=this.fromRealCurrencyAmount("WAVES",this.safeString(y,"balance")),(n=this.setUndefinedBalancesToZero(n)).timestamp=t,n.datetime=this.iso8601(t),this.safeBalance(n)}setUndefinedBalancesToZero(e,t="used"){let i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s];void 0===this.safeValue(e[r],"used")&&(e[r][t]="0")}return e}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={sender:await this.getWavesAddress()};void 0!==e&&(r=this.market(e),a.amountAsset=r.baseId,a.priceAsset=r.quoteId);let n=await this.publicGetTransactionsExchange(a),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={amountAsset:r.baseId,priceAsset:r.quoteId};void 0!==i&&(a.limit=Math.min(i,100)),void 0!==t&&(a.timeStart=t);let n=await this.publicGetTransactionsExchange(a),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i,s;let r=this.safeValue(e,"data"),a=this.safeString(r,"timestamp"),n=this.parse8601(a),o=this.safeString(r,"id"),h=this.safeString(r,"price"),d=this.safeString(r,"amount"),l=this.safeValue(r,"order1"),c=this.safeValue(r,"order2");i=this.safeString(l,"senderPublicKey")===this.apiKey?l:c;let u=this.safeValue(i,"assetPair");void 0!==u?s=this.getSymbolFromAssetPair(u):void 0!==t&&(s=t.symbol);let f=this.safeString(i,"orderType"),p=this.safeString(i,"id"),m={cost:this.safeString(i,"matcherFee"),currency:this.safeCurrencyCode(this.safeString(i,"matcherFeeAssetId","WAVES"))};return this.safeTrade({info:e,timestamp:n,datetime:a,symbol:s,id:o,order:p,type:void 0,side:f,takerOrMaker:void 0,price:h,amount:d,cost:void 0,fee:m},t)}parseDepositWithdrawFees(e,t,i){let s={};t=this.marketCodes(t);for(let r=0;r<e.length;r++){let a=e[r],n=this.safeString(a,i),o=this.safeValue(this.currencies_by_id,n),h=this.safeString(o,"code",n);if(void 0===t||this.inArray(h,t)){let e=this.safeValue(s,h);void 0===e?e={info:[a],withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}}:(e=s[h]).info=this.arrayConcat(e.info,[a]);let t=this.safeString(a,"platform_id"),i=this.safeString(o,"code"),r=this.networkIdToCode(t,i),n=this.safeValue(e.networks,r);void 0===n&&(n={withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0}});let d=this.safeString(a,"type"),l=this.safeValue(a,"fees"),c="deposit";"withdrawal_currency"===d&&(c="withdraw"),n[c]={fee:this.safeNumber(l,"flat"),percentage:!1},e.networks[r]=n,s[h]=e}}let r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e],i=s[t],a=this.safeValue(i,"networks"),n=Object.keys(a);if(1===n.length){let e=this.safeValue(a,n[0]);s[t].withdraw=this.safeValue(e,"withdraw"),s[t].deposit=this.safeValue(e,"deposit")}}return s}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=[],s=[];s.push(this.privateGetDepositCurrencies(t)),s.push(this.privateGetWithdrawCurrencies(t)),s=await Promise.all(s);for(let e=0;e<s.length;e++){let t=this.safeValue(s[e],"items");i=this.arrayConcat(i,t)}return this.parseDepositWithdrawFees(i,e,"id")}handleErrors(e,t,i,s,r,a,o,h,d){let l=this.safeString(o,"error"),c=this.safeBool(o,"success",!0),u=this.safeValue(this.exceptions,l);if(void 0!==u){let e=this.safeString(o,"message");throw new u(this.id+" "+e)}if("Validation Error"===this.safeString(o,"message"))throw new n.BadRequest(this.id+" "+a);if(!c)throw new n.ExchangeError(this.id+" "+a)}async withdraw(e,t,i,s,r={}){let a;if([s,r]=this.handleWithdrawTagAndParams(s,r),"WAVES"!==e){let t=await this.privateGetWithdrawCurrencies(),i={},s=this.safeValue(t,"items",[]);for(let e=0;e<s.length;e++){let t=s[e];i[this.safeString(t,"id")]=!0}if(!(e in i)){let t=Object.keys(i);throw new n.ExchangeError(this.id+" withdraw() "+e+" not supported. Currency code must be one of "+t.toString())}}await this.loadMarkets();let o=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],h={};for(let e=0;e<o.length;e++)h[o[e]]=!0;let d=!0,l=this.remove0xPrefix(i).toLowerCase(),c=1*l.length;for(let e=0;e<c;e++)if(!(l[e]in h)){d=!1;break}if(await this.signIn(),"WAVES"!==e||d){let s=await this.privateGetWithdrawAddressesCurrencyAddress({address:i,currency:e}),r=this.safeValue(s,"currency"),o=this.safeValue(r,"allowed_amount"),h=this.safeNumber(o,"min");if(t<=h)throw new n.BadRequest(this.id+" "+e+" withdraw failed, amount "+t.toString()+" must be greater than the minimum allowed amount of "+h.toString());let d=this.safeValue(s,"proxy_addresses",[]);a=this.safeString(d,0)}else a=i;let u=this.safeInteger(this.options,"withdrawFeeWAVES",1e5),f="WAVES",p=this.toRealCurrencyAmount(e,t),m=this.currency(e),g=this.milliseconds(),y=[this.numberToBE(4,1),this.numberToBE(2,1),this.base58ToBinary(this.apiKey),this.getAssetBytes(m.id),this.getAssetBytes(f),this.numberToBE(g,8),this.numberToBE(p,8),this.numberToBE(u,8),this.base58ToBinary(a),this.numberToBE(0,2)],v=this.binaryConcatArray(y),b=this.binaryToBase16(this.base58ToBinary(this.secret)),w=this.axolotl(this.binaryToBase16(v),b,tC.ev),k={senderPublicKey:this.apiKey,amount:p,fee:u,type:4,version:2,attachment:"",feeAssetId:this.getAssetId(f),proofs:[w],assetId:this.getAssetId(m.id),recipient:a,timestamp:g,signature:w},S=await this.nodePostTransactionsBroadcast(k);return this.parseTransaction(S,m)}parseTransaction(e,t){let i=(t=this.safeCurrency(void 0,t)).code,s=this.safeString(e,"type"),r=this.parseNumber(this.fromRealCurrencyAmount(i,this.safeString(e,"amount"))),a=this.safeString(e,"fee"),n=this.safeString(e,"feeAssetId","WAVES"),o=this.safeCurrencyCode(n),h=this.parseNumber(this.fromRealCurrencyAmount(o,a)),d=this.safeInteger(e,"timestamp");return{id:this.safeString(e,"id"),txid:void 0,timestamp:d,datetime:this.iso8601(d),network:void 0,addressFrom:this.safeString(e,"sender"),address:void 0,addressTo:this.safeString(e,"recipient"),amount:r,type:"4"===s?"withdraw":"deposit",currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,internal:void 0,fee:{currency:o,cost:h},info:e}}}class sk extends s.k{}let sS=sk;class sO extends sS{describe(){return this.deepExtend(super.describe(),{id:"wazirx",name:"WazirX",countries:["IN"],version:"v2",rateLimit:1e3,pro:!0,has:{CORS:!1,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchFundingHistory:!1,fetchFundingInterval:!1,fetchFundingIntervals:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchGreeks:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchIsolatedPositions:!1,fetchLeverage:!1,fetchLeverages:!1,fetchLeverageTiers:!1,fetchLiquidations:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarginModes:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMarkPrices:!1,fetchMyLiquidations:!1,fetchMySettlementHistory:!1,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOption:!1,fetchOptionChain:!1,fetchOrder:!1,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawals:!0,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/148647666-c109c20b-f8ac-472f-91c3-5f658cb90f49.jpeg",api:{rest:"https://api.wazirx.com/sapi/v1"},www:"https://wazirx.com",doc:"https://docs.wazirx.com/#public-rest-api-for-wazirx",fees:"https://wazirx.com/fees",referral:"https://wazirx.com/invite/k7rrnks5"},api:{public:{get:{exchangeInfo:1,depth:.5,ping:1,systemStatus:1,"tickers/24hr":1,"ticker/24hr":1,time:1,trades:1,klines:1}},private:{get:{account:1,allOrders:1,funds:1,historicalTrades:1,openOrders:1,order:.5,myTrades:.5,coins:12,"crypto/withdraws":12,"crypto/deposits/address":60,"sub_account/fund_transfer/history":1,"sub_account/accounts":1},post:{order:.1,"order/test":.5},delete:{order:.1,openOrders:1}}},fees:{WRX:{maker:this.parseNumber("0.0"),taker:this.parseNumber("0.0")}},precisionMode:d.kb,exceptions:{exact:{"-1121":n.BadSymbol,1999:n.BadRequest,2002:n.InsufficientFunds,2005:n.BadRequest,2078:n.PermissionDenied,2098:n.BadRequest,2031:n.InvalidOrder,2113:n.BadRequest,2115:n.BadRequest,2136:n.RateLimitExceeded,94001:n.InvalidOrder}},timeframes:{"1m":"1m","5m":"5m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w"},options:{recvWindow:1e4,networks:{}}})}async fetchMarkets(e={}){let t=await this.publicGetExchangeInfo(e),i=this.safeValue(t,"symbols",[]);return this.parseMarkets(i)}parseMarket(e){let t;let i=this.safeString(e,"symbol"),s=this.safeString(e,"baseAsset"),a=this.safeString(e,"quoteAsset"),n=this.safeCurrencyCode(s),o=this.safeCurrencyCode(a),h=this.safeValue(e,"isSpotTradingAllowed"),d=this.safeValue(e,"filters");for(let e=0;e<d.length;e++){let i=d[e];"PRICE_FILTER"===this.safeString(i,"filterType")&&(t=this.safeNumber(i,"minPrice"))}let l=this.safeValue(this.fees,o,{}),c=this.safeString(l,"taker","0.2");c=r.Y.stringDiv(c,"100");let u=this.safeString(l,"maker","0.2");return u=r.Y.stringDiv(u,"100"),{id:i,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:s,quoteId:a,settleId:void 0,type:"spot",spot:h,margin:!1,swap:!1,future:!1,option:!1,active:"trading"===this.safeString(e,"status"),contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(c),maker:this.parseNumber(u),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"baseAssetPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"quoteAssetPrecision")))},limits:{leverage:{min:void 0,max:void 0},price:{min:t,max:void 0},amount:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={symbol:a.id,interval:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=Math.min(s,2e3));let o=this.safeInteger(r,"until");r=this.omit(r,["until"]),void 0!==i&&(n.startTime=this.parseToInt(i/1e3)),void 0!==o&&(n.endTime=o);let h=await this.publicGetKlines(this.extend(n,r));return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.publicGetDepth(this.extend(s,i)),a=this.safeInteger(r,"timestamp");return this.parseOrderBook(r,e,a)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker24hr(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers24hr(),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.parseTicker(t);s[r.symbol]=r}return this.filterByArrayTickers(s,"symbol",e)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n={symbol:a.id};return void 0!==i&&(n.limit=Math.min(i,1e3)),r="privateGetHistoricalTrades"===this.safeString(this.options,"fetchTradesMethod","publicGetTrades")?await this.privateGetHistoricalTrades(this.extend(n,s)):await this.publicGetTrades(this.extend(n,s)),this.parseTrades(r,a,t,i)}parseTrade(e,t){let i=this.safeString(e,"id"),s=this.safeInteger(e,"time"),r=this.iso8601(s);t=this.safeMarket(void 0,t);let a=this.safeValue(e,"isBuyerMaker"),n=this.safeNumber(e,"price"),o=this.safeNumber(e,"qty"),h=this.safeNumber(e,"quoteQty");return this.safeTrade({info:e,id:i,timestamp:s,datetime:r,symbol:t.symbol,order:i,type:void 0,side:a?"sell":"buy",takerOrMaker:void 0,price:n,amount:o,cost:h,fee:void 0},t)}async fetchStatus(e={}){let t=await this.publicGetSystemStatus(e);return{status:"normal"===this.safeString(t,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){let t=await this.publicGetTime(e);return this.safeInteger(t,"serverTime")}parseTicker(e,t){let i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString(e,"lastPrice"),a=this.safeString(e,"openPrice"),n=this.safeString(e,"highPrice"),o=this.safeString(e,"lowPrice"),h=this.safeString(e,"volume"),d=this.safeString(e,"bidPrice"),l=this.safeString(e,"askPrice"),c=this.safeInteger(e,"at");return this.safeTicker({symbol:s,timestamp:c,datetime:this.iso8601(c),high:n,low:o,bid:d,bidVolume:void 0,ask:l,askVolume:void 0,vwap:void 0,open:a,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:h,quoteVolume:void 0,info:e},t)}parseBalance(e){let t={info:e};for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"free"),n.used=this.safeString(s,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetFunds(e);return this.parseBalance(t)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);let o=await this.privateGetAllOrders(this.extend(a,s)),h=this.parseOrders(o,r,t,i);return this.filterBy(h,"symbol",e)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);let n=await this.privateGetOpenOrders(this.extend(a,s));return this.parseOrders(n,r,t,i)}async cancelAllOrders(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();let i={symbol:this.market(e).id},s=await this.privateDeleteOpenOrders(this.extend(i,t));return this.parseOrders(s)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s={symbol:this.market(t).id,orderId:e},r=await this.privateDeleteOrder(this.extend(s,i));return this.parseOrder(r)}async createOrder(e,t,i,s,r,a={}){if("limit"!==(t=t.toLowerCase())&&"stop_limit"!==t)throw new n.ExchangeError(this.id+" createOrder() supports limit and stop_limit orders only");if(void 0===r)throw new n.ExchangeError(this.id+" createOrder() requires a price argument");await this.loadMarkets();let o=this.market(e),h={symbol:o.id,side:i,quantity:s,type:"limit"};h.price=this.priceToPrecision(e,r);let d=this.safeString(a,"stopPrice");void 0!==d&&(h.type="stop_limit",h.stopPrice=this.priceToPrecision(e,d));let l=await this.privatePostOrder(this.extend(h,a));return this.parseOrder(l,o)}parseOrder(e,t){let i=this.safeInteger(e,"createdTime"),s=this.safeInteger(e,"updatedTime"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.safeString(e,"quantity"),o=this.safeString(e,"executedQty"),h=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"id"),l=this.safeString(e,"price"),c=this.safeStringLower(e,"type"),u=this.safeStringLower(e,"side");return this.safeOrder({info:e,id:d,clientOrderId:this.safeString(e,"clientOrderId"),timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:h,symbol:a,type:c,timeInForce:void 0,postOnly:void 0,side:u,price:l,amount:n,filled:o,remaining:void 0,cost:void 0,fee:void 0,average:this.safeString(e,"avgPrice"),trades:[]},t)}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;let t=await this.privateGetCoins(e),i={};for(let e=0;e<t.length;e++){let s,a,n,o,h;let d=t[e],l=this.safeString(d,"currency"),c=this.safeCurrencyCode(l),u=this.safeString(d,"name"),f=this.safeList(d,"networkList",[]),p={},m=!1,g=!1;for(let e=0;e<f.length;e++){let t=f[e],i=this.safeString(t,"network"),d=this.networkIdToCode(i),l=this.parseNumber(this.parsePrecision(this.safeString(t,"precision")));s=void 0===s?l:Math.min(s,l);let c=this.safeBool(t,"depositEnable");m=c||m;let u=this.safeBool(t,"withdrawEnable");g=u||g;let y=this.safeString(t,"withdrawFee");void 0!==y&&(a=void 0===a?y:r.Y.stringMin(y,a));let v=this.safeString(t,"minWithdrawAmount");void 0!==v&&(n=void 0===n?v:r.Y.stringMin(v,n));let b=this.safeString(t,"maxWithdrawAmount");void 0!==b&&(o=void 0===o?b:r.Y.stringMin(b,o));let w=this.safeString(t,"depositDust");void 0!==w&&(h=void 0===h?w:r.Y.stringMin(w,h)),p[d]={info:t,id:i,network:d,active:c&&u,deposit:c,withdraw:u,fee:this.parseNumber(y),precision:l,limits:{withdraw:{min:this.parseNumber(v),max:this.parseNumber(b)},deposit:{min:this.parseNumber(w),max:void 0}}}}i[c]={info:d,code:c,id:l,name:u,active:m&&g,deposit:m,withdraw:g,fee:this.parseNumber(a),precision:s,limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.parseNumber(n),max:this.parseNumber(o)},deposit:{min:this.parseNumber(h),max:void 0}},networks:p}}return i}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=this.safeString(t,"network");if(t=this.omit(t,"network"),void 0===s)throw new n.ArgumentsRequired(this.id+" fetchDepositAddress() requires a network parameter");let r={coin:i.id,network:this.networkCodeToId(s,e)},a=await this.privateGetCryptoDepositsAddress(this.extend(r,t));return{info:a,currency:e,network:this.networkCodeToId(s,e),address:this.safeString(a,"address"),tag:void 0}}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==i&&(a.limit=i);let n=this.safeInteger(s,"until");s=this.omit(s,["until"]),void 0!==t&&(a.startTime=t),void 0!==n&&(a.endTime=n);let o=await this.privateGetCryptoWithdraws(this.extend(a,s));return this.parseTransactions(o,r,t,i)}parseTransactionStatus(e){return this.safeString({0:"ok",1:"fail",2:"pending",3:"canceled"},e,e)}parseTransaction(e,t){let i;let s=this.safeString(e,"coin"),r=this.safeCurrencyCode(s,t),a=this.parse8601(this.safeString(e,"createdAt")),n=this.parse8601(this.safeString(e,"lastUpdated")),o=this.parseTransactionStatus(this.safeString(e,"status")),h=this.safeNumber(e,"transactionFee");return void 0!==h&&(i={cost:h,currency:r}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"txId"),timestamp:a,datetime:this.iso8601(a),network:this.networkIdToCode(this.safeString(e,"network")),address:this.safeString(e,"address"),addressTo:this.safeString(e,"address"),addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:"withdrawal",amount:this.safeNumber(e,"amount"),currency:r,status:o,updated:n,fee:i,internal:void 0,comment:void 0}}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/"+e;if("public"===t&&Object.keys(s).length&&(n+="?"+this.urlencode(s)),"private"===t){this.checkRequiredCredentials();let e=this.milliseconds(),t=this.extend({recvWindow:this.options.recvWindow,timestamp:e},s);t=this.keysort(t);let i=this.hmac(this.encode(this.urlencode(t)),this.encode(this.secret),l.s);n+="?"+this.urlencode(t)+"&signature="+i,r={"Content-Type":"application/x-www-form-urlencoded","X-Api-Key":this.apiKey}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeString(o,"code");if(void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),new n.ExchangeError(e)}}}class sT extends s.k{}let sI=sT;class sx extends sI{describe(){return this.deepExtend(super.describe(),{id:"whitebit",name:"WhiteBit",version:"v4",countries:["EE"],rateLimit:50,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelAllOrdersAfter:!0,cancelOrder:!0,cancelOrders:!1,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg",api:{v1:{public:"https://whitebit.com/api/v1/public",private:"https://whitebit.com/api/v1"},v2:{public:"https://whitebit.com/api/v2/public"},v4:{public:"https://whitebit.com/api/v4/public",private:"https://whitebit.com/api/v4"}},www:"https://www.whitebit.com",doc:"https://github.com/whitebit-exchange/api-docs",fees:"https://whitebit.com/fee-schedule",referral:"https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963"},api:{web:{get:["v1/healthcheck"]},v1:{public:{get:["markets","tickers","ticker","symbols","depth/result","history","kline"]},private:{post:["account/balance","order/new","order/cancel","orders","account/order_history","account/executed_history","account/executed_history/all","account/order"]}},v2:{public:{get:["markets","ticker","assets","fee","depth/{market}","trades/{market}"]}},v4:{public:{get:["assets","collateral/markets","fee","orderbook/{market}","ticker","trades/{market}","time","ping","markets","futures","platform/status"]},private:{post:["collateral-account/balance","collateral-account/balance-summary","collateral-account/positions/history","collateral-account/leverage","collateral-account/positions/open","collateral-account/summary","main-account/address","main-account/balance","main-account/create-new-address","main-account/codes","main-account/codes/apply","main-account/codes/my","main-account/codes/history","main-account/fiat-deposit-url","main-account/history","main-account/withdraw","main-account/withdraw-pay","main-account/transfer","main-account/smart/plans","main-account/smart/investment","main-account/smart/investment/close","main-account/smart/investments","main-account/fee","main-account/smart/interest-payment-history","trade-account/balance","trade-account/executed-history","trade-account/order","trade-account/order/history","order/collateral/limit","order/collateral/market","order/collateral/stop-limit","order/collateral/trigger-market","order/new","order/market","order/stock_market","order/stop_limit","order/stop_market","order/cancel","order/cancel/all","order/kill-switch","order/kill-switch/status","order/bulk","order/modify","orders","oco-orders","order/collateral/oco","order/oco-cancel","order/oto-cancel","profile/websocket_token","convert/estimate","convert/confirm","convert/history","sub-account/create","sub-account/delete","sub-account/edit","sub-account/list","sub-account/transfer","sub-account/block","sub-account/unblock","sub-account/balances","sub-account/transfer/history"]}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},options:{fiatCurrencies:["EUR","USD","RUB","UAH"],fetchBalance:{account:"spot"},accountsByType:{funding:"main",main:"main",spot:"spot",margin:"collateral",trade:"spot"},networksById:{BEP20:"BSC"},defaultType:"spot",brokerId:"ccxt"},precisionMode:d.kb,exceptions:{exact:{"Unauthorized request.":n.AuthenticationError,"The market format is invalid.":n.BadSymbol,"Market is not available":n.BadSymbol,"Invalid payload.":n.BadRequest,"Amount must be greater than 0":n.InvalidOrder,"Not enough balance.":n.InsufficientFunds,"The order id field is required.":n.InvalidOrder,"Not enough balance":n.InsufficientFunds,"This action is unauthorized.":n.PermissionDenied,"This API Key is not authorized to perform this action.":n.PermissionDenied,"Unexecuted order was not found.":n.OrderNotFound,"The selected from is invalid.":n.BadRequest,503:n.ExchangeNotAvailable,422:n.OrderNotFound},broad:{"This action is unauthorized":n.PermissionDenied,"Given amount is less than min amount":n.InvalidOrder,"Min amount step":n.InvalidOrder,"Total is less than":n.InvalidOrder,"fee must be no less than":n.InvalidOrder,"Enable your key in API settings":n.PermissionDenied,"You don't have such amount for transfer":n.InsufficientFunds}}})}async fetchMarkets(e={}){let t=await this.v4PublicGetMarkets();return this.parseMarkets(t)}parseMarket(e){let t,i,s,a,n;let o=this.safeString(e,"name"),h=this.safeString(e,"stock"),d=this.safeString(e,"money");d="PERP"===d?"USDT":d;let l=this.safeCurrencyCode(h),c=this.safeCurrencyCode(d),u=this.safeValue(e,"tradesEnabled"),f=this.safeValue(e,"isCollateral"),p=this.safeString(e,"type"),m=l+"/"+c,g="futures"===p,y=!1,v=this.parseNumber(this.parsePrecision(this.safeString(e,"stockPrec")));g?(s=d,m=m+":"+(i=this.safeCurrencyCode(s)),t="swap",y=!0,a=!0,n=!1):t="spot";let b=this.safeString(e,"takerFee"),w=r.Y.stringDiv(b,"100"),k=this.safeString(e,"makerFee"),S=r.Y.stringDiv(k,"100");return{id:o,symbol:m,base:l,quote:c,settle:i,baseId:h,quoteId:d,settleId:s,type:t,spot:!g,margin:f&&!g,swap:g,future:!1,option:!1,active:u,contract:y,linear:a,inverse:n,taker:this.parseNumber(w),maker:this.parseNumber(S),contractSize:v,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:v,price:this.parseNumber(this.parsePrecision(this.safeString(e,"moneyPrec")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"minAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(e,"minTotal"),max:this.safeNumber(e,"maxTotal")}},created:void 0,info:e}}async fetchCurrencies(e={}){let t=await this.v4PublicGetAssets(e),i=Object.keys(t),s={};for(let e=0;e<i.length;e++){let r=i[e],a=t[r],n=this.safeBool(a,"can_deposit",!0),o=this.safeBool(a,"can_withdraw",!0),h=n&&o,d=this.safeCurrencyCode(r);s[d]={id:r,code:d,info:a,name:void 0,active:h,deposit:n,withdraw:o,fee:void 0,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(a,"min_withdraw"),max:this.safeNumber(a,"max_withdraw")}}}}return s}async fetchTransactionFees(e,t={}){await this.loadMarkets();let i=await this.v4PublicGetFee(t),s=Object.keys(i),r={},a={};for(let e=0;e<s.length;e++){let t=s[e],n=i[t],o=this.safeCurrencyCode(t),h=this.safeValue(n,"withdraw",{});r[o]=this.safeString(h,"fixed");let d=this.safeValue(n,"deposit",{});a[o]=this.safeString(d,"fixed")}return{withdraw:r,deposit:a,info:i}}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.v4PublicGetFee(t);return this.parseDepositWithdrawFees(i,e)}parseDepositWithdrawFees(e,t,i){let s={};t=this.marketCodes(t);let r=Object.keys(e);for(let i=0;i<r.length;i++){let a=r[i],n=a.split(" "),o=n[0],h=e[a],d=this.safeCurrencyCode(o);if(void 0===t||this.inArray(d,t)){void 0===this.safeValue(s,d)&&(s[d]=this.depositWithdrawFee({})),s[d].info[a]=h;let e=this.safeString(n,1),t=this.safeValue(h,"withdraw"),i=this.safeValue(h,"deposit"),r=this.safeNumber(t,"fixed"),o=this.safeNumber(i,"fixed"),l={fee:r,percentage:void 0===r&&void 0},c={fee:o,percentage:void 0===o&&void 0};if(void 0!==e){let t=e.length;e=e.slice(1,t-1);let i=this.networkIdToCode(e);s[d].networks[i]={withdraw:l,deposit:c}}else s[d].withdraw=l,s[d].deposit=c}}let a=Object.keys(s);for(let e=0;e<a.length;e++){let t=a[e],i=this.currency(t);s[t]=this.assignDefaultDepositWithdrawFees(s[t],i)}return s}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.v4PublicGetAssets(e),i={};for(let e=0;e<this.symbols.length;e++){let s=this.symbols[e],a=this.market(s),n=this.safeValue(t,a.baseId,{}),o=this.safeString(n,"maker_fee"),h=this.safeString(n,"taker_fee");o=r.Y.stringDiv(o,"100"),h=r.Y.stringDiv(h,"100"),i[s]={info:n,symbol:a.symbol,percentage:!0,tierBased:!1,maker:this.parseNumber(o),taker:this.parseNumber(h)}}return i}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={market:i.id},r=await this.v1PublicGetTicker(this.extend(s,t)),a=this.safeDict(r,"result",{});return this.parseTicker(a,i)}parseTicker(e,t){let i=this.safeString(e,"tradingPairs");t=this.safeMarket(i,t);let s=this.safeStringN(e,["last","last_price","lastPrice"]),r=this.safeString(e,"close",s);return this.safeTicker({symbol:t.symbol,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString2(e,"bid","highestBid"),bidVolume:void 0,ask:this.safeString2(e,"ask","lowestAsk"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:r,last:s,previousClose:void 0,change:void 0,percentage:this.safeString(e,"change"),average:void 0,baseVolume:this.safeStringN(e,["base_volume","volume","baseVolume24h"]),quoteVolume:this.safeStringN(e,["quote_volume","deal","quoteVolume24h"]),info:e},t)}async fetchTickers(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e);let s="v4PublicGetTicker";[s,t]=this.handleOptionAndParams(t,"fetchTickers","method",s),i="v4PublicGetTicker"===s?await this.v4PublicGetTicker(t):await this.v2PublicGetTicker(t);let r=this.safeList(i,"result");if(void 0!==r)return this.parseTickers(r,e);let a=Object.keys(i),n={};for(let e=0;e<a.length;e++){let t=a[e],s=this.safeMarket(t),r=this.parseTicker(i[t],s);n[r.symbol]=r}return this.filterByArrayTickers(n,"symbol",e)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.v4PublicGetOrderbookMarket(this.extend(s,i)),a=this.safeTimestamp(r,"timestamp");return this.parseOrderBook(r,e,a)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market:r.id},n=await this.v4PublicGetTradesMarket(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.market=r.id);let n=await this.v4PrivatePostTradeAccountExecutedHistory(this.extend(a,s));if(Array.isArray(n))return this.parseTrades(n,r,t,i);{let e=[],s=Object.keys(n);for(let r=0;r<s.length;r++){let a=s[r],o=this.safeMarket(a,void 0,"_"),h=this.safeValue(n,a,[]),d=this.parseTrades(h,o,t,i);e=this.arrayConcat(e,d)}return e=this.sortBy2(e,"timestamp","id"),this.filterBySinceLimit(e,t,i,"timestamp")}}parseTrade(e,t){let i,s;t=this.safeMarket(void 0,t);let r=this.safeTimestamp2(e,"time","trade_timestamp"),a=this.safeString2(e,"dealOrderId","orderId"),n=this.safeString(e,"deal"),o=this.safeString(e,"price"),h=this.safeString2(e,"amount","quote_volume"),d=this.safeString2(e,"id","tradeID"),l=this.safeString2(e,"type","side"),c=t.symbol,u=this.safeInteger(e,"role");void 0!==u&&(i=1===u?"maker":"taker");let f=this.safeString(e,"fee");return void 0!==f&&(s={cost:f,currency:t.quote}),this.safeTrade({info:e,timestamp:r,datetime:this.iso8601(r),symbol:c,id:d,order:a,type:void 0,takerOrMaker:i,side:l,price:o,amount:h,cost:n,fee:s},t)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={market:a.id,interval:this.safeString(this.timeframes,t,t)};if(void 0!==i){void 0===s&&(s=1440),s=Math.min(s,1440);let e=this.parseToInt(i/1e3);n.start=e}void 0!==s&&(n.limit=Math.min(s,1440));let o=await this.v1PublicGetKline(this.extend(n,r)),h=this.safeList(o,"result",[]);return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchStatus(e={}){let t=await this.v4PublicGetPing(e),i=this.safeString(t,0);return{status:"pong"===i?"ok":i,updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){let t=await this.v4PublicGetTime(e);return this.safeInteger(t,"time")}async createMarketOrderWithCost(e,t,i,s={}){return await this.createOrder(e,"market",t,0,void 0,this.extend({cost:i},s))}async createMarketBuyOrderWithCost(e,t,i={}){return await this.createMarketOrderWithCost(e,"buy",t,i)}async createOrder(e,t,i,s,r,a={}){let o,h;await this.loadMarkets();let d=this.market(e),l={market:d.id,side:i};if([o,a]=this.handleParamString(a,"cost"),void 0!==o){if("buy"!==i||"market"!==t)throw new n.InvalidOrder(this.id+" createOrder() cost is only supported for market buy orders");l.amount=this.costToPrecision(e,o)}else l.amount=this.amountToPrecision(e,s);let c=this.safeString2(a,"clOrdId","clientOrderId");if(void 0===c){let e=this.safeString(this.options,"brokerId");void 0!==e&&(l.clientOrderId=e+this.uuid16())}else l.clientOrderId=c,a=this.omit(a,["clientOrderId"]);let u=this.safeString(d,"type"),f="limit"===t,p=this.safeNumberN(a,["triggerPrice","stopPrice","activation_price"]),m=void 0!==p,g=this.isPostOnly("market"===t,!1,a),[y,v]=this.handleMarginModeAndParams("createOrder",a);if(g&&(l.postOnly=!0),void 0!==y&&"cross"!==y)throw new n.NotSupported(this.id+" createOrder() is only available for cross margin");a=this.omit(v,["postOnly","triggerPrice","stopPrice"]);let b=void 0!==y||"swap"===u;return m?(l.activation_price=this.priceToPrecision(e,p),f?(l.price=this.priceToPrecision(e,r),h=await this.v4PrivatePostOrderStopLimit(this.extend(l,a))):h=b?await this.v4PrivatePostOrderCollateralTriggerMarket(this.extend(l,a)):await this.v4PrivatePostOrderStopMarket(this.extend(l,a))):f?(l.price=this.priceToPrecision(e,r),h=b?await this.v4PrivatePostOrderCollateralLimit(this.extend(l,a)):await this.v4PrivatePostOrderNew(this.extend(l,a))):h=b?await this.v4PrivatePostOrderCollateralMarket(this.extend(l,a)):void 0!==o?await this.v4PrivatePostOrderMarket(this.extend(l,a)):await this.v4PrivatePostOrderStockMarket(this.extend(l,a)),this.parseOrder(h)}async editOrder(e,t,i,s,r,a,o={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" editOrder() requires a id argument");if(void 0===t)throw new n.ArgumentsRequired(this.id+" editOrder() requires a symbol argument");await this.loadMarkets();let h={orderId:e,market:this.market(t).id},d=this.safeString2(o,"clOrdId","clientOrderId");void 0!==d&&(h.clientOrderId=d);let l="limit"===i,c=this.safeNumberN(o,["triggerPrice","stopPrice","activation_price"]),u=void 0!==c;o=this.omit(o,["clOrdId","clientOrderId","triggerPrice","stopPrice"]),u?(h.activation_price=this.priceToPrecision(t,c),l?(h.amount=this.amountToPrecision(t,r),h.price=this.priceToPrecision(t,a)):"buy"===s?h.total=this.amountToPrecision(t,r):h.amount=this.amountToPrecision(t,r)):(h.amount=this.amountToPrecision(t,r),l&&(h.price=this.priceToPrecision(t,a)));let f=await this.v4PrivatePostOrderModify(this.extend(h,o));return this.parseOrder(f)}async cancelOrder(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s={market:this.market(t).id,orderId:parseInt(e)},r=await this.v4PrivatePostOrderCancel(this.extend(s,i));return this.parseOrder(r)}async cancelAllOrders(e,t={}){let i,s;await this.loadMarkets();let r={};void 0!==e&&(i=this.market(e),r.market=i.id),[s,t]=this.handleMarketTypeAndParams("cancelAllOrders",i,t);let a=[];if("spot"===s){let e;[e,t]=this.handleOptionAndParams(t,"cancelAllOrders","isMargin",!1),e?a.push("margin"):a.push("spot")}else if("swap"===s)a.push("futures");else throw new n.NotSupported(this.id+" cancelAllOrders() does not support "+s+" type");r.type=a;let o=await this.v4PrivatePostOrderCancelAll(this.extend(r,t));return this.parseOrders(o,i)}async cancelAllOrdersAfter(e,t={}){await this.loadMarkets();let i=this.safeString(t,"symbol");if(void 0===i)throw new n.ArgumentsRequired(this.id+" cancelAllOrdersAfter() requires a symbol argument in params");let s=this.market(i);t=this.omit(t,"symbol");let r={market:s.id};return e>0?r.timeout=this.numberToString(e/1e3):r.timeout="null",await this.v4PrivatePostOrderKillSwitch(this.extend(r,t))}parseBalance(e){let t=Object.keys(e),i={};for(let s=0;s<t.length;s++){let r=t[s],a=this.safeCurrencyCode(r),n=e[r];if("object"==typeof n&&void 0!==n){let e=this.account();e.free=this.safeString2(n,"available","main_balance"),e.used=this.safeString(n,"freeze"),e.total=this.safeString(n,"main_balance"),i[a]=e}else{let e=this.account();e.total=n,i[a]=e}}return this.safeBalance(i)}async fetchBalance(e={}){let t,i;if(await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),"swap"===t)i=await this.v4PrivatePostCollateralAccountBalance(e);else{let t=this.safeValue(this.options,"fetchBalance",{}),s=this.safeString(t,"account"),r=this.safeString2(e,"account","type",s);e=this.omit(e,["account","type"]),i="main"===r||"funding"===r?await this.v4PrivatePostMainAccountBalance(e):await this.v4PrivatePostTradeAccountBalance(e)}return this.parseBalance(i)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.market=r.id),void 0!==i&&(a.limit=Math.min(i,100));let n=await this.v4PrivatePostOrders(this.extend(a,s));return this.parseOrders(n,r,t,i,{status:"open"})}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(e=(r=this.market(e)).symbol,a.market=r.id),void 0!==i&&(a.limit=Math.min(i,100));let n=await this.v4PrivatePostTradeAccountOrderHistory(this.extend(a,s)),o=Object.keys(n),h=[];for(let e=0;e<o.length;e++){let t=o[e],i=this.safeMarket(t,void 0,"_"),s=n[t];for(let e=0;e<s.length;e++){let t=this.parseOrder(s[e],i);h.push(this.extend(t,{status:"closed"}))}}return h=this.sortBy(h,"timestamp"),h=this.filterBySymbolSinceLimit(h,e,t,i)}parseOrderType(e){return this.safeString({limit:"limit",market:"market","stop market":"market","stop limit":"limit","stock market":"market","margin limit":"limit","margin market":"market"},e,e)}parseOrder(e,t){let i;let s=this.safeString(e,"market"),r=(t=this.safeMarket(s,t,"_")).symbol,a=this.safeString(e,"side"),n=this.safeString(e,"dealStock"),o=this.safeString(e,"left"),h=this.safeString(e,"clientOrderId");""===h&&(h=void 0);let d=this.safeString(e,"price"),l=this.safeNumber(e,"activation_price"),c=this.safeString2(e,"orderId","id"),u=this.safeString(e,"type"),f=this.parseOrderType(u);"market"===f&&(o=void 0);let p=this.safeString(e,"amount"),m=this.safeString(e,"dealMoney");"buy"===a&&("market"===u||"stop market"===u)&&(p=n);let g=this.safeString(e,"dealFee");void 0!==g&&(i={cost:this.parseNumber(g),currency:t.quote});let y=this.safeTimestamp2(e,"ctime","timestamp"),v=this.safeTimestamp(e,"ftime");return this.safeOrder({info:e,id:c,symbol:r,clientOrderId:h,timestamp:y,datetime:this.iso8601(y),lastTradeTimestamp:v,timeInForce:void 0,postOnly:void 0,status:void 0,side:a,price:d,type:f,triggerPrice:l,amount:p,filled:n,remaining:o,average:void 0,cost:m,fee:i,trades:void 0},t)}async fetchOrderTrades(e,t,i,s,r={}){let a;await this.loadMarkets();let n={orderId:parseInt(e)};void 0!==t&&(a=this.market(t),n.market=a.id),void 0!==s&&(n.limit=Math.min(s,100));let o=await this.v4PrivatePostTradeAccountOrder(this.extend(n,r)),h=this.safeList(o,"records",[]);return this.parseTrades(h,a)}async fetchDepositAddress(e,t={}){let i;await this.loadMarkets();let s={ticker:this.currency(e).id};if(this.isFiat(e)){let e=this.safeString(t,"provider");if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchDepositAddress() requires a provider when the ticker is fiat");s.provider=e;let r=this.safeNumber(t,"amount");if(void 0===r)throw new n.ArgumentsRequired(this.id+" fetchDepositAddress() requires an amount when the ticker is fiat");if(s.amount=r,void 0===this.safeValue(t,"uniqueId"))throw new n.ArgumentsRequired(this.id+" fetchDepositAddress() requires an uniqueId when the ticker is fiat");i=await this.v4PrivatePostMainAccountFiatDepositUrl(this.extend(s,t))}else i=await this.v4PrivatePostMainAccountAddress(this.extend(s,t));let r=this.safeString(i,"url"),a=this.safeValue(i,"account",{}),o=this.safeString(a,"address",r),h=this.safeString(a,"memo");return this.checkAddress(o),{info:i,currency:e,network:void 0,address:o,tag:h}}async setLeverage(e,t,i={}){if(await this.loadMarkets(),void 0!==t)throw new n.NotSupported(this.id+" setLeverage() does not allow to set per symbol");if(e<1||e>20)throw new n.BadRequest(this.id+" setLeverage() leverage should be between 1 and 20");return await this.v4PrivatePostCollateralAccountLeverage(this.extend({leverage:e},i))}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n=this.safeValue(this.options,"accountsByType"),o=this.safeString(n,i,i),h=this.safeString(n,s,s),d=this.currencyToPrecision(e,t),l={ticker:a.id,amount:d,from:o,to:h},c=await this.v4PrivatePostMainAccountTransfer(this.extend(l,r));return this.parseTransfer(c,a)}parseTransfer(e,t){return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async withdraw(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),o={ticker:a.id,amount:this.currencyToPrecision(e,t),address:i},h=this.safeValue(r,"uniqueId");if(void 0===h&&(h=this.uuid22()),o.uniqueId=h,void 0!==s&&(o.memo=s),this.isFiat(e)){let e=this.safeValue(r,"provider");if(void 0===e)throw new n.ArgumentsRequired(this.id+" withdraw() requires a provider when the ticker is fiat");o.provider=e}let d=await this.v4PrivatePostMainAccountWithdraw(this.extend(o,r));return this.extend({id:h},this.parseTransaction(d,a))}parseTransaction(e,t){t=this.safeCurrency(void 0,t);let i=this.safeString(e,"address"),s=this.safeTimestamp(e,"createdAt"),r=this.safeString(e,"ticker"),a=this.safeString(e,"status"),n=this.safeString(e,"method");return{id:this.safeString(e,"uniqueId"),txid:this.safeString(e,"transactionId"),timestamp:s,datetime:this.iso8601(s),network:this.safeString(e,"network"),addressFrom:"1"===n?i:void 0,address:i,addressTo:"2"===n?i:void 0,amount:this.safeNumber(e,"amount"),type:"1"===n?"deposit":"withdrawal",currency:this.safeCurrencyCode(r,t),status:this.parseTransactionStatus(a),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:this.safeString(e,"description"),internal:void 0,fee:{cost:this.safeNumber(e,"fee"),currency:this.safeCurrencyCode(r,t)},info:e}}parseTransactionStatus(e){return this.safeString({1:"pending",2:"pending",3:"ok",4:"canceled",5:"pending",6:"pending",7:"ok",9:"canceled",10:"pending",11:"pending",12:"pending",13:"pending",14:"pending",15:"pending",16:"pending",17:"pending"},e,e)}async fetchDeposit(e,t,i={}){let s;await this.loadMarkets();let r={transactionMethod:1,uniqueId:e,limit:1,offset:0};void 0!==t&&(s=this.currency(t),r.ticker=s.id);let a=await this.v4PrivatePostMainAccountHistory(this.extend(r,i)),n=this.safeValue(a,"records",[]),o=this.safeDict(n,0,{});return this.parseTransaction(o,s)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a={transactionMethod:1,limit:100,offset:0};void 0!==e&&(r=this.currency(e),a.ticker=r.id),void 0!==i&&(a.limit=Math.min(i,100));let n=await this.v4PrivatePostMainAccountHistory(this.extend(a,s)),o=this.safeList(n,"records",[]);return this.parseTransactions(o,r,t,i)}async fetchBorrowInterest(e,t,i,s,r={}){let a;await this.loadMarkets();let n={};void 0!==t&&(a=this.market(t),n.market=a.id);let o=await this.v4PrivatePostCollateralAccountPositionsOpen(this.extend(n,r)),h=this.parseBorrowInterests(o,a);return this.filterByCurrencySinceLimit(h,e,i,s)}parseBorrowInterest(e,t){let i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"_"),r=this.safeTimestamp(e,"modifyDate");return{info:e,symbol:s,currency:"USDT",interest:this.safeNumber(e,"unrealizedFunding"),interestRate:98e-5,amountBorrowed:this.safeNumber(e,"amount"),marginMode:"cross",timestamp:r,datetime:this.iso8601(r)}}async fetchFundingRate(e,t={}){await this.loadMarkets(),e=this.symbol(e);let i=await this.fetchFundingRates([e],t);return this.safeValue(i,e)}async fetchFundingRates(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.v4PublicGetFutures(t),s=this.safeList(i,"result",[]);return this.parseFundingRates(s,e)}parseFundingRate(e,t){let i=this.safeString(e,"ticker_id"),s=this.safeSymbol(i,t),r=this.safeNumber(e,"markPrice"),a=this.safeNumber(e,"indexPrice"),n=this.safeNumber(e,"interestRate"),o=this.safeNumber(e,"funding_rate"),h=this.safeInteger(e,"next_funding_rate_timestamp");return{info:e,symbol:s,markPrice:r,indexPrice:a,interestRate:n,timestamp:void 0,datetime:void 0,fundingRate:o,fundingTimestamp:h,fundingDatetime:this.iso8601(h),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async fetchDepositsWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.ticker=r.id),void 0!==i&&(a.limit=i);let n=await this.v4PrivatePostMainAccountHistory(this.extend(a,s)),o=this.safeList(n,"records");return this.parseTransactions(o,r,t,i)}isFiat(e){let t=this.safeValue(this.options,"fiatCurrencies",[]);return this.inArray(e,t)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),o=this.safeValue(t,0),h=this.safeValue(t,1),d="/"+this.implodeParams(e,s),l=this.urls.api[o][h]+d;if("public"===h&&Object.keys(n).length&&(l+="?"+this.urlencode(n)),"private"===h){this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.encode(this.secret);a=this.json(this.extend({request:"/api/"+o+d,nonce:e},s));let i=this.stringToBase64(a),n=this.hmac(this.encode(i),t,A.Zf);r={"Content-Type":"application/json","X-TXC-APIKEY":this.apiKey,"X-TXC-PAYLOAD":i,"X-TXC-SIGNATURE":n}}return{url:l,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(418===e||429===e)throw new n.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+a);if(404===e)throw new n.ExchangeError(this.id+" "+e.toString()+" endpoint not found");if(void 0!==o){let e=this.safeString(o,"status"),t=this.safeString(o,"message"),i=this.safeInteger(o,"code"),s=void 0!==e&&"200"!==e;if(s||void 0!==i){let i=this.id+" "+a,r=t;if(s)r=e;else{let e=this.safeDict(o,"errors",{}),t=Object.keys(e);if(t.length>0){let i=t[0],s=this.safeValue(e,i,[]);r=s.length>0?s[0]:a}}throw this.throwExactlyMatchedException(this.exceptions.exact,r,i),this.throwBroadlyMatchedException(this.exceptions.broad,a,i),new n.ExchangeError(i)}}}}var sP=i(6429);class sM extends s.k{}let sA=sM;class sC extends sA{describe(){return this.deepExtend(super.describe(),{id:"woofipro",name:"WOOFI PRO",countries:["KY"],rateLimit:100,version:"v1",certified:!0,pro:!0,dex:!0,hostname:"dex.woo.org",has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,cancelWithdraw:!1,closeAllPositions:!1,closePosition:!1,createConvertTrade:!1,createDepositAddress:!1,createMarketBuyOrderWithCost:!1,createMarketOrder:!1,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrderWithTakeProfitAndStopLoss:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!1,createStopLossOrder:!0,createStopMarketOrder:!1,createStopOrder:!1,createTakeProfitOrder:!0,createTrailingAmountOrder:!1,createTrailingPercentOrder:!1,createTriggerOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!0,fetchConvertCurrencies:!1,fetchConvertQuote:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!0,fetchFundingInterval:!0,fetchFundingIntervals:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!0,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!1,fetchTickers:!1,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:"emulated",fetchTransfers:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!0,setMargin:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","12h":"12h","1d":"1d","1w":"1w","1M":"1mon","1y":"1y"},urls:{logo:"https://github.com/user-attachments/assets/9ba21b8a-a9c7-4770-b7f1-ce3bcbde68c1",api:{public:"https://api-evm.orderly.org",private:"https://api-evm.orderly.org"},test:{public:"https://testnet-api-evm.orderly.org",private:"https://testnet-api-evm.orderly.org"},www:"https://dex.woo.org",doc:["https://orderly.network/docs/build-on-evm/building-on-evm"],fees:["https://dex.woo.org/en/orderly"],referral:{url:"https://dex.woo.org/en/trade?ref=CCXT",discount:.05}},api:{v1:{public:{get:{"public/volume/stats":1,"public/broker/name":1,"public/chain_info/{broker_id}":1,"public/system_info":1,"public/vault_balance":1,"public/insurancefund":1,"public/chain_info":1,"faucet/usdc":1,"public/account":1,get_account:1,registration_nonce:1,get_orderly_key:1,"public/liquidation":1,"public/liquidated_positions":1,"public/config":1,"public/campaign/ranking":10,"public/campaign/stats":10,"public/campaign/user":10,"public/campaign/stats/details":10,"public/campaigns":10,"public/points/leaderboard":1,"client/points":1,"public/points/epoch":1,"public/points/epoch_dates":1,"public/referral/check_ref_code":1,"public/referral/verify_ref_code":1,"referral/admin_info":1,"referral/info":1,"referral/referee_info":1,"referral/referee_rebate_summary":1,"referral/referee_history":1,"referral/referral_history":1,"referral/rebate_summary":1,"client/distribution_history":1,"tv/config":1,"tv/history":1,"tv/symbol_info":1,"public/funding_rate_history":1,"public/funding_rate/{symbol}":.33,"public/funding_rates":1,"public/info":1,"public/info/{symbol}":1,"public/market_trades":1,"public/token":1,"public/futures":1,"public/futures/{symbol}":1},post:{register_account:1}},private:{get:{"client/key_info":6,"client/orderly_key_ip_restriction":6,"order/{oid}":1,"client/order/{client_order_id}":1,"algo/order/{oid}":1,"algo/client/order/{client_order_id}":1,orders:1,"algo/orders":1,"trade/{tid}":1,trades:1,"order/{oid}/trades":1,"client/liquidator_liquidations":1,liquidations:1,"asset/history":60,"client/holding":1,withdraw_nonce:1,settle_nonce:1,"pnl_settlement/history":1,"volume/user/daily":60,"volume/user/stats":60,"client/statistics":60,"client/info":60,"client/statistics/daily":60,positions:3.33,"position/{symbol}":3.33,"funding_fee/history":30,"notification/inbox/notifications":60,"notification/inbox/unread":60,"volume/broker/daily":60,"broker/fee_rate/default":10,"broker/user_info":10,"orderbook/{symbol}":1,kline:1},post:{orderly_key:1,"client/set_orderly_key_ip_restriction":6,"client/reset_orderly_key_ip_restriction":6,order:1,"batch-order":10,"algo/order":1,liquidation:1,claim_insurance_fund:1,withdraw_request:1,settle_pnl:1,"notification/inbox/mark_read":60,"notification/inbox/mark_read_all":60,"client/leverage":120,"client/maintenance_config":60,delegate_signer:10,delegate_orderly_key:10,delegate_settle_pnl:10,delegate_withdraw_request:10,"broker/fee_rate/set":10,"broker/fee_rate/set_default":10,"broker/fee_rate/default":10,"referral/create":10,"referral/update":10,"referral/bind":10,"referral/edit_split":10},put:{order:1,"algo/order":1},delete:{order:1,"algo/order":1,"client/order":1,"algo/client/order":1,"algo/orders":1,orders:1,"batch-order":1,"client/batch-order":1}}}},requiredCredentials:{apiKey:!0,secret:!0,accountId:!0,privateKey:!1},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0002"),taker:this.parseNumber("0.0005")}},options:{sandboxMode:!1,brokerId:"CCXT",verifyingContractAddress:"0x6F7a338F2aA472838dEFD3283eB360d4Dff5D203"},features:{default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!0,leverage:!0,marketBuyByCost:!1,marketBuyRequiresPrice:!1,selfTradePrevention:!1,iceberg:!0},createOrders:{max:10},fetchMyTrades:{marginMode:!1,limit:500,daysBack:void 0,untilDays:1e5},fetchOrder:{marginMode:!1,trigger:!0,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:500,trigger:!0,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:500,daysBack:void 0,daysBackCanceled:void 0,untilDays:1e5,trigger:!0,trailing:!1},fetchOHLCV:{limit:1e3}},spot:{extends:"default"},forDerivatives:{extends:"default",createOrder:{triggerPriceType:void 0,attachedStopLossTakeProfit:{triggerPriceType:void 0,price:!1}}},swap:{linear:{extends:"forDerivatives"},inverse:void 0},future:{linear:void 0,inverse:void 0}},commonCurrencies:{},exceptions:{exact:{"-1000":n.ExchangeError,"-1001":n.AuthenticationError,"-1002":n.AuthenticationError,"-1003":n.RateLimitExceeded,"-1004":n.BadRequest,"-1005":n.BadRequest,"-1006":n.InvalidOrder,"-1007":n.BadRequest,"-1008":n.InvalidOrder,"-1009":n.InsufficientFunds,"-1011":n.NetworkError,"-1012":n.BadRequest,"-1101":n.InsufficientFunds,"-1102":n.InvalidOrder,"-1103":n.InvalidOrder,"-1104":n.InvalidOrder,"-1105":n.InvalidOrder,"-1201":n.BadRequest,"-1202":n.BadRequest,29:n.BadRequest,9:n.AuthenticationError,3:n.AuthenticationError,2:n.BadRequest,15:n.BadRequest},broad:{}},precisionMode:d.kb})}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}async fetchStatus(e={}){let t=await this.v1PublicGetPublicSystemInfo(e),i=this.safeDict(t,"data",{}),s=this.safeString(i,"status");return{status:s=void 0===s?"error":"0"===s?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){let t=await this.v1PublicGetPublicSystemInfo(e);return this.safeInteger(t,"timestamp")}parseMarket(e){let t=this.safeString(e,"symbol"),i=t.split("_"),s=this.safeString(i,1),r=this.safeString(i,2),a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(r),o=this.safeString(i,2),h=this.safeCurrencyCode(o);return{id:t,symbol:a+"/"+n+":"+h,base:a,quote:n,settle:h,baseId:s,quoteId:r,settleId:o,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:void 0,contract:!0,linear:!0,inverse:void 0,contractSize:this.parseNumber("1"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"base_tick"),price:this.safeNumber(e,"quote_tick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"base_min"),max:this.safeNumber(e,"base_max")},price:{min:this.safeNumber(e,"quote_min"),max:this.safeNumber(e,"quote_max")},cost:{min:this.safeNumber(e,"min_notional"),max:void 0}},created:this.safeInteger(e,"created_time"),info:e}}async fetchMarkets(e={}){let t=await this.v1PublicGetPublicInfo(e),i=this.safeDict(t,"data",{}),s=this.safeList(i,"rows",[]);return this.parseMarkets(s)}async fetchCurrencies(e={}){let t={},i=await this.v1PublicGetPublicToken(e),s=this.safeDict(i,"data",{}),a=this.safeList(s,"rows",[]);for(let e=0;e<a.length;e++){let i;let s=a[e],n=this.safeString(s,"token"),o=this.safeList(s,"chain_details"),h=this.safeCurrencyCode(n),d={};for(let e=0;e<o.length;e++){let t=o[e],s=this.safeString(t,"chain_id"),a=this.parsePrecision(this.safeString(t,"decimals"));void 0!==a&&(i=void 0===i?a:r.Y.stringMin(a,i)),d[s]={id:s,network:s,limits:{withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}},active:void 0,deposit:void 0,withdraw:void 0,fee:this.safeNumber(t,"withdrawal_fee"),precision:this.parseNumber(a),info:t}}t[h]={id:n,name:n,code:h,precision:this.parseNumber(i),active:void 0,fee:void 0,networks:d,deposit:void 0,withdraw:void 0,limits:{deposit:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(s,"minimum_withdraw_amount"),max:void 0}},info:s}}return t}parseTokenAndFeeTemp(e,t,i){let s;let r=this.safeString(e,i);if(void 0!==r){let i=this.safeString(e,t);s={cost:r,currency:this.safeCurrencyCode(i)}}return s}parseTrade(e,t){let i;let s="id"in e,a=this.safeInteger(e,"executed_timestamp"),n=this.safeString(e,"symbol"),o=(t=this.safeMarket(n,t)).symbol,h=this.safeString(e,"executed_price"),d=this.safeString(e,"executed_quantity"),l=this.safeString(e,"order_id"),c=this.parseTokenAndFeeTemp(e,"fee_asset","fee"),u=this.safeString(c,"cost");void 0!==u&&(c.cost=u);let f=r.Y.stringMul(h,d),p=this.safeStringLower(e,"side"),m=this.safeString(e,"id");return s&&(i="1"===this.safeString(e,"is_maker")?"maker":"taker"),this.safeTrade({id:m,timestamp:a,datetime:this.iso8601(a),symbol:o,side:p,price:h,amount:d,cost:f,order:l,takerOrMaker:i,type:void 0,fee:c,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i);let n=await this.v1PublicGetPublicMarketTrades(this.extend(a,s)),o=this.safeDict(n,"data",{}),h=this.safeList(o,"rows",[]);return this.parseTrades(h,r,t,i)}parseFundingRate(e,t){let i=this.safeString(e,"symbol");t=this.market(i);let s=this.safeInteger(e,"next_funding_time"),a=this.safeInteger(e,"est_funding_rate_timestamp"),n=this.safeInteger(e,"last_funding_rate_timestamp"),o=this.safeString(e,"last_funding_rate_timestamp"),h=this.safeString(e,"next_funding_time"),d=r.Y.stringSub(h,o);return{info:e,symbol:t.symbol,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:a,datetime:this.iso8601(a),fundingRate:this.safeNumber(e,"est_funding_rate"),fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:this.safeNumber(e,"last_funding_rate"),previousFundingTimestamp:n,previousFundingDatetime:this.iso8601(n),interval:this.parseFundingInterval(d)}}parseFundingInterval(e){return this.safeString({36e5:"1h",144e5:"4h",288e5:"8h",576e5:"16h",864e5:"24h"},e,e)}async fetchFundingInterval(e,t={}){return await this.fetchFundingRate(e,t)}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.v1PublicGetPublicFundingRateSymbol(this.extend(s,t)),a=this.safeDict(r,"data",{});return this.parseFundingRate(a,i)}async fetchFundingRates(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.v1PublicGetPublicFundingRates(t),s=this.safeDict(i,"data",{}),r=this.safeList(s,"rows",[]);return this.parseFundingRates(r,e)}async fetchFundingRateHistory(e,t,i,s={}){await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","paginate"),r)return await this.fetchPaginatedCallIncremental("fetchFundingRateHistory",e,t,i,s,"page",25);let a={};if(void 0!==e){let t=this.market(e);e=t.symbol,a.symbol=t.id}void 0!==t&&(a.start_t=t),[a,s]=this.handleUntilOption("end_t",a,s,.001);let n=await this.v1PublicGetPublicFundingRateHistory(this.extend(a,s)),o=this.safeDict(n,"data",{}),h=this.safeList(o,"rows",[]),d=[];for(let e=0;e<h.length;e++){let t=h[e],i=this.safeString(t,"symbol"),s=this.safeInteger(t,"funding_rate_timestamp");d.push({info:t,symbol:this.safeSymbol(i),fundingRate:this.safeNumber(t,"funding_rate"),timestamp:s,datetime:this.iso8601(s)})}let l=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(l,e,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.v1PrivateGetClientInfo(e),i=this.safeDict(t,"data",{}),s=this.safeString(i,"futures_maker_fee_rate"),a=this.safeString(i,"futures_taker_fee_rate"),n={};for(let e=0;e<this.symbols.length;e++){let i=this.symbols[e];n[i]={info:t,symbol:i,maker:this.parseNumber(r.Y.stringDiv(s,"10000")),taker:this.parseNumber(r.Y.stringDiv(a,"10000")),percentage:!0,tierBased:!0}}return n}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(t=Math.min(t,1e3),s.max_level=t);let r=await this.v1PrivateGetOrderbookSymbol(this.extend(s,i)),a=this.safeDict(r,"data",{}),n=this.safeInteger(a,"timestamp");return this.parseOrderBook(a,e,n,"bids","asks","price","quantity")}parseOHLCV(e,t){return[this.safeInteger(e,"start_timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={symbol:a.id,type:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=Math.min(s,1e3));let o=await this.v1PrivateGetKline(this.extend(n,r)),h=this.safeDict(o,"data",{}),d=this.safeList(h,"rows",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOrder(e,t){let i,s;let a=this.safeIntegerN(e,["timestamp","created_time","createdTime"]),n=this.safeStringN(e,["order_id","orderId","algoOrderId"]),o=this.omitZero(this.safeString2(e,"client_order_id","clientOrderId")),h=this.safeString(e,"symbol"),d=(t=this.safeMarket(h,t)).symbol,l=this.safeString2(e,"order_price","price"),c=this.safeString2(e,"order_quantity","quantity"),u=this.safeString2(e,"order_amount","amount"),f=this.safeStringLower2(e,"order_type","type"),p=this.safeValue2(e,"status","algoStatus"),m=this.safeBool(e,"success");void 0!==m&&(p=m?"NEW":"REJECTED");let g=this.safeStringLower(e,"side"),y=this.omitZero(this.safeValue2(e,"executed","totalExecutedQuantity")),v=this.omitZero(this.safeString2(e,"average_executed_price","averageExecutedPrice")),b=r.Y.stringSub(u,y),w=this.safeValue2(e,"total_fee","totalFee"),k=this.safeString2(e,"fee_asset","feeAsset"),S=this.safeValue(e,"Transactions"),O=this.safeNumber(e,"triggerPrice"),T=this.safeValue(e,"childOrders");if(void 0!==T){let e=this.safeValue(T,0),t=this.safeValue(e,"childOrders",[]);if(t.length>0){let e=this.safeValue(t,0),r=this.safeValue(t,1);i=this.safeNumber(e,"triggerPrice"),s=this.safeNumber(r,"triggerPrice")}}let I=this.safeInteger2(e,"updatedTime","updated_time");return this.safeOrder({id:n,clientOrderId:o,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,lastUpdateTimestamp:I,status:this.parseOrderStatus(p),symbol:d,type:this.parseOrderType(f),timeInForce:this.parseTimeInForce(f),postOnly:void 0,reduceOnly:this.safeBool(e,"reduce_only"),side:g,price:l,triggerPrice:O,takeProfitPrice:i,stopLossPrice:s,average:v,amount:c,filled:y,remaining:b,cost:u,trades:S,fee:{cost:w,currency:k},info:e},t)}parseTimeInForce(e){return this.safeString({ioc:"IOC",fok:"FOK",post_only:"PO"},e,void 0)}parseOrderStatus(e){return void 0!==e?this.safeString({NEW:"open",FILLED:"closed",CANCEL_SENT:"canceled",CANCEL_ALL_SENT:"canceled",CANCELLED:"canceled",PARTIAL_FILLED:"open",REJECTED:"rejected",INCOMPLETE:"open",COMPLETED:"closed"},e,e):e}parseOrderType(e){return this.safeStringLower({LIMIT:"limit",MARKET:"market",POST_ONLY:"limit"},e,e)}createOrderRequest(e,t,i,s,r,a={}){let n=this.safeBool2(a,"reduceOnly","reduce_only"),o=t.toUpperCase(),h=this.market(e),d=i.toUpperCase(),l={symbol:h.id,side:d},c=this.safeString2(a,"triggerPrice","stopPrice"),u=this.safeValue(a,"stopLoss"),f=this.safeValue(a,"takeProfit"),p=this.safeString(a,"algoType"),m=void 0!==c||void 0!==u||void 0!==f||void 0!==this.safeValue(a,"childOrders"),g="MARKET"===o,y=this.safeStringLower(a,"timeInForce"),v=this.isPostOnly(g,void 0,a),b=m?"quantity":"order_quantity";l[m?"type":"order_type"]=o,m||(v?l.order_type="POST_ONLY":"fok"===y?l.order_type="FOK":"ioc"!==y||(l.order_type="IOC")),n&&(l.reduce_only=n),void 0!==r&&(l[m?"price":"order_price"]=this.priceToPrecision(e,r)),g&&!m?l[b]=this.amountToPrecision(e,s):"POSITIONAL_TP_SL"!==p&&(l[b]=this.amountToPrecision(e,s));let w=this.safeStringN(a,["clOrdID","clientOrderId","client_order_id"]);if(void 0!==w&&(l.client_order_id=w),void 0!==c)l.trigger_price=this.priceToPrecision(e,c),l.algo_type="STOP";else if(void 0!==u||void 0!==f){l.algo_type="TP_SL";let t={symbol:h.id,reduce_only:!1,algo_type:"POSITIONAL_TP_SL",child_orders:[]},i="BUY"===d?"SELL":"BUY";if(void 0!==u){let s=this.safeNumber2(u,"triggerPrice","price",u),r={side:i,algo_type:"TP_SL",trigger_price:this.priceToPrecision(e,s),type:"LIMIT",reduce_only:!0};t.child_orders.push(r)}if(void 0!==f){let s=this.safeNumber2(f,"triggerPrice","price",f),r={side:i,algo_type:"TP_SL",trigger_price:this.priceToPrecision(e,s),type:"LIMIT",reduce_only:!0};t.child_orders.push(r)}l.child_orders=[t]}return a=this.omit(a,["reduceOnly","reduce_only","clOrdID","clientOrderId","client_order_id","postOnly","timeInForce","stopPrice","triggerPrice","stopLoss","takeProfit"]),this.extend(l,a)}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets();let o=this.market(e),h=this.createOrderRequest(e,t,i,s,r,a),d=this.safeString2(a,"triggerPrice","stopPrice"),l=this.safeValue(a,"stopLoss"),c=this.safeValue(a,"takeProfit");n=void 0!==d||void 0!==l||void 0!==c||void 0!==this.safeValue(a,"childOrders")?await this.v1PrivatePostAlgoOrder(h):await this.v1PrivatePostOrder(h);let u=this.safeDict(n,"data");u.timestamp=this.safeInteger(n,"timestamp");let f=this.parseOrder(u,o);return f.type=t,f}async createOrders(e,t={}){await this.loadMarkets();let i=[];for(let t=0;t<e.length;t++){let s=e[t],r=this.safeString(s,"symbol"),a=this.safeString(s,"type"),o=this.safeString(s,"side"),h=this.safeValue(s,"amount"),d=this.safeValue(s,"price"),l=this.safeDict(s,"params",{}),c=this.safeString2(l,"triggerPrice","stopPrice"),u=this.safeValue(l,"stopLoss"),f=this.safeValue(l,"takeProfit");if(void 0!==c||void 0!==u||void 0!==f||void 0!==this.safeValue(l,"childOrders"))throw new n.NotSupported(this.id+"createOrders() only support non-stop order");let p=this.createOrderRequest(r,a,o,h,d,l);i.push(p)}let s=await this.v1PrivatePostBatchOrder(this.extend({orders:i},t)),r=this.safeDict(s,"data",{}),a=this.safeList(r,"rows",[]);return this.parseOrders(a)}async editOrder(e,t,i,s,r,a,n={}){let o;await this.loadMarkets();let h=this.market(t),d={order_id:e},l=this.safeStringN(n,["triggerPrice","stopPrice","takeProfitPrice","stopLossPrice"]);void 0!==l&&(d.triggerPrice=this.priceToPrecision(t,l));let c=void 0!==l||void 0!==this.safeValue(n,"childOrders");if(void 0!==a&&(d[c?"price":"order_price"]=this.priceToPrecision(t,a)),void 0!==r&&(d[c?"quantity":"order_quantity"]=this.amountToPrecision(t,r)),n=this.omit(n,["stopPrice","triggerPrice","takeProfitPrice","stopLossPrice","trailingTriggerPrice","trailingAmount","trailingPercent"]),c)o=await this.v1PrivatePutAlgoOrder(this.extend(d,n));else{d.symbol=h.id,d.side=s.toUpperCase();let e=i.toUpperCase(),t=this.safeStringLower(n,"timeInForce");this.isPostOnly("MARKET"===e,void 0,n)?d.order_type="POST_ONLY":"fok"===t?d.order_type="FOK":"ioc"===t?d.order_type="IOC":d.order_type=e;let r=this.safeStringN(n,["clOrdID","clientOrderId","client_order_id"]);n=this.omit(n,["clOrdID","clientOrderId","client_order_id","postOnly","timeInForce"]),void 0!==r&&(d.client_order_id=r),o=await this.v1PrivatePutOrder(this.extend(d,n))}let u=this.safeDict(o,"data",{});return u.timestamp=this.safeInteger(o,"timestamp"),this.parseOrder(u,h)}async cancelOrder(e,t,i={}){let s,r;let a=this.safeBool2(i,"stop","trigger",!1);if(i=this.omit(i,["stop","trigger"]),!a&&void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets(),void 0!==t&&(s=this.market(t));let o={symbol:s.id},h=this.safeString2(i,"clOrdID","clientOrderId"),d=this.safeString(i,"client_order_id",h),l=void 0!==d;a?l?(o.client_order_id=d,i=this.omit(i,["clOrdID","clientOrderId","client_order_id"]),r=await this.v1PrivateDeleteAlgoClientOrder(this.extend(o,i))):(o.order_id=e,r=await this.v1PrivateDeleteAlgoOrder(this.extend(o,i))):l?(o.client_order_id=d,i=this.omit(i,["clOrdID","clientOrderId","client_order_id"]),r=await this.v1PrivateDeleteClientOrder(this.extend(o,i))):(o.order_id=e,r=await this.v1PrivateDeleteOrder(this.extend(o,i)));let c={symbol:t};if(l?c.client_order_id=d:c.id=e,a)return this.extend(this.parseOrder(r),c);let u=this.safeDict(r,"data",{});return this.extend(this.parseOrder(u),c)}async cancelOrders(e,t,i={}){let s;await this.loadMarkets();let r=this.safeListN(i,["clOrdIDs","clientOrderIds","client_order_ids"]);i=this.omit(i,["clOrdIDs","clientOrderIds","client_order_ids"]);let a={};return r?(a.client_order_ids=r.join(","),s=await this.v1PrivateDeleteClientBatchOrder(this.extend(a,i))):(a.order_ids=e.join(","),s=await this.v1PrivateDeleteBatchOrder(this.extend(a,i))),[this.safeOrder({info:s})]}async cancelAllOrders(e,t={}){await this.loadMarkets();let i=this.safeBool2(t,"stop","trigger");t=this.omit(t,["stop","trigger"]);let s={};if(void 0!==e){let t=this.market(e);s.symbol=t.id}return[{info:i?await this.v1PrivateDeleteAlgoOrders(this.extend(s,t)):await this.v1PrivateDeleteOrders(this.extend(s,t))}]}async fetchOrder(e,t,i={}){let s;await this.loadMarkets();let r=void 0!==t?this.market(t):void 0,a=this.safeBool2(i,"stop","trigger",!1),n={},o=this.safeStringN(i,["clOrdID","clientOrderId","client_order_id"]);i=this.omit(i,["stop","trigger","clOrdID","clientOrderId","client_order_id"]),a?o?(n.client_order_id=o,s=await this.v1PrivateGetAlgoClientOrderClientOrderId(this.extend(n,i))):(n.oid=e,s=await this.v1PrivateGetAlgoOrderOid(this.extend(n,i))):o?(n.client_order_id=o,s=await this.v1PrivateGetClientOrderClientOrderId(this.extend(n,i))):(n.oid=e,s=await this.v1PrivateGetOrderOid(this.extend(n,i)));let h=this.safeDict(s,"data",s);return this.parseOrder(h,r)}async fetchOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n=!1,o=this.safeBool2(s,"stop","trigger",!1),h=o?100:500;if([n,s]=this.handleOptionAndParams(s,"fetchOrders","paginate"),n)return await this.fetchPaginatedCallIncremental("fetchOrders",e,t,i,s,"page",h);let d={};s=this.omit(s,["stop","trigger"]),void 0!==e&&(r=this.market(e),d.symbol=r.id),void 0!==t&&(d.start_t=t),void 0!==i?d.size=i:d.size=h,o&&(d.algo_type="STOP"),[d,s]=this.handleUntilOption("end_t",d,s),a=o?await this.v1PrivateGetAlgoOrders(this.extend(d,s)):await this.v1PrivateGetOrders(this.extend(d,s));let l=this.safeValue(a,"data",a),c=this.safeList(l,"rows");return this.parseOrders(c,r,t,i)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.extend(s,{status:"INCOMPLETE"});return await this.fetchOrders(e,t,i,r)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=this.extend(s,{status:"COMPLETED"});return await this.fetchOrders(e,t,i,r)}async fetchOrderTrades(e,t,i,s,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));let n=await this.v1PrivateGetOrderOidTrades(this.extend({oid:e},r)),o=this.safeDict(n,"data",{}),h=this.safeList(o,"rows",[]);return this.parseTrades(h,a,i,s,r)}async fetchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallIncremental("fetchMyTrades",e,t,i,s,"page",500);let n={};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==t&&(n.start_t=t),void 0!==i?n.size=i:n.size=500,[n,s]=this.handleUntilOption("end_t",n,s);let o=await this.v1PrivateGetTrades(this.extend(n,s)),h=this.safeDict(o,"data",{}),d=this.safeList(h,"rows",[]);return this.parseTrades(d,r,t,i,s)}parseBalance(e){let t={info:e},i=this.safeList(e,"holding",[]);for(let e=0;e<i.length;e++){let s=i[e],r=this.safeCurrencyCode(this.safeString(s,"token")),a=this.account();a.total=this.safeString(s,"holding"),a.frozen=this.safeString(s,"frozen"),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.v1PrivateGetClientHolding(e),i=this.safeDict(t,"data");return this.parseBalance(i)}async getAssetHistoryRows(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.currency(e),a.balance_token=r.id),void 0!==t&&(a.start_t=t),void 0!==i&&(a.pageSize=i);let n=this.safeString(s,"type");s=this.omit(s,"type"),void 0!==n&&(a.type=n);let o=await this.v1PrivateGetAssetHistory(this.extend(a,s)),h=this.safeDict(o,"data",{});return[r,this.safeList(h,"rows",[])]}parseLedgerEntry(e,t){let i=this.safeString(e,"token"),s=this.safeCurrencyCode(i,t);t=this.safeCurrency(i,t);let r=this.safeNumber(e,"amount"),a=this.safeString(e,"token_side"),n=this.safeInteger(e,"created_time"),o=this.parseTokenAndFeeTemp(e,"fee_token","fee_amount");return this.safeLedgerEntry({id:this.safeString(e,"id"),currency:s,account:this.safeString(e,"account"),referenceAccount:void 0,referenceId:this.safeString(e,"tx_id"),status:this.parseTransactionStatus(this.safeString(e,"status")),amount:r,before:void 0,after:void 0,fee:o,direction:"DEPOSIT"===a?"in":"out",timestamp:n,datetime:this.iso8601(n),type:this.parseLedgerEntryType(this.safeString(e,"type")),info:e},t)}parseLedgerEntryType(e){return this.safeString({BALANCE:"transaction",COLLATERAL:"transfer"},e,e)}async fetchLedger(e,t,i,s={}){let[r,a]=await this.getAssetHistoryRows(e,t,i,s);return this.parseLedger(a,r,t,i,s)}parseTransaction(e,t){let i=this.safeString(e,"token"),s=this.safeStringLower(e,"token_side");"withdraw"===s&&(s="withdrawal");let r=this.parseTokenAndFeeTemp(e,"fee_token","fee_amount"),a=this.safeString(e,"target_address"),n=this.safeString(e,"source_address"),o=this.safeInteger(e,"created_time");return{info:e,id:this.safeString2(e,"id","withdraw_id"),txid:this.safeString(e,"tx_id"),timestamp:o,datetime:this.iso8601(o),address:void 0,addressFrom:n,addressTo:a,tag:this.safeString(e,"extra"),tagFrom:void 0,tagTo:void 0,type:s,amount:this.safeNumber(e,"amount"),currency:i,status:this.parseTransactionStatus(this.safeString(e,"status")),updated:this.safeInteger(e,"updated_time"),comment:void 0,internal:void 0,fee:r,network:void 0}}parseTransactionStatus(e){return this.safeString({NEW:"pending",CONFIRMING:"pending",PROCESSING:"pending",COMPLETED:"ok",CANCELED:"canceled"},e,e)}async fetchDeposits(e,t,i,s={}){return await this.fetchDepositsWithdrawals(e,t,i,this.extend({side:"DEPOSIT"},s))}async fetchWithdrawals(e,t,i,s={}){return await this.fetchDepositsWithdrawals(e,t,i,this.extend({side:"WITHDRAW"},s))}async fetchDepositsWithdrawals(e,t,i,s={}){let[r,a]=await this.getAssetHistoryRows(e,t,i,this.extend({},s));return this.parseTransactions(a,r,t,i,s)}async getWithdrawNonce(e={}){let t=await this.v1PrivateGetWithdrawNonce(e),i=this.safeDict(t,"data",{});return this.safeNumber(i,"withdraw_nonce")}hashMessage(e){return"0x"+this.hash(e,tZ.lY,"hex")}signHash(e,t){let i=(0,tB.h1)(e.slice(-64),t.slice(-64),tJ.bI,void 0),s=i.r,r=i.s,a=this.intToBase16(this.sum(27,i.v));return"0x"+s.padStart(64,"0")+r.padStart(64,"0")+a}signMessage(e,t){return this.signHash(this.hashMessage(e),t.slice(-64))}async withdraw(e,t,i,s,r={}){if(await this.loadMarkets(),this.checkAddress(i),void 0!==e&&"USDC"!==(e=e.toUpperCase()))throw new n.NotSupported(this.id+"withdraw() only support USDC");let a=this.currency(e),o=this.safeString(this.options,"verifyingContractAddress"),h=this.safeString(r,"chainId"),d=this.safeDict(a,"networks",{}),l=this.safeDict(d,h,{});if(void 0===this.safeNumber(l,"id"))throw new n.BadRequest(this.id+" withdraw() require chainId parameter");let c=await this.getWithdrawNonce(r),u=this.nonce(),f={brokerId:this.safeString(this.options,"keyBrokerId","woofi_pro"),chainId:this.parseToInt(h),receiver:i,token:e,amount:t.toString(),withdrawNonce:c,timestamp:u},p=this.ethEncodeStructuredData({chainId:h,name:"Orderly",verifyingContract:o,version:"1"},{Withdraw:[{name:"brokerId",type:"string"},{name:"chainId",type:"uint256"},{name:"receiver",type:"address"},{name:"token",type:"string"},{name:"amount",type:"uint256"},{name:"withdrawNonce",type:"uint64"},{name:"timestamp",type:"uint64"}]},f),m=this.signMessage(p,this.privateKey);r=this.omit(r,"chainId");let g=await this.v1PrivatePostWithdrawRequest(this.extend({signature:m,userAddress:i,verifyingContract:o,message:f},r)),y=this.safeDict(g,"data",{});return this.parseTransaction(y,a)}parseLeverage(e,t){let i=this.safeInteger(e,"max_leverage");return{info:e,symbol:t.symbol,marginMode:void 0,longLeverage:i,shortLeverage:i}}async fetchLeverage(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.v1PrivateGetClientInfo(t),r=this.safeDict(s,"data",{});return this.parseLeverage(r,i)}async setLeverage(e,t,i={}){if(await this.loadMarkets(),e<1||e>50)throw new n.BadRequest(this.id+" leverage should be between 1 and 50");return await this.v1PrivatePostClientLeverage(this.extend({leverage:e},i))}parsePosition(e,t){let i;let s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let a=this.safeString(e,"position_qty");i=r.Y.stringGt(a,"0")?"long":"short";let n=this.safeString(t,"contractSize"),o=this.safeString(e,"mark_price"),h=this.safeInteger(e,"timestamp"),d=this.safeString(e,"average_open_price"),l=this.safeString(e,"unsettled_pnl");a=r.Y.stringAbs(a);let c=r.Y.stringMul(a,o);return this.safePosition({info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:h,datetime:this.iso8601(h),lastUpdateTimestamp:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:this.parseNumber(d),notional:this.parseNumber(c),leverage:void 0,unrealizedPnl:this.parseNumber(l),contracts:this.parseNumber(a),contractSize:this.parseNumber(n),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"est_liq_price"),markPrice:this.parseNumber(o),lastPrice:void 0,collateral:void 0,marginMode:"cross",marginType:void 0,side:i,percentage:void 0,hedged:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchPosition(e,t={}){await this.loadMarkets();let i=this.market(e),s={symbol:i.id},r=await this.v1PrivateGetPositionSymbol(this.extend(s,t)),a=this.safeDict(r,"data");return this.parsePosition(a,i)}async fetchPositions(e,t={}){await this.loadMarkets();let i=await this.v1PrivateGetPositions(t),s=this.safeDict(i,"data",{}),r=this.safeList(s,"rows",[]);return this.parsePositions(r,e)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n=t[0],o=t[1],h=this.implodeParams(e,s),d=this.implodeHostname(this.urls.api[o]);if(d+="/"+n+"/",s=this.omit(s,this.extractParams(e)),s=this.keysort(s),"public"===o)d+=h,Object.keys(s).length&&(d+="?"+this.urlencode(s));else{if(this.checkRequiredCredentials(),("POST"===i||"PUT"===i)&&("algo/order"===e||"order"===e||"batch-order"===e)){if(!this.safeBool(this.options,"sandboxMode",!1)){let t=this.safeString(this.options,"brokerId","CCXT");if("batch-order"===e){let e=this.safeList(s,"orders",[]);for(let i=0;i<e.length;i++)s.orders[i].order_tag=t}else s.order_tag=t}s=this.keysort(s)}let t="",o=this.nonce().toString();d+=h,r={"orderly-account-id":this.accountId,"orderly-key":this.apiKey,"orderly-timestamp":o},t=o+i+"/"+n+"/"+h,"POST"===i||"PUT"===i?(t+=a=this.json(s),r["content-type"]="application/json"):(Object.keys(s).length&&(d+="?"+this.urlencode(s),t+="?"+this.rawencode(s)),r["content-type"]="application/x-www-form-urlencoded","DELETE"===i&&(a=""));let l=this.secret;l.indexOf("ed25519:")>=0&&(l=l.split("ed25519:")[1]);let c=(0,tB.q4)(this.encode(t),this.base58ToBinary(l),tC.ev);r["orderly-signature"]=this.urlencodeBase64(this.base64ToBinary(c))}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(!o)return;let l=this.safeBool(o,"success"),c=this.safeString(o,"code");if(!l){let e=this.id+" "+this.json(o);throw this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,c,e),new n.ExchangeError(e)}}}var sB=i(9478);class sE extends s.k{}let s_=sE;class sN extends s_{describe(){return this.deepExtend(super.describe(),{id:"yobit",name:"YoBit",countries:["RU"],rateLimit:2e3,version:"3",pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingInterval:!1,fetchFundingIntervals:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchGreeks:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchIsolatedPositions:!1,fetchLeverage:!1,fetchLeverages:!1,fetchLeverageTiers:!1,fetchLiquidations:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarginModes:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMarkPrices:!1,fetchMyLiquidations:!1,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOption:!1,fetchOptionChain:!1,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchPosition:!1,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsForSymbol:!1,fetchPositionsHistory:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawals:!1,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0,ws:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg",api:{public:"https://yobit.net/api",private:"https://yobit.net/tapi"},www:"https://www.yobit.net",doc:"https://www.yobit.net/en/api/",fees:"https://www.yobit.net/en/fees/"},api:{public:{get:{"depth/{pair}":1,info:1,"ticker/{pair}":1,"trades/{pair}":1}},private:{post:{ActiveOrders:1,CancelOrder:1,GetDepositAddress:1,getInfo:1,OrderInfo:1,Trade:1,TradeHistory:1,WithdrawCoinsToAddress:1}}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{}}},commonCurrencies:{AIR:"AirCoin",ANI:"ANICoin",ANT:"AntsCoin",ATMCHA:"ATM",ASN:"Ascension",AST:"Astral",ATM:"Autumncoin",AUR:"AuroraCoin",BAB:"Babel",BAN:"BANcoin",BCC:"BCH",BCS:"BitcoinStake",BITS:"Bitstar",BLN:"Bulleon",BNS:"Benefit Bonus Coin",BOT:"BOTcoin",BON:"BONES",BPC:"BitcoinPremium",BST:"BitStone",BTS:"Bitshares2",CAT:"BitClave",CBC:"CryptoBossCoin",CMT:"CometCoin",COIN:"Coin.com",COV:"Coven Coin",COVX:"COV",CPC:"Capricoin",CREDIT:"Creditbit",CS:"CryptoSpots",DCT:"Discount",DFT:"DraftCoin",DGD:"DarkGoldCoin",DIRT:"DIRTY",DROP:"FaucetCoin",DSH:"DASH",EGC:"EverGreenCoin",EGG:"EggCoin",EKO:"EkoCoin",ENTER:"ENTRC",EPC:"ExperienceCoin",ESC:"EdwardSnowden",EUROPE:"EUROP",EXT:"LifeExtension",FUND:"FUNDChains",FUNK:"FUNKCoin",FX:"FCoin",GCC:"GlobalCryptocurrency",GEN:"Genstake",GENE:"Genesiscoin",GMR:"Gimmer",GOLD:"GoldMint",GOT:"Giotto Coin",GSX:"GlowShares",GT:"GTcoin",HTML5:"HTML",HYPERX:"HYPER",ICN:"iCoin",INSANE:"INSN",JNT:"JointCoin",JPC:"JupiterCoin",JWL:"Jewels",KNC:"KingN Coin",LBTCX:"LiteBitcoin",LIZI:"LiZi",LOC:"LocoCoin",LOCX:"LOC",LUNYR:"LUN",LUN:"LunarCoin",LUNA:"Luna Coin",MASK:"Yobit MASK",MDT:"Midnight",MEME:"Memez Token",MIS:"MIScoin",MM:"MasterMint",NAV:"NavajoCoin",NBT:"NiceBytes",OMG:"OMGame",ONX:"Onix",PAC:"$PAC",PLAY:"PlayCoin",PIVX:"Darknet",PURE:"PurePOS",PUTIN:"PutinCoin",SPACE:"Spacecoin",STK:"StakeCoin",SUB:"Subscriptio",PAY:"EPAY",PLC:"Platin Coin",RAI:"RaiderCoin",RCN:"RCoin",REP:"Republicoin",RUR:"RUB",SBTC:"Super Bitcoin",SMC:"SmartCoin",SOLO:"SoloCoin",SOUL:"SoulCoin",STAR:"StarCoin",SUPER:"SuperCoin",TNS:"Transcodium",TTC:"TittieCoin",UNI:"Universe",UST:"Uservice",VOL:"VolumeCoin",XIN:"XINCoin",XMT:"SummitCoin",XRA:"Ratecoin",BCHN:"BSV"},options:{maxUrlLength:2048,fetchOrdersRequiresSymbol:!0,networks:{ETH:"ERC20",TRX:"TRC20",BSC:"BEP20"}},precisionMode:d.kb,exceptions:{exact:{803:n.InvalidOrder,804:n.InvalidOrder,805:n.InvalidOrder,806:n.InvalidOrder,807:n.InvalidOrder,831:n.InsufficientFunds,832:n.InsufficientFunds,833:n.OrderNotFound},broad:{"Invalid pair name":n.ExchangeError,"invalid api key":n.AuthenticationError,"invalid sign":n.AuthenticationError,"api key dont have trade permission":n.AuthenticationError,"invalid parameter":n.InvalidOrder,"invalid order":n.InvalidOrder,"The given order has already been cancelled":n.InvalidOrder,"Requests too often":n.DDoSProtection,"not available":n.ExchangeNotAvailable,"data unavailable":n.ExchangeNotAvailable,"external service unavailable":n.ExchangeNotAvailable,"Total transaction amount":n.InvalidOrder,"The given order has already been closed and cannot be cancelled":n.InvalidOrder,"Insufficient funds":n.InsufficientFunds,"invalid key":n.AuthenticationError,"invalid nonce":n.InvalidNonce,"Total order amount is less than minimal amount":n.InvalidOrder,"Rate Limited":n.RateLimitExceeded}},orders:{}})}parseBalance(e){let t=this.safeDict(e,"return",{}),i=this.safeInteger(t,"server_time"),s={info:e,timestamp:i,datetime:this.iso8601(i)},r=this.safeDict(t,"funds",{}),a=this.safeDict(t,"funds_incl_orders",{}),n=Object.keys(this.extend(r,a));for(let e=0;e<n.length;e++){let t=n[e],i=this.safeCurrencyCode(t),o=this.account();o.free=this.safeString(r,t),o.total=this.safeString(a,t),s[i]=o}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchMarkets(e={}){let t=await this.publicGetInfo(e),i=this.safeDict(t,"pairs",{}),s=Object.keys(i),a=[];for(let e=0;e<s.length;e++){let t=s[e],n=i[t],[o,h]=t.split("_"),d=o.toUpperCase(),l=h.toUpperCase();d=this.safeCurrencyCode(d),l=this.safeCurrencyCode(l);let c=this.safeInteger(n,"hidden"),u=this.safeString(n,"fee");u=r.Y.stringDiv(u,"100"),a.push({id:t,symbol:d+"/"+l,base:d,quote:l,settle:void 0,baseId:o,quoteId:h,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:0===c,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(u),maker:this.parseNumber(u),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(n,"decimal_places"))),price:this.parseNumber(this.parsePrecision(this.safeString(n,"decimal_places")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_amount"),max:this.safeNumber(n,"max_amount")},price:{min:this.safeNumber(n,"min_price"),max:this.safeNumber(n,"max_price")},cost:{min:this.safeNumber(n,"min_total"),max:void 0}},created:void 0,info:n})}return a}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id};void 0!==t&&(r.limit=t);let a=await this.publicGetDepthPair(this.extend(r,i));if(!(s.id in a))throw new n.ExchangeError(this.id+" "+s.symbol+" order book is empty or not available");let o=a[s.id];return this.parseOrderBook(o,e)}async fetchOrderBooks(e,t,i={}){let s;if(await this.loadMarkets(),void 0===e){if((s=this.ids.join("-")).length>2048){let e=this.ids.length;throw new n.ExchangeError(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else s=(s=this.marketIds(e)).join("-");let r={pair:s};void 0!==t&&(r.limit=t);let a=await this.publicGetDepthPair(this.extend(r,i)),o={};s=Object.keys(a);for(let e=0;e<s.length;e++){let t=s[e],i=this.safeSymbol(t);o[i]=this.parseOrderBook(a[t],i)}return o}parseTicker(e,t){let i=this.safeTimestamp(e,"updated"),s=this.safeString(e,"last");return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol_cur"),quoteVolume:this.safeString(e,"vol"),info:e},t)}async fetchTickersHelper(e,t={}){let i=await this.publicGetTickerPair(this.extend({pair:e},t)),s={},r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],a=i[t],n=this.safeMarket(t);s[n.symbol]=this.parseTicker(a,n)}return s}async fetchTickers(e,t={}){let i;if([i,t]=this.handleParamBool(t,"all",!1),void 0===e&&!i)throw new n.ArgumentsRequired(this.id+' fetchTickers() requires "symbols" argument or use `params["all"] = true` to send multiple requests for all markets');await this.loadMarkets();let s=[],r=this.safeInteger(this.options,"maxUrlLength",2048);if(i){e=this.symbols;let i="";for(let e=0;e<this.ids.length;e++){let a=this.ids[e],n=""===i?"":"-";(i+=n+a).length>r&&(s.push(this.fetchTickersHelper(i,t)),i="")}""!==i&&s.push(this.fetchTickersHelper(i,t))}else{e=this.marketSymbols(e);let i=this.marketIds(e),a=i.length,o=i.join("-"),h=o.length+40;if(h>r)throw new n.ArgumentsRequired(this.id+" fetchTickers() is being requested for "+a.toString()+" markets (which has an URL length of "+h.toString()+" characters), but it exceedes max URL length ("+r.toString()+"), please pass limisted symbols array to fetchTickers to fit in one request");s.push(this.fetchTickersHelper(o,t))}let a=await Promise.all(s),o={};for(let t=0;t<a.length;t++){let i=this.filterByArrayTickers(a[t],"symbol",e);o=this.extend(o,i)}return o}async fetchTicker(e,t={}){return(await this.fetchTickers([e],t))[e]}parseTrade(e,t){let i;let s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"type");"ask"===r?r="sell":"bid"===r&&(r="buy");let a=this.safeString2(e,"rate","price"),n=this.safeString2(e,"trade_id","tid"),o=this.safeString(e,"order_id"),h=this.safeString(e,"pair"),d=this.safeSymbol(h,t),l=this.safeString(e,"amount"),c=this.parseNumber(a),u=this.parseNumber(l),f="limit",p=this.safeNumber(e,"commission");if(void 0!==p){let t=this.safeString(e,"commissionCurrency");i={cost:p,currency:this.safeCurrencyCode(t)}}if(void 0!==this.safeString(e,"is_your_order")&&void 0===i){let e=this.calculateFee(d,f,r,u,c,"taker");i={currency:this.safeString(e,"currency"),cost:this.safeString(e,"cost"),rate:this.safeString(e,"rate")}}return this.safeTrade({id:n,order:o,timestamp:s,datetime:this.iso8601(s),symbol:d,type:f,side:r,takerOrMaker:void 0,price:a,amount:l,cost:void 0,fee:i,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==i&&(a.limit=i);let n=await this.publicGetTradesPair(this.extend(a,s));if(Array.isArray(n)&&0===n.length)return[];let o=this.safeList(n,r.id,[]);return this.parseTrades(o,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.publicGetInfo(e),i=this.safeDict(t,"pairs",{}),s=Object.keys(i),a={};for(let e=0;e<s.length;e++){let t=s[e],n=this.safeDict(i,t,{}),o=this.safeSymbol(t,void 0,"_"),h=this.safeString(n,"fee_buyer"),d=this.safeString(n,"fee_seller"),l=this.parseNumber(r.Y.stringDiv(h,"100")),c=this.parseNumber(r.Y.stringDiv(d,"100"));a[o]={info:n,symbol:o,taker:l,maker:c,percentage:!0,tierBased:!1}}return a}async createOrder(e,t,i,s,r,a={}){if("market"===t)throw new n.ExchangeError(this.id+" createOrder() allows limit orders only");await this.loadMarkets();let o=this.market(e),h={pair:o.id,type:i,amount:this.amountToPrecision(e,s),rate:this.priceToPrecision(e,r)},d=await this.privatePostTrade(this.extend(h,a)),l=this.safeDict(d,"return");return this.parseOrder(l,o)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={order_id:parseInt(e)},r=await this.privatePostCancelOrder(this.extend(s,i)),a=this.safeDict(r,"return",{});return this.parseOrder(a)}parseOrderStatus(e){return this.safeString({0:"open",1:"closed",2:"canceled",3:"open"},e,e)}parseOrder(e,t){let i=this.safeString2(e,"id","order_id"),s=this.parseOrderStatus(this.safeString(e,"status","open"));"0"===i&&(i=this.safeString(e,"init_order_id"),s="closed");let r=this.safeTimestamp2(e,"timestamp_created","server_time"),a=this.safeString(e,"pair"),n=this.safeSymbol(a,t),o=this.safeString(e,"start_amount"),h=this.safeString2(e,"amount","remains"),d=this.safeString(e,"received","0.0"),l=this.safeString(e,"rate"),c=this.safeString(e,"type");return this.safeOrder({info:e,id:i,clientOrderId:void 0,symbol:n,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,type:"limit",timeInForce:void 0,postOnly:void 0,side:c,price:l,triggerPrice:void 0,cost:void 0,amount:o,remaining:h,filled:d,status:s,fee:void 0,average:void 0,trades:void 0},t)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s={order_id:parseInt(e)},r=await this.privatePostOrderInfo(this.extend(s,i));e=e.toString();let a=this.safeDict(r,"return",{});return this.parseOrder(this.extend({id:e},a[e]))}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let r={};if(void 0!==e){let t=this.market(e);r.pair=t.id}let a=await this.privatePostActiveOrders(this.extend(r,s)),o=this.safeDict(a,"return",{});return this.parseOrders(o,void 0,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==i&&(a.count=i),void 0!==t&&(a.since=this.parseToInt(t/1e3));let o=await this.privatePostTradeHistory(this.extend(a,s)),h=this.safeDict(o,"return",{}),d=Object.keys(h),l=[];for(let e=0;e<d.length;e++){let t=this.safeString(d,e),i=this.parseTrade(this.extend(h[t],{trade_id:t}),r);l.push(i)}return this.filterBySymbolSinceLimit(l,r.symbol,t,i)}async createDepositAddress(e,t={}){let i=await this.fetchDepositAddress(e,this.extend({need_new:1},t)),s=this.safeString(i,"address");return this.checkAddress(s),{currency:e,address:s,tag:void 0,info:i.info}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e).id,s=this.safeDict(this.options,"networks",{}),r=this.safeStringUpper(t,"network");void 0!==(r=this.safeString(s,r,r))&&("ERC20"!==r&&(i+=r.toLowerCase()),t=this.omit(t,"network"));let a={coinName:i,need_new:0},n=await this.privatePostGetDepositAddress(this.extend(a,t)),o=this.safeString(n.return,"address");return this.checkAddress(o),{info:n,currency:e,network:void 0,address:o,tag:void 0}}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a={coinName:this.currency(e).id,amount:t,address:i};if(void 0!==s)throw new n.ExchangeError(this.id+" withdraw() does not support the tag argument yet due to a lack of docs on withdrawing with tag/memo on behalf of the exchange.");return{info:await this.privatePostWithdrawCoinsToAddress(this.extend(a,r)),id:void 0,txid:void 0,type:void 0,currency:void 0,network:void 0,amount:void 0,status:void 0,timestamp:void 0,datetime:void 0,address:void 0,addressFrom:void 0,addressTo:void 0,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:void 0,comment:void 0,fee:{currency:void 0,cost:void 0,rate:void 0}}}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api[t],o=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let t=this.nonce();a=this.urlencode(this.extend({nonce:t,method:e},o));let i=this.hmac(this.encode(a),this.encode(this.secret),A.Zf);r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:i}}else"public"===t?(n+="/"+this.version+"/"+this.implodeParams(e,s),Object.keys(o).length&&(n+="?"+this.urlencode(o))):(n+="/"+this.implodeParams(e,s),"GET"===i?Object.keys(o).length&&(n+="?"+this.urlencode(o)):Object.keys(o).length&&(a=this.json(o),r={"Content-Type":"application/json"}));return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o&&"success"in o){let e=this.safeValue(o,"success");if("string"==typeof e&&(e="true"===e||"1"===e),!e){let e=this.safeString(o,"code"),t=this.safeString(o,"error"),i=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new n.ExchangeError(i)}}}}class sL extends s.k{}let sR=sL;class sD extends sR{describe(){return this.deepExtend(super.describe(),{id:"zaif",name:"Zaif",countries:["JP"],rateLimit:100,version:"1",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg",api:{rest:"https://api.zaif.jp"},www:"https://zaif.jp",doc:["https://techbureau-api-document.readthedocs.io/ja/latest/index.html","https://corp.zaif.jp/api-docs","https://corp.zaif.jp/api-docs/api_links","https://www.npmjs.com/package/zaif.jp","https://github.com/you21979/node-zaif"],fees:"https://zaif.jp/fee?lang=en"},fees:{trading:{percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0")}},api:{public:{get:{"depth/{pair}":1,"currencies/{pair}":1,"currencies/all":1,"currency_pairs/{pair}":1,"currency_pairs/all":1,"last_price/{pair}":1,"ticker/{pair}":1,"trades/{pair}":1}},private:{post:{active_orders:5,cancel_order:5,deposit_history:5,get_id_info:5,get_info:10,get_info2:5,get_personal_info:5,trade:5,trade_history:50,withdraw:5,withdraw_history:5}},ecapi:{post:{createInvoice:1,getInvoice:1,getInvoiceIdsByOrderNumber:1,cancelInvoice:1}},tlapi:{post:{get_positions:66,position_history:66,active_positions:5,create_position:33,change_position:33,cancel_position:33}},fapi:{get:{"groups/{group_id}":1,"last_price/{group_id}/{pair}":1,"ticker/{group_id}/{pair}":1,"trades/{group_id}/{pair}":1,"depth/{group_id}/{pair}":1}}},options:{},precisionMode:d.kb,exceptions:{exact:{"unsupported currency_pair":n.BadRequest},broad:{}}})}async fetchMarkets(e={}){let t=await this.publicGetCurrencyPairsAll(e);return this.parseMarkets(t)}parseMarket(e){let t=this.safeString(e,"currency_pair"),[i,s]=this.safeString(e,"name").split("/"),r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s);return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"item_unit_step"),price:this.parseNumber(this.parsePrecision(this.safeString(e,"aux_unit_point")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"item_unit_min"),max:void 0},price:{min:this.safeNumber(e,"aux_unit_min"),max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}parseBalance(e){let t=this.safeValue(e,"return",{}),i=this.safeValue(t,"deposit"),s={info:e,timestamp:void 0,datetime:void 0},r=this.safeValue(t,"funds",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){let t=a[e],n=this.safeCurrencyCode(t),o=this.safeString(r,t),h=this.account();h.free=o,h.total=o,void 0!==i&&t in i&&(h.total=this.safeString(i,t)),s[n]=h}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={pair:s.id},a=await this.publicGetDepthPair(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t){let i=this.safeSymbol(void 0,t),s=this.safeString(e,"vwap"),a=this.safeString(e,"volume"),n=r.Y.stringMul(a,s),o=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:s,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={pair:i.id},r=await this.publicGetTickerPair(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i=this.safeString(e,"trade_type");i="bid"===i?"buy":"sell";let s=this.safeTimestamp(e,"date"),r=this.safeString2(e,"id","tid"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"currency_pair"),h=this.safeSymbol(o,t,"_");return this.safeTrade({id:r,info:e,timestamp:s,datetime:this.iso8601(s),symbol:h,type:void 0,side:i,order:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id},n=await this.publicGetTradesPair(this.extend(a,s));return 1!==n.length||Object.keys(n[0]).length||(n=[]),this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,r,a={}){if(await this.loadMarkets(),"limit"!==t)throw new n.ExchangeError(this.id+" createOrder() allows limit orders only");let o=this.market(e),h={currency_pair:o.id,action:"buy"===i?"bid":"ask",amount:s,price:r},d=await this.privatePostTrade(this.extend(h,a));return this.safeOrder({info:d,id:d.return.order_id.toString()},o)}async cancelOrder(e,t,i={}){let s=await this.privatePostCancelOrder(this.extend({order_id:e},i)),r=this.safeDict(s,"return");return this.parseOrder(r)}parseOrder(e,t){let i=this.safeString(e,"action");i="bid"===i?"buy":"sell";let s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"currency_pair"),a=this.safeSymbol(r,t,"_"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),h=this.safeString2(e,"id","order_id");return this.safeOrder({id:h,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:"open",symbol:a,type:"limit",timeInForce:void 0,postOnly:void 0,side:i,price:n,triggerPrice:void 0,cost:void 0,amount:o,filled:void 0,remaining:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOpenOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);let n=await this.privatePostActiveOrders(this.extend(a,s));return this.parseOrders(n.return,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);let n=await this.privatePostTradeHistory(this.extend(a,s));return this.parseOrders(n.return,r,t,i)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e);if("JPY"===e)throw new n.ExchangeError(this.id+" withdraw() does not allow "+e+" withdrawals");let o={currency:a.id,amount:t,address:i};void 0!==s&&(o.message=s);let h=await this.privatePostWithdraw(this.extend(o,r)),d=this.safeDict(h,"return");return this.parseTransaction(d,a)}parseTransaction(e,t){let i;t=this.safeCurrency(void 0,t);let s=this.safeValue(e,"fee");return void 0!==s&&(i={cost:s,currency:t.code}),{id:this.safeString(e,"id"),txid:this.safeString(e,"txid"),timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,internal:void 0,fee:i,info:e}}customNonce(){return parseFloat(this.numberToString(this.milliseconds()/1e3)).toFixed(8)}sign(e,t="public",i="GET",s={},r,a){let n=this.urls.api.rest+"/";if("public"===t)n+="api/"+this.version+"/"+this.implodeParams(e,s);else if("fapi"===t)n+="fapi/"+this.version+"/"+this.implodeParams(e,s);else{this.checkRequiredCredentials(),"ecapi"===t?n+="ecapi":"tlapi"===t?n+="tlapi":n+="tapi";let i=this.customNonce();a=this.urlencode(this.extend({method:e,nonce:i},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),A.Zf)}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.id+" "+a,c=this.safeString(o,"error");if(void 0!==c)throw this.throwExactlyMatchedException(this.exceptions.exact,c,l),this.throwBroadlyMatchedException(this.exceptions.broad,c,l),new n.ExchangeError(l);if(!this.safeBool(o,"success",!0))throw new n.ExchangeError(l)}}class sV extends s.k{}let sq=sV;class sF extends sq{describe(){return this.deepExtend(super.describe(),{id:"zonda",name:"Zonda",countries:["EE"],rateLimit:1e3,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,closeAllPositions:!1,closePosition:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDepositAddressesByNetwork:!1,fetchDeposits:void 0,fetchFundingHistory:!1,fetchFundingInterval:!1,fetchFundingIntervals:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchGreeks:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchIsolatedPositions:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverages:!1,fetchLeverageTiers:!1,fetchLiquidations:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarginModes:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMarkPrices:!1,fetchMyLiquidations:!1,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOption:!1,fetchOptionChain:!1,fetchOrderBook:!0,fetchOrderBooks:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:void 0,fetchTransfer:!1,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawal:!1,fetchWithdrawals:void 0,reduceMargin:!1,repayCrossMargin:!1,repayIsolatedMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","3d":"259200","1w":"604800"},hostname:"zondacrypto.exchange",urls:{referral:"https://auth.zondaglobal.com/ref/jHlbB4mIkdS1",logo:"https://user-images.githubusercontent.com/1294454/159202310-a0e38007-5e7c-4ba9-a32f-c8263a0291fe.jpg",www:"https://zondaglobal.com",api:{public:"https://{hostname}/API/Public",private:"https://{hostname}/API/Trading/tradingApi.php",v1_01Public:"https://api.{hostname}/rest",v1_01Private:"https://api.{hostname}/rest"},doc:["https://docs.zondacrypto.exchange/","https://github.com/BitBayNet/API"],support:"https://zondaglobal.com/en/helpdesk/zonda-exchange",fees:"https://zondaglobal.com/legal/zonda-exchange/fees"},api:{public:{get:["{id}/all","{id}/market","{id}/orderbook","{id}/ticker","{id}/trades"]},private:{post:["info","trade","cancel","orderbook","orders","transfer","withdraw","history","transactions"]},v1_01Public:{get:["trading/ticker","trading/ticker/{symbol}","trading/stats","trading/stats/{symbol}","trading/orderbook/{symbol}","trading/transactions/{symbol}","trading/candle/history/{symbol}/{resolution}"]},v1_01Private:{get:["api_payments/deposits/crypto/addresses","payments/withdrawal/{detailId}","payments/deposit/{detailId}","trading/offer","trading/stop/offer","trading/config/{symbol}","trading/history/transactions","balances/BITBAY/history","balances/BITBAY/balance","fiat_cantor/rate/{baseId}/{quoteId}","fiat_cantor/history","client_payments/v2/customer/crypto/{currency}/channels/deposit","client_payments/v2/customer/crypto/{currency}/channels/withdrawal","client_payments/v2/customer/crypto/deposit/fee","client_payments/v2/customer/crypto/withdrawal/fee"],post:["trading/offer/{symbol}","trading/stop/offer/{symbol}","trading/config/{symbol}","balances/BITBAY/balance","balances/BITBAY/balance/transfer/{source}/{destination}","fiat_cantor/exchange","api_payments/withdrawals/crypto","api_payments/withdrawals/fiat","client_payments/v2/customer/crypto/deposit","client_payments/v2/customer/crypto/withdrawal"],delete:["trading/offer/{symbol}/{id}/{side}/{price}","trading/stop/offer/{symbol}/{id}/{side}/{price}"],put:["balances/BITBAY/balance/{id}"]}},fees:{trading:{maker:this.parseNumber("0.0"),taker:this.parseNumber("0.001"),percentage:!0,tierBased:!1},fiat:{maker:this.parseNumber("0.0030"),taker:this.parseNumber("0.0043"),percentage:!0,tierBased:!0,tiers:{taker:[[this.parseNumber("0.0043"),this.parseNumber("0")],[this.parseNumber("0.0042"),this.parseNumber("1250")],[this.parseNumber("0.0041"),this.parseNumber("3750")],[this.parseNumber("0.0040"),this.parseNumber("7500")],[this.parseNumber("0.0039"),this.parseNumber("10000")],[this.parseNumber("0.0038"),this.parseNumber("15000")],[this.parseNumber("0.0037"),this.parseNumber("20000")],[this.parseNumber("0.0036"),this.parseNumber("25000")],[this.parseNumber("0.0035"),this.parseNumber("37500")],[this.parseNumber("0.0034"),this.parseNumber("50000")],[this.parseNumber("0.0033"),this.parseNumber("75000")],[this.parseNumber("0.0032"),this.parseNumber("100000")],[this.parseNumber("0.0031"),this.parseNumber("150000")],[this.parseNumber("0.0030"),this.parseNumber("200000")],[this.parseNumber("0.0029"),this.parseNumber("250000")],[this.parseNumber("0.0028"),this.parseNumber("375000")],[this.parseNumber("0.0027"),this.parseNumber("500000")],[this.parseNumber("0.0026"),this.parseNumber("625000")],[this.parseNumber("0.0025"),this.parseNumber("875000")]],maker:[[this.parseNumber("0.0030"),this.parseNumber("0")],[this.parseNumber("0.0029"),this.parseNumber("1250")],[this.parseNumber("0.0028"),this.parseNumber("3750")],[this.parseNumber("0.0028"),this.parseNumber("7500")],[this.parseNumber("0.0027"),this.parseNumber("10000")],[this.parseNumber("0.0026"),this.parseNumber("15000")],[this.parseNumber("0.0025"),this.parseNumber("20000")],[this.parseNumber("0.0025"),this.parseNumber("25000")],[this.parseNumber("0.0024"),this.parseNumber("37500")],[this.parseNumber("0.0023"),this.parseNumber("50000")],[this.parseNumber("0.0023"),this.parseNumber("75000")],[this.parseNumber("0.0022"),this.parseNumber("100000")],[this.parseNumber("0.0021"),this.parseNumber("150000")],[this.parseNumber("0.0021"),this.parseNumber("200000")],[this.parseNumber("0.0020"),this.parseNumber("250000")],[this.parseNumber("0.0019"),this.parseNumber("375000")],[this.parseNumber("0.0018"),this.parseNumber("500000")],[this.parseNumber("0.0018"),this.parseNumber("625000")],[this.parseNumber("0.0017"),this.parseNumber("875000")]]}},funding:{withdraw:{}}},options:{fetchTickerMethod:"v1_01PublicGetTradingTickerSymbol",fetchTickersMethod:"v1_01PublicGetTradingTicker",fiatCurrencies:["EUR","USD","GBP","PLN"],transfer:{fillResponseFromRequest:!0}},precisionMode:d.kb,exceptions:{400:n.ExchangeError,401:n.InvalidOrder,402:n.InvalidOrder,403:n.InvalidOrder,404:n.InvalidOrder,405:n.InvalidOrder,406:n.InsufficientFunds,408:n.InvalidOrder,501:n.AuthenticationError,502:n.AuthenticationError,503:n.InvalidNonce,504:n.ExchangeError,505:n.AuthenticationError,506:n.AccountSuspended,509:n.ExchangeError,510:n.BadSymbol,FUNDS_NOT_SUFFICIENT:n.InsufficientFunds,OFFER_FUNDS_NOT_EXCEEDING_MINIMUMS:n.InvalidOrder,OFFER_NOT_FOUND:n.OrderNotFound,OFFER_WOULD_HAVE_BEEN_PARTIALLY_FILLED:n.OrderImmediatelyFillable,ACTION_LIMIT_EXCEEDED:n.RateLimitExceeded,UNDER_MAINTENANCE:n.OnMaintenance,REQUEST_TIMESTAMP_TOO_OLD:n.InvalidNonce,PERMISSIONS_NOT_SUFFICIENT:n.PermissionDenied,INVALID_STOP_RATE:n.InvalidOrder,TIMEOUT:n.ExchangeError,RESPONSE_TIMEOUT:n.ExchangeError,ACTION_BLOCKED:n.PermissionDenied,INVALID_HASH_SIGNATURE:n.AuthenticationError},commonCurrencies:{GGC:"Global Game Coin"}})}async fetchMarkets(e={}){let t=await this.v1_01PublicGetTradingTicker(e),i=Object.values(this.safeValue(t,"items",{}));return this.parseMarkets(i)}parseMarket(e){let t=this.safeValue(e,"market",{}),i=this.safeString(t,"code"),s=this.safeValue(t,"first",{}),r=this.safeValue(t,"second",{}),a=this.safeString(s,"currency"),n=this.safeString(r,"currency"),o=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),d=this.safeValue(this.fees,"trading",{}),l=this.safeValue(this.options,"fiatCurrencies",[]);return(this.inArray(o,l)||this.inArray(h,l))&&(d=this.safeValue(this.fees,"fiat",{})),{id:i,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(d,"taker"),maker:this.safeNumber(d,"maker"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,optionType:void 0,strike:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(r,"scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"minOffer"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.v1_01PrivateGetTradingOffer(this.extend({},s)),a=this.safeList(r,"items",[]);return this.parseOrders(a,void 0,t,i,{status:"open"})}parseOrder(e,t){let i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"-"),r=this.safeInteger(e,"time"),a=this.safeString(e,"startAmount"),n=this.safeString(e,"currentAmount"),o=this.safeValue(e,"postOnly");return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:void 0,info:e,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:void 0,symbol:s,type:this.safeString(e,"mode"),timeInForce:void 0,postOnly:o,side:this.safeStringLower(e,"offerType"),price:this.safeString(e,"rate"),triggerPrice:void 0,amount:a,cost:void 0,filled:void 0,remaining:n,average:void 0,fee:void 0,trades:void 0},t)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={};if(e){let t=[this.marketId(e)];e=this.symbol(e),r.markets=t}let a={query:this.json(this.extend(r,s))},n=await this.v1_01PrivateGetTradingHistoryTransactions(a),o=this.safeValue(n,"items"),h=this.parseTrades(o,void 0,t,i);return void 0===e?h:this.filterBySymbol(h,e)}parseBalance(e){let t=this.safeValue(e,"balances");if(void 0===t)throw new n.ExchangeError(this.id+" empty balance response "+this.json(e));let i={info:e};for(let e=0;e<t.length;e++){let s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(s,"lockedFunds"),n.free=this.safeString(s,"availableFunds"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.v1_01PrivateGetBalancesBITBAYBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id},a=await this.v1_01PublicGetTradingOrderbookSymbol(this.extend(r,i)),n=this.safeValue(a,"buy",[]),o=this.safeValue(a,"sell",[]),h=this.safeInteger(a,"timestamp");return{symbol:s.symbol,bids:this.parseBidsAsks(n,"ra","ca"),asks:this.parseBidsAsks(o,"ra","ca"),timestamp:h,datetime:this.iso8601(h),nonce:this.safeInteger(a,"seqNo")}}parseTicker(e,t){let i=this.safeValue(e,"market"),s=this.safeString2(i,"code","m");t=this.safeMarket(s,t);let r=this.safeInteger(e,"time"),a=this.safeValue(e,"rate");return this.safeTicker({symbol:this.safeSymbol(s,t),timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:this.safeNumber(e,"highestBid"),bidVolume:void 0,ask:this.safeNumber(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"r24h"),close:a,last:a,previousClose:this.safeValue(e,"previousRate"),change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"v"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){let i;await this.loadMarkets();let s=this.market(e),r={symbol:s.id},a="v1_01PublicGetTradingTickerSymbol",o=this.safeString(this.options,"fetchTickerMethod",a),h=this.safeString2(t,"method","fetchTickerMethod",o);if(h===a)i=await this.v1_01PublicGetTradingTickerSymbol(this.extend(r,t));else if("v1_01PublicGetTradingStatsSymbol"===h)i=await this.v1_01PublicGetTradingStatsSymbol(this.extend(r,t));else throw new n.BadRequest(this.id+' fetchTicker params["method"] must be "v1_01PublicGetTradingTickerSymbol" or "v1_01PublicGetTradingStatsSymbol"');let d=this.safeValue2(i,"ticker","stats");return this.parseTicker(d,s)}async fetchTickers(e,t={}){let i;await this.loadMarkets();let s="v1_01PublicGetTradingTicker",r=this.safeString(this.options,"fetchTickersMethod",s),a=this.safeString2(t,"method","fetchTickersMethod",r);if(a===s)i=await this.v1_01PublicGetTradingTicker(t);else if("v1_01PublicGetTradingStats"===a)i=await this.v1_01PublicGetTradingStats(t);else throw new n.BadRequest(this.id+' fetchTickers params["method"] must be "v1_01PublicGetTradingTicker" or "v1_01PublicGetTradingStats"');let o=this.safeDict(i,"items");return this.parseTickers(o,e)}async fetchLedger(e,t,i,s={}){let r=[];if(void 0!==e){let t=this.currency(e);r.push(t.id)}let a={balanceCurrencies:r};void 0!==t&&(a.fromTime=t),void 0!==i&&(a.limit=i),a=this.extend(a,s);let n=(await this.v1_01PrivateGetBalancesBITBAYHistory({query:this.json(a)})).items;return this.parseLedger(n,void 0,t,i)}parseLedgerEntry(e,t){let i=this.safeInteger(e,"time"),s=this.safeValue(e,"balance",{}),a=this.safeString(s,"currency");t=this.safeCurrency(a,t);let n=this.safeValue(e,"change",{}),o=this.safeString(n,"total"),h="in";r.Y.stringLt(o,"0")&&(h="out",o=r.Y.stringNeg(o));let d=this.safeValue(e,"fundsBefore",{}),l=this.safeValue(e,"fundsAfter",{});return this.safeLedgerEntry({info:e,id:this.safeString(e,"historyId"),direction:h,account:void 0,referenceId:this.safeString(e,"detailId"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:this.safeCurrencyCode(a),amount:this.parseNumber(o),before:this.safeNumber(d,"total"),after:this.safeNumber(l,"total"),status:"ok",timestamp:i,datetime:this.iso8601(i),fee:void 0},t)}parseLedgerEntryType(e){return this.safeString({ADD_FUNDS:"transaction",BITCOIN_GOLD_FORK:"transaction",CREATE_BALANCE:"transaction",FUNDS_MIGRATION:"transaction",WITHDRAWAL_LOCK_FUNDS:"transaction",WITHDRAWAL_SUBTRACT_FUNDS:"transaction",WITHDRAWAL_UNLOCK_FUNDS:"transaction",TRANSACTION_COMMISSION_OUTCOME:"fee",TRANSACTION_COMMISSION_RETURN:"fee",TRANSACTION_OFFER_ABORTED_RETURN:"trade",TRANSACTION_OFFER_COMPLETED_RETURN:"trade",TRANSACTION_POST_INCOME:"trade",TRANSACTION_POST_OUTCOME:"trade",TRANSACTION_PRE_LOCKING:"trade"},e,e)}parseOHLCV(e,t){let i=this.safeValue(e,1,{});return[this.safeInteger(e,0),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),this.safeNumber(i,"v")]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={symbol:a.baseId+"-"+a.quoteId,resolution:this.safeString(this.timeframes,t,t)};s=void 0===s?100:Math.min(s,11e3);let o=this.parseTimeframe(t),h=s*o*1e3;void 0===i?(n.to=this.milliseconds(),n.from=n.to-h):(n.from=i,n.to=this.sum(n.from,h));let d=await this.v1_01PublicGetTradingCandleHistorySymbolResolution(this.extend(n,r)),l=this.safeList(d,"items",[]);return this.parseOHLCVs(l,a,t,i,s)}parseTrade(e,t){let i,s,r;let a=this.safeInteger2(e,"time","t"),n=this.safeStringLower2(e,"userAction","ty"),o=this.safeValue(e,"wasTaker");void 0!==o&&(i=o?"taker":"maker");let h=this.safeString2(e,"rate","r"),d=this.safeString2(e,"amount","a"),l=this.safeString(e,"commissionValue"),c=this.safeString(e,"market"),u=(t=this.safeMarket(c,t,"-")).symbol;void 0!==l&&(s={currency:"buy"===n?t.base:t.quote,cost:l});let f=this.safeString(e,"offerId");return void 0!==f&&(r=f?"limit":"market"),this.safeTrade({id:this.safeString(e,"id"),order:f,timestamp:a,datetime:this.iso8601(a),symbol:u,type:r,side:n,price:h,amount:d,cost:void 0,takerOrMaker:i,fee:s,info:e},t)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.baseId+"-"+r.quoteId};void 0!==t&&(a.fromTime=t-1),void 0!==i&&(a.limit=i);let n=await this.v1_01PublicGetTradingTransactionsSymbol(this.extend(a,s)),o=this.safeList(n,"items");return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o;await this.loadMarkets();let h=this.market(e),d=h.baseId+"-"+h.quoteId;s=parseFloat(this.amountToPrecision(e,s));let l={symbol:d,offerType:i.toUpperCase(),amount:s},c=this.safeValue2(a,"stopPrice","stopLossPrice"),u=void 0!==c,f="limit"===t,p="market"===t,m="stop-limit"===t||f&&u,g="stop-market"===t||p&&u;if(f||m)l.rate=this.priceToPrecision(e,r),l.mode=m?"stop-limit":"limit";else if(p||g)l.mode=g?"stop-market":"market";else throw new n.ExchangeError(this.id+" createOrder() invalid type");if(a=this.omit(a,["stopPrice","stopLossPrice"]),m||g){if(!u)throw new n.ExchangeError(this.id+" createOrder() zonda requires `triggerPrice` parameter for stop-limit or stop-market orders");l.stopRate=this.priceToPrecision(e,c),o=await this.v1_01PrivatePostTradingStopOfferSymbol(this.extend(l,a))}else o=await this.v1_01PrivatePostTradingOfferSymbol(this.extend(l,a));let y=this.safeString2(o,"offerId","stopOfferId"),v=this.safeBool(o,"completed",!1),b=this.safeValue(o,"transactions");return this.safeOrder({id:y,info:o,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:v?"closed":"open",symbol:e,type:t,side:i,price:r,amount:s,cost:void 0,filled:void 0,remaining:void 0,average:void 0,fee:void 0,trades:b,clientOrderId:void 0})}async cancelOrder(e,t,i={}){let s=this.safeString(i,"side");if(void 0===s)throw new n.ExchangeError(this.id+' cancelOrder() requires a `side` parameter ("buy" or "sell")');let r=this.safeValue(i,"price");if(void 0===r)throw new n.ExchangeError(this.id+" cancelOrder() requires a `price` parameter (float or string)");await this.loadMarkets();let a=this.market(t),o=a.baseId+"-"+a.quoteId,h=await this.v1_01PrivateDeleteTradingOfferSymbolIdSidePrice(this.extend({symbol:o,id:e,side:s,price:r},i));return this.parseOrder(h)}isFiat(e){return this.safeBool({USD:!0,EUR:!0,PLN:!0},e,!1)}parseDepositAddress(e,t){let i=this.safeString(e,"currency"),s=this.safeString(e,"address");return this.checkAddress(s),{info:e,currency:this.safeCurrencyCode(i,t),network:void 0,address:s,tag:this.safeString(e,"tag")}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={currency:i.id},r=await this.v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(this.extend(s,t)),a=this.safeValue(r,"data"),n=this.safeDict(a,0);return this.parseDepositAddress(n,i)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();let i=await this.v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(t),s=this.safeList(i,"data");return this.parseDepositAddresses(s,e)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),n={source:i,destination:s,currency:e,funds:this.currencyToPrecision(e,t)},o=await this.v1_01PrivatePostBalancesBITBAYBalanceTransferSourceDestination(this.extend(n,r)),h=this.parseTransfer(o,a),d=this.safeValue(this.options,"transfer",{});return this.safeBool(d,"fillResponseFromRequest",!0)&&(h.amount=t),h}parseTransfer(e,t){let i=this.safeString(e,"status"),s=this.safeValue(e,"from",{}),r=this.safeString(s,"id"),a=this.safeValue(e,"to",{}),n=this.safeString(a,"id"),o=this.safeString(s,"currency");return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(o,t),amount:void 0,fromAccount:r,toAccount:n,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return this.safeString({Ok:"ok",Fail:"failed"},e,e)}async withdraw(e,t,i,s,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let n=this.currency(e),o={currency:n.id,amount:t,address:i};this.isFiat(e)?a=await this.v1_01PrivatePostApiPaymentsWithdrawalsFiat(this.extend(o,r)):(void 0!==s&&(o.tag=s),a=await this.v1_01PrivatePostApiPaymentsWithdrawalsCrypto(this.extend(o,r)));let h=this.safeDict(a,"data");return this.parseTransaction(h,n)}parseTransaction(e,t){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,internal:void 0,fee:void 0,info:e}}sign(e,t="public",i="GET",s={},r,a){let n=this.implodeHostname(this.urls.api[t]);if("public"===t){let t=this.omit(s,this.extractParams(e));n+="/"+this.implodeParams(e,s)+".json",Object.keys(t).length&&(n+="?"+this.urlencode(t))}else if("v1_01Public"===t){let t=this.omit(s,this.extractParams(e));n+="/"+this.implodeParams(e,s),Object.keys(t).length&&(n+="?"+this.urlencode(t))}else if("v1_01Private"===t){let t;this.checkRequiredCredentials();let o=this.omit(s,this.extractParams(e));n+="/"+this.implodeParams(e,s);let h=this.milliseconds().toString();"POST"!==i?(Object.keys(o).length&&(n+="?"+this.urlencode(o)),t=this.apiKey+h):void 0===a&&(a=this.json(o),t=this.apiKey+h+a),r={"Request-Timestamp":h,"Operation-Id":this.uuid(),"API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(t),this.encode(this.secret),A.Zf),"Content-Type":"application/json"}}else this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,moment:this.nonce()},s)),r={"Content-Type":"application/x-www-form-urlencoded","API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(a),this.encode(this.secret),A.Zf)};return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0!==o){if("code"in o){let e=this.safeString(o,"code"),t=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions,e,t),new n.ExchangeError(t)}if("status"in o&&"Fail"===this.safeString(o,"status")){let e=this.safeValue(o,"errors"),t=this.id+" "+a;for(let i=0;i<e.length;i++){let s=e[i];this.throwExactlyMatchedException(this.exceptions,s,t)}throw new n.ExchangeError(t)}}}}var sH=i(4587);class sG extends p{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchPosition:!1},urls:{api:{ws:{crypto:"wss://stream.data.alpaca.markets/v1beta2/crypto",trading:"wss://api.alpaca.markets/stream"}},test:{ws:{crypto:"wss://stream.data.alpaca.markets/v1beta2/crypto",trading:"wss://paper-api.alpaca.markets/stream"}}},options:{},streaming:{},exceptions:{ws:{exact:{}}}})}async watchTicker(e,t={}){let i=this.urls.api.ws.crypto;await this.authenticate(i),await this.loadMarkets();let s=this.market(e),r="ticker:"+s.symbol,a={action:"subscribe",quotes:[s.id]};return await this.watch(i,r,this.extend(a,t),r)}handleTicker(e,t){let i=this.parseTicker(t),s=i.symbol;this.tickers[s]=i,e.resolve(this.tickers[s],"ticker:"+s)}parseTicker(e,t){let i=this.safeString(e,"S"),s=this.safeString(e,"t");return this.safeTicker({symbol:this.safeSymbol(i,t),timestamp:this.parse8601(s),datetime:s,high:void 0,low:void 0,bid:this.safeString(e,"bp"),bidVolume:this.safeString(e,"bs"),ask:this.safeString(e,"ap"),askVolume:this.safeString(e,"as"),vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){let a=this.urls.api.ws.crypto;await this.authenticate(a),await this.loadMarkets();let n=this.market(e);e=n.symbol;let o={action:"subscribe",bars:[n.id]},h="ohlcv:"+e,d=await this.watch(a,h,this.extend(o,r),h);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySinceLimit(d,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"S"),s=this.safeSymbol(i),r=this.safeValue(this.ohlcvs,s);if(void 0===r){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);r=new sH.TG(e),this.ohlcvs[s]=r}let a=this.parseOHLCV(t);r.append(a);let n="ohlcv:"+s;e.resolve(r,n)}async watchOrderBook(e,t,i={}){let s=this.urls.api.ws.crypto;await this.authenticate(s),await this.loadMarkets();let r=this.market(e),a="orderbook:"+(e=r.symbol),n={action:"subscribe",orderbooks:[r.id]};return(await this.watch(s,a,this.extend(n,i),a)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"S"),s=this.safeSymbol(i),r=this.safeString(t,"t"),a=this.parse8601(r),n=this.safeBool(t,"r",!1);s in this.orderbooks||(this.orderbooks[s]=this.orderBook());let o=this.orderbooks[s];if(n){let e=this.parseOrderBook(t,s,a,"b","a","p","s");o.reset(e)}else{let e=this.safeList(t,"a",[]),i=this.safeList(t,"b",[]);this.handleDeltas(o.asks,e),this.handleDeltas(o.bids,i),o.timestamp=a,o.datetime=r}let h="orderbook:"+s;this.orderbooks[s]=o,e.resolve(o,h)}handleDelta(e,t){let i=this.parseBidAsk(t,"p","s");e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t,i,s={}){let r=this.urls.api.ws.crypto;await this.authenticate(r),await this.loadMarkets();let a=this.market(e),n="trade:"+(e=a.symbol),o={action:"subscribe",trades:[a.id]},h=await this.watch(r,n,this.extend(o,s),n);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeString(t,"S"),s=this.safeSymbol(i),r=this.safeValue(this.trades,s);if(void 0===r){let e=this.safeInteger(this.options,"tradesLimit",1e3);r=new sH.I3(e),this.trades[s]=r}let a=this.parseTrade(t);r.append(a);let n="trade:"+s;e.resolve(r,n)}async watchMyTrades(e,t,i,s={}){let r=this.urls.api.ws.trading;await this.authenticate(r);let a="myTrades";await this.loadMarkets(),void 0!==e&&(a+=":"+(e=this.symbol(e)));let n=await this.watch(r,a,this.extend({action:"listen",data:{streams:["trade_updates"]}},s),a);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}async watchOrders(e,t,i,s={}){let r=this.urls.api.ws.trading;await this.authenticate(r),await this.loadMarkets();let a="orders";void 0!==e&&(a="orders:"+(e=this.market(e).symbol));let n=await this.watch(r,a,this.extend({action:"listen",data:{streams:["trade_updates"]}},s),a);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleTradeUpdate(e,t){this.handleOrder(e,t),this.handleMyTrade(e,t)}handleOrder(e,t){let i=this.safeValue(t,"data",{}),s=this.safeValue(i,"order",{});if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let r=this.orders,a=this.parseOrder(s);r.append(a);let n="orders";e.resolve(r,n),n="orders:"+a.symbol,e.resolve(r,n)}handleMyTrade(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"event");if("fill"!==s&&"partial_fill"!==s)return;let r=this.safeValue(i,"order",{}),a=this.myTrades;if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.Pt(e)}let n=this.parseMyTrade(r);a.append(n);let o="myTrades:"+n.symbol;e.resolve(a,o),o="myTrades",e.resolve(a,o)}parseMyTrade(e,t){let i=this.safeString(e,"symbol"),s=this.safeString(e,"filled_at"),r=this.safeString(e,"type");return r.indexOf("limit")>=0&&(r="limit"),this.safeTrade({id:this.safeString(e,"i"),info:e,timestamp:this.parse8601(s),datetime:s,symbol:this.safeSymbol(i,void 0,"/"),order:this.safeString(e,"id"),type:r,side:this.safeString(e,"side"),takerOrMaker:"market"===r?"taker":"maker",price:this.safeString(e,"filled_avg_price"),amount:this.safeString(e,"filled_qty"),cost:void 0,fee:void 0},t)}async authenticate(e,t={}){this.checkRequiredCredentials();let i="authenticated",s=this.client(e),r=s.future(i);if(void 0===this.safeValue(s.subscriptions,i)){let t={action:"auth",key:this.apiKey,secret:this.secret};e===this.urls.api.ws.trading&&(t={action:"authenticate",data:{key_id:this.apiKey,secret_key:this.secret}}),this.watch(e,i,t,i,r)}return await r}handleErrorMessage(e,t){let i=this.safeString(t,"code"),s=this.safeValue(t,"msg",{});throw new n.ExchangeError(this.id+" code: "+i+" message: "+s)}handleConnected(e,t){return t}handleCryptoMessage(e,t){for(let i=0;i<t.length;i++){let s=t[i],r=this.safeString(s,"T"),a=this.safeString(s,"msg");if("subscription"===r){this.handleSubscription(e,s);return}if("success"===r&&"connected"===a){this.handleConnected(e,s);return}if("success"===r&&"authenticated"===a){this.handleAuthenticate(e,s);return}let n={error:this.handleErrorMessage,b:this.handleOHLCV,q:this.handleTicker,t:this.handleTrades,o:this.handleOrderBook},o=this.safeValue(n,r);void 0!==o&&o.call(this,e,s)}}handleTradingMessage(e,t){let i=this.safeString(t,"stream"),s={authorization:this.handleAuthenticate,listening:this.handleSubscription,trade_updates:this.handleTradeUpdate},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}handleMessage(e,t){if(Array.isArray(t)){this.handleCryptoMessage(e,t);return}this.handleTradingMessage(e,t)}handleAuthenticate(e,t){let i=this.safeString(t,"T"),s=this.safeValue(t,"data",{}),r=this.safeString(s,"status");if("success"===i||"authorized"===r){e.futures.authenticated.resolve(t);return}throw new n.AuthenticationError(this.id+" failed to authenticate.")}handleSubscription(e,t){return t}}class sU extends m.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!1,watchTrades:!0,watchTradesForSymbols:!0},urls:{api:{ws:{public:"wss://ascendex.com:443/api/pro/v2/stream",private:"wss://ascendex.com:443/{accountGroup}/api/pro/v2/stream"}},test:{ws:{public:"wss://api-test.ascendex-sandbox.com:443/api/pro/v2/stream",private:"wss://api-test.ascendex-sandbox.com:443/{accountGroup}/api/pro/v2/stream"}}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,categoriesAccount:{cash:"spot",futures:"swap",margin:"margin"}}})}async watchPublic(e,t={}){let i=this.urls.api.ws.public,s={id:this.nonce().toString(),op:"sub"},r=this.extend(s,t);return await this.watch(i,e,r,e)}async watchPublicMultiple(e,t={}){let i=this.urls.api.ws.public,s={id:this.nonce().toString(),op:"sub"},r=this.extend(s,t);return await this.watchMultiple(i,e,r,e)}async watchPrivate(e,t,i={}){await this.loadAccounts();let s=this.safeString(this.options,"account-group"),r=this.urls.api.ws.private;r=this.implodeParams(r,{accountGroup:s});let a={id:this.nonce().toString(),op:"sub",ch:e},n=this.extend(a,i);return await this.authenticate(r,i),await this.watch(r,t,n,e)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol,(void 0===s||s>1440)&&(s=100);let n="bar:"+this.safeString(this.timeframes,t,t)+":"+a.id;r={ch:n};let o=await this.watchPublic(n,r);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"s"),s=this.safeSymbol(i),r=this.safeString(t,"m"),a=this.safeValue(t,"data",{}),n=this.safeString(a,"i"),o=r+":"+n+":"+i,h=this.findTimeframe(n),d=this.market(s),l=this.parseOHLCV(t,d);this.ohlcvs[s]=this.safeValue(this.ohlcvs,s,{});let c=this.safeValue(this.ohlcvs[s],h);if(void 0===c){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new sH.TG(e),this.ohlcvs[s][h]=c}return c.append(l),e.resolve(c,o),t}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets();let r=[],a=[];if(void 0!==(e=this.marketSymbols(e,void 0,!1,!0,!0)))for(let t=0;t<e.length;t++){let i=this.market(e[t]);r.push(i.id),a.push("trades:"+i.id)}let n="trades:"+r.join(",");s=this.extend(s,{ch:n});let o=await this.watchPublicMultiple(a,s);if(this.newUpdates){let e=this.safeValue(o,0),t=this.safeString(e,"symbol");i=o.getLimit(t,i)}return this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeString(t,"m")+":"+i,a=this.market(s),n=this.safeValue(t,"data");void 0===n&&(n=[]);let o=this.parseTrades(n,a),h=this.safeValue(this.trades,s);if(void 0===h){let e=this.safeInteger(this.options,"tradesLimit",1e3);h=new sH.I3(e)}for(let e=0;e<o.length;e++)h.append(o[e]);this.trades[s]=h,e.resolve(h,r)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s="depth:"+this.market(e).id;return i=this.extend(i,{ch:s}),(await this.watchPublic(s,i)).limit()}async watchOrderBookSnapshot(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="depth-snapshot",a=r+":"+s.id;return i=this.extend(i,{action:r,args:{symbol:s.id},op:"req"}),(await this.watchPublic(a,i)).limit()}async fetchOrderBookSnapshot(e,t,i={}){let s=await this.fetchRestOrderBookSafe(e,t,i);e in this.orderbooks||(this.orderbooks[e]=this.orderBook());let r=this.orderbooks[e];return r.reset(s),r}handleOrderBookSnapshot(e,t){let i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeString(t,"m")+":"+s,a=this.orderbooks[s],n=this.safeValue(t,"data"),o=this.parseOrderBook(n,s);o.nonce=this.safeInteger(n,"seqnum"),a.reset(o);let h=a.cache;for(let t=0;t<h.length;t++){let i=h[t];this.handleOrderBookMessage(e,i,a)}this.orderbooks[s]=a,e.resolve(a,r)}handleOrderBook(e,t){let i=this.safeString(t,"m"),s=this.safeString(t,"symbol"),r=this.safeSymbol(s);r in this.orderbooks||(this.orderbooks[r]=this.orderBook({}));let a=this.orderbooks[r];void 0===a.nonce?a.cache.push(t):(this.handleOrderBookMessage(e,t,a),e.resolve(a,i+":"+s))}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){let s=this.safeValue(t,"data",{}),r=this.safeInteger(s,"seqnum");if(r>i.nonce){let e=this.safeValue(s,"asks",[]),t=this.safeValue(s,"bids",[]);this.handleDeltas(i.asks,e),this.handleDeltas(i.bids,t),i.nonce=r;let a=this.safeInteger(s,"ts");i.timestamp=a,i.datetime=this.iso8601(a)}return i}async watchBalance(e={}){let t,i;await this.loadMarkets();let[s,r]=this.handleMarketTypeAndParams("watchBalance",void 0,e);if("spot"===s||"margin"===s){let e=this.safeValue(this.options,"accountCategories",{}),r=this.safeString(e,s,"cash");t="order:"+(r=r.toUpperCase()),i="balance:"+s}else t="futures-account-update",i="balance:swap";return await this.watchPrivate(t,i,r)}handleBalance(e,t){let i,s;let r=this.safeString(t,"m");if("order"===r||"futures-order"===r){let e=this.safeValue(t,"data"),r=this.safeString(e,"s"),a=this.safeMarket(r),n=this.account();n.free=this.safeString(e,"bab"),n.total=this.safeString(e,"btb");let o=this.account();o.free=this.safeString(e,"qab"),o.total=this.safeString(e,"qtb"),s=a.contract?"swap":a.type,(i=this.safeValue(this.balance,s,{}))[a.base]=n,i[a.quote]=o}else{let e;let r=this.safeStringLower2(t,"ac","at"),a=this.safeValue(this.options,"categoriesAccount");s=this.safeString(a,r,"spot"),i=this.safeValue(this.balance,s,{});let n=this.safeValue(t,"data");e=void 0===n?this.safeValue(t,"col"):[n];for(let t=0;t<e.length;t++){let s=e[t],r=this.safeCurrencyCode(this.safeString(s,"a")),a=this.account();a.free=this.safeString(s,"ab"),a.total=this.safeString2(s,"tb","b"),i[r]=a}}let a="balance:"+s;e.resolve(this.safeBalance(i),a)}async watchOrders(e,t,i,s={}){let r,a,n;await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol);let[o,h]=this.handleMarketTypeAndParams("watchOrders",r,s);if("spot"!==o&&"margin"!==o)n="futures-order",a="order:FUTURES";else{let e=this.safeValue(this.options,"accountCategories",{}),t=this.safeString(e,o,"cash");n=a="order:"+(t=t.toUpperCase())}void 0!==e&&(a=a+":"+e);let d=await this.watchPrivate(n,a,h);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}handleOrder(e,t){let i="order:"+this.safeString(t,"ac"),s=this.safeValue(t,"data",t),r=this.parseWsOrder(s);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let a=this.orders;a.append(r);let n=i+":"+r.symbol;e.resolve(a,n),e.resolve(a,i)}parseWsOrder(e,t){let i;let s=this.parseOrderStatus(this.safeString(e,"st")),r=this.safeString(e,"s"),a=this.safeInteger(e,"t"),n=this.safeSymbol(r,t,"/"),o=this.safeInteger(e,"t"),h=this.safeString(e,"p"),d=this.safeString(e,"q"),l=this.safeString(e,"ap"),c=this.safeString(e,"cfq"),u=this.safeString(e,"orderId"),f=this.safeStringLower(e,"ot"),p=this.safeStringLower(e,"sd"),m=this.safeNumber(e,"cf");if(void 0!==m){let t=this.safeString(e,"fa");i={cost:m,currency:this.safeCurrencyCode(t)}}let g=this.parseNumber(this.omitZero(this.safeString(e,"sp")));return this.safeOrder({info:e,id:u,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:o,symbol:n,type:f,timeInForce:void 0,postOnly:void 0,side:p,price:h,stopPrice:g,triggerPrice:g,amount:d,cost:void 0,average:l,filled:c,remaining:void 0,status:s,fee:i,trades:void 0},t)}handleErrorMessage(e,t){let i=this.safeInteger(t,"code");try{if(void 0!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);let s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleAuthenticate(e,t){e.resolve(t,"authenticated")}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i=this.safeString(t,"m"),s={ping:this.handlePing,auth:this.handleAuthenticate,sub:this.handleSubscriptionStatus,depth:this.handleOrderBook,"depth-snapshot":this.handleOrderBookSnapshot,trades:this.handleTrades,bar:this.handleOHLCV,balance:this.handleBalance,"futures-account-update":this.handleBalance},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t),("order"===i||"futures-order"===i)&&(this.handleOrder(e,t),"order"===i&&this.handleBalance(e,t))}handleSubscriptionStatus(e,t){let i=this.safeString(t,"ch","");return i.indexOf("depth")>-1&&!(i.indexOf("depth-snapshot")>-1)&&this.handleOrderBookSubscription(e,t),t}handleOrderBookSubscription(e,t){let i=this.safeString(t,"ch").split(":")[1],s=this.safeMarket(i),r=s.symbol;r in this.orderbooks&&delete this.orderbooks[r],this.orderbooks[r]=this.orderBook({}),"swap"===this.options.defaultType||s.contract?this.spawn(this.fetchOrderBookSnapshot,r):this.spawn(this.watchOrderBookSnapshot,r)}async pong(e,t){try{await e.send({op:"pong",hp:this.safeInteger(t,"hp")})}catch(i){let t=new n.NetworkError(this.id+" handlePing failed with error "+this.json(i));e.reset(t)}}handlePing(e,t){this.spawn(this.pong,e,t)}async authenticate(e,t={}){this.checkRequiredCredentials();let i="authenticated",s=this.client(e),r=this.safeValue(s.subscriptions,i);if(void 0===r){let a=this.milliseconds().toString(),n=e.split("/"),o=n.length,h=this.safeString(n,o-1),d=this.safeString(n,o-2),c=this.base64ToBinary(this.secret),u=this.hmac(this.encode(a+"+"+d+"/"+h),c,l.s,"base64"),f={op:"auth",id:this.nonce().toString(),t:a,key:this.apiKey,sig:u};r=await this.watch(e,i,this.extend(f,t),i),s.subscriptions[i]=r}return r}}class sW extends g.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!1,watchOrderBook:!0,watchBalance:!0,watchOrders:!0,watchOHLCV:!0,watchMyTrades:!1,createOrderWs:!0,cancelOrderWs:!0,fetchOpenOrdersWs:!0,cancelAllOrdersWs:!0},urls:{api:{ws:{public:"wss://api.hitbtc.com/api/3/ws/public",private:"wss://api.hitbtc.com/api/3/ws/trading"}},test:{ws:{public:"wss://api.demo.hitbtc.com/api/3/ws/public",private:"wss://api.demo.hitbtc.com/api/3/ws/trading"}}},options:{tradesLimit:1e3,watchTicker:{method:"ticker/{speed}"},watchTickers:{method:"ticker/{speed}"},watchBidsAsks:{method:"orderbook/top/{speed}"},watchOrderBook:{method:"orderbook/full"}},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"D7","1M":"1M"},streaming:{keepAlive:4e3}})}async authenticate(){this.checkRequiredCredentials();let e=this.urls.api.ws.private,t="authenticated",i=this.client(e),s=i.future(t);if(void 0===this.safeValue(i.subscriptions,t)){let i=this.milliseconds(),s=this.hmac(this.encode(this.numberToString(i)),this.encode(this.secret),l.s,"hex"),r={method:"login",params:{type:"HS256",api_key:this.apiKey,timestamp:i,signature:s}};this.watch(e,t,r,t)}return await s}async subscribePublic(e,t,i,s={}){await this.loadMarkets(),i=this.marketSymbols(i);let r=e.indexOf("batch")>=0,a=this.urls.api.ws.public,n=[];if(void 0===i||r)n.push(t);else for(let e=0;e<i.length;e++)n.push(t+"::"+i[e]);let o={method:"subscribe",id:this.nonce(),ch:e},h=this.extend(o,s);return await this.watchMultiple(a,n,h,n)}async subscribePrivate(e,t,i={}){await this.loadMarkets(),await this.authenticate();let s=this.urls.api.ws.private,r=e.split("_subscribe"),a=this.safeString(r,0);void 0!==t&&(a=a+"::"+t);let n={method:e,params:i,id:this.nonce()};return await this.watch(s,a,n,a)}async tradeRequest(e,t={}){await this.loadMarkets(),await this.authenticate();let i=this.urls.api.ws.private,s=this.nonce().toString();return await this.watch(i,s,{method:e,params:t,id:s},s)}async watchOrderBook(e,t,i={}){let s=this.safeValue(this.options,"watchOrderBook"),r=this.safeString(s,"method","orderbook/full"),a=this.safeString2(i,"method","defaultMethod",r),n=this.safeString(i,"depth","20"),o=this.safeString(i,"depth","100");"orderbook/{depth}/{speed}"===a?a="orderbook/D"+n+"/"+o+"ms":"orderbook/{depth}/{speed}/batch"===a&&(a="orderbook/D"+n+"/"+o+"ms/batch");let h={params:{symbols:[this.market(e).id]}};return(await this.subscribePublic(a,"orderbooks",[e],this.deepExtend(h,i))).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"snapshot"),s=this.safeDict(t,"update"),r=i||s,a=i?"snapshot":"update",n=Object.keys(r);for(let t=0;t<n.length;t++){let i=n[t],s=this.safeMarket(i).symbol,o=r[i],h="orderbooks::"+s;if(!(s in this.orderbooks)){let t=this.safeDict(e.subscriptions,h,{}),i=this.safeInteger(t,"limit");this.orderbooks[s]=this.orderBook({},i)}let d=this.orderbooks[s],l=this.safeInteger(o,"t"),c=this.safeInteger(o,"s");if("snapshot"===a){let e=this.parseOrderBook(o,s,l,"b","a");d.reset(e)}else{let e=this.safeList(o,"a",[]),t=this.safeList(o,"b",[]);this.handleDeltas(d.asks,e),this.handleDeltas(d.bids,t)}d.timestamp=l,d.datetime=this.iso8601(l),d.nonce=c,d.symbol=s,this.orderbooks[s]=d,e.resolve(d,h)}}handleDelta(e,t){let i=this.safeNumber(t,0),s=this.safeNumber(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTicker(e,t={}){let i=await this.watchTickers([e],t);return this.safeValue(i,e)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=this.safeValue(this.options,"watchTicker"),s=this.safeString(i,"method","ticker/{speed}/batch"),r=this.safeString2(t,"method","defaultMethod",s),a=this.safeString(t,"speed","1s"),n=this.implodeParams(r,{speed:a});t=this.omit(t,["method","speed"]);let o=[];if(void 0===e)o.push("*");else for(let t=0;t<e.length;t++){let i=this.marketId(e[t]);o.push(i)}let h=await this.subscribePublic(n,"tickers",e,this.deepExtend({params:{symbols:o}},t));if(this.newUpdates&&!Array.isArray(h)){let e={};return e[h.symbol]=h,e}return this.filterByArray(h,"symbol",e)}handleTicker(e,t){let i=this.safeValue(t,"data",{}),s=Object.keys(i),r=[],a="tickers";for(let t=0;t<s.length;t++){let n=s[t],o=this.safeMarket(n),h=o.symbol,d=this.parseWsTicker(i[n],o);this.tickers[h]=d,r.push(d);let l=a+"::"+h;e.resolve(d,l)}e.resolve(r,a)}parseWsTicker(e,t){let i=this.safeInteger(e,"t"),s=this.safeSymbol(void 0,t),r=this.safeString(e,"c");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:this.safeString(e,"b"),bidVolume:this.safeString(e,"B"),ask:this.safeString(e,"a"),askVolume:this.safeString(e,"A"),vwap:void 0,open:this.safeString(e,"o"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"v"),quoteVolume:this.safeString(e,"q"),info:e},t)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=this.safeValue(this.options,"watchBidsAsks"),s=this.safeString(i,"method","orderbook/top/{speed}/batch"),r=this.safeString2(t,"method","defaultMethod",s),a=this.safeString(t,"speed","100ms"),n=this.implodeParams(r,{speed:a});t=this.omit(t,["method","speed"]);let o=this.marketIds(e),h=await this.subscribePublic(n,"bidask",e,this.deepExtend({params:{symbols:o}},t));if(this.newUpdates&&!Array.isArray(h)){let e={};return e[h.symbol]=h,e}return this.filterByArray(h,"symbol",e)}handleBidAsk(e,t){let i=this.safeDict(t,"data",{}),s=Object.keys(i),r=[],a="bidask";for(let t=0;t<s.length;t++){let n=s[t],o=this.safeMarket(n),h=o.symbol,d=this.parseWsBidAsk(i[n],o);this.bidsasks[h]=d,r.push(d);let l=a+"::"+h;e.resolve(d,l)}e.resolve(r,a)}parseWsBidAsk(e,t){let i=this.safeInteger(e,"t");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),ask:this.safeString(e,"a"),askVolume:this.safeString(e,"A"),bid:this.safeString(e,"b"),bidVolume:this.safeString(e,"B"),info:e},t)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r={params:{symbols:[this.market(e).id]}};void 0!==i&&(r.limit=i);let a=await this.subscribePublic("trades","trades",[e],this.deepExtend(r,s));return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp")}handleTrades(e,t){let i=this.safeValue2(t,"snapshot","update",{}),s=Object.keys(i);for(let t=0;t<s.length;t++){let r=s[t],a=this.safeMarket(r),n=this.safeInteger(this.options,"tradesLimit",1e3),o=a.symbol,h=this.safeValue(this.trades,o);void 0===h&&(h=new sH.I3(n),this.trades[o]=h);let d=this.parseWsTrades(i[r],a);for(let e=0;e<d.length;e++)h.append(d[e]);let l="trades::"+o;e.resolve(h,l)}return t}parseWsTrades(e,t,i,s,r={}){e=this.toArray(e);let a=[];for(let i=0;i<e.length;i++){let s=this.extend(this.parseWsTrade(e[i],t),r);a.push(s)}a=this.sortBy2(a,"timestamp","id");let n=this.safeString(t,"symbol");return this.filterBySymbolSinceLimit(a,n,i,s)}parseWsTrade(e,t){let i=this.safeInteger(e,"t");return this.safeTrade({info:e,id:this.safeString(e,"i"),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:this.safeString(t,"symbol"),type:void 0,side:this.safeString(e,"s"),takerOrMaker:void 0,price:this.safeString(e,"p"),amount:this.safeString(e,"q"),cost:void 0,fee:void 0},t)}async watchOHLCV(e,t="1m",i,s,r={}){let a=this.safeString(this.timeframes,t,t),n={params:{symbols:[this.market(e).id]}};void 0!==s&&(n.params.limit=s);let o=await this.subscribePublic("candles/"+a,"candles",[e],this.deepExtend(n,r));return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0)}handleOHLCV(e,t){let i=this.safeValue2(t,"snapshot","update",{}),s=Object.keys(i),r=this.safeString(t,"ch").split("/"),a=this.safeString(r,1),n=this.findTimeframe(a);for(let t=0;t<s.length;t++){let r=s[t],a=this.safeMarket(r),o=a.symbol;this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let h=this.safeValue(this.ohlcvs[o],n);if(void 0===h){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new sH.TG(e),this.ohlcvs[o][n]=h}let d=this.parseWsOHLCVs(i[r],a);for(let e=0;e<d.length;e++)h.append(d[e]);let l="candles::"+o;e.resolve(h,l)}return t}parseWsOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async watchOrders(e,t,i,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(a=this.market(e)),[r,s]=this.handleMarketTypeAndParams("watchOrders",a,s);let n=this.getSupportedMapping(r,{spot:"spot_subscribe",margin:"margin_subscribe",swap:"futures_subscribe",future:"futures_subscribe"}),o=await this.subscribePrivate(n,e,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp")}handleOrder(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit");this.orders=new sH.Pt(e)}let i=this.safeValue(t,"params",[]);if(Array.isArray(i))for(let s=0;s<i.length;s++){let r=i[s];this.handleOrderHelper(e,t,r)}else this.handleOrderHelper(e,t,i);return t}handleOrderHelper(e,t,i){let s=this.orders,r=this.safeStringLower2(i,"instrument","symbol"),a=this.safeString(t,"method").split("_order"),n=this.safeString(a,0),o=this.safeSymbol(r),h=this.parseOrder(i);s.append(h),e.resolve(s,n),e.resolve(s,n+"::"+o)}parseWsOrderTrade(e,t){let i=this.safeInteger(e,"created_at"),s=this.safeString(e,"symbol");return this.safeTrade({info:e,id:this.safeString(e,"trade_id"),order:this.safeString(e,"id"),timestamp:i,datetime:this.iso8601(i),symbol:this.safeMarket(s,t),type:void 0,side:this.safeString(e,"side"),takerOrMaker:this.safeString(e,"trade_taker"),price:this.safeString(e,"trade_price"),amount:this.safeString(e,"trade_quantity"),cost:void 0,fee:{cost:this.safeString(e,"trade_fee"),currency:void 0,rate:void 0}},t)}parseWsOrder(e,t){let i,s;let r=this.safeString(e,"created_at"),a=this.safeString(e,"symbol");t=this.safeMarket(a,t),void 0!==this.safeString(e,"trade_id")&&(i=[this.parseWsOrderTrade(e,t)]);let n=this.safeString(e,"status"),o=this.safeString(e,"report_type");return s="canceled"===o?this.parseOrderStatus(o):this.parseOrderStatus(n),this.safeOrder({info:e,id:this.safeString(e,"id"),clientOrderId:this.safeString(e,"client_order_id"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:t.symbol,price:this.safeString(e,"price"),amount:this.safeString(e,"quantity"),type:this.safeString(e,"type"),side:this.safeStringUpper(e,"side"),timeInForce:this.safeString(e,"time_in_force"),postOnly:this.safeString(e,"post_only"),reduceOnly:this.safeValue(e,"reduce_only"),filled:void 0,remaining:void 0,cost:void 0,status:s,average:void 0,trades:i,fee:void 0},t)}async watchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let i=this.getSupportedMapping(t,{spot:"spot_balance_subscribe",swap:"futures_balance_subscribe",future:"futures_balance_subscribe"}),s=this.safeString(e,"mode","batches");return e=this.omit(e,"mode"),await this.subscribePrivate(i,void 0,this.extend({mode:s},e))}async createOrderWs(e,t,i,s,r,a={}){let n,o,h;await this.loadMarkets();let d=this.market(e);return[o,a]=this.handleMarketTypeAndParams("createOrder",d,a),([h,a]=this.handleMarginModeAndParams("createOrder",a),[n,a]=this.createOrderRequest(d,o,t,i,s,r,h,a),n=this.extend(n,a),"swap"===o)?await this.tradeRequest("futures_new_order",n):"margin"===o||void 0!==h?await this.tradeRequest("margin_new_order",n):await this.tradeRequest("spot_new_order",n)}async cancelOrderWs(e,t,i={}){let s,r;await this.loadMarkets();let a={client_order_id:e};void 0!==t&&(s=this.market(t)),[r,i]=this.handleMarketTypeAndParams("cancelOrderWs",s,i);let[n,o]=this.handleMarginModeAndParams("cancelOrderWs",i);return(a=this.extend(a,o),"swap"===r)?await this.tradeRequest("futures_cancel_order",a):"margin"===r||void 0!==n?await this.tradeRequest("margin_cancel_order",a):await this.tradeRequest("spot_cancel_order",a)}async cancelAllOrdersWs(e,t={}){let i,s,r;if(await this.loadMarkets(),void 0!==e&&(i=this.market(e)),[s,t]=this.handleMarketTypeAndParams("cancelAllOrdersWs",i,t),[r,t]=this.handleMarginModeAndParams("cancelAllOrdersWs",t),"swap"===s)return await this.tradeRequest("futures_cancel_orders",t);if("margin"!==s&&void 0===r)return await this.tradeRequest("spot_cancel_orders",t);throw new n.NotSupported(this.id+" cancelAllOrdersWs is not supported for margin orders")}async fetchOpenOrdersWs(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o={};return void 0!==e&&(r=this.market(e),o.symbol=r.id),[a,s]=this.handleMarketTypeAndParams("fetchOpenOrdersWs",r,s),([n,s]=this.handleMarginModeAndParams("fetchOpenOrdersWs",s),"swap"===a)?await this.tradeRequest("futures_get_orders",o):"margin"===a||void 0!==n?await this.tradeRequest("margin_get_orders",o):await this.tradeRequest("spot_get_orders",o)}handleBalance(e,t){let i=this.safeString(t,"method"),s=this.safeValue(t,"params"),r=this.parseBalance(s);this.balance=this.deepExtend(this.balance,r),e.resolve(this.balance,i)}handleNotification(e,t){return t}handleOrderRequest(e,t){let i=this.safeString(t,"id"),s=this.safeValue(t,"result",{});if(Array.isArray(s)){let t=[];for(let e=0;e<s.length;e++){let i=this.parseWsOrder(s[e]);t.push(i)}e.resolve(t,i)}else{let t=this.parseWsOrder(s);e.resolve(t,i)}return t}handleMessage(e,t){if(this.handleError(e,t))return;let i=this.safeString2(t,"ch","method");if(void 0!==i){let s=i.split("/");if("orderbook"===(i=this.safeString(s,0))){let e=this.safeString(s,1);void 0!==e&&"top"===e&&(i="orderbook/top")}let r={candles:this.handleOHLCV,ticker:this.handleTicker,trades:this.handleTrades,orderbook:this.handleOrderBook,"orderbook/top":this.handleBidAsk,spot_order:this.handleOrder,spot_orders:this.handleOrder,margin_order:this.handleOrder,margin_orders:this.handleOrder,futures_order:this.handleOrder,futures_orders:this.handleOrder,spot_balance:this.handleBalance,futures_balance:this.handleBalance},a=this.safeValue(r,i);void 0!==a&&a.call(this,e,t)}else{let i=this.safeValue(t,"result");if(void 0!==this.safeString(i,"client_order_id")&&this.handleOrderRequest(e,t),!0!==i||"id"in t||this.handleAuthenticate(e,t),Array.isArray(i)){let s=this.safeValue(i,0,{});(0===i.length||"client_order_id"in s)&&this.handleOrderRequest(e,t)}}}handleAuthenticate(e,t){let i=this.safeValue(t,"result"),s="authenticated";if(i)this.safeValue(e.futures,s).resolve(!0);else{let i=new n.AuthenticationError(this.id+" "+this.json(t));e.reject(i,s),s in e.subscriptions&&delete e.subscriptions[s]}return t}handleError(e,t){let i=this.safeValue(t,"error");if(void 0!==i)try{let e=this.safeValue(i,"code"),t=this.safeString(i,"message"),s=this.safeString(i,"description"),r=this.id+" "+s;throw this.throwExactlyMatchedException(this.exceptions.exact,e,r),this.throwBroadlyMatchedException(this.exceptions.broad,t,r),new n.ExchangeError(r)}catch(i){if(i instanceof n.AuthenticationError){let t="authenticated";e.reject(i,t),t in e.subscriptions&&delete e.subscriptions[t]}else{let s=this.safeString(t,"id");e.reject(i,s)}return!0}}}class sj extends sW{describe(){let e=this.getDescribeForExtendedWsExchange(new y,new g.A,super.describe());return this.deepExtend(e,{id:"bequant",name:"Bequant",countries:["MT"],pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg",api:{public:"https://api.bequant.io/api/3",private:"https://api.bequant.io/api/3",ws:{public:"wss://api.bequant.io/api/3/ws/public",private:"wss://api.bequant.io/api/3/ws/trading"}},www:"https://bequant.io",doc:["https://api.bequant.io/"],fees:["https://bequant.io/fees-and-limits"],referral:"https://bequant.io"}})}}var sK=i(2748);class sz extends sK.A{describe(){let e=new O().describe(),t=this.deepExtend(super.describe(),e);return this.deepExtend(t,{id:"binancecoinm",name:"Binance COIN-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg",doc:"https://developers.binance.com/en"},options:{fetchMarkets:["inverse"],defaultSubType:"inverse"}})}}class sY extends sK.A{describe(){let e=new T().describe(),t=super.describeData(),i=this.deepExtend(e,t);return this.deepExtend(i,{id:"binanceus",name:"Binance US",countries:["US"],certified:!1,urls:{logo:"https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg",api:{ws:{spot:"wss://stream.binance.us:9443/ws"},web:"https://www.binance.us",sapi:"https://api.binance.us/sapi/v1",wapi:"https://api.binance.us/wapi/v3",public:"https://api.binance.us/api/v1",private:"https://api.binance.us/api/v3",v3:"https://api.binance.us/api/v3",v1:"https://api.binance.us/api/v1"},www:"https://www.binance.us",referral:"https://www.binance.us/?ref=35005074",doc:"https://github.com/binance-us/binance-official-api-docs",fees:"https://www.binance.us/en/fee/schedule"},options:{fetchCurrencies:!1,quoteOrderQty:!1,defaultType:"spot",fetchMarkets:["spot"]}})}}class sX extends sK.A{describe(){return this.deepExtend(super.describe(),{id:"binanceusdm",name:"Binance USDⓈ-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg",doc:"https://developers.binance.com/en"},options:{fetchMarkets:["linear"],defaultSubType:"linear"},exceptions:{exact:{"-5021":n.InvalidOrder,"-5022":n.InvalidOrder,"-5028":n.InvalidOrder}}})}}class s$ extends x.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTrades:!0,watchTradesForSymbols:!1,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0,watchOrders:!0,watchMyTrades:!0,watchTicker:!0,watchTickers:!0,watchBalance:!0},urls:{api:{ws:{spot:"wss://open-api-ws.bingx.com/market",linear:"wss://open-api-swap.bingx.com/swap-market",inverse:"wss://open-api-cswap-ws.bingx.com/market"}}},options:{listenKeyRefreshRate:354e4,ws:{gunzip:!0},swap:{timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"}},spot:{timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","1d":"1day"}},watchBalance:{fetchBalanceSnapshot:!0,awaitBalanceSnapshot:!1},watchOrderBook:{depth:100,interval:500},watchOrderBookForSymbols:{depth:100,interval:500}},streaming:{keepAlive:18e5}})}async watchTicker(e,t={}){let i,s,r;await this.loadMarkets();let a=this.market(e);[i,t]=this.handleMarketTypeAndParams("watchTicker",a,t),[s,t]=this.handleSubTypeAndParams("watchTicker",a,t,"linear"),r="swap"===i?this.safeString(this.urls.api.ws,s):this.safeString(this.urls.api.ws,i);let n=a.id+"@ticker",o=this.getMessageHash("ticker",a.symbol),h={id:this.uuid(),dataType:n};return"swap"===i&&(h.reqType="sub"),await this.watch(r,o,this.extend(h,t),n)}handleTicker(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"s"),r=e.url.indexOf("swap")>=0,a=this.safeMarket(s,void 0,void 0,r?"swap":"spot"),n=a.symbol,o=this.parseWsTicker(i,a);this.tickers[n]=o,e.resolve(o,this.getMessageHash("ticker",n)),"all@ticker"===this.safeString(t,"dataType")&&e.resolve(o,this.getMessageHash("ticker"))}parseWsTicker(e,t){let i=this.safeInteger(e,"C"),s=this.safeString(e,"s");t=this.safeMarket(s,t);let r=this.safeString(e,"c");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:this.safeString(e,"B"),bidVolume:this.safeString(e,"b"),ask:this.safeString(e,"A"),askVolume:this.safeString(e,"a"),vwap:void 0,open:this.safeString(e,"o"),close:r,last:r,previousClose:void 0,change:this.safeString(e,"p"),percentage:void 0,average:void 0,baseVolume:this.safeString(e,"v"),quoteVolume:this.safeString(e,"q"),info:e},t)}async watchTickers(e,t={}){let i,s,r;await this.loadMarkets();let a=void 0!==(e=this.marketSymbols(e,void 0,!0,!0,!1));if(a&&(i=this.market(e[0])),[s,t]=this.handleMarketTypeAndParams("watchTickers",i,t),[r,t]=this.handleSubTypeAndParams("watchTickers",i,t,"linear"),"spot"===s)throw new n.NotSupported(this.id+" watchTickers is not supported for spot markets yet");if("inverse"===r)throw new n.NotSupported(this.id+" watchTickers is not supported for inverse markets yet");let o=[];if(a)for(let t=0;t<e.length;t++){let i=e[t],s=this.market(i);o.push(this.getMessageHash("ticker",s.symbol))}else o.push(this.getMessageHash("ticker"));let h=this.safeString(this.urls.api.ws,r),d={id:this.uuid(),dataType:"all@ticker"};"swap"===s&&(d.reqType="sub");let l=await this.watchMultiple(h,o,this.deepExtend(d,t),["all@ticker"]);if(this.newUpdates){let e={};return e[l.symbol]=l,e}return this.tickers}async watchOrderBookForSymbols(e,t,i={}){let s,r,a,o;let h=void 0!==(e=this.marketSymbols(e,void 0,!0,!0,!1));if(h&&(s=this.market(e[0])),[r,i]=this.handleMarketTypeAndParams("watchOrderBookForSymbols",s,i),[a,i]=this.handleSubTypeAndParams("watchOrderBookForSymbols",s,i,"linear"),"spot"===r)throw new n.NotSupported(this.id+" watchOrderBookForSymbols is not supported for spot markets yet");if("inverse"===a)throw new n.NotSupported(this.id+" watchOrderBookForSymbols is not supported for inverse markets yet");t=this.getOrderBookLimitByMarketType(r,t),[o,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","interval",500),this.checkRequiredArgument("watchOrderBookForSymbols",o,"interval",[100,200,500,1e3]);let d="all@"+("depth"+t.toString()+"@")+o.toString()+"ms",l=[];if(h)for(let t=0;t<e.length;t++){let i=e[t],s=this.market(i);l.push(this.getMessageHash("orderbook",s.symbol))}else l.push(this.getMessageHash("orderbook"));let c=this.safeString(this.urls.api.ws,a),u={id:this.uuid(),dataType:d};"swap"===r&&(u.reqType="sub");let f={symbols:e,limit:t,interval:o,params:i};return(await this.watchMultiple(c,l,this.deepExtend(u,i),[d],f)).limit()}async watchOHLCVForSymbols(e,t,i,s={}){let r,a,o,h;let d=e.length;if(0!==d&&!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" watchOHLCVForSymbols() requires a an array like  [['BTC/USDT:USDT', '1m'], ['LTC/USDT:USDT', '5m']]");await this.loadMarkets();let l=[];if(0!==d){let t=this.getListFromObjectValues(e,0);t=this.marketSymbols(t,void 0,!0,!0,!1),h=this.market(t[0])}if([r,s]=this.handleMarketTypeAndParams("watchOHLCVForSymbols",h,s),[a,s]=this.handleSubTypeAndParams("watchOHLCVForSymbols",h,s,"linear"),"spot"===r)throw new n.NotSupported(this.id+" watchOHLCVForSymbols is not supported for spot markets yet");if("inverse"===a)throw new n.NotSupported(this.id+" watchOHLCVForSymbols is not supported for inverse markets yet");let c=this.safeDict(this.options,r),u=this.safeDict(c,"timeframes",{});for(let t=0;t<e.length;t++){let i=e[t],s=i[0],r=i[1],a=this.market(s),h=this.safeString(u,r,r);if(void 0===o)o=h;else if(o!==h)throw new n.BadRequest(this.id+" watchOHLCVForSymbols requires all timeframes to be the same");l.push(this.getMessageHash("ohlcv",a.symbol,o))}let f="all@kline_"+o,p=this.safeString(this.urls.api.ws,a),m={id:this.uuid(),dataType:f};"swap"===r&&(m.reqType="sub");let g={limit:i,params:s},[y,v,b]=await this.watchMultiple(p,l,m,[f],g);this.newUpdates&&(i=b.getLimit(y,i));let w=this.filterBySinceLimit(b,t,i,0,!0);return this.createOHLCVObject(y,v,w)}getOrderBookLimitByMarketType(e,t){return void 0===t?t=100:"swap"===e||"future"===e?t=this.findNearestCeiling([5,10,20,50,100],t):"spot"===e&&(t=this.findNearestCeiling([20,100],t)),t}getMessageHash(e,t,i){let s=e;return void 0!==t?s+="::"+t:s+="s",void 0!==i&&(s+="::"+i),s}async watchTrades(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o=this.market(e);e=o.symbol,[r,s]=this.handleMarketTypeAndParams("watchTrades",o,s),[a,s]=this.handleSubTypeAndParams("watchTrades",o,s,"linear"),n="swap"===r?this.safeString(this.urls.api.ws,a):this.safeString(this.urls.api.ws,r);let h=o.id+"@trade",d="trade::"+e,l={id:this.uuid(),dataType:h};"swap"===r&&(l.reqType="sub");let c=await this.watch(n,d,this.extend(l,s),d);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleTrades(e,t){let i;let s=this.safeValue(t,"data",[]),r=this.safeString(t,"dataType").split("@")[0],a=e.url.indexOf("swap")>=0,n=this.safeMarket(r,void 0,void 0,a?"swap":"spot"),o=n.symbol,h="trade::"+o;i=Array.isArray(s)?this.parseTrades(s,n):[this.parseTrade(s,n)];let d=this.safeValue(this.trades,o);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.I3(e),this.trades[o]=d}for(let e=0;e<i.length;e++)d.append(i[e]);e.resolve(d,h)}async watchOrderBook(e,t,i={}){let s,r,a,n;await this.loadMarkets();let o=this.market(e);[s,i]=this.handleMarketTypeAndParams("watchOrderBook",o,i),[r,i]=this.handleSubTypeAndParams("watchOrderBook",o,i,"linear"),a="swap"===s?this.safeString(this.urls.api.ws,r):this.safeString(this.urls.api.ws,s);let h="depth"+(t=this.getOrderBookLimitByMarketType(s,t)).toString();"spot"===s||o.inverse||([n,i]=this.handleOptionAndParams(i,"watchOrderBook","interval",500),this.checkRequiredArgument("watchOrderBook",n,"interval",[100,200,500,1e3]),h=h+"@"+n.toString()+"ms");let d=o.id+"@"+h,l=this.getMessageHash("orderbook",o.symbol),c={id:this.uuid(),dataType:d};"swap"===s&&(c.reqType="sub");let u={};return u=o.inverse?{count:t,params:i}:{level:t,interval:n,params:i},(await this.watch(a,l,this.deepExtend(c,i),d,u)).limit()}handleDelta(e,t){let i=this.safeFloat2(t,0,"p"),s=this.safeFloat2(t,1,"a");e.store(i,s)}handleOrderBook(e,t){let i;let s=this.safeDict(t,"data",{}),r=this.safeString(t,"dataType"),a=r.split("@")[0],n="all"===a,o=this.safeString(s,"symbol",a),h=e.url.indexOf("swap")>=0,d=this.safeMarket(o,void 0,void 0,h?"swap":"spot"),l=d.symbol;if(void 0===this.safeValue(this.orderbooks,l)){let t=e.subscriptions[r],i=this.safeInteger(t,"limit");this.orderbooks[l]=this.orderBook({},i)}let c=this.orderbooks[l];i=d.inverse?this.parseOrderBook(s,l,void 0,"bids","asks","p","a"):this.parseOrderBook(s,l,void 0,"bids","asks",0,1),c.reset(i),this.orderbooks[l]=c;let u=this.getMessageHash("orderbook",l);if(e.resolve(c,u),n){let t=this.getMessageHash("orderbook");e.resolve(c,t)}}parseWsOHLCV(e,t){let i=t.spot?"t":"T";return t.swap&&(i=t.inverse?"t":"T"),[this.safeInteger(e,i),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}handleOHLCV(e,t){let i;let s=e.url.indexOf("swap")>=0,r=this.safeString(t,"dataType"),a=r.split("@")[0],n="all"===a,o=this.safeString(t,"s",a),h=s?"swap":"spot",d=this.safeMarket(o,void 0,void 0,h);if(s)i=d.inverse?[this.safeDict(t,"data",{})]:this.safeList(t,"data",[]);else{let e=this.safeDict(t,"data",{});i=[this.safeDict(e,"K",{})]}let l=d.symbol;this.ohlcvs[l]=this.safeValue(this.ohlcvs,l,{});let c=r.split("_")[1],u=this.safeDict(this.options,h),f=this.safeDict(u,"timeframes",{}),p=this.findTimeframe(c,f);if(void 0===this.safeValue(this.ohlcvs[l],c)){let t=e.subscriptions[r],i=this.safeInteger(t,"limit");this.ohlcvs[l][p]=new sH.TG(i)}let m=this.ohlcvs[l][p];for(let e=0;e<i.length;e++){let t=i[e],s=this.parseWsOHLCV(t,d);m.append(s)}let g=[l,p,m],y=this.getMessageHash("ohlcv",l,p);if(e.resolve(g,y),n){let t=this.getMessageHash("ohlcv",void 0,p);e.resolve(g,t)}}async watchOHLCV(e,t="1m",i,s,r={}){let a,o,h;await this.loadMarkets();let d=this.market(e);if([a,r]=this.handleMarketTypeAndParams("watchOHLCV",d,r),[o,r]=this.handleSubTypeAndParams("watchOHLCV",d,r,"linear"),void 0===(h="swap"===a?this.safeString(this.urls.api.ws,o):this.safeString(this.urls.api.ws,a)))throw new n.BadRequest(this.id+" watchOHLCV is not supported for "+a+" markets.");let l=this.safeValue(this.options,a,{}),c=this.safeValue(l,"timeframes",{}),u=this.safeString(c,t,t),f=this.getMessageHash("ohlcv",d.symbol,t),p=d.id+"@kline_"+u,m={id:this.uuid(),dataType:p};"swap"===a&&(m.reqType="sub");let g={interval:u,params:r},y=(await this.watch(h,f,this.extend(m,r),p,g))[2];return this.newUpdates&&(s=y.getLimit(e,s)),this.filterBySinceLimit(y,i,s,0,!0)}async watchOrders(e,t,i,s={}){let r,a,o,h,d;await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=(o=this.market(e)).symbol),[r,s]=this.handleMarketTypeAndParams("watchOrders",o,s),[a,s]=this.handleSubTypeAndParams("watchOrders",o,s,"linear");let l="spot"===r,c=l?"spot:order":"swap:order";void 0!==o&&(c+=":"+e);let u=this.uuid();if("swap"===r){if("inverse"===a)throw new n.NotSupported(this.id+" watchOrders is not supported for inverse swap markets yet");h=this.safeString(this.urls.api.ws,a)}else h=this.safeString(this.urls.api.ws,r),d={id:u,reqType:"sub",dataType:"spot.executionReport"};let f=h+"?listenKey="+this.options.listenKey,p=await this.watch(f,c,d,l?"spot:private":"swap:private");return this.newUpdates&&(i=p.getLimit(e,i)),this.filterBySymbolSinceLimit(p,e,t,i,!0)}async watchMyTrades(e,t,i,s={}){let r,a,o,h,d;await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=(o=this.market(e)).symbol),[r,s]=this.handleMarketTypeAndParams("watchMyTrades",o,s),[a,s]=this.handleSubTypeAndParams("watchMyTrades",o,s,"linear");let l="spot"===r,c=l?"spot:mytrades":"swap:mytrades";void 0!==o&&(c+=":"+e);let u=this.uuid();if("swap"===r){if("inverse"===a)throw new n.NotSupported(this.id+" watchMyTrades is not supported for inverse swap markets yet");h=this.safeString(this.urls.api.ws,a)}else h=this.safeString(this.urls.api.ws,r),d={id:u,reqType:"sub",dataType:"spot.executionReport"};let f=h+"?listenKey="+this.options.listenKey,p=await this.watch(f,c,d,l?"spot:private":"swap:private");return this.newUpdates&&(i=p.getLimit(e,i)),this.filterBySymbolSinceLimit(p,e,t,i,!0)}async watchBalance(e={}){let t,i,s,r,a,o;await this.loadMarkets(),await this.authenticate(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),[i,e]=this.handleSubTypeAndParams("watchBalance",void 0,e,"linear");let h="spot"===t,d=h?"spot:balance":"swap:private",l=this.uuid();if("swap"===t){if("inverse"===i)throw new n.NotSupported(this.id+" watchBalance is not supported for inverse swap markets yet");r=this.safeString(this.urls.api.ws,i)}else r=this.safeString(this.urls.api.ws,t),s={id:l,dataType:"ACCOUNT_UPDATE"};let c=r+"?listenKey="+this.options.listenKey,u=this.client(c);return this.setBalanceCache(u,t,i,d,e),[a,e]=this.handleOptionAndParams(e,"watchBalance","fetchBalanceSnapshot",!0),[o,e]=this.handleOptionAndParams(e,"watchBalance","awaitBalanceSnapshot",!1),a&&o&&await u.future(t+":fetchBalanceSnapshot"),await this.watch(c,h?"spot:balance":"swap:balance",s,d)}setBalanceCache(e,t,i,s,r){if(!(s in e.subscriptions)){if(this.handleOptionAndParams(r,"watchBalance","fetchBalanceSnapshot",!0)){let s=t+":fetchBalanceSnapshot";s in e.futures||(e.future(s),this.spawn(this.loadBalanceSnapshot,e,s,t,i))}else this.balance[t]={}}}async loadBalanceSnapshot(e,t,i,s){let r=await this.fetchBalance({type:i,subType:s});this.balance[i]=this.extend(r,this.safeValue(this.balance,i,{})),e.futures[t].resolve(),e.resolve(this.balance[i],i+":balance")}handleErrorMessage(e,t){let i=this.safeString(t,"code");try{if(void 0!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e)}}catch(t){e.reject(t)}return!0}async keepAliveListenKey(e={}){let t=this.safeString(this.options,"listenKey");if(void 0===t)return;try{await this.userAuthPrivatePutUserDataStream({listenKey:t})}catch(i){let e=["spot","linear","inverse"];for(let s=0;s<e.length;s++){let r=e[s],a=this.urls.api.ws[r]+"?listenKey="+t,n=this.client(a),o=Object.keys(n.futures);for(let e=0;e<o.length;e++){let t=o[e];n.reject(i,t)}}this.options.listenKey=void 0,this.options.lastAuthenticatedTime=0;return}let i=this.safeInteger(this.options,"listenKeyRefreshRate",36e5);this.delay(i,this.keepAliveListenKey,e)}async authenticate(e={}){let t=this.milliseconds(),i=this.safeInteger(this.options,"lastAuthenticatedTime",0),s=this.safeInteger(this.options,"listenKeyRefreshRate",36e5);if(t-i>s){let i=await this.userAuthPrivatePostUserDataStream();this.options.listenKey=this.safeString(i,"listenKey"),this.options.lastAuthenticatedTime=t,this.delay(s,this.keepAliveListenKey,e)}}async pong(e,t){try{if("Ping"===t)await e.send("Pong");else{let i=this.safeString(t,"ping"),s=this.safeString(t,"time");await e.send({pong:i,time:s})}}catch(i){let t=new n.NetworkError(this.id+" pong failed with error "+this.json(i));e.reset(t)}}handleOrder(e,t){let i="dataType"in t,s=this.safeValue2(t,"data","o",{});if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let r=this.orders,a=this.parseOrder(s);r.append(a);let n=a.symbol,o=i?"spot:order":"swap:order";e.resolve(r,o),e.resolve(r,o+":"+n)}handleMyTrades(e,t){let i="dataType"in t,s=this.safeDict2(t,"data","o",{}),r=this.myTrades;if(void 0===r){let e=this.safeInteger(this.options,"tradesLimit",1e3);r=new sH.Pt(e),this.myTrades=r}let a=this.safeString(s,"s"),n=this.safeMarket(a,void 0,"-",i?"spot":"swap"),o=this.parseTrade(s,n),h=o.symbol,d=i?"spot:mytrades":"swap:mytrades";r.append(o),e.resolve(r,d),e.resolve(r,d+":"+h)}handleBalance(e,t){let i=this.safeDict(t,"a",{}),s=this.safeList(i,"B",[]),r=this.safeInteger2(t,"T","E"),a="P"in i?"swap":"spot";a in this.balance||(this.balance[a]={}),this.balance[a].info=s,this.balance[a].timestamp=r,this.balance[a].datetime=this.iso8601(r);for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"a"),r=this.safeCurrencyCode(i),n=this.account();n.info=t,n.used=this.safeString(t,"lk"),n.free=this.safeString(t,"wb"),this.balance[a][r]=n}this.balance[a]=this.safeBalance(this.balance[a]),e.resolve(this.balance[a],a+":balance")}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("Ping"===t||"ping"in t){this.spawn(this.pong,e,t);return}let i=this.safeString(t,"dataType","");if(i.indexOf("@depth")>=0){this.handleOrderBook(e,t);return}if(i.indexOf("@ticker")>=0){this.handleTicker(e,t);return}if(i.indexOf("@trade")>=0){this.handleTrades(e,t);return}if(i.indexOf("@kline")>=0){this.handleOHLCV(e,t);return}if(i.indexOf("executionReport")>=0){let i=this.safeValue(t,"data",{});"TRADE"===this.safeString(i,"x")&&this.handleMyTrades(e,t),this.handleOrder(e,t);return}let s=this.safeString(t,"e");if("ACCOUNT_UPDATE"===s&&this.handleBalance(e,t),"ORDER_TRADE_UPDATE"===s){this.handleOrder(e,t);let i=this.safeValue(t,"o",{}),s=this.safeString(i,"x"),r=this.safeString(i,"X");"TRADE"===s&&"FILLED"===r&&this.handleMyTrades(e,t)}let r=this.safeValue(t,"data");"24hTicker"===this.safeString(r,"e")&&this.handleTicker(e,t)}}class sQ extends sW{describe(){let e=this.getDescribeForExtendedWsExchange(new V,new g.A,super.describe());return this.deepExtend(e,{id:"bitcoincom",name:"bitcoin.com",countries:["KN"],urls:{logo:"https://user-images.githubusercontent.com/1294454/97296144-514fa300-1861-11eb-952b-3d55d492200b.jpg",api:{ws:{public:"wss://api.fmfw.io/api/3/ws/public",private:"wss://api.fmfw.io/api/3/ws/trading"}}},fees:{trading:{maker:this.parseNumber("0.0015"),taker:this.parseNumber("0.002")}}})}}class sZ extends q.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!0,watchBalance:!0,watchOHLCV:!0,watchOrders:!0},urls:{api:{ws:{public:"wss://api-pub.bitfinex.com/ws/2",private:"wss://api.bitfinex.com/ws/2"}}},options:{watchOrderBook:{prec:"P0",freq:"F0",checksum:!0},ordersLimit:1e3}})}async subscribe(e,t,i={}){await this.loadMarkets();let s=this.market(t).id,r=this.urls.api.ws.public,a=this.client(r),n=e+":"+s,o=await this.watch(r,n,this.deepExtend({event:"subscribe",channel:e,symbol:s},i),n,{checksum:!1});return this.safeBool(this.options,"checksum",!0)&&!a.subscriptions[n].checksum&&"book"===e&&(a.subscriptions[n].checksum=!0,await a.send({event:"conf",flags:131072})),o}async subscribePrivate(e){await this.loadMarkets(),await this.authenticate();let t=this.urls.api.ws.private;return await this.watch(t,e,void 0,1)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.safeString(this.timeframes,t,t),o="candles",h="trade:"+n+":"+a.id,d=o+":"+n+":"+a.id,l=this.urls.api.ws.public,c=await this.watch(l,d,this.deepExtend({event:"subscribe",channel:o,key:h},r),d);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}handleOHLCV(e,t,i){let s;let r=this.safeValue(t,1,[]);s=Array.isArray(this.safeValue(r,0))?r:[r];let a=this.safeValue(i,"channel"),n=this.safeString(i,"key"),o=n.split(":"),h=this.safeString(o,1),d=n;d=(d=d.replace("trade:","")).replace(h+":","");let l=this.safeMarket(d),c=this.findTimeframe(h),u=l.symbol,f=a+":"+h+":"+d;this.ohlcvs[u]=this.safeValue(this.ohlcvs,u,{});let p=this.safeValue(this.ohlcvs[u],c);if(void 0===p){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);p=new sH.TG(e),this.ohlcvs[u][c]=p}let m=s.length;for(let e=0;e<m;e++){let t=s[m-e-1],i=this.parseOHLCV(t,l);p.append(i)}e.resolve(p,f)}async watchTrades(e,t,i,s={}){let r=await this.subscribe("trades",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r="myTrade";void 0!==e&&(r+=":"+this.market(e).id);let a=await this.subscribePrivate(r);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleMyTrade(e,t,i={}){let s="myTrade",r=this.safeValue(t,2),a=this.parseWsTrade(r),n=a.symbol,o=s+":"+this.market(n).id;if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let h=this.myTrades;h.append(a),this.myTrades=h,e.resolve(h,s),e.resolve(h,o)}handleTrades(e,t,i){let s=this.safeValue(i,"channel"),r=this.safeString(i,"symbol"),a=this.safeMarket(r),n=this.safeInteger(this.options,"tradesLimit",1e3),o=a.symbol,h=this.safeValue(this.trades,o);if(void 0===h&&(h=new sH.I3(n),this.trades[o]=h),2===t.length){let e=this.safeList(t,1,[]),i=e.length;for(let t=0;t<i;t++){let s=i-t-1,r=this.parseWsTrade(e[s],a);h.append(r)}}else{if("tu"===this.safeString(t,1))return;let e=this.safeValue(t,2,[]),i=this.parseWsTrade(e,a);h.append(i)}e.resolve(h,s+":"+r)}parseWsTrade(e,t){let i,s,a;let n=e.length<=8,o=n?void 0:this.safeString(e,1);o=(t=this.safeMarket(o,t)).id;let h=this.safeString(e,6);void 0!==h&&(h.indexOf("LIMIT")>-1?h="limit":h.indexOf("MARKET")>-1&&(h="market"));let d=n?void 0:this.safeString(e,3),l=this.safeString(e,0),c=this.safeInteger(e,n?1:2),u=this.safeString(e,n?3:5),f=this.safeString(e,n?2:4),p=this.parseNumber(r.Y.stringAbs(f));void 0!==p&&(i=r.Y.stringGt(f,"0")?"buy":"sell");let m=this.safeSymbol(o,t),g=this.safeString(e,9);if(void 0!==g){let t=this.safeString(e,10);s={cost:g,currency:this.safeCurrencyCode(t)}}let y=this.safeInteger(e,8);return void 0!==y&&(a=-1===y?"taker":"maker"),this.safeTrade({info:e,timestamp:c,datetime:this.iso8601(c),symbol:m,id:l,order:d,type:h,takerOrMaker:a,side:i,price:u,amount:p,cost:void 0,fee:s},t)}handleTicker(e,t,i){let s=this.safeValue(t,1),r=this.safeString(i,"symbol"),a=this.safeMarket(r),n=this.safeSymbol(r),o=this.parseWsTicker(s,a),h="ticker:"+r;this.tickers[n]=o,e.resolve(o,h)}parseWsTicker(e,t){let i=(t=this.safeMarket(void 0,t)).symbol,s=this.safeString(e,6),r=this.safeString(e,4);return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:this.safeString(e,8),low:this.safeString(e,9),bid:this.safeString(e,0),bidVolume:this.safeString(e,1),ask:this.safeString(e,2),askVolume:this.safeString(e,3),vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:r,percentage:this.safeString(e,5),average:void 0,baseVolume:this.safeString(e,7),quoteVolume:void 0,info:e},t)}async watchOrderBook(e,t,i={}){if(void 0!==t&&25!==t&&100!==t)throw new n.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 25 or 100");let s=this.safeValue(this.options,"watchOrderBook",{}),r={prec:this.safeString(s,"prec","P0"),freq:this.safeString(s,"freq","F0")};return void 0!==t&&(r.len=t),(await this.subscribe("book",e,this.deepExtend(r,i))).limit()}handleOrderBook(e,t,i){let s=this.safeString(i,"symbol"),a=this.safeSymbol(s),n="book:"+s,o="R0"===this.safeString(i,"prec","P0");if(a in this.orderbooks){let i=this.orderbooks[a],s=t[1],h=this.orderbooks[a];if(o){let e=this.safeString(s,1),t=s[2],i=h[t<0?"asks":"bids"],a=r.Y.stringGt(e,"0")?t<0?-t:t:"0",n=this.safeString(s,0);i.storeArray([this.parseNumber(e),this.parseNumber(a),n])}else{let e=this.safeString(s,2),t=this.safeString(s,1),i=this.safeString(s,0),a=r.Y.stringLt(e,"0")?r.Y.stringNeg(e):e;h[r.Y.stringLt(e,"0")?"asks":"bids"].storeArray([this.parseNumber(i),this.parseNumber(a),this.parseNumber(t)])}e.resolve(i,n)}else{let s=this.safeInteger(i,"len");o?this.orderbooks[a]=this.indexedOrderBook({},s):this.orderbooks[a]=this.countedOrderBook({},s);let r=this.orderbooks[a];if(o){let e=t[1];for(let t=0;t<e.length;t++){let i=e[t],s=i[2],a=s<0?-s:s,n=r[s<0?"asks":"bids"],o=this.safeString(i,0),h=this.safeFloat(i,1);n.storeArray([h,a,o])}}else{let e=t[1];for(let t=0;t<e.length;t++){let i=e[t],s=this.safeNumber(i,2),a=this.safeNumber(i,1),n=this.safeNumber(i,0),o=s<0?-s:s;r[s<0?"asks":"bids"].storeArray([n,o,a])}}r.symbol=a,e.resolve(r,n)}}handleChecksum(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeSymbol(s),a="book:"+s,o=this.safeValue(this.orderbooks,r);if(void 0===o)return;let h=[],d=o.bids,l=o.asks,c="R0"===this.safeString(i,"prec","P0")?2:0;for(let e=0;e<25;e++){let t=this.safeValue(d,e),i=this.safeValue(l,e);if(void 0!==t&&(h.push(this.numberToString(d[e][c])),h.push(this.numberToString(d[e][1]))),void 0!==i){h.push(this.numberToString(l[e][c]));let t=l[e][1];h.push(this.numberToString(-t))}}let u=h.join(":"),f=this.crc32(u,!0);if(this.safeInteger(t,2)!==f&&(delete e.subscriptions[a],delete this.orderbooks[r],this.handleOption("watchOrderBook","checksum",!0))){let t=new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(r));e.reject(t,a)}}async watchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"wallet","exchange");return e=this.omit(e,"wallet"),await this.subscribePrivate("balance:"+t)}handleBalance(e,t,i){let s;s="ws"===this.safeValue(t,1)?this.safeValue(t,2):[this.safeValue(t,2)];let r={};for(let e=0;e<s.length;e++){let i=s[e],a=this.safeString(i,1),n=this.safeCurrencyCode(a),o=this.parseWsBalance(i),h=this.safeString(i,0),d=this.safeValue(this.balance,h,{});d[n]=o,d.info=t,this.balance[h]=this.safeBalance(d),r[h]=!0}let a=Object.keys(r);for(let t=0;t<a.length;t++){let i=a[t],s="balance:"+i;e.resolve(this.balance[i],s)}}parseWsBalance(e){let t=this.safeString(e,2),i=this.safeString(e,4),s=this.account();return void 0!==i&&(s.free=i),s.total=t,s}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){let i=this.safeString(t,"chanId");return e.subscriptions[i]=t,t}async authenticate(e={}){let t=this.urls.api.ws.private,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){let i=this.milliseconds(),r="AUTH"+i.toString(),a=this.hmac(this.encode(r),this.encode(this.secret),A.qt,"hex"),n={apiKey:this.apiKey,authSig:a,authNonce:i,authPayload:r,event:"auth"},o=this.extend(n,e);this.watch(t,s,o,s)}return await r}handleAuthenticationMessage(e,t){let i="authenticated";if("OK"===this.safeString(t,"status"))this.safeValue(e.futures,i).resolve(!0);else{let s=new n.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions[i]}}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r="orders";void 0!==e&&(r+=":"+this.market(e).id);let a=await this.subscribePrivate(r);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleOrders(e,t,i){let s=this.safeValue(t,2,[]),r=this.safeString(t,1);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let a=this.orders,n={};if("os"===r){if(0===s.length)return;for(let e=0;e<s.length;e++){let t=s[e],i=this.parseWsOrder(t);n[i.symbol]=!0,a.append(i)}}else{let e=this.parseWsOrder(s);a.append(e),n[e.symbol]=!0}let o="orders";e.resolve(this.orders,o);let h=Object.keys(n);for(let t=0;t<h.length;t++){let i=h[t],s=o+":"+this.market(i).id;e.resolve(this.orders,s)}}parseWsOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled",EXECUTED:"closed",PARTIALLY:"open"},e,e)}parseWsOrder(e,t){let i=this.safeString(e,0),s=this.safeString(e,1),a=this.safeString(e,3),n=this.safeSymbol(a);t=this.safeMarket(n);let o=this.safeString(e,7),h="buy";r.Y.stringLt(o,"0")&&(o=r.Y.stringAbs(o),h="sell");let d=r.Y.stringAbs(this.safeString(e,6)),l=this.safeString(e,8);l.indexOf("LIMIT")>-1?l="limit":l.indexOf("MARKET")>-1&&(l="market");let c=this.safeString(e,13).split(" "),u=this.safeString(c,0),f=this.parseWsOrderStatus(u),p=this.safeString(e,16),m=this.safeInteger2(e,5,4),g=this.safeString(e,17),y=this.omitZero(this.safeString(e,18));return this.safeOrder({info:e,id:i,clientOrderId:s,timestamp:m,datetime:this.iso8601(m),lastTradeTimestamp:void 0,symbol:n,type:l,side:h,price:p,stopPrice:y,triggerPrice:y,average:g,amount:o,remaining:d,filled:void 0,status:f,fee:void 0,cost:void 0,trades:void 0},t)}handleMessage(e,t){let i=this.safeString(t,0);if(Array.isArray(t)){let s;if("hb"===t[1])return;let r=this.safeValue(e.subscriptions,i,{}),a=this.safeString(r,"channel"),n=this.safeString(t,1),o={book:this.handleOrderBook,cs:this.handleChecksum,candles:this.handleOHLCV,ticker:this.handleTicker,trades:this.handleTrades},h={os:this.handleOrders,ou:this.handleOrders,on:this.handleOrders,oc:this.handleOrders,wu:this.handleBalance,ws:this.handleBalance,tu:this.handleMyTrade};void 0!==(s="0"===i?this.safeValue(h,n):this.safeValue2(o,n,a))&&s.call(this,e,t,r)}else{let i=this.safeString(t,"event");if(void 0!==i){let s={info:this.handleSystemStatus,subscribed:this.handleSubscriptionStatus,auth:this.handleAuthenticationMessage},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}}}class sJ extends G{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchTrades:!0,watchTradesForSymbols:!1,watchBalance:!1,watchOHLCV:!1},urls:{api:{ws:{public:"wss://api-pub.bitfinex.com/ws/1",private:"wss://api.bitfinex.com/ws/1"}}},options:{watchOrderBook:{prec:"P0",freq:"F0"},ordersLimit:1e3}})}async subscribe(e,t,i={}){await this.loadMarkets();let s=this.market(t).id,r=this.urls.api.ws.public,a=e+":"+s;return await this.watch(r,a,this.deepExtend({event:"subscribe",channel:e,symbol:s,messageHash:a},i),a)}async watchTrades(e,t,i,s={}){await this.loadMarkets(),e=this.symbol(e);let r=await this.subscribe("trades",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleTrades(e,t,i){let s=this.safeValue(i,"channel"),r=this.safeString(i,"pair"),a=this.safeInteger(this.options,"tradesLimit",1e3),n=this.safeMarket(r),o=n.symbol,h=this.safeValue(t,1),d=this.safeValue(this.trades,o);if(void 0===d&&(d=new sH.I3(a),this.trades[o]=d),Array.isArray(h)){let e=this.parseTrades(h,n);for(let t=0;t<e.length;t++)d.append(e[t])}else{if("tu"!==this.safeString(t,1))return;let e=this.parseTrade(t,n);d.append(e)}e.resolve(d,s+":"+r)}parseTrade(e,t){let i,s;if(!Array.isArray(e))return super.parseTrade(e,t);let a=e.length;"tu"===this.safeString(e,1)&&(i=this.safeString(e,a-4));let n=this.safeTimestamp(e,a-3),o=this.safeString(e,a-2),h=this.safeString(e,a-1);void 0!==h&&(s=r.Y.stringGt(h,"0")?"buy":"sell",h=r.Y.stringAbs(h));let d=this.safeString(e,2).split("-"),l=this.safeString(d,1);void 0!==l&&(l=l.replace("t",""));let c=this.safeSymbol(l,t);return this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:c,id:i,order:void 0,type:void 0,takerOrMaker:void 0,side:s,price:o,amount:h,cost:void 0,fee:void 0})}handleTicker(e,t,i){let s;let a=this.safeString(i,"pair"),n=this.safeSymbol(a),o="ticker:"+a,h=this.safeString(t,7),d=this.safeString(t,5);void 0!==h&&void 0!==d&&(s=r.Y.stringSub(h,d));let l=this.safeTicker({symbol:n,timestamp:void 0,datetime:void 0,high:this.safeString(t,9),low:this.safeString(t,10),bid:this.safeString(t,1),bidVolume:void 0,ask:this.safeString(t,3),askVolume:void 0,vwap:void 0,open:this.parseNumber(s),close:this.parseNumber(h),last:this.parseNumber(h),previousClose:void 0,change:this.parseNumber(d),percentage:this.safeString(t,6),average:void 0,baseVolume:this.safeString(t,8),quoteVolume:void 0,info:t});this.tickers[n]=l,e.resolve(l,o)}async watchOrderBook(e,t,i={}){if(void 0!==t&&25!==t&&100!==t)throw new n.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 25 or 100");let s=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(s,"prec","P0"),a=this.safeString(s,"freq","F0");return(await this.subscribe("book",e,this.deepExtend({prec:r,freq:a,len:t},i))).limit()}handleOrderBook(e,t,i){let s=this.safeString(i,"pair"),a=this.safeSymbol(s),n="book:"+s,o="R0"===this.safeString(i,"prec","P0");if(Array.isArray(t[1])){let s=this.safeInteger(i,"len");o?this.orderbooks[a]=this.indexedOrderBook({},s):this.orderbooks[a]=this.countedOrderBook({},s);let r=this.orderbooks[a];if(o){let e=t[1];for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,0),a=this.safeFloat(i,1),n=i[2],o=n<0?-n:n;r[n<0?"asks":"bids"].storeArray([a,o,s])}}else{let e=t[1];for(let t=0;t<e.length;t++){let i=e[t],s=i[2],a=s<0?-s:s;r[s<0?"asks":"bids"].storeArray([i[0],a,i[1]])}}e.resolve(r,n)}else{let i=this.orderbooks[a];if(o){let e=this.safeString(t,1),s=this.safeString(t,2),a=t[3],n=i[a<0?"asks":"bids"],o=r.Y.stringGt(s,"0")?a<0?-a:a:"0";n.storeArray([this.parseNumber(s),this.parseNumber(o),e])}else{let e=t[3];i[e<0?"asks":"bids"].storeArray([t[1],e<0?-e:e,t[2]])}e.resolve(i,n)}}handleHeartbeat(e,t){let i=this.safeString(t,"event");e.resolve(t,i)}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){let i=this.safeString(t,"chanId");return e.subscriptions[i]=t,t}async authenticate(e={}){let t=this.urls.api.ws.private,i=this.client(t),s=i.future("authenticated"),r="auth";if(void 0===this.safeValue(i.subscriptions,r)){let e=this.milliseconds(),i="AUTH"+e.toString(),s=this.hmac(this.encode(i),this.encode(this.secret),A.qt,"hex"),a={apiKey:this.apiKey,authSig:s,authNonce:e,authPayload:i,event:r,filter:["trading","wallet"]};this.spawn(this.watch,t,r,a,1)}return await s}handleAuthenticationMessage(e,t){if("OK"===this.safeString(t,"status"))this.safeValue(e.futures,"authenticated").resolve(!0);else{let i=new n.AuthenticationError(this.json(t));e.reject(i,"authenticated");let s=this.safeString(t,"event");s in e.subscriptions&&delete e.subscriptions[s]}}async watchOrder(e,t,i={}){await this.loadMarkets();let s=this.urls.api.ws.private;return await this.authenticate(),await this.watch(s,e,void 0,1)}async watchOrders(e,t,i,s={}){await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=this.symbol(e));let r=this.urls.api.ws.private,a=await this.watch(r,"os",void 0,1);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleOrders(e,t,i){let s=this.safeValue(t,2,[]);if("os"===this.safeString(t,1))for(let t=0;t<s.length;t++){let i=s[t];this.handleOrder(e,i)}else this.handleOrder(e,s);void 0!==this.orders&&e.resolve(this.orders,"os")}parseWsOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled"},e,e)}handleOrder(e,t){let i=this.safeString(t,0),s=this.safeString(t,1),a=this.safeSymbol(s),n=this.safeString(t,2),o=this.safeString(t,3),h="buy";r.Y.stringLt(n,"0")&&(n=r.Y.stringAbs(n),o=r.Y.stringAbs(o),h="sell");let d=this.safeString(t,4);d.indexOf("LIMIT")>-1?d="limit":d.indexOf("MARKET")>-1&&(d="market");let l=this.parseWsOrderStatus(this.safeString(t,5)),c=this.safeString(t,6),u=this.safeString(t,8),f=this.parse8601(u),p=this.safeOrder({info:t,id:i,clientOrderId:void 0,timestamp:f,datetime:this.iso8601(f),lastTradeTimestamp:void 0,symbol:a,type:d,side:h,price:c,stopPrice:void 0,triggerPrice:void 0,average:void 0,amount:n,remaining:o,filled:void 0,status:l,fee:void 0,cost:void 0,trades:void 0});if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}return this.orders.append(p),e.resolve(p,i),p}handleMessage(e,t){if(Array.isArray(t)){let i=this.safeString(t,0);if("hb"===t[1])return;let s=this.safeValue(e.subscriptions,i,{}),r=this.safeString(s,"channel"),a=this.safeString(t,1),n={book:this.handleOrderBook,ticker:this.handleTicker,trades:this.handleTrades,os:this.handleOrders,on:this.handleOrders,oc:this.handleOrders},o=this.safeValue2(n,r,a);void 0!==o&&o.call(this,e,t,s)}else{let i=this.safeString(t,"event");if(void 0!==i){let s={info:this.handleSystemStatus,subscribed:this.handleSubscriptionStatus,auth:this.handleAuthenticationMessage},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}}}class s0 extends K.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,createOrderWs:!1,editOrderWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,cancelOrderWs:!1,cancelOrdersWs:!1,cancelAllOrdersWs:!1,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOHLCVForSymbols:!1,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!0,watchPositions:!0},urls:{api:{ws:{public:"wss://ws.bitget.com/v2/ws/public",private:"wss://ws.bitget.com/v2/ws/private"}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","4h":"4H","6h":"6H","12h":"12H","1d":"1D","1w":"1W"},watchOrderBook:{checksum:!0}},streaming:{ping:this.ping},exceptions:{ws:{exact:{30001:n.BadRequest,30002:n.AuthenticationError,30003:n.BadRequest,30004:n.AuthenticationError,30005:n.AuthenticationError,30006:n.RateLimitExceeded,30007:n.RateLimitExceeded,30011:n.AuthenticationError,30012:n.AuthenticationError,30013:n.AuthenticationError,30014:n.BadRequest,30015:n.AuthenticationError,30016:n.BadRequest},broad:{}}}})}getInstType(e,t={}){let i,s;return void 0===e?[i,t]=this.handleProductTypeAndParams(void 0,t):e.swap||e.future?[i,t]=this.handleProductTypeAndParams(e,t):i="SPOT",[s,t]=this.handleOptionAndParams(t,"getInstType","instType",i),[i=s,t]}async watchTicker(e,t={}){let i;await this.loadMarkets();let s=this.market(e),r="ticker:"+(e=s.symbol);[i,t]=this.getInstType(s,t);let a={instType:i,channel:"ticker",instId:s.id};return await this.watchPublic(r,a,t)}async unWatchTicker(e,t={}){return await this.loadMarkets(),await this.unWatchChannel(e,"ticker","ticker",t)}async watchTickers(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let s=this.market(e[0]);[i,t]=this.getInstType(s,t);let r=[],a=[];for(let t=0;t<e.length;t++){let s=e[t],n={instType:i,channel:"ticker",instId:this.market(s).id};r.push(n),a.push("ticker:"+s)}let n=await this.watchPublicMultiple(a,r,t);if(this.newUpdates){let e={};return e[n.symbol]=n,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){this.handleBidAsk(e,t);let i=this.parseWsTicker(t),s=i.symbol;this.tickers[s]=i,e.resolve(i,"ticker:"+s)}parseWsTicker(e,t){let i=this.safeValue(e,"arg",{}),s=this.safeValue(e,"data",[]),a=this.safeValue(s,0,{}),n=this.safeInteger(a,"ts"),o=this.safeString(i,"instType"),h=this.safeString(a,"instId");t=this.safeMarket(h,t,void 0,"SPOT"===o?"spot":"contract");let d=this.safeString(a,"lastPr"),l=this.safeString(a,"change24h"),c=r.Y.stringMul(l,"100");return this.safeTicker({symbol:t.symbol,timestamp:n,datetime:this.iso8601(n),high:this.safeString(a,"high24h"),low:this.safeString(a,"low24h"),bid:this.safeString(a,"bidPr"),bidVolume:this.safeString(a,"bidSz"),ask:this.safeString(a,"askPr"),askVolume:this.safeString(a,"askSz"),vwap:void 0,open:this.safeString(a,"open24h"),close:d,last:d,previousClose:void 0,change:void 0,percentage:c,average:void 0,baseVolume:this.safeString(a,"baseVolume"),quoteVolume:this.safeString(a,"quoteVolume"),info:a},t)}async watchBidsAsks(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let s=this.market(e[0]);[i,t]=this.getInstType(s,t);let r=[],a=[];for(let t=0;t<e.length;t++){let s=e[t],n={instType:i,channel:"ticker",instId:this.market(s).id};r.push(n),a.push("bidask:"+s)}let n=await this.watchPublicMultiple(a,r,t);if(this.newUpdates){let e={};return e[n.symbol]=n,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.parseWsBidAsk(t),s=i.symbol;this.bidsasks[s]=i,e.resolve(i,"bidask:"+s)}parseWsBidAsk(e,t){let i=this.safeValue(e,"arg",{}),s=this.safeValue(e,"data",[]),r=this.safeValue(s,0,{}),a=this.safeInteger(r,"ts"),n=this.safeString(i,"instType"),o=this.safeString(r,"instId");return t=this.safeMarket(o,t,void 0,"SPOT"===n?"spot":"contract"),this.safeTicker({symbol:t.symbol,timestamp:a,datetime:this.iso8601(a),ask:this.safeString(r,"askPr"),askVolume:this.safeString(r,"askSz"),bid:this.safeString(r,"bidPr"),bidVolume:this.safeString(r,"bidSz"),info:r},t)}async watchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e);e=n.symbol;let o=this.safeValue(this.options,"timeframes"),h=this.safeString(o,t),d="candles:"+t+":"+e;[a,r]=this.getInstType(n,r);let l={instType:a,channel:"candle"+h,instId:n.id},c=await this.watchPublic(d,l,r);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}async unWatchOHLCV(e,t="1m",i={}){await this.loadMarkets();let s=this.safeDict(this.options,"timeframes"),r=this.safeString(s,t);return await this.unWatchChannel(e,"candle"+r,"candles:"+t,i)}handleOHLCV(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"SPOT"===s?"spot":"contract"),n=a.symbol;this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let o=this.safeString(i,"channel").replace("candle",""),h=this.safeValue(this.options,"timeframes"),d=this.findTimeframe(o,h),l=this.safeValue(this.ohlcvs[n],d);if(void 0===l){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new sH.TG(e),this.ohlcvs[n][d]=l}let c=this.safeValue(t,"data",[]);for(let e=0;e<c.length;e++){let t=this.parseWsOHLCV(c[e],a);l.append(t)}let u="candles:"+d+":"+n;e.resolve(l,u)}parseWsOHLCV(e,t){let i=t.inverse?6:5;return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,i)]}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async unWatchOrderBook(e,t={}){await this.loadMarkets();let i="books",s=this.safeInteger(t,"limit");return(1===s||5===s||15===s)&&(t=this.omit(t,"limit"),i+=s.toString()),await this.unWatchChannel(e,i,"orderbook",t)}async unWatchChannel(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n="unsubscribe:"+i+":"+a.symbol;[r,s]=this.getInstType(a,s);let o={instType:r,channel:t,instId:a.id};return await this.unWatchPublic(n,o,s)}async watchOrderBookForSymbols(e,t,i={}){await this.loadMarkets(),e=this.marketSymbols(e);let s="books",r=!0;(1===t||5===t||15===t)&&(s+=t.toString(),r=!1);let a=[],n=[];for(let t=0;t<e.length;t++){let r;let o=e[t],h=this.market(o);[r,i]=this.getInstType(h,i);let d={instType:r,channel:s,instId:h.id};a.push(d),n.push("orderbook:"+o)}let o=await this.watchPublicMultiple(n,a,i);return r?o.limit():o}handleOrderBook(e,t){let i=this.safeValue(t,"arg"),s=this.safeString(i,"channel"),r=this.safeString(i,"instType"),a=this.safeString(i,"instId"),n=this.safeMarket(a,void 0,void 0,"SPOT"===r?"spot":"contract").symbol,o="orderbook:"+n,h=this.safeValue(t,"data"),d=this.safeValue(h,0),l=this.safeInteger(d,"ts");if("books"===s){if(!(n in this.orderbooks)){let e=this.countedOrderBook({});e.symbol=n,this.orderbooks[n]=e}let i=this.orderbooks[n],s=this.safeValue(d,"asks",[]),r=this.safeValue(d,"bids",[]);this.handleDeltas(i.asks,s),this.handleDeltas(i.bids,r),i.timestamp=l,i.datetime=this.iso8601(l);let a=this.handleOption("watchOrderBook","checksum",!0);if("snapshot"!==this.safeString(t,"action")&&a){let t=i.asks,s=i.bids,r=t.length,a=s.length,h=[];for(let e=0;e<25;e++)e<a&&(h.push(s[e][2][0]),h.push(s[e][2][1])),e<r&&(h.push(t[e][2][0]),h.push(t[e][2][1]));let l=h.join(":");if(this.crc32(l,!0)!==this.safeInteger(d,"checksum")){this.spawn(this.handleCheckSumError,e,n,o);return}}}else{let e=this.orderBook({}),t=this.parseOrderBook(d,n,l);e.reset(t),this.orderbooks[n]=e}e.resolve(this.orderbooks[n],o)}async handleCheckSumError(e,t,i){await this.unWatchOrderBook(t);let s=new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(t));e.reject(s,i)}handleDelta(e,t){let i=this.parseBidAsk(t,0,1);i.push(t),e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){if(0===e.length)throw new n.ArgumentsRequired(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");await this.loadMarkets(),e=this.marketSymbols(e);let r=[],a=[];for(let t=0;t<e.length;t++){let i;let n=e[t],o=this.market(n);[i,s]=this.getInstType(o,s);let h={instType:i,channel:"trade",instId:o.id};r.push(h),a.push("trade:"+n)}let o=await this.watchPublicMultiple(a,r,s);if(this.newUpdates){let e=this.safeValue(o,0),t=this.safeString(e,"symbol");i=o.getLimit(t,i)}return this.filterBySinceLimit(o,t,i,"timestamp",!0)}async unWatchTrades(e,t={}){return await this.loadMarkets(),await this.unWatchChannel(e,"trade","trade",t)}handleTrades(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"SPOT"===s?"spot":"contract"),n=a.symbol,o=this.safeValue(this.trades,n);if(void 0===o){let e=this.safeInteger(this.options,"tradesLimit",1e3);o=new sH.I3(e),this.trades[n]=o}let h=this.safeList(t,"data",[]),d=h.length;for(let e=0;e<d;e++){let t=h[d-e-1],i=this.parseWsTrade(t,a);o.append(i)}let l="trade:"+n;e.resolve(o,l)}parseWsTrade(e,t){let i;let s=this.safeString2(e,"symbol","instId"),a=this.safeString(e,"posMode");void 0===t&&(t=this.safeMarket(s,void 0,void 0,void 0!==a?"contract":"spot"));let n=this.safeIntegerN(e,["uTime","cTime","ts"]),o=this.safeList(e,"feeDetail",[]),h=this.safeDict(o,0);if(void 0!==h){let e=this.safeString(h,"feeCoin"),t=this.safeCurrencyCode(e);i={cost:r.Y.stringAbs(this.safeString(h,"totalFee")),currency:t}}return this.safeTrade({info:e,id:this.safeString(e,"tradeId"),order:this.safeString(e,"orderId"),timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:this.safeString(e,"orderType"),side:this.safeString(e,"side"),takerOrMaker:this.safeString(e,"tradeScope"),price:this.safeString2(e,"priceAvg","price"),amount:this.safeString2(e,"size","baseVolume"),cost:this.safeString2(e,"amount","quoteVolume"),fee:i},t)}async watchPositions(e,t,i,s={}){let r;await this.loadMarkets();let a="",n="USDT-FUTURES";e=this.marketSymbols(e),this.isEmpty(e)||(r=this.getMarketFromSymbols(e),[n,s]=this.getInstType(r,s)),a=n+":positions"+a;let o={instType:n,channel:"positions",instId:"default"},h=await this.watchPrivate(a,"positions",o,s);return this.newUpdates?h:this.filterBySymbolsSinceLimit(h,e,t,i,!0)}handlePositions(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"instType","");void 0===this.positions&&(this.positions={});let r=this.safeString(t,"action");s in this.positions&&"snapshot"!==r||(this.positions[s]=new sH.Hk);let a=this.positions[s],n=this.safeValue(t,"data",[]),o=[];for(let e=0;e<n.length;e++){let t=n[e],i=this.safeString(t,"instId"),s=this.safeMarket(i,void 0,void 0,"contract"),r=this.parseWsPosition(t,s);o.push(r),a.append(r)}let h=this.findMessageHashes(e,s+":positions::");for(let t=0;t<h.length;t++){let i=h[t],s=i.split("::")[1].split(","),r=this.filterByArray(o,"symbol",s,!1);this.isEmpty(r)||e.resolve(r,i)}e.resolve(o,s+":positions")}parseWsPosition(e,t){let i;let s=this.safeString(e,"instId"),a=this.safeString(e,"marginMode"),n=this.getSupportedMapping(a,{crossed:"cross",isolated:"isolated"}),o=this.safeString(e,"posMode"),h=this.safeInteger2(e,"uTime","cTime"),d=this.safeString(e,"unrealizedPLR"),l=r.Y.stringMul(d,"100");return void 0!==t&&(i=t.contractSize),this.safePosition({info:e,id:this.safeString(e,"posId"),symbol:this.safeSymbol(s,t,void 0,"contract"),notional:void 0,marginMode:n,liquidationPrice:this.safeNumber(e,"liquidationPrice"),entryPrice:this.safeNumber(e,"openPriceAvg"),unrealizedPnl:this.safeNumber(e,"unrealizedPL"),percentage:this.parseNumber(l),contracts:this.safeNumber(e,"total"),contractSize:i,markPrice:void 0,side:this.safeString(e,"holdSide"),hedged:"hedge_mode"===o,timestamp:h,datetime:this.iso8601(h),maintenanceMargin:void 0,maintenanceMarginPercentage:this.safeNumber(e,"keepMarginRate"),collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:this.safeNumber(e,"leverage"),marginRatio:this.safeNumber(e,"marginRate")})}async watchOrders(e,t,i,s={}){let r,a,n,o,h,d,l;await this.loadMarkets(),[n,s]=this.isTriggerOrder(s);let c=n?"triggerOrder":"order",u="order:trades";void 0!==e&&(e=(r=this.market(e)).symbol,a=r.id,c=c+":"+e);let f=this.safeString(s,"productType");[o,s]=this.handleMarketTypeAndParams("watchOrders",r,s),[h,s]=this.handleSubTypeAndParams("watchOrders",r,s,"linear"),("spot"===o||"margin"===o)&&void 0===e&&(a="default"),void 0===f&&"spot"!==o&&void 0===e?c=c+":"+h:"USDT-FUTURES"===f?c+=":linear":"COIN-FUTURES"===f?c+=":inverse":"USDC-FUTURES"===f&&(c+=":usdcfutures"),void 0===r&&"spot"===o?d="SPOT":[d,s]=this.getInstType(r,s),"spot"===o&&(u=u+":"+e),n&&(u+=":stop");let p="spot"===o||"margin"===o?a:"default",m=n?"orders-algo":"orders";[l,s]=this.handleMarginModeAndParams("watchOrders",s),void 0!==l&&(d="MARGIN",c=c+":"+l,m="isolated"===l?"orders-isolated":"orders-crossed"),u=u+":"+d;let g={instType:d,channel:m,instId:p},y=await this.watchPrivate(c,u,g,s);return this.newUpdates&&(i=y.getLimit(e,i)),this.filterBySymbolSinceLimit(y,e,t,i,!0)}handleOrder(e,t){let i;let s=this.safeDict(t,"arg",{}),r=this.safeString(s,"channel"),a=this.safeString(s,"instType"),n=this.safeString(s,"instId");i="SPOT"===a?"spot":"MARGIN"===a?"spot":"contract";let o=this.safeValue(t,"data",[]);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e),this.triggerOrders=new sH.Pt(e)}let h="orders-algo"===r||"ordersAlgo"===r,d=h?this.triggerOrders:this.orders,l=h?"triggerOrder":"order",c={};for(let e=0;e<o.length;e++){let t=o[e],s=this.safeString(t,"instId",n),r=this.safeMarket(s,void 0,void 0,i),a=this.parseWsOrder(t,r);d.append(a),c[a.symbol]=!0}let u=Object.keys(c);for(let t=0;t<u.length;t++){let i=l+":"+u[t];"orders-crossed"===r?i+=":cross":"orders-isolated"===r&&(i+=":isolated"),e.resolve(d,i)}e.resolve(d,l),"USDT-FUTURES"===a&&e.resolve(d,"order:linear"),"COIN-FUTURES"===a&&e.resolve(d,"order:inverse"),"USDC-FUTURES"===a&&e.resolve(d,"order:usdcfutures")}parseWsOrder(e,t){let i,s,a,n,o,h;let d=!("posMode"in e),l="loanType"in e,c=this.safeString(e,"instId");t=this.safeMarket(c,t);let u=this.safeInteger(e,"cTime"),f=t.symbol,p=this.safeString(e,"status"),m=this.safeValue(e,"feeDetail",[]),g=this.safeValue(m,0),y=this.safeString(g,"fee");if(void 0!==y){let e=this.safeString(g,"feeCoin");i={cost:this.parseNumber(r.Y.stringAbs(y)),currency:this.safeCurrencyCode(e)}}let v=this.safeNumber(e,"triggerPrice"),b=void 0!==v;b?d&&b&&(s=this.safeNumber(e,"executePrice")):s=this.safeNumber(e,"price");let w=this.omitZero(this.safeString2(e,"priceAvg","fillPrice")),k=this.safeString(e,"side"),S=this.safeString(e,"orderType"),O=this.omitZero(this.safeString(e,"accBaseVolume")),T=this.omitZero(this.safeString(e,"newSize")),I="market"===S,x="buy"===k,P=this.safeString(e,"accBaseVolume");if(d){if(l)a=this.safeString(e,"baseSize"),P=this.safeString(e,"baseVolume"),o=this.safeString(e,"fillTotalAmount");else{let t=this.safeString(e,"baseVolume");n=void 0!==t?t:P,I?x?(a=O,o=T):a=T:a=this.safeString(e,"newSize")}}else n=this.safeString(e,"baseVolume"),a=this.safeString(e,"size"),o=this.safeString(e,"fillNotionalUsd");return h=r.Y.stringSub(a,P),this.safeOrder({info:e,symbol:f,id:this.safeString(e,"orderId"),clientOrderId:this.safeString(e,"clientOid"),timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:this.safeInteger(e,"uTime"),type:S,timeInForce:this.safeStringUpper(e,"force"),postOnly:void 0,side:k,price:s,triggerPrice:v,amount:a,cost:o,average:w,filled:n,remaining:h,status:this.parseWsOrderStatus(p),fee:i,trades:void 0},t)}parseWsOrderStatus(e){return this.safeString({live:"open",partially_filled:"open",filled:"closed",cancelled:"canceled",not_trigger:"open"},e,e)}async watchMyTrades(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o="myTrades";void 0!==e&&(o=o+":"+(e=(r=this.market(e)).symbol)),[a,s]=this.handleMarketTypeAndParams("watchMyTrades",r,s),void 0===r&&"spot"===a?n="SPOT":[n,s]=this.getInstType(r,s);let h="fill:"+n,d={instType:n,channel:"fill",instId:"default"},l=await this.watchPrivate(o,h,d,s);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySymbolSinceLimit(l,e,t,i,!0)}handleMyTrades(e,t){if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.I3(e)}let i=this.myTrades,s=this.safeList(t,"data",[]),r=s.length;for(let t=0;t<r;t++){let r=s[t],a=this.parseWsTrade(r);i.append(a);let n="myTrades:"+a.symbol;e.resolve(i,n)}e.resolve(i,"myTrades")}async watchBalance(e={}){let t,i,s;[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),[i,e]=this.handleMarginModeAndParams("watchBalance",e);let r="account";"swap"===t||"future"===t?s="USDT-FUTURES":void 0!==i?(s="MARGIN",r="isolated"===i?"account-isolated":"account-crossed"):s="SPOT",[s,e]=this.handleOptionAndParams(e,"watchBalance","instType",s);let a={instType:s,channel:r,coin:"default"},n="balance:"+s.toLowerCase();return await this.watchPrivate(n,n,a,e)}handleBalance(e,t){let i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString2(t,"coin","marginCoin"),a=this.safeCurrencyCode(s),n=a in this.balance?this.balance[a]:this.account(),o=this.safeString(t,"borrow");if(void 0!==o){let e=this.safeString(t,"interest");n.debt=r.Y.stringAdd(o,e)}let h="maxTransferOut"in t?"maxTransferOut":"available";n.free=this.safeString(t,h),n.total=this.safeString(t,"equity"),n.used=this.safeString(t,"frozen"),this.balance[a]=n}this.balance=this.safeBalance(this.balance);let s=this.safeValue(t,"arg"),a=this.safeStringLower(s,"instType");e.resolve(this.balance,"balance:"+a)}async watchPublic(e,t,i={}){let s=this.urls.api.ws.public,r=this.extend({op:"subscribe",args:[t]},i);return await this.watch(s,e,r,e)}async unWatchPublic(e,t,i={}){let s=this.urls.api.ws.public,r=this.extend({op:"unsubscribe",args:[t]},i);return await this.watch(s,e,r,e)}async watchPublicMultiple(e,t,i={}){let s=this.urls.api.ws.public,r=this.extend({op:"subscribe",args:t},i);return await this.watchMultiple(s,e,r,e)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws.private,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){let i=this.seconds().toString(),r=this.hmac(this.encode(i+"GET/user/verify"),this.encode(this.secret),l.s,"base64"),a={op:"login",args:[{apiKey:this.apiKey,passphrase:this.password,timestamp:i,sign:r}]},n=this.extend(a,e);this.watch(t,s,n,s)}return await r}async watchPrivate(e,t,i,s={}){await this.authenticate();let r=this.urls.api.ws.private,a=this.extend({op:"subscribe",args:[i]},s);return await this.watch(r,e,a,t)}handleAuthenticate(e,t){this.safeValue(e.futures,"authenticated").resolve(!0)}handleErrorMessage(e,t){let i=this.safeString(t,"event");try{if("error"===i){let e=this.safeString(t,"code"),i=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,e,i);let s=this.safeString(t,"msg","");throw this.throwBroadlyMatchedException(this.exceptions.ws.broad,s,i),new n.ExchangeError(i)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"message")||"pong"===t){this.handlePong(e,t);return}let i=this.safeString(t,"event");if("login"===i){this.handleAuthenticate(e,t);return}if("subscribe"===i){this.handleSubscriptionStatus(e,t);return}if("unsubscribe"===i){this.handleUnSubscriptionStatus(e,t);return}let s={ticker:this.handleTicker,trade:this.handleTrades,fill:this.handleMyTrades,orders:this.handleOrder,ordersAlgo:this.handleOrder,"orders-algo":this.handleOrder,"orders-crossed":this.handleOrder,"orders-isolated":this.handleOrder,account:this.handleBalance,positions:this.handlePositions,"account-isolated":this.handleBalance,"account-crossed":this.handleBalance},r=this.safeValue(t,"arg",{}),a=this.safeValue(r,"channel",""),n=this.safeValue(s,a);void 0!==n&&n.call(this,e,t),a.indexOf("candle")>=0&&this.handleOHLCV(e,t),a.indexOf("books")>=0&&this.handleOrderBook(e,t)}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleSubscriptionStatus(e,t){return t}handleOrderBookUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"spot"===s?"spot":"contract"),o=a.symbol,h="unsubscribe:orderbook:"+a.symbol,d="orderbook:"+o;o in this.orderbooks&&delete this.orderbooks[o],d in e.subscriptions&&delete e.subscriptions[d],h in e.subscriptions&&delete e.subscriptions[h];let l=new n.UnsubscribeError(this.id+"orderbook "+o);e.reject(l,d),e.resolve(!0,h)}handleTradesUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"spot"===s?"spot":"contract"),o=a.symbol,h="unsubscribe:trade:"+a.symbol,d="trade:"+o;o in this.trades&&delete this.trades[o],d in e.subscriptions&&delete e.subscriptions[d],h in e.subscriptions&&delete e.subscriptions[h];let l=new n.UnsubscribeError(this.id+"trades "+o);e.reject(l,d),e.resolve(!0,h)}handleTickerUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"spot"===s?"spot":"contract"),o=a.symbol,h="unsubscribe:ticker:"+a.symbol,d="ticker:"+o;o in this.tickers&&delete this.tickers[o],d in e.subscriptions&&delete e.subscriptions[d],h in e.subscriptions&&delete e.subscriptions[h];let l=new n.UnsubscribeError(this.id+"ticker "+o);e.reject(l,d),e.resolve(!0,h)}handleOHLCVUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeString(i,"channel").replace("candle",""),n=this.safeValue(this.options,"timeframes"),o=this.findTimeframe(a,n),h=this.safeMarket(r,void 0,void 0,"spot"===s?"spot":"contract"),d=h.symbol,l="unsubscribe:candles:"+o+":"+h.symbol;d in this.ohlcvs&&o in this.ohlcvs[d]&&delete this.ohlcvs[d][o],this.cleanUnsubscription(e,"candles:"+o+":"+d,l)}handleUnSubscriptionStatus(e,t){let i=this.safeList(t,"args");void 0===i&&(i=[this.safeDict(t,"arg",{})]);for(let s=0;s<i.length;s++){let r=i[s],a=this.safeString(r,"channel");"books"===a?this.handleOrderBookUnSubscription(e,t):"trade"===a?this.handleTradesUnSubscription(e,t):"ticker"===a?this.handleTickerUnSubscription(e,t):a.startsWith("candle")&&this.handleOHLCVUnSubscription(e,t)}return t}}class s1 extends X{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:"wss://pubwss.bithumb.com/pub/ws"}},options:{},streaming:{},exceptions:{}})}async watchTicker(e,t={}){let i=this.urls.api.ws;await this.loadMarkets();let s=this.market(e),r="ticker:"+s.symbol,a={type:"ticker",symbols:[s.base+"_"+s.quote],tickTypes:[this.safeString(t,"tickTypes","24H")]};return await this.watch(i,r,this.extend(a,t),r)}async watchTickers(e,t={}){await this.loadMarkets();let i=this.urls.api.ws,s=[],r=[];e=this.marketSymbols(e,void 0,!1,!0,!0);for(let t=0;t<e.length;t++){let i=e[t],a=this.market(i);s.push(a.base+"_"+a.quote),r.push("ticker:"+a.symbol)}let a={type:"ticker",symbols:s,tickTypes:[this.safeString(t,"tickTypes","24H")]},n=this.extend(a,t),o=await this.watchMultiple(i,r,n,r);if(this.newUpdates){let e={};return e[o.symbol]=o,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeDict(t,"content",{}),s=this.safeString(i,"symbol"),r=this.safeSymbol(s,void 0,"_"),a=this.parseWsTicker(i);this.tickers[r]=a,e.resolve(this.tickers[r],"ticker:"+r)}parseWsTicker(e,t){let i=this.safeString(e,"date",""),s=this.safeString(e,"time",""),r=i.slice(0,4)+"-"+i.slice(4,6)+"-"+i.slice(6,8)+"T"+s.slice(0,2)+":"+s.slice(2,4)+":"+s.slice(4,6),a=this.safeString(e,"symbol");return this.safeTicker({symbol:this.safeSymbol(a,t,"_"),timestamp:this.parse8601(r),datetime:r,high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:void 0,bidVolume:this.safeString(e,"buyVolume"),ask:void 0,askVolume:this.safeString(e,"sellVolume"),vwap:void 0,open:this.safeString(e,"openPrice"),close:this.safeString(e,"closePrice"),last:void 0,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"chgAmt"),percentage:this.safeString(e,"chgRate"),average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"value"),info:e},t)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.urls.api.ws,r=this.market(e),a="orderbook:"+(e=r.symbol),n={type:"orderbookdepth",symbols:[r.base+"_"+r.quote]};return(await this.watch(s,a,this.extend(n,i),a)).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"content",{}),s=this.safeList(i,"list",[]),r=this.safeDict(s,0,{}),a=this.safeString(r,"symbol"),n=this.safeSymbol(a,void 0,"_"),o=this.safeString(i,"datetime"),h=this.parseToInt(o.slice(0,13));if(!(n in this.orderbooks)){let e=this.orderBook();e.symbol=n,this.orderbooks[n]=e}let d=this.orderbooks[n];this.handleDeltas(d,s),d.timestamp=h,d.datetime=this.iso8601(h),e.resolve(d,"orderbook:"+n)}handleDelta(e,t){let i=this.safeString(t,"orderType"),s=this.parseBidAsk(t,"price","quantity");e["bid"===i?"bids":"asks"].storeArray(s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.urls.api.ws,a=this.market(e),n="trade:"+(e=a.symbol),o={type:"transaction",symbols:[a.base+"_"+a.quote]},h=await this.watch(r,n,this.extend(o,s),n);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeDict(t,"content",{}),s=this.safeList(i,"list",[]);for(let t=0;t<s.length;t++){let i=s[t],r=this.safeString(i,"symbol"),a=this.safeSymbol(r,void 0,"_");if(!(a in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3),t=new sH.I3(e);this.trades[a]=t}let n=this.trades[a],o=this.parseWsTrade(i);n.append(o);let h="trade:"+a;e.resolve(n,h)}}parseWsTrade(e,t){let i=this.safeString(e,"symbol"),s=this.safeString(e,"contDtm"),r=this.safeString(e,"buySellGb");return this.safeTrade({id:void 0,info:e,timestamp:this.parse8601(s),datetime:s,symbol:this.safeSymbol(i,t,"_"),order:void 0,type:void 0,side:"1"===r?"buy":"sell",takerOrMaker:void 0,price:this.safeString(e,"contPrice"),amount:this.safeString(e,"contQty"),cost:this.safeString(e,"contAmt"),fee:void 0},t)}handleErrorMessage(e,t){if(!("status"in t))return!0;let i=this.safeString(t,"status");try{if("0000"!==i){let e=this.safeString(t,"resmsg");throw new n.ExchangeError(this.id+" "+e)}}catch(t){e.reject(t)}return!0}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;let i=this.safeString(t,"type");if(void 0!==i){let s={ticker:this.handleTicker,orderbookdepth:this.handleOrderBook,transaction:this.handleTrades},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}}var s2=i(44);class s3 extends $.A{describe(){return this.deepExtend(super.describe(),{has:{createOrderWs:!1,editOrderWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,cancelOrderWs:!1,cancelOrdersWs:!1,cancelAllOrdersWs:!1,ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOHLCV:!0,watchPosition:"emulated",watchPositions:!0},urls:{api:{ws:{spot:{public:"wss://ws-manager-compress.{hostname}/api?protocol=1.1",private:"wss://ws-manager-compress.{hostname}/user?protocol=1.1"},swap:{public:"wss://openapi-ws-v2.{hostname}/api?protocol=1.1",private:"wss://openapi-ws-v2.{hostname}/user?protocol=1.1"}}}},options:{defaultType:"spot",watchBalance:{fetchBalanceSnapshot:!0,awaitBalanceSnapshot:!1},watchOrderBook:{depth:"depth/increase100"},watchOrderBookForSymbols:{depth:"depth/increase100"},ws:{inflate:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","45m":"45m","1h":"1H","2h":"2H","3h":"3H","4h":"4H","1d":"1D","1w":"1W","1M":"1M"}},streaming:{keepAlive:15e3}})}async subscribe(e,t,i,s={}){let r;let a=this.market(t),n=this.implodeHostname(this.urls.api.ws[i].public),o={};return o="spot"===i?{op:"subscribe",args:[r="spot/"+e+":"+a.id]}:{action:"subscribe",args:[r="futures/"+e+":"+a.id]},await this.watch(n,r,this.deepExtend(o,s),r)}async subscribeMultiple(e,t,i,s={}){i=this.marketSymbols(i,t,!1,!0);let r=this.implodeHostname(this.urls.api.ws[t].public),a="spot"===t?"spot":"futures",n="spot"===t?"op":"action",o=[],h=[];for(let t=0;t<i.length;t++){let s=this.market(i[t]),r=a+"/"+e+":"+s.id;o.push(r),h.push(e+":"+s.symbol)}"spot"!==t&&"ticker"===e&&(o=[a+"/"+e]);let d={args:o};return d[n]="subscribe",await this.watchMultiple(r,h,this.deepExtend(d,s),o)}async watchBalance(e={}){let t,i;await this.loadMarkets();let s="spot";[s,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),await this.authenticate(s,e);let r={};r="spot"===s?{op:"subscribe",args:["spot/user/balance:BALANCE_UPDATE"]}:{action:"subscribe",args:["futures/asset:USDT","futures/asset:BTC","futures/asset:ETH"]};let a="balance:"+s,n=this.implodeHostname(this.urls.api.ws[s].private),o=this.client(n);return this.setBalanceCache(o,s,a),[t,e]=this.handleOptionAndParams(this.options,"watchBalance","fetchBalanceSnapshot",!0),[i,e]=this.handleOptionAndParams(this.options,"watchBalance","awaitBalanceSnapshot",!1),t&&i&&await o.future(s+":fetchBalanceSnapshot"),await this.watch(n,a,this.deepExtend(r,e),a)}setBalanceCache(e,t,i){if(i in e.subscriptions)return;let s=this.safeValue(this.options,"watchBalance");if(this.safeBool(s,"fetchBalanceSnapshot",!0)){let i=t+":fetchBalanceSnapshot";i in e.futures||(e.future(i),this.spawn(this.loadBalanceSnapshot,e,i,t))}this.balance[t]={}}async loadBalanceSnapshot(e,t,i){let s=await this.fetchBalance({type:i});this.balance[i]=this.extend(s,this.safeValue(this.balance,i,{})),e.futures[t].resolve(),e.resolve(this.balance[i],"balance:"+i)}handleBalance(e,t){let i=this.safeString2(t,"table","group"),s=this.safeValue(t,"data");if(void 0===s)return;let r=i.indexOf("spot")>=0,a=r?"spot":"swap";if(this.balance[a].info=t,r){if(!Array.isArray(s))return;for(let e=0;e<s.length;e++){let i=this.safeInteger(t,"event_time");this.balance[a].timestamp=i,this.balance[a].datetime=this.iso8601(i);let r=this.safeValue(s[e],"balance_details",[]);for(let t=0;t<r.length;t++){let t=r[e],i=this.account(),s=this.safeString(t,"ccy"),n=this.safeCurrencyCode(s);i.free=this.safeString(t,"av_bal"),i.used=this.safeString(t,"fz_bal"),this.balance[a][n]=i}}}else{let e=this.safeString(s,"currency"),t=this.safeCurrencyCode(e),i=this.account();i.free=this.safeString(s,"available_balance"),i.used=this.safeString(s,"frozen_balance"),this.balance[a][t]=i}this.balance[a]=this.safeBalance(this.balance[a]),e.resolve(this.balance[a],"balance:"+a)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){let r;await this.loadMarkets(),[e,r,s]=this.getParamsForMultipleSub("watchTradesForSymbols",e,i,s);let a=await this.subscribeMultiple("trade",r,e,s);if(this.newUpdates){let e=this.safeDict(a,0),t=this.safeString(e,"symbol");i=a.getLimit(t,i)}return this.filterBySinceLimit(a,t,i,"timestamp",!0)}getParamsForMultipleSub(e,t,i,s={}){let r;if((t=this.marketSymbols(t,void 0,!1,!0)).length>20)throw new n.NotSupported(this.id+" "+e+"() accepts a maximum of 20 symbols in one request");let a=this.market(t[0]);return[r,s]=this.handleMarketTypeAndParams(e,a,s),[t,r,s]}async watchTicker(e,t={}){return await this.loadMarkets(),e=this.symbol(e),(await this.watchTickers([e],t))[e]}async watchTickers(e,t={}){let i;await this.loadMarkets();let s=this.getMarketFromSymbols(e);[i,t]=this.handleMarketTypeAndParams("watchTickers",s,t);let r=await this.subscribeMultiple("ticker",i,e,t);if(this.newUpdates){let e={};return e[r.symbol]=r,e}return this.filterByArray(this.tickers,"symbol",e)}async watchBidsAsks(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let s=this.getMarketFromSymbols(e);[i,t]=this.handleMarketTypeAndParams("watchBidsAsks",s,t);let r=this.implodeHostname(this.urls.api.ws[i].public),a="spot"===i?"spot":"futures",n=[],o=[];for(let t=0;t<e.length;t++){let i=this.market(e[t]);n.push(a+"/ticker:"+i.id),o.push("bidask:"+e[t])}"spot"!==i&&(n=[a+"/ticker"]);let h={args:n};h["spot"===i?"op":"action"]="subscribe";let d=await this.watchMultiple(r,o,h,n);if(this.newUpdates){let e={};return e[d.symbol]=d,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeString(t,"table"),s=[];if((s=void 0!==i?this.safeList(t,"data",[]):[this.safeValue(t,"data",{})]).length)for(let t=0;t<s.length;t++){let i=this.parseWsBidAsk(s[t]),r=i.symbol;this.bidsasks[r]=i;let a="bidask:"+r;e.resolve(i,a)}}parseWsBidAsk(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"ms_t");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeString2(e,"ask_px","ask_price"),askVolume:this.safeString2(e,"ask_sz","ask_vol"),bid:this.safeString2(e,"bid_px","bid_price"),bidVolume:this.safeString2(e,"bid_sz","bid_vol"),info:e},t)}async watchOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n="orders";void 0!==e&&(e=this.symbol(e),r=this.market(e),n="orders::"+e);let o="spot";if([o,s]=this.handleMarketTypeAndParams("watchOrders",r,s),await this.authenticate(o,s),"spot"===o){let t="spot/user/order:";void 0!==e?t+=r.id:t="spot/user/orders:ALL_SYMBOLS",a={op:"subscribe",args:[t]}}else a={action:"subscribe",args:["futures/order"]};let h=this.implodeHostname(this.urls.api.ws[o].private),d=await this.watch(h,n,this.deepExtend(a,s),n);return this.newUpdates?d:this.filterBySymbolSinceLimit(this.orders,e,t,i,!0)}handleOrders(e,t){let i=this.safeValue(t,"data");if(void 0===i)return;let s=i.length,r=[],a={};if(s>0){let e=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new sH.Pt(e));let t=this.orders;for(let e=0;e<i.length;e++){let s=this.parseWsOrder(i[e]);t.append(s),r.push(s),a[s.symbol]=!0}}let n="orders",o=Object.keys(a);for(let t=0;t<o.length;t++){let i=n+"::"+o[t];e.resolve(r,i)}e.resolve(r,n)}parseWsOrder(e,t){if(void 0===this.safeNumber(e,"action")){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t,"_","spot");let s=this.safeString(e,"order_id"),r=this.safeString(e,"clientOid"),a=this.safeString(e,"price"),n=this.safeString(e,"filled_size"),o=this.safeString(e,"size"),h=this.safeString(e,"type"),d=this.safeString(e,"state"),l=this.parseOrderStatusByType(t.type,d),c=this.safeInteger(e,"ms_t"),u=t.symbol,f=this.safeStringLower(e,"side");return this.safeOrder({info:e,symbol:u,id:s,clientOrderId:r,timestamp:void 0,datetime:void 0,lastTradeTimestamp:c,type:h,timeInForce:void 0,postOnly:void 0,side:f,price:a,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:void 0,average:void 0,filled:n,remaining:void 0,status:l,fee:void 0,trades:void 0},t)}{let i;let s=this.safeValue(e,"order"),r=this.safeString(s,"symbol"),a=this.safeSymbol(r,t,"","swap"),n=this.safeString(s,"order_id"),o=this.safeInteger(s,"create_time"),h=this.safeInteger(s,"update_time"),d=this.safeValue(s,"last_trade"),l=this.orders,c=this.safeValue(l.hashmap,a,{});return void 0!==this.safeValue(c,n)&&(i=this.safeValue(e,"trades")),void 0!==d&&(void 0===i&&(i=[]),i.push(d)),this.safeOrder({info:e,symbol:a,id:n,clientOrderId:this.safeString(s,"client_order_id"),timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:h,type:this.safeString(s,"type"),timeInForce:void 0,postOnly:void 0,side:this.parseWsOrderSide(this.safeString(s,"side")),price:this.safeString(s,"price"),stopPrice:void 0,triggerPrice:void 0,amount:this.safeString(s,"size"),cost:void 0,average:this.safeString(s,"deal_avg_price"),filled:this.safeString(s,"deal_size"),remaining:void 0,status:this.parseWsOrderStatus(this.safeString(e,"action")),fee:void 0,trades:i},t)}}parseWsOrderStatus(e){return this.safeString({1:"closed",2:"open",3:"canceled",4:"closed",5:"canceled",6:"open",7:"open",8:"closed",9:"closed"},e,e)}parseWsOrderSide(e){return this.safeString({1:"buy",2:"buy",3:"sell",4:"sell"},e,e)}async watchPositions(e,t,i,s={}){await this.loadMarkets();let r="swap";await this.authenticate(r,s);let a="positions";void 0!==(e=this.marketSymbols(e,"swap",!0,!0,!1))&&(a+="::"+e.join(","));let n=this.implodeHostname(this.urls.api.ws[r].private),o=await this.watch(n,a,this.deepExtend({action:"subscribe",args:["futures/position"]},s),"futures/position");return this.newUpdates?o:this.filterBySymbolsSinceLimit(this.positions,e,t,i)}handlePositions(e,t){let i=this.safeValue(t,"data",[]);void 0===this.positions&&(this.positions=new sH.Hk);let s=this.positions,r=[];for(let e=0;e<i.length;e++){let t=i[e],a=this.parseWsPosition(t);r.push(a),s.append(a)}let a=this.findMessageHashes(e,"positions::");for(let t=0;t<a.length;t++){let i=a[t],s=i.split("::")[1].split(","),n=this.filterByArray(r,"symbol",s,!1);this.isEmpty(n)||e.resolve(n,i)}e.resolve(r,"positions")}parseWsPosition(e,t){let i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t,void 0,"swap")).symbol,r=this.safeInteger(e,"create_time"),a=this.safeInteger(e,"update_time"),n=this.safeInteger(e,"position_type"),o=this.safeInteger(e,"open_type");return this.safePosition({info:e,id:void 0,symbol:s,timestamp:r,datetime:this.iso8601(r),lastUpdateTimestamp:a,hedged:void 0,side:1===n?"long":"short",contracts:this.safeNumber(e,"hold_volume"),contractSize:this.safeNumber(t,"contractSize"),entryPrice:this.safeNumber(e,"open_avg_price"),markPrice:this.safeNumber(e,"hold_avg_price"),lastPrice:void 0,notional:void 0,leverage:void 0,collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,unrealizedPnl:void 0,realizedPnl:void 0,liquidationPrice:this.safeNumber(e,"liquidate_price"),marginMode:1===o?"isolated":"cross",percentage:void 0,marginRatio:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}handleTrade(e,t){let i;let s=this.safeValue(t,"data");if(void 0===s)return;let r=s.length;if("group"in t)for(let e=0;e<r;e++){let t=r-e-1;i=this.handleTradeLoop(s[t])}else for(let e=0;e<r;e++)i=this.handleTradeLoop(s[e]);e.resolve(this.trades[i],"trade:"+i)}handleTradeLoop(e){let t=this.parseWsTrade(e),i=t.symbol,s=this.safeInteger(this.options,"tradesLimit",1e3);return void 0===this.safeValue(this.trades,i)&&(this.trades[i]=new sH.I3(s)),this.trades[i].append(t),i}parseWsTrade(e,t){let i=void 0===this.safeString(e,"contract_id")?"spot":"swap",s=this.safeInteger(e,"create_time_mill",this.safeTimestamp(e,"s_t")),r=this.safeString(e,"symbol");return this.safeTrade({info:e,id:this.safeString(e,"trade_id"),order:void 0,timestamp:s,datetime:this.iso8601(s),symbol:this.safeSymbol(r,t,"spot"===i?"_":"",i),type:void 0,side:this.safeString(e,"side"),price:this.safeString2(e,"price","deal_price"),amount:this.safeString2(e,"size","deal_vol"),cost:void 0,takerOrMaker:void 0,fee:void 0},t)}handleTicker(e,t){this.handleBidAsk(e,t);let i=void 0!==this.safeString(t,"table"),s=[];if((s=i?this.safeList(t,"data",[]):[this.safeValue(t,"data",{})]).length)for(let t=0;t<s.length;t++){let r=i?this.parseTicker(s[t]):this.parseWsSwapTicker(s[t]),a=r.symbol;this.tickers[a]=r;let n="ticker:"+a;e.resolve(r,n)}}parseWsSwapTicker(e,t){let i=this.safeString(e,"symbol");return this.safeTicker({symbol:this.safeSymbol(i,t,"","swap"),timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:this.safeString(e,"bid_price"),bidVolume:this.safeString(e,"bid_vol"),ask:this.safeString(e,"ask_price"),askVolume:this.safeString(e,"ask_vol"),vwap:void 0,open:void 0,close:void 0,last:this.safeString(e,"last_price"),previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"fair_price"),baseVolume:void 0,quoteVolume:this.safeString(e,"volume_24"),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets(),e=this.symbol(e);let n=this.market(e),o="spot";[o,r]=this.handleMarketTypeAndParams("watchOrderBook",n,r);let h=this.safeValue(this.options,"timeframes",{}),d=this.safeString(h,t);a="spot"===o?"kline"+d:"klineBin"+d;let l=await this.subscribe(a,e,o,r);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString2(t,"table","group"),s=i.indexOf("spot")>=0,r=this.safeValue(t,"data");if(void 0===r)return;let a=i.split("/"),n=this.safeString(a,1,"").replace("kline",""),o=(n=n.replace("Bin","")).split(":");n=this.safeString(o,0);let h=this.safeValue(this.options,"timeframes",{}),d=this.findTimeframe(n,h),l=1e3*this.parseTimeframe(d);if(s)for(let t=0;t<r.length;t++){let s=this.safeString(r[t],"symbol"),a=this.safeMarket(s),n=a.symbol,o=this.safeValue(r[t],"candle"),h=this.parseOHLCV(o,a);h[0]=this.parseToInt(h[0]/l)*l,this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let c=this.safeValue(this.ohlcvs[n],d);if(void 0===c){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new sH.TG(e),this.ohlcvs[n][d]=c}c.append(h);let u=i+":"+s;e.resolve(c,u)}else{let t=this.safeString(r,"symbol"),s=this.safeMarket(t,void 0,void 0,"swap"),a=s.symbol,n=this.safeValue(r,"items",[]);this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let o=this.safeValue(this.ohlcvs[a],d);if(void 0===o){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);o=new sH.TG(e),this.ohlcvs[a][d]=o}for(let e=0;e<n.length;e++){let t=n[e],i=this.parseOHLCV(t,s);o.append(i)}e.resolve(o,i)}}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(s,"depth","depth/increase100");e=this.symbol(e);let a=this.market(e),n="spot";return[n,i]=this.handleMarketTypeAndParams("watchOrderBook",a,i),"swap"===n&&"depth/increase100"===r&&(r="depth50"),(await this.subscribe(r,e,n,i)).limit()}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){let s=this.safeList(t,"asks",[]),r=this.safeList(t,"bids",[]);this.handleDeltas(i.asks,s),this.handleDeltas(i.bids,r);let a=this.safeInteger(t,"ms_t"),n=this.safeString(t,"symbol"),o=this.safeSymbol(n);return i.symbol=o,i.timestamp=a,i.datetime=this.iso8601(a),i}handleOrderBook(e,t){let i="table"in t,s=[];if(i)s=this.safeList(t,"data",s);else{let e=this.safeDict(t,"data");void 0!==e&&s.push(e)}if(s.length<=0)return;let r=this.safeString2(t,"table","group"),a=["100","50","20","10","5"],n=0;for(let e=0;e<a.length;e++){let t=a[e];if(r.indexOf(t)>=0){n=this.parseToInt(t);break}}if(i){let t=r.replace("spot/","");for(let i=0;i<s.length;i++){let a=s[i],o=this.safeString(a,"symbol"),h=this.safeSymbol(o);if(!(h in this.orderbooks)){let e=this.orderBook({},n);e.symbol=h,this.orderbooks[h]=e}let d=this.orderbooks[h];"snapshot"!==this.safeString(a,"type")&&r.indexOf("increase")>=0||d.reset({}),this.handleOrderBookMessage(e,a,d);let l=this.safeInteger(a,"ms_t");void 0===d.timestamp&&(d.timestamp=l,d.datetime=this.iso8601(l));let c=r+":"+o;e.resolve(d,c);let u=t+":"+h;e.resolve(d,u)}}else{let t=r.split(":")[0].replace("futures/",""),i=s[0],a=i.depths,o=this.safeString(i,"symbol"),h=this.safeSymbol(o);if(!(h in this.orderbooks)){let e=this.orderBook({},n);e.symbol=h,this.orderbooks[h]=e}let d=this.orderbooks[h],l=this.safeInteger(i,"way"),c=1===l?"bids":"asks";1===l?d[c]=new s2.PB([],n):d[c]=new s2.$w([],n);for(let e=0;e<a.length;e++){let t=a[e],i=this.safeNumber(t,"price"),s=this.safeNumber(t,"vol");this.safeValue(d,c).store(i,s)}let u=d.bids.length,f=d.asks.length;if(0===u||0===f)return;let p=this.safeInteger(i,"ms_t");d.timestamp=p,d.datetime=this.iso8601(p),e.resolve(d,r),e.resolve(d,t+":"+h)}}async watchOrderBookForSymbols(e,t,i={}){let s,r;return await this.loadMarkets(),[e,s,i]=this.getParamsForMultipleSub("watchOrderBookForSymbols",e,t,i),[r,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","depth","depth/increase100"),"swap"===s&&"depth/increase100"===r&&(r="depth50"),(await this.subscribeMultiple(r,s,e,i)).limit()}async authenticate(e,t={}){this.checkRequiredCredentials();let i=this.implodeHostname(this.urls.api.ws[e].private),s="authenticated",r=this.client(i),a=r.future(s);if(void 0===this.safeValue(r.subscriptions,s)){let r;let a=this.milliseconds().toString(),n=this.uid,o=this.hmac(this.encode(a+"#"+n+"#bitmart.WebSocket"),this.encode(this.secret),l.s);r="spot"===e?{op:"login",args:[this.apiKey,a,o]}:{action:"access",args:[this.apiKey,a,o,"web"]};let h=this.extend(r,t);this.watch(i,s,h,s)}return await a}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){this.safeValue(e.futures,"authenticated").resolve(!0)}handleErrorMessage(e,t){let i=this.safeString(t,"errorCode"),s=this.safeString(t,"error");try{if(void 0!==i||void 0!==s){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);let r=this.safeValue(t,"message",s);this.throwBroadlyMatchedException(this.exceptions.broad,r,e);let a=this.safeString(t,"action");if("access"===a)throw new n.AuthenticationError(e);throw new n.ExchangeError(e)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}return e.reject(t),!0}}handleMessage(e,t){if(!this.handleErrorMessage(e,t)){if("data"in t){let i=this.safeString2(t,"table","group"),s={depth:this.handleOrderBook,ticker:this.handleTicker,trade:this.handleTrade,kline:this.handleOHLCV,order:this.handleOrders,position:this.handlePositions,balance:this.handleBalance,asset:this.handleBalance},r=Object.keys(s);for(let a=0;a<r.length;a++){let n=r[a];i.indexOf(n)>=0&&this.safeValue(s,n).call(this,e,t)}}else{let i=this.safeString2(t,"event","action");if(void 0!==i){let s={login:this.handleAuthenticate,access:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}}}}class s5 extends ee{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchLiquidations:!0,watchLiquidationsForSymbols:!0,watchMyLiquidations:void 0,watchMyLiquidationsForSymbols:void 0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchPostions:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0},urls:{test:{ws:"wss://ws.testnet.bitmex.com/realtime"},api:{ws:"wss://ws.bitmex.com/realtime"}},options:{watchOrderBookLevel:"orderBookL2",tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{ws:{exact:{},broad:{"Rate limit exceeded":n.RateLimitExceeded}}}})}async watchTicker(e,t={}){return await this.loadMarkets(),e=this.symbol(e),(await this.watchTickers([e],t))[e]}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0);let i="instrument",s=this.urls.api.ws,r=[],a=[];if(void 0!==e)for(let t=0;t<e.length;t++){let s=e[t],n=i+":"+this.market(s).id;a.push(n);let o="ticker:"+s;r.push(o)}else a.push(i),r.push("alltickers");let n=await this.watchMultiple(s,r,this.extend({op:"subscribe",args:a},t),a);if(this.newUpdates){let e={};return e[n.symbol]=n,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeList(t,"data",[]),s={};for(let t=0;t<i.length;t++){let r=i[t],a=this.safeString(r,"symbol"),n=this.safeSymbol(a);n in this.tickers||(this.tickers[n]=this.parseTicker({}));let o=this.parseTicker(r),h=this.deepExtend(this.tickers[n],o);s[n]=h,this.tickers[n]=h;let d="ticker:"+n;e.resolve(h,d),e.resolve(h,"alltickers")}return t}async watchLiquidations(e,t,i,s={}){return this.watchLiquidationsForSymbols([e],t,i,s)}async watchLiquidationsForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0,!0);let r=[],a=[];if(this.isEmpty(e))a.push("liquidation"),r.push("liquidations");else for(let t=0;t<e.length;t++){let i=e[t],s=this.market(i);a.push("liquidation:"+s.id),r.push("liquidations::"+i)}let n=this.urls.api.ws,o=await this.watchMultiple(n,r,this.deepExtend({op:"subscribe",args:a},s),a);return this.newUpdates?o:this.filterBySymbolsSinceLimit(this.liquidations,e,t,i,!0)}handleLiquidation(e,t){let i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.parseLiquidation(t),a=r.symbol,n=this.safeValue(this.liquidations,a);if(void 0===n){let e=this.safeInteger(this.options,"liquidationsLimit",1e3);n=new sH.I3(e)}n.append(r),this.liquidations[a]=n,s.push(r)}e.resolve(s,"liquidations");let r=this.indexBy(s,"symbol"),a=Object.keys(r);for(let t=0;t<a.length;t++){let i=a[t];e.resolve(r[i],"liquidations::"+i)}}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate();let t="margin",i=this.urls.api.ws;return await this.watch(i,t,this.extend({op:"subscribe",args:[t]},e),t)}handleBalance(e,t){let i=this.safeValue(t,"data"),s=this.parseBalance(i);this.balance=this.extend(this.balance,s);let r=this.safeString(t,"table");e.resolve(this.balance,r)}handleTrades(e,t){let i=this.safeValue(t,"data",[]),s=this.groupBy(i,"symbol"),r=Object.keys(s);for(let t=0;t<r.length;t++){let i=r[t],a=this.safeMarket(i),n=a.symbol,o="trade:"+n,h=this.parseTrades(s[i],a),d=this.safeValue(this.trades,n);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.I3(e),this.trades[n]=d}for(let e=0;e<h.length;e++)d.append(h[e]);e.resolve(d,o)}}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){this.checkRequiredCredentials();let i=this.milliseconds(),r="GET/realtime"+i.toString(),a=this.hmac(this.encode(r),this.encode(this.secret),l.s),n={op:"authKeyExpires",args:[this.apiKey,i,a]},o=this.extend(n,e);this.watch(t,s,o,s)}return await r}handleAuthenticationMessage(e,t){let i=this.safeBool(t,"success",!1),s="authenticated";if(i)this.safeValue(e.futures,s).resolve(!0);else{let i=new n.AuthenticationError(this.json(t));e.reject(i,s),s in e.subscriptions&&delete e.subscriptions[s]}}async watchPositions(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r="position",a="positions";this.isEmpty(e)||(a="::"+e.join(","));let n=this.urls.api.ws,o=await this.watch(n,a,{op:"subscribe",args:[r]},r);return this.newUpdates?o:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}handlePositions(e,t){void 0===this.positions&&(this.positions=new sH.Hk);let i=this.positions,s=this.safeValue(t,"data",[]),r=[];for(let e=0;e<s.length;e++){let t=s[e],a=this.parsePosition(t);r.push(a),i.append(a)}let a=this.findMessageHashes(e,"positions::");for(let t=0;t<a.length;t++){let i=a[t],s=i.split("::")[1].split(","),n=this.filterByArray(r,"symbol",s,!1);this.isEmpty(n)||e.resolve(n,i)}e.resolve(r,"positions")}async watchOrders(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r="order",a=r;void 0!==e&&(a+=":"+(e=this.symbol(e)));let n=this.urls.api.ws,o=await this.watch(n,a,{op:"subscribe",args:[r]},r);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleOrders(e,t){let i=this.safeValue(t,"data",[]),s="order",r=i.length;if(r>0){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let t=this.orders,a={};for(let e=0;e<r;e++){let s=i[e],r=this.safeString(s,"orderID"),n=this.safeValue(t.hashmap,r),o=s;void 0!==n&&(o=this.extend(n.info,s));let h=this.parseOrder(o);t.append(h),a[h.symbol]=!0}e.resolve(this.orders,s);let n=Object.keys(a);for(let t=0;t<n.length;t++){let i=n[t];e.resolve(this.orders,s+":"+i)}}}async watchMyTrades(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r="execution",a=r;void 0!==e&&(a+=":"+(e=this.symbol(e)));let n=this.urls.api.ws,o=await this.watch(n,a,{op:"subscribe",args:[r]},r);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleMyTrades(e,t){let i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=this.groupBy(s,"execType"),a=this.safeValue(r,"Trade",[]),n=this.parseTrades(a);if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let o=this.myTrades,h={};for(let e=0;e<n.length;e++){let t=n[e],i=t.symbol;o.append(t),h[i]=t}n.length>0&&e.resolve(o,i);let d=Object.keys(h);for(let t=0;t<d.length;t++)e.resolve(o,i+":"+d[t])}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){let s;if(void 0===t)s=this.safeString(this.options,"watchOrderBookLevel","orderBookL2");else if(25===t)s="orderBookL2_25";else if(10===t)s="orderBookL10";else throw new n.ExchangeError(this.id+" watchOrderBookForSymbols limit argument must be undefined (L2), 25 (L2) or 10 (L3)");await this.loadMarkets(),e=this.marketSymbols(e);let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],n=s+":"+this.market(i).id;r.push(n);let o=s+":"+i;a.push(o)}let o=this.urls.api.ws;return(await this.watchMultiple(o,a,this.deepExtend({op:"subscribe",args:r},i),r)).limit()}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let r="trade",a=[],n=[];for(let t=0;t<e.length;t++){let i=e[t],s=r+":"+this.market(i).id;a.push(s);let o=r+":"+i;n.push(o)}let o=this.urls.api.ws,h=await this.watchMultiple(o,n,this.deepExtend({op:"subscribe",args:a},s),a);if(this.newUpdates){let e=this.safeValue(h,0),t=this.safeString(e,"symbol");i=h.getLimit(t,i)}return this.filterBySinceLimit(h,t,i,"timestamp",!0)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n="tradeBin"+this.safeString(this.timeframes,t,t)+":"+a.id,o=this.urls.api.ws,h=await this.watch(o,n,this.extend({op:"subscribe",args:[n]},r),n);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"table"),s=i.replace("tradeBin",""),r=this.findTimeframe(s),a=this.parseTimeframe(r),n=this.safeValue(t,"data",[]),o={};for(let e=0;e<n.length;e++){let t=n[e],s=this.safeString(t,"symbol"),h=this.safeMarket(s),d=h.symbol,l=i+":"+h.id,c=[this.parse8601(this.safeString(t,"timestamp"))-1e3*a,void 0,this.safeFloat(t,"high"),this.safeFloat(t,"low"),this.safeFloat(t,"close"),this.safeFloat(t,"volume")];this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let u=this.safeValue(this.ohlcvs[d],r);if(void 0===u){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new sH.TG(e),this.ohlcvs[d][r]=u}u.append(c),o[l]=u}let h=Object.keys(o);for(let t=0;t<h.length;t++){let i=h[t];e.resolve(o[i],i)}}async watchHeartbeat(e={}){await this.loadMarkets();let t=this.urls.api.ws;return await this.watch(t,"heartbeat")}handleOrderBook(e,t){let i=this.safeString(t,"action"),s=this.safeString(t,"table");if(void 0===s)return;let r=this.safeValue(t,"data",[]);if("partial"===i){let i=this.safeDict(t,"filter",{}),a=this.safeValue(i,"symbol");if(void 0===a)return;let n=this.safeMarket(a).symbol;"orderBookL2"===s?this.orderbooks[n]=this.indexedOrderBook():"orderBookL2_25"===s?this.orderbooks[n]=this.indexedOrderBook({},25):"orderBook10"===s&&(this.orderbooks[n]=this.indexedOrderBook({},10));let o=this.orderbooks[n];o.symbol=n;for(let e=0;e<r.length;e++){let t=this.safeFloat(r[e],"price"),i=this.convertFromRawQuantity(n,this.safeString(r[e],"size")),s=this.safeString(r[e],"id"),a=this.safeString(r[e],"side");o[a="Buy"===a?"bids":"asks"].storeArray([t,i,s]);let h=this.safeString(r[e],"timestamp");o.timestamp=this.parse8601(h),o.datetime=h}let h=s+":"+n;e.resolve(o,h)}else{let t={};for(let e=0;e<r.length;e++){let s=this.safeValue(r[e],"symbol");if(void 0===s)return;s in t||(t[s]=0),t[s]=this.sum(t,1);let a=this.safeMarket(s).symbol,n=this.orderbooks[a],o=this.safeNumber(r[e],"price"),h="delete"===i?0:this.convertFromRawQuantity(a,this.safeString(r[e],"size","0")),d=this.safeString(r[e],"id"),l=this.safeString(r[e],"side");n[l="Buy"===l?"bids":"asks"].storeArray([o,h,d]);let c=this.safeString(r[e],"timestamp");n.timestamp=this.parse8601(c),n.datetime=c}let a=Object.keys(t);for(let t=0;t<a.length;t++){let i=a[t],r=this.safeMarket(i).symbol,n=s+":"+r,o=this.orderbooks[r];e.resolve(o,n)}}}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){return t}handleErrorMessage(e,t){let i=this.safeString(t,"error");if(void 0!==i){let s=this.safeValue(t,"request",{}),r=this.safeValue(s,"args",[]);if(r.length>0){let t;let s=r[0],a=this.exceptions.ws.broad,o=this.findBroadlyMatchedKey(a,i);return t=void 0===o?new n.ExchangeError(i):new a[o](i),e.reject(t,s),!1}}return!0}handleMessage(e,t){if(this.handleErrorMessage(e,t)){let i=this.safeString(t,"table"),s={orderBookL2:this.handleOrderBook,orderBookL2_25:this.handleOrderBook,orderBook10:this.handleOrderBook,instrument:this.handleTicker,trade:this.handleTrades,tradeBin1m:this.handleOHLCV,tradeBin5m:this.handleOHLCV,tradeBin1h:this.handleOHLCV,tradeBin1d:this.handleOHLCV,order:this.handleOrders,execution:this.handleMyTrades,margin:this.handleBalance,liquidation:this.handleLiquidation,position:this.handlePositions},r=this.safeValue(s,i);if(void 0===r){let i=this.safeValue(t,"request",{});"authKeyExpires"===this.safeValue(i,"op")&&this.handleAuthenticationMessage(e,t)}else r.call(this,e,t)}}}class s6 extends es{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!1,watchOrderBook:!0,watchOrders:!1,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1},urls:{ws:{public:"wss://stream.bitopro.com:443/ws/v1/pub",private:"wss://stream.bitopro.com:443/ws/v1/pub/auth"}},requiredCredentials:{apiKey:!0,secret:!0,login:!0},options:{tradesLimit:1e3,ordersLimit:1e3,ws:{options:{headers:{}}}}})}async watchPublic(e,t,i){let s=this.urls.ws.public+"/"+e+"/"+i;return await this.watch(s,t,void 0,t)}async watchOrderBook(e,t,i={}){let s;if(void 0!==t&&5!==t&&10!==t&&20!==t&&50!==t&&100!==t&&500!==t&&1e3!==t)throw new n.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 5, 10, 20, 50, 100, 500 or 1000");await this.loadMarkets();let r=this.market(e),a="ORDER_BOOK:"+(e=r.symbol);return s=void 0===t?r.id:r.id+":"+this.numberToString(t),(await this.watchPublic("order-books",a,s)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"pair"),s=this.safeMarket(i,void 0,"_").symbol,r=this.safeString(t,"event")+":"+s,a=this.safeValue(this.orderbooks,s);void 0===a&&(a=this.orderBook({}));let n=this.safeInteger(t,"timestamp"),o=this.parseOrderBook(t,s,n,"bids","asks","price","amount");a.reset(o),e.resolve(a,r)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="TRADE:"+(e=r.symbol),n=await this.watchPublic("trades",a,r.id);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleTrade(e,t){let i=this.safeString(t,"pair"),s=this.safeMarket(i,void 0,"_"),r=s.symbol,a=this.safeString(t,"event")+":"+r,n=this.safeValue(t,"data",[]),o=this.parseTrades(n,s),h=this.safeValue(this.trades,r);if(void 0===h){let e=this.safeInteger(this.options,"tradesLimit",1e3);h=new sH.I3(e)}for(let e=0;e<o.length;e++)h.append(o[e]);this.trades[r]=h,e.resolve(h,a)}async watchMyTrades(e,t,i,s={}){this.checkRequiredCredentials(),await this.loadMarkets();let r="USER_TRADE";void 0!==e&&(r=r+":"+this.market(e).symbol);let a=this.urls.ws.private+"/user-trades";this.authenticate(a);let n=await this.watch(a,r,void 0,r);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleMyTrade(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"base"),r=this.safeString(i,"quote"),a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(r),o=this.symbol(a+"/"+n),h=this.safeString(t,"event");if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let d=this.myTrades,l=this.parseWsTrade(i);d.append(l),e.resolve(d,h),e.resolve(d,h+":"+o)}parseWsTrade(e,t){let i,s;let r=this.safeString(e,"matchID"),a=this.safeString(e,"orderID"),n=this.safeTimestamp(e,"transactionTimestamp"),o=this.safeString(e,"base"),h=this.safeString(e,"quote"),d=this.safeCurrencyCode(o),l=this.safeCurrencyCode(h),c=this.symbol(d+"/"+l);t=this.safeMarket(c,t);let u=this.safeString(e,"price"),f=this.safeStringLower(e,"orderType"),p=this.safeString(e,"side");void 0!==p&&("ask"===p?p="sell":"bid"===p&&(p="buy"));let m=this.safeString(e,"volume"),g=this.safeString(e,"fee"),y=this.safeCurrencyCode(this.safeString(e,"feeCurrency"));void 0!==g&&(i={cost:g,currency:y,rate:void 0});let v=this.safeValue(e,"isMaker");return void 0!==v&&(s=v?"maker":"taker"),this.safeTrade({id:r,info:e,order:a,timestamp:n,datetime:this.iso8601(n),symbol:c,takerOrMaker:s,type:f,side:p,price:u,amount:m,cost:void 0,fee:i},t)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="TICKER:"+(e=i.symbol);return await this.watchPublic("tickers",s,i.id)}handleTicker(e,t){let i=this.safeString(t,"pair"),s=this.safeMarket(i,void 0,"_").symbol,r=this.safeString(t,"event"),a=this.parseTicker(t),n=this.safeInteger(t,"timestamp"),o=this.safeString(t,"datetime");a.timestamp=n,a.datetime=o,this.tickers[s]=a,e.resolve(a,r+":"+s)}authenticate(e){if(void 0!==this.clients&&e in this.clients)return;this.checkRequiredCredentials();let t=this.milliseconds(),i=this.json({nonce:t,identity:this.login}),s=this.stringToBase64(i),r=this.hmac(this.encode(s),this.encode(this.secret),A.qt);this.extendExchangeOptions({ws:{options:{headers:{}}}});let a=this.options.ws.options.headers,n={"X-BITOPRO-API":"ccxt","X-BITOPRO-APIKEY":this.apiKey,"X-BITOPRO-PAYLOAD":s,"X-BITOPRO-SIGNATURE":r};this.options.ws.options.headers=n,this.client(e),this.options.ws.options.headers=a}async watchBalance(e={}){this.checkRequiredCredentials(),await this.loadMarkets();let t="ACCOUNT_BALANCE",i=this.urls.ws.private+"/account-balance";return this.authenticate(i),await this.watch(i,t,void 0,t)}handleBalance(e,t){let i=this.safeString(t,"event"),s=this.safeValue(t,"data"),r=this.safeInteger(t,"timestamp"),a=this.safeString(t,"datetime"),n=Object.keys(s),o={info:s,timestamp:r,datetime:a};for(let e=0;e<n.length;e++){let t=this.safeString(n,e),i=this.safeValue(s,t),r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),h=this.account();h.free=this.safeString(i,"available"),h.total=this.safeString(i,"amount"),o[a]=h}this.balance=this.safeBalance(o),e.resolve(this.balance,i)}handleMessage(e,t){let i={TRADE:this.handleTrade,TICKER:this.handleTicker,ORDER_BOOK:this.handleOrderBook,ACCOUNT_BALANCE:this.handleBalance,USER_TRADE:this.handleMyTrade},s=this.safeString(t,"event"),r=this.safeValue(i,s);void 0!==r&&r.call(this,e,t)}}class s4 extends en{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchTrades:!1,watchTradesForSymbols:!1,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://streams.onetrading.com/"}},options:{bp_remaining_quota:200,timeframes:{"1m":{unit:"MINUTES",period:1},"5m":{unit:"MINUTES",period:5},"15m":{unit:"MINUTES",period:15},"30m":{unit:"MINUTES",period:30},"1h":{unit:"HOURS",period:1},"4h":{unit:"HOURS",period:4},"1d":{unit:"DAYS",period:1},"1w":{unit:"WEEKS",period:1},"1M":{unit:"MONTHS",period:1}}},streaming:{},exceptions:{}})}async watchBalance(e={}){await this.authenticate(e);let t=this.urls.api.ws,i=this.safeInteger(this.options,"bp_remaining_quota",200),s=this.deepExtend({type:"SUBSCRIBE",bp_remaining_quota:i,channels:[{name:"ACCOUNT_HISTORY"}]},e);return await this.watch(t,"balance",s,"ACCOUNT_HISTORY",s)}handleBalanceSnapshot(e,t){this.balance=this.parseBalance(t),e.resolve(this.balance,"balance")}async watchTicker(e,t={}){await this.loadMarkets();let i="ticker."+(e=this.market(e).symbol);return await this.watchMany(i,{type:"SUBSCRIBE",channels:[{name:"MARKET_TICKER",price_points_mode:"INLINE"}]},"MARKET_TICKER",[e],t)}async watchTickers(e,t={}){await this.loadMarkets(),void 0===(e=this.marketSymbols(e))&&(e=[]);let i=await this.watchMany("tickers",{type:"SUBSCRIBE",channels:[{name:"MARKET_TICKER",price_points_mode:"INLINE"}]},"MARKET_TICKER",e,t);return this.filterByArray(i,"symbol",e)}handleTicker(e,t){let i=this.safeValue(t,"ticker_updates",[]),s=this.safeString(t,"time");for(let t=0;t<i.length;t++){let r=i[t],a=this.safeString(r,"instrument"),n=this.safeSymbol(a);this.tickers[n]=this.parseWSTicker(r);let o=this.parse8601(s);this.tickers[n].timestamp=o,this.tickers[n].datetime=this.iso8601(o),e.resolve(this.tickers[n],"ticker."+n)}e.resolve(this.tickers,"tickers")}parseWSTicker(e,t){let i=this.safeString(e,"instrument");return this.safeTicker({symbol:this.safeSymbol(i,t),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"last_price"),last:this.safeString(e,"last_price"),previousClose:void 0,change:this.safeString(e,"price_change"),percentage:this.safeString(e,"price_change_percentage"),average:void 0,baseVolume:void 0,quoteVolume:this.safeNumber(e,"volume"),info:e},t)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r="myTrades";void 0!==e&&(r+=":"+(e=this.market(e).symbol)),await this.authenticate(s);let a=this.urls.api.ws,n=this.safeInteger(this.options,"bp_remaining_quota",200),o=this.deepExtend({type:"SUBSCRIBE",bp_remaining_quota:n,channels:[{name:"ACCOUNT_HISTORY"}]},s),h=await this.watch(a,r,o,"ACCOUNT_HISTORY",o);return(this.newUpdates&&(i=h.getLimit(e,i)),0===(h=this.filterBySymbolSinceLimit(h,e,t,i)).length)?await this.watchMyTrades(e,t,i,s):h}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s="book:"+(e=this.market(e).symbol),r=0;void 0!==t&&(r=t);let a={type:"SUBSCRIBE",channels:[{name:"ORDER_BOOK",depth:r}]};return(await this.watchMany(s,a,"ORDER_BOOK",[e],i)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"type"),s=this.safeString(t,"instrument_code"),r=this.safeSymbol(s),a=this.safeString(t,"time"),o=this.parse8601(a),h="book:"+r,d=this.safeValue(this.orderbooks,r);if(void 0===d&&(d=this.orderBook({})),"ORDER_BOOK_SNAPSHOT"===i){let e=this.parseOrderBook(t,r,o,"bids","asks");d.reset(e)}else if("ORDER_BOOK_UPDATE"===i){let e=this.safeValue(t,"changes",[]);this.handleDeltas(d,e)}else throw new n.NotSupported(this.id+" watchOrderBook() did not recognize message type "+i);d.nonce=o,d.timestamp=o,d.datetime=this.iso8601(o),this.orderbooks[r]=d,e.resolve(d,h)}handleDelta(e,t){let i=this.parseBidAsk(t,1,2),s=this.safeString(t,0);if("BUY"===s)e.bids.storeArray(i);else if("SELL"===s)e.asks.storeArray(i);else throw new n.NotSupported(this.id+" watchOrderBook () received unknown change type "+this.json(t))}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r="orders";void 0!==e&&(r+=":"+(e=this.market(e).symbol)),await this.authenticate(s);let a=this.urls.api.ws,n=this.safeString(s,"channel","ACCOUNT_HISTORY"),o=this.safeInteger(this.options,"bp_remaining_quota",200),h=this.deepExtend({type:"SUBSCRIBE",bp_remaining_quota:o,channels:[{name:n}]},s),d=await this.watch(a,r,h,n,h);return(this.newUpdates&&(i=d.getLimit(e,i)),0===(d=this.filterBySymbolSinceLimit(d,e,t,i)).length)?await this.watchOrders(e,t,i,s):d}handleTrading(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let i=this.parseTradingOrder(t);this.orders.append(i),e.resolve(this.orders,"orders:"+i.symbol),e.resolve(this.orders,"orders")}parseTradingOrder(e,t){let i=this.safeString(e,"time"),s=this.safeString(e,"instrument_code"),r=this.safeSymbol(s,t,"_");return this.safeOrder({id:this.safeString(e,"order_id"),clientOrderId:this.safeString(e,"client_id"),info:e,timestamp:this.parse8601(i),datetime:i,lastTradeTimestamp:void 0,symbol:r,type:void 0,timeInForce:void 0,postOnly:void 0,side:this.safeStringLower(e,"side"),price:this.safeNumber2(e,"price","matched_price"),stopPrice:this.safeNumber(e,"trigger_price"),amount:this.safeNumber(e,"amount"),cost:void 0,average:void 0,filled:void 0,remaining:this.safeString(e,"remaining"),status:this.parseTradingOrderStatus(this.safeString(e,"status")),fee:void 0,trades:void 0},t)}parseTradingOrderStatus(e){return this.safeString({CANCELLED:"canceled",SELF_TRADE:"rejected",FILLED_FULLY:"closed",INSUFFICIENT_FUNDS:"rejected",INSUFFICIENT_LIQUIDITY:"rejected",TIME_TO_MARKET_EXCEEDED:"rejected",LAST_PRICE_UNKNOWN:"rejected"},e,e)}handleOrders(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let i=this.safeValue(t,"orders",[]);if(0===i.length)return;let s=this.orders;for(let t=0;t<i.length;t++){let r=this.parseOrder(i[t]),a=this.safeString(r,"symbol","");s.append(r),e.resolve(this.orders,"orders:"+a);let n=this.safeValue(i[t],"trades",[]);for(let t=0;t<n.length;t++){let i=this.parseTrade(n[t]);a=this.safeString(i,"symbol",a),this.myTrades.append(i),e.resolve(this.myTrades,"myTrades:"+a)}}e.resolve(this.orders,"orders"),e.resolve(this.myTrades,"myTrades")}handleAccountUpdate(e,t){let i;if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let s=this.orders,a=this.safeValue(t,"update",{}),n=this.safeString(a,"type");if("ORDER_REJECTED"===n||"ORDER_CLOSED"===n||"STOP_ORDER_TRIGGERED"===n){let e=this.safeString(a,"order_id"),t=this.safeString2(a,"time","timestamp"),o=this.filterByArray(this.orders,"id",e,!1);i=this.safeValue(o,0,{}).symbol;let h=this.safeString(a,"filled_amount"),d=this.parseWsOrderStatus(n);"ORDER_CLOSED"===n&&r.A.stringEq(h,"0")&&(d="canceled");let l={id:e,symbol:i,status:d,timestamp:this.parse8601(t),datetime:t};s.append(l)}else{let e=this.parseOrder(a);i=this.safeString(e,"symbol",""),s.append(e)}e.resolve(this.orders,"orders:"+i),e.resolve(this.orders,"orders");let o=["locked","unlocked","spent","spent_on_fees","credited","deducted"];for(let e=0;e<o.length;e++){let t=this.safeValue(a,o[e]);void 0!==t&&this.updateBalance(t)}if(e.resolve(this.balance,"balance"),"TRADE_SETTLED"===n){let t=this.parseTrade(a);i=this.safeString(t,"symbol",""),this.myTrades.append(t),e.resolve(this.myTrades,"myTrades:"+i),e.resolve(this.myTrades,"myTrades")}}parseWsOrderStatus(e){return this.safeString({ORDER_REJECTED:"rejected",ORDER_CLOSED:"closed",STOP_ORDER_TRIGGERED:"triggered"},e,e)}updateBalance(e){let t=this.safeString(e,"currency_code"),i=this.safeCurrencyCode(t),s=this.account();s.free=this.safeString(e,"new_available"),s.used=this.safeString(e,"new_locked"),this.balance[i]=s,this.balance=this.safeBalance(this.balance)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let o=a.id,h=this.urls.api.ws,d=this.safeValue(this.options,"timeframes",{});if(void 0===this.safeValue(d,t))throw new n.NotSupported(this.id+" this interval is not supported, please provide one of the supported timeframes");let l="ohlcv."+e+"."+t,c="CANDLESTICKS",u=this.safeValue(this.clients,h),f="SUBSCRIBE",p={};if(void 0!==u){if(void 0!==(p=this.safeValue(u.subscriptions,c))){let e=this.safeValue(p,o,{});this.safeBool(e,t,!1)||(f="UPDATE_SUBSCRIPTION",u.subscriptions[c]=void 0)}else p={}}void 0===this.safeValue(p,o)&&(p[o]={}),p[o][t]=!0;let m=[],g=Object.keys(p);for(let e=0;e<g.length;e++){let i=Object.keys(p[g[e]]);for(let s=0;s<i.length;s++){let i=this.safeValue(d,t),s={instrument_code:g[e],time_granularity:i};m.push(s)}}let y={type:f,channels:[{name:"CANDLESTICKS",properties:m}]},v=await this.watch(h,l,this.deepExtend(y,r),c,p);return this.newUpdates&&(s=v.getLimit(e,s)),this.filterBySinceLimit(v,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"instrument_code"),s=this.safeSymbol(i),r=this.safeString(t,"time"),a=this.safeValue(t,"granularity"),n=this.safeValue(this.options,"timeframes",{}),o=this.findTimeframe(a,n),h="ohlcv."+s+"."+o,d=[this.parse8601(r),this.safeNumber(t,"open"),this.safeNumber(t,"high"),this.safeNumber(t,"low"),this.safeNumber(t,"close"),this.safeNumber(t,"volume")];this.ohlcvs[s]=this.safeValue(this.ohlcvs,s,{});let l=this.safeValue(this.ohlcvs[s],o);if(void 0===l){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new sH.TG(e)}l.append(d),this.ohlcvs[s][o]=l,e.resolve(l,h)}findTimeframe(e,t){let i=Object.keys(t=t||this.timeframes);for(let s=0;s<i.length;s++){let r=i[s];if(t[r].unit===e.unit&&t[r].period===e.period)return r}}handleSubscriptions(e,t){return t}handleHeartbeat(e,t){return t}handleErrorMessage(e,t){throw new n.ExchangeError(this.id+" "+this.json(t))}handleMessage(e,t){if(void 0!==this.safeValue(t,"error")){this.handleErrorMessage(e,t);return}let i=this.safeValue(t,"type"),s={ORDER_BOOK_UPDATE:this.handleOrderBook,ORDER_BOOK_SNAPSHOT:this.handleOrderBook,ACTIVE_ORDERS_SNAPSHOT:this.handleOrders,INACTIVE_ORDERS_SNAPSHOT:this.handleOrders,ACCOUNT_UPDATE:this.handleAccountUpdate,BALANCES_SNAPSHOT:this.handleBalanceSnapshot,SUBSCRIPTIONS:this.handleSubscriptions,SUBSCRIPTION_UPDATED:this.handleSubscriptions,PRICE_TICK:this.handleTicker,PRICE_TICK_HISTORY:this.handleSubscriptions,HEARTBEAT:this.handleHeartbeat,MARKET_TICKER_UPDATES:this.handleTicker,PRICE_POINT_UPDATES:this.handlePricePointUpdates,CANDLESTICK_SNAPSHOT:this.handleOHLCV,CANDLESTICK:this.handleOHLCV,AUTHENTICATED:this.handleAuthenticationMessage,FILL:this.handleTrading,DONE:this.handleTrading,BOOKED:this.handleTrading,UPDATE:this.handleTrading,TRACKED:this.handleTrading,TRIGGERED:this.handleTrading,STOP_TRACKED:this.handleTrading,STOP_TRIGGERED:this.handleTrading},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}handlePricePointUpdates(e,t){return t}handleAuthenticationMessage(e,t){let i=this.safeValue(e.futures,"authenticated");return void 0!==i&&i.resolve(!0),t}async watchMany(e,t,i,s=[],r={}){let a=[];a=0===s.length?Object.keys(this.markets_by_id):this.marketIds(s);let n=this.urls.api.ws,o=this.safeValue(this.clients,n),h="SUBSCRIBE",d={};if(void 0!==o){if(void 0!==(d=this.safeValue(o.subscriptions,i)))for(let e=0;e<a.length;e++){let t=a[e];this.safeBool(d,t,!1)||(h="UPDATE_SUBSCRIPTION",o.subscriptions[i]=void 0)}else d={}}for(let e=0;e<a.length;e++)d[a[e]]=!0;return t.type=h,t.channels[0].instrument_codes=Object.keys(d),await this.watch(n,e,this.deepExtend(t,r),i,d)}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=i.future("authenticated");if(void 0===this.safeValue(i.subscriptions,s)){this.checkRequiredCredentials();let i={type:"AUTHENTICATE",api_token:this.apiKey};this.watch(t,s,this.extend(i,e),s)}return await r}}class s8 extends s4{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"bitpanda"})}}class s7 extends el{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!1,watchTickers:!1,watchTrades:!1,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{open:"https://open.bitrue.com",ws:{public:"wss://ws.bitrue.com/market/ws",private:"wss://wsapi.bitrue.com"}}},api:{open:{v1:{private:{post:{"poseidon/api/v1/listenKey":1},put:{"poseidon/api/v1/listenKey/{listenKey}":1},delete:{"poseidon/api/v1/listenKey/{listenKey}":1}}}}},options:{listenKeyRefreshRate:18e5,ws:{gunzip:!0}}})}async watchBalance(e={}){let t=await this.authenticate(),i="balance",s=this.deepExtend({event:"sub",params:{channel:"user_balance_update"}},e);return await this.watch(t,i,s,i)}handleBalance(e,t){let i=this.safeValue(t,"B",[]);this.parseWSBalances(i),e.resolve(this.balance,"balance")}parseWSBalances(e){this.balance.info=e;for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,"a"),r=this.safeCurrencyCode(s),a=this.account(),n=this.safeString(i,"F"),o=this.safeString(i,"L"),h=this.safeInteger(i,"T",0),d=this.safeInteger(i,"t",0),l=0!==h,c=0!==d;(l||c)&&(l&&(a.free=n),c&&(a.used=o),this.balance[r]=a)}this.balance=this.safeBalance(this.balance)}async watchOrders(e,t,i,s={}){await this.loadMarkets(),void 0!==e&&(e=this.market(e).symbol);let r=await this.authenticate(),a="orders",n=this.deepExtend({event:"sub",params:{channel:"user_order_update"}},s),o=await this.watch(r,a,n,a);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleOrder(e,t){let i=this.parseWsOrder(t);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}this.orders.append(i),e.resolve(this.orders,"orders")}parseWsOrder(e,t){let i=this.safeInteger(e,"E"),s=this.safeStringUpper(e,"s"),r=this.safeString(e,"o"),a=this.safeInteger(e,"S"),n=this.safeString(e,"X"),o=this.safeString(e,"N");return this.safeOrder({info:e,id:this.safeString(e,"i"),clientOrderId:this.safeString(e,"c"),timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:this.safeInteger(e,"T"),symbol:this.safeSymbol(s,t),type:this.parseWsOrderType(r),timeInForce:void 0,postOnly:void 0,side:1===a?"buy":"sell",price:this.safeString(e,"p"),triggerPrice:void 0,amount:this.safeString(e,"q"),cost:this.safeString(e,"Y"),average:void 0,filled:this.safeString(e,"z"),remaining:void 0,status:this.parseWsOrderStatus(n),fee:{currency:this.safeCurrencyCode(o),cost:this.safeNumber(e,"n")}},t)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook:"+(e=s.symbol),a=s.id.toLowerCase(),n=this.urls.api.ws.public,o=this.deepExtend({event:"sub",params:{cb_id:a,channel:"market_"+a+"_simple_depth_step0"}},i);return await this.watch(n,r,o,r)}handleOrderBook(e,t){let i=this.safeString(t,"channel").split("_"),s=this.safeStringUpper(i,1),r=this.safeMarket(s).symbol,a=this.safeInteger(t,"ts"),n=this.safeValue(t,"tick",{});r in this.orderbooks||(this.orderbooks[r]=this.orderBook());let o=this.orderbooks[r],h=this.parseOrderBook(n,r,a,"buys","asks");o.reset(h);let d="orderbook:"+r;e.resolve(o,d)}parseWsOrderType(e){return this.safeString({1:"limit",2:"market",3:"limit"},e,e)}parseWsOrderStatus(e){return this.safeString({0:"open",1:"open",2:"closed",3:"open",4:"canceled",7:"open"},e,e)}handlePing(e,t){this.spawn(this.pong,e,t)}async pong(e,t){let i=this.safeInteger(t,"ping");await e.send({pong:i})}handleMessage(e,t){if("channel"in t)this.handleOrderBook(e,t);else if("ping"in t)this.handlePing(e,t);else{let i=this.safeString(t,"e"),s={BALANCE:this.handleBalance,ORDER:this.handleOrder},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}async authenticate(e={}){if(void 0===this.safeValue(this.options,"listenKey")){let t=await this.openV1PrivatePostPoseidonApiV1ListenKey(e),i=this.safeValue(t,"data",{}),s=this.safeString(i,"listenKey");this.options.listenKey=s,this.options.listenKeyUrl=this.urls.api.ws.private+"/stream?listenKey="+s;let r=this.safeInteger(this.options,"listenKeyRefreshRate",18e5);this.delay(r,this.keepAliveListenKey)}return this.options.listenKeyUrl}async keepAliveListenKey(e={}){let t=this.safeString(this.options,"listenKey");try{await this.openV1PrivatePutPoseidonApiV1ListenKeyListenKey(this.extend({listenKey:t},e))}catch(e){this.options.listenKey=void 0,this.options.listenKeyUrl=void 0;return}let i=this.safeInteger(this.options,"listenKeyRefreshRate",18e5);this.delay(i,this.keepAliveListenKey)}}class s9 extends eg{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchTradesForSymbols:!1,watchOHLCV:!1,watchTicker:!1,watchTickers:!1},urls:{api:{ws:"wss://ws.bitstamp.net"}},options:{expiresIn:"",userId:"",wsSessionToken:"",watchOrderBook:{snapshotDelay:6,snapshotMaxRetries:3},tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{exact:{4009:n.AuthenticationError}}})}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook:"+(e=s.symbol),a="diff_order_book_"+s.id,n=this.urls.api.ws,o=this.extend({event:"bts:subscribe",data:{channel:a}},i);return(await this.watch(n,r,o,r)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"channel").split("_"),s=this.safeString(i,3),r=this.safeSymbol(s),a=this.safeValue(this.orderbooks,r),n=this.safeValue(a,"nonce"),o=this.safeValue(t,"data"),h=this.safeInteger(o,"microtimestamp"),d="orderbook:"+r;if(void 0===n){a.cache.length===this.handleOption("watchOrderBook","snapshotDelay",6)&&this.spawn(this.loadOrderBook,e,d,r,null,{}),a.cache.push(o);return}n>=h||(this.handleDelta(a,o),e.resolve(a,d))}handleDelta(e,t){let i=this.safeTimestamp(t,"timestamp");e.timestamp=i,e.datetime=this.iso8601(i),e.nonce=this.safeInteger(t,"microtimestamp");let s=this.safeValue(t,"bids",[]),r=this.safeValue(t,"asks",[]),a=e.bids,n=e.asks;this.handleBidAsks(a,s),this.handleBidAsks(n,r)}handleBidAsks(e,t){for(let i=0;i<t.length;i++){let s=this.parseBidAsk(t[i]);e.storeArray(s)}}getCacheIndex(e,t){let i=t[0],s=this.safeInteger(i,"microtimestamp"),r=this.safeInteger(e,"nonce");if(r<s)return -1;for(let e=0;e<t.length;e++){let i=t[e];if(this.safeInteger(i,"microtimestamp")===r)return e+1}return t.length}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="trades:"+(e=r.symbol),n=this.urls.api.ws,o="live_trades_"+r.id,h=this.extend({event:"bts:subscribe",data:{channel:o}},s),d=await this.watch(n,a,h,a);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}parseWsTrade(e,t){let i=this.safeInteger(e,"microtimestamp"),s=this.safeString(e,"id"),r=this.parseToInt(i/1e3),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=t.symbol,h=this.safeInteger(e,"type");return this.safeTrade({info:e,timestamp:r,datetime:this.iso8601(r),symbol:o,id:s,order:void 0,type:void 0,takerOrMaker:void 0,side:0===h?"buy":"sell",price:a,amount:n,cost:void 0,fee:void 0},t)}handleTrade(e,t){let i=this.safeString(t,"channel").split("_"),s=this.safeString(i,2),r=this.safeMarket(s),a=r.symbol,n="trades:"+a,o=this.safeValue(t,"data"),h=this.parseWsTrade(o,r),d=this.safeValue(this.trades,a);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.I3(e),this.trades[a]=d}d.append(h),e.resolve(d,n)}async watchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchOrders() requires a symbol argument");await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="private-my_orders",o=a+"_"+r.id,h={symbol:e,limit:i,type:a,params:s},d=await this.subscribePrivate(h,o,s);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleOrders(e,t){let i=this.safeString(t,"channel"),s=this.safeValue(t,"data",{}),r=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new sH.Pt(r));let a=this.orders,n=this.safeValue(e.subscriptions,i),o=this.safeString(n,"symbol"),h=this.market(o),d=this.parseWsOrder(s,h);a.append(d),e.resolve(this.orders,i)}parseWsOrder(e,t){let i=this.safeString(e,"id_str"),s=this.safeStringLower(e,"order_type"),r=this.safeString(e,"price_str"),a=this.safeString(e,"amount_str"),n=this.safeTimestamp(e,"datetime"),o=(t=this.safeMarket(void 0,t)).symbol;return this.safeOrder({info:e,symbol:o,id:i,clientOrderId:void 0,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,type:void 0,timeInForce:void 0,postOnly:void 0,side:"1"===s?"sell":"buy",price:r,stopPrice:void 0,triggerPrice:void 0,amount:a,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0},t)}handleOrderBookSubscription(e,t){let i=this.safeString(t,"channel").split("_"),s=this.safeString(i,3),r=this.safeSymbol(s);this.orderbooks[r]=this.orderBook()}handleSubscriptionStatus(e,t){this.safeString(t,"channel").indexOf("order_book")>-1&&this.handleOrderBookSubscription(e,t)}handleSubject(e,t){let i=this.safeString(t,"channel"),s={live_trades:this.handleTrade,diff_order_book:this.handleOrderBook,"private-my_orders":this.handleOrders},r=Object.keys(s);for(let a=0;a<r.length;a++){let n=r[a];i.indexOf(n)>-1&&s[n].call(this,e,t)}}handleErrorMessage(e,t){if("bts:error"===this.safeString(t,"event")){let e=this.id+" "+this.json(t),i=this.safeValue(t,"data",{}),s=this.safeNumber(i,"code");this.throwExactlyMatchedException(this.exceptions.exact,s,e)}return t}handleMessage(e,t){this.handleErrorMessage(e,t)&&("bts:subscription_succeeded"===this.safeString(t,"event")?this.handleSubscriptionStatus(e,t):this.handleSubject(e,t))}async authenticate(e={}){this.checkRequiredCredentials();let t=this.milliseconds(),i=this.safeInteger(this.options,"expiresIn");if(void 0===i||t>i){let i=await this.privatePostWebsocketsToken(e),s=this.safeString(i,"token");if(void 0!==s){let e=this.safeNumber(i,"user_id"),r=this.safeIntegerProduct(i,"valid_sec",1e3);this.options.expiresIn=this.sum(t,r),this.options.userId=e,this.options.wsSessionToken=s}}}async subscribePrivate(e,t,i={}){let s=this.urls.api.ws;await this.authenticate();let r={event:"bts:subscribe",data:{channel:t+="-"+this.options.userId,auth:this.options.wsSessionToken}};return e.messageHash=t,await this.watch(s,t,this.extend(r,i),t,e)}}class re extends eS{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,cancelOrdersWs:!1,fetchTradesWs:!1,watchOrderBook:!0,watchTrades:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchOHLCV:!0,watchOrders:!0,watchMyTrades:!0,cancelAllOrdersWs:!0,cancelOrderWs:!0,createOrderWs:!0,createStopLimitOrderWs:!0,createStopMarketOrderWs:!0,createStopOrderWs:!0,editOrderWs:!0,fetchBalanceWs:!0,fetchCurrenciesWS:!0,fetchDepositAddressWs:!0,fetchDepositsWs:!0,fetchDepositWithdrawFeesWs:!0,fetchMyTradesWs:!0,fetchOHLCVWs:!0,fetchOpenOrdersWs:!0,fetchOrderWs:!0,fetchOrderBookWs:!0,fetchOrdersWs:!0,fetchTickerWs:!0,fetchTickersWs:!0,fetchTimeWs:!0,fetchTradingFeesWs:!0,fetchWithdrawalsWs:!0,withdrawWs:!0},urls:{api:{ws:"wss://ws.bitvavo.com/v2"}},options:{supressMultipleWsRequestsError:!1,tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3}})}async watchPublic(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=e+"@"+s.id,a=this.urls.api.ws,n={action:"subscribe",channels:[{name:e,markets:[s.id]}]},o=this.extend(n,i);return await this.watch(a,r,o,r)}async watchPublicMultiple(e,t,i,s={}){await this.loadMarkets(),i=this.marketSymbols(i);let r=[e],a=[];for(let e=0;e<i.length;e++){let t=this.market(i[e]);a.push(t.id)}let n=this.urls.api.ws,o=this.extend({action:"subscribe",channels:[{name:t,markets:a}]},s);return await this.watchMultiple(n,r,o,r)}async watchTicker(e,t={}){return await this.watchPublic("ticker24h",e,t)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i="ticker24h",s=await this.watchPublicMultiple(i,i,e,t);return this.filterByArray(s,"symbol",e)}handleTicker(e,t){this.handleBidAsk(e,t);let i=this.safeString(t,"event"),s=this.safeValue(t,"data",[]),r=[];for(let t=0;t<s.length;t++){let a=s[t],n=this.safeString(a,"market"),o=this.safeMarket(n,void 0,"-"),h=i+"@"+n,d=this.parseTicker(a,o),l=d.symbol;this.tickers[l]=d,r.push(d),e.resolve(d,h)}e.resolve(r,i)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=await this.watchPublicMultiple("bidask","ticker24h",e,t);return this.filterByArray(i,"symbol",e)}handleBidAsk(e,t){let i="bidask",s=this.safeValue(t,"data",[]),r=[];for(let t=0;t<s.length;t++){let a=s[t],n=this.parseWsBidAsk(a),o=n.symbol;this.bidsasks[o]=n,r.push(n);let h=i+":"+o;e.resolve(n,h)}e.resolve(r,i)}parseWsBidAsk(e,t){let i=this.safeString(e,"market");t=this.safeMarket(i,void 0,"-");let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"timestamp");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeNumber(e,"ask"),askVolume:this.safeNumber(e,"askSize"),bid:this.safeNumber(e,"bid"),bidVolume:this.safeNumber(e,"bidSize"),info:e},t)}async watchTrades(e,t,i,s={}){await this.loadMarkets(),e=this.symbol(e);let r=await this.watchPublic("trades",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleTrade(e,t){let i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r=s.symbol,a=this.parseTrade(t,s),n=this.safeValue(this.trades,r);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e)}n.append(a),this.trades[r]=n,e.resolve(n,"trades@"+i)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=a.id,o=this.safeString(this.timeframes,t,t),h="candles@"+n+"_"+o,d=this.urls.api.ws,l=this.extend({action:"subscribe",channels:[{name:"candles",interval:[o],markets:[n]}]},r),c=await this.watch(d,h,l,h);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}handleFetchOHLCV(e,t){let i=this.safeValue(t,"response"),s=this.parseOHLCVs(i,void 0,void 0,void 0),r=this.safeString(t,"requestId");e.resolve(s,r)}handleOHLCV(e,t){let i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r=s.symbol,a=this.safeString(t,"interval"),n=this.findTimeframe(a),o="candles@"+i+"_"+a,h=this.safeValue(t,"candle");this.ohlcvs[r]=this.safeValue(this.ohlcvs,r,{});let d=this.safeValue(this.ohlcvs[r],n);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[r][n]=d}for(let e=0;e<h.length;e++){let t=h[e],i=this.parseOHLCV(t,s);d.append(i)}e.resolve(d,o)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r="book",a=r+"@"+s.id,n=this.urls.api.ws,o={action:"subscribe",channels:[{name:r,markets:[s.id]}]},h={messageHash:a,name:r,symbol:e,marketId:s.id,method:this.handleOrderBookSubscription,limit:t,params:i},d=this.extend(o,i);return(await this.watch(n,a,d,a,h)).limit()}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){let s=this.safeInteger(t,"nonce");return s>i.nonce&&(this.handleDeltas(i.asks,this.safeValue(t,"asks",[])),this.handleDeltas(i.bids,this.safeValue(t,"bids",[])),i.nonce=s),i}handleOrderBook(e,t){let i=this.safeString(t,"event"),s=this.safeString(t,"market"),r=this.safeMarket(s,void 0,"-"),a=r.symbol,n=i+"@"+r.id,o=this.safeValue(this.orderbooks,a);if(void 0!==o){if(void 0===o.nonce){let i=this.safeValue(e.subscriptions,n,{});if(void 0===this.safeValue(i,"watchingOrderBookSnapshot")){i.watchingOrderBookSnapshot=!0,e.subscriptions[n]=i;let s=this.safeValue(this.options,"watchOrderBookSnapshot",{}),r=this.safeInteger(s,"delay",this.rateLimit);this.delay(r,this.watchOrderBookSnapshot,e,t,i)}o.cache.push(t)}else this.handleOrderBookMessage(e,t,o),e.resolve(o,n)}}async watchOrderBookSnapshot(e,t,i){let s=this.safeValue(i,"params"),r=this.safeString(i,"marketId"),a="getBook",n=a+"@"+r,o=this.urls.api.ws;return(await this.watch(o,n,this.extend({action:a,market:r},s),n,i)).limit()}handleOrderBookSnapshot(e,t){let i=this.safeValue(t,"response");if(void 0===i)return;let s=this.safeString(i,"market"),r=this.safeSymbol(s,void 0,"-"),a=this.orderbooks[r],n=this.parseOrderBook(i,r);n.nonce=this.safeInteger(i,"nonce"),a.reset(n);let o=a.cache;for(let t=0;t<o.length;t++){let i=o[t];this.handleOrderBookMessage(e,i,a)}this.orderbooks[r]=a,e.resolve(a,"book@"+s)}handleOrderBookSubscription(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");s in this.orderbooks&&delete this.orderbooks[s],this.orderbooks[s]=this.orderBook({},r)}handleOrderBookSubscriptions(e,t,i){for(let s=0;s<i.length;s++){let r=this.safeString(i,s),a=this.safeSymbol(r,void 0,"-"),n="book@"+r;if(!(a in this.orderbooks)){let i=this.safeValue(e.subscriptions,n),s=this.safeValue(i,"method");void 0!==s&&s.call(this,e,t,i)}}}async watchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchOrders() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r=this.market(e);e=r.symbol;let a=r.id,o=this.urls.api.ws,h="order:"+e,d=await this.watch(o,h,{action:"subscribe",channels:[{name:"account",markets:[a]}]},h);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}async watchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchMyTrades() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r=this.market(e);e=r.symbol;let a=r.id,o=this.urls.api.ws,h="myTrades:"+e,d=await this.watch(o,h,{action:"subscribe",channels:[{name:"account",markets:[a]}]},h);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}async createOrderWs(e,t,i,s,r,a={}){await this.loadMarkets(),await this.authenticate();let n=this.createOrderRequest(e,t,i,s,r,a);return await this.watchRequest("privateCreateOrder",n)}async editOrderWs(e,t,i,s,r,a,n={}){await this.loadMarkets(),await this.authenticate();let o=this.editOrderRequest(e,t,i,s,r,a,n);return await this.watchRequest("privateUpdateOrder",o)}async cancelOrderWs(e,t,i={}){await this.loadMarkets(),await this.authenticate();let s=this.cancelOrderRequest(e,t,i);return await this.watchRequest("privateCancelOrder",s)}async cancelAllOrdersWs(e,t={}){let i;await this.loadMarkets(),await this.authenticate();let s={};return void 0!==e&&(i=this.market(e),s.market=i.id),await this.watchRequest("privateCancelOrders",this.extend(s,t))}handleMultipleOrders(e,t){let i=this.safeList(t,"response"),s=this.parseOrders(i),r=this.safeString(t,"requestId");e.resolve(s,r)}async fetchOrderWs(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let s={orderId:e,market:this.market(t).id};return await this.watchRequest("privateGetOrder",this.extend(s,i))}async fetchOrdersWs(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchOrdersWs() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r=this.fetchOrdersRequest(e,t,i,s),a=await this.watchRequest("privateGetOrders",r);return this.filterBySymbolSinceLimit(a,e,t,i)}requestId(){return parseInt(this.milliseconds().toString()+this.randNumber(4).toString())}async watchRequest(e,t){let i=this.requestId(),s=i.toString();t.action=e,t.requestId=i;let r=this.urls.api.ws;return await this.watch(r,s,t,s)}async fetchOpenOrdersWs(e,t,i,s={}){let r;await this.loadMarkets(),await this.authenticate();let a={};void 0!==e&&(r=this.market(e),a.market=r.id);let n=await this.watchRequest("privateGetOrdersOpen",this.extend(a,s));return this.filterBySymbolSinceLimit(n,e,t,i)}async fetchMyTradesWs(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyTradesWs() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r=this.fetchMyTradesRequest(e,t,i,s),a=await this.watchRequest("privateGetTrades",r);return this.filterBySymbolSinceLimit(a,e,t,i)}handleMyTrades(e,t){let i=this.safeList(t,"response"),s=this.parseTrades(i,void 0,void 0,void 0),r=this.safeString(t,"requestId");e.resolve(s,r)}async withdrawWs(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets(),await this.authenticate();let a=this.withdrawRequest(e,t,i,s,r);return await this.watchRequest("privateWithdrawAssets",a)}handleWithdraw(e,t){let i=this.safeString(t,"requestId"),s=this.safeValue(t,"response"),r=this.parseTransaction(s);e.resolve(r,i)}async fetchWithdrawalsWs(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r=this.fetchWithdrawalsRequest(e,t,i,s),a=await this.watchRequest("privateGetWithdrawalHistory",r);return this.filterByCurrencySinceLimit(a,e,t,i)}handleWithdraws(e,t){let i=this.safeList(t,"response"),s=this.safeString(t,"requestId"),r=this.parseTransactions(i,void 0,void 0,void 0,{type:"withdrawal"});e.resolve(r,s)}async fetchOHLCVWs(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.fetchOHLCVRequest(e,t,i,s,r),n=await this.watchRequest("getCandles",a);return this.filterBySinceLimit(n,i,s,0,!0)}async fetchDepositsWs(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r=this.fetchDepositsRequest(e,t,i,s),a=await this.watchRequest("privateGetDepositHistory",r);return this.filterByCurrencySinceLimit(a,e,t,i)}handleDeposits(e,t){let i=this.safeValue(t,"response"),s=this.parseTransactions(i,void 0,void 0,void 0,{type:"deposit"}),r=this.safeString(t,"requestId");e.resolve(s,r)}async fetchTradingFeesWs(e={}){return await this.loadMarkets(),await this.authenticate(),await this.watchRequest("privateGetAccount",e)}async fetchMarketsWs(e={}){return await this.watchRequest("getMarkets",e)}async fetchCurrenciesWs(e={}){return await this.loadMarkets(),await this.watchRequest("getAssets",e)}handleFetchCurrencies(e,t){let i=this.safeString(t,"requestId"),s=this.safeValue(t,"response"),r=this.parseCurrencies(s);e.resolve(r,i)}handleTradingFees(e,t){let i=this.safeString(t,"requestId"),s=this.safeValue(t,"response"),r=this.parseTradingFees(s);e.resolve(r,i)}async fetchBalanceWs(e={}){return await this.loadMarkets(),await this.authenticate(),await this.watchRequest("privateGetBalance",e)}handleFetchBalance(e,t){let i=this.safeString(t,"requestId"),s=this.safeValue(t,"response",[]),r=this.parseBalance(s);e.resolve(r,i)}handleSingleOrder(e,t){let i=this.safeValue(t,"response",{}),s=this.parseOrder(i),r=this.safeString(t,"requestId");e.resolve(s,r)}handleMarkets(e,t){let i=this.safeValue(t,"response",{}),s=this.parseMarkets(i),r=this.safeString(t,"requestId");e.resolve(s,r)}buildMessageHash(e,t={}){let i={privateCreateOrder:this.actionAndMarketMessageHash,privateUpdateOrder:this.actionAndOrderIdMessageHash,privateCancelOrder:this.actionAndOrderIdMessageHash,privateGetOrder:this.actionAndOrderIdMessageHash,privateGetTrades:this.actionAndMarketMessageHash},s=this.safeValue(i,e),r=e;return void 0!==s&&(r=s.call(this,e,t)),r}actionAndMarketMessageHash(e,t={}){return e+this.safeString(t,"market","")}actionAndOrderIdMessageHash(e,t={}){let i=this.safeString(t,"orderId");if(void 0===i)throw new n.ExchangeError(this.id+" privateUpdateOrderMessageHash requires a orderId parameter");return e+i}handleOrder(e,t){let i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r=s.symbol,a=this.parseOrder(t,s);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}this.orders.append(a),e.resolve(this.orders,"order:"+r)}handleMyTrade(e,t){let i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r=s.symbol,a=this.parseTrade(t,s);if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.I3(e)}let n=this.myTrades;n.append(a),e.resolve(n,"myTrades:"+r)}handleSubscriptionStatus(e,t){let i=this.safeValue(t,"subscriptions",{}),s={book:this.handleOrderBookSubscriptions},r=Object.keys(i);for(let a=0;a<r.length;a++){let n=r[a],o=this.safeValue(s,n);if(void 0!==o){let s=this.safeValue(i,n);o.call(this,e,t,s)}}return t}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=this.safeValue(i.subscriptions,s);if(void 0===r){let a=this.milliseconds(),n=a.toString()+"GET/"+this.version+"/websocket",o=this.hmac(this.encode(n),this.encode(this.secret),l.s),h={action:"authenticate",key:this.apiKey,signature:o,timestamp:a},d=this.extend(h,e);r=await this.watch(t,s,d,s),i.subscriptions[s]=r}return r}handleAuthenticationMessage(e,t){let i="authenticated";if(this.safeBool(t,"authenticated",!1))e.resolve(t,i);else{let s=new n.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions[i]}}handleErrorMessage(e,t){let i=this.safeString(t,"error"),s=this.safeInteger(i,"errorCode"),r=this.safeString(t,"action"),a=this.buildMessageHash(r,t),n=this.safeString(t,"requestId",a),o=!1;try{this.handleErrors(s,i,e.url,void 0,void 0,i,t,void 0,void 0)}catch(t){o=!0,e.reject(t,n)}o||e.reject(t,n)}handleMessage(e,t){void 0!==this.safeString(t,"error")&&this.handleErrorMessage(e,t);let i={subscribed:this.handleSubscriptionStatus,book:this.handleOrderBook,getBook:this.handleOrderBookSnapshot,trade:this.handleTrade,candle:this.handleOHLCV,ticker24h:this.handleTicker,authenticate:this.handleAuthenticationMessage,order:this.handleOrder,fill:this.handleMyTrade,privateCreateOrder:this.handleSingleOrder,privateUpdateOrder:this.handleSingleOrder,privateGetBalance:this.handleFetchBalance,privateCancelOrders:this.handleMultipleOrders,privateGetOrders:this.handleMultipleOrders,privateGetOrder:this.handleSingleOrder,privateCancelOrder:this.handleSingleOrder,privateGetOrdersOpen:this.handleMultipleOrders,privateGetAccount:this.handleTradingFees,privateGetDepositHistory:this.handleDeposits,privateGetWithdrawalHistory:this.handleWithdraws,privateWithdrawAssets:this.handleWithdraw,privateGetTrades:this.handleMyTrades,getAssets:this.handleFetchCurrencies,getCandles:this.handleFetchOHLCV,getMarkets:this.handleMarkets},s=this.safeString(t,"event"),r=this.safeValue(i,s);if(void 0===r){let s=this.safeString(t,"action");void 0!==(r=this.safeValue(i,s))&&r.call(this,e,t)}else r.call(this,e,t)}}class rt extends eM{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://ws.blockchain.info/mercury-gateway/v1/ws"}},options:{ws:{options:{headers:{Origin:"https://exchange.blockchain.com"}},noOriginHeader:!1}},streaming:{},exceptions:{},timeframes:{"1m":"60","5m":"300","15m":"900","1h":"3600","6h":"21600","1d":"86400"}})}async watchBalance(e={}){await this.authenticate(e);let t="balance",i=this.urls.api.ws,s=this.deepExtend({action:"subscribe",channel:"balances"},e);return await this.watch(i,t,s,t,s)}handleBalance(e,t){if("subscribed"===this.safeString(t,"event"))return;let i={info:t},s=this.safeValue(t,"balances",[]);for(let e=0;e<s.length;e++){let t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"available"),n.total=this.safeString(t,"balance"),i[a]=n}this.balance=this.safeBalance(i),e.resolve(this.balance,"balance")}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.safeString(this.timeframes,t,t),o="ohlcv:"+e,h={action:"subscribe",channel:"prices",symbol:a.id,granularity:this.parseNumber(n)};h=this.deepExtend(h,r);let d=this.urls.api.ws,l=await this.watch(d,o,h,o,h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"event");if("rejected"===i){let e=this.json(t);throw new n.ExchangeError(this.id+" "+e)}if("updated"===i){let i=this.safeString(t,"symbol"),s=this.safeSymbol(i,void 0,"-"),r="ohlcv:"+s,a=this.safeValue(e.subscriptions,r),n=this.safeNumber(a,"granularity"),o=this.findTimeframe(n),h=this.safeValue(t,"price",[]);this.ohlcvs[s]=this.safeValue(this.ohlcvs,s,{});let d=this.safeValue(this.ohlcvs[s],o);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[s][o]=d}d.append(h),e.resolve(d,r)}else if("subscribed"!==i)throw new n.NotSupported(this.id+" "+this.json(t))}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=this.urls.api.ws,r="ticker:"+e,a={action:"subscribe",channel:"ticker",symbol:i.id};return a=this.deepExtend(a,t),await this.watch(s,r,a,r)}handleTicker(e,t){let i;let s=this.safeString(t,"event"),r=this.safeString(t,"symbol"),a=this.safeMarket(r),n=a.symbol;if("subscribed"===s)return;if("snapshot"===s)i=this.parseTicker(t,a);else if("updated"===s){let e=this.safeValue(this.tickers,n);i=this.parseWsUpdatedTicker(t,e,a)}let o="ticker:"+n;this.tickers[n]=i,e.resolve(i,o)}parseWsUpdatedTicker(e,t,i){let s=this.safeString(e,"symbol"),r=this.safeSymbol(s,void 0,"-"),a=this.safeString(e,"mark_price");return this.safeTicker({symbol:r,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(t,"open"),close:void 0,last:a,previousClose:this.safeString(t,"close"),change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(t,"baseVolume"),quoteVolume:void 0,info:this.extend(this.safeValue(t,"info",{}),e)},i)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=this.urls.api.ws,n="trades:"+e,o={action:"subscribe",channel:"trades",symbol:r.id};o=this.deepExtend(o,s);let h=await this.watch(a,n,o,n,o);return this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleTrades(e,t){if("updated"!==this.safeString(t,"event"))return;let i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeMarket(i),a=this.safeValue(this.trades,s);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[s]=a}let n=this.parseWsTrade(t,r);a.append(n),this.trades[s]=a,e.resolve(this.trades[s],"trades:"+s)}parseWsTrade(e,t){let i=this.safeString(e,"symbol"),s=this.safeString(e,"timestamp");return this.safeTrade({id:this.safeString(e,"trade_id"),timestamp:this.parse8601(s),datetime:s,symbol:this.safeSymbol(i,t,"-"),order:void 0,type:void 0,side:this.safeString(e,"side"),takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString(e,"qty"),cost:void 0,fee:void 0,info:e},t)}async watchOrders(e,t,i,s={}){await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=this.market(e).symbol);let r=this.urls.api.ws,a="orders",n=this.deepExtend({action:"subscribe",channel:"trading"},s),o=await this.watch(r,a,n,a);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleOrders(e,t){let i=this.safeString(t,"event"),s=this.orders;if(void 0===s){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}if("subscribed"!==i){if("rejected"===i)throw new n.ExchangeError(this.id+" "+this.json(t));if("snapshot"===i){let e=this.safeValue(t,"orders",[]);for(let t=0;t<e.length;t++){let i=e[t],r=this.parseWsOrder(i);s.append(r)}}else if("updated"===i){let e=this.parseWsOrder(t);s.append(e)}this.orders=s,e.resolve(this.orders,"orders")}}parseWsOrder(e,t){let i=this.safeString(e,"transactTime"),s=this.safeString(e,"ordStatus"),r=this.safeString(e,"symbol");t=this.safeMarket(r,t);let a=this.safeString(e,"tradeId"),n=[];return"0"!==a&&n.push({id:a}),this.safeOrder({id:this.safeString(e,"orderID"),clientOrderId:this.safeString(e,"clOrdID"),datetime:i,timestamp:this.parse8601(i),status:this.parseWsOrderStatus(s),symbol:this.safeSymbol(r,t),type:this.safeString(e,"ordType"),timeInForce:this.safeString(e,"timeInForce"),postOnly:"ALO"===this.safeString(e,"execInst"),side:this.safeString(e,"side"),price:this.safeString(e,"price"),stopPrice:this.safeString(e,"stopPx"),cost:void 0,amount:this.safeString(e,"orderQty"),filled:this.safeString(e,"cumQty"),remaining:this.safeString(e,"leavesQty"),trades:n,fee:{rate:void 0,cost:this.safeNumber(e,"fee"),currency:this.safeString(t,"quote")},info:e,lastTradeTimestamp:void 0,average:this.safeString(e,"avgPx")},t)}parseWsOrderStatus(e){return this.safeString({pending:"open",open:"open",rejected:"rejected",cancelled:"canceled",filled:"closed",partial:"open",expired:"expired"},e,e)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=this.urls.api.ws,a=this.safeString(i,"type","l2");i=this.omit(i,"type");let n="orderbook:"+e+":"+a,o={action:"subscribe",channel:a,symbol:s.id},h=this.deepExtend(o,i);return(await this.watch(r,n,h,n)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"event");if("subscribed"===i)return;let s=this.safeString(t,"channel"),r=this.safeString(t,"symbol"),a=this.safeSymbol(r),o="orderbook:"+a+":"+s,h=this.safeString(t,"timestamp"),d=this.parse8601(h);void 0===this.safeValue(this.orderbooks,a)&&(this.orderbooks[a]=this.countedOrderBook());let l=this.orderbooks[a];if("snapshot"===i){let e=this.parseOrderBook(t,a,d,"bids","asks","px","qty","num");l.reset(e)}else if("updated"===i){let e=this.safeList(t,"asks",[]),i=this.safeList(t,"bids",[]);this.handleDeltas(l.asks,e),this.handleDeltas(l.bids,i),l.timestamp=d,l.datetime=h}else throw new n.NotSupported(this.id+" watchOrderBook() does not support "+i+" yet");e.resolve(l,o)}handleDelta(e,t){let i=this.parseBidAsk(t,"px","qty","num");e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleMessage(e,t){let i=this.safeString(t,"channel"),s={ticker:this.handleTicker,trades:this.handleTrades,prices:this.handleOHLCV,l2:this.handleOrderBook,l3:this.handleOrderBook,auth:this.handleAuthenticationMessage,balances:this.handleBalance,trading:this.handleOrders},r=this.safeValue(s,i);if(void 0!==r){r.call(this,e,t);return}throw new n.NotSupported(this.id+" received an unsupported message: "+this.json(t))}handleAuthenticationMessage(e,t){if("subscribed"!==this.safeString(t,"event"))throw new n.AuthenticationError(this.id+" received an authentication error: "+this.json(t));let i=this.safeValue(e.futures,"authenticated");void 0!==i&&i.resolve(!0)}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){this.checkRequiredCredentials();let i={action:"subscribe",channel:"auth",token:this.secret};return this.watch(t,s,this.extend(i,e),s)}return await r}}class ri extends eB{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0,watchOrders:!0,watchOrdersForSymbols:!0,watchPositions:!0},urls:{api:{ws:{swap:{public:"wss://openapi.blofin.com/ws/public",private:"wss://openapi.blofin.com/ws/private"}}}},options:{defaultType:"swap",tradesLimit:1e3,watchOrderBook:{channel:"books"},watchOrderBookForSymbols:{channel:"books"}},streaming:{ping:this.ping,keepAlive:25e3}})}ping(e){return"ping"}handlePong(e,t){e.lastPong=this.milliseconds()}async watchTrades(e,t,i,s={}){return s.callerMethodName="watchTrades",await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets();let r=await this.watchMultipleWrapper(!0,"trades","watchTradesForSymbols",e,s);if(this.newUpdates){let e=this.safeDict(r,0),t=this.safeString(e,"symbol");i=r.getLimit(t,i)}return this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeDict(t,"arg"),s=this.safeString(i,"channel"),r=this.safeList(t,"data");if(void 0!==r)for(let t=0;t<r.length;t++){let i=r[t],a=this.parseWsTrade(i),n=a.symbol,o=this.safeValue(this.trades,n);if(void 0===o){let e=this.safeInteger(this.options,"tradesLimit",1e3);o=new sH.I3(e),this.trades[n]=o}o.append(a);let h=s+":"+n;e.resolve(o,h)}}parseWsTrade(e,t){return this.parseTrade(e,t)}async watchOrderBook(e,t,i={}){return i.callerMethodName="watchOrderBook",await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){let s,r;if(await this.loadMarkets(),[s,i]=this.handleParamString(i,"callerMethodName","watchOrderBookForSymbols"),[r,i]=this.handleOptionAndParams(i,s,"channel","books"),"books"!==r)throw new n.NotSupported(this.id+" "+s+"() at this moment "+r+" is not supported, coming soon");return(await this.watchMultipleWrapper(!0,r,s,e,i)).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"arg"),s=this.safeString(i,"channel"),r=this.safeDict(t,"data"),a=this.safeString(i,"instId"),n=this.safeMarket(a).symbol,o=s+":"+n;n in this.orderbooks||(this.orderbooks[n]=this.orderBook());let h=this.orderbooks[n],d=this.safeInteger(r,"ts");if("snapshot"===this.safeString(t,"action")){let e=this.parseOrderBook(r,n,d);e.nonce=this.safeInteger(r,"seqId"),h.reset(e)}else{let e=this.safeList(r,"asks",[]),t=this.safeList(r,"bids",[]);this.handleDeltasWithKeys(h.asks,e),this.handleDeltasWithKeys(h.bids,t),h.timestamp=d,h.datetime=this.iso8601(d)}this.orderbooks[n]=h,e.resolve(h,o)}async watchTicker(e,t={}){return t.callerMethodName="watchTicker",e=this.market(e).symbol,(await this.watchTickers([e],t))[e]}async watchTickers(e,t={}){if(void 0===e)throw new n.NotSupported(this.id+" watchTickers() requires a list of symbols");let i=await this.watchMultipleWrapper(!0,"tickers","watchTickers",e,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){this.handleBidAsk(e,t);let i=this.safeDict(t,"arg"),s=this.safeString(i,"channel"),r=this.safeList(t,"data");for(let t=0;t<r.length;t++){let i=this.parseWsTicker(r[t]),a=i.symbol,n=s+":"+a;this.tickers[a]=i,e.resolve(this.tickers[a],n)}}parseWsTicker(e,t){return this.parseTicker(e,t)}async watchBidsAsks(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let s=this.market(e[0]);[i,t]=this.handleMarketTypeAndParams("watchBidsAsks",s,t);let r=this.implodeHostname(this.urls.api.ws[i].public),a=[],n=[];for(let t=0;t<e.length;t++){let i=this.market(e[t]);a.push("bidask:"+i.symbol),n.push({channel:"tickers",instId:i.id})}let o=this.getSubscriptionRequest(n),h=await this.watchMultiple(r,a,this.deepExtend(o,t),a);if(this.newUpdates){let e={};return e[h.symbol]=h,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeList(t,"data");for(let t=0;t<i.length;t++){let s=this.parseWsBidAsk(i[t]),r=s.symbol,a="bidask:"+r;this.bidsasks[r]=s,e.resolve(s,a)}}parseWsBidAsk(e,t){let i=this.safeString(e,"instId");t=this.safeMarket(i,t,"-");let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"ts");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeString(e,"askPrice"),askVolume:this.safeString(e,"askSize"),bid:this.safeString(e,"bidPrice"),bidVolume:this.safeString(e,"bidSize"),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){return r.callerMethodName="watchOHLCV",(await this.watchOHLCVForSymbols([[e,t]],i,s,r))[e][t]}async watchOHLCVForSymbols(e,t,i,s={}){if(0===e.length||!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" watchOHLCVForSymbols() requires a an array of symbols and timeframes, like  [['BTC/USDT', '1m'], ['LTC/USDT', '5m']]");await this.loadMarkets();let[r,a,o]=await this.watchMultipleWrapper(!0,"candle","watchOHLCVForSymbols",e,s);this.newUpdates&&(i=o.getLimit(r,i));let h=this.filterBySinceLimit(o,t,i,0,!0);return this.createOHLCVObject(r,a,h)}handleOHLCV(e,t){let i=this.safeDict(t,"arg"),s=this.safeString(i,"channel"),r=this.safeList(t,"data"),a=this.safeString(i,"instId"),n=this.safeMarket(a),o=n.symbol,h=s.replace("candle",""),d=this.findTimeframe(h);this.ohlcvs[o]=this.safeDict(this.ohlcvs,o,{});let l=this.safeValue(this.ohlcvs[o],d);if(void 0===l){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new sH.TG(e),this.ohlcvs[o][d]=l}for(let e=0;e<r.length;e++){let t=r[e],i=this.parseOHLCV(t,n);l.append(i)}let c=[o,d,l],u="candle"+h+":"+o;e.resolve(c,u)}async watchBalance(e={}){let t;if(await this.loadMarkets(),await this.authenticate(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),"spot"===t)throw new n.NotSupported(this.id+" watchBalance() is not supported for spot markets yet");let i=t+":balance",s=this.getSubscriptionRequest([{channel:"account"}]),r=this.implodeHostname(this.urls.api.ws[t].private);return await this.watch(r,i,this.deepExtend(s,e),i)}handleBalance(e,t){let i="swap";i in this.balance||(this.balance[i]={}),this.balance[i]=this.parseWsBalance(t),e.resolve(this.balance[i],i+":balance")}parseWsBalance(e){return this.parseBalance(e)}async watchOrders(e,t,i,s={}){return s.callerMethodName="watchOrders",await this.watchOrdersForSymbols(void 0!==e?[e]:[],t,i,s)}async watchOrdersForSymbols(e,t,i,s={}){await this.authenticate(),await this.loadMarkets();let r=await this.watchMultipleWrapper(!1,"orders","watchOrdersForSymbols",e,s);if(this.newUpdates){let e=this.safeValue(r,0),t=this.safeString(e,"symbol");i=r.getLimit(t,i)}return this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleOrders(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let i=this.orders,s=this.safeDict(t,"arg"),r=this.safeString(s,"channel"),a=this.safeList(t,"data");for(let t=0;t<a.length;t++){let s=this.parseWsOrder(a[t]),n=r+":"+s.symbol;i.append(s),e.resolve(i,n),e.resolve(i,r)}}parseWsOrder(e,t){return this.parseOrder(e,t)}async watchPositions(e,t,i,s={}){await this.authenticate(),await this.loadMarkets();let r=await this.watchMultipleWrapper(!1,"positions","watchPositions",e,s);return this.newUpdates?r:this.filterBySymbolsSinceLimit(this.positions,e,t,i)}handlePositions(e,t){void 0===this.positions&&(this.positions=new sH.Hk);let i=this.positions,s=this.safeDict(t,"arg"),r=this.safeString(s,"channel"),a=this.safeList(t,"data"),n=[];for(let t=0;t<a.length;t++){let s=this.parseWsPosition(a[t]);n.push(s),i.append(s);let o=r+":"+s.symbol;e.resolve(s,o)}}parseWsPosition(e,t){return this.parsePosition(e,t)}async watchMultipleWrapper(e,t,i,s,r={}){let a,o;await this.loadMarkets(),[i,r]=this.handleParamString(r,"callerMethodName",i);let h="candle"===t,d=h?this.getListFromObjectValues(s,0):s;d=this.marketSymbols(d,void 0,!0,!0);let l=this.safeString(d,0);if(void 0!==l&&(a=this.market(l)),[o,r]=this.handleMarketTypeAndParams(i,a,r),"swap"!==o)throw new n.NotSupported(this.id+" "+i+"() does not support "+o+" markets yet");let c=[],u=[];if(void 0===d&&(d=[]),d.length>0)for(let e=0;e<d.length;e++){let i;let r=d[e],a=t;if(h){i=this.market(r);let t=s[e][1];a+=this.safeString(this.timeframes,t,t)}else i=this.market(r);let n={channel:a,instId:i.id};c.push(n),u.push(a+":"+i.symbol)}else c.push({channel:t}),u.push(t);this.inArray(t,["orders","positions"])&&(c=[{channel:t}]);let f=this.getSubscriptionRequest(c),p=this.implodeHostname(this.urls.api.ws[o][e?"public":"private"]);return await this.watchMultiple(p,u,this.deepExtend(f,r),u)}getSubscriptionRequest(e){return{op:"subscribe",args:e}}handleMessage(e,t){let i;let s={pong:this.handlePong,trades:this.handleTrades,books:this.handleOrderBook,tickers:this.handleTicker,candle:this.handleOHLCV,account:this.handleBalance,orders:this.handleOrders,positions:this.handlePositions};if("pong"===t)i=this.safeValue(s,"pong");else{let r=this.safeString(t,"event");if("subscribe"===r)return;if("login"===r){this.safeValue(e.futures,"authenticate_hash").resolve(!0);return}if("error"===r)throw new n.ExchangeError(this.id+" error: "+this.json(t));let a=this.safeDict(t,"arg"),o=this.safeString(a,"channel");!(i=this.safeValue(s,o))&&o.indexOf("candle")>=0&&(i=s.candle)}i&&i.call(this,e,t)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.milliseconds(),i="authenticate_hash",s=t.toString(),r="n_"+s,a=this.stringToBase64(this.hmac(this.encode("/users/self/verifyGET"+s+r),this.encode(this.secret),l.s)),n={op:"login",args:[{apiKey:this.apiKey,passphrase:this.password,timestamp:s,nonce:r,sign:a}]},o=this.implodeHostname(this.urls.api.ws.swap.private);await this.watch(o,i,this.deepExtend(n,e),i)}}class rs extends ej.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,createOrderWs:!0,editOrderWs:!0,fetchOpenOrdersWs:!1,fetchOrderWs:!1,cancelOrderWs:!0,cancelOrdersWs:!1,cancelAllOrdersWs:!1,fetchTradesWs:!1,fetchBalanceWs:!1,watchBalance:!0,watchBidsAsks:!0,watchLiquidations:!0,watchLiquidationsForSymbols:!1,watchMyLiquidations:!1,watchMyLiquidationsForSymbols:!1,watchMyTrades:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchPositions:!0,watchTradesForSymbols:!0},urls:{api:{ws:{public:{spot:"wss://stream.{hostname}/v5/public/spot",inverse:"wss://stream.{hostname}/v5/public/inverse",option:"wss://stream.{hostname}/v5/public/option",linear:"wss://stream.{hostname}/v5/public/linear"},private:{spot:{unified:"wss://stream.{hostname}/v5/private",nonUnified:"wss://stream.{hostname}/spot/private/v3"},contract:"wss://stream.{hostname}/v5/private",usdc:"wss://stream.{hostname}/trade/option/usdc/private/v1",trade:"wss://stream.bybit.com/v5/trade"}}},test:{ws:{public:{spot:"wss://stream-testnet.{hostname}/v5/public/spot",inverse:"wss://stream-testnet.{hostname}/v5/public/inverse",linear:"wss://stream-testnet.{hostname}/v5/public/linear",option:"wss://stream-testnet.{hostname}/v5/public/option"},private:{spot:{unified:"wss://stream-testnet.{hostname}/v5/private",nonUnified:"wss://stream-testnet.{hostname}/spot/private/v3"},contract:"wss://stream-testnet.{hostname}/v5/private",usdc:"wss://stream-testnet.{hostname}/trade/option/usdc/private/v1",trade:"wss://stream-testnet.bybit.com/v5/trade"}}},demotrading:{ws:{public:{spot:"wss://stream.{hostname}/v5/public/spot",inverse:"wss://stream.{hostname}/v5/public/inverse",option:"wss://stream.{hostname}/v5/public/option",linear:"wss://stream.{hostname}/v5/public/linear"},private:{spot:{unified:"wss://stream-demo.{hostname}/v5/private",nonUnified:"wss://stream-demo.{hostname}/spot/private/v3"},contract:"wss://stream-demo.{hostname}/v5/private",usdc:"wss://stream-demo.{hostname}/trade/option/usdc/private/v1",trade:"wss://stream-demo.bybit.com/v5/trade"}}}},options:{watchTicker:{name:"tickers"},watchPositions:{fetchPositionsSnapshot:!0,awaitPositionsSnapshot:!0},watchMyTrades:{filterExecTypes:["Trade","AdlTrade","BustTrade","Settle"]},spot:{timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"}},contract:{timeframes:{"1m":"1","3m":"3","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"D","1w":"W","1M":"M"}}},streaming:{ping:this.ping,keepAlive:18e3}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async getUrlByMarketType(e,t=!1,i,s={}){let r,a,n,o;let h=t?"private":"public",d=this.urls.api.ws;if(void 0!==e)r="USDC"===(o=this.market(e)).settle,n=o.type;else{[n,s]=this.handleMarketTypeAndParams(i,void 0,s);let e=this.safeString(this.options,"defaultSettle");r="USDC"===(e=this.safeString2(s,"settle","defaultSettle",e))}if(a="spot"===n,t){let e=await this.isUnifiedEnabled(),t=this.safeBool(e,0,!1),i=this.safeBool(e,1,!1);d=!r||t||i?d[h].contract:d[h].usdc}else if(a)d=d[h].spot;else if("swap"===n||"future"===n){let e;[e,s]=this.handleSubTypeAndParams(i,o,s,"linear"),d=d[h][e]}else d=d[h].option;return this.implodeHostname(d)}cleanParams(e){return e=this.omit(e,["type","subType","settle","defaultSettle","unifiedMargin"])}async createOrderWs(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.createOrderRequest(e,t,i,s,r,a,!0),o=this.urls.api.ws.private.trade;await this.authenticate(o);let h=this.requestId().toString(),d={op:"order.create",reqId:h,args:[n],header:{"X-BAPI-TIMESTAMP":this.milliseconds().toString(),"X-BAPI-RECV-WINDOW":this.options.recvWindow.toString()}};return await this.watch(o,h,d,h,!0)}async editOrderWs(e,t,i,s,r,a,n={}){await this.loadMarkets();let o=this.editOrderRequest(e,t,i,s,r,a,n),h=this.urls.api.ws.private.trade;await this.authenticate(h);let d=this.requestId().toString(),l={op:"order.amend",reqId:d,args:[o],header:{"X-BAPI-TIMESTAMP":this.milliseconds().toString(),"X-BAPI-RECV-WINDOW":this.options.recvWindow.toString()}};return await this.watch(h,d,l,d,!0)}async cancelOrderWs(e,t,i={}){await this.loadMarkets();let s=this.cancelOrderRequest(e,t,i),r=this.urls.api.ws.private.trade;await this.authenticate(r);let a=this.requestId().toString();"orderFilter"in s&&delete s.orderFilter;let n={op:"order.cancel",reqId:a,args:[s],header:{"X-BAPI-TIMESTAMP":this.milliseconds().toString(),"X-BAPI-RECV-WINDOW":this.options.recvWindow.toString()}};return await this.watch(r,a,n,a,!0)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="ticker:"+(e=i.symbol),r=await this.getUrlByMarketType(e,!1,"watchTicker",t);t=this.cleanParams(t);let a=this.safeValue(this.options,"watchTicker",{}),o=this.safeString(a,"name","tickers");if(!i.spot&&"tickers"!==o)throw new n.BadRequest(this.id+" watchTicker() only supports name tickers for contract markets");let h=[o+="."+i.id];return await this.watchTopics(r,[s],h,t)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=await this.getUrlByMarketType(e[0],!1,"watchTickers",t);t=this.cleanParams(t);let r=this.safeValue(this.options,"watchTickers",{}),a=this.safeString(r,"name","tickers"),n=this.marketIds(e),o=[];for(let t=0;t<n.length;t++){let s=n[t];o.push(a+"."+s),i.push("ticker:"+e[t])}let h=await this.watchTopics(s,i,o,t);if(this.newUpdates){let e={};return e[h.symbol]=h,e}return this.filterByArray(this.tickers,"symbol",e)}async unWatchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=this.safeValue(this.options,"watchTickers",{}),s=this.safeString(i,"name","tickers"),r=[],a=[],n=this.marketIds(e),o=[];for(let t=0;t<n.length;t++){let i=n[t],h=e[t];o.push(s+"."+i),a.push("ticker:"+h),r.push("unsubscribe:ticker:"+h)}let h=await this.getUrlByMarketType(e[0],!1,"watchTickers",t);return await this.unWatchTopics(h,"ticker",e,r,a,o,t)}async unWatchTicker(e,t={}){return await this.loadMarkets(),await this.unWatchTickers([e],t)}handleTicker(e,t){let i,s;let r=this.safeString(t,"topic",""),a=this.safeString(t,"type",""),n=this.safeDict(t,"data",{}),o=void 0!==this.safeString(n,"usdIndexPrice");if("snapshot"===a)i=(s=this.parseTicker(n)).symbol;else if("delta"===a){let e=r.split("."),t=e.length,a=this.safeString(e,t-1);i=this.safeMarket(a,void 0,void 0,o?"spot":"contract").symbol;let h=this.safeDict(this.tickers,i,{}),d=this.safeDict(h,"info",{}),l=this.extend(d,n);s=this.parseTicker(l)}let h=this.safeInteger(t,"ts");s.timestamp=h,s.datetime=this.iso8601(h),this.tickers[i]=s;let d="ticker:"+i;e.resolve(this.tickers[i],d)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=await this.getUrlByMarketType(e[0],!1,"watchBidsAsks",t);t=this.cleanParams(t);let r=this.marketIds(e),a=[];for(let t=0;t<r.length;t++){let s="orderbook.1."+r[t];a.push(s),i.push("bidask:"+e[t])}let n=await this.watchTopics(s,i,a,t);return this.newUpdates?n:this.filterByArray(this.bidsasks,"symbol",e)}parseWsBidAsk(e,t){let i=this.safeInteger(e,"timestamp"),s=this.sortBy(this.aggregate(e.bids),0),r=this.sortBy(this.aggregate(e.asks),0),a=this.safeList(s,0,[]),n=this.safeList(r,0,[]);return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),ask:this.safeNumber(n,0),askVolume:this.safeNumber(n,1),bid:this.safeNumber(a,0),bidVolume:this.safeNumber(a,1),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){return r.callerMethodName="watchOHLCV",(await this.watchOHLCVForSymbols([[e,t]],i,s,r))[e][t]}async watchOHLCVForSymbols(e,t,i,s={}){await this.loadMarkets();let r=this.getListFromObjectValues(e,0),a=this.marketSymbols(r,void 0,!1,!0,!0)[0],n=await this.getUrlByMarketType(a,!1,"watchOHLCVForSymbols",s),o=[],h=[];for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,0),r=this.market(s);s=r.symbol;let a=this.safeString(i,1),n=this.safeString(this.timeframes,a,a);o.push("kline."+n+"."+r.id),h.push("ohlcv::"+s+"::"+a)}let[d,l,c]=await this.watchTopics(n,h,o,s);this.newUpdates&&(i=c.getLimit(d,i));let u=this.filterBySinceLimit(c,t,i,0,!0);return this.createOHLCVObject(d,l,u)}async unWatchOHLCVForSymbols(e,t={}){await this.loadMarkets();let i=this.getListFromObjectValues(e,0),s=this.marketSymbols(i,void 0,!1,!0,!0)[0],r=await this.getUrlByMarketType(s,!1,"watchOHLCVForSymbols",t),a=[],n=[],o=[];for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,0),r=this.market(s);s=r.symbol;let h=this.safeString(i,1),d=this.safeString(this.timeframes,h,h);a.push("kline."+d+"."+r.id),n.push("ohlcv::"+s+"::"+h),o.push("unsubscribe::ohlcv::"+s+"::"+h)}return await this.unWatchTopics(r,"ohlcv",i,o,n,a,t,{symbolsAndTimeframes:e})}async unWatchOHLCV(e,t="1m",i={}){return i.callerMethodName="watchOHLCV",await this.unWatchOHLCVForSymbols([[e,t]],i)}handleOHLCV(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(t,"topic").split("."),r=s.length,a=this.safeString(s,1),n=this.findTimeframe(a),o=this.safeString(s,r-1),h=e.url.indexOf("spot")>-1,d=this.safeMarket(o,void 0,void 0,h?"spot":"contract").symbol,l=this.safeValue(this.ohlcvs,d);if(void 0===l&&(this.ohlcvs[d]={}),void 0===this.safeValue(l,n)){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs[d][n]=new sH.TG(e)}let c=this.ohlcvs[d][n];for(let e=0;e<i.length;e++){let t=this.parseWsOHLCV(i[e]);c.append(t)}let u="ohlcv::"+d+"::"+n,f=[d,n,c];e.resolve(f,u)}parseWsOHLCV(e,t){return[this.safeInteger(e,"start"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber2(e,"volume","turnover")]}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){if(await this.loadMarkets(),0===e.length)throw new n.ArgumentsRequired(this.id+" watchOrderBookForSymbols() requires a non-empty array of symbols");e=this.marketSymbols(e);let s=await this.getUrlByMarketType(e[0],!1,"watchOrderBook",i);i=this.cleanParams(i);let r=this.market(e[0]);if(void 0===t)t=r.spot?50:500;else if(!r.spot&&1!==t&&50!==t&&200!==t&&500!==t)throw new n.BadRequest(this.id+" watchOrderBookForSymbols() can only use limit 1, 50, 200 and 500.");let a=[],o=[];for(let i=0;i<e.length;i++){let s=e[i],r=this.marketId(s),n="orderbook."+t.toString()+"."+r;a.push(n);let h="orderbook:"+s;o.push(h)}return(await this.watchTopics(s,o,a,i)).limit()}async unWatchOrderBookForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i="orderbook.",s=this.safeInteger(t,"limit");void 0!==s?t=this.omit(t,"limit"):s=this.market(e[0]).spot?50:500,i+=s.toString();let r=[],a=[],n=[];for(let t=0;t<e.length;t++){let s=e[t],o=i+"."+this.market(s).id;a.push("unsubscribe:orderbook:"+s),r.push("orderbook:"+s),n.push(o)}let o=await this.getUrlByMarketType(e[0],!1,"watchOrderBook",t);return await this.unWatchTopics(o,"orderbook",e,a,r,n,t)}async unWatchOrderBook(e,t={}){return await this.loadMarkets(),await this.unWatchOrderBookForSymbols([e],t)}handleOrderBook(e,t){let i=this.safeString(t,"topic").split(".")[1],s=e.url.indexOf("spot")>=0,r=this.safeString(t,"type"),a=this.safeDict(t,"data",{}),n=this.safeString(a,"s"),o=this.safeMarket(n,void 0,void 0,s?"spot":"contract"),h=o.symbol,d=this.safeInteger(t,"ts");h in this.orderbooks||(this.orderbooks[h]=this.orderBook());let l=this.orderbooks[h];if("snapshot"===r){let e=this.parseOrderBook(a,h,d,"b","a");l.reset(e)}else{let e=this.safeList(a,"a",[]),t=this.safeList(a,"b",[]);this.handleDeltas(l.asks,e),this.handleDeltas(l.bids,t),l.timestamp=d,l.datetime=this.iso8601(d)}let c="orderbook:"+h;if(this.orderbooks[h]=l,e.resolve(l,c),"1"===i){let t=this.parseWsBidAsk(this.orderbooks[h],o),i={};i[h]=t,this.bidsasks[h]=t,e.resolve(i,"bidask:"+h)}}handleDelta(e,t){let i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){if(await this.loadMarkets(),0===(e=this.marketSymbols(e)).length)throw new n.ArgumentsRequired(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");s=this.cleanParams(s);let r=await this.getUrlByMarketType(e[0],!1,"watchTrades",s),a=[],o=[];for(let t=0;t<e.length;t++){let i=e[t],s="publicTrade."+this.market(i).id;a.push(s);let r="trade:"+i;o.push(r)}let h=await this.watchTopics(r,o,a,s);if(this.newUpdates){let e=this.safeValue(h,0),t=this.safeString(e,"symbol");i=h.getLimit(t,i)}return this.filterBySinceLimit(h,t,i,"timestamp",!0)}async unWatchTradesForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1,!0);let i=await this.getUrlByMarketType(e[0],!1,"unWatchTradesForSymbols",t),s=[],r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],n="publicTrade."+this.market(i).id;r.push(n);let o="unsubscribe:trade:"+i;s.push(o),a.push("trade:"+i)}return await this.unWatchTopics(i,"trades",e,s,a,r,t)}async unWatchTrades(e,t={}){return await this.loadMarkets(),await this.unWatchTradesForSymbols([e],t)}handleTrades(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(t,"topic").split("."),r=e.url.indexOf("spot")>=0,a=this.safeString(s,1),n=this.safeMarket(a,void 0,void 0,r?"spot":"contract"),o=n.symbol,h=this.safeValue(this.trades,o);if(void 0===h){let e=this.safeInteger(this.options,"tradesLimit",1e3);h=new sH.I3(e),this.trades[o]=h}for(let e=0;e<i.length;e++){let t=this.parseWsTrade(i[e],n);h.append(t)}let d="trade:"+o;e.resolve(h,d)}parseWsTrade(e,t){let i;let s=this.safeStringN(e,["i","T","v"]),r="BT"in e?"contract":"spot";void 0!==t&&(r=t.type);let a=this.safeString(e,"s"),n=(t=this.safeMarket(a,t,void 0,r)).symbol,o=this.safeInteger2(e,"t","T"),h=this.safeStringLower(e,"S"),d=this.safeValue(e,"m");void 0===h?h=d?"buy":"sell":i=d;let l=this.safeString(e,"p"),c=this.safeString2(e,"q","v"),u=this.safeString(e,"o");return this.safeTrade({id:s,info:e,timestamp:o,datetime:this.iso8601(o),symbol:n,order:u,type:void 0,side:h,takerOrMaker:i,price:l,amount:c,cost:void 0,fee:void 0},t)}getPrivateType(e){return e.indexOf("spot")>=0?"spot":e.indexOf("v5/private")>=0?"unified":"usdc"}async watchMyTrades(e,t,i,s={}){let r="myTrades";await this.loadMarkets(),void 0!==e&&(r+=":"+(e=this.symbol(e)));let a=await this.getUrlByMarketType(e,!0,"watchMyTrades",s);await this.authenticate(a);let n=this.safeValue({spot:"ticketInfo",unified:"execution",usdc:"user.openapi.perp.trade"},this.getPrivateType(a)),o=await this.watchTopics(a,[r],[n],s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}async unWatchMyTrades(e,t={}){let i="myTrades";await this.loadMarkets(),void 0!==e&&(i+=":"+(e=this.symbol(e)));let s=await this.getUrlByMarketType(e,!0,"watchMyTrades",t);await this.authenticate(s);let r=this.safeValue({spot:"ticketInfo",unified:"execution",usdc:"user.openapi.perp.trade"},this.getPrivateType(s));return await this.unWatchTopics(s,"myTrades",[],["unsubscribe:myTrades"],[i],[r],t)}handleMyTrades(e,t){let i="ticketInfo"===this.safeString(t,"topic"),s=this.safeValue(t,"data",[]);if(Array.isArray(s)||(s=this.safeValue(s,"result",[])),void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let r=this.myTrades,a={},n=this.handleOption("watchMyTrades","filterExecTypes",[]);for(let e=0;e<s.length;e++){let t;let o=s[e];if(i)t=this.parseWsTrade(o);else{let e=this.safeString(o,"execType","");if(!this.inArray(e,n))continue;t=this.parseTrade(o)}a[t.symbol]=!0,r.append(t)}let o=Object.keys(a);for(let t=0;t<o.length;t++){let i="myTrades:"+o[t];e.resolve(r,i)}e.resolve(r,"myTrades")}async watchPositions(e,t,i,s={}){await this.loadMarkets();let r="";this.isEmpty(e)||(r="::"+(e=this.marketSymbols(e)).join(","));let a=this.safeString(e,0),n=await this.getUrlByMarketType(a,!0,"watchPositions",s);r="positions"+r;let o=this.client(n);await this.authenticate(n),this.setPositionsCache(o,e);let h=this.positions,d=this.handleOption("watchPositions","fetchPositionsSnapshot",!0),l=this.handleOption("watchPositions","awaitPositionsSnapshot",!0);if(d&&l&&void 0===h){let s=await o.future("fetchPositionsSnapshot");return this.filterBySymbolsSinceLimit(s,e,t,i,!0)}let c=await this.watchTopics(n,[r],["position"],s);return this.newUpdates?c:this.filterBySymbolsSinceLimit(h,e,t,i,!0)}setPositionsCache(e,t){if(void 0===this.positions){if(this.handleOption("watchPositions","fetchPositionsSnapshot",!0)){let t="fetchPositionsSnapshot";t in e.futures||(e.future(t),this.spawn(this.loadPositionsSnapshot,e,t))}else this.positions=new sH.Hk}}async loadPositionsSnapshot(e,t){let i=[this.fetchPositions(void 0,{type:"swap",subType:"linear"}),this.fetchPositions(void 0,{type:"swap",subType:"inverse"})],s=await Promise.all(i);this.positions=new sH.Hk;let r=this.positions;for(let e=0;e<s.length;e++){let t=s[e];for(let e=0;e<t.length;e++){let i=t[e];r.append(i)}}e.futures[t].resolve(r),e.resolve(r,"position")}handlePositions(e,t){void 0===this.positions&&(this.positions=new sH.Hk);let i=this.positions,s=[],r=this.safeValue(t,"data",[]);for(let e=0;e<r.length;e++){let t=r[e],a=this.parsePosition(t),n=this.safeString(a,"side");s.push(a),void 0===n||""===n?(a.side="long",i.append(a),a.side="short",i.append(a),a.side=void 0):i.append(a)}let a=this.findMessageHashes(e,"positions::");for(let t=0;t<a.length;t++){let i=a[t],r=i.split("::")[1].split(","),n=this.filterByArray(s,"symbol",r,!1);this.isEmpty(n)||e.resolve(n,i)}e.resolve(s,"positions")}async watchLiquidations(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=await this.getUrlByMarketType(e,!1,"watchLiquidations",s);s=this.cleanParams(s);let n="liquidations::"+e,o="liquidation."+r.id,h=await this.watchTopics(a,[n],[o],s);return this.newUpdates?h:this.filterBySymbolsSinceLimit(this.liquidations,[e],t,i,!0)}handleLiquidation(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"symbol"),r=this.safeMarket(s,void 0,"","contract"),a=r.symbol,n=this.parseWsLiquidation(i,r),o=this.safeValue(this.liquidations,a);if(void 0===o){let e=this.safeInteger(this.options,"liquidationsLimit",1e3);o=new sH.I3(e)}o.append(n),this.liquidations[a]=o,e.resolve([n],"liquidations"),e.resolve([n],"liquidations::"+a)}parseWsLiquidation(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t,"","contract");let s=this.safeInteger(e,"updatedTime");return this.safeLiquidation({info:e,symbol:t.symbol,contracts:this.safeNumber(e,"size"),contractSize:this.safeNumber(t,"contractSize"),price:this.safeNumber(e,"price"),baseValue:void 0,quoteValue:void 0,timestamp:s,datetime:this.iso8601(s)})}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r="orders";void 0!==e&&(r+=":"+(e=this.symbol(e)));let a=await this.getUrlByMarketType(e,!0,"watchOrders",s);await this.authenticate(a);let n=this.safeValue({spot:["order","stopOrder"],unified:["order"],usdc:["user.openapi.perp.order"]},this.getPrivateType(a)),o=await this.watchTopics(a,[r],n,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}async unWatchOrders(e,t={}){await this.loadMarkets();let i="orders";void 0!==e&&(i+=":"+(e=this.symbol(e)));let s=await this.getUrlByMarketType(e,!0,"watchOrders",t);await this.authenticate(s);let r=this.safeValue({spot:["order","stopOrder"],unified:["order"],usdc:["user.openapi.perp.order"]},this.getPrivateType(s));return await this.unWatchTopics(s,"orders",[],["unsubscribe:orders"],[i],r,t)}handleOrderWs(e,t){let i=this.safeString(t,"reqId"),s=this.safeDict(t,"data"),r=this.parseOrder(s);e.resolve(r,i)}handleOrder(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let i=this.orders,s=this.safeValue(t,"data",[]),r=this.safeValue(s,0,{}),a="spot"===this.safeString(r,"category");a||(s=this.safeValue(s,"result",s));let n={};for(let e=0;e<s.length;e++){let t;n[(t=a?this.parseWsSpotOrder(s[e]):this.parseOrder(s[e])).symbol]=!0,i.append(t)}let o=Object.keys(n);for(let t=0;t<o.length;t++){let s="orders:"+o[t];e.resolve(i,s)}e.resolve(i,"orders")}parseWsSpotOrder(e,t){let i,s;let r=this.safeString2(e,"i","orderId"),a=this.safeString2(e,"s","symbol"),n=this.safeSymbol(a,t,void 0,"spot"),o=this.safeInteger2(e,"O","createdTime"),h=this.safeString2(e,"p","price");"0"===h&&(h=void 0);let d=this.safeString2(e,"z","cumExecQty"),l=this.parseOrderStatus(this.safeString2(e,"X","orderStatus")),c=this.safeStringLower2(e,"S","side"),u=this.safeString2(e,"E","updatedTime"),f=this.safeString2(e,"f","timeInForce"),p=this.safeString2(e,"Z","cumExecValue"),m=this.safeStringLower2(e,"o","orderType");void 0!==m&&m.indexOf("market")>=0&&(m="market"),i="market"===m&&"buy"===c?d:this.safeString2(e,"orderQty","qty");let g=this.safeString2(e,"n","cumExecFee");if(void 0!==g&&"0"!==g){let t=this.safeString(e,"N");s={cost:g,currency:this.safeCurrencyCode(t)}}let y=this.omitZero(this.safeString(e,"triggerPrice"));return this.safeOrder({info:e,id:r,clientOrderId:this.safeString2(e,"c","orderLinkId"),timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:u,symbol:n,type:m,timeInForce:f,postOnly:void 0,side:c,price:h,stopPrice:y,triggerPrice:y,takeProfitPrice:this.safeString(e,"takeProfit"),stopLossPrice:this.safeString(e,"stopLoss"),reduceOnly:this.safeValue(e,"reduceOnly"),amount:i,cost:p,average:this.safeString(e,"avgPrice"),filled:d,remaining:void 0,status:l,fee:s},t)}async watchBalance(e={}){let t,i;await this.loadMarkets();let s="balances";[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),[i,e]=this.handleSubTypeAndParams("watchBalance",void 0,e);let r=await this.isUnifiedEnabled(),a=this.safeBool(r,0,!1),n=this.safeBool(r,1,!1),o=await this.getUrlByMarketType(void 0,!0,"watchBalance",e);await this.authenticate(o),n&&("inverse"===i?s+=":contract":s+=":unified"),a||n||("spot"===t?s+=":spot":s+=":contract"),a&&("spot"===t?s+=":spot":"linear"===i?s+=":unified":s+=":contract");let h=[this.safeValue({spot:"outboundAccountInfo",unified:"wallet"},this.getPrivateType(o))];return await this.watchTopics(o,[s],h,e)}handleBalance(e,t){let i,s;void 0===this.balance&&(this.balance={});let r="balance",a=this.safeValue(t,"topic"),n=[];if("outboundAccountInfo"===a){s="spot";let e=this.safeValue(t,"data",[]);for(let t=0;t<e.length;t++){let i=this.safeValue(e[t],"B",[]);n=this.arrayConcat(n,i)}i=n}if("wallet"===a){let e=this.safeValue(t,"data",{});for(let t=0;t<e.length;t++){let t=this.safeValue(e,0,{});s=this.safeStringLower(t,"accountType"),n=this.arrayConcat(n,this.safeValue(t,"coin",[]))}i=e}for(let e=0;e<n.length;e++)this.parseWsBalance(n[e],s);if(void 0!==s){void 0===this.safeValue(this.balance,s)&&(this.balance[s]={}),this.balance[s].info=i;let a=this.safeInteger(t,"ts");this.balance[s].timestamp=a,this.balance[s].datetime=this.iso8601(a),this.balance[s]=this.safeBalance(this.balance[s]),r="balances:"+s,e.resolve(this.balance[s],r)}else{this.balance.info=i;let s=this.safeInteger(t,"ts");this.balance.timestamp=s,this.balance.datetime=this.iso8601(s),this.balance=this.safeBalance(this.balance),r="balances",e.resolve(this.balance,r)}}parseWsBalance(e,t){let i=this.account(),s=this.safeString2(e,"a","coin"),r=this.safeCurrencyCode(s);i.free=this.safeStringN(e,["availableToWithdraw","f","free","availableToWithdraw"]),i.used=this.safeString2(e,"l","locked"),i.total=this.safeString(e,"walletBalance"),void 0!==t?(void 0===this.safeValue(this.balance,t)&&(this.balance[t]={}),this.balance[t][r]=i):this.balance[r]=i}async watchTopics(e,t,i,s={}){let r={op:"subscribe",req_id:this.requestId(),args:i},a=this.extend(r,s);return await this.watchMultiple(e,t,a,t)}async unWatchTopics(e,t,i,s,r,a,n={},o={}){let h=this.requestId(),d=this.extend({op:"unsubscribe",req_id:h,args:a},n);return await this.watchMultiple(e,s,d,s,this.extend({id:h,topic:t,messageHashes:s,subMessageHashes:r,symbols:i},o))}async authenticate(e,t={}){this.checkRequiredCredentials();let i="authenticated",s=this.client(e),r=s.future(i);if(void 0===this.safeValue(s.subscriptions,i)){let s=this.milliseconds()+1e4,r=this.numberToString(s),a=this.hmac(this.encode("GET/realtime"+r),this.encode(this.secret),l.s,"hex"),n={op:"auth",args:[this.apiKey,r,a]},o=this.extend(n,t);this.watch(e,i,o,i)}return await r}handleErrorMessage(e,t){let i=this.safeStringN(t,["code","ret_code","retCode"]);try{if(void 0!==i&&"0"!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);let s=this.safeString2(t,"retMsg","ret_msg");throw this.throwBroadlyMatchedException(this.exceptions.broad,s,e),new n.ExchangeError(e)}let e=this.safeValue(t,"success");if(void 0!==e&&!e){let e=this.safeString(t,"ret_msg"),i=this.safeValue(t,"request",{}),s=this.safeString(i,"op");if("auth"===s)throw new n.AuthenticationError("Authentication failed: "+e);throw new n.ExchangeError(this.id+" "+e)}return!1}catch(i){if(i instanceof n.AuthenticationError){let t="authenticated";e.reject(i,t),t in e.subscriptions&&delete e.subscriptions[t]}else{let s=this.safeString(t,"reqId");e.reject(i,s)}return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"ret_msg")||void 0!==this.safeInteger(t,"pong")){this.handlePong(e,t);return}if("sub"===this.safeString(t,"event")){this.handleSubscriptionStatus(e,t);return}let i=this.safeString2(t,"topic","op",""),s={orderbook:this.handleOrderBook,kline:this.handleOHLCV,order:this.handleOrder,stopOrder:this.handleOrder,ticker:this.handleTicker,trade:this.handleTrades,publicTrade:this.handleTrades,depth:this.handleOrderBook,wallet:this.handleBalance,outboundAccountInfo:this.handleBalance,execution:this.handleMyTrades,ticketInfo:this.handleMyTrades,"user.openapi.perp.trade":this.handleMyTrades,position:this.handlePositions,liquidation:this.handleLiquidation,pong:this.handlePong,"order.create":this.handleOrderWs,"order.amend":this.handleOrderWs,"order.cancel":this.handleOrderWs,auth:this.handleAuthenticate,unsubscribe:this.handleUnSubscribe},r=this.safeValue(s,i);if(void 0!==r){r.call(this,e,t);return}let a=Object.keys(s);for(let r=0;r<a.length;r++){let n=a[r];if(i.indexOf(a[r])>=0){s[n].call(this,e,t);return}}"AUTH_RESP"===this.safeString(t,"type")&&this.handleAuthenticate(e,t)}ping(e){return{req_id:this.requestId(),op:"ping"}}handlePong(e,t){return e.lastPong=this.safeInteger(t,"pong"),t}handleAuthenticate(e,t){let i=this.safeValue(t,"success"),s=this.safeInteger(t,"retCode"),r="authenticated";if(i||0===s)this.safeValue(e.futures,r).resolve(!0);else{let i=new n.AuthenticationError(this.id+" "+this.json(t));e.reject(i,r),r in e.subscriptions&&delete e.subscriptions[r]}return t}handleSubscriptionStatus(e,t){return t}handleUnSubscribe(e,t){let i=this.safeString(t,"req_id"),s=Object.keys(e.subscriptions);for(let t=0;t<s.length;t++){let r=s[t];if(r in e.subscriptions&&r.startsWith("unsubscribe")){let t=e.subscriptions[r];if(i!==this.safeString(t,"id"))continue;let s=this.safeList(t,"messageHashes",[]),a=this.safeList(t,"subMessageHashes",[]);for(let t=0;t<s.length;t++){let i=s[t],r=a[t];this.cleanUnsubscription(e,r,i)}this.cleanCache(t)}}return t}}class rr extends eY{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0,watchPosition:void 0,createOrderWs:!0,editOrderWs:!0,cancelOrderWs:!0,cancelOrdersWs:!0,fetchOrderWs:!0,fetchOpenOrdersWs:!0,fetchTickerWs:!0,fetchBalanceWs:!0},urls:{api:{ws:"wss://ws.cex.io/ws"}},options:{orderbook:{}},streaming:{},exceptions:{}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchBalance(e={}){await this.authenticate(e);let t=this.requestId(),i=this.urls.api.ws,s={e:"get-balance",data:{},oid:this.requestId()},r=this.deepExtend(s,e);return await this.watch(i,t,r,t,r)}handleBalance(e,t){let i=this.safeValue(t,"data",{}),s=this.safeValue(i,"balance",{}),r=this.safeValue(i,"obalance",{}),a={info:i},n=Object.keys(s);for(let e=0;e<n.length;e++){let t=n[e],i=this.account();i.free=this.safeString(s,t),i.used=this.safeString(r,t),a[this.safeCurrencyCode(t)]=i}this.balance=this.safeBalance(a);let o=this.safeString(t,"oid");e.resolve(this.balance,o)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=this.urls.api.ws,o="old:"+e;this.options.currentWatchTradeSymbol=e;let h=this.safeValue(this.clients,a);if(void 0!==h){let e=Object.keys(h.subscriptions);for(let t=0;t<e.length;t++){let i=e[t];if(i!==o&&"old"===(i=i.slice(0,3)))throw new n.ExchangeError(this.id+" watchTrades() only supports watching one symbol at a time.")}}let d={e:"subscribe",rooms:["pair-"+r.base+"-"+r.quote]},l=this.deepExtend(d,s),c=await this.watch(a,"trades",l,o);for(let t=0;t<c.length;t++)c[t].symbol=e;return this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleTradesSnapshot(e,t){let i=this.safeList(t,"data",[]),s=this.safeInteger(this.options,"tradesLimit",1e3),r=new sH.I3(s),a=this.safeString(this.options,"currentWatchTradeSymbol");if(void 0===a)return;let n=this.market(a),o=i.length;for(let e=0;e<o;e++){let t=i[o-1-e],s=this.parseWsOldTrade(t,n);r.append(s)}this.trades=r,e.resolve(this.trades,"trades")}parseWsOldTrade(e,t){Array.isArray(e)||(e=e.split(":"));let i=this.safeString(e,0),s=this.safeInteger(e,1),r=this.safeString(e,2),a=this.safeString(e,3),n=this.safeString(e,4);return this.safeTrade({info:e,id:n,timestamp:s,datetime:this.iso8601(s),symbol:this.safeString(t,"symbol"),type:void 0,side:i,order:void 0,takerOrMaker:void 0,price:a,amount:r,cost:void 0,fee:void 0},t)}handleTrade(e,t){let i=this.safeValue(t,"data",[]),s=this.trades,r=i.length;for(let e=0;e<r;e++){let t=i[r-1-e],a=this.parseWsOldTrade(t);s.append(a)}this.trades=s,e.resolve(this.trades,"trades")}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=this.urls.api.ws,r="ticker:"+e,a=this.safeString(t,"method","private"),n={e:"subscribe",rooms:["tickers"]},o="tickers";"private"===a&&(await this.authenticate(),n={e:"ticker",data:[i.baseId,i.quoteId],oid:this.requestId()},o="ticker:"+e);let h=this.deepExtend(n,t);return await this.watch(s,r,h,o)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=this.urls.api.ws,s="tickers",r=this.deepExtend({e:"subscribe",rooms:["tickers"]},t),a=await this.watch(i,s,r,s),n=a.symbol;if(void 0!==e&&!this.inArray(n,e))return await this.watchTickers(e,t);if(this.newUpdates){let e={};return e[n]=a,e}return this.filterByArray(this.tickers,"symbol",e)}async fetchTickerWs(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.urls.api.ws,r=this.requestId(),a=this.extend({e:"ticker",oid:r,data:[i.base,i.quote]},t);return await this.watch(s,r,a,r)}handleTicker(e,t){let i=this.safeValue(t,"data",{}),s=this.parseWsTicker(i),r=s.symbol;if(void 0===r)return;this.tickers[r]=s;let a="ticker:"+r;e.resolve(s,a),e.resolve(s,"tickers"),void 0!==(a=this.safeString(t,"oid"))&&e.resolve(s,a)}parseWsTicker(e,t){let i=this.safeValue(e,"pair",[]),s=this.safeString(e,"symbol1");void 0===s&&(s=this.safeString(i,0));let r=this.safeString(e,"symbol2");void 0===r&&(r=this.safeString(i,1));let a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(r),o=this.safeInteger(e,"timestamp");return void 0!==o&&(o*=1e3),this.safeTicker({symbol:a+"/"+n,timestamp:o,datetime:this.iso8601(o),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open24"),close:void 0,last:this.safeString2(e,"price","last"),previousClose:void 0,change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercentage"),average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchBalanceWs(e={}){await this.loadMarkets(),await this.authenticate();let t=this.urls.api.ws,i=this.requestId(),s=this.extend({e:"get-balance",oid:i},e);return await this.watch(t,i,s,i)}async watchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchOrders() requires a symbol argument");await this.loadMarkets(),await this.authenticate(s);let r=this.urls.api.ws,a=this.market(e),o="orders:"+(e=a.symbol),h={e:"open-orders",data:{pair:[a.baseId,a.quoteId]},oid:e},d=this.deepExtend(h,s),l=await this.watch(r,o,d,o,d);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySymbolSinceLimit(l,e,t,i,!0)}async watchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchMyTrades() requires a symbol argument");await this.loadMarkets(),await this.authenticate(s);let r=this.urls.api.ws,a=this.market(e),o="myTrades:"+a.symbol,h="orders:"+a.symbol,d={e:"open-orders",data:{pair:[a.baseId,a.quoteId]},oid:a.symbol},l=this.deepExtend(d,s),c=await this.watch(r,o,l,h,l);return this.filterBySymbolSinceLimit(c,a.symbol,t,i)}handleTransaction(e,t){let i=this.safeValue(t,"data");void 0!==this.safeString(i,"symbol2")&&(this.handleOrderUpdate(e,t),this.handleMyTrades(e,t))}handleMyTrades(e,t){let i=this.safeValue(t,"data",{}),s=this.myTrades;if(void 0===s){let e=this.safeInteger(this.options,"tradesLimit",1e3);s=new sH.Pt(e),this.myTrades=s}let r=this.parseWsTrade(i);s.append(r);let a="myTrades:"+r.symbol;e.resolve(s,a)}parseWsTrade(e,t){let i=this.safeString(e,"type"),s=this.safeString(e,"price"),a=this.safeString(e,"time"),n=this.safeString(e,"symbol"),o=this.safeString(e,"symbol2"),h=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),l=h+"/"+d,c=this.safeString(e,"amount");"sell"===i&&(l=d+"/"+h,c=r.Y.stringDiv(c,s));let u={id:this.safeString(e,"id"),order:this.safeString(e,"order"),info:e,timestamp:this.parse8601(a),datetime:a,symbol:l,type:void 0,side:i,takerOrMaker:void 0,price:s,cost:void 0,amount:c,fee:void 0},f=this.safeString(e,"fee_amount");return void 0!==f&&(u.fee={cost:f,currency:d,rate:void 0}),this.safeTrade(u,t)}handleOrderUpdate(e,t){let i=this.safeValue(t,"data",{}),s="tx"===this.safeString(t,"e"),r=this.safeString2(i,"id","order"),a=this.safeString(i,"remains"),n=this.safeString(i,"symbol"),o=this.safeString(i,"symbol2"),h=this.safeValue(i,"pair");void 0!==h&&(n=this.safeString(h,"symbol1"),o=this.safeString(h,"symbol2"));let d=this.safeCurrencyCode(n),l=this.safeCurrencyCode(o),c=d+"/"+l,u=this.safeMarket(c);if(a=this.currencyFromPrecision(d,a),void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let f=this.orders,p=this.safeValue(f.hashmap,c,{}),m=this.safeValue(p,r);void 0===m&&(m=this.parseWsOrderUpdate(i,u)),m.remaining=a,this.safeBool(i,"cancel",!1)&&(m.status="canceled"),s&&(m.status="closed");let g=this.safeNumber(i,"fee");void 0!==g&&(m.fee={cost:g,currency:l,rate:void 0});let y=this.safeInteger(i,"time");m.timestamp=y,m.datetime=this.iso8601(y),m=this.safeOrder(m),f.append(m);let v="orders:"+c;e.resolve(f,v)}parseWsOrderUpdate(e,t){let i,s;let r=void 0!==this.safeValue(e,"d"),a=this.safeString(e,"remains");void 0!==a&&(i=this.currencyFromPrecision(t.base,a));let n=this.safeString(e,"amount");r||this.currencyFromPrecision(t.base,n);let o=this.safeString(e,"symbol"),h=this.safeString(e,"symbol2");void 0!==this.safeValue(e,"pair")&&(o=this.safeString(e,"symbol1"),h=this.safeString(e,"symbol2"));let d=this.safeCurrencyCode(o),l=this.safeCurrencyCode(h);void 0!==d&&void 0!==l&&(s=d+"/"+l),t=this.safeMarket(s,t);let c=this.safeInteger(e,"time",this.milliseconds()),u=c;r&&(u=this.parse8601(c));let f=this.safeBool(e,"cancel",!1),p="open";f?p="canceled":r&&(p="closed");let m={id:this.safeString2(e,"id","order"),clientOrderId:void 0,info:e,timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:void 0,status:p,symbol:s,type:void 0,timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"type"),price:this.safeNumber(e,"price"),stopPrice:void 0,triggerPrice:void 0,average:void 0,cost:void 0,amount:n,filled:void 0,remaining:i,fee:{cost:this.safeNumber2(e,"fee","fee_amount"),currency:l,rate:void 0},trades:void 0};return r&&(m.trades=this.parseWsTrade(e,t)),this.safeOrder(m,t)}fromPrecision(e,t){if(void 0===e)return;let i=new r.Y(e);return i.decimals=this.sum(i.decimals,t),i.reduce(),i.toString()}currencyFromPrecision(e,t){let i=this.safeInteger(this.currencies[e],"precision",0);return this.fromPrecision(t,i)}handleOrdersSnapshot(e,t){let i=this.safeString(t,"oid"),s=this.safeValue(t,"data",[]),r=this.orders;if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);r=new sH.Pt(e)}for(let e=0;e<s.length;e++){let t=s[e],a=this.safeMarket(i),n=this.parseOrder(t,a);n.status="open",r.append(n)}this.orders=r,r.length>0&&e.resolve(r,"orders:"+i)}async watchOrderBook(e,t,i={}){await this.loadMarkets(),await this.authenticate();let s=this.market(e);e=s.symbol;let r=this.urls.api.ws,a="orderbook:"+e,n={e:"order-book-subscribe",data:{pair:[s.baseId,s.quoteId],subscribe:!0,depth:void 0===t?0:t},oid:this.requestId()},o=this.deepExtend(n,i);return(await this.watch(r,a,o,a)).limit()}handleOrderBookSnapshot(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"pair"),r=this.pairToSymbol(s),a="orderbook:"+r,n=this.safeInteger2(i,"timestamp_ms","timestamp"),o=this.safeInteger(i,"id"),h=this.orderBook({}),d=this.parseOrderBook(i,r,n,"bids","asks");d.nonce=o,h.reset(d),this.options.orderbook[r]={incrementalId:o},this.orderbooks[r]=h,e.resolve(h,a)}pairToSymbol(e){let t=e.split(":"),i=this.safeString(t,0),s=this.safeString(t,1);return this.safeCurrencyCode(i)+"/"+this.safeCurrencyCode(s)}handleOrderBookUpdate(e,t){let i=this.safeValue(t,"data",{}),s=this.safeInteger(i,"id"),r=this.safeString(i,"pair",""),a=this.pairToSymbol(r),n=this.safeValue(this.orderbooks,a),o="orderbook:"+a;s!==n.nonce+1&&(delete e.subscriptions[o],e.reject(this.id+" watchOrderBook() skipped a message",o));let h=this.safeInteger(i,"time"),d=this.safeValue(i,"asks",[]),l=this.safeValue(i,"bids",[]);this.handleDeltas(n.asks,d),this.handleDeltas(n.bids,l),n.timestamp=h,n.datetime=this.iso8601(h),n.nonce=s,e.resolve(n,o)}handleDelta(e,t){let i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n="ohlcv:"+(e=a.symbol),o=this.urls.api.ws,h={e:"init-ohlcv",i:t,rooms:["pair-"+a.baseId+"-"+a.quoteId]},d=await this.watch(o,n,this.extend(h,r),n);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySinceLimit(d,i,s,0,!0)}handleInitOHLCV(e,t){let i=this.safeString(t,"pair").split(":"),s=this.safeString(i,0),r=this.safeString(i,1),a=this.safeCurrencyCode(s)+"/"+this.safeCurrencyCode(r),n=this.safeMarket(a),o=this.safeValue(t,"data",[]),h=this.safeInteger(this.options,"OHLCVLimit",1e3),d=new sH.TG(h),l=this.sortBy(o,0);for(let e=0;e<l.length;e++)d.append(this.parseOHLCV(l[e],n));a in this.ohlcvs||(this.ohlcvs[a]={}),this.ohlcvs[a].unknown=d,e.resolve(d,"ohlcv:"+a)}handleOHLCV24(e,t){return t}handleOHLCV1m(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"pair"),r=this.pairToSymbol(s),a="ohlcv:"+r,n=[this.safeTimestamp(i,"time"),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),this.safeNumber(i,"v")],o=this.safeValue(this.ohlcvs,r);o.append(n),e.resolve(o,a)}handleOHLCV(e,t){let i=this.safeValue(t,"data",[]),s=this.safeString(t,"pair"),r=this.pairToSymbol(s),a=this.ohlcvs[r].unknown;for(let e=0;e<i.length;e++){let t=[this.safeTimestamp(i[e],0),this.safeNumber(i[e],1),this.safeNumber(i[e],2),this.safeNumber(i[e],3),this.safeNumber(i[e],4),this.safeNumber(i[e],5)];a.append(t)}i.length>0&&e.resolve(a,"ohlcv:"+r)}async fetchOrderWs(e,t,i={}){let s;await this.loadMarkets(),await this.authenticate(),void 0!==t&&(s=this.market(t));let r=this.extend({order_id:e.toString()},i),a=this.urls.api.ws,n=this.requestId(),o=await this.watch(a,n,{e:"get-order",oid:n,data:r},n);return this.parseOrder(o,s)}async fetchOpenOrdersWs(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+"fetchOpenOrdersWs requires a symbol.");await this.loadMarkets(),await this.authenticate();let r=this.market(e),a=this.urls.api.ws,o=this.requestId(),h=this.extend({pair:[r.baseId,r.quoteId]},s),d=await this.watch(a,o,{e:"open-orders",oid:o,data:h},o);return this.parseOrders(d,r,t,i,s)}async createOrderWs(e,t,i,s,r,a={}){if(void 0===r)throw new n.BadRequest(this.id+" createOrderWs requires a price argument");await this.loadMarkets(),await this.authenticate();let o=this.market(e),h=this.urls.api.ws,d=this.requestId(),l=this.extend({pair:[o.baseId,o.quoteId],amount:s,price:r,type:i},a),c=await this.watch(h,d,{e:"place-order",oid:d,data:l},d);return this.parseOrder(c,o)}async editOrderWs(e,t,i,s,r,a,o={}){if(void 0===r)throw new n.ArgumentsRequired(this.id+" editOrder() requires a amount argument");if(void 0===a)throw new n.ArgumentsRequired(this.id+" editOrder() requires a price argument");await this.loadMarkets(),await this.authenticate();let h=this.market(t),d=this.extend({pair:[h.baseId,h.quoteId],type:s,amount:r,price:a,order_id:e},o),l=this.requestId(),c=this.urls.api.ws,u=await this.watch(c,l,{e:"cancel-replace-order",oid:l,data:d},l,l);return this.parseOrder(u,h)}async cancelOrderWs(e,t,i={}){let s;await this.loadMarkets(),await this.authenticate(),void 0!==t&&(s=this.market(t));let r=this.extend({order_id:e},i),a=this.requestId(),n=this.urls.api.ws,o=await this.watch(n,a,{e:"cancel-order",oid:a,data:r},a,a);return this.parseOrder(o,s)}async cancelOrdersWs(e,t,i={}){if(void 0!==t)throw new n.BadRequest(this.id+" cancelOrderWs does not allow filtering by symbol");await this.loadMarkets(),await this.authenticate();let s=this.requestId(),r=this.extend({"cancel-orders":e},i),a=this.urls.api.ws,o=await this.watch(a,s,{e:"mass-cancel-place-orders",oid:s,data:r},s,s),h=this.safeValue(o,"cancel-orders");return this.parseOrders(h,void 0,void 0,void 0,i)}resolveData(e,t){let i=this.safeValue(t,"data"),s=this.safeString(t,"oid");e.resolve(i,s)}handleConnected(e,t){return t}handleErrorMessage(e,t){try{let e=this.safeValue(t,"data",{}),i=this.safeString(e,"error"),s=this.safeString(t,"e",""),r=this.id+" "+s+" "+i;throw this.throwExactlyMatchedException(this.exceptions.exact,i,r),this.throwBroadlyMatchedException(this.exceptions.broad,i,r),new n.ExchangeError(r)}catch(s){let i=this.safeString(t,"oid");if(void 0!==this.safeValue(e.futures,i))e.reject(s,i);else throw s}}handleMessage(e,t){if("error"===this.safeString(t,"ok")){this.handleErrorMessage(e,t);return}let i=this.safeString(t,"e"),s={auth:this.handleAuthenticationMessage,connected:this.handleConnected,tick:this.handleTicker,ticker:this.handleTicker,"init-ohlcv-data":this.handleInitOHLCV,ohlcv24:this.handleOHLCV24,ohlcv1m:this.handleOHLCV1m,ohlcv:this.handleOHLCV,"get-balance":this.handleBalance,"order-book-subscribe":this.handleOrderBookSnapshot,md_update:this.handleOrderBookUpdate,"open-orders":this.resolveData,order:this.handleOrderUpdate,"history-update":this.handleTrade,history:this.handleTradesSnapshot,tx:this.handleTransaction,"place-order":this.resolveData,"cancel-replace-order":this.resolveData,"cancel-order":this.resolveData,"mass-cancel-place-orders":this.resolveData,"get-order":this.resolveData},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}handleAuthenticationMessage(e,t){let i=this.safeValue(e.futures,"authenticated");void 0!==i&&i.resolve(!0)}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=i.future("authenticated");if(void 0===this.safeValue(i.subscriptions,s)){this.checkRequiredCredentials();let i=this.seconds().toString(),r=i+this.apiKey,a=this.hmac(this.encode(r),this.encode(this.secret),l.s),n={e:"auth",auth:{key:this.apiKey,signature:a.toUpperCase(),timestamp:i}};await this.watch(t,s,this.extend(n,e),s)}return await r}}class ra extends eX.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,cancelAllOrdersWs:!1,cancelOrdersWs:!1,cancelOrderWs:!1,createOrderWs:!1,editOrderWs:!1,fetchBalanceWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,fetchTradesWs:!1,watchBalance:!1,watchMyTrades:!1,watchOHLCV:!1,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0},urls:{api:{ws:"wss://advanced-trade-ws.coinbase.com"}},options:{tradesLimit:1e3,ordersLimit:1e3,myTradesLimit:1e3,sides:{bid:"bids",offer:"asks"}}})}async subscribe(e,t,i,s={}){let r;await this.loadMarkets();let a=e,n=[];if(Array.isArray(i)){let e=this.marketSymbols(i);n=this.marketIds(e),a=a+"::"+i.join(",")}else void 0!==i&&(a=e+"::"+(r=this.market(i)).id,n=[r.id]);let o=this.urls.api.ws,h={type:"subscribe",product_ids:n,channel:e};return t&&(h=this.extend(h,this.createWSAuth(e,n))),await this.watch(o,a,h,a)}async subscribeMultiple(e,t,i,s={}){await this.loadMarkets();let r=[],a=[];i=this.marketSymbols(i,void 0,!1);for(let t=0;t<i.length;t++){let s=i[t],n=this.market(s).id;r.push(n),a.push(e+"::"+n)}let n=this.urls.api.ws,o={type:"subscribe",product_ids:r,channel:e};return t&&(o=this.extend(o,this.createWSAuth(e,r))),await this.watchMultiple(n,a,o,a)}createWSAuth(e,t){let i={},s=this.numberToString(this.seconds());this.checkRequiredCredentials();let r=this.apiKey.indexOf("organizations/")>=0||this.secret.startsWith("-----BEGIN"),a=s+e+t.join(",");if(r){if(this.apiKey.startsWith("-----BEGIN"))throw new n.ArgumentsRequired(this.id+" apiKey should contain the name (eg: organizations/3b910e93....) and not the public key");let e=this.safeString(this.options,"wsToken"),t=this.safeInteger(this.options,"wsTokenTimestamp",0),s=this.seconds();if(void 0===e||t+120<s){let e=this.createAuthToken(s);this.options.wsToken=e,this.options.wsTokenTimestamp=s}i.jwt=this.safeString(this.options,"wsToken")}else i.api_key=this.apiKey,i.timestamp=s,i.signature=this.hmac(this.encode(a),this.encode(this.secret),l.s);return i}async watchTicker(e,t={}){return await this.subscribe("ticker",!1,e,t)}async watchTickers(e,t={}){void 0===e&&(e=this.symbols);let i=await this.subscribe("ticker_batch",!1,e,t);return this.newUpdates?i:this.tickers}handleTickers(e,t){let i=this.safeString(t,"channel"),s=this.safeValue(t,"events",[]),r=this.safeString(t,"timestamp"),a=this.parse8601(r),n=[];for(let t=0;t<s.length;t++){let o=s[t],h=this.safeList(o,"tickers",[]);for(let t=0;t<h.length;t++){let s=h[t],o=this.parseWsTicker(s);o.timestamp=a,o.datetime=r;let d=o.symbol;this.tickers[d]=o;let l=this.safeString(s,"product_id");if(void 0===l)continue;let c=i+"::"+l;n.push(o),e.resolve(o,c),c.endsWith("USD")&&e.resolve(o,c+"C")}}let o=this.findMessageHashes(e,"ticker_batch::");for(let t=0;t<o.length;t++){let i=o[t],s=i.split("::")[1].split(","),r=this.filterByArray(n,"symbol",s);!this.isEmpty(r)&&(e.resolve(r,i),i.endsWith("USD")&&e.resolve(r,i+"C"))}return t}parseWsTicker(e,t){let i=this.safeString(e,"product_id"),s=void 0,r=this.safeNumber(e,"price");return this.safeTicker({info:e,symbol:this.safeSymbol(i,t,"-"),timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high_24_h"),low:this.safeString(e,"low_24_h"),bid:this.safeString(e,"best_bid"),bidVolume:this.safeString(e,"best_bid_quantity"),ask:this.safeString(e,"best_ask"),askVolume:this.safeString(e,"best_ask_quantity"),vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:this.safeString(e,"price_percent_chg_24_h"),average:void 0,baseVolume:this.safeString(e,"volume_24_h"),quoteVolume:void 0})}async watchTrades(e,t,i,s={}){await this.loadMarkets(),e=this.symbol(e);let r=await this.subscribe("market_trades",!1,e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets();let r=await this.subscribeMultiple("market_trades",!1,e,s);if(this.newUpdates){let e=this.safeDict(r,0),t=this.safeString(e,"symbol");i=r.getLimit(t,i)}return this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.subscribe("user",!0,e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){return await this.loadMarkets(),e=this.market(e).symbol,(await this.subscribe("level2",!1,e,i)).limit()}async watchOrderBookForSymbols(e,t,i={}){return await this.loadMarkets(),(await this.subscribeMultiple("level2",!1,e,i)).limit()}handleTrade(e,t){let i=this.safeValue(t,"events"),s=this.safeValue(i,0),r=this.safeValue(s,"trades"),a=this.safeValue(r,0),n=this.safeString(a,"product_id"),o="market_trades::"+n,h=this.safeSymbol(n),d=this.safeValue(this.trades,h);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.Pt(e),this.trades[h]=d}for(let e=0;e<i.length;e++){let t=i[e],s=this.safeValue(t,"trades");for(let t=0;t<s.length;t++){let t=s[e];d.append(this.parseTrade(t))}}return e.resolve(d,o),n.endsWith("USD")&&e.resolve(d,o+"C"),t}handleOrder(e,t){let i=this.safeValue(t,"events"),s=[];if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}for(let e=0;e<i.length;e++){let t=i[e],r=this.safeValue(t,"orders");for(let e=0;e<r.length;e++){let t=r[e],i=this.parseWsOrder(t),a=this.orders,n=this.safeString(t,"product_id");n in s||s.push(n),a.append(i)}}for(let t=0;t<s.length;t++){let i="user::"+s[t];e.resolve(this.orders,i),i.endsWith("USD")&&e.resolve(this.orders,i+"C")}return e.resolve(this.orders,"user"),t}parseWsOrder(e,t){let i=this.safeString(e,"order_id"),s=this.safeString(e,"client_order_id"),r=this.safeString(e,"product_id"),a=this.safeString(e,"time");return t=this.safeMarket(r,t),this.safeOrder({info:e,symbol:this.safeString(t,"symbol"),id:i,clientOrderId:s,timestamp:this.parse8601(a),datetime:a,lastTradeTimestamp:void 0,type:this.safeString(e,"order_type"),timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"side"),price:void 0,stopPrice:void 0,triggerPrice:void 0,amount:void 0,cost:void 0,average:this.safeString(e,"avg_price"),filled:this.safeString(e,"cumulative_quantity"),remaining:this.safeString(e,"leaves_quantity"),status:this.safeStringLower(e,"status"),fee:{amount:this.safeString(e,"total_fees"),currency:this.safeString(t,"quote")},trades:void 0})}handleOrderBookHelper(e,t){for(let i=0;i<t.length;i++){let s=t[i],r=this.safeString(s,"side"),a=this.safeString(this.options.sides,r),n=this.safeNumber(s,"price_level"),o=this.safeNumber(s,"new_quantity");e[a].store(n,o)}}handleOrderBook(e,t){let i=this.safeValue(t,"events"),s=this.safeString(t,"timestamp");for(let t=0;t<i.length;t++){let r=i[t],a=this.safeValue(r,"updates",[]),n=this.safeString(r,"product_id"),o="level2::"+n,h=this.safeValue(e.subscriptions,o,{}),d=this.safeInteger(h,"limit"),l=this.safeSymbol(n),c=this.safeString(r,"type");if("snapshot"===c){this.orderbooks[l]=this.orderBook({},d);let t=this.orderbooks[l];this.handleOrderBookHelper(t,a),t.timestamp=this.parse8601(s),t.datetime=s,t.symbol=l,e.resolve(t,o),o.endsWith("USD")&&e.resolve(t,o+"C")}else if("update"===c){let t=this.orderbooks[l];this.handleOrderBookHelper(t,a),t.datetime=s,t.timestamp=this.parse8601(s),t.symbol=l,e.resolve(t,o),o.endsWith("USD")&&e.resolve(t,o+"C")}}}handleSubscriptionStatus(e,t){return t}handleHeartbeats(e,t){return t}handleMessage(e,t){let i=this.safeString(t,"channel"),s={subscriptions:this.handleSubscriptionStatus,ticker:this.handleTickers,ticker_batch:this.handleTickers,market_trades:this.handleTrade,user:this.handleOrder,l2_data:this.handleOrderBook,heartbeats:this.handleHeartbeats};if("error"===this.safeString(t,"type")){let e=this.safeString(t,"message");throw new n.ExchangeError(e)}let r=this.safeValue(s,i);r&&r.call(this,e,t)}}class rn extends ra{describe(){return this.deepExtend(super.describe(),{id:"coinbaseadvanced",name:"Coinbase Advanced",alias:!0})}}class ro extends eJ{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOHLCV:!1,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0,watchMyTradesForSymbols:!0,watchBalance:!1,watchStatus:!1,watchOrders:!0,watchOrdersForSymbols:!0,watchMyTrades:!0},urls:{api:{ws:"wss://ws-feed.exchange.coinbase.com"},test:{ws:"wss://ws-feed-public.sandbox.exchange.coinbase.com"}},options:{tradesLimit:1e3,ordersLimit:1e3,myTradesLimit:1e3}})}authenticate(){this.checkRequiredCredentials();let e=this.nonce(),t=e.toString()+"GET/users/self/verify",i=this.hmac(this.encode(t),this.base64ToBinary(this.secret),l.s,"base64");return{timestamp:e,key:this.apiKey,signature:i,passphrase:this.password}}async subscribe(e,t,i,s={}){let r;await this.loadMarkets();let a=i,n=[];void 0!==t&&(a+=":"+(r=this.market(t)).id,n.push(r.id));let o=this.urls.api.ws;"signature"in s&&(o+="?");let h=this.extend({type:"subscribe",product_ids:n,channels:[e]},s);return await this.watch(o,a,h,a)}async subscribeMultiple(e,t=[],i,s={}){let r;await this.loadMarkets(),t=this.marketSymbols(t);let a=[],n=[];for(let e=0;e<t.length;e++){let s=t[e];r=this.market(s),n.push(r.id),a.push(i+":"+r.symbol)}let o=this.urls.api.ws;"signature"in s&&(o+="?");let h=this.extend({type:"subscribe",product_ids:n,channels:[e]},s);return await this.watchMultiple(o,a,h,a)}async watchTicker(e,t={}){let i="ticker";return await this.subscribe(i,e,i,t)}async watchTickers(e,t={}){if(await this.loadMarkets(),0===e.length)throw new n.BadSymbol(this.id+" watchTickers requires a non-empty symbols array");let i=await this.subscribeMultiple("ticker",e,"ticker",t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.tickers,"symbol",e)}async watchTrades(e,t,i,s={}){await this.loadMarkets(),e=this.symbol(e);let r="matches",a=await this.subscribe(r,e,r,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchTradesForSymbols(e,t,i,s={}){if(0===e.length)throw new n.BadRequest(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");await this.loadMarkets(),e=this.marketSymbols(e);let r="matches",a=await this.subscribeMultiple(r,e,r,s);if(this.newUpdates){let e=this.safeValue(a,0),t=this.safeString(e,"symbol");i=a.getLimit(t,i)}return this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchMyTrades() requires a symbol argument");await this.loadMarkets(),e=this.symbol(e);let r=this.authenticate(),a=await this.subscribe("user",e,"myTrades",this.extend(s,r));return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchMyTradesForSymbols(e,t,i,s={}){e=this.marketSymbols(e,void 0,!1),await this.loadMarkets();let r=this.authenticate(),a=await this.subscribeMultiple("user",e,"myTrades",this.extend(s,r));if(this.newUpdates){let e=this.safeValue(a,0),t=this.safeString(e,"symbol");i=a.getLimit(t,i)}return this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchOrdersForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let r=this.authenticate(),a=await this.subscribeMultiple("user",e,"orders",this.extend(s,r));if(this.newUpdates){let e=this.safeValue(a,0),t=this.safeString(e,"symbol");i=a.getLimit(t,i)}return this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchOrders(e,t,i,s={}){if(void 0===e)throw new n.BadSymbol(this.id+" watchMyTrades requires a symbol");await this.loadMarkets(),e=this.symbol(e);let r=this.authenticate(),a=await this.subscribe("user",e,"orders",this.extend(s,r));return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchOrderBookForSymbols(e,t,i={}){let s=e.length;if(0===s)throw new n.BadRequest(this.id+" watchOrderBookForSymbols() requires a non-empty array of symbols");let r="level2";await this.loadMarkets(),e=this.marketSymbols(e);let a=this.marketIds(e),o=[];for(let e=0;e<s;e++){let t=a[e];o.push(r+":"+t)}let h=this.urls.api.ws,d=this.extend({type:"subscribe",product_ids:a,channels:[r]},i),l={messageHash:r,symbols:e,marketIds:a,limit:t},c=this.authenticate();return(await this.watchMultiple(h,o,this.extend(d,c),o,l)).limit()}async watchOrderBook(e,t,i={}){let s="level2";await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=s+":"+r.id,n=this.urls.api.ws,o={type:"subscribe",product_ids:[r.id],channels:[s]},h=this.extend(o,i),d={messageHash:a,symbol:e,marketId:r.id,limit:t},l=this.authenticate();return(await this.watch(n,a,this.extend(h,l),a,d)).limit()}handleTrade(e,t){let i=this.safeString(t,"product_id");if(void 0!==i){let s=this.parseWsTrade(t),r=s.symbol,a=this.safeValue(this.trades,r);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[r]=a}a.append(s),e.resolve(a,"matches:"+i)}return t}handleMyTrade(e,t){let i=this.safeString(t,"product_id");if(void 0!==i){let s=this.parseWsTrade(t),r=this.myTrades;if(void 0===r){let e=this.safeInteger(this.options,"myTradesLimit",1e3);r=new sH.Pt(e),this.myTrades=r}r.append(s),e.resolve(r,"myTrades:"+i)}return t}parseWsTrade(e,t){let i,s;let r=super.parseTrade(e),a=!1;if("maker_fee_rate"in e)a=!0,r.takerOrMaker="maker",i=this.safeNumber(e,"maker_fee_rate");else{r.takerOrMaker="taker",i=this.safeNumber(e,"taker_fee_rate");let t=r.side;r.side=this.safeString({buy:"sell",sell:"buy"},t,t)}let n=a?"maker_order_id":"taker_order_id";r.order=this.safeString(e,n);let o=this.market(r.symbol).quote;return void 0!==r.cost&&void 0!==i&&(s=this.safeNumber(r,"cost")*i),r.fee={rate:i,cost:s,currency:o},r}parseWsOrderStatus(e){return this.safeString({filled:"closed",canceled:"canceled"},e,"open")}handleOrder(e,t){let i=this.orders;if(void 0===i){let e=this.safeInteger(this.options,"ordersLimit",1e3);i=new sH.Pt(e),this.orders=i}let s=this.safeString(t,"type"),r=this.safeString(t,"product_id");if(void 0!==r){let i="orders:"+r,a=this.safeSymbol(r),n=this.safeString(t,"order_id"),o=this.safeString(t,"maker_order_id"),h=this.safeString(t,"taker_order_id"),d=this.orders,l=this.safeValue(d.hashmap,a,{}),c=this.safeValue(l,n);if(void 0===c&&(c=this.safeValue2(l,o,h)),void 0===c){let s=this.parseWsOrder(t);d.append(s),e.resolve(d,i)}else{let r=this.safeInteger(t,"sequence"),a=this.safeValue(c,"info",{}),n=this.safeInteger(a,"sequence");if(void 0===n||r>n){if("match"===s){let s=this.parseWsTrade(t);void 0===c.trades&&(c.trades=[]),c.trades.push(s),c.lastTradeTimestamp=s.timestamp;let r=0,a=0,n=c.trades;for(let e=0;e<n.length;e++){let t=n[e];r=this.sum(r,t.cost),a=this.sum(a,t.amount)}a>0&&(c.average=r/a),c.cost=r,void 0!==c.filled&&(c.filled+=s.amount,void 0!==c.amount&&(c.remaining=c.amount-c.filled)),void 0===c.fee&&(c.fee={cost:0,currency:s.fee.currency}),void 0!==c.fee.cost&&void 0!==s.fee.cost&&(c.fee.cost=this.sum(c.fee.cost,s.fee.cost)),d.append(c),e.resolve(d,i)}else if("received"===s||"done"===s){let s=this.extend(c.info,t),r=this.parseWsOrder(s),a=Object.keys(r);for(let e=0;e<a.length;e++){let t=a[e];void 0!==r[t]&&(c[t]=r[t])}d.append(c),e.resolve(d,i)}}}}}parseWsOrder(e,t){let i;let s=this.safeString(e,"order_id"),r=this.safeString(e,"client_oid"),a=this.safeString(e,"product_id"),n=this.safeSymbol(a),o=this.safeString(e,"side"),h=this.safeNumber(e,"price"),d=this.safeNumber2(e,"size","funds"),l=this.safeString(e,"time"),c=this.parse8601(l),u=this.safeString(e,"reason"),f=this.parseWsOrderStatus(u),p=this.safeString(e,"order_type"),m=this.safeNumber(e,"remaining_size"),g=this.safeString(e,"type");return void 0!==d&&void 0!==m?i=d-m:"received"===g&&(i=0,void 0!==d&&(m=d-i)),this.safeOrder({info:e,symbol:n,id:s,clientOrderId:r,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,type:p,timeInForce:void 0,postOnly:void 0,side:o,price:h,stopPrice:void 0,triggerPrice:void 0,amount:d,cost:void 0,average:void 0,filled:i,remaining:m,status:f,fee:void 0,trades:void 0})}handleTicker(e,t){let i=this.safeString(t,"product_id");if(void 0!==i){let s=this.parseTicker(t),r=s.symbol;this.tickers[r]=s,e.resolve(s,"ticker:"+r),e.resolve(s,"ticker:"+i)}return t}parseTicker(e,t){if(void 0===this.safeString(e,"type"))return super.parseTicker(e,t);let i=this.safeString(e,"product_id"),s=this.safeSymbol(i,t,"-"),r=this.parse8601(this.safeString(e,"time")),a=this.safeString(e,"price");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high_24h"),low:this.safeString(e,"low_24h"),bid:this.safeString(e,"best_bid"),bidVolume:this.safeString(e,"best_bid_size"),ask:this.safeString(e,"best_ask"),askVolume:this.safeString(e,"best_ask_size"),vwap:void 0,open:this.safeString(e,"open_24h"),close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume_24h"),quoteVolume:void 0,info:e})}handleDelta(e,t){let i=this.safeNumber(t,0),s=this.safeNumber(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){let i=this.safeString(t,"type"),s=this.safeString(t,"product_id"),r=this.safeMarket(s,void 0,"-").symbol,a="level2:"+s,n=this.safeValue(e.subscriptions,a,{}),o=this.safeInteger(n,"limit");if("snapshot"===i){this.orderbooks[r]=this.orderBook({},o);let i=this.orderbooks[r];this.handleDeltas(i.asks,this.safeValue(t,"asks",[])),this.handleDeltas(i.bids,this.safeValue(t,"bids",[])),i.timestamp=void 0,i.datetime=void 0,i.symbol=r,e.resolve(i,a)}else if("l2update"===i){let i=this.orderbooks[r],s=this.parse8601(this.safeString(t,"time")),n=this.safeValue(t,"changes",[]),o={sell:"asks",buy:"bids"};for(let e=0;e<n.length;e++){let t=n[e],s=this.safeString(t,0),r=this.safeString(o,s),a=this.safeNumber(t,1),h=this.safeNumber(t,2);i[r].store(a,h)}i.timestamp=s,i.datetime=this.iso8601(s),e.resolve(i,a)}}handleSubscriptionStatus(e,t){return t}handleErrorMessage(e,t){let i=this.safeString(t,"message"),s=this.safeString(t,"reason");try{if("Authentication Failed"===i)throw new n.AuthenticationError("Authentication failed: "+s);throw new n.ExchangeError(this.id+" "+s)}catch(t){return e.reject(t),!0}}handleMessage(e,t){let i=this.safeString(t,"type"),s={snapshot:this.handleOrderBook,l2update:this.handleOrderBook,subscribe:this.handleSubscriptionStatus,ticker:this.handleTicker,received:this.handleOrder,open:this.handleOrder,change:this.handleOrder,done:this.handleOrder,error:this.handleErrorMessage},r=e.url.length-0,a="?"===e.url[r-1],n=this.safeValue(s,i);void 0===n?"match"===i&&(a?(this.handleMyTrade(e,t),this.handleOrder(e,t)):this.handleTrade(e,t)):n.call(this,e,t)}}class rh extends e2{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchTicker:!0,watchBalance:!1,watchMyTrades:!1,watchOHLCV:!0,watchOHLCVForSymbols:!1,watchOrders:!1,watchOrdersForSymbols:!1,watchPositions:!1,watchTickers:!0,createOrderWs:!1,editOrderWs:!1,cancelOrderWs:!1,cancelOrdersWs:!1,cancelAllOrdersWs:!1,fetchOrderWs:!1,fetchOrdersWs:!1,fetchBalanceWs:!1,fetchMyTradesWs:!1},urls:{api:{ws:"wss://ws-md.international.coinbase.com"},test:{ws:"wss://ws-md.n5e2.coinbase.com"}},options:{watchTicker:{channel:"LEVEL1"},tradesLimit:1e3,ordersLimit:1e3,myTradesLimit:1e3,timeframes:{"1m":"CANDLES_ONE_MINUTE","5m":"CANDLES_FIVE_MINUTES","30m":"CANDLES_THIRTY_MINUTES","1h":"CANDLES_ONE_HOUR","2h":"CANDLES_TWO_HOURS","1d":"CANDLES_ONE_DAY"}},exceptions:{exact:{"Unable to authenticate":n.AuthenticationError}}})}async subscribe(e,t,i={}){let s,r;await this.loadMarkets(),this.checkRequiredCredentials();let a=e;void 0===t&&(t=this.getActiveSymbols());let o=t.length,h=[];if(o>1){let i=this.marketSymbols(t);r=this.marketIds(i);for(let t=0;t<i.length;t++)h.push(e+"::"+i[t])}else 1===o&&(a=e+"::"+(s=this.market(t[0])).symbol,r=[s.id]);let d=this.urls.api.ws;if(void 0===d)throw new n.NotSupported(this.id+" is not supported in sandbox environment");let c=this.nonce().toString(),u=c+this.apiKey+"CBINTLMD"+this.password,f=this.hmac(this.encode(u),this.base64ToBinary(this.secret),l.s,"base64"),p={type:"SUBSCRIBE",channels:[e],time:c,key:this.apiKey,passphrase:this.password,signature:f};return(void 0!==r&&(p.product_ids=r),o>1)?await this.watchMultiple(d,h,this.extend(p,i),h):await this.watch(d,a,this.extend(p,i),a)}async subscribeMultiple(e,t,i={}){await this.loadMarkets(),this.checkRequiredCredentials(),t=this.isEmpty(t)?this.symbols:this.marketSymbols(t);let s=[],r=[];for(let i=0;i<t.length;i++){let a=this.marketId(t[i]),n=this.symbol(a);r.push(a),s.push(e+"::"+n)}let a=this.urls.api.ws;if(void 0===a)throw new n.NotSupported(this.id+" is not supported in sandbox environment");let o=this.numberToString(this.seconds()),h=o+this.apiKey+"CBINTLMD"+this.password,d=this.hmac(this.encode(h),this.base64ToBinary(this.secret),l.s,"base64"),c={type:"SUBSCRIBE",time:o,product_ids:r,channels:[e],key:this.apiKey,passphrase:this.password,signature:d};return await this.watchMultiple(a,s,this.extend(c,i),s)}async watchFundingRate(e,t={}){return await this.loadMarkets(),await this.subscribe("RISK",[e],t)}async watchFundingRates(e,t={}){await this.loadMarkets();let i=await this.subscribeMultiple("RISK",e,t),s=this.safeString(i,"symbol");if(this.newUpdates){let e={};return e[s]=i,e}return this.filterByArray(this.fundingRates,"symbol",e)}async watchTicker(e,t={}){let i;return await this.loadMarkets(),[i,t]=this.handleOptionAndParams(t,"watchTicker","channel","LEVEL1"),await this.subscribe(i,[e],t)}getActiveSymbols(){let e=this.symbols,t=[];for(let i=0;i<e.length;i++){let s=e[i];this.markets[s].active&&t.push(s)}return t}async watchTickers(e,t={}){let i;await this.loadMarkets(),[i,t]=this.handleOptionAndParams(t,"watchTickers","channel","LEVEL1");let s=await this.subscribe(i,e,t);if(this.newUpdates){let e={};return e[s.symbol]=s,e}return this.filterByArray(this.tickers,"symbol",e)}handleInstrument(e,t){let i=this.parseWsInstrument(t),s=this.safeString(t,"channel");e.resolve(i,s),e.resolve(i,s+"::"+i.symbol)}parseWsInstrument(e,t){let i=this.safeString(e,"product_id"),s=this.safeString(e,"time");return this.safeTicker({info:e,symbol:this.safeSymbol(i,t,"-"),timestamp:this.parse8601(s),datetime:s,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString2(e,"total_24_hour_quantity","total24_hour_quantity"),quoteVolume:this.safeString2(e,"total_24_hour_volume","total24_hour_volume")})}handleTicker(e,t){let i=this.parseWsTicker(t),s=this.safeString(t,"channel");e.resolve(i,s),e.resolve(i,s+"::"+i.symbol)}parseWsTicker(e,t){let i=this.safeString(e,"time"),s=this.safeString(e,"product_id");return this.safeTicker({info:e,symbol:this.safeSymbol(s,t),timestamp:this.parse8601(i),datetime:i,bid:this.safeNumber(e,"bid_price"),bidVolume:this.safeNumber(e,"bid_qty"),ask:this.safeNumber(e,"ask_price"),askVolume:this.safeNumber(e,"ask_qty"),high:void 0,low:void 0,open:void 0,close:void 0,last:void 0,change:void 0,percentage:void 0,average:void 0,vwap:void 0,baseVolume:void 0,quoteVolume:void 0,previousClose:void 0})}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets(),e=this.market(e).symbol;let a=this.safeDict(this.options,"timeframes",{}),n=this.safeString(a,t,t),o=await this.subscribe(n,[e],r);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"channel"),s=this.safeString(t,"product_id"),r=this.safeMarket(s),a=r.symbol,n=this.findTimeframe(i);if(this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{}),void 0===this.safeValue(this.ohlcvs[a],n)){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs[a][n]=new sH.TG(e)}let o=this.ohlcvs[a][n],h=this.safeList(t,"candles",[]);for(let e=0;e<h.length;e++){let t=h[e],i=this.parseOHLCV(t,r);o.append(i)}e.resolve(o,i+"::"+a)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1,!0,!0);let r=await this.subscribeMultiple("MATCH",e,s);if(this.newUpdates){let e=this.safeDict(r,0),t=this.safeString(e,"symbol");i=r.getLimit(t,i)}return this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleTrade(e,t){let i=this.parseWsTrade(t),s=i.symbol,r=this.safeString(t,"channel");if(!(s in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3),t=new sH.I3(e);this.trades[s]=t}let a=this.trades[s];return a.append(i),this.trades[s]=a,e.resolve(a,r),e.resolve(a,r+"::"+i.symbol),t}parseWsTrade(e,t){let i=this.safeString2(e,"symbol","product_id"),s=this.safeString(e,"time");return this.safeTrade({info:e,id:this.safeString(e,"match_id"),order:void 0,timestamp:this.parse8601(s),datetime:s,symbol:this.safeSymbol(i,t),type:void 0,side:this.safeStringLower(e,"agressor_side"),takerOrMaker:void 0,price:this.safeString(e,"trade_price"),amount:this.safeString(e,"trade_qty"),cost:void 0,fee:void 0})}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){return await this.loadMarkets(),await this.subscribeMultiple("LEVEL2",e,i)}handleOrderBook(e,t){let i=this.safeString(t,"type"),s=this.safeString(t,"product_id"),r=this.safeSymbol(s),a=this.safeString(t,"time"),n=this.safeString(t,"channel");if(!(r in this.orderbooks)){let e=this.safeInteger(this.options,"watchOrderBookLimit",1e3);this.orderbooks[r]=this.orderBook({},e)}let o=this.orderbooks[r];if("SNAPSHOT"===i){let e=this.parseOrderBook(t,r,void 0,"bids","asks");o.reset(e),o.symbol=r}else{let e=this.safeList(t,"changes",[]);this.handleDeltas(o,e)}o.nonce=this.safeInteger(t,"sequence"),o.datetime=a,o.timestamp=this.parse8601(a),this.orderbooks[r]=o,e.resolve(o,n+"::"+r)}handleDelta(e,t){let i=this.safeStringLower(t,0),s=this.safeFloat(t,1),r=this.safeFloat(t,2);e["buy"===i?"bids":"asks"].store(s,r)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleSubscriptionStatus(e,t){return t}handleFundingRate(e,t){let i=this.safeString(t,"channel"),s=this.parseFundingRate(t);this.fundingRates[s.symbol]=s,e.resolve(s,i+"::"+s.symbol)}handleErrorMessage(e,t){if("REJECT"!==this.safeString(t,"type"))return!1;let i=this.safeString(t,"reason"),s=this.safeString(t,"message");try{let e=this.id+" "+s+i;throw this.throwExactlyMatchedException(this.exceptions.exact,i,e),this.throwBroadlyMatchedException(this.exceptions.broad,i,e),new n.ExchangeError(e)}catch(t){e.reject(t)}return!0}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i=this.safeString(t,"channel",""),s={SUBSCRIPTIONS:this.handleSubscriptionStatus,INSTRUMENTS:this.handleInstrument,LEVEL1:this.handleTicker,MATCH:this.handleTrade,LEVEL2:this.handleOrderBook,FUNDING:this.handleFundingRate,RISK:this.handleTicker};if("error"===this.safeString(t,"type")){let e=this.safeString(t,"message");throw new n.ExchangeError(e)}i.indexOf("CANDLES")>-1&&this.handleOHLCV(e,t);let r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}class rd extends e3.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOHLCV:!0,watchOHLCVForSymbols:!1,watchOrders:!0,watchMyTrades:!1,watchTicker:!0,watchTickers:!0,watchBalance:!0,watchPositions:!0},urls:{api:{ws:{public:"wss://ws.coincatch.com/public/v1/stream",private:"wss://ws.coincatch.com/private/v1/stream"}}},options:{tradesLimit:1e3,OHLCVLimit:200,timeframesForWs:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","4h":"4H","12h":"12H","1d":"1D","1w":"1W"},watchOrderBook:{checksum:!0}},streaming:{ping:this.ping},exceptions:{ws:{exact:{30001:n.BadRequest,30002:n.AuthenticationError,30003:n.BadRequest,30004:n.AuthenticationError,30005:n.AuthenticationError,30006:n.RateLimitExceeded,30007:n.RateLimitExceeded,30011:n.AuthenticationError,30012:n.AuthenticationError,30013:n.AuthenticationError,30014:n.BadRequest,30015:n.AuthenticationError},broad:{}}}})}getMarketFromArg(e){let t=this.safeString(e,"instId"),i=this.safeString(e,"instType"),s=this.parseSpotMarketId(t),r=s.baseId,a=s.quoteId,n="_SPBL";"mc"===i&&(n="USD"===a?"_DMCBL":"_UMCBL");let o=this.safeCurrencyCode(r)+this.safeCurrencyCode(a)+n;return this.safeMarketCustom(o)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws.private,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){let i=this.seconds().toString(),r=this.hmac(this.encode(i+"GET/user/verify"),this.encode(this.secret),l.s,"base64"),a={op:"login",args:[{apiKey:this.apiKey,passphrase:this.password,timestamp:i,sign:r}]},n=this.extend(a,e);this.watch(t,s,n,s)}return await r}async watchPublic(e,t,i,s={}){let r=this.urls.api.ws.public,a=this.extend({op:"subscribe",args:[i]},s);return await this.watch(r,e,a,t)}async unWatchPublic(e,t,i={}){let s=this.urls.api.ws.public,r=this.extend({op:"unsubscribe",args:[t]},i);return await this.watch(s,e,r,e)}async watchPrivate(e,t,i,s={}){await this.authenticate();let r=this.urls.api.ws.private,a=this.extend({op:"subscribe",args:[i]},s);return await this.watch(r,e,a,t)}async watchPrivateMultiple(e,t,i,s={}){await this.authenticate();let r=this.urls.api.ws.private,a=this.extend({op:"subscribe",args:i},s);return await this.watchMultiple(r,e,a,t)}handleAuthenticate(e,t){this.safeValue(e.futures,"authenticated").resolve(!0)}async watchPublicMultiple(e,t,i,s={}){let r=this.urls.api.ws.public,a=this.extend({op:"subscribe",args:i},s);return await this.watchMultiple(r,e,a,t)}async unWatchChannel(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),[a,n]=this.getPublicInstTypeAndId(r);return await this.unWatchPublic("unsubscribe:"+i+":"+e,{instType:a,channel:t,instId:n},s)}getPublicInstTypeAndId(e){let t;let i=e.baseId+e.quoteId;if(e.spot)t="SP";else if(e.swap)t="MC";else throw new n.NotSupported(this.id+" supports only spot and swap markets");return[t,i]}handleDMCBLMarketByMessageHashes(e,t,i,s){let r=e.id,a=this.findMessageHashes(i,t),n=this.safeList(this.markets_by_id,r,[]),o="";void 0!==s&&(o=":"+s);for(let i=0;i<n.length;i++){let s=t+(e=n[i]).symbol+o;if(this.inArray(s,a))break}return e}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),[s,r]=this.getPublicInstTypeAndId(i),a="ticker",n=a+":"+e;return await this.watchPublic(n,n,{instType:s,channel:a,instId:r},t)}async unWatchTicker(e,t={}){return await this.loadMarkets(),await this.unWatchChannel(e,"ticker","ticker",t)}async watchTickers(e,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.market(r),[n,o]=this.getPublicInstTypeAndId(a),h={instType:n,channel:"ticker",instId:o};i.push(h),s.push("ticker:"+r)}let r=await this.watchPublicMultiple(s,s,i,t);if(this.newUpdates){let e={};return e[r.symbol]=r,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeDict(t,"arg",{}),s=this.getMarketFromArg(i),r=s.id,a="ticker:";r.indexOf("_DMCBL")>=0&&(s=this.handleDMCBLMarketByMessageHashes(s,a,e));let n=this.safeList(t,"data",[]),o=this.parseWsTicker(this.safeDict(n,0,{}),s),h=s.symbol;this.tickers[h]=o;let d=a+h;e.resolve(this.tickers[h],d)}parseWsTicker(e,t){let i=this.safeString(e,"last"),s=this.safeInteger2(e,"ts","systemTime");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:this.safeString(e,"bestBid"),bidVolume:this.safeString(e,"bidSz"),ask:this.safeString(e,"bestAsk"),askVolume:this.safeString(e,"askSz"),vwap:void 0,open:this.safeString2(e,"open24h","openUtc"),close:i,last:i,previousClose:void 0,change:void 0,percentage:r.Y.stringMul(this.safeString(e,"chgUTC"),"100"),average:void 0,baseVolume:this.safeNumber(e,"baseVolume"),quoteVolume:this.safeNumber(e,"quoteVolume"),indexPrice:this.safeString(e,"indexPrice"),markPrice:this.safeString(e,"markPrice"),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.options.timeframesForWs,o="candle"+this.safeString(n,t),[h,d]=this.getPublicInstTypeAndId(a),l="ohlcv:"+e+":"+t,c=await this.watchPublic(l,l,{instType:h,channel:o,instId:d},r);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}async unWatchOHLCV(e,t="1m",i={}){await this.loadMarkets();let s=this.options.timeframesForWs,r=this.safeString(s,t);return await this.unWatchChannel(e,"candle"+r,"ohlcv:"+r,i)}handleOHLCV(e,t){let i=this.safeDict(t,"arg",{}),s=this.getMarketFromArg(i),r=s.id,a="ohlcv:",n=this.safeList(t,"data",[]),o=this.safeString(i,"channel").slice(6),h=this.findTimeframe(o);r.indexOf("_DMCBL")>=0&&(s=this.handleDMCBLMarketByMessageHashes(s,a,e,h));let d=s.symbol;if(d in this.ohlcvs||(this.ohlcvs[d]={}),!(h in this.ohlcvs[d])){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs[d][h]=new sH.TG(e)}let l=this.ohlcvs[d][h];for(let e=0;e<n.length;e++){let t=this.safeList(n,e,[]),i=this.parseWsOHLCV(t,s);l.append(i)}e.resolve(l,a+d+":"+h)}parseWsOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async unWatchOrderBook(e,t={}){await this.loadMarkets();let i="books",s=this.safeInteger(t,"limit");return(5===s||15===s)&&(t=this.omit(t,"limit"),i+=s.toString()),await this.unWatchChannel(e,i,i,t)}async watchOrderBookForSymbols(e,t,i={}){await this.loadMarkets(),e=this.marketSymbols(e);let s="books",r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],n=this.market(i),[o,h]=this.getPublicInstTypeAndId(n),d={instType:o,channel:s,instId:h};r.push(d),a.push(s+":"+i)}return(await this.watchPublicMultiple(a,a,r,i)).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"arg",{}),s=this.getMarketFromArg(i),r=s.id,a="books:";r.indexOf("_DMCBL")>=0&&(s=this.handleDMCBLMarketByMessageHashes(s,a,e));let n=s.symbol,o=this.safeString(i,"channel"),h=a+n,d=this.safeList(t,"data",[]),l=this.safeDict(d,0),c=this.safeInteger(l,"ts");if(o){if(!(n in this.orderbooks)){let e=this.countedOrderBook({});e.symbol=n,this.orderbooks[n]=e}let i=this.orderbooks[n],s=this.safeList(l,"asks",[]),r=this.safeList(l,"bids",[]);this.handleDeltas(i.asks,s),this.handleDeltas(i.bids,r),i.timestamp=c,i.datetime=this.iso8601(c);let a=this.safeBool(this.options,"checksum",!0);if("snapshot"!==this.safeString(t,"action")&&a){let t=i.asks,s=i.bids,r=t.length,a=s.length,o=[];for(let e=0;e<25;e++)e<a&&(o.push(s[e][2][0]),o.push(s[e][2][1])),e<r&&(o.push(t[e][2][0]),o.push(t[e][2][1]));let d=o.join(":");if(this.crc32(d,!0)!==this.safeInteger(l,"checksum")){this.spawn(this.handleCheckSumError,e,n,h);return}}}else{let e=this.orderBook({}),t=this.parseOrderBook(l,n,c);e.reset(t),this.orderbooks[n]=e}e.resolve(this.orderbooks[n],h)}async handleCheckSumError(e,t,i){await this.unWatchOrderBook(t);let s=new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(t));e.reject(s,i)}handleDelta(e,t){let i=this.parseBidAsk(t,0,1);i.push(t),e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){if(0===e.length)throw new n.ArgumentsRequired(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");await this.loadMarkets(),e=this.marketSymbols(e);let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],s=this.market(i),[n,o]=this.getPublicInstTypeAndId(s),h={instType:n,channel:"trade",instId:o};r.push(h),a.push("trade:"+i)}let o=await this.watchPublicMultiple(a,a,r,s);if(this.newUpdates){let e=this.safeDict(o,0),t=this.safeString(e,"symbol");i=o.getLimit(t,i)}return this.filterBySinceLimit(o,t,i,"timestamp",!0)}async unWatchTrades(e,t={}){return await this.loadMarkets(),await this.unWatchChannel(e,"trade","trade",t)}handleTrades(e,t){let i=this.safeDict(t,"arg",{}),s=this.getMarketFromArg(i),r=s.id,a="trade:";r.indexOf("_DMCBL")>=0&&(s=this.handleDMCBLMarketByMessageHashes(s,a,e));let n=s.symbol;if(!(n in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.trades[n]=new sH.I3(e)}let o=this.trades[n],h=this.safeList(t,"data",[]);if(void 0!==h){h=this.sortBy(h,0);for(let e=0;e<h.length;e++){let t=this.safeList(h,e),i=this.parseWsTrade(t,s);o.append(i)}}e.resolve(o,a+n)}parseWsTrade(e,t){let i=this.safeInteger(e,0);return this.safeTrade({id:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,side:this.safeStringLower(e,3),price:this.safeString(e,1),amount:this.safeString(e,2),cost:void 0,takerOrMaker:void 0,type:void 0,order:void 0,fee:void 0,info:e},t)}async watchBalance(e={}){let t;[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let i="spbl";"swap"===t&&(i="umcbl"),[i,e]=this.handleOptionAndParams(e,"watchBalance","instType",i);let s={instType:i,channel:"account",instId:"default"},r="balance:"+i.toLowerCase();return await this.watchPrivate(r,r,s,e)}handleBalance(e,t){let i=this.safeList(t,"data",[]);for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString2(t,"coinName","marginCoin"),r=this.safeCurrencyCode(s),a=r in this.balance?this.balance[r]:this.account(),n="maxTransferOut"in t?"maxTransferOut":"available";a.free=this.safeString(t,n),a.total=this.safeString(t,"equity"),a.used=this.safeString(t,"frozen"),this.balance[r]=a}this.balance=this.safeBalance(this.balance);let s=this.safeDict(t,"arg"),r=this.safeStringLower(s,"instType");e.resolve(this.balance,"balance:"+r)}async watchOrders(e,t,i,s={}){let r,a,o;let h="watchOrders";await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol,a=r.id),[o,s]=this.handleMarketTypeAndParams(h,r,s);let d="spbl",l=a;if("spot"===o){if(void 0===e)throw new n.ArgumentsRequired(this.id+" "+h+"() requires a symbol argument for "+o+" markets.")}else l="default",d="umcbl",void 0===e?[d,s]=this.handleOptionAndParams(s,h,"instType",d):a.indexOf("_DMCBL")>=0&&(d="dmcbl");let c="orders";this.safeBool(s,"trigger")&&(c="ordersAlgo",s=this.omit(s,"trigger"));let u={instType:d,channel:c,instId:l},f="orders";void 0!==e&&(f+=":"+e);let p=await this.watchPrivate(f,f,u,s);return this.newUpdates&&(i=p.getLimit(e,i)),this.filterBySymbolSinceLimit(p,e,t,i,!0)}handleOrder(e,t){let i;let s=this.safeDict(t,"arg",{}),r=this.safeString(s,"instType"),a=this.safeString(s,"instId");i="spbl"===r?"spot":"swap";let n=this.safeList(t,"data",[]);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let o=this.orders;for(let t=0;t<n.length;t++){let s=n[t],r=this.safeString(s,"instId",a),h=this.safeMarket(r,void 0,void 0,i),d=this.parseWsOrder(s,h);o.append(d);let l="orders:"+d.symbol;e.resolve(o,l)}e.resolve(o,"orders")}parseWsOrder(e,t){let i=this.safeString(e,"instId"),s=this.safeString(e,"tgtCcy");t=this.safeMarketCustom(i,t,s);let a=this.safeInteger(e,"cTime"),n=t.symbol,o=this.safeString(e,"status"),h=this.safeList(e,"orderFee",[]),d=this.safeDict(h,0),l=r.Y.stringMul(this.safeString(d,"fee"),"-1"),c=this.safeString(d,"feeCcy"),u=this.omitZero(this.safeString(e,"px")),f=this.omitZero(this.safeString(e,"avgPx"));void 0===u&&(u=f);let p=this.safeStringLower(e,"ordType");return this.safeOrder({id:this.safeString(e,"ordId"),clientOrderId:this.safeString(e,"clOrdId"),timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,lastUpdateTimestamp:this.safeInteger(e,"uTime"),status:this.parseOrderStatus(o),symbol:n,type:p,timeInForce:this.parseOrderTimeInForce(this.safeStringLower(e,"force")),side:this.safeStringLower(e,"side"),price:u,average:this.safeString(e,"avgPx"),amount:this.safeString(e,"sz"),filled:this.safeString(e,"accFillSz"),remaining:void 0,triggerPrice:void 0,takeProfitPrice:void 0,stopLossPrice:void 0,cost:this.safeString(e,"notional"),trades:void 0,fee:{currency:c,cost:l},reduceOnly:this.safeBool(e,"low"),postOnly:void 0,info:e},t)}async watchPositions(e,t,i,s={}){await this.loadMarkets();let r=[],a="positions",n=[];if(void 0!==(e=this.marketSymbols(e,"swap")))for(let t=0;t<e.length;t++){let i=e[t],s=this.market(i),o=this.getPrivateInstType(s);this.inArray(o,n)||n.push(o),r.push(a+"::"+i)}else n=["umcbl","dmcbl"],r.push(a);let o=[],h=[];for(let e=0;e<n.length;e++){let t=n[e],i={instType:t,channel:a,instId:"default"};h.push(a+"::"+t),o.push(i)}let d=await this.watchPrivateMultiple(r,h,o,s);return this.newUpdates?d:this.filterBySymbolsSinceLimit(d,e,t,i,!0)}getPrivateInstType(e){return e.id.indexOf("_DMCBL")>=0?"dmcbl":"umcbl"}handlePositions(e,t){void 0===this.positions&&(this.positions=new sH.Hk);let i=this.positions,s=this.safeValue(t,"data",[]);if(0===s.length)return;let r=[],a=[];for(let e=0;e<s.length;e++){let t=s[e],n=this.parseWsPosition(t);a.push(n.symbol),r.push(n),i.append(n)}let n="positions",o=this.findMessageHashes(e,n);for(let t=0;t<o.length;t++){let i=o[t],s=i.split("::")[1];if(this.inArray(s,a)){let t=[];for(let e=0;e<r.length;e++){let i=r[e];i.symbol===s&&t.push(i)}e.resolve(t,i)}}e.resolve(r,n)}parseWsPosition(e,t){let i;let s=this.safeString(e,"symbol"),a=this.safeString(e,"marginCoin");t=this.safeMarketCustom(s,t,a);let n=this.safeInteger(e,"cTime"),o=this.safeString(e,"marginMode"),h=this.getSupportedMapping(o,{crossed:"cross",isolated:"isolated"}),d=this.safeString(e,"holdMode");"double_hold"===d?i=!0:"single_hold"===d&&(i=!1);let l=this.safeString(e,"uplRate"),c=r.Y.stringMul(l,"100"),u=this.safeNumber(e,"margin");return this.safePosition({symbol:t.symbol,id:void 0,timestamp:n,datetime:this.iso8601(n),contracts:this.safeNumber(e,"total"),contractSize:void 0,side:this.safeStringLower(e,"holdSide"),notional:u,leverage:this.safeInteger(e,"leverage"),unrealizedPnl:this.safeNumber(e,"upl"),realizedPnl:this.safeNumber(e,"achievedProfits"),collateral:void 0,entryPrice:this.safeNumber(e,"averageOpenPrice"),markPrice:this.safeNumber(e,"markPrice"),liquidationPrice:this.safeNumber(e,"liqPx"),marginMode:h,hedged:i,maintenanceMargin:void 0,maintenanceMarginPercentage:this.safeNumber(e,"keepMarginRate"),initialMargin:u,initialMarginPercentage:void 0,marginRatio:this.safeNumber(e,"marginRate"),lastUpdateTimestamp:this.safeInteger(e,"uTime"),lastPrice:void 0,stopLossPrice:void 0,takeProfitPrice:void 0,percentage:c,info:e})}handleErrorMessage(e,t){let i=this.safeString(t,"event");try{if("error"===i){let e=this.safeString(t,"code"),i=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,e,i);let s=this.safeString(t,"msg","");throw this.throwBroadlyMatchedException(this.exceptions.ws.broad,s,i),new n.ExchangeError(i)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"message")||"pong"===t){this.handlePong(e,t);return}let i=this.safeString(t,"event");if("login"===i){this.handleAuthenticate(e,t);return}if("subscribe"===i){this.handleSubscriptionStatus(e,t);return}if("unsubscribe"===i){this.handleUnSubscriptionStatus(e,t);return}let s=this.safeDict(t,"arg",{}),r=this.safeString(s,"channel");"ticker"===r&&this.handleTicker(e,t),r.indexOf("candle")>=0&&this.handleOHLCV(e,t),r.indexOf("books")>=0&&this.handleOrderBook(e,t),"trade"===r&&this.handleTrades(e,t),"account"===r&&this.handleBalance(e,t),("orders"===r||"ordersAlgo"===r)&&this.handleOrder(e,t),"positions"===r&&this.handlePositions(e,t)}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleSubscriptionStatus(e,t){return t}handleUnSubscriptionStatus(e,t){let i=this.safeList(t,"args");void 0===i&&(i=[this.safeDict(t,"arg",{})]);for(let s=0;s<i.length;s++){let r=i[s],a=this.safeString(r,"channel");"books"===a?this.handleOrderBookUnSubscription(e,t):"trade"===a?this.handleTradesUnSubscription(e,t):"ticker"===a?this.handleTickerUnSubscription(e,t):a.startsWith("candle")&&this.handleOHLCVUnSubscription(e,t)}return t}handleOrderBookUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"sp"===s?"spot":"swap"),o=a.symbol,h="unsubscribe:orderbook:"+a.symbol,d="orderbook:"+o;o in this.orderbooks&&delete this.orderbooks[o],d in e.subscriptions&&delete e.subscriptions[d],h in e.subscriptions&&delete e.subscriptions[h];let l=new n.UnsubscribeError(this.id+"orderbook "+o);e.reject(l,d),e.resolve(!0,h)}handleTradesUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"sp"===s?"spot":"swap"),o=a.symbol,h="unsubscribe:trade:"+a.symbol,d="trade:"+o;o in this.trades&&delete this.trades[o],d in e.subscriptions&&delete e.subscriptions[d],h in e.subscriptions&&delete e.subscriptions[h];let l=new n.UnsubscribeError(this.id+"trades "+o);e.reject(l,d),e.resolve(!0,h)}handleTickerUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeMarket(r,void 0,void 0,"sp"===s?"spot":"swap"),o=a.symbol,h="unsubscribe:ticker:"+a.symbol,d="ticker:"+o;o in this.tickers&&delete this.tickers[o],d in e.subscriptions&&delete e.subscriptions[d],h in e.subscriptions&&delete e.subscriptions[h];let l=new n.UnsubscribeError(this.id+"ticker "+o);e.reject(l,d),e.resolve(!0,h)}handleOHLCVUnSubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeStringLower(i,"instType"),r=this.safeString(i,"instId"),a=this.safeString(i,"channel").replace("candle",""),n=this.safeDict(this.options,"timeframesForWs"),o=this.findTimeframe(a,n),h=this.safeMarket(r,void 0,void 0,"sp"===s?"spot":"swap"),d=h.symbol,l="unsubscribe:ohlcv:"+o+":"+h.symbol;d in this.ohlcvs&&o in this.ohlcvs[d]&&delete this.ohlcvs[d][o],this.cleanUnsubscription(e,"ohlcv:"+d+":"+o,l)}}class rl extends e4{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!1,watchTrades:!0,watchTradesForSymbols:!1,watchOHLCV:!1,watchTicker:!1,watchTickers:!1},urls:{api:{ws:"wss://ws-api.coincheck.com/"}},options:{expiresIn:"",userId:"",wsSessionToken:"",watchOrderBook:{snapshotDelay:6,snapshotMaxRetries:3},tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{exact:{4009:n.AuthenticationError}}})}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook:"+s.symbol,a=this.urls.api.ws,n={type:"subscribe",channel:s.id+"-orderbook"},o=this.extend(n,i);return(await this.watch(a,r,o,r)).limit()}handleOrderBook(e,t){let i=this.symbol(this.safeString(t,0)),s=this.safeValue(t,1,{}),r=this.safeTimestamp(s,"last_update_at"),a=this.parseOrderBook(s,i,r),n=this.safeValue(this.orderbooks,i);void 0===n?(n=this.orderBook(a),this.orderbooks[i]=n):(n=this.orderbooks[i]).reset(a);let o="orderbook:"+i;e.resolve(n,o)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="trade:"+r.symbol,n=this.urls.api.ws,o={type:"subscribe",channel:r.id+"-trades"},h=this.extend(o,s),d=await this.watch(n,a,h,a);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,0,[]),s=this.symbol(this.safeString(i,2)),r=this.safeValue(this.trades,s);if(void 0===r){let e=this.safeInteger(this.options,"tradesLimit",1e3);r=new sH.I3(e),this.trades[s]=r}for(let e=0;e<t.length;e++){let i=this.safeValue(t,e),s=this.parseWsTrade(i);r.append(s)}let a="trade:"+s;e.resolve(r,a)}parseWsTrade(e,t){let i=this.symbol(this.safeString(e,2)),s=this.safeTimestamp(e,0),r=this.safeString(e,5),a=this.safeString(e,3),n=this.safeString(e,4);return this.safeTrade({id:this.safeString(e,1),info:e,timestamp:s,datetime:this.iso8601(s),order:void 0,symbol:i,type:void 0,side:r,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}handleMessage(e,t){Array.isArray(this.safeValue(t,0))?this.handleTrades(e,t):this.handleOrderBook(e,t)}}class rc extends e8.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchBidsAsks:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOHLCV:!1,fetchOHLCVWs:!1},urls:{api:{ws:{spot:"wss://socket.coinex.com/v2/spot/",swap:"wss://socket.coinex.com/v2/futures/"}}},options:{ws:{gunzip:!0},timeframes:{"1m":60,"3m":180,"5m":300,"15m":900,"30m":1800,"1h":3600,"2h":7200,"4h":14400,"6h":21600,"12h":43200,"1d":86400,"3d":259200,"1w":604800},account:"spot",watchOrderBook:{limits:[5,10,20,50],defaultLimit:50,aggregations:["1000","100","10","1","0","0.1","0.01","0.001","0.0001","0.00001","0.000001","0.0000001","0.00000001","0.000000001","0.0000000001","0.00000000001"],defaultAggregation:"0"}},streaming:{},exceptions:{exact:{20001:n.BadRequest,20002:n.NotSupported,21001:n.AuthenticationError,21002:n.AuthenticationError,23001:n.RequestTimeout,23002:n.RateLimitExceeded,24001:n.ExchangeError,24002:n.ExchangeNotAvailable,30001:n.BadRequest,30002:n.NotSupported,31001:n.AuthenticationError,31002:n.AuthenticationError,33001:n.RequestTimeout,33002:n.RateLimitExceeded,34001:n.ExchangeError,34002:n.ExchangeNotAvailable},broad:{}}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}handleTicker(e,t){let i=this.safeString(this.options,"defaultType"),s=this.safeDict(t,"data",{}),r=this.safeList(s,"state_list",[]),a=[];for(let e=0;e<r.length;e++){let t=r[e],s=this.safeString(t,"market"),n=this.safeSymbol(s,void 0,void 0,i),o=this.safeMarket(s,void 0,void 0,i),h=this.parseWSTicker(t,o);this.tickers[n]=h,a.push(h)}let n=this.findMessageHashes(e,"tickers::");for(let t=0;t<n.length;t++){let i=n[t],s=i.split("::")[1].split(","),r=this.filterByArray(a,"symbol",s);Object.keys(r).length>0&&e.resolve(r,i)}e.resolve(a,"tickers")}parseWSTicker(e,t){let i=this.safeString(this.options,"defaultType"),s=this.safeString(e,"market");return this.safeTicker({symbol:this.safeSymbol(s,t,void 0,i),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:this.safeString(e,"volume_buy"),ask:void 0,askVolume:this.safeString(e,"volume_sell"),vwap:void 0,open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:this.safeString(e,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"value"),info:e},t)}async watchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e,"spot"),await this.authenticate(t);let i=this.urls.api.ws[t],s=Object.keys(this.currencies_by_id);void 0===s&&(s=[]);let r="balances";"spot"===t?r+=":spot":r+=":swap";let a={method:"balance.subscribe",params:{ccy_list:s},id:this.requestId()},n=this.deepExtend(a,e);return await this.watch(i,r,n,r)}handleBalance(e,t){let i,s,r;void 0===this.balance&&(this.balance={});let a=this.safeDict(t,"data",{}),n=this.safeList(a,"balance_list",[]),o=n[0],h=this.safeInteger(o,"updated_at"),d=this.safeString(o,"unrealized_pnl"),l=[];if(void 0!==h){s="spot";for(let e=0;e<n.length;e++)l=this.arrayConcat(l,n);i=l}if(void 0!==d){s="swap";for(let e=0;e<n.length;e++)l=this.arrayConcat(l,n);i=l}for(let e=0;e<l.length;e++){let t=l[e];this.parseWsBalance(t,s)}void 0!==s&&(void 0===this.safeValue(this.balance,s)&&(this.balance[s]={}),this.balance[s].info=i,this.balance[s]=this.safeBalance(this.balance[s]),r="balances:"+s,e.resolve(this.balance[s],r))}parseWsBalance(e,t){let i=this.account(),s=this.safeString(e,"ccy"),r=this.safeCurrencyCode(s);i.free=this.safeString(e,"available"),i.used=this.safeString(e,"frozen"),void 0!==t?(void 0===this.safeValue(this.balance,t)&&(this.balance[t]={}),this.balance[t][r]=i):this.balance[r]=i}async watchMyTrades(e,t,i,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol),[a,s]=this.handleMarketTypeAndParams("watchMyTrades",r,s,"spot"),await this.authenticate(a);let n=this.urls.api.ws[a],o=[],h="myTrades";void 0!==r?(h+=":"+e,o.push(r.id)):"spot"===a?h+=":spot":h+=":swap";let d={method:"user_deals.subscribe",params:{market_list:o},id:this.requestId()},l=this.deepExtend(d,s),c=await this.watch(n,h,l,h);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleMyTrades(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"market"),r=e.url.indexOf("spot")>-1,a=this.safeMarket(s,void 0,void 0,r?"spot":"swap"),n=a.symbol,o="myTrades:"+a.type,h=this.safeValue(this.trades,n);if(void 0===h){let e=this.safeInteger(this.options,"tradesLimit",1e3);h=new sH.I3(e),this.trades[n]=h}let d=this.parseWsTrade(i,a);h.append(d),this.trades[n]=h,e.resolve(this.trades[n],o),e.resolve(this.trades[n],"myTrades:"+n)}handleTrades(e,t){let i=this.safeDict(t,"data",{}),s=this.safeList(i,"deal_list",[]),r=this.safeString(i,"market"),a=e.url.indexOf("spot")>-1,n=this.safeMarket(r,void 0,void 0,a?"spot":"swap"),o=n.symbol,h=this.safeValue(this.trades,o);if(void 0===h){let e=this.safeInteger(this.options,"tradesLimit",1e3);h=new sH.I3(e),this.trades[o]=h}for(let e=0;e<s.length;e++){let t=s[e],i=this.parseWsTrade(t,n);h.append(i)}this.trades[o]=h,e.resolve(this.trades[o],"trades:"+o)}parseWsTrade(e,t){let i=this.safeInteger(e,"created_at"),s="margin_market"in e?"spot":"swap",r=this.safeString(e,"market");t=this.safeMarket(r,t,void 0,s);let a={},n=this.omitZero(this.safeString(e,"fee"));if(void 0!==n){let i=this.safeString(e,"fee_ccy",t.quote);a={currency:this.safeCurrencyCode(i),cost:n}}return this.safeTrade({id:this.safeString(e,"deal_id"),info:e,timestamp:i,datetime:this.iso8601(i),symbol:this.safeSymbol(r,t,void 0,s),order:this.safeString(e,"order_id"),type:void 0,side:this.safeString(e,"side"),takerOrMaker:this.safeString(e,"role"),price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:void 0,fee:a},t)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);return(await this.watchTickers([e],t))[i.symbol]}async watchTickers(e,t={}){let i,s;await this.loadMarkets();let r=this.marketIds(e),a=[];if(void 0!==e)for(let t=0;t<e.length;t++){let s=e[t];i=this.market(s),a.push("tickers::"+i.symbol)}else a.push("tickers");[s,t]=this.handleMarketTypeAndParams("watchTickers",i,t);let n=this.urls.api.ws[s],o={method:"state.subscribe",params:{market_list:r},id:this.requestId()},h=await this.watchMultiple(n,a,this.deepExtend(o,t),["all@ticker"]);return this.newUpdates?h:this.filterByArray(this.tickers,"symbol",e)}async watchTrades(e,t,i,s={}){return s.callerMethodName="watchTrades",await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o=[],h=[];if([a,s]=this.handleParamString(s,"callerMethodName","watchTradesForSymbols"),void 0!==e)for(let t=0;t<e.length;t++){let i=e[t];r=this.market(i),o.push(r.id),h.push("trades:"+r.symbol)}else h.push("trades");[n,s]=this.handleMarketTypeAndParams(a,r,s);let d=this.urls.api.ws[n],l={method:"deals.subscribe",params:{market_list:o},id:this.requestId()},c=await this.watchMultiple(d,h,this.deepExtend(l,s),["trades"]);return this.newUpdates?c:this.filterBySinceLimit(c,t,i,"timestamp",!0)}async watchOrderBookForSymbols(e,t,i={}){let s,r,a;await this.loadMarkets();let o={},h=[];[a,i]=this.handleParamString(i,"callerMethodName","watchOrderBookForSymbols"),[r,i]=this.handleMarketTypeAndParams(a,void 0,i);let d=this.safeDict(this.options,"watchOrderBook",{}),c=this.safeList(d,"limits",[]);if(void 0===t&&(t=this.safeInteger(d,"defaultLimit",50)),!this.inArray(t,c))throw new n.NotSupported(this.id+" watchOrderBookForSymbols() limit must be one of "+c.join(", "));let u=this.safeString(d,"defaultAggregation","0"),f=this.safeList(d,"aggregations",[]),p=this.safeString(i,"aggregation",u);if(!this.inArray(p,f))throw new n.NotSupported(this.id+" watchOrderBookForSymbols() aggregation must be one of "+f.join(", "));if(i=this.omit(i,"aggregation"),void 0!==e)for(let i=0;i<e.length;i++){let r=e[i];s=this.market(r),h.push("orderbook:"+s.symbol),o[r]=[s.id,t,p,!0]}else h.push("orderbook");let m={method:"depth.subscribe",params:{market_list:Object.values(o)},id:this.requestId()},g=this.hash(this.encode(this.json(o)),l.s),y=this.urls.api.ws[r],v=await this.watchMultiple(y,h,this.deepExtend(m,i),g);return this.newUpdates?v:v.limit()}async watchOrderBook(e,t,i={}){return i.callerMethodName="watchOrderBook",await this.watchOrderBookForSymbols([e],t,i)}handleDelta(e,t){let i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){let i=this.safeString(this.options,"defaultType"),s=this.safeDict(t,"data",{}),r=this.safeDict(s,"depth",{}),a=this.safeString(s,"market"),n=this.safeMarket(a,void 0,void 0,i).symbol,o=this.safeInteger(r,"updated_at"),h=this.safeValue(this.orderbooks,n);if(this.safeBool(s,"is_full",!1)){let e=this.parseOrderBook(r,n,o);void 0===h?this.orderbooks[n]=this.orderBook(e):this.orderbooks[n].reset(e)}else{let e=this.safeList(r,"asks",[]),t=this.safeList(r,"bids",[]);this.handleDeltas(h.asks,e),this.handleDeltas(h.bids,t),h.nonce=o,h.timestamp=o,h.datetime=this.iso8601(o),this.orderbooks[n]=h}e.resolve(this.orderbooks[n],"orderbook:"+n)}async watchOrders(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o=this.safeBool2(s,"trigger","stop");s=this.omit(s,["trigger","stop"]);let h="orders";void 0!==e&&(e=(r=this.market(e)).symbol),[n,s]=this.handleMarketTypeAndParams("watchOrders",r,s,"spot"),await this.authenticate(n),void 0!==e?(a=[r.id],h+=":"+e):(a=[],"spot"===n?h+=":spot":h+=":swap");let d={method:o?"stop.subscribe":"order.subscribe",params:{market_list:a},id:this.requestId()},l=this.urls.api.ws[n],c=this.deepExtend(d,s),u=await this.watch(l,h,c,h,c);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySymbolSinceLimit(u,e,t,i,!0)}handleOrders(e,t){let i=this.safeDict(t,"data",{}),s=this.safeDict2(i,"order","stop",{}),r=this.parseWsOrder(s),a=r.symbol,n=this.market(a);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}this.orders.append(r);let o="orders",h=o+":"+n.type;e.resolve(this.orders,h),o+=":"+a,e.resolve(this.orders,o)}parseWsOrder(e,t){let i;let s=this.safeInteger(e,"created_at"),r=this.safeString(e,"market"),a=this.safeString(e,"status"),n="margin_market"in e;t=this.safeMarket(r,t,void 0,n?"spot":"swap");let o=this.omitZero(this.safeString2(e,"fee","quote_ccy_fee"));if(void 0!==o){let s=this.safeString(e,"fee_ccy",t.quote);i={currency:this.safeCurrencyCode(s),cost:o}}return this.safeOrder({info:e,id:this.safeString2(e,"order_id","stop_id"),clientOrderId:this.safeString(e,"client_id"),datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:this.safeInteger(e,"updated_at"),symbol:t.symbol,type:this.safeString(e,"type"),timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"side"),price:this.safeString(e,"price"),stopPrice:this.safeString(e,"trigger_price"),triggerPrice:this.safeString(e,"trigger_price"),amount:this.safeString(e,"amount"),filled:this.safeString2(e,"filled_amount","fill_value"),remaining:this.safeString2(e,"unfilled_amount","unfill_amount"),cost:void 0,average:void 0,status:this.parseWsOrderStatus(a),fee:i,trades:void 0},t)}parseWsOrderStatus(e){return this.safeString({active_success:"open",active_fail:"canceled",cancel:"canceled"},e,e)}async watchBidsAsks(e,t={}){let i,s;await this.loadMarkets();let r=this.marketIds(e),a=[];if(void 0!==e)for(let t=0;t<e.length;t++){let s=e[t];i=this.market(s),a.push("bidsasks:"+i.symbol)}else a.push("bidsasks");[s,t]=this.handleMarketTypeAndParams("watchBidsAsks",i,t);let n=this.urls.api.ws[s],o={method:"bbo.subscribe",params:{market_list:r},id:this.requestId()},h=await this.watchMultiple(n,a,this.deepExtend(o,t),["all@bidsasks"]);return this.newUpdates?h:this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeDict(t,"data",{}),s=this.parseWsBidAsk(i),r=s.symbol;this.bidsasks[r]=s,e.resolve(s,"bidsasks:"+r)}parseWsBidAsk(e,t){let i=this.safeString(this.options,"defaultType"),s=this.safeString(e,"market");t=this.safeMarket(s,t,void 0,i);let r=this.safeInteger(e,"updated_at");return this.safeTicker({symbol:this.safeSymbol(s,t,void 0,i),timestamp:r,datetime:this.iso8601(r),ask:this.safeNumber(e,"best_ask_price"),askVolume:this.safeNumber(e,"best_ask_size"),bid:this.safeNumber(e,"best_bid_price"),bidVolume:this.safeNumber(e,"best_bid_size"),info:e},t)}handleMessage(e,t){let i=this.safeString(t,"method"),s=this.safeString(t,"message");void 0!==s&&this.handleErrors(void 0,void 0,e.url,i,void 0,this.json(s),t,void 0,void 0);let r={"state.update":this.handleTicker,"balance.update":this.handleBalance,"deals.update":this.handleTrades,"user_deals.update":this.handleMyTrades,"depth.update":this.handleOrderBook,"order.update":this.handleOrders,"stop.update":this.handleOrders,"bbo.update":this.handleBidAsk},a=this.safeValue(r,i);if(void 0!==a){a.call(this,e,t);return}this.handleSubscriptionStatus(e,t)}handleErrors(e,t,i,s,r,a,o,h,d){if(void 0===o)return;let l=this.safeStringLower(o,"message"),c=void 0!==l&&"ok"!==l,u=this.safeString(o,"code");if(void 0!==u&&"0"!==u||c){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new n.ExchangeError(e)}}handleAuthenticationMessage(e,t){let i=this.safeStringLower(t,"message"),s=this.safeString(t,"code"),r="authenticated";if("ok"===i||"0"===s)this.safeValue(e.futures,r).resolve(!0);else{let i=new n.AuthenticationError(this.json(t));e.reject(i,r),r in e.subscriptions&&delete e.subscriptions[r]}}handleSubscriptionStatus(e,t){let i=this.safeInteger(t,"id"),s=this.safeValue(e.subscriptions,i);if(void 0!==s){let t=this.safeString(s,"future"),r=this.safeValue(e.futures,t);void 0!==r&&r.resolve(!0),delete e.subscriptions[i]}}async authenticate(e){let t=this.urls.api.ws[e],i=this.client(t),s=this.milliseconds(),r=s.toString(),a="authenticated",n=i.future(a);if(void 0!==this.safeValue(i.subscriptions,a))return await n;let o=this.requestId(),h=this.hmac(this.encode(r),this.encode(this.secret),l.s,"hex"),d={id:o,method:"server.sign",params:{access_id:this.apiKey,signed_str:h.toLowerCase(),timestamp:s}};return this.watch(t,a,d,o,{id:o,future:a}),i.subscriptions[a]=!0,await n}}class ru extends td{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!1,watchTrades:!0,watchTradesForSymbols:!1,watchOHLCV:!1,watchTicker:!0,watchTickers:!1},urls:{api:{ws:"wss://stream.coinone.co.kr"}},options:{expiresIn:"",userId:"",wsSessionToken:"",watchOrderBook:{snapshotDelay:6,snapshotMaxRetries:3},tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{exact:{4009:n.AuthenticationError}},streaming:{ping:this.ping,keepAlive:2e4}})}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook:"+s.symbol,a=this.urls.api.ws,n={request_type:"SUBSCRIBE",channel:"ORDERBOOK",topic:{quote_currency:s.quote,target_currency:s.base}},o=this.extend(n,i);return(await this.watch(a,r,o,r)).limit()}handleOrderBook(e,t){let i=this.safeValue(t,"data",{}),s=this.safeStringUpper(i,"target_currency"),r=this.safeStringUpper(i,"quote_currency"),a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(r),o=this.symbol(a+"/"+n),h=this.safeInteger(i,"timestamp"),d=this.safeValue(this.orderbooks,o);void 0===d?d=this.orderBook():d.reset(),d.symbol=o;let l=this.safeValue(i,"asks",[]),c=this.safeValue(i,"bids",[]);this.handleDeltas(d.asks,l),this.handleDeltas(d.bids,c),d.timestamp=h,d.datetime=this.iso8601(h);let u="orderbook:"+o;this.orderbooks[o]=d,e.resolve(d,u)}handleDelta(e,t){let i=this.parseBidAsk(t,"price","qty");e.storeArray(i)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="ticker:"+i.symbol,r=this.urls.api.ws,a={request_type:"SUBSCRIBE",channel:"TICKER",topic:{quote_currency:i.quote,target_currency:i.base}},n=this.extend(a,t);return await this.watch(r,s,n,s)}handleTicker(e,t){let i=this.safeValue(t,"data",{}),s=this.parseWsTicker(i),r=s.symbol;this.tickers[r]=s,e.resolve(this.tickers[r],"ticker:"+r)}parseWsTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"last"),r=this.safeString(e,"target_currency"),a=this.safeString(e,"quote_currency"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a),h=this.symbol(n+"/"+o);return this.safeTicker({symbol:h,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeNumber(e,"bid_best_price"),bidVolume:this.safeNumber(e,"bid_best_qty"),ask:this.safeNumber(e,"ask_best_price"),askVolume:this.safeNumber(e,"ask_best_qty"),vwap:void 0,open:this.safeString(e,"first"),close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"target_volume"),quoteVolume:this.safeString(e,"quote_volume"),info:e},t)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="trade:"+r.symbol,n=this.urls.api.ws,o={request_type:"SUBSCRIBE",channel:"TRADE",topic:{quote_currency:r.quote,target_currency:r.base}},h=this.extend(o,s),d=await this.watch(n,a,h,a);return this.newUpdates&&(i=d.getLimit(r.symbol,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"data",{}),s=this.parseWsTrade(i),r=s.symbol,a=this.safeValue(this.trades,r);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[r]=a}a.append(s);let n="trade:"+r;e.resolve(a,n)}parseWsTrade(e,t){let i;let s=this.safeStringUpper(e,"target_currency"),r=this.safeStringUpper(e,"quote_currency"),a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(r),o=this.safeInteger(e,"timestamp");t=this.safeMarket(a+"/"+n,t);let h=this.safeValue(e,"is_seller_maker");void 0!==h&&(i=h?"sell":"buy");let d=this.safeString(e,"price"),l=this.safeString(e,"qty");return this.safeTrade({id:this.safeString(e,"id"),info:e,timestamp:o,datetime:this.iso8601(o),order:void 0,symbol:t.symbol,type:void 0,side:i,takerOrMaker:void 0,price:d,amount:l,cost:void 0,fee:void 0},t)}handleErrorMessage(e,t){return"ERROR"===this.safeString(t,"response_type","")}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i=this.safeString(t,"response_type");if("PONG"===i){this.handlePong(e,t);return}if("DATA"===i){let i=this.safeString(t,"channel",""),s={ORDERBOOK:this.handleOrderBook,TICKER:this.handleTicker,TRADE:this.handleTrades},r=this.safeValue(s,i);if(void 0!==r){r.call(this,e,t);return}let a=Object.keys(s);for(let r=0;r<a.length;r++){let n=a[r];if(i.indexOf(a[r])>=0){s[n].call(this,e,t);return}}}}ping(e){return{request_type:"PING"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}}class rf extends tv{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchMyTrades:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchOHLCV:!0,watchPositions:!0,createOrderWs:!0,cancelOrderWs:!0,cancelAllOrders:!0},urls:{api:{ws:{public:"wss://stream.crypto.com/exchange/v1/market",private:"wss://stream.crypto.com/exchange/v1/user"}},test:{public:"wss://uat-stream.3ona.co/exchange/v1/market",private:"wss://uat-stream.3ona.co/exchange/v1/user"}},options:{watchPositions:{fetchPositionsSnapshot:!0,awaitPositionsSnapshot:!0},watchOrderBook:{checksum:!0}},streaming:{}})}async pong(e,t){try{await e.send({id:this.safeInteger(t,"id"),method:"public/respond-heartbeat"})}catch(i){let t=new n.NetworkError(this.id+" pong failed with error "+this.json(i));e.reset(t)}}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async unWatchOrderBook(e,t={}){return await this.unWatchOrderBookForSymbols([e],t)}async watchOrderBookForSymbols(e,t,i={}){let s,r,a,n;await this.loadMarkets(),e=this.marketSymbols(e);let o=[],h=[];t||(t=50),void 0===this.safeValue(i,"params")&&(i.params={}),[s,i]=this.handleOptionAndParams(i,"watchOrderBook","bookSubscriptionType","SNAPSHOT_AND_UPDATE"),[r,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","bookSubscriptionType",s),i.params.bookSubscriptionType=r,[a,i]=this.handleOptionAndParams(i,"watchOrderBook","bookUpdateFrequency"),[n,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","bookUpdateFrequency",a),void 0!==n&&(i.params.bookSubscriptionType=n);for(let i=0;i<e.length;i++){let s=e[i],r=this.market(s),a="book."+r.id+"."+t.toString(),n="orderbook:"+r.symbol;h.push(n),o.push(a)}return(await this.watchPublicMultiple(h,o,i)).limit()}async unWatchOrderBookForSymbols(e,t={}){let i,s,r,a;await this.loadMarkets(),e=this.marketSymbols(e);let n=[],o=[],h=[],d=this.safeInteger(t,"limit",50);void 0===this.safeValue(t,"params")&&(t.params={}),[i,t]=this.handleOptionAndParams(t,"watchOrderBook","bookSubscriptionType","SNAPSHOT_AND_UPDATE"),[s,t]=this.handleOptionAndParams(t,"watchOrderBookForSymbols","bookSubscriptionType",i),t.params.bookSubscriptionType=s,[r,t]=this.handleOptionAndParams(t,"watchOrderBook","bookUpdateFrequency"),[a,t]=this.handleOptionAndParams(t,"watchOrderBookForSymbols","bookUpdateFrequency",r),void 0!==a&&(t.params.bookSubscriptionType=a);for(let t=0;t<e.length;t++){let i=e[t],s=this.market(i),r="book."+s.id+"."+d.toString(),a="orderbook:"+s.symbol;o.push(a),h.push("unsubscribe:"+a),n.push(r)}return await this.unWatchPublicMultiple("orderbook",e,h,o,n,t)}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1),r=this.safeInteger(t,2);e.storeArray([i,s,r])}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){let i=this.safeString(t,"instrument_name"),s=this.safeMarket(i).symbol,r=this.safeValue(t,"data");r=this.safeValue(r,0);let a=this.safeInteger(r,"t");if(!(s in this.orderbooks)){let e=this.safeInteger(t,"depth");this.orderbooks[s]=this.countedOrderBook({},e)}let o=this.orderbooks[s],h=this.safeString(t,"channel"),d=this.safeInteger2(r,"u","s"),l=r;if("book"===h)o.reset({}),o.symbol=s,o.timestamp=a,o.datetime=this.iso8601(a),o.nonce=d;else{l=this.safeValue(r,"update",{});let e=this.safeInteger(r,"pu");if(o.nonce!==e&&this.handleOption("watchOrderBook","checksum",!0))throw new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(s))}this.handleDeltas(o.asks,this.safeValue(l,"asks",[])),this.handleDeltas(o.bids,this.safeValue(l,"bids",[])),o.nonce=d,this.orderbooks[s]=o;let c="orderbook:"+s;e.resolve(o,c)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async unWatchTrades(e,t={}){return await this.unWatchTradesForSymbols([e],t)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e);let r=[];for(let t=0;t<e.length;t++){let i=e[t],s="trade."+this.market(i).id;r.push(s)}let a=await this.watchPublicMultiple(r,r,s);if(this.newUpdates){let e=this.safeValue(a,0),t=this.safeString(e,"symbol");i=a.getLimit(t,i)}return this.filterBySinceLimit(a,t,i,"timestamp",!0)}async unWatchTradesForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.market(r),n="trade."+a.id;s.push("unsubscribe:trades:"+a.symbol),i.push(n)}return await this.unWatchPublicMultiple("trades",e,s,i,i,t)}handleTrades(e,t){let i=this.safeString(t,"channel"),s=this.safeString(t,"instrument_name"),r=this.safeString(t,"subscription"),a=this.safeMarket(s),n=a.symbol,o=this.safeValue(this.trades,n);if(void 0===o){let e=this.safeInteger(this.options,"tradesLimit",1e3);o=new sH.I3(e),this.trades[n]=o}let h=this.safeValue(t,"data",[]);if(0===h.length)return;let d=this.parseTrades(h,a);for(let e=0;e<d.length;e++)o.append(d[e]);let l=i.replace("."+s,"");e.resolve(o,r),e.resolve(o,l)}async watchMyTrades(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol);let a="user.trade";a=void 0!==r?a+"."+r.id:a;let n=await this.watchPrivateSubscribe(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}async watchTicker(e,t={}){await this.loadMarkets();let i="ticker."+this.market(e).id;return await this.watchPublic(i,t)}async unWatchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="ticker."+i.id,r="unsubscribe:ticker:"+i.symbol;return await this.unWatchPublicMultiple("ticker",[i.symbol],[r],[s],[s],t)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=this.marketIds(e);for(let e=0;e<s.length;e++){let t=s[e];i.push("ticker."+t)}let r=this.urls.api.ws.public,a=this.nonce(),n=await this.watchMultiple(r,i,this.extend({method:"subscribe",params:{channels:i},nonce:a},t),i);if(this.newUpdates){let e={};return e[n.symbol]=n,e}return this.filterByArray(this.tickers,"symbol",e)}async unWatchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=[],r=this.marketIds(e);for(let t=0;t<r.length;t++){let a=r[t],n=e[t];s.push("ticker."+a),i.push("unsubscribe:ticker:"+n)}return await this.unWatchPublicMultiple("ticker",e,i,s,s,t)}handleTicker(e,t){this.handleBidAsk(e,t);let i=this.safeString(t,"subscription"),s=this.safeString(t,"instrument_name"),r=this.safeMarket(s),a=this.safeValue(t,"data",[]);for(let t=0;t<a.length;t++){let s=a[t],n=this.parseWsTicker(s,r),o=n.symbol;this.tickers[o]=n,e.resolve(n,i)}}parseWsTicker(e,t){let i=this.safeInteger(e,"t"),s=this.safeString(e,"i");t=this.safeMarket(s,t,"_");let r=this.safeString(t,"quote"),a=this.safeString(e,"a");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeNumber(e,"h"),low:this.safeNumber(e,"l"),bid:this.safeNumber(e,"b"),bidVolume:this.safeNumber(e,"bs"),ask:this.safeNumber(e,"k"),askVolume:this.safeNumber(e,"ks"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString(e,"c"),average:void 0,baseVolume:this.safeString(e,"v"),quoteVolume:"USD"===r?this.safeString(e,"vv"):void 0,info:e},t)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=[],r=this.marketIds(e);for(let t=0;t<r.length;t++){let a=r[t];i.push("bidask."+e[t]),s.push("ticker."+a)}let a=this.urls.api.ws.public,n=this.nonce(),o=await this.watchMultiple(a,i,this.extend({method:"subscribe",params:{channels:s},nonce:n},t),i);if(this.newUpdates){let e={};return e[o.symbol]=o,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeList(t,"data",[]),s=this.safeDict(i,0,{}),r=this.parseWsBidAsk(s),a=r.symbol;this.bidsasks[a]=r,e.resolve(r,"bidask."+a)}parseWsBidAsk(e,t){let i=this.safeString(e,"i");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"t");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeString(e,"k"),askVolume:this.safeString(e,"ks"),bid:this.safeString(e,"b"),bidVolume:this.safeString(e,"bs"),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n="candlestick."+this.safeString(this.timeframes,t,t)+"."+a.id,o=await this.watchPublic(n,r);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}async unWatchOHLCV(e,t="1m",i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r="candlestick."+this.safeString(this.timeframes,t,t)+"."+s.id,a="unsubscribe:ohlcv:"+s.symbol+":"+t,n={symbolsAndTimeframes:[[s.symbol,t]]};return await this.unWatchPublicMultiple("ohlcv",[s.symbol],[a],[r],[r],i,n)}handleOHLCV(e,t){let i=this.safeString(t,"subscription"),s=this.safeString(t,"instrument_name"),r=this.safeMarket(s),a=r.symbol,n=this.safeString(t,"interval"),o=this.findTimeframe(n);this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let h=this.safeValue(this.ohlcvs[a],o);if(void 0===h){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new sH.TG(e),this.ohlcvs[a][o]=h}let d=this.safeValue(t,"data");for(let e=0;e<d.length;e++){let t=d[e],i=this.parseOHLCV(t,r);h.append(i)}e.resolve(h,i)}async watchOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol);let a="user.order";a=void 0!==r?a+"."+r.id:a;let n=await this.watchPrivateSubscribe(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrders(e,t,i){let s=this.safeString(t,"channel"),r=this.safeString(t,"subscription"),a=this.safeValue(t,"data",[]);if(a.length>0){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let t=this.orders,i=this.parseOrders(a);for(let e=0;e<i.length;e++)t.append(i[e]);e.resolve(t,r),e.resolve(t,s),e.resolve(t,"user.order")}}async watchPositions(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r=this.urls.api.ws.private,a=this.nonce(),n="positions";e=this.marketSymbols(e),this.isEmpty(e)||(n="::"+e.join(","));let o=this.client(r);this.setPositionsCache(o,e);let h=this.handleOption("watchPositions","fetchPositionsSnapshot",!0),d=this.handleOption("watchPositions","awaitPositionsSnapshot",!0);if(h&&d&&void 0===this.positions){let s=await o.future("fetchPositionsSnapshot");return this.filterBySymbolsSinceLimit(s,e,t,i,!0)}let l=await this.watch(r,n,this.extend({method:"subscribe",params:{channels:["user.position_balance"]},nonce:a},s));return this.newUpdates?l:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}setPositionsCache(e,t,i){if(this.handleOption("watchPositions","fetchPositionsSnapshot",!1)){let t="fetchPositionsSnapshot";t in e.futures||(e.future(t),this.spawn(this.loadPositionsSnapshot,e,t))}else this.positions=new sH.Hk}async loadPositionsSnapshot(e,t){let i=await this.fetchPositions();this.positions=new sH.Hk;let s=this.positions;for(let e=0;e<i.length;e++){let t=i[e];this.safeNumber(t,"contracts",0)>0&&s.append(t)}e.futures[t].resolve(s),e.resolve(s,"positions")}handlePositions(e,t){let i=this.safeValue(t,"data",[]),s=this.safeValue(i,0,{}),r=this.safeValue(s,"positions",[]);void 0===this.positions&&(this.positions=new sH.Hk);let a=this.positions,n=[];for(let e=0;e<r.length;e++){let t=r[e],i=this.parsePosition(t);n.push(i),a.append(i)}let o=this.findMessageHashes(e,"positions::");for(let t=0;t<o.length;t++){let i=o[t],s=i.split("::")[1].split(","),r=this.filterByArray(n,"symbol",s,!1);this.isEmpty(r)||e.resolve(r,i)}e.resolve(n,"positions")}async watchBalance(e={}){return await this.watchPrivateSubscribe("user.balance",e)}handleBalance(e,t){let i=this.safeString(t,"subscription"),s=this.safeValue(t,"data",[]),r=this.safeValue(s[0],"position_balances",[]);this.balance.info=s;for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"instrument_name"),s=this.safeCurrencyCode(i),a=this.account();a.total=this.safeString(t,"quantity"),a.used=this.safeString(t,"reserved_qty"),this.balance[s]=a,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,i);let a=this.safeString(t,"id");e.resolve(this.balance,a)}async createOrderWs(e,t,i,s,r,a={}){await this.loadMarkets();let n={method:"private/create-order",params:a=this.createOrderRequest(e,t,i,s,r,a)},o=this.nonce();return await this.watchPrivateRequest(o,n)}handleOrder(e,t){let i=this.safeString(t,"id"),s=this.safeValue(t,"result",{}),r=this.parseOrder(s);e.resolve(r,i)}async cancelOrderWs(e,t,i={}){await this.loadMarkets();let s={method:"private/cancel-order",params:i=this.extend({order_id:e},i)},r=this.nonce();return await this.watchPrivateRequest(r,s)}async cancelAllOrdersWs(e,t={}){let i;await this.loadMarkets();let s={method:"private/cancel-all-orders",params:this.extend({},t)};void 0!==e&&(i=this.market(e),s.params.instrument_name=i.id);let r=this.nonce();return await this.watchPrivateRequest(r,s)}handleCancelAllOrders(e,t){let i=this.safeString(t,"id");e.resolve(t,i)}async watchPublic(e,t={}){let i=this.urls.api.ws.public,s=this.nonce(),r=this.extend({method:"subscribe",params:{channels:[e]},nonce:s},t);return await this.watch(i,e,r,e)}async watchPublicMultiple(e,t,i={}){let s=this.urls.api.ws.public,r=this.nonce(),a=this.deepExtend({method:"subscribe",params:{channels:t},nonce:r},i);return await this.watchMultiple(s,e,a,e)}async unWatchPublicMultiple(e,t,i,s,r,a={},n={}){let o=this.urls.api.ws.public,h=this.nonce(),d={method:"unsubscribe",params:{channels:r},nonce:h,id:h.toString()},l={id:h.toString(),topic:e,symbols:t,subMessageHashes:s,messageHashes:i},c=this.deepExtend(d,a);return await this.watchMultiple(o,i,c,i,this.extend(l,n))}async watchPrivateRequest(e,t={}){await this.authenticate();let i=this.urls.api.ws.private,s=this.extend({id:e,nonce:e},t);return await this.watch(i,e.toString(),s,!0)}async watchPrivateSubscribe(e,t={}){await this.authenticate();let i=this.urls.api.ws.private,s=this.nonce(),r=this.extend({method:"subscribe",params:{channels:[e]},nonce:s},t);return await this.watch(i,e,r,e)}handleErrorMessage(e,t){let i=this.safeString(t,"id"),s=this.safeString(t,"code");try{if(s&&"0"!==s){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,s,e);let i=this.safeValue(t,"message");throw void 0!==i&&this.throwBroadlyMatchedException(this.exceptions.broad,i,e),new n.ExchangeError(e)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t,i);return!0}}handleSubscribe(e,t){let i={candlestick:this.handleOHLCV,ticker:this.handleTicker,trade:this.handleTrades,book:this.handleOrderBook,"book.update":this.handleOrderBook,"user.order":this.handleOrders,"user.trade":this.handleTrades,"user.balance":this.handleBalance,"user.position_balance":this.handlePositions},s=this.safeValue2(t,"result","info"),r=this.safeString(s,"channel");void 0!==r&&r.indexOf("user.trade")>-1&&this.handleTrades(e,s),void 0!==r&&r.startsWith("user.order")&&this.handleOrders(e,s);let a=this.safeValue(i,r);void 0!==a&&a.call(this,e,s)}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i=this.safeString(t,"method"),s={"":this.handlePing,"public/heartbeat":this.handlePing,"public/auth":this.handleAuthenticate,"private/create-order":this.handleOrder,"private/cancel-order":this.handleOrder,"private/cancel-all-orders":this.handleCancelAllOrders,"private/close-position":this.handleOrder,subscribe:this.handleSubscribe,unsubscribe:this.handleUnsubscribe},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws.private,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){let i="public/auth",r=this.nonce().toString(),a=i+r+this.apiKey+r,n=this.hmac(this.encode(a),this.encode(this.secret),l.s),o={id:r,nonce:r,method:i,api_key:this.apiKey,sig:n},h=this.extend(o,e);this.watch(t,s,h,s)}return await r}handlePing(e,t){this.spawn(this.pong,e,t)}handleAuthenticate(e,t){this.safeValue(e.futures,"authenticated").resolve(!0)}handleUnsubscribe(e,t){let i=this.safeString(t,"id"),s=Object.keys(e.subscriptions);for(let t=0;t<s.length;t++){let r=s[t];if(r in e.subscriptions&&r.startsWith("unsubscribe")){let t=e.subscriptions[r];if(i!==this.safeString(t,"id"))continue;let s=this.safeList(t,"messageHashes",[]),a=this.safeList(t,"subMessageHashes",[]);for(let t=0;t<s.length;t++){let i=s[t],r=a[t];this.cleanUnsubscription(e,r,i)}this.cleanCache(t)}}}}class rp extends tk{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://api-adapter.backend.currency.com/connect"}},options:{tradesLimit:1e3,OHLCVLimit:1e3,timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"W1"}},streaming:{ping:this.ping,keepAlive:2e4}})}ping(e){return{destination:"ping",correlationId:this.requestId().toString(),payload:{}}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleBalance(e,t,i){let s=this.safeValue(t,"payload"),r=this.parseBalance(s);this.balance=this.extend(this.balance,r);let a=this.safeString(i,"messageHash");e.resolve(this.balance,a),a in e.subscriptions&&delete e.subscriptions[a]}handleTicker(e,t,i){let s=this.safeValue(t,"payload"),r=this.safeValue(s,"tickers",[]);for(let t=0;t<r.length;t++){let i=this.parseTicker(r[t]),s=i.symbol;this.tickers[s]=i;let a="/api/v1/ticker/24hr:"+s;e.resolve(i,a),a in e.subscriptions&&delete e.subscriptions[a]}}handleTrade(e,t){let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,void 0,"/"),a=this.safeInteger(e,"ts"),n=this.safeString(e,"price"),o=this.safeString(e,"size"),h=this.parseNumber(r.Y.stringMul(n,o)),d=this.parseNumber(n),l=this.parseNumber(o),c=this.safeString(e,"id"),u=this.safeString(e,"orderId"),f=this.safeValue(e,"buyer");return{info:e,timestamp:a,datetime:this.iso8601(a),symbol:s,id:c,order:u,type:void 0,takerOrMaker:void 0,side:f?"buy":"sell",price:d,amount:l,cost:h,fee:void 0}}handleTrades(e,t){let i=this.safeValue(t,"payload"),s=this.handleTrade(i),r=s.symbol,a="trades.subscribe:"+r,n=this.safeValue(this.trades,r);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e),this.trades[r]=n}n.append(s),e.resolve(n,a)}findTimeframe(e,t){let i=this.safeValue(this.options,"timeframes",t),s=Object.keys(i);for(let t=0;t<s.length;t++){let r=s[t];if(i[r]===e)return r}}handleOHLCV(e,t){let i=this.safeValue(t,"payload",{}),s=this.safeString(i,"interval"),r=this.findTimeframe(s),a=this.safeString(i,"symbol"),n=this.safeMarket(a).symbol,o="OHLCMarketData.subscribe:"+r+":"+n,h=[this.safeInteger(i,"t"),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),void 0];this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let d=this.safeValue(this.ohlcvs[n],r);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[n][r]=d}d.append(h),e.resolve(d,o)}requestId(){let e=this.sum(this.safeInteger(this.options,"correlationId",0),1);return this.options.correlationId=e,e}async watchPublic(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=e+":"+(t=s.symbol),a=this.urls.api.ws,n=this.requestId().toString(),o=this.deepExtend({destination:e,correlationId:n,payload:{symbols:[s.id]}},i),h=this.extend(o,{messageHash:r,symbol:t});return await this.watch(a,r,o,r,h)}async watchPrivate(e,t={}){await this.loadMarkets();let i="/api/v1/account",s=this.urls.api.ws,r=this.requestId().toString(),a={timestamp:this.milliseconds(),apiKey:this.apiKey},n=this.urlencode(this.keysort(a)),o=this.deepExtend({destination:e,correlationId:r,payload:a},t);o.payload.signature=this.hmac(this.encode(n),this.encode(this.secret),l.s);let h=this.extend(o,{messageHash:i});return await this.watch(s,i,o,i,h)}async watchBalance(e={}){return await this.loadMarkets(),await this.watchPrivate("/api/v1/account",e)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s="/api/v1/ticker/24hr",r=s+":"+e,a=this.urls.api.ws,n=this.requestId().toString(),o=this.deepExtend({destination:s,correlationId:n,payload:{symbol:i.id}},t),h=this.extend(o,{messageHash:r,symbol:e});return await this.watch(a,r,o,r,h)}async watchTrades(e,t,i,s={}){await this.loadMarkets(),e=this.symbol(e);let r=await this.watchPublic("trades.subscribe",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){return await this.loadMarkets(),e=this.symbol(e),(await this.watchPublic("depthMarketData.subscribe",e,i)).limit()}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets(),e=this.symbol(e);let a="OHLCMarketData.subscribe",n={destination:a,payload:{intervals:[this.safeValue(this.options,"timeframes")[t]]}},o=await this.watchPublic(a+":"+t,e,this.extend(n,r));return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}handleDeltas(e,t){let i=Object.keys(t);for(let s=0;s<i.length;s++){let r=i[s],a=t[r];e.store(parseFloat(r),parseFloat(a))}}handleOrderBook(e,t){let i=this.safeValue(t,"payload",{}),s=this.safeValue(i,"data",{}),r=this.safeString(i,"symbol"),a=this.safeSymbol(r,void 0,"/"),n=this.safeInteger(s,"ts");a in this.orderbooks||(this.orderbooks[a]=this.orderBook());let o=this.orderbooks[a];o.reset({symbol:a,timestamp:n,datetime:this.iso8601(n)});let h=this.safeDict(s,"bid",{}),d=this.safeDict(s,"ofr",{});this.handleDeltas(o.bids,h),this.handleDeltas(o.asks,d),this.orderbooks[a]=o,e.resolve(o,"depthMarketData.subscribe:"+a)}handleMessage(e,t){let i=this.safeString(t,"correlationId");if(void 0!==i){let s=this.indexBy(e.subscriptions,"correlationId"),r=this.safeString(t,"status"),a=this.safeValue(s,i);if(void 0!==a&&"OK"===r){let i=this.safeString(a,"destination");if(void 0!==i){let s={"/api/v1/ticker/24hr":this.handleTicker,"/api/v1/account":this.handleBalance},r=this.safeValue(s,i);if(void 0===r)return;r.call(this,e,t,a);return}}}let s=this.safeString(t,"destination");if(void 0!==s){let i={"marketdepth.event":this.handleOrderBook,"internal.trade":this.handleTrades,"ohlc.event":this.handleOHLCV,ping:this.handlePong},r=this.safeValue(i,s);void 0!==r&&r.call(this,e,t)}}}class rm extends tT{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!0,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0},urls:{test:{ws:{public:"wss://stream.testnet.defx.com/pricefeed",private:"wss://ws.testnet.defx.com/user"}},api:{ws:{public:"wss://marketfeed.api.defx.com/pricefeed",private:"wss://userfeed.api.defx.com/user"}}},options:{listenKeyRefreshRate:354e4,ws:{timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"}}},streaming:{},exceptions:{}})}async watchPublic(e,t,i={}){await this.loadMarkets();let s=this.urls.api.ws.public,r=this.extend({method:"SUBSCRIBE",topics:e},i);return await this.watchMultiple(s,t,r,t)}async unWatchPublic(e,t,i={}){await this.loadMarkets();let s=this.urls.api.ws.public,r=this.extend({method:"UNSUBSCRIBE",topics:e},i);return await this.watchMultiple(s,t,r,t)}async watchOHLCV(e,t="1m",i,s,r={}){return(await this.watchOHLCVForSymbols([[e,t]],i,s,r))[e][t]}async unWatchOHLCV(e,t="1m",i={}){return await this.unWatchOHLCVForSymbols([[e,t]],i)}async watchOHLCVForSymbols(e,t,i,s={}){if(0===e.length||!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" watchOHLCVForSymbols() requires a an array of symbols and timeframes, like  [['BTC/USDT', '1m'], ['LTC/USDT', '5m']]");await this.loadMarkets();let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,0),n=this.market(s),o=this.safeString(i,1),h=this.safeString(this.timeframes,o,o);r.push("symbol:"+n.id+":ohlc:"+h),a.push("candles:"+h+":"+n.symbol)}let[o,h,d]=await this.watchPublic(r,a,s);this.newUpdates&&(i=d.getLimit(o,i));let l=this.filterBySinceLimit(d,t,i,0,!0);return this.createOHLCVObject(o,h,l)}async unWatchOHLCVForSymbols(e,t={}){if(0===e.length||!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" unWatchOHLCVForSymbols() requires a an array of symbols and timeframes, like  [['BTC/USDT', '1m'], ['LTC/USDT', '5m']]");await this.loadMarkets();let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.safeString(r,0),n=this.market(a),o=this.safeString(r,1),h=this.safeString(this.timeframes,o,o);i.push("symbol:"+n.id+":ohlc:"+h),s.push("candles:"+h+":"+n.symbol)}return await this.unWatchPublic(i,s,t)}handleOHLCV(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"symbol"),r=this.market(s).symbol,a=this.safeString(i,"window");if(r in this.ohlcvs||(this.ohlcvs[r]={}),!(a in this.ohlcvs[r])){let e=this.safeInteger(this.options,"OHLCVLimit",1e3),t=new sH.TG(e);this.ohlcvs[r][a]=t}let n=this.ohlcvs[r][a],o=this.parseOHLCV(i);n.append(o),e.resolve([r,a,n],"candles:"+a+":"+r)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s="symbol:"+i.id+":24hrTicker",r="ticker:"+e;return await this.watchPublic([s],[r],t)}async unWatchTicker(e,t={}){return await this.unWatchTickers([e],t)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.marketId(r);i.push("symbol:"+a+":24hrTicker"),s.push("ticker:"+r)}return await this.watchPublic(i,s,t),this.filterByArray(this.tickers,"symbol",e)}async unWatchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.marketId(r);i.push("symbol:"+a+":24hrTicker"),s.push("ticker:"+r)}return await this.unWatchPublic(i,s,t)}handleTicker(e,t){this.handleBidAsk(e,t);let i=this.safeDict(t,"data",{}),s=this.parseTicker(i),r=s.symbol,a=this.safeInteger(t,"timestamp");s.timestamp=a,s.datetime=this.iso8601(a),this.tickers[r]=s,e.resolve(s,"ticker:"+r)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.marketId(r);i.push("symbol:"+a+":24hrTicker"),s.push("bidask:"+r)}return await this.watchPublic(i,s,t),this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeDict(t,"data",{}),s=this.parseWsBidAsk(i),r=s.symbol,a=this.safeInteger(t,"timestamp");s.timestamp=a,s.datetime=this.iso8601(a),this.bidsasks[r]=s,e.resolve(s,"bidask:"+r)}parseWsBidAsk(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol");return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,ask:this.safeString(e,"bestAskPrice"),askVolume:this.safeString(e,"bestAskQty"),bid:this.safeString(e,"bestBidPrice"),bidVolume:this.safeString(e,"bestBidQty"),info:e},t)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async unWatchTrades(e,t={}){return await this.unWatchTradesForSymbols([e],t)}async watchTradesForSymbols(e,t,i,s={}){if(await this.loadMarkets(),0===(e=this.marketSymbols(e)).length)throw new n.ArgumentsRequired(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],s=this.marketId(i);r.push("symbol:"+s+":trades"),a.push("trade:"+i)}let o=await this.watchPublic(r,a,s);if(this.newUpdates){let e=this.safeValue(o,0),t=this.safeString(e,"symbol");i=o.getLimit(t,i)}return this.filterBySinceLimit(o,t,i,"timestamp",!0)}async unWatchTradesForSymbols(e,t={}){if(await this.loadMarkets(),0===(e=this.marketSymbols(e)).length)throw new n.ArgumentsRequired(this.id+" unWatchTradesForSymbols() requires a non-empty array of symbols");let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.marketId(r);i.push("symbol:"+a+":trades"),s.push("trade:"+r)}return await this.unWatchPublic(i,s,t)}handleTrades(e,t){let i=this.safeDict(t,"data",{}),s=this.parseTrade(i),r=s.symbol;if(!(r in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3),t=new sH.I3(e);this.trades[r]=t}let a=this.trades[r];a.append(s),e.resolve(a,"trade:"+r)}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async unWatchOrderBook(e,t={}){return await this.unWatchOrderBookForSymbols([e],t)}async watchOrderBookForSymbols(e,t,i={}){if(await this.loadMarkets(),0===e.length)throw new n.ArgumentsRequired(this.id+" watchOrderBookForSymbols() requires a non-empty array of symbols");e=this.marketSymbols(e);let s=[],r=[];for(let t=0;t<e.length;t++){let i=e[t],a=this.marketId(i);s.push("symbol:"+a+":depth:20:0.001"),r.push("orderbook:"+i)}return(await this.watchPublic(s,r,i)).limit()}async unWatchOrderBookForSymbols(e,t={}){if(await this.loadMarkets(),0===e.length)throw new n.ArgumentsRequired(this.id+" unWatchOrderBookForSymbols() requires a non-empty array of symbols");e=this.marketSymbols(e);let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.marketId(r);i.push("symbol:"+a+":depth:20:0.001"),s.push("orderbook:"+r)}return await this.unWatchPublic(i,s,t)}handleOrderBook(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"symbol"),r=this.market(s).symbol,a=this.safeInteger(i,"timestamp"),n=this.parseOrderBook(i,r,a,"bids","asks","price","qty");if(!(r in this.orderbooks)){let e=this.orderBook(n);this.orderbooks[r]=e}let o=this.orderbooks[r];o.reset(n);let h="orderbook:"+r;e.resolve(o,h)}async keepAliveListenKey(e={}){let t=this.safeString(this.options,"listenKey");if(void 0===t)return;try{await this.v1PrivatePutApiUsersSocketListenKeysListenKey({listenKey:t})}catch(r){let e=this.urls.api.ws.private+"?listenKey="+t,i=this.client(e),s=Object.keys(i.futures);for(let e=0;e<s.length;e++){let t=s[e];i.reject(r,t)}this.options.listenKey=void 0,this.options.lastAuthenticatedTime=0;return}let i=this.safeInteger(this.options,"listenKeyRefreshRate",354e4);this.delay(i,this.keepAliveListenKey,e)}async authenticate(e={}){let t=this.milliseconds(),i=this.safeInteger(this.options,"lastAuthenticatedTime",0),s=this.safeInteger(this.options,"listenKeyRefreshRate",354e4);if(t-i>s){let i=await this.v1PrivatePostApiUsersSocketListenKeys();this.options.listenKey=this.safeString(i,"listenKey"),this.options.lastAuthenticatedTime=t,this.delay(s,this.keepAliveListenKey,e)}}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate();let t=this.urls.api.ws.private,i="WALLET_BALANCE_UPDATE",s=t+"?listenKey="+this.options.listenKey;return await this.watch(s,i,void 0,i)}handleBalance(e,t){let i=this.safeString(t,"event"),s=this.safeDict(t,"data",[]),r=this.safeInteger(t,"timestamp");void 0===this.balance&&(this.balance={}),this.balance.info=s,this.balance.timestamp=r,this.balance.datetime=this.iso8601(r);let a=this.safeString(s,"asset"),n=this.safeCurrencyCode(a),o=n in this.balance?this.balance[n]:this.account();o.free=this.safeString(s,"balance"),this.balance[n]=o,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,i)}async watchOrders(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r=this.urls.api.ws.private,a="orders";void 0!==e&&(a+=":"+this.market(e).symbol);let n=r+"?listenKey="+this.options.listenKey,o=await this.watch(n,a,void 0,a);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleOrder(e,t){let i="orders",s=this.safeDict(t,"data",{});if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let r=this.orders,a=this.parseOrder(s);r.append(a);let n=i+":"+a.symbol;e.resolve(r,i),e.resolve(r,n)}async watchPositions(e,t,i,s={}){let r;await this.loadMarkets(),await this.authenticate(),e=this.marketSymbols(e);let a=this.urls.api.ws.private,n="positions",o=a+"?listenKey="+this.options.listenKey;if(void 0!==e){let t=[];for(let i=0;i<e.length;i++){let s=e[i];t.push(n+":"+s)}r=await this.watchMultiple(o,t,void 0,t)}else r=await this.watch(o,n,void 0,n);return this.newUpdates?r:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}handlePositions(e,t){let i="positions",s=this.safeDict(t,"data",{});void 0===this.positions&&(this.positions=new sH.Pt);let r=this.positions,a=this.parsePosition(s),n=this.safeInteger(t,"timestamp");a.timestamp=n,a.datetime=this.iso8601(n),r.append(a);let o=i+":"+a.symbol;e.resolve([a],i),e.resolve([a],o)}handleMessage(e,t){if(void 0!==this.safeString(t,"code")){let e=this.safeString(t,"msg");throw new n.ExchangeError(this.id+" "+e)}let i=this.safeString(t,"event");if(void 0!==i){let s={ohlc:this.handleOHLCV,"24hrTicker":this.handleTicker,trades:this.handleTrades,depth:this.handleOrderBook,WALLET_BALANCE_UPDATE:this.handleBalance,ORDER_UPDATE:this.handleOrder,POSITION_UPDATE:this.handlePositions},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}}class rg extends tx.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0},urls:{test:{ws:"wss://test.deribit.com/ws/api/v2"},api:{ws:"wss://www.deribit.com/ws/api/v2"}},options:{ws:{timeframes:{"1m":"1","3m":"3","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"180","6h":"360","12h":"720","1d":"1D"},watchTradesForSymbols:{interval:"100ms"},watchOrderBookForSymbols:{interval:"100ms",useDepthEndpoint:!1,depth:"20",group:"none"}},currencies:["BTC","ETH","SOL","USDC"]},streaming:{},exceptions:{}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchBalance(e={}){await this.authenticate(e);let t="balance",i=this.urls.api.ws,s=this.safeValue(this.options,"currencies",[]),r=[];for(let e=0;e<s.length;e++){let t=s[e];r.push("user.portfolio."+t)}let a={jsonrpc:"2.0",method:"private/subscribe",params:{channels:r},id:this.requestId()},n=this.deepExtend(a,e);return await this.watch(i,t,n,t,n)}handleBalance(e,t){let i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{});this.balance.info=s;let r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.parseBalance(s);this.balance[a]=n,e.resolve(this.balance,"balance")}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.urls.api.ws,r=this.safeString(t,"interval","100ms");t=this.omit(t,"interval"),await this.loadMarkets(),"raw"===r&&await this.authenticate();let a="ticker."+i.id+"."+r,n={jsonrpc:"2.0",method:"public/subscribe",params:{channels:["ticker."+i.id+"."+r]},id:this.requestId()},o=this.deepExtend(n,t);return await this.watch(s,a,o,a,o)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=this.urls.api.ws,s=this.safeString(t,"interval","100ms");t=this.omit(t,"interval"),await this.loadMarkets(),"raw"===s&&await this.authenticate();let r=[];for(let t=0;t<e.length;t++){let i=this.market(e[t]);r.push("ticker."+i.id+"."+s)}let a={jsonrpc:"2.0",method:"public/subscribe",params:{channels:r},id:this.requestId()},n=this.deepExtend(a,t),o=await this.watchMultiple(i,r,n,r,n);if(this.newUpdates){let e={};return e[o.symbol]=o,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{}),r=this.safeString(s,"instrument_name"),a=this.safeSymbol(r),n=this.parseTicker(s),o=this.safeString(i,"channel");this.tickers[a]=n,e.resolve(n,o)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=this.urls.api.ws,s=[];for(let t=0;t<e.length;t++){let i=this.market(e[t]);s.push("quote."+i.id)}let r={jsonrpc:"2.0",method:"public/subscribe",params:{channels:s},id:this.requestId()},a=this.deepExtend(r,t),n=await this.watchMultiple(i,s,a,s,a);if(this.newUpdates){let e={};return e[n.symbol]=n,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeDict(t,"params",{}),s=this.safeDict(i,"data",{}),r=this.parseWsBidAsk(s),a=r.symbol;this.bidsasks[a]=r;let n=this.safeString(i,"channel");e.resolve(r,n)}parseWsBidAsk(e,t){let i=this.safeString(e,"instrument_name");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"timestamp");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeString(e,"best_ask_price"),askVolume:this.safeString(e,"best_ask_amount"),bid:this.safeString(e,"best_bid_price"),bidVolume:this.safeString(e,"best_bid_amount"),info:e},t)}async watchTrades(e,t,i,s={}){return s.callerMethodName="watchTrades",await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){let r;[r,s]=this.handleOptionAndParams(s,"watchTradesForSymbols","interval","100ms"),"raw"===r&&await this.authenticate();let a=await this.watchMultipleWrapper("trades",r,e,s);if(this.newUpdates){let e=this.safeDict(a,0),t=this.safeString(e,"symbol");i=a.getLimit(t,i)}return this.filterBySinceLimit(a,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeDict(t,"params",{}),s=this.safeString(i,"channel","").split("."),r=this.safeString(s,1),a=this.safeString(s,2),n=this.safeSymbol(r),o=this.safeMarket(r),h=this.safeList(i,"data",[]);if(void 0===this.safeValue(this.trades,n)){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.trades[n]=new sH.I3(e)}let d=this.trades[n];for(let e=0;e<h.length;e++){let t=h[e],i=this.parseTrade(t,o);d.append(i)}this.trades[n]=d,e.resolve(this.trades[n],"trades|"+n+"|"+a)}async watchMyTrades(e,t,i,s={}){await this.authenticate(s),void 0!==e&&(await this.loadMarkets(),e=this.symbol(e));let r=this.urls.api.ws,a=this.safeString(s,"interval","raw");s=this.omit(s,"interval");let n="user.trades.any.any."+a,o={jsonrpc:"2.0",method:"private/subscribe",params:{channels:[n]},id:this.requestId()},h=this.deepExtend(o,s),d=await this.watch(r,n,h,n,h);return this.filterBySymbolSinceLimit(d,e,t,i,!0)}handleMyTrades(e,t){let i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel",""),r=this.safeValue(i,"data",[]),a=this.myTrades;if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.Pt(e)}let n=this.parseTrades(r),o={};for(let e=0;e<n.length;e++){let t=n[e];a.append(t),o[t.symbol]=!0}e.resolve(a,s)}async watchOrderBook(e,t,i={}){return i.callerMethodName="watchOrderBook",await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){let s,r;[s,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","interval","100ms"),"raw"===s&&await this.authenticate();let a="";if([r,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","useDepthEndpoint",!1),r){let e,t;[e,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","depth","20"),[t,i]=this.handleOptionAndParams(i,"watchOrderBookForSymbols","group","none"),a=t+"."+e+"."+s}else a=s;return(await this.watchMultipleWrapper("book",a,e,i)).limit()}handleOrderBook(e,t){let i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{}),r=this.safeString(i,"channel").split("."),a="";a=5===r.length?this.safeString(r,2)+"."+this.safeString(r,3)+"."+this.safeString(r,4):this.safeString(r,2);let n=this.safeString(s,"instrument_name"),o=this.safeSymbol(n),h=this.safeInteger(s,"timestamp");o in this.orderbooks||(this.orderbooks[o]=this.countedOrderBook());let d=this.orderbooks[o],l=this.safeList(s,"asks",[]),c=this.safeList(s,"bids",[]);this.handleDeltas(d.asks,l),this.handleDeltas(d.bids,c),d.nonce=h,d.timestamp=h,d.datetime=this.iso8601(h),d.symbol=o,this.orderbooks[o]=d;let u="book|"+o+"|"+a;e.resolve(d,u)}cleanOrderBook(e){let t=this.safeList(e,"bids",[]),i=this.safeList(e,"asks",[]),s=[];for(let e=0;e<t.length;e++)s.push([t[e][1],t[e][2]]);let r=[];for(let e=0;e<i.length;e++)r.push([i[e][1],i[e][2]]);return e.bids=s,e.asks=r,e}handleDelta(e,t){let i=t[1],s=t[2];"new"===t[0]||"change"===t[0]?e.storeArray([i,s,1]):"delete"===t[0]&&e.storeArray([i,s,0])}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchOrders(e,t,i,s={}){await this.loadMarkets(),await this.authenticate(s),void 0!==e&&(e=this.symbol(e));let r=this.urls.api.ws,a=this.safeString(s,"currency","any"),n=this.safeString(s,"interval","raw"),o=this.safeString(s,"kind","any");s=this.omit(s,"interval","currency","kind");let h="user.orders."+o+"."+a+"."+n,d={jsonrpc:"2.0",method:"private/subscribe",params:{channels:[h]},id:this.requestId()},l=this.deepExtend(d,s),c=await this.watch(r,h,l,h,l);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleOrders(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel",""),r=this.safeValue(i,"data",{}),a=[];a=Array.isArray(r)?this.parseOrders(r):[this.parseOrder(r)];let n=this.orders;for(let e=0;e<a.length;e++)n.append(a[e]);e.resolve(this.orders,s)}async watchOHLCV(e,t="1m",i,s,r={}){return await this.loadMarkets(),e=this.symbol(e),(await this.watchOHLCVForSymbols([[e,t]],i,s,r))[e][t]}async watchOHLCVForSymbols(e,t,i,s={}){if(0===e.length||!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" watchOHLCVForSymbols() requires a an array of symbols and timeframes, like  [['BTC/USDT', '1m'], ['LTC/USDT', '5m']]");let[r,a,o]=await this.watchMultipleWrapper("chart.trades",void 0,e,s);this.newUpdates&&(i=o.getLimit(r,i));let h=this.filterBySinceLimit(o,t,i,0,!0);return this.createOHLCVObject(r,a,h)}handleOHLCV(e,t){let i=this.safeDict(t,"params",{}),s=this.safeString(i,"channel","").split("."),r=this.safeString(s,2),a=this.safeString(s,3),n=this.safeMarket(r),o=n.symbol,h=this.safeDict(this.options,"ws",{}),d=this.safeDict(h,"timeframes",{}),l=this.findTimeframe(a,d);if(this.ohlcvs[o]=this.safeDict(this.ohlcvs,o,{}),void 0===this.safeValue(this.ohlcvs[o],l)){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs[o][l]=new sH.TG(e)}let c=this.ohlcvs[o][l],u=this.safeDict(i,"data",{}),f=this.parseWsOHLCV(u,n);c.append(f),this.ohlcvs[o][l]=c;let p=[o,l,c],m="chart.trades|"+o+"|"+a;e.resolve(p,m)}parseWsOHLCV(e,t){return[this.safeInteger(e,"tick"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async watchMultipleWrapper(e,t,i,s={}){await this.loadMarkets();let r=this.urls.api.ws,a=[],o=[],h="chart.trades"===e,d=h?this.getListFromObjectValues(i,0):i;this.marketSymbols(d,void 0,!1);for(let s=0;s<i.length;s++){let r;let n=i[s];if(h){r=this.market(n[0]);let e=n[1];t=this.safeString(this.timeframes,e,e)}else r=this.market(n);let d=e+"."+r.id+"."+t;a.push(d),o.push(e+"|"+r.symbol+"|"+t)}let l={jsonrpc:"2.0",method:"public/subscribe",params:{channels:a},id:this.requestId()},c=this.deepExtend(l,s);if(this.json(c).length>=32767)throw new n.ExchangeError(this.id+" requested subscription length over limit, try to reduce symbols amount");return await this.watchMultiple(r,o,c,a)}handleMessage(e,t){let i=this.safeValue(t,"error");if(void 0!==i)throw new n.ExchangeError(this.id+" "+this.json(i));let s=this.safeValue(t,"params"),r=this.safeString(s,"channel");if(void 0!==r){let i=r.split("."),s=this.safeString(i,0),a={trades:this.handleMyTrades,portfolio:this.handleBalance,orders:this.handleOrders},o={ticker:this.handleTicker,quote:this.handleBidAsk,book:this.handleOrderBook,trades:this.handleTrades,chart:this.handleOHLCV,user:this.safeValue(a,this.safeString(i,1))},h=this.safeValue(o,s);if(void 0!==h){h.call(this,e,t);return}throw new n.NotSupported(this.id+" no handler found for this message "+this.json(t))}let a=this.safeValue(t,"result",{});void 0!==this.safeString(a,"access_token")&&this.handleAuthenticationMessage(e,t)}handleAuthenticationMessage(e,t){return e.resolve(t,"authenticated"),t}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s=this.milliseconds(),r=this.numberToString(s),a="authenticated",n=this.safeValue(i.subscriptions,a);if(void 0===n){this.checkRequiredCredentials();let o=this.requestId(),h=this.hmac(this.encode(r+"\n"+r+"\n"),this.encode(this.secret),l.s),d={jsonrpc:"2.0",id:o,method:"public/auth",params:{grant_type:"client_signature",client_id:this.apiKey,timestamp:s,signature:h,nonce:r,data:""}};n=await this.watch(t,a,this.extend(d,e),a),i.subscriptions[a]=n}return n}}class ry extends tL{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:{public:"wss://ws-api.exmo.com:443/v1/public",spot:"wss://ws-api.exmo.com:443/v1/private",margin:"wss://ws-api.exmo.com:443/v1/margin/private"}}},options:{},streaming:{},exceptions:{}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchBalance(e={}){await this.authenticate(e);let[t,i]=this.handleMarketTypeAndParams("watchBalance",void 0,e),s="balance:"+t,r=this.urls.api.ws[t],a={method:"subscribe",topics:[t+"/wallet"],id:this.requestId()},n=this.deepExtend(a,i);return await this.watch(r,s,n,s,n)}handleBalance(e,t){let i=this.safeString(t,"topic").split("/"),s=this.safeString(i,0);"spot"===s?this.parseSpotBalance(t):"margin"===s&&this.parseMarginBalance(t),e.resolve(this.balance,"balance:"+s)}parseSpotBalance(e){let t=this.safeString(e,"event"),i=this.safeValue(e,"data");if(this.balance.info=i,"snapshot"===t){let e=this.safeValue(i,"balances",{}),t=this.safeValue(i,"reserved",{}),s=Object.keys(e);for(let i=0;i<s.length;i++){let r=s[i],a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(e,r),n.used=this.safeString(t,r),this.balance[a]=n}}else if("update"===t){let e=this.safeString(i,"currency"),t=this.safeCurrencyCode(e),s=this.account();s.free=this.safeString(i,"balance"),s.used=this.safeString(i,"reserved"),this.balance[t]=s}this.balance=this.safeBalance(this.balance)}parseMarginBalance(e){let t=this.safeValue(e,"data");this.balance.info=t;let i=Object.keys(t);for(let e=0;e<i.length;e++){let s=i[e],r=this.safeCurrencyCode(s),a=this.safeValue(t,s),n=this.account();n.free=this.safeString(a,"free"),n.used=this.safeString(a,"used"),n.total=this.safeString(a,"balance"),this.balance[r]=n,this.balance=this.safeBalance(this.balance)}}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=this.urls.api.ws.public,r="ticker:"+e,a={method:"subscribe",topics:["spot/ticker:"+i.id],id:this.requestId()},n=this.deepExtend(a,t);return await this.watch(s,r,n,r,n)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=[];for(let t=0;t<e.length;t++){let r=this.market(e[t]);i.push("ticker:"+r.symbol),s.push("spot/ticker:"+r.id)}let r=this.urls.api.ws.public,a={method:"subscribe",topics:s,id:this.requestId()},n=this.deepExtend(a,t);return await this.watchMultiple(r,i,n,i,n),this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeString(t,"topic").split(":"),s=this.safeString(i,1),r=this.safeSymbol(s),a=this.safeValue(t,"data",{}),n=this.safeMarket(s),o=this.parseTicker(a,n);this.tickers[r]=o,e.resolve(o,"ticker:"+r)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=this.urls.api.ws.public,n="trades:"+e,o={method:"subscribe",topics:["spot/trades:"+r.id],id:this.requestId()},h=this.deepExtend(o,s),d=await this.watch(a,n,h,n,h);return this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeString(t,"topic").split(":"),s=this.safeString(i,1),r=this.safeSymbol(s),a=this.safeMarket(s),n=this.safeValue(t,"data",[]),o=this.safeValue(this.trades,r);if(void 0===o){let e=this.safeInteger(this.options,"tradesLimit",1e3);o=new sH.I3(e),this.trades[r]=o}for(let e=0;e<n.length;e++){let t=n[e],i=this.parseTrade(t,a);o.append(i)}this.trades[r]=o,e.resolve(this.trades[r],"trades:"+r)}async watchMyTrades(e,t,i,s={}){let r;await this.loadMarkets(),await this.authenticate(s);let[a,n]=this.handleMarketTypeAndParams("watchMyTrades",void 0,s),o=this.urls.api.ws[a];if(void 0===e)r="myTrades:"+a;else{let t=this.market(e);e=t.symbol,r="myTrades:"+t.symbol}let h={method:"subscribe",topics:[a+"/user_trades"],id:this.requestId()},d=this.deepExtend(h,n),l=await this.watch(o,r,d,r,d);return this.filterBySymbolSinceLimit(l,e,t,i,!0)}handleMyTrades(e,t){let i;let s=this.safeString(t,"topic").split("/"),r=this.safeString(s,0),a=this.safeString(t,"event"),n=[];if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);i=new sH.Pt(e),this.myTrades=i}else i=this.myTrades;"snapshot"===a?n=this.safeValue(t,"data",[]):"update"===a&&(n=[this.safeValue(t,"data",{})]);let o=this.parseTrades(n),h={};for(let e=0;e<o.length;e++){let t=o[e];i.append(t),h[t.symbol]=!0}let d=Object.keys(h);for(let t=0;t<d.length;t++){let s="myTrades:"+d[t];e.resolve(i,s)}e.resolve(i,"myTrades:"+r)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r=this.urls.api.ws.public,a="orderbook:"+e;i=this.omit(i,"aggregation");let n={method:"subscribe",id:this.requestId(),topics:["spot/order_book_updates:"+s.id]},o=this.deepExtend(n,i);return(await this.watch(r,a,o,a)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"topic").split(":"),s=this.safeString(i,1),r=this.safeSymbol(s),a=this.safeValue(t,"data",{}),n="orderbook:"+r,o=this.safeInteger(t,"ts");r in this.orderbooks||(this.orderbooks[r]=this.orderBook({}));let h=this.orderbooks[r];if("snapshot"===this.safeString(t,"event")){let e=this.parseOrderBook(a,r,o,"bid","ask");h.reset(e)}else{let e=this.safeList(a,"ask",[]),t=this.safeList(a,"bid",[]);this.handleDeltas(h.asks,e),this.handleDeltas(h.bids,t),h.timestamp=o,h.datetime=this.iso8601(o)}e.resolve(h,n)}handleDelta(e,t){let i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchOrders(e,t,i,s={}){let r;await this.loadMarkets(),await this.authenticate(s);let[a,n]=this.handleMarketTypeAndParams("watchOrders",void 0,s),o=this.urls.api.ws[a];if(void 0===e)r="orders:"+a;else{let t=this.market(e);e=t.symbol,r="orders:"+t.symbol}let h={method:"subscribe",topics:[a+"/orders"],id:this.requestId()},d=this.deepExtend(h,n),l=await this.watch(o,r,d,r,d);return this.filterBySymbolSinceLimit(l,e,t,i,!0)}handleOrders(e,t){let i=this.safeString(t,"topic").split("/"),s=this.safeString(i,0),r=this.safeString(t,"event");if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let a=this.orders,n=[];if("snapshot"===r)n=this.safeValue(t,"data",[]);else if("update"===r){let e=this.safeDict(t,"data",{});n.push(e)}let o={};for(let e=0;e<n.length;e++){let t=this.parseWsOrder(n[e]);a.append(t),o[t.symbol]=!0}let h=Object.keys(o);for(let t=0;t<h.length;t++){let i="orders:"+h[t];e.resolve(a,i)}e.resolve(a,"orders:"+s)}parseWsOrder(e,t){let i,s;let r=this.safeString(e,"order_id"),a=this.safeTimestamp(e,"created"),n=this.safeString(e,"type"),o=this.parseSide(n),h=this.safeString(e,"pair"),d=(t=this.safeMarket(h,t)).symbol,l=this.safeString(e,"quantity");void 0===l&&(l=this.safeString(e,"buy"===o?"in_amount":"out_amount"));let c=this.safeString(e,"price"),u=this.omitZero(this.safeString(e,"client_id")),f=this.omitZero(this.safeString(e,"stop_price"));return"buy"!==n&&"sell"!==n&&(i=n),"last_trade_id"in e&&(s=[this.parseWsTrade(e,t)]),this.safeOrder({id:r,clientOrderId:u,datetime:this.iso8601(a),timestamp:a,lastTradeTimestamp:void 0,status:this.parseStatus(this.safeString(e,"status")),symbol:d,type:i,timeInForce:void 0,postOnly:void 0,side:o,price:c,stopPrice:f,triggerPrice:f,cost:void 0,amount:this.safeString(e,"original_quantity"),filled:void 0,remaining:this.safeString(e,"quantity"),average:void 0,trades:s,fee:void 0,info:e},t)}parseWsTrade(e,t){let i;let s=this.safeString(e,"order_id"),r=this.safeString(e,"type"),a=this.parseSide(r),n=this.safeString(e,"pair"),o=(t=this.safeMarket(n,t)).symbol;return"buy"!==r&&"sell"!==r&&(i=r),this.safeTrade({id:this.safeString(e,"last_trade_id"),symbol:o,order:s,type:i,side:a,price:this.safeString(e,"last_trade_price"),amount:this.safeString(e,"last_trade_quantity"),cost:void 0,fee:void 0},t)}handleMessage(e,t){let i=this.safeString(t,"event"),s={logged_in:this.handleAuthenticationMessage,info:this.handleInfo,subscribed:this.handleSubscribed},r=this.safeValue(s,i);if(void 0!==r){r.call(this,e,t);return}if("update"===i||"snapshot"===i){let i=this.safeString(t,"topic");if(void 0!==i){let s=i.split(":"),r=this.safeString(s,0),a={"spot/ticker":this.handleTicker,"spot/wallet":this.handleBalance,"margin/wallet":this.handleBalance,"margin/wallets":this.handleBalance,"spot/trades":this.handleTrades,"margin/trades":this.handleTrades,"spot/order_book_updates":this.handleOrderBook,"spot/orders":this.handleOrders,"margin/orders":this.handleOrders,"spot/user_trades":this.handleMyTrades,"margin/user_trades":this.handleMyTrades},n=this.safeValue(a,r);if(void 0!==n){n.call(this,e,t);return}}}throw new n.NotSupported(this.id+" received an unsupported message: "+this.json(t))}handleSubscribed(e,t){return t}handleInfo(e,t){return t}handleAuthenticationMessage(e,t){e.resolve(t,"authenticated")}async authenticate(e={}){let t="authenticated",[i,s]=this.handleMarketTypeAndParams("authenticate",void 0,e),r=this.urls.api.ws[i],a=this.client(r),n=this.safeValue(a.subscriptions,t);if(void 0===n){let e=this.milliseconds();this.checkRequiredCredentials();let i=this.requestId(),o=this.apiKey+e.toString(),h=this.hmac(this.encode(o),this.encode(this.secret),A.Zf,"base64"),d={method:"login",id:i,api_key:this.apiKey,sign:h,nonce:e},l=this.extend(d,s);n=await this.watch(r,t,l,t),a.subscriptions[t]=n}return n}}class rv extends tR.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,cancelAllOrdersWs:!0,cancelOrderWs:!0,createMarketBuyOrderWithCostWs:!0,createMarketOrderWs:!0,createMarketOrderWithCostWs:!1,createMarketSellOrderWithCostWs:!1,createOrderWs:!0,createOrdersWs:!0,createPostOnlyOrderWs:!0,createReduceOnlyOrderWs:!0,createStopLimitOrderWs:!0,createStopLossOrderWs:!0,createStopMarketOrderWs:!1,createStopOrderWs:!0,createTakeProfitOrderWs:!0,createTriggerOrderWs:!0,editOrderWs:!0,fetchOrderWs:!0,fetchOrdersWs:!1,fetchOpenOrdersWs:!0,fetchClosedOrdersWs:!0,watchOrderBook:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0,watchMyTrades:!0,watchOHLCV:!0,watchBalance:!0,watchOrders:!0,watchLiquidations:!1,watchLiquidationsForSymbols:!1,watchMyLiquidations:!0,watchMyLiquidationsForSymbols:!0,watchPositions:!0},urls:{api:{ws:"wss://ws.gate.io/v4",spot:"wss://api.gateio.ws/ws/v4/",swap:{usdt:"wss://fx-ws.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws.gateio.ws/v4/ws/btc"},future:{usdt:"wss://fx-ws.gateio.ws/v4/ws/delivery/usdt",btc:"wss://fx-ws.gateio.ws/v4/ws/delivery/btc"},option:{usdt:"wss://op-ws.gateio.live/v4/ws/usdt",btc:"wss://op-ws.gateio.live/v4/ws/btc"}},test:{swap:{usdt:"wss://fx-ws-testnet.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws-testnet.gateio.ws/v4/ws/btc"},future:{usdt:"wss://fx-ws-testnet.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws-testnet.gateio.ws/v4/ws/btc"},option:{usdt:"wss://op-ws-testnet.gateio.live/v4/ws/usdt",btc:"wss://op-ws-testnet.gateio.live/v4/ws/btc"}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,watchTradesSubscriptions:{},watchTickerSubscriptions:{},watchOrderBookSubscriptions:{},watchTicker:{name:"tickers"},watchOrderBook:{interval:"100ms",snapshotDelay:10,snapshotMaxRetries:3,checksum:!0},watchBalance:{settle:"usdt",spot:"spot.balances"},watchPositions:{fetchPositionsSnapshot:!0,awaitPositionsSnapshot:!0}},exceptions:{ws:{exact:{1:n.BadRequest,2:n.BadRequest,4:n.AuthenticationError,6:n.AuthenticationError,11:n.AuthenticationError},broad:{}}}})}async createOrderWs(e,t,i,s,r,a={}){await this.loadMarkets();let n=this.market(e);e=n.symbol;let o=this.getTypeByMarket(n),h=this.getUrlByMarket(n);a.textIsRequired=!0;let d=this.createOrderRequest(e,t,i,s,r,a);await this.authenticate(h,o);let l=await this.requestPrivate(h,d,o+".order_place");return this.parseOrder(l,n)}async createOrdersWs(e,t={}){await this.loadMarkets();let i=this.createOrdersRequest(e,t),s=e[0],r=this.market(s.symbol);if(!0!==r.swap)throw new n.NotSupported(this.id+" createOrdersWs is not supported for swap markets");let a=this.getTypeByMarket(r),o=this.getUrlByMarket(r);await this.authenticate(o,a);let h=await this.requestPrivate(o,i,a+".order_batch_place");return this.parseOrders(h,r)}async cancelAllOrdersWs(e,t={}){await this.loadMarkets();let i=void 0===e?void 0:this.market(e),s=this.safeBool2(t,"stop","trigger"),r=this.getTypeByMarket(i),a=r+".order_cancel_cp";[a,t]=this.handleOptionAndParams(t,"cancelAllOrdersWs","channel",a);let n=this.getUrlByMarket(i);t=this.omit(t,["stop","trigger"]);let[o,h]=this.handleMarketTypeAndParams("cancelAllOrders",i,t),[d,l]="spot"===o?this.multiOrderSpotPrepareRequest(i,s,h):this.prepareRequest(i,o,h);await this.authenticate(n,r);let c=await this.requestPrivate(n,this.extend(d,l),a);return this.parseOrders(c,i)}async cancelOrderWs(e,t,i={}){await this.loadMarkets();let s=void 0===t?void 0:this.market(t),r=this.safeValueN(i,["is_stop_order","stop","trigger"],!1);i=this.omit(i,["is_stop_order","stop","trigger"]);let[a,n]=this.handleMarketTypeAndParams("cancelOrder",s,i),[o,h]="spot"===a||"margin"===a?this.spotOrderPrepareRequest(s,r,n):this.prepareRequest(s,a,n),d=this.getTypeByMarket(s),l=this.getUrlByMarket(s);await this.authenticate(l,d),o.order_id=e.toString();let c=await this.requestPrivate(l,this.extend(o,h),d+".order_cancel");return this.parseOrder(c,s)}async editOrderWs(e,t,i,s,r,a,n={}){await this.loadMarkets();let o=this.market(t),h=this.editOrderRequest(e,t,i,s,r,a,n),d=this.getTypeByMarket(o),l=this.getUrlByMarket(o);await this.authenticate(l,d);let c=await this.requestPrivate(l,h,d+".order_amend");return this.parseOrder(c,o)}async fetchOrderWs(e,t,i={}){await this.loadMarkets();let s=void 0===t?void 0:this.market(t),[r,a]=this.fetchOrderRequest(e,t,i),n=this.getTypeByMarket(s),o=this.getUrlByMarket(s);await this.authenticate(o,n);let h=await this.requestPrivate(o,this.extend(r,a),n+".order_status");return this.parseOrder(h,s)}async fetchOpenOrdersWs(e,t,i,s={}){return await this.fetchOrdersByStatusWs("open",e,t,i,s)}async fetchClosedOrdersWs(e,t,i,s={}){return await this.fetchOrdersByStatusWs("finished",e,t,i,s)}async fetchOrdersByStatusWs(e,t,i,s,r={}){let a;if(await this.loadMarkets(),void 0!==t&&(t=(a=this.market(t)).symbol,!0!==a.swap))throw new n.NotSupported(this.id+" fetchOrdersByStatusWs is only supported by swap markets. Use rest API for other markets");let[o,h]=this.prepareOrdersByStatusRequest(e,t,i,s,r),d=this.omit(o,["settle"]),l=this.getTypeByMarket(a),c=this.getUrlByMarket(a);await this.authenticate(c,l);let u=await this.requestPrivate(c,this.extend(d,h),l+".order_list"),f=this.parseOrders(u,a);return this.filterBySymbolSinceLimit(f,t,i,s)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r=s.id,[a,n]=this.handleOptionAndParams(i,"watchOrderBook","interval","100ms"),o=this.getTypeByMarket(s),h="orderbook:"+e,d=this.getUrlByMarket(s),l=[r,a];if(void 0===t&&(t=100),s.contract){let e=t.toString();l.push(e)}let c={symbol:e,limit:t};return(await this.subscribePublic(d,h,l,o+".order_book_update",n,c)).limit()}async unWatchOrderBook(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=i.id,r="100ms";[r,t]=this.handleOptionAndParams(t,"watchOrderBook","interval",r);let a=this.getTypeByMarket(i),n="orderbook:"+e,o="unsubscribe:orderbook:"+e,h=this.getUrlByMarket(i),d=[s,r],l=this.safeInteger(t,"limit",100);if(i.contract){let e=l.toString();d.push(e)}return await this.unSubscribePublicMultiple(h,"orderbook",[e],[o],[n],d,a+".order_book_update",t)}handleOrderBookSubscription(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");this.orderbooks[s]=this.orderBook({},r)}handleOrderBook(e,t){let i=this.safeString(t,"channel").split("."),s="spot"===this.safeString(i,0),r=this.safeValue(t,"result"),a=this.safeInteger(r,"U"),o=this.safeInteger(r,"u"),h=this.safeString(r,"s"),d=this.safeSymbol(h,void 0,"_",s?"spot":"contract"),l="orderbook:"+d,c=this.safeValue(this.orderbooks,d,this.orderBook({})),u=this.safeInteger(c,"nonce");if(void 0===u){let t=0;void 0!==c&&(t=c.cache.length);let i=this.handleOption("watchOrderBook","snapshotDelay",10);if(t===(s?i:0)){let t=e.subscriptions[l],i=this.safeInteger(t,"limit");this.spawn(this.loadOrderBook,e,l,d,i,{})}c.cache.push(r);return}if(!(u>=o)){if(u>=a-1)this.handleDelta(c,r);else if(delete e.subscriptions[l],delete this.orderbooks[d],this.handleOption("watchOrderBook","checksum",!0)){let t=new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(d));e.reject(t,l)}e.resolve(c,l)}}getCacheIndex(e,t){let i=this.safeInteger(e,"nonce"),s=t[0];if(i<this.safeInteger(s,"U"))return -1;for(let e=0;e<t.length;e++){let s=t[e],r=this.safeInteger(s,"U"),a=this.safeInteger(s,"u");if(i>=r-1&&i<a)return e}return t.length}handleBidAsks(e,t){for(let i=0;i<t.length;i++){let s=t[i];if(Array.isArray(s))e.storeArray(this.parseBidAsk(s));else{let t=this.safeFloat(s,"p"),i=this.safeFloat(s,"s");e.store(t,i)}}}handleDelta(e,t){let i=this.safeInteger(t,"t");e.timestamp=i,e.datetime=this.iso8601(i),e.nonce=this.safeInteger(t,"u");let s=this.safeValue(t,"b",[]),r=this.safeValue(t,"a",[]),a=e.bids,n=e.asks;this.handleBidAsks(a,s),this.handleBidAsks(n,r)}async watchTicker(e,t={}){await this.loadMarkets(),e=this.market(e).symbol,t.callerMethodName="watchTicker";let i=await this.watchTickers([e],t);return this.safeValue(i,e)}async watchTickers(e,t={}){return await this.subscribeWatchTickersAndBidsAsks(e,"watchTickers",this.extend({method:"tickers"},t))}handleTicker(e,t){this.handleTickerAndBidAsk("ticker",e,t)}async watchBidsAsks(e,t={}){return await this.subscribeWatchTickersAndBidsAsks(e,"watchBidsAsks",this.extend({method:"book_ticker"},t))}handleBidAsk(e,t){this.handleTickerAndBidAsk("bidask",e,t)}async subscribeWatchTickersAndBidsAsks(e,t,i={}){let s;await this.loadMarkets(),[t,i]=this.handleParamString(i,"callerMethodName",t),e=this.marketSymbols(e,void 0,!1);let r=this.market(e[0]),a=this.getTypeByMarket(r),n=this.marketIds(e);[s,i]=this.handleOptionAndParams(i,t,"method");let o=this.getUrlByMarket(r),h=t.indexOf("watchTicker")>=0,d=h?"ticker":"bidask",l=[];for(let t=0;t<e.length;t++){let i=e[t];l.push(d+":"+i)}let c=await this.subscribePublicMultiple(o,l,n,a+"."+s,i);if(this.newUpdates){let e={};return e[c.symbol]=c,e}let u=h?this.tickers:this.bidsasks;return this.filterByArray(u,"symbol",e,!0)}handleTickerAndBidAsk(e,t,i){let s=this.safeString(i,"channel").split("."),r="futures"===this.safeString(s,0)?"contract":"spot",a=this.safeValue(i,"result"),n=[];n=Array.isArray(a)?this.safeList(i,"result",[]):[this.safeDict(i,"result",{})];let o="ticker"===e;for(let i=0;i<n.length;i++){let s=n[i],a=this.safeString(s,"s"),h=this.safeMarket(a,void 0,"_",r),d=this.parseTicker(s,h),l=d.symbol;o?this.tickers[l]=d:this.bidsasks[l]=d;let c=e+":"+l;t.resolve(d,c)}}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e);let r=this.marketIds(e),a=this.market(e[0]),n=this.getTypeByMarket(a),o=[];for(let t=0;t<e.length;t++){let i=e[t];o.push("trades:"+i)}let h=this.getUrlByMarket(a),d=await this.subscribePublicMultiple(h,o,r,n+".trades",s);if(this.newUpdates){let e=this.safeValue(d,0),t=this.safeString(e,"symbol");i=d.getLimit(t,i)}return this.filterBySinceLimit(d,t,i,"timestamp",!0)}async unWatchTradesForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=this.marketIds(e),s=this.market(e[0]),r=this.getTypeByMarket(s),a=[],n=[];for(let t=0;t<e.length;t++){let i=e[t];a.push("trades:"+i),n.push("unsubscribe:trades:"+i)}let o=this.getUrlByMarket(s);return await this.unSubscribePublicMultiple(o,"trades",e,n,a,i,r+".trades",t)}async unWatchTrades(e,t={}){return await this.unWatchTradesForSymbols([e],t)}handleTrades(e,t){let i=this.safeValue(t,"result");Array.isArray(i)||(i=[i]);let s=this.parseTrades(i);for(let t=0;t<s.length;t++){let i=s[t],r=i.symbol,a=this.safeValue(this.trades,r);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[r]=a}a.append(i);let n="trades:"+r;e.resolve(a,n)}}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=a.id,o=this.safeString(this.timeframes,t,t),h=this.getTypeByMarket(a),d="candles:"+o+":"+a.symbol,l=this.getUrlByMarket(a),c=await this.subscribePublic(l,d,[o,n],h+".candlesticks",r);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"channel").split("."),s="spot"===this.safeString(i,0)?"spot":"contract",r=this.safeValue(t,"result");Array.isArray(r)||(r=[r]);let a={};for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"n",""),n=i.split("_"),o=this.safeString(n,0),h=this.findTimeframe(o),d=o+"_",l=i.replace(d,""),c=this.safeSymbol(l,void 0,"_",s),u=this.parseOHLCV(t);this.ohlcvs[c]=this.safeValue(this.ohlcvs,c,{});let f=this.safeValue(this.ohlcvs[c],o);if(void 0===f){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);f=new sH.TG(e),this.ohlcvs[c][h]=f}f.append(u),a[c]=o}let n=Object.keys(a);for(let t=0;t<n.length;t++){let i=n[t],s=a[i],r=this.findTimeframe(s),o="candles:"+r+":"+i,h=this.safeValue(this.ohlcvs[i],r);e.resolve(h,o)}}async watchMyTrades(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o="!all";void 0!==e&&(o=(n=this.market(e)).id),[a,s]=this.handleMarketTypeAndParams("watchMyTrades",n,s),[r,s]=this.handleSubTypeAndParams("watchMyTrades",n,s);let h=this.getSupportedMapping(a,{spot:"spot",margin:"spot",future:"futures",swap:"futures",option:"options"}),d="myTrades";void 0!==e&&(d+=":"+e);let l=this.getUrlByMarketType(a,"inverse"===r),c=[o],u=await this.subscribePrivate(l,d,c,h+".usertrades",s,"spot"!==a);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySymbolSinceLimit(u,e,t,i,!0)}handleMyTrades(e,t){let i=this.safeValue(t,"result",[]);if(0===i.length)return;let s=this.myTrades;if(void 0===s){let e=this.safeInteger(this.options,"tradesLimit",1e3);s=new sH.Pt(e),this.myTrades=s}let r=this.parseTrades(i),a={};for(let e=0;e<r.length;e++){let t=r[e];s.append(t),a[t.symbol]=!0}let n=Object.keys(a);for(let t=0;t<n.length;t++){let i="myTrades:"+n[t];e.resolve(s,i)}e.resolve(s,"myTrades")}async watchBalance(e={}){let t,i;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),[i,e]=this.handleSubTypeAndParams("watchBalance",void 0,e);let s=this.getUrlByMarketType(t,"inverse"===i),r="spot"!==t,a=this.getSupportedMapping(t,{spot:"spot",margin:"spot",future:"futures",swap:"futures",option:"options"}),n=t+".balance";return await this.subscribePrivate(s,n,void 0,a+".balances",e,r)}handleBalance(e,t){let i=this.safeValue(t,"result",[]),s=this.safeInteger(t,"time_ms");this.balance.info=i,this.balance.timestamp=s,this.balance.datetime=this.iso8601(s);for(let e=0;e<i.length;e++){let t=i[e],s=this.account(),r=this.safeString(t,"currency","USDT"),a=this.safeCurrencyCode(r);s.free=this.safeString(t,"available"),s.total=this.safeString2(t,"total","balance"),this.balance[a]=s}let r=this.safeString(t,"channel").split("."),a=this.safeString(r,0),n=this.getSupportedMapping(a,{spot:"spot",futures:"swap",options:"option"});this.balance=this.safeBalance(this.balance),e.resolve(this.balance,n+".balance")}async watchPositions(e,t,i,s={}){let r,a,n,o;await this.loadMarkets(),e=this.marketSymbols(e),this.isEmpty(e)||(r=this.getMarketFromSymbols(e)),[a,n]=this.handleMarketTypeAndParams("watchPositions",r,s),"spot"===a&&(a="swap");let h=this.getSupportedMapping(a,{future:"futures",swap:"futures",option:"options"}),d=a+":positions";this.isEmpty(e)||(d+="::"+e.join(",")),[o,n]=this.handleSubTypeAndParams("watchPositions",r,n);let l=this.getUrlByMarketType(a,"inverse"===o),c=this.client(l);this.setPositionsCache(c,a,e);let u=this.handleOption("watchPositions","fetchPositionsSnapshot",!0),f=this.handleOption("watchPositions","awaitPositionsSnapshot",!0),p=this.safeValue(this.positions,a);if(u&&f&&void 0===p)return await c.future(a+":fetchPositionsSnapshot");let m=await this.subscribePrivate(l,d,["!all"],h+".positions",n,!0);return this.newUpdates?m:this.filterBySymbolsSinceLimit(this.positions[a],e,t,i,!0)}setPositionsCache(e,t,i){if(void 0===this.positions&&(this.positions={}),!(t in this.positions)){if(this.handleOption("watchPositions","fetchPositionsSnapshot",!1)){let i=t+":fetchPositionsSnapshot";i in e.futures||(e.future(i),this.spawn(this.loadPositionsSnapshot,e,i,t))}else this.positions[t]=new sH.Hk}}async loadPositionsSnapshot(e,t,i){let s=await this.fetchPositions(void 0,{type:i});this.positions[i]=new sH.Hk;let r=this.positions[i];for(let e=0;e<s.length;e++){let t=s[e];r.append(t)}e.futures[t].resolve(r),e.resolve(r,i+":position")}handlePositions(e,t){let i=this.getMarketTypeByUrl(e.url),s=this.safeValue(t,"result",[]),r=this.positions[i],a=[];for(let e=0;e<s.length;e++){let t=s[e],i=this.parsePosition(t);a.push(i),r.append(i)}let n=this.findMessageHashes(e,i+":positions::");for(let t=0;t<n.length;t++){let i=n[t],s=i.split("::")[1].split(","),r=this.filterByArray(a,"symbol",s,!1);this.isEmpty(r)||e.resolve(r,i)}e.resolve(a,i+":positions")}async watchOrders(e,t,i,s={}){let r,a,n,o;await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol),[a,n]=this.handleMarketTypeAndParams("watchOrders",r,s);let h=this.getSupportedMapping(a,{spot:"spot",margin:"spot",future:"futures",swap:"futures",option:"options"}),d="orders",l=["!all"];void 0!==e&&(d+=":"+r.id,l=[r.id]),[o,n]=this.handleSubTypeAndParams("watchOrders",r,n);let c=this.getUrlByMarketType(a,"inverse"===o),u=await this.subscribePrivate(c,d,l,h+".orders",n,"spot"!==a);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySinceLimit(u,t,i,"timestamp",!0)}handleOrder(e,t){let i=this.safeValue(t,"result",[]),s=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new sH.Pt(s));let r=this.orders,a={},n=this.parseOrders(i);for(let e=0;e<n.length;e++){let t=n[e],i=this.safeValue(t,"info"),s=this.safeString(i,"event");if("put"===s||"update"===s)t.status="open";else if("finish"===s&&void 0===this.safeString(t,"status")){let e=this.safeInteger(i,"left");t.status=0===e?"closed":"canceled"}r.append(t);let o=t.symbol;a[this.market(o).id]=!0}let o=Object.keys(a);for(let t=0;t<o.length;t++){let i="orders:"+o[t];e.resolve(this.orders,i)}e.resolve(this.orders,"orders")}async watchMyLiquidations(e,t,i,s={}){return this.watchMyLiquidationsForSymbols([e],t,i,s)}async watchMyLiquidationsForSymbols(e,t,i,s={}){let r,a,o;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0,!0);let h=this.getMarketFromSymbols(e);[r,a]=this.handleMarketTypeAndParams("watchMyLiquidationsForSymbols",h,s);let d=this.getSupportedMapping(r,{future:"futures",swap:"futures",option:"options"});[o,a]=this.handleSubTypeAndParams("watchMyLiquidationsForSymbols",h,a);let l="inverse"===o,c=this.getUrlByMarketType(r,l),u=[],f="";if(this.isEmpty(e)){if("futures"!==d&&!l)throw new n.BadRequest(this.id+" watchMyLiquidationsForSymbols() does not support listening to all symbols, you must call watchMyLiquidations() instead for each symbol you wish to watch.");f="myLiquidations",u.push("!all")}else{if(1!==e.length)throw new n.BadRequest(this.id+" watchMyLiquidationsForSymbols() only allows one symbol at a time. To listen to several symbols call watchMyLiquidationsForSymbols() several times.");f="myLiquidations::"+e[0],u.push(h.id)}let p=await this.subscribePrivate(c,f,u,d+".liquidates",a,!0);return this.newUpdates?p:this.filterBySymbolsSinceLimit(this.liquidations,e,t,i,!0)}handleLiquidation(e,t){let i=this.safeList(t,"result",[]);for(let t=0;t<i.length;t++){let s=i[t],r=this.parseWsLiquidation(s),a=this.safeString(r,"symbol"),n=this.safeValue(this.liquidations,a);if(void 0===n){let e=this.safeInteger(this.options,"liquidationsLimit",1e3);n=new sH.I3(e)}n.append(r),this.liquidations[a]=n,e.resolve(n,"myLiquidations::"+a)}e.resolve([],"myLiquidations")}parseWsLiquidation(e,t){let i=this.safeString(e,"contract");t=this.safeMarket(i,t);let s=this.safeInteger(e,"time_ms"),a=this.safeString(e,"size"),n=this.safeString(e,"left"),o=r.A.stringAbs(r.A.stringSub(a,n));return this.safeLiquidation({info:e,symbol:this.safeSymbol(i,t),contracts:this.parseNumber(o),contractSize:this.safeNumber(t,"contractSize"),price:this.safeNumber(e,"fill_price"),baseValue:void 0,quoteValue:void 0,timestamp:s,datetime:this.iso8601(s)})}handleErrorMessage(e,t){let i=this.safeDict(t,"data"),s=this.safeDict(i,"errs"),r=this.safeDict(t,"error",s),a=this.safeString2(r,"code","label"),o=this.safeStringN(t,["id","requestId","request_id"]);if(void 0!==r){let i=this.safeString(e.subscriptions,o);try{this.throwExactlyMatchedException(this.exceptions.ws.exact,a,this.json(t)),this.throwExactlyMatchedException(this.exceptions.exact,a,this.json(s));let e=this.safeString(r,"message",this.safeString(s,"message"));throw this.throwBroadlyMatchedException(this.exceptions.ws.broad,e,this.json(t)),new n.ExchangeError(this.json(t))}catch(t){e.reject(t,i),void 0!==i&&i in e.subscriptions&&delete e.subscriptions[i]}return void 0!==o&&o in e.subscriptions&&delete e.subscriptions[o],!0}return!1}handleBalanceSubscription(e,t,i){this.balance={}}handleSubscriptionStatus(e,t){let i=this.safeString(t,"channel"),s={balance:this.handleBalanceSubscription,"spot.order_book_update":this.handleOrderBookSubscription,"futures.order_book_update":this.handleOrderBookSubscription},r=this.safeString(t,"id");if(i in s){let a=this.safeString(e.subscriptions,r),n=this.safeValue(e.subscriptions,a);s[i].call(this,e,t,n)}r in e.subscriptions&&delete e.subscriptions[r]}handleUnSubscribe(e,t){let i=this.safeString(t,"id"),s=Object.keys(e.subscriptions);for(let t=0;t<s.length;t++){let r=s[t];if(r in e.subscriptions&&r.startsWith("unsubscribe")){let t=e.subscriptions[r];if(i!==this.safeString(t,"id"))continue;let s=this.safeList(t,"messageHashes",[]),a=this.safeList(t,"subMessageHashes",[]);for(let t=0;t<s.length;t++){let i=s[t],r=a[t];this.cleanUnsubscription(e,r,i)}this.cleanCache(t)}}}cleanCache(e){let t=this.safeString(e,"topic",""),i=this.safeList(e,"symbols",[]),s=i.length;if("ohlcv"===t){let t=this.safeList(e,"symbolsAndTimeframes",[]);for(let e=0;e<t.length;e++){let i=t[e],s=this.safeString(i,0),r=this.safeString(i,1);delete this.ohlcvs[s][r]}}else if(s>0)for(let e=0;e<i.length;e++){let s=i[e];t.endsWith("trades")?delete this.trades[s]:"orderbook"===t?delete this.orderbooks[s]:"ticker"===t&&delete this.tickers[s]}else if(t.endsWith("trades")){let e=Object.keys(this.trades);for(let t=0;t<e.length;t++)delete this.trades[e[t]]}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i=this.safeString(t,"event");if("subscribe"===i){this.handleSubscriptionStatus(e,t);return}if("unsubscribe"===i){this.handleUnSubscribe(e,t);return}let s=this.safeString(t,"channel","").split("."),r=this.safeValue(s,1),a={usertrades:this.handleMyTrades,candlesticks:this.handleOHLCV,orders:this.handleOrder,positions:this.handlePositions,tickers:this.handleTicker,book_ticker:this.handleBidAsk,trades:this.handleTrades,order_book_update:this.handleOrderBook,balances:this.handleBalance,liquidates:this.handleLiquidation},n=this.safeValue(a,r);void 0!==n&&n.call(this,e,t);let o=this.safeString(t,"request_id");if("authenticated"===o){this.handleAuthenticationMessage(e,t);return}if(void 0!==o){let i=this.safeDict(t,"data"),s=this.safeValue(i,"result");!0!==this.safeBool(t,"ack")&&e.resolve(s,o)}}getUrlByMarket(e){let t=this.urls.api[e.type];return e.contract?e.linear?t.usdt:t.btc:t}getTypeByMarket(e){return e.spot?"spot":e.option?"options":"futures"}getUrlByMarketType(e,t=!1){let i=this.urls.api[e];return"swap"===e||"future"===e?t?i.btc:i.usdt:i}getMarketTypeByUrl(e){let t={"op-":"option",delivery:"future",fx:"swap"},i=Object.keys(t);for(let s=0;s<i.length;s++){let r=i[s],a=t[r];if(e.indexOf(r)>=0)return a}return"spot"}requestId(){let e=this.sum(this.safeInteger(this.options,"reqid",0),1);return this.options.reqid=e,e}async subscribePublic(e,t,i,s,r={},a){let n=this.requestId(),o=this.seconds();if(void 0!==a){let i=this.client(e);if(!(t in i.subscriptions)){let e=n.toString();i.subscriptions[e]=t}}let h=this.extend({id:n,time:o,channel:s,event:"subscribe",payload:i},r);return await this.watch(e,t,h,t,a)}async subscribePublicMultiple(e,t,i,s,r={}){let a=this.requestId(),n=this.seconds(),o=this.extend({id:a,time:n,channel:s,event:"subscribe",payload:i},r);return await this.watchMultiple(e,t,o,t)}async unSubscribePublicMultiple(e,t,i,s,r,a,n,o={}){let h=this.requestId(),d=this.seconds(),l={id:h.toString(),topic:t,unsubscribe:!0,messageHashes:s,subMessageHashes:r,symbols:i},c=this.extend({id:h,time:d,channel:n,event:"unsubscribe",payload:a},o);return await this.watchMultiple(e,s,c,s,l)}async authenticate(e,t){let i=this.client(e),s="authenticated",r=i.future(s);return void 0===this.safeValue(i.subscriptions,s)?await this.requestPrivate(e,{},t+".login",s):r}handleAuthenticationMessage(e,t){this.safeValue(e.futures,"authenticated").resolve(!0)}async requestPrivate(e,t,i,s){this.checkRequiredCredentials(),void 0===s&&(s=this.requestId().toString());let r=s,a=this.seconds(),n=["api",i,this.json(t),a.toString()].join("\n"),o=this.hmac(this.encode(n),this.encode(this.secret),A.Zf,"hex"),h={req_id:s,timestamp:a.toString(),api_key:this.apiKey,signature:o,req_param:t},d={id:s,time:a,channel:i,event:"api",payload:h};return await this.watch(e,r,d,r,s)}async subscribePrivate(e,t,i,s,r,a=!1){if(this.checkRequiredCredentials(),a){if(void 0===this.uid||0===this.uid.length)throw new n.ArgumentsRequired(this.id+" requires uid to subscribe");let e=[this.uid];i=void 0===i?e:this.arrayConcat(e,i)}let o=this.seconds(),h="subscribe",d="channel="+s+"&event="+h+"&time="+o.toString(),l=this.hmac(this.encode(d),this.encode(this.secret),A.Zf,"hex"),c={method:"api_key",KEY:this.apiKey,SIGN:l},u=this.requestId(),f={id:u,time:o,channel:s,event:h,auth:c};void 0!==i&&(f.payload=i);let p=this.client(e);if(!(t in p.subscriptions)){let e=u.toString();p.subscriptions[e]=t}let m=this.extend(f,r);return await this.watch(e,t,m,t,t)}}class rb extends rv{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"gateio"})}}class rw extends tF{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchTicker:!1,watchTickers:!1,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!0,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOHLCV:!0},hostname:"api.gemini.com",urls:{api:{ws:"wss://api.gemini.com"},test:{ws:"wss://api.sandbox.gemini.com"}}})}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="trades:"+r.symbol,n={type:"subscribe",subscriptions:[{name:"l2",symbols:[r.id.toUpperCase()]}]},o="l2:"+r.symbol,h=this.urls.api.ws+"/v2/marketdata",d=await this.watch(h,a,n,o);return this.newUpdates&&(i=d.getLimit(r.symbol,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}async watchTradesForSymbols(e,t,i,s={}){let r=await this.helperForWatchMultipleConstruct("trades",e,s);if(this.newUpdates){let e=this.safeList(r,0),t=this.safeString(e,"symbol");i=r.getLimit(t,i)}return this.filterBySinceLimit(r,t,i,"timestamp",!0)}parseWsTrade(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString2(e,"event_id","tid"),r=this.safeString(e,"price"),a=this.safeString2(e,"quantity","amount"),n=this.safeStringLower(e,"side");if(void 0===n){let t=this.safeStringLower(e,"makerSide");"bid"===t?n="sell":"ask"===t&&(n="buy")}let o=this.safeStringLower(e,"symbol"),h=this.safeSymbol(o,t);return this.safeTrade({id:s,order:void 0,info:e,timestamp:i,datetime:this.iso8601(i),symbol:h,type:void 0,side:n,takerOrMaker:void 0,price:r,cost:void 0,amount:a,fee:void 0},t)}handleTrade(e,t){let i=this.parseWsTrade(t),s=i.symbol,r=this.safeInteger(this.options,"tradesLimit",1e3),a=this.safeValue(this.trades,s);void 0===a&&(a=new sH.I3(r),this.trades[s]=a),a.append(i);let n="trades:"+s;e.resolve(a,n)}handleTrades(e,t){let i=this.safeStringLower(t,"symbol"),s=this.safeMarket(i),r=this.safeValue(t,"trades");if(void 0!==r){let t=s.symbol,i=this.safeInteger(this.options,"tradesLimit",1e3),a=this.safeValue(this.trades,t);void 0===a&&(a=new sH.I3(i),this.trades[t]=a);for(let e=0;e<r.length;e++){let t=this.parseWsTrade(r[e],s);a.append(t)}let n="trades:"+t;e.resolve(a,n)}}handleTradesForMultidata(e,t,i){if(void 0!==t){let s=this.safeInteger(this.options,"tradesLimit",1e3),r={};for(let e=0;e<t.length;e++){let a=t[e].symbol,n=this.safeMarket(a.toLowerCase()),o=n.symbol,h=this.parseWsTrade(t[e],n);h.timestamp=i,h.datetime=this.iso8601(i);let d=this.safeValue(this.trades,o);void 0===d&&(d=new sH.I3(s),this.trades[o]=d),d.append(h),r[o]=d}let a=Object.keys(r);for(let t=0;t<a.length;t++){let i=a[t],s=r[i],n="trades:"+i;e.resolve(s,n)}}}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeString(this.timeframes,t,t),o={type:"subscribe",subscriptions:[{name:"candles_"+n,symbols:[a.id.toUpperCase()]}]},h="ohlcv:"+a.symbol+":"+n,d=this.urls.api.ws+"/v2/marketdata",l=await this.watch(d,h,o,h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"type","").slice(8),s=i.indexOf("_");i=i.slice(0,s);let r=this.safeString(t,"symbol","").toLowerCase(),a=this.safeMarket(r),n=this.safeSymbol(r,a),o=this.safeValue(t,"changes",[]),h=this.findTimeframe(i);void 0===this.safeValue(this.ohlcvs,n)&&(this.ohlcvs[n]={});let d=this.safeValue(this.ohlcvs[n],h);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[n][h]=d}let l=o.length;for(let e=0;e<l;e++){let t=l-e-1,i=this.parseOHLCV(o[t],a);d.append(i)}let c="ohlcv:"+n+":"+i;return e.resolve(d,c),t}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook:"+s.symbol,a={type:"subscribe",subscriptions:[{name:"l2",symbols:[s.id.toUpperCase()]}]},n="l2:"+s.symbol,o=this.urls.api.ws+"/v2/marketdata";return(await this.watch(o,r,a,n)).limit()}handleOrderBook(e,t){let i=this.safeValue(t,"changes",[]),s=this.safeStringLower(t,"symbol"),r=this.safeMarket(s).symbol;r in this.orderbooks||(this.orderbooks[r]=this.orderBook());let a=this.orderbooks[r];for(let e=0;e<i.length;e++){let t=i[e],s=this.safeNumber(t,1),r=this.safeNumber(t,2),n="buy"===t[0]?"bids":"asks",o=a[n];o.store(s,r),a[n]=o}a.symbol=r,this.orderbooks[r]=a,e.resolve(a,"orderbook:"+r)}async watchOrderBookForSymbols(e,t,i={}){return(await this.helperForWatchMultipleConstruct("orderbook",e,i)).limit()}async watchBidsAsks(e,t={}){return await this.helperForWatchMultipleConstruct("bidsasks",e,t)}handleBidsAsksForMultidata(e,t,i,s){let a=t[0].symbol,n=this.safeMarket(a.toLowerCase()).symbol;n in this.bidsasks||(this.bidsasks[n]=this.parseTicker({}),this.bidsasks[n].symbol=n);let o=this.bidsasks[n];for(let e=0;e<t.length;e++){let i=t[e],s=this.safeString(i,"side"),a=this.safeNumber(i,"price"),n=this.safeString(i,"remaining");if(r.A.stringEq(n,"0"))continue;let h=this.parseNumber(n);"bid"===s?(o.bid=a,o.bidVolume=h):(o.ask=a,o.askVolume=h)}o.timestamp=i,o.datetime=this.iso8601(i),o.info=t,this.bidsasks[n]=o,e.resolve(o,"bidsasks:"+n)}async helperForWatchMultipleConstruct(e,t,i={}){await this.loadMarkets(),t=this.marketSymbols(t,void 0,!1,!0,!0);let s=this.market(t[0]);if(!s.spot&&!s.linear)throw new n.NotSupported(this.id+" watchMultiple supports only spot or linear-swap symbols");let r=[],a=[];for(let i=0;i<t.length;i++){let s=t[i],n=e+":"+s;r.push(n);let o=this.market(s);a.push(o.id)}let o=a.join(","),h=this.urls.api.ws+"/v1/multimarketdata?symbols="+o+"&heartbeat=true&";return"orderbook"===e?h+="trades=false&bids=true&offers=true":"bidsasks"===e?h+="trades=false&bids=true&offers=true&top_of_book=true":"trades"===e&&(h+="trades=true&bids=false&offers=false"),await this.watchMultiple(h,r,void 0)}handleOrderBookForMultidata(e,t,i,s){let r=t[0].symbol,a=this.safeMarket(r.toLowerCase()).symbol,n="orderbook:"+a;if(!(a in this.orderbooks)){let e=this.orderBook();this.orderbooks[a]=e}let o=this.orderbooks[a],h=o.bids,d=o.asks;for(let e=0;e<t.length;e++){let i=t[e],s=this.safeNumber(i,"price"),r=this.safeNumber(i,"remaining");"bid"===this.safeString(i,"side")?h.store(s,r):d.store(s,r)}o.bids=h,o.asks=d,o.symbol=a,o.nonce=s,o.timestamp=i,o.datetime=this.iso8601(i),this.orderbooks[a]=o,e.resolve(o,n)}handleL2Updates(e,t){this.handleOrderBook(e,t),this.handleTrades(e,t)}async watchOrders(e,t,i,s={}){let r=this.urls.api.ws+"/v1/order/events?eventTypeFilter=initial&eventTypeFilter=accepted&eventTypeFilter=rejected&eventTypeFilter=fill&eventTypeFilter=cancelled&eventTypeFilter=booked";await this.loadMarkets(),await this.authenticate({url:r}),void 0!==e&&(e=this.market(e).symbol);let a="orders",n=await this.watch(r,a,void 0,a);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleHeartbeat(e,t){return e.lastPong=this.milliseconds(),t}handleSubscription(e,t){return t}handleOrder(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let i=this.orders;for(let e=0;e<t.length;e++){let s=this.parseWsOrder(t[e]);i.append(s)}e.resolve(this.orders,"orders")}parseWsOrder(e,t){let i=this.safeInteger(e,"timestampms"),s=this.safeString(e,"type"),r=this.safeString(e,"symbol"),a=this.safeString(e,"order_type"),n=this.safeString(e,"behavior"),o="GTC",h=!1;return"immediate-or-cancel"===n?o="IOC":"fill-or-kill"===n?o="FOK":"maker-or-cancel"===n&&(o="PO",h=!0),this.safeOrder({id:this.safeString(e,"order_id"),clientOrderId:this.safeString(e,"client_order_id"),info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:this.parseWsOrderStatus(s),symbol:this.safeSymbol(r,t),type:this.parseWsOrderType(a),timeInForce:o,postOnly:h,side:this.safeString(e,"side"),price:this.safeNumber(e,"price"),stopPrice:void 0,average:this.safeNumber(e,"avg_execution_price"),cost:void 0,amount:this.safeNumber(e,"original_amount"),filled:this.safeNumber(e,"executed_amount"),remaining:this.safeNumber(e,"remaining_amount"),fee:void 0,trades:void 0},t)}parseWsOrderStatus(e){return this.safeString({accepted:"open",booked:"open",fill:"closed",cancelled:"canceled",cancel_rejected:"rejected",rejected:"rejected"},e,e)}parseWsOrderType(e){return this.safeString({"exchange limit":"limit","market buy":"market","market sell":"market"},e,e)}handleError(e,t){throw new n.ExchangeError(this.json(t))}handleMessage(e,t){if(Array.isArray(t)){this.handleOrder(e,t);return}"error"===this.safeString(t,"reason")&&this.handleError(e,t);let i={l2_updates:this.handleL2Updates,trade:this.handleTrade,subscription_ack:this.handleSubscription,heartbeat:this.handleHeartbeat},s=this.safeString(t,"type","");if(s.indexOf("candles")>=0){this.handleOHLCV(e,t);return}let r=this.safeValue(i,s);if(void 0!==r&&r.call(this,e,t),"update"===s){let i=this.safeInteger(t,"timestampms",this.milliseconds()),s=this.safeInteger(t,"eventId"),r=this.safeList(t,"events"),a=[],n=[],o=[],h=r.length;for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"type"),s="change"===i&&"side"in t&&this.inArray(t.side,["ask","bid"]),d=this.safeString(t,"reason");"top-of-book"===d||s&&"initial"===d&&2===h?n.push(t):s?a.push(t):"trade"===i&&o.push(r[e])}n.length>0&&this.handleBidsAsksForMultidata(e,n,i,s),a.length>0&&this.handleOrderBookForMultidata(e,a,i,s),o.length>0&&this.handleTradesForMultidata(e,o,i)}}async authenticate(e={}){let t=this.safeString(e,"url");if(void 0!==this.clients&&t in this.clients)return;this.checkRequiredCredentials();let i=this.urls.api.ws.length,s=t.indexOf("?"),r=t.length,a={request:t.slice(i,s>=0?s:r),nonce:this.nonce()},n=this.stringToBase64(this.json(a)),o=this.hmac(this.encode(n),this.encode(this.secret),A.qt,"hex");this.extendExchangeOptions({ws:{options:{headers:{}}}});let h=this.options.ws.options.headers,d={"X-GEMINI-APIKEY":this.apiKey,"X-GEMINI-PAYLOAD":n,"X-GEMINI-SIGNATURE":o};this.options.ws.options.headers=d,this.client(t),this.options.ws.options.headers=h}}class rk extends tH.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTrades:!0,watchTradesForSymbols:!1,watchPositions:!1},urls:{api:{ws:{public:"wss://stream-glb.hashkey.com/quote/ws/v1",private:"wss://stream-glb.hashkey.com/api/v1/ws"},test:{ws:{public:"wss://stream-glb.sim.hashkeydev.com/quote/ws/v1",private:"wss://stream-glb.sim.hashkeydev.com/api/v1/ws"}}}},options:{listenKeyRefreshRate:36e5,listenKey:void 0,watchBalance:{fetchBalanceSnapshot:!0,awaitBalanceSnapshot:!1}},streaming:{keepAlive:1e4}})}async wathPublic(e,t,i,s={}){let r={symbol:e.id,topic:t,event:"sub"},a=this.urls.api.ws.public;return await this.watch(a,i,this.deepExtend(r,s),i)}async watchPrivate(e){let t=await this.authenticate(),i=this.getPrivateUrl(t);return await this.watch(i,e,void 0,e)}getPrivateUrl(e){return this.urls.api.ws.private+"/"+e}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.safeString(this.timeframes,t,t),o="ohlcv:"+e+":"+t,h=await this.wathPublic(a,"kline_"+n,o,r);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=this.safeSymbol(i,s);r in this.ohlcvs||(this.ohlcvs[r]={});let a=this.safeDict(t,"params"),n=this.safeString(a,"klineType"),o=this.findTimeframe(n);if(!(o in this.ohlcvs[r])){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs[r][o]=new sH.TG(e)}let h=this.safeList(t,"data",[]),d=this.ohlcvs[r][o];for(let e=0;e<h.length;e++){let t=this.safeDict(h,e,{}),i=this.parseWsOHLCV(t,s);d.append(i)}e.resolve(d,"ohlcv:"+r+":"+o)}parseWsOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="ticker:"+(e=i.symbol);return await this.wathPublic(i,"realtimes",s,t)}handleTicker(e,t){let i=this.safeList(t,"data",[]),s=this.parseTicker(this.safeDict(i,0)),r=s.symbol;this.tickers[r]=s,e.resolve(this.tickers[r],"ticker:"+r)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="trades:"+(e=r.symbol),n=await this.wathPublic(r,"trade",a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol;if(!(r in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.trades[r]=new sH.I3(e)}let a=this.trades[r],n=this.safeList(t,"data");if(void 0!==n){n=this.sortBy(n,"t");for(let e=0;e<n.length;e++){let t=this.safeDict(n,e),i=this.parseWsTrade(t,s);a.append(i)}}e.resolve(a,"trades:"+r)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook:"+(e=s.symbol);return(await this.wathPublic(s,"depth",r,i)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r="orderbook:"+s;s in this.orderbooks||(this.orderbooks[s]=this.orderBook({}));let a=this.orderbooks[s],n=this.safeList(t,"data",[]),o=this.safeDict(n,0),h=this.safeInteger(o,"t"),d=this.parseOrderBook(o,s,h,"b","a");a.reset(d),a.nonce=this.safeInteger(t,"id"),this.orderbooks[s]=a,e.resolve(a,r)}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r="orders";void 0!==e&&(r=r+":"+(e=this.symbol(e)));let a=await this.watchPrivate(r);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleOrder(e,t){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let i=this.parseWsOrder(t),s=this.orders;s.append(i);let r="orders";e.resolve(s,r);let a=i.symbol;e.resolve(s,r+":"+a)}parseWsOrder(e,t){let i,s;let r=this.safeString(e,"s");t=this.safeMarket(r,t);let a=this.safeInteger(e,"O"),n=this.safeStringLower(e,"S");[n,i]=this.parseOrderSideAndReduceOnly(n);let o=this.parseOrderType(this.safeString(e,"o")),h=this.safeString(e,"f");return[o,h,s]=this.parseOrderTypeTimeInForceAndPostOnly(o,h),t.contract&&(o=void 0),this.safeOrder({id:this.safeString(e,"i"),clientOrderId:this.safeString(e,"c"),datetime:this.iso8601(a),timestamp:a,lastTradeTimestamp:void 0,lastUpdateTimestamp:void 0,status:this.parseOrderStatus(this.safeString(e,"X")),symbol:t.symbol,type:o,timeInForce:h,side:n,price:this.safeString(e,"p"),average:this.safeString(e,"V"),amount:this.omitZero(this.safeString(e,"q")),filled:this.safeString(e,"z"),remaining:this.safeString(e,"r"),stopPrice:void 0,triggerPrice:void 0,takeProfitPrice:void 0,stopLossPrice:void 0,cost:this.omitZero(this.safeString(e,"Z")),trades:void 0,fee:{currency:this.safeCurrencyCode(this.safeString(e,"N")),amount:this.omitZero(this.safeString(e,"n"))},reduceOnly:i,postOnly:s,info:e},t)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r="myTrades";void 0!==e&&(r+=":"+(e=this.symbol(e)));let a=await this.watchPrivate(r);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}handleMyTrade(e,t,i={}){if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let s=this.myTrades,r=this.parseWsTrade(t);s.append(r),this.myTrades=s;let a="myTrades";e.resolve(s,a);let n=r.symbol;e.resolve(s,a+":"+n)}parseWsTrade(e,t){let i;let s=this.safeString(e,"s");t=this.safeMarket(s,t);let r=this.safeInteger(e,"t"),a=this.safeBool(e,"m");return void 0!==a&&(i=a?"maker":"taker"),this.safeTrade({id:this.safeString2(e,"v","T"),timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,side:this.safeStringLower(e,"S"),price:this.safeString(e,"p"),amount:this.safeString(e,"q"),cost:void 0,takerOrMaker:i,type:void 0,order:this.safeString(e,"o"),fee:void 0,info:e},t)}async watchPositions(e,t,i,s={}){await this.loadMarkets();let r=await this.authenticate();e=this.marketSymbols(e);let a="positions",n=[];if(void 0===e)n.push(a);else for(let t=0;t<e.length;t++){let i=e[t];n.push(a+":"+i)}let o=this.getPrivateUrl(r),h=await this.watchMultiple(o,n,void 0,n);return this.newUpdates?h:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}handlePosition(e,t){void 0===this.positions&&(this.positions=new sH.Hk);let i=this.positions,s=this.parseWsPosition(t);i.append(s);let r="positions";e.resolve(s,r);let a=s.symbol;e.resolve(s,r+":"+a)}parseWsPosition(e,t){let i=this.safeString(e,"s");t=this.safeMarket(i);let s=this.safeInteger(e,"E");return this.safePosition({symbol:t.symbol,id:void 0,timestamp:s,datetime:this.iso8601(s),contracts:this.safeNumber(e,"P"),contractSize:void 0,side:this.safeStringLower(e,"S"),notional:this.safeNumber(e,"pv"),leverage:this.safeInteger(e,"v"),unrealizedPnl:this.safeNumber(e,"up"),realizedPnl:this.safeNumber(e,"r"),collateral:void 0,entryPrice:this.safeNumber(e,"p"),markPrice:void 0,liquidationPrice:this.safeNumber(e,"f"),marginMode:this.safeStringLower(e,"mt"),hedged:!0,maintenanceMargin:this.safeNumber(e,"mm"),maintenanceMarginPercentage:void 0,initialMargin:this.safeNumber(e,"m"),initialMarginPercentage:void 0,marginRatio:void 0,lastUpdateTimestamp:void 0,lastPrice:void 0,stopLossPrice:void 0,takeProfitPrice:void 0,percentage:void 0,info:e})}async watchBalance(e={}){let t,i;let s=await this.authenticate();await this.loadMarkets();let r="spot";[r,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e,r);let a="balance:"+r,n=this.getPrivateUrl(s),o=this.client(n);return this.setBalanceCache(o,r,a),[t,e]=this.handleOptionAndParams(this.options,"watchBalance","fetchBalanceSnapshot",!0),[i,e]=this.handleOptionAndParams(this.options,"watchBalance","awaitBalanceSnapshot",!1),t&&i&&await o.future(r+":fetchBalanceSnapshot"),await this.watch(n,a,void 0,a)}setBalanceCache(e,t,i){if(i in e.subscriptions)return;let s=this.safeDict(this.options,"watchBalance");if(this.safeBool(s,"fetchBalanceSnapshot",!0)){let i=t+":fetchBalanceSnapshot";i in e.futures||(e.future(i),this.spawn(this.loadBalanceSnapshot,e,i,t))}this.balance[t]={}}async loadBalanceSnapshot(e,t,i){let s=await this.fetchBalance({type:i});this.balance[i]=this.extend(s,this.safeValue(this.balance,i,{})),e.futures[t].resolve(),e.resolve(this.balance[i],"balance:"+i)}handleBalance(e,t){let i=this.safeString(t,"e"),s=this.safeList(t,"B",[]),r=this.safeDict(s,0),a="outboundAccountInfo"===i?"spot":"swap";a in this.balance||(this.balance[a]={}),this.balance[a].info=t;let n=this.safeString(r,"a"),o=this.safeCurrencyCode(n),h=this.account();h.free=this.safeString(r,"f"),h.used=this.safeString(r,"l"),this.balance[a][o]=h,this.balance[a]=this.safeBalance(this.balance[a]),e.resolve(this.balance[a],"balance:"+a)}async authenticate(e={}){let t=this.safeString(this.options,"listenKey");if(void 0!==t)return t;let i=await this.privatePostApiV1UserDataStream(e);t=this.safeString(i,"listenKey"),this.options.listenKey=t;let s=this.safeInteger(this.options,"listenKeyRefreshRate",36e5);return this.delay(s,this.keepAliveListenKey,t,e),t}async keepAliveListenKey(e,t={}){if(void 0!==e)try{await this.privatePutApiV1UserDataStream(this.extend({listenKey:e},t));let i=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);this.delay(i,this.keepAliveListenKey,e,t)}catch(s){let t=this.getPrivateUrl(e),i=this.client(t);this.options.listenKey=void 0,i.reject(s),delete this.clients[t]}}handleMessage(e,t){Array.isArray(t)&&(t=this.safeDict(t,0,{}));let i=this.safeString2(t,"topic","e");"kline"===i?this.handleOHLCV(e,t):"realtimes"===i?this.handleTicker(e,t):"trade"===i?this.handleTrades(e,t):"depth"===i?this.handleOrderBook(e,t):"contractExecutionReport"===i||"executionReport"===i?this.handleOrder(e,t):"ticketInfo"===i?this.handleMyTrade(e,t):"outboundContractPositionInfo"===i?this.handlePosition(e,t):("outboundAccountInfo"===i||"outboundContractAccountInfo"===i)&&this.handleBalance(e,t)}}class rS extends tW{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!1,watchOHLCV:!1,watchOrderBook:!0,watchOrders:!0,watchTicker:!1,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1},urls:{api:{ws:"wss://api.hollaex.com/stream"},test:{ws:"wss://api.sandbox.hollaex.com/stream"}},options:{watchBalance:{},watchOrders:{}},streaming:{ping:this.ping},exceptions:{ws:{exact:{"Bearer or HMAC authentication required":n.BadSymbol,"Error: wrong input":n.BadRequest}}}})}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s="orderbook:"+this.market(e).id;return(await this.watchPublic(s,i)).limit()}handleOrderBook(e,t){let i;let s=this.safeString(t,"symbol"),r=this.safeString(t,"topic"),a=this.safeMarket(s).symbol,n=this.safeValue(t,"data"),o=this.safeString(n,"timestamp"),h=this.parse8601(o),d=this.parseOrderBook(n,a,h);a in this.orderbooks?(i=this.orderbooks[a]).reset(d):(i=this.orderBook(d),this.orderbooks[a]=i),e.resolve(i,r+":"+s)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="trade:"+r.id,n=await this.watchPublic(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeString(t,"topic"),s=this.safeString(t,"symbol"),r=this.safeMarket(s),a=r.symbol,n=this.safeValue(this.trades,a);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e),this.trades[a]=n}let o=this.safeValue(t,"data",[]),h=this.parseTrades(o,r);for(let e=0;e<h.length;e++)n.append(h[e]);let d=i+":"+s;e.resolve(n,d),e.resolve(n,i)}async watchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a="usertrade";void 0!==e&&(e=(r=this.market(e)).symbol,a+=":"+r.id);let n=await this.watchPrivate(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleMyTrades(e,t,i){let s=this.safeString(t,"topic"),r=this.safeValue(t,"data");if(0===r.length)return;if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.I3(e)}let a=this.myTrades,n={};for(let e=0;e<r.length;e++){let t=r[e],i=this.parseTrade(t);a.append(i);let s=t.symbol;n[this.market(s).id]=!0}e.resolve(this.myTrades,s);let o=Object.keys(n);for(let t=0;t<o.length;t++){let i=s+":"+o[t];e.resolve(this.myTrades,i)}}async watchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a="order";void 0!==e&&(e=(r=this.market(e)).symbol,a+=":"+r.id);let n=await this.watchPrivate(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrder(e,t,i){let s;let r=this.safeString(t,"topic"),a=this.safeValue(t,"data",{});if(0===a.length)return;if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let n=this.orders;s=Array.isArray(a)?a:[a];let o={};for(let e=0;e<s.length;e++){let t=s[e],i=this.parseOrder(t);n.append(i);let r=t.symbol;o[this.market(r).id]=!0}e.resolve(this.orders,r);let h=Object.keys(o);for(let t=0;t<h.length;t++){let i=r+":"+h[t];e.resolve(this.orders,i)}}async watchBalance(e={}){return await this.watchPrivate("wallet",e)}handleBalance(e,t){let i=this.safeString(t,"topic"),s=this.safeValue(t,"data"),r=Object.keys(s),a=this.safeTimestamp(t,"time");this.balance.info=s,this.balance.timestamp=a,this.balance.datetime=this.iso8601(a);for(let e=0;e<r.length;e++){let t=r[e],i=t.split("_"),a=this.safeString(i,0),n=this.safeCurrencyCode(a),o=n in this.balance?this.balance[n]:this.account();o["available"===this.safeString(i,1)?"free":"total"]=this.safeString(s,t),this.balance[n]=o}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,i)}async watchPublic(e,t={}){let i=this.urls.api.ws,s=this.extend({op:"subscribe",args:[e]},t);return await this.watch(i,e,s,e)}async watchPrivate(e,t={}){this.checkRequiredCredentials();let i=this.safeString(this.options,"ws-expires");if(void 0===i){let e=parseInt((this.timeout/1e3).toString());i=(i=this.sum(this.seconds(),e)).toString(),this.options["ws-expires"]=i}let s=this.urls.api.ws,r="CONNECT/stream"+i,a=this.hmac(this.encode(r),this.encode(this.secret),l.s),n={"api-key":this.apiKey,"api-signature":a,"api-expires":i},o=s+"?"+this.urlencode(n),h=this.extend({op:"subscribe",args:[e]},t);return await this.watch(o,e,h,e)}handleErrorMessage(e,t){let i=this.safeInteger(t,"error");try{if(void 0!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,i,e)}}catch(e){if(e instanceof n.AuthenticationError)return!1}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"message")){this.handlePong(e,t);return}let i={trade:this.handleTrades,orderbook:this.handleOrderBook,order:this.handleOrder,wallet:this.handleBalance,usertrade:this.handleMyTrades},s=this.safeValue(t,"topic"),r=this.safeValue(i,s);void 0!==r&&r.call(this,e,t)}ping(e){return{op:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}onError(e,t){this.options["ws-expires"]=void 0,this.onError(e,t)}onClose(e,t){this.options["ws-expires"]=void 0,this.onClose(e,t)}}class rO extends tj.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,createOrderWs:!1,editOrderWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,cancelOrderWs:!1,cancelOrdersWs:!1,cancelAllOrdersWs:!1,fetchTradesWs:!1,fetchBalanceWs:!1,watchOrderBook:!0,watchOrders:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!0,watchBalance:!0,watchOHLCV:!0},urls:{api:{ws:{api:{spot:{public:"wss://{hostname}/ws",private:"wss://{hostname}/ws/v2",feed:"wss://{hostname}/feed"},future:{linear:{public:"wss://api.hbdm.com/linear-swap-ws",private:"wss://api.hbdm.com/linear-swap-notification"},inverse:{public:"wss://api.hbdm.com/ws",private:"wss://api.hbdm.com/notification"}},swap:{inverse:{public:"wss://api.hbdm.com/swap-ws",private:"wss://api.hbdm.com/swap-notification"},linear:{public:"wss://api.hbdm.com/linear-swap-ws",private:"wss://api.hbdm.com/linear-swap-notification"}}},"api-aws":{spot:{public:"wss://api-aws.huobi.pro/ws",private:"wss://api-aws.huobi.pro/ws/v2",feed:"wss://{hostname}/feed"},future:{linear:{public:"wss://api.hbdm.vn/linear-swap-ws",private:"wss://api.hbdm.vn/linear-swap-notification"},inverse:{public:"wss://api.hbdm.vn/ws",private:"wss://api.hbdm.vn/notification"}},swap:{linear:{public:"wss://api.hbdm.vn/linear-swap-ws",private:"wss://api.hbdm.vn/linear-swap-notification"},inverse:{public:"wss://api.hbdm.vn/swap-ws",private:"wss://api.hbdm.vn/swap-notification"}}}}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,api:"api",watchOrderBook:{maxRetries:3,checksum:!0},ws:{gunzip:!0},watchTicker:{name:"market.{marketId}.detail"}},exceptions:{ws:{exact:{"bad-request":n.BadRequest,2002:n.AuthenticationError,2021:n.BadRequest,2001:n.BadSymbol,2011:n.BadSymbol,2040:n.BadRequest,4007:n.BadRequest}}}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=this.safeValue(this.options,"watchTicker",{}),r=this.safeString(s,"name","market.{marketId}.detail");if("market.{marketId}.ticker"===r&&"spot"!==i.type)throw new n.BadRequest(this.id+" watchTicker() with name market.{marketId}.ticker is only allowed for spot markets, use market.{marketId}.detail instead");let a=this.implodeParams(r,{marketId:i.id}),o=this.getUrlByMarketType(i.type,i.linear);return await this.subscribePublic(o,e,a,void 0,t)}handleTicker(e,t){let i=this.safeValue(t,"tick",{}),s=this.safeString(t,"ch"),r=s.split("."),a=this.safeString(r,1),n=this.safeMarket(a),o=this.parseTicker(i,n),h=this.safeValue(t,"ts");o.timestamp=h,o.datetime=this.iso8601(h);let d=o.symbol;return this.tickers[d]=o,e.resolve(o,s),t}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="market."+r.id+".trade.detail",n=this.getUrlByMarketType(r.type,r.linear),o=await this.subscribePublic(n,e,a,void 0,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"tick",{}),s=this.safeValue(i,"data",{}),r=this.safeString(t,"ch"),a=r.split("."),n=this.safeString(a,1),o=this.safeMarket(n),h=o.symbol,d=this.safeValue(this.trades,h);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.I3(e),this.trades[h]=d}for(let e=0;e<s.length;e++){let t=this.parseTrade(s[e],o);d.append(t)}return e.resolve(d,r),t}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.safeString(this.timeframes,t,t),o="market."+a.id+".kline."+n,h=this.getUrlByMarketType(a.type,a.linear),d=await this.subscribePublic(h,e,o,void 0,r);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySinceLimit(d,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"ch"),s=i.split("."),r=this.safeString(s,1),a=this.safeMarket(r),n=a.symbol,o=this.safeString(s,3),h=this.findTimeframe(o);this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let d=this.safeValue(this.ohlcvs[n],h);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[n][h]=d}let l=this.safeValue(t,"tick"),c=this.parseOHLCV(l,a);d.append(c),e.resolve(d,i)}async watchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e);if(e=r.symbol,void 0===t&&(t=r.spot?150:20),!this.inArray(t,[20,150]))throw new n.ExchangeError(this.id+" watchOrderBook market accepts limits of 20 and 150 only");s=r.spot?"market."+r.id+".mbp."+t.toString():"market."+r.id+".depth.size_"+t.toString()+".high_freq";let a=this.getUrlByMarketType(r.type,r.linear,!1,!0),o=this.handleOrderBookSubscription;return r.spot||((i=this.extend(i)).data_type="incremental",o=void 0),(await this.subscribePublic(a,e,s,o,i)).limit()}handleOrderBookSnapshot(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeString(i,"messageHash"),a=this.safeString(t,"id"),o=this.safeInteger(i,"lastTimestamp");try{let h=this.orderbooks[s],d=this.safeValue(t,"data"),l=h.cache,c=this.safeValue(l,0,{}),u=this.parseOrderBook(d,s),f=this.safeValue(c,"tick"),p=this.safeInteger(f,"prevSeqNum"),m=this.safeInteger(d,"seqNum");u.nonce=m;let g=this.safeInteger(t,"ts");i.lastTimestamp=g;let y=this.safeInteger(i,"limit"),v=this.orderBook(u,y);if(e.resolve(v,a),void 0===p||m<p){let a=this.handleOption("watchOrderBook","maxRetries",3),h=this.safeInteger(i,"numAttempts",0);if(h<a){if(r in e.subscriptions){h=this.sum(h,1);let s=this.sum(1e3,o-g);i.numAttempts=h,e.subscriptions[r]=i,this.delay(s,this.watchOrderBookSnapshot,e,t,i)}}else throw new n.InvalidNonce(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+s+" in "+a.toString()+" attempts")}else{h.reset(u);for(let t=0;t<l.length;t++)this.handleOrderBookMessage(e,l[t]);h.cache=[],this.orderbooks[s]=h,e.resolve(h,r)}}catch(t){delete e.subscriptions[r],delete this.orderbooks[s],e.reject(t,r)}}async watchOrderBookSnapshot(e,t,i){let s=this.safeString(i,"messageHash"),r=this.safeString(i,"symbol"),a=this.safeInteger(i,"limit"),n=this.safeInteger(t,"ts"),o=this.safeValue(i,"params"),h=this.safeInteger(i,"numAttempts",0),d=this.market(r),l=this.getUrlByMarketType(d.type,d.linear,!1,!0),c=this.requestId(),u={id:c,messageHash:s,symbol:r,limit:a,params:o,numAttempts:h,lastTimestamp:n,method:this.handleOrderBookSnapshot};try{return(await this.watch(l,c,{req:s,id:c},c,u)).limit()}catch(t){delete e.subscriptions[s],e.reject(t,s)}}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t){let i=this.safeValue(t,"ch").split("."),s=this.safeString(i,1),r=this.safeMarket(s),a=r.symbol,o=this.orderbooks[a],h=this.safeValue(t,"tick",{}),d=this.safeInteger(h,"seqNum"),l=this.safeInteger(h,"prevSeqNum"),c=this.safeString(h,"event"),u=this.safeInteger(h,"version"),f=this.safeInteger(t,"ts");if("snapshot"===c){let e=this.parseOrderBook(h,a,f);o.reset(e),o.nonce=u}if(void 0!==l&&l>o.nonce&&this.handleOption("watchOrderBook","checksum",!0))throw new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(a));let p=r.spot&&l===o.nonce,m=r.contract&&u-1===o.nonce;if(p||m){let e=this.safeValue(h,"asks",[]),t=this.safeValue(h,"bids",[]);this.handleDeltas(o.asks,e),this.handleDeltas(o.bids,t),o.nonce=p?d:u,o.timestamp=f,o.datetime=this.iso8601(f)}}handleOrderBook(e,t){let i=this.safeString(t,"ch"),s=this.safeDict(t,"tick"),r=this.safeString(s,"event"),a=this.safeString(t,"ch").split("."),n=this.safeString(a,1),o=this.safeSymbol(n);if(!(o in this.orderbooks)){let e=this.safeString(a,3).split("_"),t=this.safeInteger(e,1);this.orderbooks[o]=this.orderBook({},t)}let h=this.orderbooks[o];void 0===r&&void 0===h.nonce?h.cache.push(t):(this.handleOrderBookMessage(e,t),e.resolve(h,i))}handleOrderBookSubscription(e,t,i){let s=this.safeString(i,"symbol"),r=this.market(s),a=this.safeInteger(i,"limit");this.orderbooks[s]=this.orderBook({},a),r.spot&&this.spawn(this.watchOrderBookSnapshot,e,t,i)}async watchMyTrades(e,t,i,s={}){let r,a,n,o,h,d;this.checkRequiredCredentials(),await this.loadMarkets();let l="*";if(void 0!==e?(e=(a=this.market(e)).symbol,r=a.type,d=a.linear?"linear":"inverse",l=a.lowercaseId):(r=this.safeString(this.options,"defaultType","spot"),r=this.safeString(s,"type",r),d=this.safeString2(this.options,"subType","defaultSubType","linear"),d=this.safeString(s,"subType",d),s=this.omit(s,["type","subType"])),"spot"===r){let e;void 0===e&&(e=this.safeString2(this.options,"watchMyTrades","mode","0"),e=this.safeString(s,"mode",e),s=this.omit(s,"mode")),o=n="trade.clearing#"+l+"#"+e}else{let e=this.getOrderChannelAndMessageHash(r,d,a,s);o=this.safeString(e,0),n=this.safeString(e,1)+":trade"}return h=await this.subscribePrivate(o,n,r,d,s),this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}getOrderChannelAndMessageHash(e,t,i,s={}){let r,a;let n=this.safeString(this.options,"orderType","orders");n=this.safeString(s,"orderType",n),s=this.omit(s,"orderType");let o=void 0!==i?i.lowercaseId.toLowerCase():void 0,h=void 0!==i?i.baseId:void 0,d=n;if(r=d,"linear"===t){let e="cross"===this.safeString(s,"margin","cross")?d+"_cross":d;r=e,void 0!==o?(r+="."+o,a=r):a=e+".*"}else"future"===e?void 0!==h?r=a=d+"."+h.toLowerCase():a=d+".*":void 0!==o?r=a=d+"."+o:a=d+".*";return[a,r]}async watchOrders(e,t,i,s={}){let r,a,n,o,h;await this.loadMarkets();let d="*";if(void 0!==e?(e=(n=this.market(e)).symbol,r=n.type,d=n.lowercaseId,a=n.linear?"linear":"inverse"):(r=this.safeString(this.options,"defaultType","spot"),r=this.safeString(s,"type",r),a=this.safeString2(this.options,"subType","defaultSubType","linear"),a=this.safeString(s,"subType",a),s=this.omit(s,["type","subType"])),"spot"===r)h=o="orders#"+d;else{let e=this.getOrderChannelAndMessageHash(r,a,n,s);h=this.safeString(e,0),o=this.safeString(e,1)}let l=await this.subscribePrivate(h,o,r,a,s);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySinceLimit(l,t,i,"timestamp",!0)}handleOrder(e,t){let i;let s=this.safeString2(t,"ch","topic"),r=this.safeValue(t,"data"),a=this.safeString(t,"contract_code");void 0===a&&(a=this.safeString(r,"symbol"));let n=this.safeMarket(a);if(void 0!==r){if("trade"===this.safeString(r,"eventType")){let e=this.parseOrderTrade(r,n),t=this.safeString(e,"order"),s=this.parseOrderStatus(this.safeString2(r,"orderStatus","status","closed")),a=this.safeString(r,"execAmt"),o=this.safeString(r,"remainAmt");i={id:t,trades:[e],status:s,symbol:n.symbol,filled:this.parseNumber(a),remaining:this.parseNumber(o)}}else i=this.parseWsOrder(r,n)}else{i=this.parseWsOrder(t,n);let r=this.safeValue(t,"trade",[]);if(r.length>0){let t={trades:r,ch:s,symbol:a},n={order:this.safeString(i,"id"),type:this.safeString(i,"type"),side:this.safeString(i,"side")};this.handleMyTrade(e,t,n)}}if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}this.orders.append(i),e.resolve(this.orders,s);let o=s.replace("."+n.lowercaseId,""),h=this.safeStringLower(n,"baseId");o=o.replace("."+h,""),e.resolve(this.orders,o)}parseWsOrder(e,t){let i;let s=this.safeInteger2(e,"lastActTime","ts"),r=this.safeInteger(e,"orderCreateTime"),a=this.safeString2(e,"contract_code","symbol");t=this.safeMarket(a,t);let n=this.safeSymbol(a,t),o=this.safeString2(e,"orderSize","volume"),h=this.parseOrderStatus(this.safeString2(e,"orderStatus","status")),d=this.safeString2(e,"orderId","order_id"),l=this.safeString2(e,"clientOrderId","client_order_id"),c=this.safeString2(e,"orderPrice","price"),u=this.safeString(e,"execAmt"),f=this.safeString(e,"type"),p=this.safeString(e,"fee");if(void 0!==p){let t=this.safeString(e,"fee_asset");i={cost:p,currency:this.safeCurrencyCode(t)}}let m=this.safeString(e,"trade_avg_price"),g=this.safeValue(e,"trade"),y=[];void 0!==f&&(y=f.split("-"));let v=this.safeStringLower(y,1);void 0===v&&(v=this.safeString(e,"order_price_type"));let b=this.safeStringLower(y,0);void 0===b&&(b=this.safeString(e,"direction"));let w=this.safeString(e,"orderValue");return this.safeOrder({info:e,id:d,clientOrderId:l,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:s,status:h,symbol:n,type:v,timeInForce:void 0,postOnly:void 0,side:b,price:c,amount:o,filled:u,remaining:void 0,cost:w,fee:i,average:m,trades:g},t)}parseOrderTrade(e,t){let i,s;let r=(t=this.safeMarket(void 0,t)).symbol,a=this.safeString(e,"tradeId"),n=this.safeString(e,"tradePrice"),o=this.safeString(e,"tradeVolume"),h=this.safeString(e,"orderId"),d=this.safeInteger(e,"tradeTime"),l=this.safeString(e,"type");if(void 0!==l){let e=l.split("-");i=e[0],l=e[1]}let c=this.safeValue(e,"aggressor");return void 0!==c&&(s=c?"taker":"maker"),this.safeTrade({info:e,timestamp:d,datetime:this.iso8601(d),symbol:r,id:a,order:h,type:l,takerOrMaker:s,side:i,price:n,amount:o,cost:void 0,fee:void 0},t)}async watchPositions(e,t,i,s={}){let r,a,n,o;await this.loadMarkets();let h="";this.isEmpty(e)||(r=this.getMarketFromSymbols(e),h="::"+e.join(",")),void 0!==r?(a=r.type,n=r.linear?"linear":"inverse"):([a,s]=this.handleMarketTypeAndParams("watchPositions",r,s),"spot"===a&&(a="future"),[n,s]=this.handleOptionAndParams(s,"watchPositions","subType",n)),e=this.marketSymbols(e),[o,s]=this.handleMarginModeAndParams("watchPositions",s,"cross");let d="linear"===n,l=this.getUrlByMarketType(a,d,!0);h=o+":positions"+h;let c=await this.subscribePrivate("cross"===o?"positions_cross.*":"positions.*",h,a,n,s);return this.newUpdates?c:this.filterBySymbolsSinceLimit(this.positions[l][o],e,t,i,!1)}handlePositions(e,t){let i=e.url,s="positions_cross"===this.safeString(t,"topic","")?"cross":"isolated";void 0===this.positions&&(this.positions={});let r=this.safeValue(this.positions,i);void 0===r&&(this.positions[i]={}),void 0===this.safeValue(r,s)&&(this.positions[i][s]=new sH.Hk);let a=this.positions[i][s],n=this.safeValue(t,"data",[]),o=[],h=this.safeInteger(t,"ts");for(let e=0;e<n.length;e++){let t=n[e],i=this.parsePosition(t);i.timestamp=h,i.datetime=this.iso8601(h),o.push(i),a.append(i)}let d=this.findMessageHashes(e,s+":positions::");for(let t=0;t<d.length;t++){let i=d[t],s=i.split("::")[1].split(","),r=this.filterByArray(o,"symbol",s,!1);this.isEmpty(r)||e.resolve(r,i)}e.resolve(o,s+":positions")}async watchBalance(e={}){let t,i,s,r,a;[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),[i,e]=this.handleSubTypeAndParams("watchBalance",void 0,e,"linear");let n=this.safeValue2(e,"isUnifiedAccount","unified",!1);if(e=this.omit(e,["isUnifiedAccount","unified"]),await this.loadMarkets(),"spot"===t){let t=this.safeString2(this.options,"watchBalance","mode","2");r=s="accounts.update#"+(t=this.safeString(e,"mode",t))}else{let o=this.safeString(e,"symbol"),h=this.safeString(e,"currency"),d=void 0!==o?this.market(o):void 0,l=void 0!==h?this.currency(h):void 0;a=this.safeString(e,"margin","cross"),e=this.omit(e,["currency","symbol","margin"]);let c="accounts";s=c,"linear"===i?n?(s=c="accounts_unify",r=c+".usdt"):(s=c="cross"===a?c+"_cross":c,"isolated"===a?void 0!==o?(s+="."+d.id,r=s):r=c+".*":void 0!==l?s=r=c+"."+l.id:r=c+".*"):"future"===t?void 0!==l?(s+="."+l.id,r=s):r=c+".*":void 0!==d?(s+="."+d.id,r=s):r=c+".*"}let o={type:t,subType:i,margin:a};return await this.subscribePrivate(r,s,t,i,e,o)}handleBalance(e,t){let i=this.safeString(t,"ch"),s=this.safeValue(t,"data",[]),r=this.safeInteger(s,"changeTime",this.safeInteger(t,"ts"));if(this.balance.timestamp=r,this.balance.datetime=this.iso8601(r),this.balance.info=s,void 0!==i){let t=this.safeString(s,"currency"),r=this.safeCurrencyCode(t),a=this.account();a.free=this.safeString(s,"available"),a.total=this.safeString(s,"balance"),this.balance[r]=a,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,i)}else{if(0===s.length)return;let i=this.safeValue(s,0,{}),r=this.safeString(t,"topic"),a=r.split("."),n=this.safeString(a,0),o=this.safeValue2(e.subscriptions,n,n+".*");void 0===o&&(n+="."+this.safeString2(i,"margin_asset","symbol").toLowerCase(),o=this.safeValue(e.subscriptions,n));let h=this.safeString(o,"type"),d=this.safeString(o,"subType");if("accounts_unify"===r){let t=this.safeString(i,"margin_asset"),s=this.safeCurrencyCode(t),r=this.safeString(i,"margin_frozen"),a=this.account();a.free=this.safeString(i,"withdraw_available"),a.used=r,this.balance[s]=a,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"accounts_unify")}else if("linear"===d){if("cross"===this.safeString(o,"margin")){let e=this.safeValue(i,"future"===h?"futures_contract_detail":"contract_detail",[]);if(e.length>0)for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString2(i,"contract_code","margin_account"),r=this.safeMarket(s),a=this.safeString(i,"margin_asset"),n=this.safeCurrency(a),o=this.safeString(r,"settle",n.code);if(void 0!==o){let e=this.account();e.free=this.safeString2(i,"margin_balance","margin_available"),e.used=this.safeString(i,"margin_frozen");let t={};t[o]=e;let s=r.symbol;this.balance[s]=this.safeBalance(t)}}}else for(let e=0;e<s.length;e++){let t=s[e],i=this.account();i.free=this.safeString(t,"margin_balance","margin_available"),i.used=this.safeString(t,"margin_frozen");let r=this.safeString2(t,"margin_asset","symbol"),a=this.safeCurrencyCode(r);this.balance[a]=i,this.balance=this.safeBalance(this.balance)}}else for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"symbol"),r=this.safeCurrencyCode(i),a=this.account();a.free=this.safeString(t,"margin_available"),a.used=this.safeString(t,"margin_frozen"),this.balance[r]=a,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,n)}}handleSubscriptionStatus(e,t){let i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){let s=this.safeValue(r,"method");if(void 0!==s){s.call(this,e,t,r);return}i in e.subscriptions&&delete e.subscriptions[i]}}handleSystemStatus(e,t){return t}handleSubject(e,t){let i=this.safeValue(t,"ch",""),s=i.split(".");if("market"===this.safeString(s,0)){let i=this.safeString(s,2),r={depth:this.handleOrderBook,mbp:this.handleOrderBook,detail:this.handleTicker,bbo:this.handleTicker,ticker:this.handleTicker,trade:this.handleTrades,kline:this.handleOHLCV},a=this.safeValue(r,i);if(void 0!==a){a.call(this,e,t);return}}let r=i.split("#"),a=this.safeString(r,0,"");if("trade.clearing"===a){this.handleMyTrade(e,t);return}if(a.indexOf("accounts.update")>=0){this.handleBalance(e,t);return}if("orders"===a){this.handleOrder(e,t);return}if("notify"===this.safeString(t,"op")){let i=this.safeString(t,"topic","");i.indexOf("orders")>=0&&this.handleOrder(e,t),i.indexOf("account")>=0&&this.handleBalance(e,t),i.indexOf("positions")>=0&&this.handlePositions(e,t)}}async pong(e,t){try{let i=this.safeInteger(t,"ping");if(void 0!==i){await e.send({pong:i});return}let s=this.safeString(t,"action");if("ping"===s){let i=this.safeValue(t,"data"),s=this.safeInteger(i,"ts");await e.send({action:"pong",data:{ts:s}});return}let r=this.safeString(t,"op");if("ping"===r){let i=this.safeInteger(t,"ts");await e.send({op:"pong",ts:i})}}catch(i){let t=new n.NetworkError(this.id+" pong failed "+this.json(i));e.reset(t)}}handlePing(e,t){this.spawn(this.pong,e,t)}handleAuthenticate(e,t){e.futures.auth.resolve(t)}handleErrorMessage(e,t){if("error"===this.safeString(t,"status")){let i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){let s=this.safeString(t,"err-code");try{throw this.throwExactlyMatchedException(this.exceptions.ws.exact,s,this.json(t)),new n.ExchangeError(this.json(t))}catch(s){let t=this.safeString(r,"messageHash");e.reject(s,t),e.reject(s,i),i in e.subscriptions&&delete e.subscriptions[i]}}return!1}let i=this.safeString2(t,"code","err-code");if(void 0!==i&&"200"!==i&&"0"!==i){let s=this.id+" "+this.json(t);try{throw this.throwExactlyMatchedException(this.exceptions.ws.exact,i,s),new n.ExchangeError(s)}catch(t){if(t instanceof n.AuthenticationError){e.reject(t,"auth");let i="auth";return i in e.subscriptions&&delete e.subscriptions[i],!1}e.reject(t)}}return t}handleMessage(e,t){if(this.handleErrorMessage(e,t)){if("id"in t){this.handleSubscriptionStatus(e,t);return}if("action"in t){let i=this.safeString(t,"action");if("ping"===i){this.handlePing(e,t);return}if("sub"===i){this.handleSubscriptionStatus(e,t);return}}if("ch"in t){if("auth"===t.ch){this.handleAuthenticate(e,t);return}this.handleSubject(e,t);return}if("op"in t){let i=this.safeString(t,"op");if("ping"===i){this.handlePing(e,t);return}if("auth"===i){this.handleAuthenticate(e,t);return}if("sub"===i){this.handleSubscriptionStatus(e,t);return}if("notify"===i){this.handleSubject(e,t);return}}"ping"in t&&this.handlePing(e,t)}}handleMyTrade(e,t,i={}){if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let s=this.myTrades,r=this.safeString(t,"ch");if(void 0!==r){let a=this.safeValue(t,"data");if(void 0!==a){let t=this.parseWsTrade(a);void 0!==this.safeString(t,"symbol")&&(s.append(t),e.resolve(this.myTrades,r))}else{let a=this.safeValue(t,"trades",[]),n=this.safeValue(t,"symbol"),o=this.market(n);for(let e=0;e<a.length;e++){let t=a[e],r=this.parseTrade(t,o);r=this.extend(r,i),s.append(r)}let h=r+":trade";e.resolve(this.myTrades,h);let d=r.replace("."+o.lowercaseId,""),l=this.safeStringLower(o,"baseId"),c=(d=d.replace("."+l,""))+":trade";e.resolve(this.myTrades,c)}}}parseWsTrade(e,t){let i,s,r;let a=this.safeSymbol(this.safeString(e,"symbol")),n=this.safeString2(e,"side","orderSide"),o=this.safeString(e,"tradeId"),h=this.safeString(e,"tradePrice"),d=this.safeString(e,"tradeVolume"),l=this.safeString(e,"orderId"),c=this.safeInteger(e,"tradeTime");t=this.market(a);let u=this.safeString(e,"orderType"),f=this.safeValue(e,"aggressor");void 0!==f&&(i=f?"taker":"maker");let p=[];void 0!==u&&(p=u.split("-"),s=this.safeString(p,1));let m=this.safeCurrencyCode(this.safeString(e,"feeCurrency"));return void 0!==m&&(r={cost:this.safeString(e,"transactFee"),currency:m}),this.safeTrade({info:e,timestamp:c,datetime:this.iso8601(c),symbol:a,id:o,order:l,type:s,takerOrMaker:i,side:n,price:h,amount:d,cost:void 0,fee:r},t)}getUrlByMarketType(e,t=!0,i=!1,s=!1){let r,a;let n=this.safeString(this.options,"api","api"),o={hostname:this.hostname};if("spot"===e)r=i?this.urls.api.ws[n].spot.private:s?this.urls.api.ws[n].spot.feed:this.urls.api.ws[n].spot.public,a=this.implodeParams(r,o);else{let s=this.urls.api.ws[n][e],r=t?s.linear:s.inverse;a=i?r.private:r.public}return a}async subscribePublic(e,t,i,s,r={}){let a=this.requestId(),n={id:a,messageHash:i,symbol:t,params:r};return void 0!==s&&(n.method=s),await this.watch(e,i,this.extend({sub:i,id:a},r),i,n)}async subscribePrivate(e,t,i,s,r={},a={}){let n;let o=this.requestId(),h=this.extend({id:o,messageHash:t,params:r},a);n="spot"===i?{action:"sub",ch:e}:{op:"sub",topic:e,cid:o};let d=this.getUrlByMarketType(i,"linear"===s,!0),l="spot"===i?this.urls.hostnames.spot:this.urls.hostnames.contract;return await this.authenticate({type:i,url:d,hostname:l}),await this.watch(d,t,this.extend(n,r),e,h)}async authenticate(e={}){let t=this.safeString(e,"url"),i=this.safeString(e,"hostname"),s=this.safeString(e,"type");if(void 0===t||void 0===i||void 0===s)throw new n.ArgumentsRequired(this.id+" authenticate requires a url, hostname and type argument");this.checkRequiredCredentials();let r="auth",a=t.replace("wss://"+i,""),o=this.client(t),h=o.future(r);if(void 0===this.safeValue(o.subscriptions,r)){let n,o;let h=this.ymdhms(this.milliseconds(),"T");n="spot"===s?{accessKey:this.apiKey,signatureMethod:"HmacSHA256",signatureVersion:"2.1",timestamp:h}:{AccessKeyId:this.apiKey,SignatureMethod:"HmacSHA256",SignatureVersion:"2",Timestamp:h},n=this.keysort(n);let d=["GET",i,a,this.urlencode(n)].join("\n"),c=this.hmac(this.encode(d),this.encode(this.secret),l.s,"base64");o="spot"===s?{params:{authType:"api",accessKey:this.apiKey,signatureMethod:"HmacSHA256",signatureVersion:"2.1",timestamp:h,signature:c},action:"req",ch:"auth"}:{op:"auth",type:"api",AccessKeyId:this.apiKey,SignatureMethod:"HmacSHA256",SignatureVersion:"2",Timestamp:h,Signature:c};let u=this.requestId();this.watch(t,r,o,r,{id:u,messageHash:r,params:e})}return await h}}class rT extends rO{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"huobi"})}}class rI extends tX{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchTradesForSymbols:!1,watchBalance:!1,watchOHLCV:!0},urls:{api:{ws:{api:{public:"wss://{hostname}/ws",private:"wss://{hostname}/ws/v2"}}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,api:"api",ws:{gunzip:!0}}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s="market."+i.id+".detail",r=this.safeString(this.options,"api","api"),a={hostname:this.hostname},n=this.implodeParams(this.urls.api.ws[r].public,a),o=this.requestId(),h={id:o,messageHash:s,symbol:e,params:t};return await this.watch(n,s,this.extend({sub:s,id:o},t),s,h)}handleTicker(e,t){let i=this.safeValue(t,"tick",{}),s=this.safeString(t,"ch"),r=s.split("."),a=this.safeString(r,1),n=this.safeMarket(a),o=this.parseTicker(i,n),h=this.safeValue(t,"ts");o.timestamp=h,o.datetime=this.iso8601(h);let d=o.symbol;return this.tickers[d]=o,e.resolve(o,s),t}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="market."+r.id+".trade.detail",n=this.safeString(this.options,"api","api"),o={hostname:this.hostname},h=this.implodeParams(this.urls.api.ws[n].public,o),d=this.requestId(),l={id:d,messageHash:a,symbol:e,params:s},c=await this.watch(h,a,this.extend({sub:a,id:d},s),a,l);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"tick",{}),s=this.safeValue(i,"data",{}),r=this.safeString(t,"ch"),a=r.split("."),n=this.safeString(a,1),o=this.safeMarket(n),h=o.symbol,d=this.safeValue(this.trades,h);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.I3(e),this.trades[h]=d}for(let e=0;e<s.length;e++){let t=this.parseTrade(s[e],o);d.append(t)}return e.resolve(d,r),t}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.safeString(this.timeframes,t,t),o="market."+a.id+".kline."+n,h=this.safeString(this.options,"api","api"),d={hostname:this.hostname},l=this.implodeParams(this.urls.api.ws[h].public,d),c=this.requestId(),u={id:c,messageHash:o,symbol:e,timeframe:t,params:r},f=await this.watch(l,o,this.extend({sub:o,id:c},r),o,u);return this.newUpdates&&(s=f.getLimit(e,s)),this.filterBySinceLimit(f,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"ch"),s=i.split("."),r=this.safeString(s,1),a=this.safeMarket(r),n=a.symbol,o=this.safeString(s,3),h=this.findTimeframe(o);this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let d=this.safeValue(this.ohlcvs[n],h);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[n][h]=d}let l=this.safeValue(t,"tick"),c=this.parseOHLCV(l,a);d.append(c),e.resolve(d,i)}async watchOrderBook(e,t,i={}){if(void 0!==t&&150!==t)throw new n.ExchangeError(this.id+" watchOrderBook accepts limit = 150 only");await this.loadMarkets();let s=this.market(e);e=s.symbol,t=void 0===t?150:t;let r="market."+s.id+".mbp."+t.toString(),a=this.safeString(this.options,"api","api"),o={hostname:this.hostname},h=this.implodeParams(this.urls.api.ws[a].public,o),d=this.requestId(),l={id:d,messageHash:r,symbol:e,limit:t,params:i,method:this.handleOrderBookSubscription};return(await this.watch(h,r,this.extend({sub:r,id:d},i),r,l)).limit()}handleOrderBookSnapshot(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeString(i,"messageHash"),a=this.orderbooks[s],n=this.safeValue(t,"data"),o=this.parseOrderBook(n,s);o.nonce=this.safeInteger(n,"seqNum"),a.reset(o);let h=a.cache;for(let t=0;t<h.length;t++)this.handleOrderBookMessage(e,h[t],a);this.orderbooks[s]=a,e.resolve(a,r)}async watchOrderBookSnapshot(e,t,i){let s=this.safeString(i,"messageHash");try{let e=this.safeString(i,"symbol"),t=this.safeInteger(i,"limit"),r=this.safeValue(i,"params"),a=this.safeString(this.options,"api","api"),n={hostname:this.hostname},o=this.implodeParams(this.urls.api.ws[a].public,n),h=this.requestId(),d={id:h,messageHash:s,symbol:e,limit:t,params:r,method:this.handleOrderBookSnapshot};return(await this.watch(o,h,{req:s,id:h},h,d)).limit()}catch(t){delete e.subscriptions[s],e.reject(t,s)}}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){let s=this.safeValue(t,"tick",{}),r=this.safeInteger(s,"seqNum");if(this.safeInteger(s,"prevSeqNum")<=i.nonce&&r>i.nonce){let e=this.safeValue(s,"asks",[]),a=this.safeValue(s,"bids",[]);this.handleDeltas(i.asks,e),this.handleDeltas(i.bids,a),i.nonce=r;let n=this.safeInteger(t,"ts");i.timestamp=n,i.datetime=this.iso8601(n)}return i}handleOrderBook(e,t){let i=this.safeString(t,"ch"),s=this.safeValue(t,"ch").split("."),r=this.safeString(s,1),a=this.safeSymbol(r),n=this.orderbooks[a];void 0===n.nonce?n.cache.push(t):(this.handleOrderBookMessage(e,t,n),e.resolve(n,i))}handleOrderBookSubscription(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");s in this.orderbooks&&delete this.orderbooks[s],this.orderbooks[s]=this.orderBook({},r),this.spawn(this.watchOrderBookSnapshot,e,t,i)}handleSubscriptionStatus(e,t){let i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){let s=this.safeValue(r,"method");if(void 0!==s)return s.call(this,e,t,r);i in e.subscriptions&&delete e.subscriptions[i]}return t}handleSystemStatus(e,t){return t}handleSubject(e,t){let i=this.safeValue(t,"ch").split(".");if("market"===this.safeString(i,0)){let s=this.safeString(i,2),r={mbp:this.handleOrderBook,detail:this.handleTicker,trade:this.handleTrades,kline:this.handleOHLCV},a=this.safeValue(r,s);void 0!==a&&a.call(this,e,t)}}async pong(e,t){await e.send({pong:this.safeInteger(t,"ping")})}handlePing(e,t){this.spawn(this.pong,e,t)}handleErrorMessage(e,t){if("error"===this.safeString(t,"status")){let i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){let s=this.safeString(t,"err-code");try{this.throwExactlyMatchedException(this.exceptions.exact,s,this.json(t))}catch(s){let t=this.safeString(r,"messageHash");e.reject(s,t),e.reject(s,i),i in e.subscriptions&&delete e.subscriptions[i]}}return!1}return t}handleMessage(e,t){this.handleErrorMessage(e,t)&&(void 0!==this.safeString(t,"id")?this.handleSubscriptionStatus(e,t):void 0!==this.safeString(t,"ch")?this.handleSubject(e,t):void 0!==this.safeString(t,"ping")&&this.handlePing(e,t))}}class rx extends t0{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,createOrderWs:!0,createOrdersWs:!0,editOrderWs:!0,watchBalance:!1,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!1,watchPosition:!1},urls:{api:{ws:{public:"wss://api.hyperliquid.xyz/ws"}},test:{ws:{public:"wss://api.hyperliquid-testnet.xyz/ws"}}},options:{},streaming:{ping:this.ping,keepAlive:2e4},exceptions:{ws:{exact:{}}}})}async createOrdersWs(e,t={}){await this.loadMarkets();let i=this.urls.api.ws.public,s=this.createOrdersRequest(e,t),r=this.wrapAsPostAction(s),a=this.safeDict(r,"request",{}),n=this.safeString(r,"requestId"),o=await this.watch(i,n,a,n),h=this.safeDict(o,"response",{}),d=this.safeDict(h,"data",{}),l=this.safeList(d,"statuses",[]);return this.parseOrders(l,void 0)}async createOrderWs(e,t,i,s,r,a={}){await this.loadMarkets();let[n,o]=this.parseCreateOrderArgs(e,t,i,s,r,a);return(await this.createOrdersWs([n],o))[0]}async editOrderWs(e,t,i,s,r,a,n={}){await this.loadMarkets();let o=this.market(t),h=this.urls.api.ws.public,d=this.editOrderRequest(e,t,i,s,r,a,n),l=this.wrapAsPostAction(d),c=this.safeDict(l,"request",{}),u=this.safeString(l,"requestId"),f=await this.watch(h,u,c,u),p=this.safeDict(f,"response",{}),m=this.safeDict(p,"data",{}),g=this.safeList(m,"statuses",[]),y=this.safeDict(g,0,{});return this.parseOrder(y,o)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook:"+(e=s.symbol),a=this.urls.api.ws.public,n={method:"subscribe",subscription:{type:"l2Book",coin:s.swap?s.base:s.id}},o=this.extend(n,i);return(await this.watch(a,r,o,r)).limit()}async unWatchOrderBook(e,t={}){await this.loadMarkets();let i=this.market(e),s="unsubscribe:orderbook:"+(e=i.symbol),r=this.urls.api.ws.public,a={id:this.nonce().toString(),method:"unsubscribe",subscription:{type:"l2Book",coin:i.swap?i.base:i.id}},n=this.extend(a,t);return await this.watch(r,s,n,s)}handleOrderBook(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"coin"),r=this.coinToMarketId(s),a=this.market(r).symbol,n=this.safeList(i,"levels",[]),o={bids:this.safeList(n,0,[]),asks:this.safeList(n,1,[])},h=this.safeInteger(i,"time"),d=this.parseOrderBook(o,a,h,"bids","asks","px","sz");if(!(a in this.orderbooks)){let e=this.orderBook(d);this.orderbooks[a]=e}let l=this.orderbooks[a];l.reset(d);let c="orderbook:"+a;e.resolve(l,c)}async watchTicker(e,t={}){return e=this.market(e).symbol,(await this.watchTickers([e],t))[e]}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0);let i="tickers",s=this.urls.api.ws.public,r=await this.watch(s,i,this.extend({method:"subscribe",subscription:{type:"webData2",user:"0x0000000000000000000000000000000000000000"}},t),i);return this.newUpdates?this.filterByArrayTickers(r,"symbol",e):this.tickers}async unWatchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0);let i="unsubscribe:tickers",s=this.urls.api.ws.public;return await this.watch(s,i,this.extend({method:"unsubscribe",subscription:{type:"webData2",user:"0x0000000000000000000000000000000000000000"}},t),i)}async watchMyTrades(e,t,i,s={}){let r;[r,s]=this.handlePublicAddress("watchMyTrades",s),await this.loadMarkets();let a="myTrades";void 0!==e&&(a+=":"+(e=this.symbol(e)));let n=this.urls.api.ws.public,o=this.extend({method:"subscribe",subscription:{type:"userFills",user:r}},s),h=await this.watch(n,a,o,a);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleWsTickers(e,t){let i=this.safeDict(t,"data",{}),s=this.safeList(i,"spotAssetCtxs",[]),r=[];for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"coin"),a=this.safeMarket(i,void 0,void 0,"spot"),n=this.parseWsTicker(t,a);r.push(n)}let a=this.safeDict(i,"meta",{}),n=this.safeList(a,"universe",[]),o=this.safeList(i,"assetCtxs",[]);for(let e=0;e<n.length;e++){let t=this.extend(this.safeDict(n,e,{}),this.safeDict(o,e,{})),i=t.name+"/USDC:USDC",s=this.safeMarket(i,void 0,void 0,"swap"),a=this.parseWsTicker(t,s);r.push(a)}let h=this.indexBy(r,"symbol");e.resolve(h,"tickers")}parseWsTicker(e,t){return this.parseTicker(e,t)}handleMyTrades(e,t){let i=this.safeDict(t,"data",{});if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let s=this.myTrades,r={},a=this.safeList(i,"fills",[]);if(0===a.length)return;for(let e=0;e<a.length;e++){let t=a[e],i=this.parseWsTrade(t);r[i.symbol]=!0,s.append(i)}let n=Object.keys(r);for(let t=0;t<n.length;t++){let i="myTrades:"+n[t];e.resolve(s,i)}e.resolve(s,"myTrades")}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="trade:"+(e=r.symbol),n=this.urls.api.ws.public,o={method:"subscribe",subscription:{type:"trades",coin:r.swap?r.base:r.id}},h=this.extend(o,s),d=await this.watch(n,a,h,a);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}async unWatchTrades(e,t={}){await this.loadMarkets();let i=this.market(e),s="unsubscribe:trade:"+(e=i.symbol),r=this.urls.api.ws.public,a={method:"unsubscribe",subscription:{type:"trades",coin:i.swap?i.base:i.id}},n=this.extend(a,t);return await this.watch(r,s,n,s)}handleTrades(e,t){let i=this.safeList(t,"data",[]),s=this.safeDict(i,0,{}),r=this.safeString(s,"coin"),a=this.coinToMarketId(r),n=this.market(a).symbol;if(!(n in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3),t=new sH.I3(e);this.trades[n]=t}let o=this.trades[n];for(let e=0;e<i.length;e++){let t=this.safeDict(i,e),s=this.parseWsTrade(t);o.append(s)}e.resolve(o,"trade:"+n)}parseWsTrade(e,t){let i=this.safeInteger(e,"time"),s=this.safeString(e,"px"),r=this.safeString(e,"sz"),a=this.safeString(e,"coin"),n=this.coinToMarketId(a),o=(t=this.safeMarket(n,void 0)).symbol,h=this.safeString(e,"tid"),d=this.safeString(e,"side");void 0!==d&&(d="A"===d?"sell":"buy");let l=this.safeString(e,"fee");return this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:o,id:h,order:void 0,type:void 0,side:d,takerOrMaker:void 0,price:s,amount:r,cost:void 0,fee:{cost:l,currency:"USDC"}},t)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.urls.api.ws.public,o={method:"subscribe",subscription:{type:"candle",coin:a.swap?a.base:a.id,interval:t}},h="candles:"+t+":"+e,d=this.extend(o,r),l=await this.watch(n,h,d,h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}async unWatchOHLCV(e,t="1m",i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r=this.urls.api.ws.public,a={method:"unsubscribe",subscription:{type:"candle",coin:s.swap?s.base:s.id,interval:t}},n="unsubscribe:candles:"+t+":"+e,o=this.extend(a,i);return await this.watch(r,n,o,n)}handleOHLCV(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"s"),r=this.coinToMarketId(s),a=this.safeSymbol(r),n=this.safeString(i,"i");if(a in this.ohlcvs||(this.ohlcvs[a]={}),!(n in this.ohlcvs[a])){let e=this.safeInteger(this.options,"OHLCVLimit",1e3),t=new sH.TG(e);this.ohlcvs[a][n]=t}let o=this.ohlcvs[a][n],h=this.parseOHLCV(i);o.append(h),e.resolve(o,"candles:"+n+":"+a)}handleWsPost(e,t){let i=this.safeDict(t,"data"),s=this.safeString(i,"id"),r=this.safeDict(i,"response"),a=this.safeDict(r,"payload");e.resolve(a,s)}async watchOrders(e,t,i,s={}){let r;await this.loadMarkets(),[r,s]=this.handlePublicAddress("watchOrders",s);let a="order";void 0!==e&&(a=a+":"+(e=this.market(e).symbol));let n=this.urls.api.ws.public,o=this.extend({method:"subscribe",subscription:{type:"orderUpdates",user:r}},s),h=await this.watch(n,a,o,a);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleOrder(e,t){let i=this.safeList(t,"data",[]);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}if(0===i.length)return;let s=this.orders,r="order",a={};for(let e=0;e<i.length;e++){let t=i[e],r=this.parseOrder(t);s.append(r),a[this.safeString(r,"symbol")]=!0}let n=Object.keys(a);for(let t=0;t<n.length;t++){let i=r+":"+n[t];e.resolve(s,i)}e.resolve(s,r)}handleErrorMessage(e,t){let i=this.safeString(t,"channel",""),s=this.safeString(t,"data","");if("error"!==i)return!1;throw new n.ExchangeError(this.id+" "+s)}handleOrderBookUnsubscription(e,t){let i=this.safeString(t,"coin"),s=this.coinToMarketId(i),r=this.safeSymbol(s),a="orderbook:"+r;this.cleanUnsubscription(e,a,"unsubscribe:"+a),r in this.orderbooks&&delete this.orderbooks[r]}handleTradesUnsubscription(e,t){let i=this.safeString(t,"coin"),s=this.coinToMarketId(i),r=this.safeSymbol(s),a="trade:"+r;this.cleanUnsubscription(e,a,"unsubscribe:"+a),r in this.trades&&delete this.trades[r]}handleTickersUnsubscription(e,t){let i="tickers";this.cleanUnsubscription(e,i,"unsubscribe:"+i);let s=Object.keys(this.tickers);for(let e=0;e<s.length;e++)delete this.tickers[s[e]]}handleOHLCVUnsubscription(e,t){let i=this.safeString(t,"coin"),s=this.coinToMarketId(i),r=this.safeSymbol(s),a=this.safeString(t,"interval"),n=this.findTimeframe(a),o="candles:"+n+":"+r;this.cleanUnsubscription(e,o,"unsubscribe:"+o),r in this.ohlcvs&&n in this.ohlcvs[r]&&delete this.ohlcvs[r][n]}handleSubscriptionResponse(e,t){let i=this.safeDict(t,"data",{});if("unsubscribe"===this.safeString(i,"method")){let t=this.safeDict(i,"subscription",{}),s=this.safeString(t,"type");"l2Book"===s?this.handleOrderBookUnsubscription(e,t):"trades"===s?this.handleTradesUnsubscription(e,t):"webData2"===s?this.handleTickersUnsubscription(e,t):"candle"===s&&this.handleOHLCVUnsubscription(e,t)}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i=this.safeString(t,"channel",""),s={pong:this.handlePong,trades:this.handleTrades,l2Book:this.handleOrderBook,candle:this.handleOHLCV,orderUpdates:this.handleOrder,userFills:this.handleMyTrades,webData2:this.handleWsTickers,post:this.handleWsPost,subscriptionResponse:this.handleSubscriptionResponse},r=this.safeValue(s,i);if(void 0!==r){r.call(this,e,t);return}let a=Object.keys(s);for(let r=0;r<a.length;r++){let n=a[r];if(i.indexOf(a[r])>=0){s[n].call(this,e,t);return}}}ping(e){return{method:"ping"}}handlePong(e,t){return e.lastPong=this.safeInteger(t,"pong"),t}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}wrapAsPostAction(e){let t=this.requestId();return{requestId:t,request:{method:"post",id:t,request:{type:"action",payload:e}}}}}class rP extends t3{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchOHLCV:!0,watchTicker:!0,watchTickers:!1,watchOrders:!0,watchTransactions:!0},urls:{test:{ws:"wss://websocket-matic.idex.io/v1"},api:{}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,watchOrderBookLimit:1e3,orderBookSubscriptions:{},token:void 0,watchOrderBook:{maxRetries:3},fetchOrderBookSnapshotMaxAttempts:10,fetchOrderBookSnapshotMaxDelay:1e4}})}async subscribe(e,t,i=!0){let s=this.urls.test.ws;return await this.watch(s,t,{method:"subscribe",subscriptions:[e]},t,i)}async subscribePrivate(e,t){let i=await this.authenticate(),s=this.urls.test.ws;return await this.watch(s,t,{method:"subscribe",token:i,subscriptions:[e]},t)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="tickers",r={name:s,markets:[i.id]},a=s+":"+i.id;return await this.subscribe(this.extend(r,t),a)}handleTicker(e,t){let i;let s=this.safeString(t,"type"),a=this.safeValue(t,"data"),n=this.safeString(a,"m"),o=this.safeSymbol(n),h=s+":"+n,d=this.safeInteger(a,"t"),l=this.safeString(a,"c"),c=this.safeString(a,"P");void 0!==c&&void 0!==l&&(i=r.Y.stringMul(l,c));let u=this.safeTicker({symbol:o,timestamp:d,datetime:this.iso8601(d),high:this.safeString(a,"h"),low:this.safeString(a,"l"),bid:this.safeString(a,"b"),bidVolume:void 0,ask:this.safeString(a,"a"),askVolume:void 0,vwap:void 0,open:this.safeString(a,"o"),close:l,last:l,previousClose:void 0,change:i,percentage:c,average:void 0,baseVolume:this.safeString(a,"v"),quoteVolume:this.safeString(a,"q"),info:t});e.resolve(u,h)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="trades",n={name:a,markets:[r.id]},o=a+":"+r.id,h=await this.subscribe(n,o);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleTrade(e,t){let i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=this.safeString(s,"m"),a=this.parseWsTrade(s);if(0===Object.keys(this.trades).length){let e=this.safeInteger(this.options,"tradesLimit");this.trades=new sH.Pt(e)}let n=this.trades;n.append(a),e.resolve(n,i+":"+r)}parseWsTrade(e,t){let i=this.safeString(e,"m"),s=this.safeSymbol(i),r=this.safeString(e,"i"),a=this.safeString(e,"p"),n=this.safeString(e,"q"),o=this.safeString(e,"Q"),h=this.safeInteger(e,"t"),d=this.safeString(e,"s"),l={currency:this.safeString(e,"a"),cost:this.safeString(e,"f")},c=this.safeString(e,"l");return this.safeTrade({info:e,timestamp:h,datetime:this.iso8601(h),symbol:s,id:r,order:void 0,type:void 0,takerOrMaker:c,side:d,price:a,amount:n,cost:o,fee:l})}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n="candles",o=this.safeString(this.timeframes,t,t),h={name:n,markets:[a.id],interval:o},d=n+":"+a.id,l=await this.subscribe(h,d);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=this.safeString(s,"m"),a=i+":"+r,n=[this.safeInteger(s,"s"),this.safeFloat(s,"o"),this.safeFloat(s,"h"),this.safeFloat(s,"l"),this.safeFloat(s,"c"),this.safeFloat(s,"v")],o=this.safeSymbol(r),h=this.safeString(s,"i"),d=this.findTimeframe(h);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let l=this.safeValue(this.ohlcvs[o],d);if(void 0===l){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new sH.TG(e),this.ohlcvs[o][d]=l}l.append(n),e.resolve(l,a)}handleSubscribeMessage(e,t){let i=this.safeValue(t,"subscriptions");for(let t=0;t<i.length;t++){let s=i[t];if("l2orderbook"===this.safeString(s,"name")){let t=this.safeValue(s,"markets");for(let i=0;i<t.length;i++){let s=t[i];if(!(s in this.safeValue(this.options,"orderBookSubscriptions",{}))){let t=this.safeSymbol(s);if(!(t in this.orderbooks)){let e=this.countedOrderBook({});this.orderbooks[t]=e}this.spawn(this.fetchOrderBookSnapshot,e,t)}}break}}}async fetchOrderBookSnapshot(e,t,i={}){let s=this.orderbooks[t],r="l2orderbook:"+this.market(t).id,a=e.subscriptions[r];a.fetchingOrderBookSnapshot||(a.startTime=this.milliseconds()),a.fetchingOrderBookSnapshot=!0;let o=this.safeInteger(this.options,"fetchOrderBookSnapshotMaxAttempts",10),h=this.safeInteger(this.options,"fetchOrderBookSnapshotMaxDelay",1e4);try{let i=this.safeInteger(a,"limit",0),d=await this.fetchRestOrderBookSafe(t,i),l=this.safeValue(s.cache,0),c=this.safeValue(l,"data"),u=this.safeInteger(c,"u"),f=s.cache.length,p=this.safeValue(s.cache,f-1),m=this.safeValue(p,"data"),g=this.safeInteger(m,"u");if(void 0!==u&&void 0!==g&&u<=d.nonce+1&&g>d.nonce){s.reset(d);for(let t=0;t<s.cache.length;t++){let i=s.cache[t],r=this.safeValue(i,"data");this.safeInteger(r,"u")>s.nonce&&this.handleOrderBookMessage(e,i,s)}a.fetchingOrderBookSnapshot=!1,e.resolve(s,r)}else{a.numAttempts=a.numAttempts+1;let i=this.milliseconds()-a.startTime,s=a.numAttempts<o,r=i<h;if(s&&r)this.delay(this.rateLimit,this.fetchOrderBookSnapshot,e,t);else{let e=s?" after "+h.toString()+" milliseconds":" in "+o.toString()+" attempts";throw new n.InvalidNonce(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+t+e)}}}catch(t){a.fetchingOrderBookSnapshot=!1,e.reject(t,r)}}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="l2orderbook",a={name:r,markets:[s.id]},n=r+":"+s.id,o={fetchingOrderBookSnapshot:!1,numAttempts:0,startTime:void 0};return void 0===t?o.limit=1e3:o.limit=t,(await this.subscribe(a,n,o)).limit()}handleOrderBook(e,t){let i=this.safeValue(t,"data"),s=this.safeString(i,"m"),r=this.safeSymbol(s),a=this.orderbooks[r];void 0===a.nonce?a.cache.push(t):this.handleOrderBookMessage(e,t,a)}handleOrderBookMessage(e,t,i){let s=this.safeString(t,"type"),r=this.safeValue(t,"data"),a=this.safeString(r,"m"),n=this.safeInteger(r,"u"),o=this.safeInteger(r,"t"),h=this.safeValue(r,"b"),d=this.safeValue(r,"a");this.handleDeltas(i.bids,h),this.handleDeltas(i.asks,d),i.nonce=n,i.timestamp=o,i.datetime=this.iso8601(o),e.resolve(i,s+":"+a)}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1),r=this.safeInteger(t,2);e.storeArray([i,s,r])}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async authenticate(e={}){let t=this.seconds();if(t-this.safeInteger(this.options,"lastAuthenticatedTime",0)>900){let i={wallet:this.walletAddress,nonce:this.uuidv1()},s=await this.privateGetWsToken(this.extend(i,e));this.options.lastAuthenticatedTime=t,this.options.token=this.safeString(s,"token")}return this.options.token}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r="orders",a={name:r},n=r;if(void 0!==e){e=this.symbol(e);let t=this.marketId(e);a.markets=[t],n=r+":"+t}let o=await this.subscribePrivate(a,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleOrder(e,t){let i;let s=this.safeString(t,"type"),a=this.safeValue(t,"data"),n=this.safeString(a,"m"),o=this.safeSymbol(n),h=this.safeInteger(a,"t"),d=this.safeValue(a,"F",[]),l=[];for(let e=0;e<d.length;e++)l.push(this.parseWsTrade(d[e]));let c=this.safeString(a,"i"),u=this.safeString(a,"s"),f=this.safeString(a,"o"),p=this.safeString(a,"q"),m=this.safeString(a,"z"),g=this.safeString(a,"v"),y=this.safeString(a,"price",g),v=this.safeString(a,"X"),b=this.parseOrderStatus(v),w={currency:void 0,cost:void 0};for(let e=0;e<l.length;e++){i=l[e],w.currency=i.fee.currency;let t=i.fee.cost;w.cost=r.Y.stringAdd(w.cost,t)}let k=this.safeInteger(i,"timestamp"),S=this.safeOrder({info:t,id:c,clientOrderId:void 0,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:k,symbol:o,type:f,side:u,price:this.parseNumber(y),stopPrice:void 0,triggerPrice:void 0,amount:this.parseNumber(p),cost:void 0,average:this.parseNumber(g),filled:this.parseNumber(m),remaining:void 0,status:b,fee:w,trades:l});if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let O=this.orders;O.append(S);let T=s+":"+n;e.resolve(O,T),e.resolve(O,s)}async watchTransactions(e,t,i,s={}){await this.loadMarkets();let r="balances",a=r;void 0!==e&&(a=r+":"+e);let n=await this.subscribePrivate({name:r},a);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp")}handleTransaction(e,t){let i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=this.safeString(s,"a"),a=this.safeCurrencyCode(r),n=this.safeString(s,"w");if(!(a in this.transactions)){let e=this.safeInteger(this.options,"transactionsLimit",1e3);this.transactions[a]=new sH.I3(e)}let o=this.transactions[a];o.append({info:t,id:void 0,currency:a,amount:void 0,address:n,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:"ok",type:void 0,updated:void 0,txid:void 0,timestamp:void 0,datetime:void 0,fee:void 0}),e.resolve(o,i+":"+r),e.resolve(o,i)}handleMessage(e,t){let i=this.safeString(t,"type"),s={tickers:this.handleTicker,trades:this.handleTrade,subscriptions:this.handleSubscribeMessage,candles:this.handleOHLCV,l2orderbook:this.handleOrderBook,balances:this.handleTransaction,orders:this.handleOrder};i in s&&s[i].call(this,e,t)}}class rM extends t4{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchTicker:!1,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!1,watchOrders:!1,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:"wss://websockets.independentreserve.com"}},options:{watchOrderBook:{checksum:!0}},streaming:{},exceptions:{}})}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=this.urls.api.ws+"?subscribe=ticker-"+r.base+"-"+r.quote,n="trades:"+e,o=await this.watch(a,n,void 0,n);return this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"Data",{}),s=this.safeString(i,"Pair"),r=this.safeSymbol(s,void 0,"-"),a=this.safeValue(this.trades,r);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[r]=a}let n=this.parseWsTrade(i);a.append(n),this.trades[r]=a,e.resolve(this.trades[r],"trades:"+r)}parseWsTrade(e,t){let i=this.safeString(e,"TradeDate"),s=this.safeString(t,"Pair");return this.safeTrade({info:e,id:this.safeString(e,"TradeGuid"),order:this.safeString(e,"orderNo"),symbol:this.safeSymbol(s,t,"-"),side:this.safeStringLower(e,"Side"),type:void 0,takerOrMaker:void 0,price:this.safeString(e,"Price"),amount:this.safeString(e,"Volume"),cost:void 0,fee:void 0,timestamp:this.parse8601(i),datetime:i},t)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol,void 0===t&&(t=100);let r=this.numberToString(t),a=this.urls.api.ws+"/orderbook/"+r+"?subscribe="+s.base+"-"+s.quote,n="orderbook:"+e+":"+r;return(await this.watch(a,n,void 0,n,{receivedSnapshot:!1})).limit()}handleOrderBook(e,t){let i=this.safeString(t,"Event"),s=this.safeString(t,"Channel").split("/"),r=this.safeString(s,1),a=this.safeString(s,2),o=this.safeString(s,3),h=this.safeCurrencyCode(a)+"/"+this.safeCurrencyCode(o),d=this.safeDict(t,"Data",{}),l="orderbook:"+h+":"+r,c=this.safeValue(e.subscriptions,l,{}),u=this.safeBool(c,"receivedSnapshot",!1),f=this.safeInteger(t,"Time");h in this.orderbooks||(this.orderbooks[h]=this.orderBook({}));let p=this.orderbooks[h];if("OrderBookSnapshot"===i){let e=this.parseOrderBook(d,h,f,"Bids","Offers","Price","Volume");p.reset(e),c.receivedSnapshot=!0}else{let e=this.safeList(d,"Offers",[]),t=this.safeList(d,"Bids",[]);this.handleDeltas(p.asks,e),this.handleDeltas(p.bids,t),p.timestamp=f,p.datetime=this.iso8601(f)}if(this.handleOption("watchOrderBook","checksum",!0)&&u){let t=p.asks,i=p.bids,s=t.length,r=i.length,a="";for(let e=0;e<10;e++)e<r&&(a=a+this.valueToChecksum(i[e][0])+this.valueToChecksum(i[e][1]));for(let e=0;e<10;e++)e<s&&(a=a+this.valueToChecksum(t[e][0])+this.valueToChecksum(t[e][1]));if(this.crc32(a,!0)!==this.safeInteger(d,"Crc32")){let t=new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(h));delete e.subscriptions[l],delete this.orderbooks[h],e.reject(t,l)}}u&&e.resolve(p,l)}valueToChecksum(e){let t=e.toFixed(8);return t=t.replace(".",""),t=this.parseNumber(t),t=this.numberToString(t)}handleDelta(e,t){let i=this.parseBidAsk(t,"Price","Volume");e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleHeartbeat(e,t){return t}handleSubscriptions(e,t){return t}handleMessage(e,t){let i=this.safeString(t,"Event"),s={Subscriptions:this.handleSubscriptions,Heartbeat:this.handleHeartbeat,Trade:this.handleTrades,OrderBookSnapshot:this.handleOrderBook,OrderBookChange:this.handleOrderBook},r=this.safeValue(s,i);if(void 0!==r){r.call(this,e,t);return}throw new n.NotSupported(this.id+" received an unsupported message: "+this.json(t))}}class rA extends ii{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!0,createOrderWs:!0,editOrderWs:!0,cancelOrderWs:!0,cancelOrdersWs:!0,cancelAllOrdersWs:!0},urls:{api:{ws:{public:"wss://ws.kraken.com",private:"wss://ws-auth.kraken.com",privateV2:"wss://ws-auth.kraken.com/v2",beta:"wss://beta-ws.kraken.com","beta-private":"wss://beta-ws-auth.kraken.com"}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,ordersLimit:1e3,symbolsByOrderId:{},watchOrderBook:{checksum:!0}},exceptions:{ws:{exact:{"Event(s) not found":n.BadRequest},broad:{"Already subscribed":n.BadRequest,"Currency pair not in ISO 4217-A3 format":n.BadSymbol,"Malformed request":n.BadRequest,"Pair field must be an array":n.BadRequest,"Pair field unsupported for this subscription type":n.BadRequest,"Pair(s) not found":n.BadSymbol,"Subscription book depth must be an integer":n.BadRequest,"Subscription depth not supported":n.BadRequest,"Subscription field must be an object":n.BadRequest,"Subscription name invalid":n.BadRequest,"Subscription object unsupported field":n.BadRequest,"Subscription ohlc interval must be an integer":n.BadRequest,"Subscription ohlc interval not supported":n.BadRequest,"Subscription ohlc requires interval":n.BadRequest,"EAccount:Invalid permissions":n.PermissionDenied,"EAuth:Account temporary disabled":n.AccountSuspended,"EAuth:Account unconfirmed":n.AuthenticationError,"EAuth:Rate limit exceeded":n.RateLimitExceeded,"EAuth:Too many requests":n.RateLimitExceeded,"EDatabase: Internal error (to be deprecated)":n.ExchangeError,"EGeneral:Internal error[:<code>]":n.ExchangeError,"EGeneral:Invalid arguments":n.BadRequest,"EOrder:Cannot open opposing position":n.InvalidOrder,"EOrder:Cannot open position":n.InvalidOrder,"EOrder:Insufficient funds (insufficient user funds)":n.InsufficientFunds,"EOrder:Insufficient margin (exchange does not have sufficient funds to allow margin trading)":n.InsufficientFunds,"EOrder:Invalid price":n.InvalidOrder,"EOrder:Margin allowance exceeded":n.InvalidOrder,"EOrder:Margin level too low":n.InvalidOrder,"EOrder:Margin position size exceeded (client would exceed the maximum position size for this pair)":n.InvalidOrder,"EOrder:Order minimum not met (volume too low)":n.InvalidOrder,"EOrder:Orders limit exceeded":n.InvalidOrder,"EOrder:Positions limit exceeded":n.InvalidOrder,"EOrder:Rate limit exceeded":n.RateLimitExceeded,"EOrder:Scheduled orders limit exceeded":n.InvalidOrder,"EOrder:Unknown position":n.OrderNotFound,"EOrder:Unknown order":n.OrderNotFound,"EOrder:Invalid order":n.InvalidOrder,"EService:Deadline elapsed":n.ExchangeNotAvailable,"EService:Market in cancel_only mode":n.NotSupported,"EService:Market in limit_only mode":n.NotSupported,"EService:Market in post_only mode":n.NotSupported,"EService:Unavailable":n.ExchangeNotAvailable,"ETrade:Invalid request":n.BadRequest}}}})}async createOrderWs(e,t,i,s,r,a={}){await this.loadMarkets();let n=await this.authenticate(),o=this.market(e),h=this.urls.api.ws.private,d=this.requestId(),l={event:"addOrder",token:n,reqid:d,ordertype:t,type:i,pair:o.wsId,volume:this.amountToPrecision(e,s)};return[l,a]=this.orderRequest("createOrderWs",e,t,l,s,r,a),await this.watch(h,d,this.extend(l,a),d)}handleCreateEditOrder(e,t){let i=this.parseOrder(t),s=this.safeValue(t,"reqid");e.resolve(i,s)}async editOrderWs(e,t,i,s,r,a,n={}){await this.loadMarkets();let o=await this.authenticate(),h=this.market(t),d=this.urls.api.ws.private,l=this.requestId(),c={event:"editOrder",token:o,reqid:l,orderid:e,pair:h.wsId};return void 0!==r&&(c.volume=this.amountToPrecision(t,r)),[c,n]=this.orderRequest("editOrderWs",t,i,c,r,a,n),await this.watch(d,l,this.extend(c,n),l)}async cancelOrdersWs(e,t,i={}){await this.loadMarkets();let s=await this.authenticate(),r=this.urls.api.ws.private,a=this.requestId();return await this.watch(r,a,this.extend({event:"cancelOrder",token:s,reqid:a,txid:e},i),a)}async cancelOrderWs(e,t,i={}){await this.loadMarkets();let s=await this.authenticate(),r=this.urls.api.ws.private,a=this.requestId(),n=this.safeValue2(i,"userref","clientOrderId",e);return i=this.omit(i,["userref","clientOrderId"]),await this.watch(r,a,this.extend({event:"cancelOrder",token:s,reqid:a,txid:[n]},i),a)}handleCancelOrder(e,t){let i=this.safeValue(t,"reqid");e.resolve(t,i)}async cancelAllOrdersWs(e,t={}){if(void 0!==e)throw new n.NotSupported(this.id+" cancelAllOrdersWs () does not support cancelling orders in a specific market.");await this.loadMarkets();let i=await this.authenticate(),s=this.urls.api.ws.private,r=this.requestId();return await this.watch(s,r,this.extend({event:"cancelAll",token:i,reqid:r},t),r)}handleCancelAllOrders(e,t){let i=this.safeValue(t,"reqid");e.resolve(t,i)}handleTicker(e,t,i){let s;let a=t[3],n=this.safeValue(this.options.marketsByWsName,a).symbol,o=this.getMessageHash("ticker",void 0,n),h=t[1],d=this.safeString(h.p,0),l=this.safeString(h.v,0);void 0!==l&&void 0!==d&&(s=r.Y.stringMul(l,d));let c=this.safeString(h.c,0),u=this.safeTicker({symbol:n,timestamp:void 0,datetime:void 0,high:this.safeString(h.h,0),low:this.safeString(h.l,0),bid:this.safeString(h.b,0),bidVolume:this.safeString(h.b,2),ask:this.safeString(h.a,0),askVolume:this.safeString(h.a,2),vwap:d,open:this.safeString(h.o,0),close:c,last:c,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:l,quoteVolume:s,info:h});this.tickers[n]=u,e.resolve(u,o)}handleTrades(e,t,i){let s=this.safeString(t,3),r=this.safeString(t,2),a=this.safeValue(this.options.marketsByWsName,s),n=a.symbol,o=this.getMessageHash(r,void 0,n),h=this.safeValue(this.trades,n);if(void 0===h){let e=this.safeInteger(this.options,"tradesLimit",1e3);h=new sH.I3(e),this.trades[n]=h}let d=this.safeValue(t,1,[]),l=this.parseTrades(d,a);for(let e=0;e<l.length;e++)h.append(l[e]);e.resolve(h,o)}handleOHLCV(e,t,i){let s=this.safeValue(i,"subscription",{}),r=this.safeInteger(s,"interval"),a=this.safeString(s,"name"),n=this.safeString(t,3),o=this.safeValue(this.options.marketsByWsName,n).symbol,h=this.findTimeframe(r),d=this.parseTimeframe(h);if(void 0!==h){let i=this.safeValue(t,1),s=a+":"+h+":"+n,r=this.safeFloat(i,1);r-=d;let l=[this.parseToInt(1e3*r),this.safeFloat(i,2),this.safeFloat(i,3),this.safeFloat(i,4),this.safeFloat(i,5),this.safeFloat(i,7)];this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let c=this.safeValue(this.ohlcvs[o],h);if(void 0===c){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new sH.TG(e),this.ohlcvs[o][h]=c}c.append(l),e.resolve(c,s)}}requestId(){let e=this.sum(this.safeInteger(this.options,"reqid",0),1);return this.options.reqid=e,e}async watchPublic(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=this.safeValue(s.info,"wsname"),a=e+":"+r,n=this.urls.api.ws.public,o=this.requestId(),h=this.deepExtend({event:"subscribe",reqid:o,pair:[r],subscription:{name:e}},i);return await this.watch(n,a,h,a)}async watchTicker(e,t={}){return await this.loadMarkets(),e=this.symbol(e),(await this.watchTickers([e],t))[e]}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=await this.watchMultiHelper("ticker","ticker",e,void 0,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.tickers,"symbol",e)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=await this.watchMultiHelper("bidask","spread",e,void 0,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t,i){let s=this.parseWsBidAsk(t),r=s.symbol;this.bidsasks[r]=s;let a=this.getMessageHash("bidask",void 0,r);e.resolve(s,a)}parseWsBidAsk(e,t){let i=this.safeList(e,1,[]),s=this.safeString(e,3);t=this.safeValue(this.options.marketsByWsName,s);let r=this.safeString(t,"symbol"),a=1e3*this.parseToInt(this.safeInteger(i,2));return this.safeTicker({symbol:r,timestamp:a,datetime:this.iso8601(a),ask:this.safeString(i,1),askVolume:this.safeString(i,4),bid:this.safeString(i,0),bidVolume:this.safeString(i,3),info:e},t)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){let r=await this.watchMultiHelper("trade","trade",e,void 0,s);if(this.newUpdates){let e=this.safeList(r,0),t=this.safeString(e,"symbol");i=r.getLimit(t,i)}return this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){let s={};if(void 0!==t){if(this.inArray(t,[10,25,100,500,1e3]))s.subscription={depth:t};else throw new n.NotSupported(this.id+" watchOrderBook accepts limit values of 10, 25, 100, 500 and 1000 only")}return(await this.watchMultiHelper("orderbook","book",e,{limit:t},this.extend(s,i))).limit()}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a="ohlc",n=this.market(e);e=n.symbol;let o=this.safeValue(n.info,"wsname"),h=a+":"+t+":"+o,d=this.urls.api.ws.public,l={event:"subscribe",reqid:this.requestId(),pair:[o],subscription:{name:a,interval:this.safeValue(this.timeframes,t,t)}},c=this.deepExtend(l,r),u=await this.watch(d,h,c,h);return this.newUpdates&&(s=u.getLimit(e,s)),this.filterBySinceLimit(u,i,s,0,!0)}async loadMarkets(e=!1,t={}){let i=await super.loadMarkets(e,t),s=this.safeValue(this.options,"marketsByWsName");if(void 0===s||e){s={};for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e],i=this.markets[t];if(i.darkpool){let e=this.safeValue(i,"info",{}),t=this.safeString(e,"altname");s[t.slice(0,3)+"/"+t.slice(3)]=i}else{let e=this.safeValue(i,"info",{});s[this.safeString(e,"wsname")]=i}}this.options.marketsByWsName=s}return i}async watchHeartbeat(e={}){await this.loadMarkets();let t=this.urls.api.ws.public;return await this.watch(t,"heartbeat")}handleHeartbeat(e,t){let i=this.safeString(t,"event");e.resolve(t,i)}handleOrderBook(e,t,i){let s;let r=t.length,a=t[r-1],o=t[r-2].split("-"),h=this.safeInteger(o,1,10),d=this.safeValue(this.options.marketsByWsName,a).symbol,l=this.getMessageHash("orderbook",void 0,d);if("as"in t[1]){this.orderbooks[d]=this.orderBook({},h);let i=this.orderbooks[d],r={as:"asks",bs:"bids"},a=Object.keys(r);for(let e=0;e<a.length;e++){let n=a[e],o=i[r[n]],h=this.safeValue(t[1],n,[]);s=this.customHandleDeltas(o,h,s)}i.symbol=d,i.timestamp=s,i.datetime=this.iso8601(s),e.resolve(i,l)}else{let i,a,o,h;let c=this.orderbooks[d];5===r?(i=this.safeValue(t[1],"a",[]),a=this.safeValue(t[2],"b",[]),o=this.safeInteger(t[1],"c"),o=this.safeInteger(t[2],"c",o)):(o=this.safeInteger(t[1],"c"),"a"in t[1]?i=this.safeValue(t[1],"a",[]):a=this.safeValue(t[1],"b",[]));let u=c.asks,f=c.bids;if(void 0!==i&&(s=this.customHandleDeltas(u,i,s),h=this.safeValue(i,0)),void 0!==a&&(s=this.customHandleDeltas(f,a,s),h=this.safeValue(a,0)),c.limit(),this.handleOption("watchOrderBook","checksum",!0)){let t=this.safeString(h,0),i=this.safeString(h,1),s=t.split("."),r=i.split("."),a=s[1].length-0,c=r[1].length-0,p=[];if(void 0!==o){for(let e=0;e<10;e++){let t=this.formatNumber(u[e][0],a)+this.formatNumber(u[e][1],c);p.push(t)}for(let e=0;e<10;e++){let t=this.formatNumber(f[e][0],a)+this.formatNumber(f[e][1],c);p.push(t)}}let m=p.join("");if(this.crc32(m,!1)!==o){let t=new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(d));delete e.subscriptions[l],delete this.orderbooks[d],e.reject(t,l);return}}c.symbol=d,c.timestamp=s,c.datetime=this.iso8601(s),e.resolve(c,l)}}formatNumber(e,t){let i=this.numberToString(e).split("."),s=this.safeString(i,0)+this.safeString(i,1,"").padEnd(t,"0"),r=0;for(;"0"===s[r];)r+=1;return r>0?s.slice(r):s}customHandleDeltas(e,t,i){for(let s=0;s<t.length;s++){let r=t[s],a=this.parseNumber(r[0]),n=this.parseNumber(r[1]);i=Math.max(i||0,this.parseToInt(1e3*parseFloat(r[2]))),e.store(a,n)}return i}handleSystemStatus(e,t){return t}async authenticate(e={}){let t=this.urls.api.ws.private,i=this.client(t),s="authenticated",r=this.safeValue(i.subscriptions,s);if(void 0===r){let t=await this.privatePostGetWebSocketsToken(e);r=this.safeValue(t,"result"),i.subscriptions[s]=r}return this.safeString(r,"token")}async watchPrivate(e,t,i,s,r={}){await this.loadMarkets();let a=await this.authenticate(),n=e;void 0!==t&&(n+=":"+(t=this.symbol(t)));let o=this.urls.api.ws.private,h=this.requestId(),d=this.deepExtend({event:"subscribe",reqid:h,subscription:{name:e,token:a}},r),l=await this.watch(o,n,d,e);return this.newUpdates&&(s=l.getLimit(t,s)),this.filterBySymbolSinceLimit(l,t,i,s)}async watchMyTrades(e,t,i,s={}){return await this.watchPrivate("ownTrades",e,t,i,s)}handleMyTrades(e,t,i){let s=this.safeValue(t,0,[]);if(s.length>0){if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.I3(e)}let t=this.myTrades,i={};for(let e=0;e<s.length;e++){let r=this.safeValue(s,e,{}),a=Object.keys(r);for(let e=0;e<a.length;e++){let s=a[e],n=r[s],o=this.parseWsTrade(this.extend({id:s},n));t.append(o),i[o.symbol]=!0}}let r="ownTrades";e.resolve(this.myTrades,r);let a=Object.keys(i);for(let t=0;t<a.length;t++){let i=r+":"+a[t];e.resolve(this.myTrades,i)}}}parseWsTrade(e,t){let i,s,r;let a=this.safeString(e,"pair");t=this.safeValue(this.options.marketsByWsName,a,t);let n=this.safeString(e,"ordertxid"),o=this.safeString2(e,"id","postxid"),h=this.safeTimestamp(e,"time"),d=this.safeString(e,"type"),l=this.safeString(e,"ordertype"),c=this.safeFloat(e,"price"),u=this.safeFloat(e,"vol");if("fee"in e){let i;void 0!==t&&(i=t.quote),r={cost:this.safeFloat(e,"fee"),currency:i}}return void 0!==t&&(i=t.symbol),void 0!==c&&void 0!==u&&(s=c*u),{id:o,order:n,info:e,timestamp:h,datetime:this.iso8601(h),symbol:i,type:l,side:d,takerOrMaker:void 0,price:c,amount:u,cost:s,fee:r}}async watchOrders(e,t,i,s={}){return await this.watchPrivate("openOrders",e,t,i,s)}handleOrders(e,t,i){let s=this.safeValue(t,0,[]);if(s.length>0){let t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new sH.Pt(t));let i=this.orders,r={};for(let e=0;e<s.length;e++){let a=this.safeValue(s,e,{}),n=Object.keys(a);for(let e=0;e<n.length;e++){let s;let o=n[e],h=a[o],d=this.parseWsOrder(h);d.id=o;let l=this.safeValue(this.options,"symbolsByOrderId",{});void 0!==d.symbol?(s=d.symbol,l[o]=s,this.options.symbolsByOrderId=l):s=this.safeString(l,o);let c=this.safeValue(i.hashmap,s),u=this.safeValue(c,o),f=d;if(void 0!==u){let e=this.extend(u.info,f.info);(f=this.parseWsOrder(e)).id=o}if(i.length===t&&void 0===u){let e=i[0];e.id in l&&delete l[e.id]}i.append(f),r[s]=!0}}let a="openOrders";e.resolve(this.orders,a);let n=Object.keys(r);for(let t=0;t<n.length;t++){let i=a+":"+n[t];e.resolve(this.orders,i)}}}parseWsOrder(e,t){let i,s,a,n,o,h,d,l;let c=this.safeValue(e,"descr",{}),u=this.safeString(c,"order");if(void 0!==u){let e=u.split(" ");i=this.safeString(e,0),o=this.safeString(e,1),a=this.safeString(e,2),s=this.safeString(e,4),n=this.safeString(e,5)}i=this.safeString(c,"type",i),s=this.safeString(c,"ordertype",s),a=this.safeString(c,"pair",a),t=this.safeValue(this.options.marketsByWsName,a,t);let f=this.safeTimestamp(e,"opentm");o=this.safeString(e,"vol",o);let p=this.safeString(e,"vol_exec"),m=this.safeString(e,"cost");(void 0===(n=this.safeString(c,"price",n))||r.Y.stringEq(n,"0.0"))&&(n=this.safeString(c,"price2")),(void 0===n||r.Y.stringEq(n,"0.0"))&&(n=this.safeString(e,"price",n));let g=this.safeString2(e,"avg_price","price");if(void 0!==t&&(h=t.symbol,"fee"in e)){let i=e.oflags;d={cost:this.safeString(e,"fee"),rate:void 0},i.indexOf("fciq")>=0?d.currency=t.quote:i.indexOf("fcib")>=0&&(d.currency=t.base)}let y=this.parseOrderStatus(this.safeString(e,"status")),v=this.safeString(e,"id");if(void 0===v){let t=this.safeValue(e,"txid");v=this.safeString(t,0)}let b=this.safeString(e,"userref"),w=this.safeValue(e,"trades");void 0!==w&&(l=this.parseTrades(w,t,void 0,void 0,{order:v}));let k=this.safeNumber(e,"stopprice");return this.safeOrder({id:v,clientOrderId:b,info:e,timestamp:f,datetime:this.iso8601(f),lastTradeTimestamp:void 0,status:y,symbol:h,type:s,timeInForce:void 0,postOnly:void 0,side:i,price:n,stopPrice:k,triggerPrice:k,cost:m,amount:o,filled:p,average:g,remaining:void 0,fee:d,trades:l})}async watchMultiHelper(e,t,i,s,r={}){await this.loadMarkets(),i=this.marketSymbols(i,void 0,!1,!0,!1);let a=[];for(let t=0;t<i.length;t++)a.push(this.getMessageHash(e,void 0,this.symbol(i[t])));let n=this.marketsForSymbols(i),o=[];for(let e=0;e<n.length;e++){let t=this.safeString(n[e].info,"wsname");o.push(t)}let h={event:"subscribe",reqid:this.requestId(),pair:o,subscription:{name:t}},d=this.urls.api.ws.public;return await this.watchMultiple(d,a,this.deepExtend(h,r),a,s)}async watchBalance(e={}){await this.loadMarkets();let t=await this.authenticate(),i="balances",s=this.urls.api.ws.privateV2,r=this.requestId(),a=this.deepExtend({method:"subscribe",req_id:r,params:{channel:"balances",token:t}},e);return await this.watch(s,i,a,i)}handleBalance(e,t){let i=this.safeList(t,"data",[]),s={info:t};for(let e=0;e<i.length;e++){let t=this.safeString(i[e],"asset"),r=this.safeCurrencyCode(t),a=this.account(),n=this.safeString(i[e],"balance");a.total=n,s[r]=a}let r="spot",a=this.safeBalance(s),n=this.safeValue(this.balance,r,{}),o=this.deepExtend(n,a);this.balance[r]=this.safeBalance(o);let h=this.safeString(t,"channel");e.resolve(this.balance[r],h)}getMessageHash(e,t,i){let s=e;return void 0!==i?s+="@"+i:s+="s",void 0!==t&&(s+="#"+t),s}handleSubscriptionStatus(e,t){let i=this.safeString(t,"channelID");void 0!==i&&(e.subscriptions[i]=t)}handleErrorMessage(e,t){let i=this.safeString(t,"errorMessage");if(void 0!==i){let s=this.safeValue(t,"reqid");if(void 0!==s){let t;let r=this.exceptions.ws.broad,a=this.findBroadlyMatchedKey(r,i);return t=void 0===a?new n.ExchangeError(i):new r[a](i),e.reject(t,s),!1}}return!0}handleMessage(e,t){if(Array.isArray(t)){let i=this.safeString(t,0),s=this.safeValue(e.subscriptions,i,{}),r=this.safeValue(s,"subscription",{}),a=t.length,n=this.safeString(t,a-2),o=this.safeString(r,"name"),h={book:this.handleOrderBook,ohlc:this.handleOHLCV,ticker:this.handleTicker,spread:this.handleBidAsk,trade:this.handleTrades,openOrders:this.handleOrders,ownTrades:this.handleMyTrades},d=this.safeValue2(h,o,n);void 0!==d&&d.call(this,e,t,s)}else{let i=this.safeString(t,"channel");if(void 0!==i){let s={balances:this.handleBalance},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}if(this.handleErrorMessage(e,t)){let i=this.safeString(t,"event"),s={heartbeat:this.handleHeartbeat,systemStatus:this.handleSystemStatus,subscriptionStatus:this.handleSubscriptionStatus,addOrderStatus:this.handleCreateEditOrder,editOrderStatus:this.handleCreateEditOrder,cancelOrderStatus:this.handleCancelOrder,cancelAllStatus:this.handleCancelAllOrders},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}}}class rC extends ia{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,cancelAllOrdersWs:!1,cancelOrdersWs:!1,cancelOrderWs:!1,createOrderWs:!1,editOrderWs:!1,fetchBalanceWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,fetchTradesWs:!1,watchOHLCV:!1,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!0,watchBalance:!0,watchOrders:!0,watchMyTrades:!0,watchPositions:!0},urls:{api:{ws:"wss://futures.kraken.com/ws/v1"},test:{ws:"wss://demo-futures.kraken.com/ws/v1"}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,connectionLimit:100,requestLimit:100,fetchBalance:{type:void 0}},streaming:{keepAlive:3e4}})}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws,i="challenge",s=this.client(t),r=s.future(i);if(void 0===this.safeValue(s.subscriptions,i)){let s={event:"challenge",api_key:this.apiKey},r=this.extend(s,e);this.watch(t,i,r,i)}return await r}async watchOrderBookForSymbols(e,t,i={}){return(await this.watchMultiHelper("orderbook","book",e,{limit:t},i)).limit()}async subscribePublic(e,t,i={}){await this.loadMarkets();let s=this.urls.api.ws,r={event:"subscribe",feed:e},a=[],n=e;void 0===t&&(t=[]);for(let e=0;e<t.length;e++){let i=t[e];a.push(this.marketId(i))}1===t.length&&(n=n+":"+this.market(a[0]).symbol),r.product_ids=a;let o=this.extend(r,i);return await this.watch(s,n,o,n)}async subscribePrivate(e,t,i={}){await this.loadMarkets(),await this.authenticate();let s=this.urls.api.ws,r={event:"subscribe",feed:e,api_key:this.apiKey,original_challenge:this.options.challenge,signed_challenge:this.options.signedChallenge},a=this.extend(r,i);return await this.watch(s,t,a,t)}async watchTicker(e,t={}){return await this.loadMarkets(),e=this.symbol(e),(await this.watchTickers([e],t))[e]}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=await this.watchMultiHelper("ticker","ticker",e,void 0,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.tickers,"symbol",e)}async watchBidsAsks(e,t={}){let i=await this.watchMultiHelper("bidask","ticker_lite",e,void 0,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.bidsasks,"symbol",e)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){let r=await this.watchMultiHelper("trade","trade",e,void 0,s);if(this.newUpdates){let e=this.safeList(r,0),t=this.safeString(e,"symbol");i=r.getLimit(t,i)}return this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchPositions(e,t,i,s={}){await this.loadMarkets();let r="";e=this.marketSymbols(e),this.isEmpty(e)||(r="::"+e.join(",")),r="positions"+r;let a=await this.subscribePrivate("open_positions",r,s);return this.newUpdates?a:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}handlePositions(e,t){void 0===this.positions&&(this.positions=new sH.Pt);let i=this.positions,s=this.safeValue(t,"positions",[]),r=[];for(let e=0;e<s.length;e++){let a=s[e],n=this.parseWsPosition(a),o=this.safeInteger(t,"timestamp");n.timestamp=o,n.datetime=this.iso8601(o),r.push(n),i.append(n)}let a=this.findMessageHashes(e,"positions::");for(let t=0;t<a.length;t++){let i=a[t],s=i.split("::")[1].split(","),n=this.filterByArray(r,"symbol",s,!1);this.isEmpty(n)||e.resolve(n,i)}e.resolve(r,"positions")}parseWsPosition(e,t){let i=this.safeString(e,"instrument"),s=this.safeNumber(e,"balance");return this.safePosition({info:e,id:void 0,symbol:this.safeSymbol(i),notional:void 0,marginMode:void 0,liquidationPrice:this.safeNumber(e,"liquidation_threshold"),entryPrice:this.safeNumber(e,"entry_price"),unrealizedPnl:this.safeNumber(e,"pnl"),percentage:this.safeNumber(e,"return_on_equity"),contracts:this.parseNumber(r.Y.stringAbs(this.numberToString(s))),contractSize:void 0,markPrice:this.safeNumber(e,"mark_price"),side:s>0?"long":"short",hedged:"both",timestamp:void 0,datetime:void 0,maintenanceMargin:this.safeNumber(e,"maintenance_margin"),maintenanceMarginPercentage:void 0,collateral:void 0,initialMargin:this.safeNumber(e,"initial_margin"),initialMarginPercentage:void 0,leverage:void 0,marginRatio:void 0})}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r="orders";void 0!==e&&(r+=":"+this.market(e).symbol);let a=await this.subscribePrivate("open_orders",r,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r="myTrades";void 0!==e&&(r+=":"+this.market(e).symbol);let a=await this.subscribePrivate("fills",r,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchBalance(e={}){let t;await this.loadMarkets();let i="balances",s=i;if([t,e]=this.handleOptionAndParams(e,"watchBalance","account"),void 0!==t){if("futures"!==t&&"flex_futures"!==t)throw new n.ArgumentsRequired(this.id+" watchBalance account must be either 'futures' or 'flex_futures'");s+=":"+t}return await this.subscribePrivate(i,s,e)}handleTrade(e,t){let i=this.safeString(t,"feed"),s=this.safeString(t,"product_id");if(void 0!==s){let r=this.market(s).symbol,a=this.getMessageHash("trade",void 0,r);if(void 0===this.safeList(this.trades,r)){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.trades[r]=new sH.I3(e)}let n=this.trades[r];if("trade_snapshot"===i){let e=this.safeList(t,"trades",[]),i=e.length;for(let t=0;t<i;t++){let s=e[i-1-t],r=this.parseWsTrade(s);n.append(r)}}else{let e=this.parseWsTrade(t);n.append(e)}e.resolve(n,a)}}parseWsTrade(e,t){let i=this.safeString(e,"product_id");t=this.safeMarket(i,t);let s=this.safeInteger(e,"time");return this.safeTrade({info:e,id:this.safeString(e,"uid"),symbol:this.safeString(t,"symbol"),timestamp:s,datetime:this.iso8601(s),order:void 0,type:this.safeString(e,"type"),side:this.safeString(e,"side"),takerOrMaker:"taker",price:this.safeString(e,"price"),amount:this.safeString(e,"qty"),cost:void 0,fee:{rate:void 0,cost:void 0,currency:void 0}},t)}parseWsOrderTrade(e,t){let i=this.safeInteger(e,"tradeTime"),s=this.safeString(e,"symbol");return this.safeTrade({info:e,id:this.safeString(e,"tradeId"),symbol:this.safeSymbol(s,t),timestamp:i,datetime:this.iso8601(i),order:this.safeString(e,"orderId"),type:this.safeStringLower(e,"type"),side:this.safeString(e,"side"),takerOrMaker:this.safeString(e,"matchRole"),price:this.safeString(e,"price"),amount:this.safeString(e,"tradeAmount"),cost:void 0,fee:{rate:void 0,cost:this.safeString(e,"tradeFee"),currency:this.safeString(e,"feeCurrency")}},t)}handleOrder(e,t){let i=this.orders;if(void 0===i){let e=this.safeInteger(this.options,"ordersLimit");i=new sH.Pt(e),this.orders=i}let s=this.safeValue(t,"order");if(void 0!==s){let a=this.safeString(s,"instrument"),n="orders",o=this.safeSymbol(a),h=this.safeString(s,"order_id"),d=this.safeValue(i.hashmap,o,{}),l=this.safeValue(d,h),c=this.safeString(t,"reason");if(void 0===l||"edited_by_user"===c){let t=this.parseWsOrder(s);i.append(t),e.resolve(i,n),e.resolve(i,n+":"+o)}else{let t=this.parseWsTrade(s);void 0===l.trades&&(l.trades=[]),l.trades.push(t),l.lastTradeTimestamp=t.timestamp;let a="0",h="0",d=l.trades;for(let e=0;e<d.length;e++){let t=d[e];a=r.Y.stringAdd(a,this.numberToString(t.cost)),h=r.Y.stringAdd(h,this.numberToString(t.amount))}if(r.Y.stringGt(h,"0")&&(l.average=r.Y.stringDiv(a,h)),l.cost=a,void 0!==l.filled){let e=this.numberToString(l.filled);l.filled=r.Y.stringAdd(e,this.numberToString(t.amount)),void 0!==l.amount&&(l.remaining=r.Y.stringSub(this.numberToString(l.amount),e))}if(void 0===l.fee&&(l.fee={rate:void 0,cost:"0",currency:this.numberToString(t.fee.currency)}),void 0!==l.fee.cost&&void 0!==t.fee.cost){let e=this.numberToString(l.fee.cost),i=this.numberToString(t.fee.cost);l.fee.cost=r.Y.stringAdd(e,i)}i.append(this.safeOrder(l)),e.resolve(i,n+":"+o),e.resolve(i,n)}}else if(this.safeValue(t,"is_cancel"))for(let s=0;s<i.length;s++){let r=i[s];if(r.id===t.order_id){i[s]=this.extend(r,{status:"canceled"}),e.resolve(i,"orders"),e.resolve(i,"orders:"+r.symbol);break}}return t}handleOrderSnapshot(e,t){let i=this.safeValue(t,"orders",[]),s=this.safeInteger(this.options,"ordersLimit");this.orders=new sH.Pt(s);let r={},a=this.orders;for(let e=0;e<i.length;e++){let t=i[e],s=this.parseWsOrder(t);r[s.symbol]=!0,a.append(s)}if(this.orders.length>0){e.resolve(this.orders,"orders");let t=Object.keys(r);for(let i=0;i<t.length;i++){let s="orders:"+t[i];e.resolve(this.orders,s)}}}parseWsOrder(e,t){let i;let s=this.safeValue(e,"is_cancel"),r=e;void 0!==s&&(r=this.safeValue(e,"order"),!0===s&&(i="cancelled"));let a=this.safeString(r,"instrument"),n=this.safeString(r,"time"),o=this.safeInteger(r,"direction");return this.safeOrder({info:e,symbol:this.safeSymbol(a,t),id:this.safeString(r,"order_id"),clientOrderId:void 0,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,type:this.safeString(r,"type"),timeInForce:void 0,postOnly:void 0,side:0===o?"buy":"sell",price:this.safeString(r,"limit_price"),stopPrice:this.safeString(r,"stop_price"),triggerPrice:this.safeString(r,"stop_price"),amount:this.safeString(r,"qty"),cost:void 0,average:void 0,filled:this.safeString(r,"filled"),remaining:void 0,status:i,fee:{rate:void 0,cost:void 0,currency:void 0},trades:void 0})}handleTicker(e,t){if(void 0!==this.safeString(t,"product_id")){let i=this.parseWsTicker(t),s=i.symbol;this.tickers[s]=i;let r=this.getMessageHash("ticker",void 0,s);e.resolve(i,r)}}handleBidAsk(e,t){if(void 0!==this.safeString(t,"product_id")){let i=this.parseWsTicker(t),s=i.symbol;this.bidsasks[s]=i;let r=this.getMessageHash("bidask",void 0,s);e.resolve(i,r)}}parseWsTicker(e,t){let i=this.safeString(e,"product_id"),s=(t=this.safeMarket(i,t)).symbol,r=this.parse8601(this.safeString(e,"lastTime")),a=this.safeString(e,"last");return this.safeTicker({info:e,symbol:s,timestamp:r,datetime:this.iso8601(r),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bid_size"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"ask_size"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:this.safeString(e,"change"),percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"volumeQuote"),markPrice:this.safeString(e,"markPrice"),indexPrice:this.safeString(e,"index")})}handleOrderBookSnapshot(e,t){let i=this.safeString(t,"product_id"),s=this.safeMarket(i).symbol,r=this.getMessageHash("orderbook",void 0,s),a=this.safeDict(e.subscriptions,r,{}),n=this.safeInteger(a,"limit"),o=this.safeInteger(t,"timestamp");this.orderbooks[s]=this.orderBook({},n);let h=this.orderbooks[s],d=this.safeList(t,"bids"),l=this.safeList(t,"asks");for(let e=0;e<d.length;e++){let t=d[e],i=this.safeNumber(t,"price"),s=this.safeNumber(t,"qty");h.bids.store(i,s)}for(let e=0;e<l.length;e++){let t=l[e],i=this.safeNumber(t,"price"),s=this.safeNumber(t,"qty");h.asks.store(i,s)}h.timestamp=o,h.datetime=this.iso8601(o),h.symbol=s,e.resolve(h,r)}handleOrderBook(e,t){let i=this.safeString(t,"product_id"),s=this.safeMarket(i).symbol,r=this.getMessageHash("orderbook",void 0,s),a=this.orderbooks[s],n=this.safeString(t,"side"),o=this.safeNumber(t,"price"),h=this.safeNumber(t,"qty"),d=this.safeInteger(t,"timestamp");"sell"===n?a.asks.store(o,h):a.bids.store(o,h),a.timestamp=d,a.datetime=this.iso8601(d),e.resolve(a,r)}handleBalance(e,t){let i=this.safeValue(t,"holding"),s=this.safeValue(t,"futures"),r=this.safeValue(t,"flex_futures"),a="balances",n=this.safeInteger(t,"timestamp");if(void 0!==i){let s=Object.keys(i),r={info:t,timestamp:n,datetime:this.iso8601(n)};for(let e=0;e<s.length;e++){let t=s[e],a=this.safeCurrencyCode(t),n=this.account();n.total=this.safeString(i,t),r[a]=n}this.balance.cash=r,this.balance.cash=this.safeBalance(this.balance.cash),e.resolve(r,a)}if(void 0!==s){let i=Object.keys(s),r={info:t,timestamp:n,datetime:this.iso8601(n)};for(let e=0;e<i.length;e++){let t=i[e],a=this.safeSymbol(t),n=this.account(),o=this.safeValue(s,t),h=this.safeString(o,"unit"),d=this.safeCurrencyCode(h);n.free=this.safeString(o,"available"),n.used=this.safeString(o,"initial_margin"),n.total=this.safeString(o,"balance"),r[a]={},r[a][d]=n}this.balance.margin=r,this.balance.margin=this.safeBalance(this.balance.margin),e.resolve(this.balance.margin,a+"futures")}if(void 0!==r){let i=this.safeValue(r,"currencies",{}),s=Object.keys(i),o={info:t,timestamp:n,datetime:this.iso8601(n)};for(let e=0;e<s.length;e++){let t=s[e],r=this.safeValue(i,t),a=this.safeCurrencyCode(t),n=this.account();n.free=this.safeString(r,"available"),n.used=this.safeString(r,"collateral_value"),n.total=this.safeString(r,"quantity"),o[a]=n}this.balance.flex=o,this.balance.flex=this.safeBalance(this.balance.flex),e.resolve(this.balance.flex,a+"flex_futures")}e.resolve(this.balance,a)}handleMyTrades(e,t){let i=this.safeValue(t,"fills",[]),s=this.myTrades;if(void 0===s){let e=this.safeInteger(this.options,"tradesLimit",1e3);s=new sH.Pt(e),this.myTrades=s}let r={};for(let e=0;e<i.length;e++){let t=i[e],a=this.parseWsMyTrade(t);r[a.symbol]=!0,s.append(a)}let a=Object.keys(r);for(let t=0;t<a.length;t++){let i="myTrades:"+a[t];e.resolve(s,i)}e.resolve(s,"myTrades")}parseWsMyTrade(e,t){let i=this.safeInteger(e,"time"),s=this.safeString(e,"instrument");t=this.safeMarket(s,t);let r=this.safeValue(e,"buy"),a=this.safeString(e,"fee_currency");return this.safeTrade({info:e,id:this.safeString(e,"fill_id"),timestamp:i,datetime:this.iso8601(i),symbol:this.safeString(t,"symbol"),order:this.safeString(e,"order_id"),type:this.safeString(e,"type"),side:r?"buy":"sell",takerOrMaker:this.safeString(e,"fill_type"),price:this.safeString(e,"price"),amount:this.safeString(e,"qty"),cost:void 0,fee:{currency:this.safeCurrencyCode(a),cost:this.safeString(e,"fee_paid"),rate:void 0}})}async watchMultiHelper(e,t,i,s,r={}){await this.loadMarkets(),i=this.marketSymbols(i,void 0,!1,!0,!1);let a=[];for(let t=0;t<i.length;t++)a.push(this.getMessageHash(e,void 0,this.symbol(i[t])));let n=this.marketIds(i),o=this.urls.api.ws;return await this.watchMultiple(o,a,this.extend({event:"subscribe",feed:t,product_ids:n},r),a,s)}getMessageHash(e,t,i){let s=e;return void 0!==i?s+=":"+i:s+="s",void 0!==t&&(s+="#"+t),s}handleErrorMessage(e,t){let i=this.safeString(t,"message");try{throw new n.ExchangeError(this.id+" "+i)}catch(t){e.reject(t)}}handleMessage(e,t){let i=this.safeString(t,"event");if("challenge"===i)this.handleAuthenticate(e,t);else if("alert"===i)this.handleErrorMessage(e,t);else if("pong"===i)e.lastPong=this.milliseconds();else if(void 0===i){let i=this.safeString(t,"feed"),s={ticker:this.handleTicker,ticker_lite:this.handleBidAsk,trade:this.handleTrade,trade_snapshot:this.handleTrade,book:this.handleOrderBook,book_snapshot:this.handleOrderBookSnapshot,open_orders_verbose:this.handleOrder,open_orders_verbose_snapshot:this.handleOrderSnapshot,fills:this.handleMyTrades,fills_snapshot:this.handleMyTrades,open_orders:this.handleOrder,open_orders_snapshot:this.handleOrderSnapshot,balances:this.handleBalance,balances_snapshot:this.handleBalance,open_positions:this.handlePositions},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}handleAuthenticate(e,t){let i=this.safeValue(t,"event"),s="challenge";if("error"!==i){let i=this.safeValue(t,"message"),r=this.hash(this.encode(i),l.s,"binary"),a=this.base64ToBinary(this.secret),n=this.hmac(r,a,A.Zf,"base64");this.options.challenge=i,this.options.signedChallenge=n,this.safeValue(e.futures,s).resolve(!0)}else{let i=new n.AuthenticationError(this.id+" "+this.json(t));e.reject(i,s),s in e.subscriptions&&delete e.subscriptions[s]}return t}}class rB extends io.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,createOrderWs:!1,editOrderWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,cancelOrderWs:!1,cancelOrdersWs:!1,cancelAllOrdersWs:!1,watchBidsAsks:!0,watchOrderBook:!0,watchOrders:!0,watchMyTrades:!0,watchTickers:!0,watchTicker:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrderBookForSymbols:!0,watchBalance:!0,watchOHLCV:!0},options:{tradesLimit:1e3,watchTicker:{name:"market/snapshot"},watchOrderBook:{snapshotDelay:5,snapshotMaxRetries:3,method:"/market/level2"},watchMyTrades:{method:"/spotMarket/tradeOrders"}},streaming:{ping:this.ping}})}async negotiate(e,t={}){let i=e?"private":"public",s=this.safeValue(this.options,"urls",{}),r=this.safeValue(s,i);if(void 0!==r)return await r;s[i]=this.spawn(this.negotiateHelper,e,t),this.options.urls=s;let a=s[i];return await a}async negotiateHelper(e,t={}){let i;let s=e?"private":"public";try{i=e?await this.privatePostBulletPrivate(t):await this.publicPostBulletPublic(t);let r=this.safeValue(i,"data",{}),a=this.safeValue(r,"instanceServers",[]),n=this.safeValue(a,0),o=this.safeInteger(n,"pingInterval"),h=this.safeString(n,"endpoint"),d=this.safeString(r,"token"),l=h+"?"+this.urlencode({token:d,privateChannel:e,connectId:s});return this.client(l).keepAlive=o,l}catch(e){this.safeValue(this.options.urls,s).reject(e),delete this.options.urls[s]}}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async subscribe(e,t,i,s={},r){let a=this.requestId().toString(),n=this.extend({id:a,type:"subscribe",topic:i,response:!0},s),o=this.client(e);return i in o.subscriptions||(o.subscriptions[a]=i),await this.watch(e,t,n,i,r)}async subscribeMultiple(e,t,i,s,r={},a){let n=this.requestId().toString(),o=this.extend({id:n,type:"subscribe",topic:i,response:!0},r),h=this.client(e);for(let e=0;e<s.length;e++){let t=s[e];t in h.subscriptions||(h.subscriptions[n]=t)}return await this.watchMultiple(e,t,o,s,a)}async unSubscribeMultiple(e,t,i,s,r={},a){let n=this.requestId().toString(),o=this.extend({id:n,type:"unsubscribe",topic:i,response:!0},r);void 0!==a&&(a[n]=n);let h=this.client(e);for(let e=0;e<s.length;e++){let t=s[e];t in h.subscriptions||(h.subscriptions[n]=t)}return await this.watchMultiple(e,t,o,s,a)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=await this.negotiate(!1),[r,a]=this.handleOptionAndParams(t,"watchTicker","method","/market/snapshot"),n=r+":"+i.id,o="ticker:"+e;return await this.subscribe(s,o,n,a)}async watchTickers(e,t={}){let i,s;await this.loadMarkets(),e=this.marketSymbols(e),[i,t]=this.handleOptionAndParams(t,"watchTickers","method","/market/ticker");let r=[],a=[];if(void 0!==e)for(let t=0;t<e.length;t++){let s=e[t];r.push("ticker:"+s);let n=this.market(s);a.push(i+":"+n.id)}let n=await this.negotiate(!1);if(void 0===e){if(s=await this.subscribe(n,"tickers",i+":all",t),this.newUpdates)return s}else{let o=i+":"+this.marketIds(e).join(",");if(s=await this.subscribeMultiple(n,r,o,a,t),this.newUpdates){let e={};return e[s.symbol]=s,e}}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i;let s=this.safeString(t,"topic");if(void 0!==s){let e;let r=s.split(":"),a=this.safeString(r,1);e="all"===a?this.safeString(t,"subject"):a,i=this.safeMarket(e,i,"-")}let r=this.safeValue(t,"data",{}),a=this.safeValue(r,"data",r),n=this.parseTicker(a,i),o=n.symbol;this.tickers[o]=n,e.resolve(n,"ticker:"+o);let h={};h[o]=n,e.resolve(h,"tickers")}async watchBidsAsks(e,t={}){let i=await this.watchMultiHelper("watchBidsAsks","/spotMarket/level1:",e,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.bidsasks,"symbol",e)}async watchMultiHelper(e,t,i,s={}){if(await this.loadMarkets(),(i=this.marketSymbols(i,void 0,!1,!0,!1)).length>100)throw new n.ArgumentsRequired(this.id+" "+e+"() accepts a maximum of 100 symbols");let r=[];for(let e=0;e<i.length;e++){let t=i[e],s=this.market(t);r.push("bidask@"+s.symbol)}let a=await this.negotiate(!1),o=this.marketIds(i).join(","),h=this.requestId().toString(),d=this.extend({id:h,type:"subscribe",topic:t+o,response:!0},s);return await this.watchMultiple(a,r,d,r)}handleBidAsk(e,t){let i=this.parseWsBidAsk(t),s=i.symbol;this.bidsasks[s]=i,e.resolve(i,"bidask@"+s)}parseWsBidAsk(e,t){let i=this.safeString(e,"topic").split(":")[1];t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeDict(e,"data",{}),a=this.safeList(r,"asks",[]),n=this.safeList(r,"bids",[]),o=this.safeInteger(r,"timestamp");return this.safeTicker({symbol:s,timestamp:o,datetime:this.iso8601(o),ask:this.safeNumber(a,0),askVolume:this.safeNumber(a,1),bid:this.safeNumber(n,0),bidVolume:this.safeNumber(n,1),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=await this.negotiate(!1),n=this.market(e);e=n.symbol;let o=this.safeString(this.timeframes,t,t),h="/market/candles:"+n.id+"_"+o,d="candles:"+e+":"+t,l=await this.subscribe(a,d,h,r);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"symbol"),r=this.safeValue(i,"candles",[]),a=this.safeString(t,"topic").split("_"),n=this.safeString(a,1),o=this.findTimeframe(n),h=this.safeMarket(s),d=h.symbol,l="candles:"+d+":"+o;this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let c=this.safeValue(this.ohlcvs[d],o);if(void 0===c){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new sH.TG(e),this.ohlcvs[d][o]=c}let u=this.parseOHLCV(r,h);c.append(u),e.resolve(c,l)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){if(0===e.length)throw new n.ArgumentsRequired(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");await this.loadMarkets(),e=this.marketSymbols(e);let r=this.marketIds(e),a=await this.negotiate(!1),o=[],h=[],d="/market/match:"+r.join(",");for(let t=0;t<e.length;t++){let i=e[t];o.push("trades:"+i);let s=r[t];h.push("/market/match:"+s)}let l=await this.subscribeMultiple(a,o,d,h,s);if(this.newUpdates){let e=this.safeValue(l,0),t=this.safeString(e,"symbol");i=l.getLimit(t,i)}return this.filterBySinceLimit(l,t,i,"timestamp",!0)}async unWatchTradesForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=this.marketIds(e),s=await this.negotiate(!1),r=[],a=[],n="/market/match:"+i.join(",");for(let t=0;t<e.length;t++){let i=e[t];r.push("unsubscribe:trades:"+i),a.push("trades:"+i)}let o={messageHashes:r,subMessageHashes:a,topic:"trades",unsubscribe:!0,symbols:e};return await this.unSubscribeMultiple(s,r,n,r,t,o)}async unWatchTrades(e,t={}){return await this.unWatchTradesForSymbols([e],t)}handleTrade(e,t){let i=this.safeValue(t,"data",{}),s=this.parseTrade(i),r=s.symbol,a="trades:"+r,n=this.safeValue(this.trades,r);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e),this.trades[r]=n}n.append(s),e.resolve(n,a)}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async unWatchOrderBook(e,t={}){return await this.unWatchOrderBookForSymbols([e],t)}async watchOrderBookForSymbols(e,t,i={}){let s;if(0===e.length)throw new n.ArgumentsRequired(this.id+" watchOrderBookForSymbols() requires a non-empty array of symbols");if(void 0!==t&&20!==t&&100!==t&&50!==t&&5!==t)throw new n.ExchangeError(this.id+" watchOrderBook 'limit' argument must be undefined, 5, 20, 50 or 100");await this.loadMarkets(),e=this.marketSymbols(e);let r=this.marketIds(e),a=await this.negotiate(!1);[s,i]=this.handleOptionAndParams(i,"watchOrderBook","method","/market/level2"),(5===t||50===t)&&(s="/spotMarket/level2Depth"+t.toString());let o=s+":"+r.join(","),h=[],d=[];for(let t=0;t<e.length;t++){let i=e[t];h.push("orderbook:"+i);let a=r[t];d.push(s+":"+a)}let l={};return"/market/level2"===s&&(l={method:this.handleOrderBookSubscription,symbols:e,limit:t}),(await this.subscribeMultiple(a,h,o,d,i,l)).limit()}async unWatchOrderBookForSymbols(e,t={}){let i;let s=this.safeInteger(t,"limit");t=this.omit(t,"limit"),await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let r=this.marketIds(e),a=await this.negotiate(!1);[i,t]=this.handleOptionAndParams(t,"watchOrderBook","method","/market/level2"),(5===s||50===s)&&(i="/spotMarket/level2Depth"+s.toString());let n=i+":"+r.join(","),o=[],h=[];for(let t=0;t<e.length;t++){let i=e[t];o.push("unsubscribe:orderbook:"+i),h.push("orderbook:"+i)}let d={messageHashes:o,symbols:e,unsubscribe:!0,topic:"orderbook",subMessageHashes:h};return await this.unSubscribeMultiple(a,o,n,o,t,d)}handleOrderBook(e,t){let i=this.safeValue(t,"data"),s=this.safeString(t,"subject"),r=this.safeString(t,"topic").split(":"),a=this.safeString(r,1),n=this.safeString(r,0),o=this.safeString(i,"symbol",a),h=this.safeSymbol(o,void 0,"-"),d="orderbook:"+h;if("level2"===s)h in this.orderbooks?this.orderbooks[h].reset():this.orderbooks[h]=this.orderBook(),this.orderbooks[h].symbol=h;else{h in this.orderbooks||(this.orderbooks[h]=this.orderBook());let t=this.orderbooks[h],s=this.safeInteger(t,"nonce"),r=this.safeInteger2(i,"sequenceEnd","timestamp");if(void 0===s){let s;let r=t.cache.length,o=Object.keys(e.subscriptions);for(let t=0;t<o.length;t++){let i=o[t];if(i.indexOf(a)>=0&&i.indexOf(n)>=0){s=e.subscriptions[i];break}}let l=this.safeInteger(s,"limit");r===this.handleOption("watchOrderBook","snapshotDelay",5)&&this.spawn(this.loadOrderBook,e,d,h,l,{}),t.cache.push(i);return}if(s>=r)return}this.handleDelta(this.orderbooks[h],i),e.resolve(this.orderbooks[h],d)}getCacheIndex(e,t){let i=this.safeValue(t,0),s=this.safeInteger(e,"nonce");if(s<this.safeInteger(i,"sequenceStart")-1)return -1;for(let e=0;e<t.length;e++){let i=t[e],r=this.safeInteger(i,"sequenceStart"),a=this.safeInteger(i,"sequenceEnd");if(s>=r-1&&s<a)return e}return t.length}handleDelta(e,t){let i=this.safeInteger2(t,"time","timestamp");e.nonce=this.safeInteger(t,"sequenceEnd",i),e.timestamp=i,e.datetime=this.iso8601(i);let s=this.safeValue(t,"changes",t),r=this.safeValue(s,"bids",[]),a=this.safeValue(s,"asks",[]),n=e.bids,o=e.asks;this.handleBidAsks(n,r),this.handleBidAsks(o,a)}handleBidAsks(e,t){for(let i=0;i<t.length;i++){let s=this.parseBidAsk(t[i]);e.storeArray(s)}}handleOrderBookSubscription(e,t,i){let s=this.safeInteger(i,"limit"),r=this.safeValue(i,"symbols");if(void 0===r){let e=this.safeString(i,"symbol");this.orderbooks[e]=this.orderBook({},s)}else for(let e=0;e<r.length;e++){let t=r[e];this.orderbooks[t]=this.orderBook({},s)}}handleSubscriptionStatus(e,t){let i=this.safeString(t,"id");if(!(i in e.subscriptions))return;let s=this.safeString(e.subscriptions,i),r=this.safeValue(e.subscriptions,s);delete e.subscriptions[i];let a=this.safeValue(r,"method");if(void 0!==a&&a.call(this,e,t,r),this.safeBool(r,"unsubscribe",!1)){let t=this.safeList(r,"messageHashes",[]),i=this.safeList(r,"subMessageHashes",[]);for(let s=0;s<t.length;s++){let r=t[s],a=i[s];this.cleanUnsubscription(e,a,r)}this.cleanCache(r)}}handleSystemStatus(e,t){return t}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.safeValue2(s,"stop","trigger");s=this.omit(s,["stop","trigger"]);let a=await this.negotiate(!0),n="orders";void 0!==e&&(n=n+":"+(e=this.market(e).symbol));let o=await this.subscribe(a,n,r?"/spotMarket/advancedOrders":"/spotMarket/tradeOrders",this.extend({privateChannel:!0},s));return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}parseWsOrderStatus(e){return this.safeString({open:"open",filled:"closed",match:"open",update:"open",canceled:"canceled",cancel:"canceled",TRIGGERED:"triggered"},e,e)}parseWsOrder(e,t){let i=this.safeString(e,"type"),s=this.parseWsOrderStatus(i),r=this.safeInteger2(e,"orderTime","createdAt"),a=this.safeString(e,"symbol");t=this.safeMarket(a,t);let n=this.safeString(e,"stopPrice"),o=this.safeValue(e,"triggerSuccess");return"triggered"===s&&!0!==o&&void 0!==o&&(s="canceled"),this.safeOrder({info:e,symbol:t.symbol,id:this.safeString(e,"orderId"),clientOrderId:this.safeString(e,"clientOid"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,type:this.safeStringLower(e,"orderType"),timeInForce:void 0,postOnly:void 0,side:this.safeStringLower(e,"side"),price:this.safeString2(e,"price","orderPrice"),stopPrice:n,triggerPrice:n,amount:this.safeString(e,"size"),cost:void 0,average:void 0,filled:this.safeString(e,"filledSize"),remaining:void 0,status:s,fee:void 0,trades:void 0},t)}handleOrder(e,t){let i="orders",s=this.safeValue(t,"data");void 0!==this.safeString(s,"tradeId")&&this.handleMyTrade(e,t);let r=this.parseWsOrder(s),a=this.safeString(r,"symbol"),n=this.safeString(r,"id"),o=this.safeValue(r,"triggerPrice");if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e),this.triggerOrders=new sH.Pt(e)}let h=void 0!==o?this.triggerOrders:this.orders,d=this.safeValue(h.hashmap,a,{}),l=this.safeValue(d,n);void 0!==l&&"closed"===l.status&&(r.status="closed"),h.append(r),e.resolve(h,i),e.resolve(h,i+":"+a)}async watchMyTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=await this.negotiate(!0);[r,s]=this.handleOptionAndParams(s,"watchMyTrades","method","/spotMarket/tradeOrders");let n="myTrades";if(void 0!==e){let t=this.market(e);e=t.symbol,n=n+":"+t.symbol}let o=await this.subscribe(a,n,r,this.extend({privateChannel:!0},s));return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleMyTrade(e,t){if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let i=this.safeDict(t,"data"),s=this.parseWsTrade(i);this.myTrades.append(s);let r="myTrades";e.resolve(this.myTrades,r);let a=r+":"+s.symbol;e.resolve(this.myTrades,a)}parseWsTrade(e,t){let i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.safeString(e,"orderType"),a=this.safeString(e,"side"),n=this.safeString(e,"tradeId"),o=this.safeString(e,"matchPrice"),h=this.safeString(e,"matchSize");void 0===o&&(o=this.safeString(e,"price"),h=this.safeString(e,"size"));let d=this.safeString(e,"orderId"),l=this.safeIntegerProduct2(e,"ts","time",1e-6),c=t.quote,u=this.safeString(e,"feeRate"),f=this.safeString(e,"fee");return this.safeTrade({info:e,timestamp:l,datetime:this.iso8601(l),symbol:s,id:n,order:d,type:r,takerOrMaker:this.safeString(e,"liquidity"),side:a,price:o,amount:h,cost:void 0,fee:{cost:f,rate:u,currency:c}},t)}async watchBalance(e={}){await this.loadMarkets();let t=await this.negotiate(!0);return await this.subscribe(t,"balance","/account/balance",this.extend({privateChannel:!0},e))}handleBalance(e,t){let i;let s=this.safeValue(t,"data",{}),r=this.safeString(s,"currency"),a=this.safeString(s,"relationEvent");if(void 0!==a){let e=a.split(".");i=this.safeString(e,0)}let n=this.safeString2(this.options,"watchBalance","defaultType","trade"),o=this.safeValue(this.options,"accountsByType"),h=this.safeString(o,i,"trade");h in this.balance||(this.balance[h]={}),this.balance[h].info=s;let d=this.safeInteger(s,"time");this.balance[h].timestamp=d,this.balance[h].datetime=this.iso8601(d);let l=this.safeCurrencyCode(r),c=this.account();c.free=this.safeString(s,"available"),c.used=this.safeString(s,"hold"),c.total=this.safeString(s,"total"),this.balance[h][l]=c,this.balance[h]=this.safeBalance(this.balance[h]),h===n&&e.resolve(this.balance[h],"balance")}handleSubject(e,t){if("/market/ticker:all"===this.safeString(t,"topic")){this.handleTicker(e,t);return}let i=this.safeString(t,"subject"),s={level1:this.handleBidAsk,level2:this.handleOrderBook,"trade.l2update":this.handleOrderBook,"trade.ticker":this.handleTicker,"trade.snapshot":this.handleTicker,"trade.l3match":this.handleTrade,"trade.candles.update":this.handleOHLCV,"account.balance":this.handleBalance,orderChange:this.handleOrder,stopOrder:this.handleOrder,"/spot/tradeFills":this.handleMyTrade},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}ping(e){return{id:this.requestId().toString(),type:"ping"}}handlePong(e,t){e.lastPong=this.milliseconds()}handleErrorMessage(e,t){let i=this.safeString(t,"data","");if("token is expired"===i){let t="public";e.url.indexOf("connectId=private")>=0&&(t="private"),this.options.urls[t]=void 0}this.handleErrors(void 0,void 0,e.url,void 0,void 0,i,t,void 0,void 0)}handleMessage(e,t){let i=this.safeString(t,"type"),s={welcome:this.handleSystemStatus,ack:this.handleSubscriptionStatus,message:this.handleSubject,pong:this.handlePong,error:this.handleErrorMessage},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}class rE extends il{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchLiquidations:!1,watchLiquidatinsForSymbols:!1,watchMyLiquidations:void 0,watchMyLiquidationsForSymbols:void 0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchBalance:!0,watchPosition:!0,watchPositions:!1,watchPositionForSymbols:!1,watchTradesForSymbols:!0,watchOrderBookForSymbols:!0},options:{timeframes:{"1m":"1min","3m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week","1M":"1month"},accountsByType:{swap:"future",cross:"margin"},tradesLimit:1e3,watchOrderBook:{snapshotDelay:20,snapshotMaxRetries:3},watchPosition:{fetchPositionSnapshot:!0,awaitPositionSnapshot:!0}},streaming:{ping:this.ping}})}async negotiate(e,t={}){let i=e?"private":"public",s=this.safeValue(this.options,"urls",{}),r=this.safeValue(s,i);if(void 0!==r)return await r;s[i]=this.spawn(this.negotiateHelper,e,t),this.options.urls=s;let a=s[i];return await a}async negotiateHelper(e,t={}){let i;let s=e?"private":"public";try{i=e?await this.futuresPrivatePostBulletPrivate(t):await this.futuresPublicPostBulletPublic(t);let r=this.safeValue(i,"data",{}),a=this.safeValue(r,"instanceServers",[]),n=this.safeValue(a,0),o=this.safeInteger(n,"pingInterval"),h=this.safeString(n,"endpoint"),d=this.safeString(r,"token"),l=h+"?"+this.urlencode({token:d,privateChannel:e,connectId:s});return this.client(l).keepAlive=o,l}catch(e){this.safeValue(this.options.urls,s).reject(e),delete this.options.urls[s]}}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async subscribe(e,t,i,s,r={}){let a=this.requestId().toString(),n=this.extend({id:a,type:"subscribe",topic:i,response:!0},r),o={id:a};return s=void 0===s?o:this.extend(o,s),await this.watch(e,t,n,i,s)}async subscribeMultiple(e,t,i,s,r,a={}){let n=this.requestId().toString();return await this.watchMultiple(e,t,this.extend({id:n,type:"subscribe",topic:i,response:!0},a),s,r)}async unSubscribeMultiple(e,t,i,s,r={},a){let n=this.requestId().toString(),o=this.extend({id:n,type:"unsubscribe",topic:i,response:!0},r);void 0!==a&&(a[n]=n);let h=this.client(e);for(let e=0;e<s.length;e++){let t=s[e];t in h.subscriptions||(h.subscriptions[n]=t)}return await this.watchMultiple(e,t,o,s,a)}async watchTicker(e,t={}){return await this.loadMarkets(),e=this.market(e).symbol,t.callerMethodName="watchTicker",(await this.watchTickers([e],t))[e]}async watchTickers(e,t={}){await this.loadMarkets();let i=await this.watchMultiRequest("watchTickers","/contractMarket/ticker:",e,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeValue(t,"data",{}),s=this.safeValue(i,"symbol"),r=this.safeMarket(s,void 0,"-"),a=this.parseTicker(i,r);this.tickers[r.symbol]=a,e.resolve(a,this.getMessageHash("ticker",r.symbol))}async watchBidsAsks(e,t={}){let i=await this.watchMultiRequest("watchBidsAsks","/contractMarket/tickerV2:",e,t);if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.bidsasks,"symbol",e)}async watchMultiRequest(e,t,i,s={}){await this.loadMarkets(),[e,s]=this.handleParamString(s,"callerMethodName",e);let r="watchBidsAsks"===e;if((i=this.marketSymbols(i,void 0,!1,!0,!1)).length>100)throw new n.ArgumentsRequired(this.id+" "+e+"() accepts a maximum of 100 symbols");let a=[];for(let e=0;e<i.length;e++){let t=i[e],s=this.market(t),n=r?"bidask":"ticker";a.push(this.getMessageHash(n,s.symbol))}let o=await this.negotiate(!1),h=this.marketIds(i).join(","),d=this.requestId().toString();return await this.watchMultiple(o,a,this.extend({id:d,type:"subscribe",topic:t+h,response:!0},s),a,{id:d})}handleBidAsk(e,t){let i=this.parseWsBidAsk(t),s=i.symbol;this.bidsasks[s]=i,e.resolve(i,this.getMessageHash("bidask",s))}parseWsBidAsk(e,t){let i=this.safeDict(e,"data",{}),s=this.safeString(i,"symbol");t=this.safeMarket(s,t);let r=this.safeString(t,"symbol"),a=this.safeIntegerProduct(i,"ts",1e-6);return this.safeTicker({symbol:r,timestamp:a,datetime:this.iso8601(a),ask:this.safeNumber(i,"bestAskPrice"),askVolume:this.safeNumber(i,"bestAskSize"),bid:this.safeNumber(i,"bestBidPrice"),bidVolume:this.safeNumber(i,"bestBidSize"),info:e},t)}async watchPosition(e,t={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchPosition() requires a symbol argument");await this.loadMarkets();let i=await this.negotiate(!0),s=this.market(e),r="/contract/position:"+s.id,a="position:"+s.symbol,o=this.client(i);this.setPositionCache(o,e);let h=this.handleOption("watchPosition","fetchPositionSnapshot",!0),d=this.handleOption("watchPosition","awaitPositionSnapshot",!0),l=this.getCurrentPosition(e);return h&&d&&void 0===l?await o.future("fetchPositionSnapshot:"+e):await this.subscribe(i,a,r,void 0,this.extend({privateChannel:!0},t))}getCurrentPosition(e){if(void 0===this.positions)return;let t=this.positions.hashmap,i=Object.values(this.safeValue(t,e,{}));return this.safeValue(i,0)}setPositionCache(e,t){if(this.handleOption("watchPosition","fetchPositionSnapshot",!1)){let i="fetchPositionSnapshot:"+t;i in e.futures||(e.future(i),this.spawn(this.loadPositionSnapshot,e,i,t))}}async loadPositionSnapshot(e,t,i){let s=await this.fetchPosition(i);this.positions=new sH.Pt;let r=this.positions;r.append(s),e.futures[t].resolve(r),e.resolve(s,"position:"+i)}handlePosition(e,t){let i=this.safeString(t,"topic","").split(":"),s=this.safeString(i,1),r=this.safeSymbol(s,void 0,""),a=this.positions,n=this.getCurrentPosition(r),o="position:"+r,h=this.safeValue(t,"data",{}),d=this.parsePosition(h),l=Object.keys(d);for(let e=0;e<l.length;e++){let t=l[e];void 0===d[t]&&delete d[t]}let c=this.extend(n,d);a.append(c),e.resolve(c,o)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){if(0===e.length)throw new n.ArgumentsRequired(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");await this.loadMarkets(),e=this.marketSymbols(e);let r=await this.negotiate(!1);e=this.marketSymbols(e);let a=this.marketIds(e),o="/contractMarket/execution:"+a.join(","),h=[],d=[];for(let t=0;t<e.length;t++){let i=e[t],s=a[t];d.push("trades:"+i),h.push("/contractMarket/execution:"+s)}let l=await this.subscribeMultiple(r,d,o,h,void 0,s);if(this.newUpdates){let e=this.safeValue(l,0),t=this.safeString(e,"symbol");i=l.getLimit(t,i)}return this.filterBySinceLimit(l,t,i,"timestamp",!0)}async unWatchTrades(e,t={}){return await this.unWatchTradesForSymbols([e],t)}async unWatchTradesForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=await this.negotiate(!1);e=this.marketSymbols(e);let s="/contractMarket/execution:"+this.marketIds(e).join(","),r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t];a.push("unsubscribe:trades:"+i),r.push("trades:"+i)}let n={messageHashes:a,subMessageHashes:r,topic:"trades",unsubscribe:!0,symbols:e};return await this.unSubscribeMultiple(i,a,s,a,t,n)}handleTrade(e,t){let i=this.safeValue(t,"data",{}),s=this.parseTrade(i),r=s.symbol,a=this.safeValue(this.trades,r);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[r]=a}a.append(s);let n="trades:"+r;return e.resolve(a,n),t}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets(),e=this.symbol(e);let a=await this.negotiate(!1),n=this.marketId(e),o=this.safeDict(this.options,"timeframes"),h=this.safeString(o,t,t),d="ohlcv::"+e+"_"+t,l=await this.subscribe(a,d,"/contractMarket/limitCandle:"+n+"_"+h,void 0,r);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"topic").split("_"),s=this.safeString(i,1),r=this.safeDict(t,"data"),a=this.safeDict(this.options,"timeframes"),n=this.findTimeframe(s,a),o=this.safeString(r,"symbol"),h=this.safeSymbol(o),d=this.safeList(r,"candles"),l=[this.safeInteger(d,0),this.safeNumber(d,1),this.safeNumber(d,2),this.safeNumber(d,3),this.safeNumber(d,4),this.safeNumber(d,6)];if(this.ohlcvs[h]=this.safeDict(this.ohlcvs,h,{}),!(n in this.ohlcvs[h])){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs[h][n]=new sH.TG(e)}let c=this.ohlcvs[h][n];c.append(l),e.resolve(c,"ohlcv::"+h+"_"+n)}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){if(0===e.length)throw new n.ArgumentsRequired(this.id+" watchOrderBookForSymbols() requires a non-empty array of symbols");if(void 0!==t&&20!==t&&100!==t)throw new n.ExchangeError(this.id+" watchOrderBook 'limit' argument must be undefined, 20 or 100");await this.loadMarkets(),e=this.marketSymbols(e);let s=this.marketIds(e),r=await this.negotiate(!1),a="/contractMarket/level2:"+s.join(","),o=[],h=[];for(let t=0;t<e.length;t++){let i=e[t],r=s[t];h.push("orderbook:"+i),o.push("/contractMarket/level2:"+r)}return(await this.subscribeMultiple(r,h,a,o,{limit:t},i)).limit()}async unWatchOrderBook(e,t={}){return await this.unWatchOrderBookForSymbols([e],t)}async unWatchOrderBookForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=this.marketIds(e),s=await this.negotiate(!1),r="/contractMarket/level2:"+i.join(","),a=[],n=[];for(let t=0;t<e.length;t++){let i=e[t];n.push("unsubscribe:orderbook:"+i),a.push("orderbook:"+i)}let o={messageHashes:n,symbols:e,unsubscribe:!0,topic:"orderbook",subMessageHashes:a};return await this.unSubscribeMultiple(s,n,r,n,t,o)}handleDelta(e,t){e.nonce=this.safeInteger(t,"sequence");let i=this.safeInteger(t,"timestamp");e.timestamp=i,e.datetime=this.iso8601(i);let s=this.safeValue(t,"change",{}).split(","),r=this.safeNumber(s,0),a=this.safeString(s,1),n=[r,this.safeNumber(s,2)];"bids"==("buy"===a?"bids":"asks")?e.bids.storeArray(n):e.asks.storeArray(n)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){let i=this.safeValue(t,"data"),s=this.safeString(t,"topic"),r=s.split(":"),a=this.safeString(r,1),n=this.safeSymbol(a,void 0,"-"),o="orderbook:"+n;if(!(n in this.orderbooks)){let t=this.safeDict(e.subscriptions,s,{}),i=this.safeInteger(t,"limit");this.orderbooks[n]=this.orderBook({},i)}let h=this.orderbooks[n],d=this.safeInteger(h,"nonce"),l=this.safeInteger(i,"sequence");if(void 0===d){let t;let r=h.cache.length,a=s.split(":"),d=this.safeString(a,1),l=this.safeString(a,0),c=Object.keys(e.subscriptions);for(let i=0;i<c.length;i++){let s=c[i];if(s.indexOf(d)>=0&&s.indexOf(l)>=0){t=e.subscriptions[s];break}}let u=this.safeInteger(t,"limit");r===this.handleOption("watchOrderBook","snapshotDelay",5)&&this.spawn(this.loadOrderBook,e,o,n,u,{}),h.cache.push(i);return}d>=l||(this.handleDelta(h,i),e.resolve(h,o))}getCacheIndex(e,t){let i=this.safeValue(t,0),s=this.safeInteger(e,"nonce");if(s<this.safeInteger(i,"sequence")-1)return -1;for(let e=0;e<t.length;e++){let i=t[e];if(s<this.safeInteger(i,"sequence")-1)return e}return t.length}handleSystemStatus(e,t){return t}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.negotiate(!0),a="orders";void 0!==e&&(a=a+":"+(e=this.market(e).symbol));let n=await this.subscribe(r,a,"/contractMarket/tradeOrders",void 0,this.extend({privateChannel:!0},s));return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}parseWsOrderStatus(e){return this.safeString({open:"open",filled:"closed",match:"open",update:"open",canceled:"canceled"},e,e)}parseWsOrder(e,t){let i=this.safeString(e,"orderId"),s=this.safeString(e,"clientOid"),r=this.safeStringLower(e,"orderType"),a=this.safeString(e,"price"),n=this.safeString(e,"filledSize"),o=this.safeString(e,"size"),h=this.safeString(e,"type"),d=this.parseWsOrderStatus(h),l=this.safeIntegerProduct(e,"orderTime",1e-6),c=this.safeString(e,"symbol"),u=(t=this.safeMarket(c,t)).symbol,f=this.safeStringLower(e,"side");return this.safeOrder({info:e,symbol:u,id:i,clientOrderId:s,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,type:r,timeInForce:void 0,postOnly:void 0,side:f,price:a,stopPrice:void 0,amount:o,cost:void 0,average:void 0,filled:n,remaining:void 0,status:d,fee:void 0,trades:void 0},t)}handleOrder(e,t){let i="orders",s=this.safeValue(t,"data"),r=this.parseWsOrder(s),a=this.safeString(r,"symbol"),n=this.safeString(r,"id");if(void 0!==a){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let t=this.orders,s=this.safeValue(t.hashmap,a,{}),o=this.safeValue(s,n);if(void 0!==o){let e=this.safeValue(o,"stopPrice");void 0!==e&&(r.stopPrice=e),"closed"===o.status&&(r.status="closed")}t.append(r),e.resolve(this.orders,i),e.resolve(this.orders,i+":"+a)}}async watchBalance(e={}){await this.loadMarkets();let t=await this.negotiate(!0),i={method:this.handleBalanceSubscription};return await this.subscribe(t,"balance","/contractAccount/wallet",i,this.extend({privateChannel:!0},e))}handleBalance(e,t){let i=this.safeValue(t,"data",{});this.balance.info=i;let s=this.safeString(i,"currency"),r=this.safeCurrencyCode(s),a=this.account();a.free=this.safeString(i,"availableBalance"),a.used=this.safeString(i,"holdBalance"),this.balance[r]=a,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}handleBalanceSubscription(e,t,i){this.spawn(this.fetchBalanceSnapshot,e,t)}async fetchBalanceSnapshot(e,t){await this.loadMarkets(),this.checkRequiredCredentials();let i=this.safeString2(this.options,"watchBalance","defaultType","swap"),s=await this.fetchBalance({type:i}),r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e];"free"!==t&&"used"!==t&&"total"!==t&&"timestamp"!==t&&"datetime"!==t&&"info"!==t&&(this.balance[t]=s[t])}this.balance.info=this.safeValue(s,"info",{}),e.resolve(this.balance,"balance")}handleSubject(e,t){let i=this.safeString(t,"subject"),s={level2:this.handleOrderBook,ticker:this.handleTicker,"candle.stick":this.handleOHLCV,tickerV2:this.handleBidAsk,"availableBalance.change":this.handleBalance,match:this.handleTrade,orderChange:this.handleOrder,orderUpdated:this.handleOrder,"position.change":this.handlePosition,"position.settlement":this.handlePosition,"position.adjustRiskLimit":this.handlePosition},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}getMessageHash(e,t){return void 0!==t?e+"@"+t:e+"s@all"}ping(e){return{id:this.requestId().toString(),type:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){let i=this.safeString(t,"data","");if("token is expired"===i){let t="public";e.url.indexOf("connectId=private")>=0&&(t="private"),this.options.urls[t]=void 0}this.handleErrors(void 0,void 0,e.url,void 0,void 0,i,t,void 0,void 0)}handleSubscriptionStatus(e,t){let i=this.safeString(t,"id");if(!(i in e.subscriptions))return;let s=this.safeString(e.subscriptions,i),r=this.safeValue(e.subscriptions,s);delete e.subscriptions[i];let a=this.safeValue(r,"method");if(void 0!==a&&a.call(this,e,t,r),this.safeBool(r,"unsubscribe",!1)){let t=this.safeList(r,"messageHashes",[]),i=this.safeList(r,"subMessageHashes",[]);for(let s=0;s<t.length;s++){let r=t[s],a=i[s];this.cleanUnsubscription(e,a,r)}this.cleanCache(r)}}handleMessage(e,t){let i=this.safeString(t,"type"),s={welcome:this.handleSystemStatus,message:this.handleSubject,pong:this.handlePong,error:this.handleErrorMessage,ack:this.handleSubscriptionStatus},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}class r_ extends iw{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,fetchOHLCVWs:!0,fetchOrderBookWs:!0,fetchTickerWs:!0,fetchTradesWs:!0,watchBalance:!1,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://www.lbkex.net/ws/V2/"}},options:{watchOHLCV:{timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hr","4h":"4hr","1d":"day","1w":"week","1M":"month","1y":"year"}}},streaming:{},exceptions:{}})}requestId(){let e=this.safeInteger(this.options,"requestId",0),t=this.sum(e,1);return this.options.requestId=t,t}async fetchOHLCVWs(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.urls.api.ws,o=this.safeValue(this.options,"watchOHLCV",{}),h=this.safeValue(o,"timeframes",{}),d=this.safeString(h,t,t),l="fetchOHLCV:"+a.symbol+":"+d,c={action:"request",request:"kbar",kbar:d,pair:a.id};void 0!==i&&(c.start=this.parseToInt(Math.floor(i/1e3))),void 0!==s&&(c.size=s);let u=this.deepExtend(c,r),f=this.requestId();return await this.watch(n,l,u,f,u)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeValue(this.options,"watchOHLCV",{}),o=this.safeValue(n,"timeframes",{}),h=this.safeString(o,t,t),d="ohlcv:"+a.symbol+":"+h,l=this.urls.api.ws,c={action:"subscribe",subscribe:"kbar",kbar:h,pair:a.id},u=this.deepExtend(c,r),f=await this.watch(l,d,u,d);return this.newUpdates&&(s=f.getLimit(e,s)),this.filterBySinceLimit(f,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"pair"),s=this.safeSymbol(i,void 0,"_"),r=this.safeValue(this.options,"watchOHLCV",{}),a=this.safeValue(r,"timeframes",{}),n=this.safeValue(t,"records");if(void 0!==n){let i=this.safeValue(n,0,[]),r=[this.safeInteger(i,0),this.safeNumber(i,1),this.safeNumber(i,2),this.safeNumber(i,3),this.safeNumber(i,4),this.safeNumber(i,5)],o=this.safeString(t,"kbar"),h=this.findTimeframe(o,a);this.ohlcvs[s]=this.safeValue(this.ohlcvs,s,{});let d=this.safeValue(this.ohlcvs[s],h);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[s][h]=d}d.append(r);let l="fetchOHLCV:"+s+":"+o;e.resolve(d,l)}else{let i=this.safeValue(t,"kbar",{}),r=this.safeString(i,"slot"),n=this.safeString(i,"t"),o=[this.parse8601(n),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),this.safeNumber(i,"v")],h=this.findTimeframe(r,a);this.ohlcvs[s]=this.safeValue(this.ohlcvs,s,{});let d=this.safeValue(this.ohlcvs[s],h);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[s][h]=d}d.append(o);let l="ohlcv:"+s+":"+r;e.resolve(d,l)}}async fetchTickerWs(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.urls.api.ws,r="fetchTicker:"+i.symbol,a={action:"request",request:"tick",pair:i.id},n=this.deepExtend(a,t),o=this.requestId();return await this.watch(s,r,n,o,n)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.urls.api.ws,r="ticker:"+i.symbol,a={action:"subscribe",subscribe:"tick",pair:i.id},n=this.deepExtend(a,t);return await this.watch(s,r,n,r,n)}handleTicker(e,t){let i=this.safeString(t,"pair"),s=this.safeSymbol(i),r=this.safeMarket(i),a=this.parseWsTicker(t,r);this.tickers[s]=a;let n="ticker:"+s;e.resolve(a,n),n="fetchTicker:"+s,e.resolve(a,n)}parseWsTicker(e,t){let i=this.safeString(e,"pair"),s=this.safeSymbol(i,t),r=this.safeString(e,"TS"),a=this.safeValue(e,"tick");return this.safeTicker({symbol:s,timestamp:this.parse8601(r),datetime:r,high:this.safeString(a,"high"),low:this.safeString(a,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:this.safeString(a,"latest"),previousClose:void 0,change:void 0,percentage:this.safeString(a,"change"),average:void 0,baseVolume:this.safeString(a,"vol"),quoteVolume:this.safeString(a,"turnover"),info:e},t)}async fetchTradesWs(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=this.urls.api.ws,n="fetchTrades:"+r.symbol;void 0===i&&(i=10);let o={action:"request",request:"trade",pair:r.id,size:i},h=this.deepExtend(o,s),d=this.requestId();return await this.watch(a,n,h,d,h)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=this.urls.api.ws,n="trades:"+r.symbol,o={action:"subscribe",subscribe:"trade",pair:r.id},h=this.deepExtend(o,s),d=await this.watch(a,n,h,n,h);return this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeString(t,"pair"),s=this.safeSymbol(i),r=this.safeMarket(i),a=this.safeValue(this.trades,s);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[s]=a}let n=this.safeValue(t,"trade"),o=this.safeValue(t,"trades",[n]);for(let e=0;e<o.length;e++){let t=this.parseWsTrade(o[e],r);t.symbol=s,a.append(t)}this.trades[s]=a;let h="trades:"+s;e.resolve(this.trades[s],h),h="fetchTrades:"+s,e.resolve(this.trades[s],h)}parseWsTrade(e,t){let i=this.safeInteger(e,0),s=void 0!==i?this.iso8601(i):this.safeString(e,"TS");void 0===i&&(i=this.parse8601(s));let r=this.safeString2(e,"direction",3);return r=r.replace("_market",""),this.safeTrade({timestamp:i,datetime:s,symbol:void 0,id:void 0,order:void 0,type:void 0,takerOrMaker:void 0,side:r,price:this.safeString2(e,"price",1),amount:this.safeString2(e,"volume",2),cost:this.safeString(e,"amount"),fee:void 0,info:e},t)}async watchOrders(e,t,i,s={}){let r;await this.loadMarkets();let a=await this.authenticate(s),n=this.urls.api.ws,o="all";if(void 0===e)r="orders:all";else{let t=this.market(e);e=this.symbol(e),r="orders:"+t.symbol,o=t.id}let h={action:"subscribe",subscribe:"orderUpdate",subscribeKey:a,pair:o},d=this.deepExtend(h,s),l=await this.watch(n,r,d,r,d);return this.filterBySymbolSinceLimit(l,e,t,i,!0)}handleOrders(e,t){let i;let s=this.safeString(t,"pair"),r=this.safeSymbol(s,void 0,"_");if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);i=new sH.Pt(e)}else i=this.orders;let a=this.parseWsOrder(t);i.append(a),this.orders=i,e.resolve(i,"orders"),e.resolve(i,"orders:"+r)}parseWsOrder(e,t){let i,s;let r=this.safeValue(e,"orderUpdate",{}),a=this.safeString(r,"type",""),n=a.split("_"),o=this.safeString(n,0),h=this.safeString(n,1);"buy"!==a&&"sell"!==a&&(i="market"===h?"market":"limit");let d=this.safeString(e,"pair"),l=this.safeSymbol(d,t,"_"),c=this.safeInteger(r,"updateTime"),u=this.safeString(r,"orderStatus"),f=this.safeString(r,"orderAmt");return"market"===i&&"buy"===o&&(s=f),this.safeOrder({info:e,id:this.safeString(r,"uuid"),clientOrderId:this.safeString(r,"customerID"),timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,lastUpdateTimestamp:this.safeInteger(r,"updateTime"),symbol:l,type:i,side:o,price:this.safeString2(r,"price","orderPrice"),stopPrice:void 0,average:this.safeString(r,"avgPrice"),amount:this.safeString2(r,"amount","orderAmt"),remaining:this.safeString(r,"remainAmt"),filled:this.safeString(r,"accAmt"),status:this.parseWsOrderStatus(u),fee:void 0,cost:s,trades:void 0},t)}parseWsOrderStatus(e){return this.safeString({"-1":"canceled",0:"open",1:"open",2:"closed",4:"closed"},e,e)}async fetchOrderBookWs(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=this.urls.api.ws,a="fetchOrderbook:"+s.symbol;void 0===t&&(t=100);let n={action:"request",request:"depth",depth:t,pair:s.id},o=this.deepExtend(n,i);return(await this.watch(r,a,o,a)).limit()}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=this.urls.api.ws,a="orderbook:"+s.symbol;i=this.omit(i,"aggregation"),void 0===t&&(t=100);let n={action:"subscribe",subscribe:"depth",depth:t,pair:s.id},o=this.deepExtend(n,i);return(await this.watch(r,a,o,a)).limit()}handleOrderBook(e,t){let i=this.safeString(t,"pair"),s=this.safeSymbol(i),r=this.safeValue(t,"depth",t),a=this.safeString(t,"TS"),n=this.parse8601(a);s in this.orderbooks||(this.orderbooks[s]=this.orderBook({}));let o=this.orderbooks[s],h=this.parseOrderBook(r,s,n,"bids","asks");o.reset(h);let d="orderbook:"+s;e.resolve(o,d),d="fetchOrderbook:"+s,e.resolve(o,d)}handleErrorMessage(e,t){let i=this.safeString(t,"message",""),s=new n.ExchangeError(this.id+" "+i);e.reject(s)}async handlePing(e,t){let i=this.safeString(t,"ping");try{await e.send({action:"pong",pong:i})}catch(t){this.onError(e,t)}}handleMessage(e,t){if("error"===this.safeString(t,"status")){this.handleErrorMessage(e,t);return}let i=this.safeString2(t,"type","action");if("ping"===i){this.spawn(this.handlePing,e,t);return}let s={kbar:this.handleOHLCV,depth:this.handleOrderBook,trade:this.handleTrades,tick:this.handleTicker,orderUpdate:this.handleOrders},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s=this.milliseconds(),r=this.safeValue(i.subscriptions,"authenticated");if(void 0===r){this.checkRequiredCredentials();let t=await this.spotPrivatePostSubscribeGetKey(e);if(!0!==this.safeValue(t,"result"))throw new n.ExchangeError(this.id+" failed to get subscribe key");i.subscriptions.authenticated={key:this.safeString(t,"data"),expires:this.sum(s,33e5)}}else if(this.safeInteger(r,"expires",0)<s){let t={subscribeKey:r.key},a=await this.spotPrivatePostSubscribeRefreshKey(this.extend(t,e));if("true"!==this.safeString(a,"result"))throw new n.ExchangeError(this.id+" failed to refresh the SubscribeKey");i.subscriptions.authenticated.expires=this.sum(s,33e5)}return i.subscriptions.authenticated.key}}class rN extends iO{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!1,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!1,watchOrders:void 0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:"wss://ws.luno.com/api/1"}},options:{sequenceNumbers:{}},streaming:{},exceptions:{}})}async watchTrades(e,t,i,s={}){this.checkRequiredCredentials(),await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="/stream/"+r.id,n={symbol:e},o=this.urls.api.ws+a,h="trades:"+e,d={api_key_id:this.apiKey,api_key_secret:this.secret},l=this.deepExtend(d,s),c=await this.watch(o,h,l,a,n);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleTrades(e,t,i){let s=this.safeValue(t,"trade_updates",[]);if(0===s.length)return;let r=i.symbol,a=this.market(r),n="trades:"+r,o=this.safeValue(this.trades,r);if(void 0===o){let e=this.safeInteger(this.options,"tradesLimit",1e3);o=new sH.I3(e),this.trades[r]=o}for(let e=0;e<s.length;e++){let t=s[e],i=this.parseTrade(t,a);o.append(i)}this.trades[r]=o,e.resolve(this.trades[r],n)}parseTrade(e,t){return this.safeTrade({info:e,id:void 0,timestamp:void 0,datetime:void 0,symbol:t.symbol,order:void 0,type:void 0,side:void 0,takerOrMaker:void 0,price:void 0,amount:this.safeString(e,"base"),cost:this.safeString(e,"counter"),fee:void 0},t)}async watchOrderBook(e,t,i={}){this.checkRequiredCredentials(),await this.loadMarkets();let s=this.market(e);e=s.symbol;let r="/stream/"+s.id,a={symbol:e},n=this.urls.api.ws+r,o="orderbook:"+e,h={api_key_id:this.apiKey,api_key_secret:this.secret},d=this.deepExtend(h,i);return(await this.watch(n,o,d,r,a)).limit()}handleOrderBook(e,t,i){let s=i.symbol,r="orderbook:"+s,a=this.safeInteger(t,"timestamp");s in this.orderbooks||(this.orderbooks[s]=this.indexedOrderBook({}));let n=this.orderbooks[s];if(void 0!==this.safeValue(t,"asks")){let e=this.customParseOrderBook(t,s,a,"bids","asks","price","volume","id");n.reset(e)}else this.handleDelta(n,t),n.timestamp=a,n.datetime=this.iso8601(a);let o=this.safeInteger(t,"sequence");n.nonce=o,e.resolve(n,r)}customParseOrderBook(e,t,i,s="bids",r="asks",a="price",n="volume",o=2){let h=this.parseBidsAsks(this.safeValue(e,s,[]),a,n,o),d=this.parseBidsAsks(this.safeValue(e,r,[]),a,n,o);return{symbol:t,bids:this.sortBy(h,0,!0),asks:this.sortBy(d,0),timestamp:i,datetime:this.iso8601(i),nonce:void 0}}parseBidsAsks(e,t="price",i="volume",s=2){e=this.toArray(e);let r=[];for(let a=0;a<e.length;a++)r.push(this.customParseBidAsk(e[a],t,i,s));return r}customParseBidAsk(e,t="price",i="volume",s=2){let r=[this.safeNumber(e,t),this.safeNumber(e,i)];if(void 0!==s){let t=this.safeString(e,s);r.push(t)}return r}handleDelta(e,t){let i=this.safeValue(t,"create_update"),s=e.asks,r=e.bids;if(void 0!==i){let e=this.customParseBidAsk(i,"price","volume","order_id"),t=this.safeString(i,"type");"ASK"===t?s.storeArray(e):"BID"===t&&r.storeArray(e)}let a=this.safeValue(t,"delete_update");if(void 0!==a){let e=this.safeString(a,"order_id");s.storeArray([0,0,e]),r.storeArray([0,0,e])}}handleMessage(e,t){if(""===t)return;let i=Object.values(e.subscriptions),s=[this.handleOrderBook,this.handleTrades];for(let r=0;r<s.length;r++)s[r].call(this,e,t,i[0])}}class rL extends iC.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,cancelAllOrdersWs:!1,cancelOrdersWs:!1,cancelOrderWs:!1,createOrderWs:!1,editOrderWs:!1,fetchBalanceWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,fetchTradesWs:!1,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!1},urls:{api:{ws:{spot:"wss://wbs.mexc.com/ws",swap:"wss://contract.mexc.com/edge"}}},options:{listenKeyRefreshRate:12e5,timeframes:{"1m":"Min1","5m":"Min5","15m":"Min15","30m":"Min30","1h":"Min60","4h":"Hour4","8h":"Hour8","1d":"Day1","1w":"Week1","1M":"Month1"},watchOrderBook:{snapshotDelay:25,snapshotMaxRetries:3},listenKey:void 0},streaming:{ping:this.ping,keepAlive:8e3},exceptions:{}})}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="ticker:"+i.symbol;if(i.spot){let e,r=!1;return[r,t]=this.handleOptionAndParams(t,"watchTicker","miniTicker"),e=r?"spot@public.miniTicker.v3.api@"+i.id+"@UTC+8":"spot@public.bookTicker.v3.api@"+i.id,await this.watchSpotPublic(e,s,t)}{let e={symbol:i.id};return await this.watchSwapPublic("sub.ticker",s,e,t)}}handleTicker(e,t){let i;this.handleBidAsk(e,t);let s=this.safeDict2(t,"d","data"),r=this.safeString2(t,"s","symbol"),a=this.safeInteger(t,"t"),n=this.safeMarket(r),o=n.symbol;n.spot?((i=this.parseWsTicker(s,n)).timestamp=a,i.datetime=this.iso8601(a)):i=this.parseTicker(s,n),this.tickers[o]=i,e.resolve(i,"ticker:"+o)}async watchTickers(e,t={}){let i,s;await this.loadMarkets(),e=this.marketSymbols(e,void 0);let r=[],a=this.safeString(e,0);void 0!==a&&(i=this.market(a)),[s,t]=this.handleMarketTypeAndParams("watchTickers",i,t);let o="spot"===s,h=o?this.urls.api.ws.spot:this.urls.api.ws.swap,d={};if(o){let i=!1;[i,t]=this.handleOptionAndParams(t,"watchTickers","miniTicker");let s=[];if(i){if(s.push("spot@public.miniTickers.v3.api@UTC+8"),void 0===e)r.push("spot:ticker");else for(let t=0;t<e.length;t++)r.push("ticker:"+e[t])}else{if(void 0===e)throw new n.ArgumentsRequired(this.id+"watchTickers required symbols argument for the bookTicker channel");let t=this.marketIds(e);for(let i=0;i<t.length;i++){let a=t[i];r.push("ticker:"+e[i]);let n="spot@public.bookTicker.v3.api@"+a;s.push(n)}}d.method="SUBSCRIPTION",d.params=s}else d.method="sub.tickers",d.params={},r.push("ticker");let l=await this.watchMultiple(h,r,this.extend(d,t),r);if(o&&this.newUpdates){let e={};return e[l.symbol]=l,e}return this.filterByArray(this.tickers,"symbol",e)}handleTickers(e,t){let i=this.safeList2(t,"data","d"),s=this.safeString(t,"c",""),r=this.safeString(t,"s"),a=this.safeMarket(r),n=s.startsWith("spot"),o=void 0===r?n:a.spot,h=[];for(let t=0;t<i.length;t++){let s;let r=i[t],n=(s=o?this.parseWsTicker(r,a):this.parseTicker(r)).symbol;this.tickers[n]=s,h.push(s);let d="ticker:"+n;e.resolve(s,d)}e.resolve(h,(o?"spot:":"")+"ticker")}parseWsTicker(e,t){let i=this.safeString(e,"s"),s=this.safeInteger(e,"t"),r=this.safeString(e,"p");return this.safeTicker({info:e,symbol:this.safeSymbol(i,t),timestamp:s,datetime:this.iso8601(s),open:void 0,high:this.safeNumber(e,"h"),low:this.safeNumber(e,"l"),close:r,last:r,bid:this.safeNumber(e,"b"),bidVolume:this.safeNumber(e,"B"),ask:this.safeNumber(e,"a"),askVolume:this.safeNumber(e,"A"),vwap:void 0,previousClose:void 0,change:void 0,percentage:this.safeNumber(e,"tr"),average:void 0,baseVolume:this.safeNumber(e,"v"),quoteVolume:this.safeNumber(e,"q")},t)}async watchBidsAsks(e,t={}){let i;if(await this.loadMarkets(),void 0===(e=this.marketSymbols(e,void 0,!0,!1,!0)))throw new n.ArgumentsRequired(this.id+"watchBidsAsks required symbols argument");let s=this.marketsForSymbols(e);[i,t]=this.handleMarketTypeAndParams("watchBidsAsks",s[0],t);let r="spot"===i;if(!r)throw new n.NotSupported(this.id+"watchBidsAsks only support spot market");let a=[],o=[];for(let t=0;t<e.length;t++){if(r){let i=this.market(e[t]);o.push("spot@public.bookTicker.v3.api@"+i.id)}a.push("bidask:"+e[t])}let h=this.urls.api.ws.spot,d=await this.watchMultiple(h,a,this.extend({method:"SUBSCRIPTION",params:o},t),a);if(this.newUpdates){let e={};return e[d.symbol]=d,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.parseWsBidAsk(t),s=i.symbol;this.bidsasks[s]=i,e.resolve(i,"bidask:"+s)}parseWsBidAsk(e,t){let i=this.safeDict(e,"d"),s=this.safeString(e,"s");t=this.safeMarket(s,t);let r=this.safeString(t,"symbol"),a=this.safeInteger(e,"t");return this.safeTicker({symbol:r,timestamp:a,datetime:this.iso8601(a),ask:this.safeNumber(i,"a"),askVolume:this.safeNumber(i,"A"),bid:this.safeNumber(i,"b"),bidVolume:this.safeNumber(i,"B"),info:e},t)}async watchSpotPublic(e,t,i={}){let s=this.urls.api.ws.spot;return await this.watch(s,t,this.extend({method:"SUBSCRIPTION",params:[e]},i),e)}async watchSpotPrivate(e,t,i={}){this.checkRequiredCredentials();let s=await this.authenticate(e),r=this.urls.api.ws.spot+"?listenKey="+s;return await this.watch(r,t,this.extend({method:"SUBSCRIPTION",params:[e]},i),e)}async watchSwapPublic(e,t,i,s={}){let r=this.urls.api.ws.swap,a=this.extend({method:e,param:i},s);return await this.watch(r,t,a,t)}async watchSwapPrivate(e,t={}){this.checkRequiredCredentials();let i="login",s=this.urls.api.ws.swap,r=this.milliseconds().toString(),a=this.apiKey+r,n=this.hmac(this.encode(a),this.encode(this.secret),l.s),o={method:i,param:{apiKey:this.apiKey,signature:n,reqTime:r}},h=this.extend(o,t);return await this.watch(s,e,h,i)}async watchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e);e=n.symbol;let o=this.safeValue(this.options,"timeframes",{}),h=this.safeString(o,t),d="candles:"+e+":"+t;if(n.spot){let e="spot@public.kline.v3.api@"+n.id+"@"+h;a=await this.watchSpotPublic(e,d,r)}else{let e={symbol:n.id,interval:h};a=await this.watchSwapPublic("sub.kline",d,e,r)}return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySinceLimit(a,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeValue2(t,"d","data",{}),s=this.safeValue(i,"k",i),r=this.safeString2(s,"i","interval"),a=this.safeValue(this.options,"timeframes",{}),n=this.findTimeframe(r,a),o=this.safeString2(t,"s","symbol"),h=this.safeMarket(o),d=h.symbol,l="candles:"+d+":"+n,c=this.parseWsOHLCV(s,h);this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let u=this.safeValue(this.ohlcvs[d],n);if(void 0===u){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new sH.TG(e),this.ohlcvs[d][n]=u}u.append(c),e.resolve(u,l)}parseWsOHLCV(e,t){return[this.safeTimestamp(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber2(e,"v","q")]}async watchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),a="orderbook:"+(e=r.symbol);if(r.spot){let e="spot@public.increase.depth.v3.api@"+r.id;s=await this.watchSpotPublic(e,a,i)}else{let e={symbol:r.id};s=await this.watchSwapPublic("sub.depth",a,e,i)}return s.limit()}handleOrderBookSubscription(e,t){let i=this.safeString(t,"msg").split("@"),s=this.safeString(i,2),r=this.safeSymbol(s);this.orderbooks[r]=this.orderBook({})}getCacheIndex(e,t){let i=this.safeInteger(e,"nonce"),s=this.safeValue(t,0);if(i<this.safeInteger2(s,"r","version")-1)return -1;for(let e=0;e<t.length;e++){let s=t[e];if(this.safeInteger2(s,"r","version")>=i)return e}return t.length}handleOrderBook(e,t){let i=this.safeValue2(t,"d","data"),s=this.safeString2(t,"s","symbol"),r=this.safeSymbol(s),a="orderbook:"+r,n=this.safeValue(e.subscriptions,a),o=this.safeInteger(n,"limit");!0===n&&(e.subscriptions[a]=1,this.orderbooks[r]=this.countedOrderBook({}));let h=this.orderbooks[r];if(void 0===this.safeInteger(h,"nonce")){h.cache.length===this.handleOption("watchOrderBook","snapshotDelay",25)&&this.spawn(this.loadOrderBook,e,a,r,o,{}),h.cache.push(i);return}try{this.handleDelta(h,i);let e=this.safeInteger2(t,"t","ts");h.timestamp=e,h.datetime=this.iso8601(e)}catch(t){delete e.subscriptions[a],e.reject(t,a)}e.resolve(h,a)}handleBooksideDelta(e,t){for(let i=0;i<t.length;i++){let s=t[i];if(Array.isArray(s))e.storeArray(s);else{let t=this.safeFloat(s,"p"),i=this.safeFloat(s,"v");e.store(t,i)}}}handleDelta(e,t){let i=this.safeInteger(e,"nonce"),s=this.safeInteger2(t,"r","version");if(s<i)return;e.nonce=s;let r=this.safeList(t,"asks",[]),a=this.safeList(t,"bids",[]),n=e.asks,o=e.bids;this.handleBooksideDelta(n,r),this.handleBooksideDelta(o,a)}async watchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n="trades:"+(e=a.symbol);if(a.spot){let e="spot@public.deals.v3.api@"+a.id;r=await this.watchSpotPublic(e,n,s)}else{let e={symbol:a.id};r=await this.watchSwapPublic("sub.deal",n,e,s)}return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeString2(t,"s","symbol"),s=this.safeMarket(i),r=s.symbol,a="trades:"+r,n=this.safeValue(this.trades,r);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e),this.trades[r]=n}let o=this.safeValue2(t,"d","data"),h=this.safeValue(o,"deals",[o]);for(let e=0;e<h.length;e++){let t;t=s.spot?this.parseWsTrade(h[e],s):this.parseTrade(h[e],s),n.append(t)}e.resolve(n,a)}async watchMyTrades(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o="myTrades";return void 0!==e&&(o=o+":"+(e=(r=this.market(e)).symbol)),[a,s]=this.handleMarketTypeAndParams("watchMyTrades",r,s),n="spot"===a?await this.watchSpotPrivate("spot@private.deals.v3.api",o,s):await this.watchSwapPrivate(o,s),this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleMyTrade(e,t,i){let s;let r="myTrades",a=this.safeValue2(t,"d","data"),n=this.safeString(a,"symbol"),o=this.safeString(t,"s",n),h=this.safeMarket(o),d=h.symbol;s=h.spot?this.parseWsTrade(a,h):this.parseTrade(a,h);let l=this.myTrades;if(void 0===l){let e=this.safeInteger(this.options,"tradesLimit",1e3);l=new sH.Pt(e),this.myTrades=l}l.append(s),e.resolve(l,r),e.resolve(l,r+":"+d)}parseWsTrade(e,t){let i=this.safeInteger(e,"T"),s=this.safeString(e,"t");void 0===i&&(i=this.safeInteger(e,"t"),s=void 0);let r=this.safeString(e,"p"),a=this.safeString(e,"v"),n=this.safeString(e,"S"),o=this.safeInteger(e,"m"),h=this.safeNumber(e,"n"),d=this.safeString(e,"N");return this.safeTrade({info:e,id:s,order:this.safeString(e,"i"),timestamp:i,datetime:this.iso8601(i),symbol:this.safeSymbol(void 0,t),type:void 0,side:"1"===n?"buy":"sell",takerOrMaker:o?"maker":"taker",price:r,amount:a,cost:void 0,fee:{cost:h,currency:this.safeCurrencyCode(d)}},t)}async watchOrders(e,t,i,s={}){let r,a,n;await this.loadMarkets(),s=this.omit(s,"type");let o="orders";return void 0!==e&&(o=o+":"+(e=(r=this.market(e)).symbol)),[a,s]=this.handleMarketTypeAndParams("watchOrders",r,s),n="spot"===a?await this.watchSpotPrivate(a+"@private.orders.v3.api",o,s):await this.watchSwapPrivate(o,s),this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrder(e,t){let i;let s="orders",r=this.safeValue2(t,"d","data"),a=this.safeString(r,"symbol"),n=this.safeString(t,"s",a),o=this.safeMarket(n),h=o.symbol;i=o.spot?this.parseWsOrder(r,o):this.parseOrder(r,o);let d=this.orders;if(void 0===d){let e=this.safeInteger(this.options,"ordersLimit",1e3);d=new sH.Pt(e),this.orders=d}d.append(i),e.resolve(d,s),e.resolve(d,s+":"+h)}parseWsOrder(e,t){let i;let s=this.safeInteger(e,"O"),r=this.safeString(e,"S"),a=this.safeString(e,"s"),n=this.safeString(e,"o"),o=this.safeString(e,"N");return void 0!==o&&(i={currency:o,cost:void 0}),this.safeOrder({id:this.safeString(e,"i"),clientOrderId:this.safeString(e,"c"),timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:this.parseWsOrderStatus(a,t),symbol:this.safeSymbol(void 0,t),type:this.parseWsOrderType(n),timeInForce:this.parseWsTimeInForce(n),side:"1"===r?"buy":"sell",price:this.safeString(e,"p"),stopPrice:void 0,triggerPrice:this.safeNumber(e,"P"),average:this.safeString(e,"ap"),amount:this.safeString(e,"v"),cost:this.safeString(e,"a"),filled:this.safeString(e,"cv"),remaining:this.safeString(e,"V"),fee:i,trades:void 0,info:e},t)}parseWsOrderStatus(e,t){return this.safeString({1:"open",2:"closed",3:"open",4:"canceled",5:"closed",NEW:"open",CANCELED:"canceled",EXECUTED:"closed",FAILED:"rejected"},e,e)}parseWsOrderType(e){return this.safeString({1:"limit",2:void 0,3:void 0,4:void 0,5:"market",100:"limit"},e)}parseWsTimeInForce(e){return this.safeString({1:"GTC",2:"PO",3:"IOC",4:"FOK",5:"GTC",100:"GTC"},e)}async watchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let i="balance:"+t;return"spot"===t?await this.watchSpotPrivate("spot@private.account.v3.api",i,e):await this.watchSwapPrivate(i,e)}handleBalance(e,t){let i=void 0===this.safeString(t,"c")?"swap":"spot",s=this.safeValue2(t,"d","data"),r=this.safeInteger(t,"ts"),a=this.safeInteger(s,"c",r);i in this.balance||(this.balance[i]={}),this.balance[i].info=s,this.balance[i].timestamp=a,this.balance[i].datetime=this.iso8601(a);let n=this.safeString2(s,"a","currency"),o=this.safeCurrencyCode(n),h=this.account();h.free=this.safeString2(s,"f","availableBalance"),h.used=this.safeString2(s,"l","frozenBalance"),this.balance[i][o]=h,this.balance[i]=this.safeBalance(this.balance[i]),e.resolve(this.balance[i],"balance:"+i)}async authenticate(e,t={}){let i=this.safeString(this.options,"listenKey");if(void 0!==i)return i;let s=await this.spotPrivatePostUserDataStream(t);i=this.safeString(s,"listenKey"),this.options.listenKey=i;let r=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);return this.delay(r,this.keepAliveListenKey,i,t),i}async keepAliveListenKey(e,t={}){if(void 0!==e)try{await this.spotPrivatePutUserDataStream(this.extend({listenKey:e},t));let i=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);this.delay(i,this.keepAliveListenKey,e,t)}catch(s){let t=this.urls.api.ws.spot+"?listenKey="+e,i=this.client(t);this.options.listenKey=void 0,i.reject(s),delete this.clients[t]}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleSubscriptionStatus(e,t){let i=this.safeString(t,"msg","");if("PONG"===i)this.handlePong(e,t);else if(i.indexOf("@")>-1){let s=i.split("@"),r=this.safeString(s,1),a={"public.increase.depth.v3.api":this.handleOrderBookSubscription},n=this.safeValue(a,r);void 0!==n&&n.call(this,e,t)}}handleMessage(e,t){let i;if("string"==typeof t){if("Invalid listen key"===t){let t=new n.AuthenticationError(this.id+" invalid listen key");e.reject(t)}return}if("msg"in t){this.handleSubscriptionStatus(e,t);return}let s=this.safeString(t,"c");if(void 0===s)i=this.safeString(t,"channel");else{let e=s.split("@");i=this.safeString(e,1)}let r={"public.deals.v3.api":this.handleTrades,"push.deal":this.handleTrades,"public.kline.v3.api":this.handleOHLCV,"push.kline":this.handleOHLCV,"public.bookTicker.v3.api":this.handleTicker,"public.miniTicker.v3.api":this.handleTicker,"public.miniTickers.v3.api":this.handleTickers,"push.ticker":this.handleTicker,"push.tickers":this.handleTickers,"public.increase.depth.v3.api":this.handleOrderBook,"push.depth":this.handleOrderBook,"private.orders.v3.api":this.handleOrder,"push.personal.order":this.handleOrder,"private.account.v3.api":this.handleBalance,"push.personal.asset":this.handleBalance,"private.deals.v3.api":this.handleMyTrade,"push.personal.order.deal":this.handleMyTrade,pong:this.handlePong};i in r&&r[i].call(this,e,t)}ping(e){return{method:"ping"}}}class rR extends iB.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchMarkPrice:!0,watchMarkPrices:!0,watchTickers:!0,watchBidsAsks:!0,watchOrderBook:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrderBookForSymbols:!0,watchBalance:!0,watchLiquidations:"emulated",watchLiquidationsForSymbols:!0,watchMyLiquidations:"emulated",watchMyLiquidationsForSymbols:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0,watchOrders:!0,watchMyTrades:!0,watchPositions:!0,watchFundingRate:!0,watchFundingRates:!0,createOrderWs:!0,editOrderWs:!0,cancelOrderWs:!0,cancelOrdersWs:!0,cancelAllOrdersWs:!0},urls:{api:{ws:"wss://ws.okx.com:8443/ws/v5"},test:{ws:"wss://wspap.okx.com:8443/ws/v5"}},options:{watchOrderBook:{checksum:!0,depth:"books"},watchBalance:"spot",watchTicker:{channel:"tickers"},watchTickers:{channel:"tickers"},watchOrders:{type:"ANY"},watchMyTrades:{type:"ANY"},createOrderWs:{op:"batch-orders"},editOrderWs:{op:"amend-order"},ws:{}},streaming:{ping:this.ping,keepAlive:18e3}})}getUrl(e,t="public"){let i=this.options.sandboxMode?"?brokerId=9999":"",s=this.urls.api.ws;return"business"===t||e.indexOf("candle")>-1||"orders-algo"===e?s+"/business"+i:"public"===t?s+"/public"+i:s+"/private"+i}async subscribeMultiple(e,t,i,s={}){await this.loadMarkets(),void 0===i&&(i=this.symbols),i=this.marketSymbols(i);let r=this.getUrl(t,e),a=[],n=[];for(let e=0;e<i.length;e++){let r={channel:t,instId:this.marketId(i[e])};n.push(this.extend(r,s)),a.push(t+"::"+i[e])}return await this.watchMultiple(r,a,{op:"subscribe",args:n},a)}async subscribe(e,t,i,s,r={}){await this.loadMarkets();let a=this.getUrl(i,e),n={channel:i};if(void 0!==s){let e=this.market(s);t+=":"+e.id,n.instId=e.id}let o={op:"subscribe",args:[this.deepExtend(n,r)]};return await this.watch(a,t,o,t)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){if(0===e.length)throw new n.ArgumentsRequired(this.id+" watchTradesForSymbols() requires a non-empty array of symbols");await this.loadMarkets(),e=this.marketSymbols(e);let r="trades",a=[],o=[];for(let t=0;t<e.length;t++){let i=e[t];o.push(r+":"+i);let s={channel:r,instId:this.marketId(i)};a.push(s)}let h=this.getUrl(r,"public"),d=await this.watchMultiple(h,o,{op:"subscribe",args:a},o);if(this.newUpdates){let e=this.safeValue(d,0),t=this.safeString(e,"symbol");i=d.getLimit(t,i)}return this.filterBySinceLimit(d,t,i,"timestamp",!0)}async unWatchTradesForSymbols(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i="trades",s=[],r=[];for(let t=0;t<e.length;t++){let a=e[t];r.push("unsubscribe:trades:"+a);let n={channel:i,instId:this.marketId(a)};s.push(n)}let a=this.getUrl(i,"public");return await this.watchMultiple(a,r,{op:"unsubscribe",args:s},r)}async unWatchTrades(e,t={}){return await this.unWatchTradesForSymbols([e],t)}handleTrades(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeString(i,"instId"),a=this.safeSymbol(r),n=this.safeValue(t,"data",[]),o=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<n.length;t++){let i=this.parseTrade(n[t]),r=s+":"+a,h=this.safeValue(this.trades,a);void 0===h&&(h=new sH.I3(o),this.trades[a]=h),h.append(i),e.resolve(h,r)}}async watchFundingRate(e,t={}){return e=this.symbol(e),(await this.watchFundingRates([e],t))[e]}async watchFundingRates(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i="funding-rate",s=[],r=[];for(let t=0;t<e.length;t++){let a=e[t];r.push(i+":"+a);let n={channel:i,instId:this.marketId(a)};s.push(n)}let a=this.getUrl(i,"public"),n=await this.watchMultiple(a,r,{op:"subscribe",args:s},r);if(this.newUpdates){let e=this.safeString(n,"symbol"),t={};return t[e]=n,t}return this.filterByArray(this.fundingRates,"symbol",e)}handleFundingRate(e,t){let i=this.safeList(t,"data",[]);for(let t=0;t<i.length;t++){let s=i[t],r=this.parseFundingRate(s),a=r.symbol;this.fundingRates[a]=r,e.resolve(r,"funding-rate:"+r.symbol)}}async watchTicker(e,t={}){let i;[i,t]=this.handleOptionAndParams(t,"watchTicker","channel","tickers"),t.channel=i,e=this.market(e).symbol;let s=await this.watchTickers([e],t);return this.safeValue(s,e)}async unWatchTicker(e,t={}){return await this.unWatchTickers([e],t)}async watchTickers(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1),[i,t]=this.handleOptionAndParams(t,"watchTickers","channel","tickers");let s=await this.subscribeMultiple("public",i,e,t);return this.newUpdates?s:this.filterByArray(this.tickers,"symbol",e)}async watchMarkPrice(e,t={}){let i;return[i,t]=this.handleOptionAndParams(t,"watchMarkPrice","channel","mark-price"),t.channel=i,e=this.market(e).symbol,(await this.watchMarkPrices([e],t))[e]}async watchMarkPrices(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1),[i,t]=this.handleOptionAndParams(t,"watchMarkPrices","channel","mark-price");let s=await this.subscribeMultiple("public",i,e,t);return this.newUpdates?s:this.filterByArray(this.tickers,"symbol",e)}async unWatchTickers(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1),[i,t]=this.handleOptionAndParams(t,"watchTickers","channel","tickers");let s=[],r=[];for(let t=0;t<e.length;t++){let a=e[t];r.push("unsubscribe:ticker:"+a);let n={channel:i,instId:this.marketId(a)};s.push(n)}let a=this.getUrl(i,"public");return await this.watchMultiple(a,r,{op:"unsubscribe",args:s},r)}handleTicker(e,t){this.handleBidAsk(e,t);let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"instId"),r=this.safeMarket(s,void 0,"-").symbol,a=this.safeString(i,"channel"),n=this.safeValue(t,"data",[]),o={};for(let e=0;e<n.length;e++){let t=this.parseTicker(n[e]);this.tickers[r]=t,o[r]=t}e.resolve(o,a+"::"+r)}async watchBidsAsks(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1),[i,t]=this.handleOptionAndParams(t,"watchBidsAsks","channel","tickers");let s=this.getUrl(i,"public"),r=[],a=[];for(let s=0;s<e.length;s++){let n={channel:i,instId:this.marketId(e[s])};a.push(this.extend(n,t)),r.push("bidask::"+e[s])}let n=await this.watchMultiple(s,r,{op:"subscribe",args:a},r);if(this.newUpdates){let e={};return e[n.symbol]=n,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeList(t,"data",[]),s=this.safeDict(i,0,{}),r=this.parseWsBidAsk(s),a=r.symbol;this.bidsasks[a]=r,e.resolve(r,"bidask::"+a)}parseWsBidAsk(e,t){let i=this.safeString(e,"instId");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"ts");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeString(e,"askPx"),askVolume:this.safeString(e,"askSz"),bid:this.safeString(e,"bidPx"),bidVolume:this.safeString(e,"bidSz"),info:e},t)}async watchLiquidationsForSymbols(e,t,i,s={}){let r;await this.loadMarkets();let a="liquidations",n=[];if(void 0!==(e=this.marketSymbols(e,void 0,!0,!0)))for(let t=0;t<e.length;t++){let i=e[t];n.push(a+"::"+i)}else n.push(a);let o=this.getMarketFromSymbols(e);[r,s]=this.handleMarketTypeAndParams("watchliquidationsForSymbols",o,s);let h="liquidation-orders";"spot"===r?r="SWAP":"future"===r&&(r="futures");let d=r.toUpperCase(),l=this.getUrl(h,"public"),c=await this.watchMultiple(l,n,{op:"subscribe",args:[{channel:h,instType:d}]},n);return this.newUpdates?c:this.filterBySymbolsSinceLimit(this.liquidations,e,t,i,!0)}handleLiquidation(e,t){let i=this.safeList(t,"data",[]);for(let t=0;t<i.length;t++){let s=i[t],r=this.parseWsLiquidation(s),a=this.safeString(r,"symbol"),n=this.safeValue(this.liquidations,a);if(void 0===n){let e=this.safeInteger(this.options,"liquidationsLimit",1e3);n=new sH.I3(e)}n.append(r),this.liquidations[a]=n,e.resolve([r],"liquidations"),e.resolve([r],"liquidations::"+a)}}async watchMyLiquidationsForSymbols(e,t,i,s={}){await this.loadMarkets();let r=this.safeValue2(s,"stop","trigger",!1);s=this.omit(s,["stop","trigger"]),await this.authenticate({access:r?"business":"private"});let a="myLiquidations",n=[];if(void 0!==(e=this.marketSymbols(e,void 0,!0,!0)))for(let t=0;t<e.length;t++){let i=e[t];n.push(a+"::"+i)}else n.push(a);let o="balance_and_position",h=this.getUrl(o,"private"),d=await this.watchMultiple(h,n,this.deepExtend({op:"subscribe",args:[{channel:o}]},s),n);return this.newUpdates?d:this.filterBySymbolsSinceLimit(this.liquidations,e,t,i,!0)}handleMyLiquidation(e,t){let i=this.safeList(t,"data",[]);for(let t=0;t<i.length;t++){let s=i[t];if("liquidation"!==this.safeString(s,"eventType"))return;let r=this.parseWsMyLiquidation(s),a=this.safeString(r,"symbol"),n=this.safeValue(this.liquidations,a);if(void 0===n){let e=this.safeInteger(this.options,"myLiquidationsLimit",1e3);n=new sH.I3(e)}n.append(r),this.liquidations[a]=n,e.resolve([r],"myLiquidations"),e.resolve([r],"myLiquidations::"+a)}}parseWsMyLiquidation(e,t){let i=this.safeList(e,"posData",[]),s=this.safeDict(i,0,{}),r=this.safeString(s,"instId");t=this.safeMarket(r,t);let a=this.safeInteger(s,"uTIme");return this.safeLiquidation({info:e,symbol:this.safeSymbol(r,t),contracts:this.safeNumber(s,"pos"),contractSize:this.safeNumber(t,"contractSize"),price:this.safeNumber(e,"avgPx"),baseValue:void 0,quoteValue:void 0,timestamp:a,datetime:this.iso8601(a)})}parseWsLiquidation(e,t){let i=this.safeList(e,"details",[]),s=this.safeDict(i,0,{}),r=this.safeString(e,"instId");t=this.safeMarket(r,t);let a=this.safeInteger(s,"ts");return this.safeLiquidation({info:e,symbol:this.safeSymbol(r,t),contracts:this.safeNumber(s,"sz"),contractSize:this.safeNumber(t,"contractSize"),price:this.safeNumber(s,"bkPx"),baseValue:void 0,quoteValue:void 0,timestamp:a,datetime:this.iso8601(a)})}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets(),e=this.symbol(e);let a="candle"+this.safeString(this.timeframes,t,t),n=await this.subscribe("public",a,a,e,r);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,i,s,0,!0)}async unWatchOHLCV(e,t="1m",i={}){return await this.loadMarkets(),await this.unWatchOHLCVForSymbols([[e,t]],i)}async watchOHLCVForSymbols(e,t,i,s={}){if(0===e.length||!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" watchOHLCVForSymbols() requires a an array of symbols and timeframes, like  [['BTC/USDT', '1m'], ['LTC/USDT', '5m']]");await this.loadMarkets();let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],s=i[0],n=i[1],o=this.marketId(s),h="candle"+this.safeString(this.timeframes,n,n),d={channel:h,instId:o};r.push(d),a.push("multi:"+h+":"+s)}let o=this.getUrl("candle","public"),[h,d,l]=await this.watchMultiple(o,a,{op:"subscribe",args:r},a);this.newUpdates&&(i=l.getLimit(h,i));let c=this.filterBySinceLimit(l,t,i,0,!0);return this.createOHLCVObject(h,d,c)}async unWatchOHLCVForSymbols(e,t={}){if(0===e.length||!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" watchOHLCVForSymbols() requires a an array of symbols and timeframes, like  [['BTC/USDT', '1m'], ['LTC/USDT', '5m']]");await this.loadMarkets();let i=[],s=[];for(let t=0;t<e.length;t++){let r=e[t],a=r[0],n=r[1],o=this.marketId(a),h="candle"+this.safeString(this.timeframes,n,n),d={channel:h,instId:o};i.push(d),s.push("unsubscribe:multi:"+h+":"+a)}let r=this.getUrl("candle","public");return await this.watchMultiple(r,s,{op:"unsubscribe",args:i},s)}handleOHLCV(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeValue(t,"data",[]),a=this.safeString(i,"instId"),n=this.safeMarket(a),o=n.symbol,h=s.replace("candle",""),d=this.findTimeframe(h);for(let t=0;t<r.length;t++){let i=this.parseOHLCV(r[t],n);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let a=this.safeValue(this.ohlcvs[o],d);if(void 0===a){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);a=new sH.TG(e),this.ohlcvs[o][d]=a}a.append(i);let h=s+":"+n.id;e.resolve(a,h);let l="multi:"+s+":"+o;e.resolve([o,d,a],l)}}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){let s;if(await this.loadMarkets(),e=this.marketSymbols(e),[s,i]=this.handleOptionAndParams(i,"watchOrderBook","depth","books"),void 0!==t&&(1===t?s="bbo-tbt":t>1&&t<=5?s="books5":50===t?s="books50-l2-tbt":400===t&&(s="books")),"books-l2-tbt"===s||"books50-l2-tbt"===s){if(!this.checkRequiredCredentials(!1))throw new n.AuthenticationError(this.id+" watchOrderBook/watchOrderBookForSymbols requires authentication for this depth. Add credentials or change the depth option to books or books5");await this.authenticate({access:"public"})}let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t];a.push(s+":"+i);let n={channel:s,instId:this.marketId(i)};r.push(n)}let o=this.getUrl(s,"public");return(await this.watchMultiple(o,a,{op:"subscribe",args:r},a)).limit()}async unWatchOrderBookForSymbols(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1),[i,t]=this.handleOptionAndParams(t,"watchOrderBook","depth","books");let s=this.safeInteger(t,"limit");void 0!==s&&(1===s?i="bbo-tbt":s>1&&s<=5?i="books5":50===s?i="books50-l2-tbt":400===s&&(i="books"));let r=[],a=[],n=[];for(let t=0;t<e.length;t++){let s=e[t];a.push(i+":"+s),n.push("unsubscribe:orderbook:"+s);let o={channel:i,instId:this.marketId(s)};r.push(o)}let o=this.getUrl(i,"public");return await this.watchMultiple(o,n,{op:"unsubscribe",args:r},n)}async unWatchOrderBook(e,t={}){return await this.unWatchOrderBookForSymbols([e],t)}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i,s,r){let a=this.safeValue(t,"asks",[]),o=this.safeValue(t,"bids",[]),h=i.asks,d=i.bids;this.handleDeltas(h,a),this.handleDeltas(d,o);let l=this.safeString(t,"instId"),c=this.safeSymbol(l,r),u=this.handleOption("watchOrderBook","checksum",!0),f=this.safeInteger(t,"seqId");if(u){let r;let a=this.safeInteger(t,"prevSeqId"),o=i.nonce,l=h.length,u=d.length,f=[];for(let e=0;e<25;e++)e<u&&(f.push(this.numberToString(d[e][0])),f.push(this.numberToString(d[e][1]))),e<l&&(f.push(this.numberToString(h[e][0])),f.push(this.numberToString(h[e][1])));let p=f.join(":"),m=this.safeInteger(t,"checksum"),g=this.crc32(p,!0);-1!==a&&o!==a&&(r=new n.InvalidNonce(this.id+" watchOrderBook received invalid nonce")),m!==g&&(r=new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(c))),void 0!==r&&(delete e.subscriptions[s],delete this.orderbooks[c],e.reject(r,s))}let p=this.safeInteger(t,"ts");return i.nonce=f,i.timestamp=p,i.datetime=this.iso8601(p),i}handleOrderBook(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeString(t,"action"),a=this.safeList(t,"data",[]),n=this.safeString(i,"instId"),o=this.safeMarket(n),h=o.symbol,d=this.safeInteger({"bbo-tbt":1,books:400,books5:5,"books-l2-tbt":400,"books50-l2-tbt":50},s),l=s+":"+h;if("snapshot"===r)for(let t=0;t<a.length;t++){let i=a[t],s=this.orderBook({},d);this.orderbooks[h]=s,s.symbol=h,this.handleOrderBookMessage(e,i,s,l),e.resolve(s,l)}else if("update"===r){if(h in this.orderbooks){let t=this.orderbooks[h];for(let i=0;i<a.length;i++){let s=a[i];this.handleOrderBookMessage(e,s,t,l,o),e.resolve(t,l)}}}else if("books5"===s||"bbo-tbt"===s){h in this.orderbooks||(this.orderbooks[h]=this.orderBook({},d));let t=this.orderbooks[h];for(let i=0;i<a.length;i++){let s=a[i],r=this.safeInteger(s,"ts"),n=this.parseOrderBook(s,h,r,"bids","asks",0,1);t.reset(n),e.resolve(t,l)}}return t}async authenticate(e={}){this.checkRequiredCredentials();let t=this.safeString(e,"access","private");e=this.omit(e,["access"]);let i=this.getUrl("users",t),s="authenticated",r=this.client(i),a=r.future(s);if(void 0===this.safeValue(r.subscriptions,s)){let t=this.seconds().toString(),r=this.hmac(this.encode(t+"GET/users/self/verify"),this.encode(this.secret),l.s,"base64"),a={op:"login",args:[{apiKey:this.apiKey,passphrase:this.password,timestamp:t,sign:r}]};"access"in e&&(a.access=e.access),this.watch(i,s,a,s)}return await a}async watchBalance(e={}){return await this.loadMarkets(),await this.authenticate(),await this.subscribe("private","account","account",void 0,e)}handleBalanceAndPosition(e,t){this.handleMyLiquidation(e,t)}handleBalance(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r="spot",a=this.parseTradingBalance(t),n=this.safeValue(this.balance,r,{}),o=this.deepExtend(n,a);this.balance[r]=this.safeBalance(o),e.resolve(this.balance[r],s)}orderToTrade(e,t){let i=this.safeValue(e,"info",{}),s=this.safeInteger(i,"fillTime"),r=this.safeString(i,"fillFeeCcy"),a="T"===this.safeString(i,"execType","");return this.safeTrade({info:i,timestamp:s,datetime:this.iso8601(s),symbol:this.safeString(e,"symbol"),id:this.safeString(i,"tradeId"),order:this.safeString(e,"id"),type:this.safeString(e,"type"),takerOrMaker:a?"taker":"maker",side:this.safeString(e,"side"),price:this.safeNumber(i,"fillPx"),amount:this.safeNumber(i,"fillSz"),cost:this.safeNumber(e,"cost"),fee:{cost:this.safeNumber(i,"fillFee"),currency:this.safeCurrencyCode(r)}},t)}async watchMyTrades(e,t,i,s={}){let r,a,n;[r,s]=this.handleOptionAndParams(s,"watchMyTrades","type","ANY");let o=this.safeBool2(s,"trigger","stop",!1);s=this.omit(s,["trigger","stop"]),await this.loadMarkets(),await this.authenticate({access:o?"business":"private"});let h=o?"orders-algo":"orders",d=h+"::myTrades";void 0!==e&&(e=(a=this.market(e)).symbol,r=a.type,d=d+"::"+e),"future"===r&&(r="futures");let l=r.toUpperCase();[n,s]=this.handleMarginModeAndParams("watchMyTrades",s),"SPOT"===l&&void 0!==n&&(l="MARGIN");let c={instType:l},u=await this.subscribe("private",d,h,void 0,this.extend(c,s));return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySymbolSinceLimit(u,e,t,i,!0)}async watchPositions(e,t,i,s={}){let r;await this.loadMarkets(),await this.authenticate(s);let a="positions";if(void 0===(e=this.marketSymbols(e))){let e=[this.extend({channel:"positions",instType:"ANY"},s)],t=this.getUrl(a,"private");r=await this.watch(t,a,{op:"subscribe",args:e},a)}else r=await this.subscribeMultiple("private",a,e,this.extend({instType:"ANY"},s));return this.newUpdates?r:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}handlePositions(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"instId"),r=this.safeMarket(s,void 0,"-").symbol,a=this.safeString(i,"channel",""),n=this.safeValue(t,"data",[]);void 0===this.positions&&(this.positions=new sH.Hk);let o=this.positions,h=[];for(let e=0;e<n.length;e++){let t=n[e],i=this.parsePosition(t);if(0===i.contracts){i.side="long";let e=this.clone(i);e.side="short",o.append(e),h.push(e)}h.push(i),o.append(i)}let d=a;void 0!==r&&(d=a+"::"+r),e.resolve(h,d)}async watchOrders(e,t,i,s={}){let r,a,n;[r,s]=this.handleOptionAndParams(s,"watchOrders","type","ANY");let o=this.safeValue2(s,"stop","trigger",!1);s=this.omit(s,["stop","trigger"]),await this.loadMarkets(),await this.authenticate({access:o?"business":"private"}),void 0!==e&&(e=(a=this.market(e)).symbol,r=a.type),"future"===r&&(r="futures");let h=r.toUpperCase();[n,s]=this.handleMarginModeAndParams("watchOrders",s),"SPOT"===h&&void 0!==n&&(h="MARGIN");let d={instType:h},l=o?"orders-algo":"orders",c=await this.subscribe("private",l,l,e,this.extend(d,s));return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleOrders(e,t,i){this.handleMyTrades(e,t);let s=this.safeValue(t,"arg",{}),r=this.safeString(s,"channel"),a=this.safeValue(t,"data",[]);if(a.length>0){let t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new sH.Pt(t),this.triggerOrders=new sH.Pt(t));let i="orders-algo"===r?this.triggerOrders:this.orders,s=[],n=this.parseOrders(a);for(let e=0;e<n.length;e++){let t=n[e];i.append(t);let r=t.symbol,a=this.market(r);s.push(a.id)}e.resolve(i,r);for(let t=0;t<s.length;t++){let a=r+":"+s[t];e.resolve(i,a)}}}handleMyTrades(e,t){let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeValue(t,"data",[]),a=[];for(let e=0;e<r.length;e++){let t=r[e];if(this.safeString(t,"tradeId","").length>0){let e=this.parseOrder(t);a.push(e)}}if(0===a.length)return;if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let n=this.myTrades,o={};for(let e=0;e<a.length;e++){let t=a[e],i=this.orderToTrade(t);n.append(i),o[i.symbol]=!0}let h=s+"::myTrades";e.resolve(this.myTrades,h);let d=Object.keys(o);for(let t=0;t<d.length;t++){let i=h+"::"+d[t];e.resolve(this.myTrades,i)}}requestId(){return this.milliseconds().toString()+this.randNumber(4).toString()}async createOrderWs(e,t,i,s,r,a={}){let o;await this.loadMarkets(),await this.authenticate();let h=this.getUrl("private","private"),d=this.requestId();[o,a]=this.handleOptionAndParams(a,"createOrderWs","op","batch-orders");let l=this.createOrderRequest(e,t,i,s,r,a),c=this.safeString(l,"ordType");if("trigger"===c||"conditional"===c||"oco"===t||"move_order_stop"===t||"iceberg"===t||"twap"===t)throw new n.BadRequest(this.id+' createOrderWs() does not support algo trading. this.options["createOrderWs"]["op"] must be either order or batch-order');if("order"!==o&&"batch-orders"!==o)throw new n.BadRequest(this.id+' createOrderWs() does not support algo trading. this.options["createOrderWs"]["op"] must be either order or privatePostTradeOrder or privatePostTradeOrderAlgo');return await this.watch(h,d,{id:d,op:o,args:[l]},d)}handlePlaceOrders(e,t){let i=this.safeString(t,"id"),s=this.safeValue(t,"data",[]);if(s=this.filterBy(s,"sCode","0"),this.isEmpty(s)){let i=this.safeString(t,"op"),s=this.json(t);this.handleErrors(void 0,void 0,e.url,i,void 0,s,t,void 0,void 0)}let r=this.parseOrders(s,void 0,void 0,void 0),a=this.safeDict(r,0,{});e.resolve(a,i)}async editOrderWs(e,t,i,s,r,a,n={}){let o;await this.loadMarkets(),await this.authenticate();let h=this.getUrl("private","private"),d=this.requestId();[o,n]=this.handleOptionAndParams(n,"editOrderWs","op","amend-order");let l={id:d,op:o,args:[this.editOrderRequest(e,t,i,s,r,a,n)]};return await this.watch(h,d,this.extend(l,n),d)}async cancelOrderWs(e,t,i={}){if(void 0===t)throw new n.BadRequest(this.id+" cancelOrderWs() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let s=this.getUrl("private","private"),r=this.requestId(),a=this.safeString2(i,"clOrdId","clientOrderId");i=this.omit(i,["clientOrderId","clOrdId"]);let o={instId:this.marketId(t)};void 0!==a?o.clOrdId=a:o.ordId=e;let h={id:r,op:"cancel-order",args:[this.extend(o,i)]};return await this.watch(s,r,h,r)}async cancelOrdersWs(e,t,i={}){let s=e.length;if(s>20)throw new n.BadRequest(this.id+" cancelOrdersWs() accepts up to 20 ids at a time");if(void 0===t)throw new n.BadRequest(this.id+" cancelOrdersWs() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r=this.getUrl("private","private"),a=this.requestId(),o=[];for(let i=0;i<s;i++){let s={instId:this.marketId(t),ordId:e[i]};o.push(s)}return await this.watch(r,a,this.deepExtend({id:a,op:"batch-cancel-orders",args:o},i),a)}async cancelAllOrdersWs(e,t={}){if(void 0===e)throw new n.BadRequest(this.id+" cancelAllOrdersWs() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let i=this.market(e);if("option"!==i.type)throw new n.BadRequest(this.id+"cancelAllOrdersWs is only applicable to Option in Portfolio Margin mode, and MMP privilege is required.");let s=this.getUrl("private","private"),r=this.requestId(),a={id:r,op:"mass-cancel",args:[this.extend({instType:"OPTION",instFamily:i.id},t)]};return await this.watch(s,r,a,r)}handleCancelAllOrders(e,t){let i=this.safeString(t,"id"),s=this.safeValue(t,"data",[]);e.resolve(s,i)}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){this.safeValue(e.futures,"authenticated").resolve(!0)}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){let i=this.safeString(t,"code");try{if(i&&"0"!==i){let e=this.id+" "+this.json(t);"1"!==i&&this.throwExactlyMatchedException(this.exceptions.exact,i,e);let s=this.safeValue(t,"msg");if(void 0!==s)this.throwBroadlyMatchedException(this.exceptions.broad,s,e);else{let r=this.safeList(t,"data",[]);for(let a=0;a<r.length;a++){let n=r[a];i=this.safeString(n,"sCode"),void 0!==i&&this.throwExactlyMatchedException(this.exceptions.exact,i,e),s=this.safeValue(t,"sMsg"),void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}}throw new n.ExchangeError(e)}}catch(s){let i=this.safeString(t,"id");if(void 0===i){let e=this.safeString(t,"msg");if(void 0!==e&&e.startsWith("Illegal request: {")){let t=e.replace("Illegal request: ",""),s=this.parseJson(t);i=this.safeString(s,"id")}}if(void 0!==i)return e.reject(s,i),!1;return e.reject(s),!1}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t){this.handlePong(e,t);return}let i=this.safeString2(t,"event","op");if(void 0!==i){let s={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus,unsubscribe:this.handleUnsubscription,order:this.handlePlaceOrders,"batch-orders":this.handlePlaceOrders,"amend-order":this.handlePlaceOrders,"batch-amend-orders":this.handlePlaceOrders,"cancel-order":this.handlePlaceOrders,"mass-cancel":this.handleCancelAllOrders},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}else{let i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r={"bbo-tbt":this.handleOrderBook,books:this.handleOrderBook,books5:this.handleOrderBook,"books50-l2-tbt":this.handleOrderBook,"books-l2-tbt":this.handleOrderBook,tickers:this.handleTicker,"mark-price":this.handleTicker,positions:this.handlePositions,"index-tickers":this.handleTicker,"sprd-tickers":this.handleTicker,"block-tickers":this.handleTicker,trades:this.handleTrades,account:this.handleBalance,"funding-rate":this.handleFundingRate,orders:this.handleOrders,"orders-algo":this.handleOrders,"liquidation-orders":this.handleLiquidation,balance_and_position:this.handleBalanceAndPosition},a=this.safeValue(r,s);void 0===a?0===s.indexOf("candle")&&this.handleOHLCV(e,t):a.call(this,e,t)}}handleUnSubscriptionTrades(e,t){this.cleanUnsubscription(e,"trades:"+t,"unsubscribe:trades:"+t),t in this.trades&&delete this.trades[t]}handleUnsubscriptionOrderBook(e,t,i){this.cleanUnsubscription(e,i+":"+t,"unsubscribe:orderbook:"+t),t in this.orderbooks&&delete this.orderbooks[t]}handleUnsubscriptionOHLCV(e,t,i){let s=i.replace("candle",""),r=this.findTimeframe(s),a="multi:"+i+":"+t;this.cleanUnsubscription(e,a,"unsubscribe:"+a),r in this.ohlcvs[t]&&delete this.ohlcvs[t][r]}handleUnsubscriptionTicker(e,t,i){this.cleanUnsubscription(e,i+"::"+t,"unsubscribe:ticker:"+t),t in this.tickers&&delete this.tickers[t]}handleUnsubscription(e,t){let i=this.safeDict(t,"arg",{}),s=this.safeString(i,"channel",""),r=this.safeString(i,"instId"),a=this.safeSymbol(r);"trades"===s?this.handleUnSubscriptionTrades(e,a):s.startsWith("bbo")||s.startsWith("book")?this.handleUnsubscriptionOrderBook(e,a,s):s.indexOf("tickers")>-1?this.handleUnsubscriptionTicker(e,a,s):s.startsWith("candle")&&this.handleUnsubscriptionOHLCV(e,a,s)}}class rD extends rR{describe(){return this.deepExtend(super.describe(),{id:"myokx",name:"MyOKX",urls:{api:{ws:"wss://wseea.okx.com:8443/ws/v5"},test:{ws:"wss://wseeapap.okx.com:8443/ws/v5"}},has:{swap:!1,future:!1,option:!1}})}}class rV extends iL{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchTradesForSymbols:!1,watchTicker:!0,watchOHLCV:!0},urls:{test:{ws:"wss://ndaxmarginstaging.cdnhop.net:10456/WSAdminGatewa/"},api:{ws:"wss://api.ndax.io/WSGateway"}}})}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchTicker(e,t={}){let i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let s=this.market(e),r="SubscribeLevel1",a=r+":"+s.id,n=this.urls.api.ws,o=this.requestId(),h={OMSId:i,InstrumentId:parseInt(s.id)},d={m:0,i:o,n:r,o:this.json(h)},l=this.extend(d,t);return await this.watch(n,a,l,a)}handleTicker(e,t){let i=this.safeValue(t,"o",{}),s=this.parseTicker(i),r=s.symbol,a=this.market(r);this.tickers[r]=s;let n="SubscribeLevel1:"+a.id;e.resolve(s,n)}async watchTrades(e,t,i,s={}){let r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let a=this.market(e);e=a.symbol;let n="SubscribeTrades",o=n+":"+a.id,h=this.urls.api.ws,d=this.requestId(),l={OMSId:r,InstrumentId:parseInt(a.id),IncludeLastCount:100},c={m:0,i:d,n:n,o:this.json(l)},u=this.extend(c,s),f=await this.watch(h,o,u,o);return this.newUpdates&&(i=f.getLimit(e,i)),this.filterBySinceLimit(f,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"o",[]),s={};for(let e=0;e<i.length;e++){let t=this.parseTrade(i[e]),r=t.symbol,a=this.safeValue(this.trades,r);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e)}a.append(t),this.trades[r]=a,s[r]=!0}let r=Object.keys(s);for(let t=0;t<r.length;t++){let i=r[t],s="SubscribeTrades:"+this.market(i).id,a=this.safeValue(this.trades,i);e.resolve(a,s)}}async watchOHLCV(e,t="1m",i,s,r={}){let a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let n=this.market(e);e=n.symbol;let o="SubscribeTicker",h=o+":"+t+":"+n.id,d=this.urls.api.ws,l=this.requestId(),c={OMSId:a,InstrumentId:parseInt(n.id),Interval:parseInt(this.safeString(this.timeframes,t,t)),IncludeLastCount:100},u={m:0,i:l,n:o,o:this.json(c)},f=this.extend(u,r),p=await this.watch(d,h,f,h);return this.newUpdates&&(s=p.getLimit(e,s)),this.filterBySinceLimit(p,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeValue(t,"o",[]),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,8),a=this.safeMarket(r).symbol;s[r]={},this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let n=Object.keys(this.timeframes);for(let e=0;e<n.length;e++){let i=n[e],o=1e3*parseInt(this.safeString(this.timeframes,i,i)),h=this.safeInteger(t,0),d=[this.parseToInt(h/o*o),this.safeFloat(t,3),this.safeFloat(t,1),this.safeFloat(t,2),this.safeFloat(t,4),this.safeFloat(t,5)],l=this.safeValue(this.ohlcvs[a],i,[]),c=l.length;if(c&&d[0]===l[c-1][0]){let e=l[c-1];l[c-1]=[d[0],e[1],Math.max(d[1],e[1]),Math.min(d[2],e[2]),d[4],this.sum(d[5],e[5])],s[r][i]=!0}else{if(c&&d[0]<l[c-1][0])continue;l.push(d),c>=this.safeInteger(this.options,"OHLCVLimit",1e3)&&l.shift(),s[r][i]=!0}this.ohlcvs[a][i]=l}}let r=Object.keys(s);for(let t=0;t<r.length;t++){let i=r[t],a=Object.keys(s[i]);for(let t=0;t<a.length;t++){let s=a[t],r="SubscribeTicker:"+s+":"+i,n=this.safeMarket(i).symbol,o=this.safeValue(this.ohlcvs[n],s,[]);e.resolve(o,r)}}}async watchOrderBook(e,t,i={}){let s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();let r=this.market(e);e=r.symbol;let a="SubscribeLevel2",n=a+":"+r.id,o=this.urls.api.ws,h=this.requestId();t=void 0===t?100:t;let d={OMSId:s,InstrumentId:parseInt(r.id),Depth:t},l={m:0,i:h,n:a,o:this.json(d)},c={id:h,messageHash:n,name:a,symbol:e,marketId:r.id,method:this.handleOrderBookSubscription,limit:t,params:i},u=this.extend(l,i);return(await this.watch(o,n,u,n,c)).limit()}handleOrderBook(e,t){let i,s;let r=this.safeValue(t,"o",[]),a=this.safeValue(r,0,[]),n=this.safeString(a,7);if(void 0===n)return;let o=this.safeMarket(n).symbol,h=this.safeValue(this.orderbooks,o);if(void 0!==h){for(let e=0;e<r.length;e++){let t=r[e];i=void 0===i?this.safeInteger(t,2):Math.max(i,this.safeInteger(t,2)),s=void 0===s?this.safeInteger(t,0):Math.max(s,this.safeInteger(t,0));let a=this.safeInteger(t,3),n=this.safeFloat(t,6),o=this.safeFloat(t,8),d=0===this.safeInteger(t,9)?h.bids:h.asks;0===a?d.store(n,o):1===a?d.store(n,o):2===a&&d.store(n,0)}h.nonce=s,h.timestamp=i,h.datetime=this.iso8601(i),this.orderbooks[o]=h,e.resolve(h,"SubscribeLevel2:"+n)}}handleOrderBookSubscription(e,t,i){let s=this.safeValue(t,"o",[]),r=this.safeString(i,"symbol"),a=this.parseOrderBook(s,r),n=this.safeInteger(i,"limit"),o=this.orderBook(a,n);this.orderbooks[r]=o;let h=this.safeString(i,"messageHash");e.resolve(o,h)}handleSubscriptionStatus(e,t){let i=this.indexBy(e.subscriptions,"id"),s=this.safeInteger(t,"i"),r=this.safeValue(i,s);if(void 0!==r){let i=this.safeValue(r,"method");void 0!==i&&i.call(this,e,t,r)}}handleMessage(e,t){let i=this.safeString(t,"o");if(void 0===i)return;t.o=JSON.parse(i);let s={SubscribeLevel2:this.handleSubscriptionStatus,SubscribeLevel1:this.handleTicker,Level2UpdateEvent:this.handleOrderBook,Level1UpdateEvent:this.handleTicker,SubscribeTrades:this.handleTrades,TradeDataUpdateEvent:this.handleTrades,SubscribeTicker:this.handleOHLCV,TickerDataUpdateEvent:this.handleOHLCV},r=this.safeString(t,"n"),a=this.safeValue(s,r);void 0!==a&&a.call(this,e,t)}}class rq extends iW{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchTradesForSymbols:!1,watchBalance:!0,watchOHLCV:!0},urls:{api:{ws:"wss://real.okcoin.com:8443/ws/v3"},logo:"https://user-images.githubusercontent.com/1294454/27766791-89ffb502-5ee5-11e7-8a5b-c5950b68ac65.jpg",www:"https://www.okcoin.com",doc:"https://www.okcoin.com/docs/en/",fees:"https://www.okcoin.com/coin-fees",referral:"https://www.okcoin.com/account/register?flag=activity&channelId=600001513"},options:{fetchMarkets:["spot"],watchOrders:"order",watchOrderBook:{limit:400,type:"spot",depth:"depth_l2_tbt"},watchBalance:"spot",ws:{inflate:!0}},streaming:{ping:this.ping,keepAlive:2e4}})}async subscribe(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=this.urls.api.ws,a=s.type+"/"+e+":"+s.id;return await this.watch(r,a,this.deepExtend({op:"subscribe",args:[a]},i),a)}async watchTrades(e,t,i,s={}){await this.loadMarkets(),e=this.symbol(e);let r=await this.subscribe("trade",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrders(e,t,i,s={}){await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=this.symbol(e));let r=this.safeString(this.options,"watchOrders","order"),a=await this.subscribe(r,e,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}handleOrders(e,t,i){let s=this.safeString(t,"table"),r=this.safeValue(t,"data",[]);if(r.length>0){let t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new sH.Pt(t));let i=this.orders,a={},n=this.parseOrders(r);for(let e=0;e<n.length;e++){let t=n[e];i.append(t);let s=t.symbol;a[this.market(s).id]=!0}let o=Object.keys(a);for(let t=0;t<o.length;t++){let i=s+":"+o[t];e.resolve(this.orders,i)}}}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleTrade(e,t){let i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<s.length;t++){let a=this.parseTrade(s[t]),n=a.symbol,o=i+":"+this.safeString(a.info,"instrument_id"),h=this.safeValue(this.trades,n);void 0===h&&(h=new sH.I3(r),this.trades[n]=h),h.append(a),e.resolve(h,o)}return t}handleTicker(e,t){let i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]);for(let t=0;t<s.length;t++){let r=this.parseTicker(s[t]),a=r.symbol,n=i+":"+this.safeString(r.info,"instrument_id");this.tickers[a]=r,e.resolve(r,n)}return t}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets(),e=this.symbol(e);let a=this.safeString(this.timeframes,t,t),n=await this.subscribe("candle"+a+"s",e,r);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=i.split("/"),a=this.safeString(r,1).replace("candle","");a=a.replace("s","");let n=this.findTimeframe(a);for(let t=0;t<s.length;t++){let r=this.safeString(s[t],"instrument_id"),a=this.safeValue(s[t],"candle"),o=this.safeMarket(r),h=o.symbol,d=this.parseOHLCV(a,o);this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let l=this.safeValue(this.ohlcvs[h],n);if(void 0===l){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new sH.TG(e),this.ohlcvs[h][n]=l}l.append(d);let c=i+":"+r;e.resolve(l,c)}}async watchOrderBook(e,t,i={}){let s=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(s,"depth","depth_l2_tbt");return(await this.subscribe(r,e,i)).limit()}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){let s=this.safeValue(t,"asks",[]),r=this.safeValue(t,"bids",[]);this.handleDeltas(i.asks,s),this.handleDeltas(i.bids,r);let a=this.parse8601(this.safeString(t,"timestamp"));return i.timestamp=a,i.datetime=this.iso8601(a),i}handleOrderBook(e,t){let i=this.safeString(t,"action"),s=this.safeValue(t,"data",[]),r=this.safeString(t,"table");if("partial"===i)for(let t=0;t<s.length;t++){let i=s[t],a=this.safeString(i,"instrument_id"),n=this.safeMarket(a).symbol,o=this.safeValue(this.options,"watchOrderBook",{}),h=this.safeInteger(o,"limit",400),d=this.orderBook({},h);this.orderbooks[n]=d,this.handleOrderBookMessage(e,i,d);let l=r+":"+a;e.resolve(d,l)}else for(let t=0;t<s.length;t++){let i=s[t],a=this.safeString(i,"instrument_id"),n=this.safeMarket(a).symbol;if(n in this.orderbooks){let t=this.orderbooks[n];this.handleOrderBookMessage(e,i,t);let s=r+":"+a;e.resolve(t,s)}}return t}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws,i="login",s=this.client(t),r=this.safeValue(s.subscriptions,i);if(void 0===r){r=s.future("authenticated");let e=this.seconds().toString(),a=this.hmac(this.encode(e+"GET/users/self/verify"),this.encode(this.secret),l.s,"base64"),n={op:i,args:[this.apiKey,this.password,e,a]};this.spawn(this.watch,t,i,n,i,r)}return await r}async watchBalance(e={}){let t=this.safeString2(this.options,"watchBalance","defaultType");if(void 0===this.safeString(e,"type",t))throw new n.ArgumentsRequired(this.id+" watchBalance requires a type parameter (one of 'spot', 'margin', 'futures', 'swap')");let i=await this.authenticate();return await this.subscribeToUserAccount(i,e)}async subscribeToUserAccount(e,t={}){let i,s;let r=this.safeString2(this.options,"watchBalance","defaultType"),a=this.safeString(t,"type",r);if(void 0===a)throw new n.ArgumentsRequired(this.id+" watchBalance requires a type parameter (one of 'spot', 'margin', 'futures', 'swap')");await this.loadMarkets();let o=this.safeString(t,"currency"),h=this.safeString(t,"code",this.safeCurrencyCode(o));void 0!==h&&(i=this.currency(h));let d=this.safeString(t,"symbol"),l=this.market(d),c=void 0===l,u=void 0===i;if("spot"===a){if(u)throw new n.ArgumentsRequired(this.id+" watchBalance requires a 'currency' (id) or a unified 'code' parameter for "+a+" accounts")}else if("margin"===a||"swap"===a||"option"===a){if(c)throw new n.ArgumentsRequired(this.id+" watchBalance requires a 'instrument_id' (id) or a unified 'symbol' parameter for "+a+" accounts")}else if("futures"===a&&u&&c)throw new n.ArgumentsRequired(this.id+" watchBalance requires a 'currency' (id), or unified 'code', or 'instrument_id' (id), or unified 'symbol' parameter for "+a+" accounts");u?c||(s=l.id):s=i.id;let f=("margin"===a?"spot":a)+"/"+("margin"===a?"margin_account":"account"),p=f+":"+s,m=this.urls.api.ws,g=this.omit(t,["currency","code","instrument_id","symbol","type"]);return await this.watch(m,f,this.deepExtend({op:"subscribe",args:[p]},g),p)}handleBalance(e,t){let i=this.safeString(t,"table"),s=i.split("/"),r=this.safeValue(t,"data",[]);this.balance.info=r;let a=this.safeString(s,0);"spot"===a&&"margin_account"===this.safeString(s,1)&&(a="margin");for(let t=0;t<r.length;t++){let t=this.parseBalanceByType(a,r),s=this.safeValue(this.balance,a,{}),n=this.deepExtend(s,t);this.balance[a]=this.safeBalance(n),e.resolve(this.balance[a],i)}}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){return e.resolve(t,"authenticated"),t}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){let i=this.safeString(t,"errorCode");try{if(void 0!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);let s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}}catch(t){if(t instanceof n.AuthenticationError){e.reject(t,"authenticated");let i="login";return i in e.subscriptions&&delete e.subscriptions[i],!1}}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t){this.handlePong(e,t);return}let i=this.safeString(t,"table");if(void 0===i){let i=this.safeString(t,"event");if(void 0!==i){let s={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}else{let s=i.split("/"),r=this.safeString(s,1),a={depth:this.handleOrderBook,depth5:this.handleOrderBook,depth_l2_tbt:this.handleOrderBook,ticker:this.handleTicker,trade:this.handleTrade,account:this.handleBalance,margin_account:this.handleBalance,order:this.handleOrders},n=this.safeValue(a,r);r.indexOf("candle")>=0&&(n=this.handleOHLCV),void 0!==n&&n.call(this,e,t)}}}class rF extends iz{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0,watchOrders:!0,watchMyTrades:!1,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchBalance:!0,createOrderWs:!0,editOrderWs:!0,cancelOrderWs:!0,cancelOrdersWs:!0},urls:{api:{ws:"wss://api.ox.fun/v2/websocket",test:"wss://stgapi.ox.fun/v2/websocket"}},options:{timeframes:{"1m":"60s","3m":"180s","5m":"300s","15m":"900s","30m":"1800s","1h":"3600s","2h":"7200s","4h":"14400s","6h":"21600s","12h":"43200s","1d":"86400s"},watchOrderBook:{channel:"depth"}},streaming:{ping:this.ping,keepAlive:5e4}})}async subscribeMultiple(e,t,i={}){let s=this.urls.api.ws;return await this.watchMultiple(s,e,this.extend({op:"subscribe",args:t},i),e)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],s="trades:"+i;a.push(s);let n="trade:"+this.marketId(i);r.push(n)}let n=await this.subscribeMultiple(a,r,s);if(this.newUpdates){let e=this.safeDict(n,0,{}),t=this.safeString(e,"symbol");i=n.getLimit(t,i)}return this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeList(t,"data",[]);for(let t=0;t<i.length;t++){let s=this.safeDict(i,t,{}),r=this.parseWsTrade(s),a=this.safeString(r,"symbol"),n="trades:"+a;if(!(a in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.trades[a]=new sH.I3(e)}let o=this.trades[a];o.append(r),e.resolve(o,n)}}parseWsTrade(e,t){let i=this.safeString(e,"marketCode");t=this.safeMarket(i,t);let s=this.safeInteger(e,"timestamp");return this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:this.safeString(e,"tradeId"),order:void 0,type:void 0,takerOrMaker:this.safeStringLower(e,"matchType"),side:this.safeStringLower(e,"side"),price:this.safeNumber(e,"price"),amount:this.safeNumber(e,"quantity"),cost:void 0,fee:void 0})}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n=this.safeDict(this.options,"timeframes",{}),o="candles"+this.safeString(n,t,t)+":"+a.id,h="ohlcv:"+e+":"+t,d=this.urls.api.ws,l=await this.watch(d,h,this.extend({op:"subscribe",args:[o]},r),h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}async watchOHLCVForSymbols(e,t,i,s={}){if(0===e.length||!Array.isArray(e[0]))throw new n.ArgumentsRequired(this.id+" watchOHLCVForSymbols() requires a an array of symbols and timeframes, like  [['BTC/USDT:OX', '1m'], ['OX/USDT', '5m']]");await this.loadMarkets();let r=[],a=[],o=this.safeDict(this.options,"timeframes",{});for(let t=0;t<e.length;t++){let i=e[t],s=i[0],n=i[1],h=this.marketId(s),d="candles"+this.safeString(o,n,n)+":"+h;r.push(d);let l="multi:ohlcv:"+s+":"+n;a.push(l)}let[h,d,l]=await this.subscribeMultiple(a,r,s);this.newUpdates&&(i=l.getLimit(h,i));let c=this.filterBySinceLimit(l,t,i,0,!0);return this.createOHLCVObject(h,d,c)}handleOHLCV(e,t){let i=this.safeString(t,"table").split("candles"),s=this.safeString(i,1,""),r=this.findTimeframe(s),a=this.safeList(t,"data",[]),n=this.safeDict(a,0,{}),o=this.safeString(n,"marketCode"),h=this.safeMarket(o),d=this.safeSymbol(o,h);if(d in this.ohlcvs||(this.ohlcvs[d]={}),!(r in this.ohlcvs[d])){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs[d][r]=new sH.TG(e)}let l=this.safeList(n,"candle",[]),c=this.parseWsOHLCV(l,h),u=this.ohlcvs[d][r];u.append(c);let f="ohlcv:"+d+":"+r;e.resolve(u,f),e.resolve([d,r,u],"multi:"+f)}parseWsOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,6)]}async watchOrderBook(e,t,i={}){return await this.watchOrderBookForSymbols([e],t,i)}async watchOrderBookForSymbols(e,t,i={}){await this.loadMarkets(),e=this.marketSymbols(e);let s="depth",r=this.safeDict(this.options,"watchOrderBook",{}),a=this.safeString(r,"channel");void 0!==a?s=a:void 0!==t&&(t<=5?s="depthL5":t<=10?s="depthL10":t<=25&&(s="depthL25"));let n=[],o=[];for(let t=0;t<e.length;t++){let i=e[t],r="orderbook:"+i;o.push(r);let a=s+":"+this.marketId(i);n.push(a)}return(await this.subscribeMultiple(o,n,i)).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"marketCode"),r=this.safeSymbol(s),a=this.safeInteger(i,"timestamp"),n="orderbook:"+r;r in this.orderbooks||(this.orderbooks[r]=this.orderBook({}));let o=this.orderbooks[r],h=this.parseOrderBook(i,r,a,"asks","bids");o.reset(h),o.nonce=this.safeInteger(i,"seqNum"),this.orderbooks[r]=o,e.resolve(o,n)}async watchTicker(e,t={}){let i=await this.watchTickers([e],t);return this.safeValue(i,e)}async watchTickers(e,t={}){await this.loadMarkets();let i=void 0===e,s=e,r=[];i&&(s=this.symbols,r.push("ticker:all"));let a=[];for(let e=0;e<s.length;e++){let t=s[e],n="tickers:"+t;a.push(n);let o=this.marketId(t);i||r.push("ticker:"+o)}let n=await this.subscribeMultiple(a,r,t);if(this.newUpdates){let e={};return e[n.symbol]=n,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeList(t,"data",[]);for(let t=0;t<i.length;t++){let s=this.safeDict(i,t,{}),r=this.parseTicker(s),a=r.symbol,n="tickers:"+a;this.tickers[a]=r,e.resolve(r,n)}}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=[],s=[];for(let t=0;t<e.length;t++){let r=this.market(e[t]);s.push("bestBidAsk:"+r.id),i.push("bidask:"+r.symbol)}let r=await this.subscribeMultiple(i,s,t);if(this.newUpdates){let e={};return e[r.symbol]=r,e}return this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeDict(t,"data",{}),s=this.parseWsBidAsk(i),r=s.symbol;this.bidsasks[r]=s,e.resolve(s,"bidask:"+r)}parseWsBidAsk(e,t){let i=this.safeString(e,"marketCode");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"timestamp"),a=this.safeList(e,"ask",[]),n=this.safeList(e,"bid",[]);return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeNumber(a,0),askVolume:this.safeNumber(a,1),bid:this.safeNumber(n,0),bidVolume:this.safeNumber(n,1),info:e},t)}async watchBalance(e={}){await this.loadMarkets(),this.authenticate();let t="balance",i=this.urls.api.ws;return await this.watch(i,t,this.extend({op:"subscribe",args:["balance:all"]},e),t)}handleBalance(e,t){let i=this.safeList(t,"data"),s=this.safeInteger(t,"timestamp");this.balance.info=t,this.balance.timestamp=s,this.balance.datetime=this.iso8601(s);for(let e=0;e<i.length;e++){let t=this.safeDict(i,e,{}),s=this.safeString(t,"instrumentId"),r=this.safeCurrencyCode(s);r in this.balance||(this.balance[r]=this.account());let a=this.balance[r];a.total=this.safeString(t,"total"),a.used=this.safeString(t,"reserved"),a.free=this.safeString(t,"available"),this.balance[r]=a}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}async watchPositions(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r=void 0===e,a=e,n=[];r&&(a=this.symbols,n.push("position:all"));let o=[];for(let e=0;e<a.length;e++){let t=a[e],i="positions:"+t;o.push(i);let s=this.marketId(t);r||n.push("position:"+s)}let h=await this.subscribeMultiple(o,n,s);return this.newUpdates?h:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}handlePositions(e,t){void 0===this.positions&&(this.positions=new sH.Hk);let i=this.positions,s=this.safeList(t,"data",[]);for(let t=0;t<s.length;t++){let r=this.safeDict(s,t,{}),a=this.parseWsPosition(r),n="positions:"+a.symbol;i.append(a),e.resolve(a,n)}}parseWsPosition(e,t){let i=this.safeString(e,"instrumentId");return t=this.safeMarket(i,t),this.safePosition({info:e,id:void 0,symbol:t.symbol,notional:void 0,marginMode:"cross",liquidationPrice:this.safeNumber(e,"estLiquidationPrice"),entryPrice:this.safeNumber(e,"entryPrice"),unrealizedPnl:this.safeNumber(e,"positionPnl"),realizedPnl:void 0,percentage:void 0,contracts:this.safeNumber(e,"quantity"),contractSize:void 0,markPrice:void 0,lastPrice:void 0,side:void 0,hedged:void 0,timestamp:void 0,datetime:void 0,lastUpdateTimestamp:this.safeInteger(e,"lastUpdated"),maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:void 0,marginRatio:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async watchOrders(e,t,i,s={}){await this.loadMarkets(),await this.authenticate();let r="orders",a="order:",n=this.safeMarket(e);void 0===e?a+="all":(r+=":"+e,a+=":"+n.id);let o={op:"subscribe",args:[a]},h=this.urls.api.ws,d=await this.watch(h,r,o,r);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}handleOrders(e,t){let i=this.safeList(t,"data",[]),s="orders";if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let r=this.orders;for(let t=0;t<i.length;t++){let a=this.safeDict(i,t,{}),n=this.parseOrder(a);r.append(n),s+=":"+n.symbol,e.resolve(this.orders,s)}}async createOrderWs(e,t,i,s,r,a={}){await this.loadMarkets(),await this.authenticate();let n=this.nonce().toString(),o={op:"placeorder",tag:n};a=this.omit(a,"tag");let h=this.createOrderRequest(e,t,i,s,r,a);void 0===this.safeInteger(h,"timestamp")&&(h.timestamp=this.milliseconds()),o.data=h;let d=this.urls.api.ws;return await this.watch(d,n,o,n)}async editOrderWs(e,t,i,s,r,a,n={}){await this.loadMarkets(),await this.authenticate();let o=this.nonce().toString(),h={op:"modifyorder",tag:o};n=this.omit(n,"tag");let d=this.createOrderRequest(t,i,s,r,a,n);d=this.extend(d,{orderId:e}),void 0===this.safeInteger(d,"timestamp")&&(d.timestamp=this.milliseconds()),h.data=d;let l=this.urls.api.ws;return await this.watch(l,o,h,o)}handlePlaceOrders(e,t){let i=this.safeString(t,"tag");if(!this.safeBool(t,"submitted")){let i=this.safeString(t,"event"),s=this.json(t),r=this.safeInteger(t,"code");this.handleErrors(r,void 0,e.url,i,void 0,s,t,void 0,void 0)}let s=this.safeValue(t,"data",{}),r=this.parseOrder(s);e.resolve(r,i)}async cancelOrderWs(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrderWs() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let s=this.nonce().toString(),r={marketCode:this.marketId(t),orderId:e},a=this.urls.api.ws;return await this.watch(a,s,{op:"cancelorder",tag:s,data:r},s)}async cancelOrdersWs(e,t,i={}){let s=e.length;if(s>20)throw new n.BadRequest(this.id+" cancelOrdersWs() accepts up to 20 ids at a time");if(void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrdersWs() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r=this.nonce().toString(),a=this.marketId(t),o=[];for(let t=0;t<s;t++){let i={instId:a,ordId:e[t]};o.push(i)}let h=this.urls.api.ws;return await this.watch(h,r,this.deepExtend({op:"cancelorders",tag:r,dataArray:o},i),r)}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeDict(i.subscriptions,s)){this.checkRequiredCredentials();let i=this.milliseconds(),r=i.toString()+"GET/auth/self/verify",a=this.hmac(this.encode(r),this.encode(this.secret),l.s,"base64"),n={op:"login",data:{apiKey:this.apiKey,timestamp:i,signature:a}},o=this.extend(n,e);this.watch(t,s,o,s)}return await r}handleAuthenticationMessage(e,t){let i=this.safeBool(t,"success",!1),s="authenticated";if(i)this.safeDict(e.futures,s).resolve(!0);else{let i=new n.AuthenticationError(this.json(t));e.reject(i,s),s in e.subscriptions&&delete e.subscriptions[s]}}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleMessage(e,t){if("pong"===t){this.handlePong(e,t);return}let i=this.safeString(t,"table"),s=this.safeList(t,"data",[]),r=this.safeString(t,"event");void 0!==i&&void 0!==s?("trade"===i&&this.handleTrades(e,t),"ticker"===i&&this.handleTicker(e,t),i.indexOf("candles")>-1&&this.handleOHLCV(e,t),i.indexOf("depth")>-1&&this.handleOrderBook(e,t),i.indexOf("balance")>-1&&this.handleBalance(e,t),i.indexOf("position")>-1&&this.handlePositions(e,t),i.indexOf("order")>-1&&this.handleOrders(e,t),"bestBidAsk"===i&&this.handleBidAsk(e,t)):("login"===r&&this.handleAuthenticationMessage(e,t),("placeorder"===r||"modifyorder"===r||"cancelorder"===r)&&this.handlePlaceOrders(e,t))}}class rH extends i${describe(){return this.deepExtend(super.describe(),{has:{ws:!0,cancelAllOrdersWs:!1,cancelOrdersWs:!1,cancelOrderWs:!1,createOrderWs:!1,editOrderWs:!1,fetchBalanceWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,fetchTradesWs:!1,watchBalance:!1,watchMyTrades:!1,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!1,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0},urls:{api:{ws:"wss://apiws.p2pb2b.com/"}},options:{OHLCVLimit:1e3,tradesLimit:1e3,timeframes:{"15m":900,"30m":1800,"1h":3600,"1d":86400},watchTicker:{name:"state"},watchTickers:{name:"state"},tickerSubs:this.createSafeDictionary()},streaming:{ping:this.ping}})}async subscribe(e,t,i,s={}){let r=this.urls.api.ws,a={method:e,params:i,id:this.milliseconds()},n=this.extend(a,s);return await this.watch(r,t,n,t)}async watchOHLCV(e,t="15m",i,s,r={}){await this.loadMarkets();let a=this.safeValue(this.options,"timeframes",{}),o=this.safeInteger(a,t);if(void 0===o)throw new n.BadRequest(this.id+" watchOHLCV cannot take a timeframe of "+t);let h=this.market(e),d=[h.id,o],l="kline::"+h.symbol,c=await this.subscribe("kline.subscribe",l,d,r);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.safeDict(this.options,"watchTicker"),s=this.safeString(i,"name","state");[s,t]=this.handleOptionAndParams(t,"method","name",s);let r=this.market(e);e=r.symbol,this.options.tickerSubs[r.id]=!0;let a=Object.keys(this.options.tickerSubs),n=s+"::"+r.symbol;return await this.subscribe(s+".subscribe",n,a,t)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=this.safeDict(this.options,"watchTicker"),s=this.safeString(i,"name","state");[s,t]=this.handleOptionAndParams(t,"method","name",s);let r=[],a=[];for(let t=0;t<e.length;t++){let i=this.market(e[t]);r.push(s+"::"+i.symbol),a.push(i.id)}let n=this.urls.api.ws,o={method:s+".subscribe",params:a,id:this.milliseconds()};return await this.watchMultiple(n,r,this.extend(o,t),r),this.filterByArray(this.tickers,"symbol",e)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets();let r=[];if(void 0!==(e=this.marketSymbols(e,void 0,!1,!0,!0)))for(let t=0;t<e.length;t++)r.push("deals::"+e[t]);let a=this.marketIds(e),n=this.urls.api.ws,o={method:"deals.subscribe",params:a,id:this.milliseconds()},h=this.extend(o,s),d=await this.watchMultiple(n,r,h,r);if(this.newUpdates){let e=this.safeValue(d,0),t=this.safeString(e,"symbol");i=d.getLimit(t,i)}return this.filterBySinceLimit(d,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="orderbook::"+s.symbol,a=this.safeString(i,"interval","0.001");void 0===t&&(t=100);let n=[s.id,t,a];return(await this.subscribe("depth.subscribe",r,n,i)).limit()}handleOHLCV(e,t){let i=this.safeList(t,"params");i=this.safeList(i,0);let s=this.safeString(t,"method").split("."),r=this.safeString(s,0),a=this.safeString(i,7),n=this.safeMarket(a),o=this.safeDict(this.options,"timeframes",{}),h=this.findTimeframe(r,o),d=this.safeString(n,"symbol"),l=r+"::"+d,c=this.parseOHLCV(i,n);this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let u=this.safeValue(this.ohlcvs[d],h);if(void 0!==d){if(void 0===u){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new sH.TG(e),this.ohlcvs[d][h]=u}u.append(c),e.resolve(u,l)}return t}handleTrade(e,t){let i=this.safeList(t,"params",[]),s=this.safeList(i,1),r=this.safeString(i,0),a=this.safeMarket(r),n=this.safeString(a,"symbol"),o=this.safeValue(this.trades,n);if(void 0===o){let e=this.safeInteger(this.options,"tradesLimit",1e3);o=new sH.I3(e),this.trades[n]=o}for(let e=0;e<s.length;e++){let t=s[e],i=this.parseTrade(t,a);o.append(i)}let h="deals::"+n;return e.resolve(o,h),t}handleTicker(e,t){let i;let s=this.safeList(t,"params",[]),r=this.safeString(s,0),a=this.safeMarket(r),n=this.safeString(t,"method"),o=n.split("."),h=this.safeString(o,0),d=this.safeDict(s,1);if("price.update"===n){let e=this.safeString(s,1);i=this.safeTicker({last:e,close:e,symbol:a.symbol})}else i=this.parseTicker(d,a);let l=i.symbol;return this.tickers[l]=i,e.resolve(i,h+"::"+l),t}handleOrderBook(e,t){let i=this.safeList(t,"params",[]),s=this.safeDict(i,1),r=this.safeList(s,"asks"),a=this.safeList(s,"bids"),n=this.safeString(i,2),o=this.safeMarket(n),h=o.symbol,d="orderbook::"+o.symbol,l=this.safeValue(e.subscriptions,d,{}),c=this.safeInteger(l,"limit"),u=this.safeValue(this.orderbooks,h);if(void 0===u&&(this.orderbooks[h]=this.orderBook({},c),u=this.orderbooks[h]),void 0!==a)for(let e=0;e<a.length;e++){let t=this.safeValue(a,e),i=this.safeNumber(t,0),s=this.safeNumber(t,1);u.bids.store(i,s)}if(void 0!==r)for(let e=0;e<r.length;e++){let t=this.safeValue(r,e),i=this.safeNumber(t,0),s=this.safeNumber(t,1);u.asks.store(i,s)}u.symbol=h,e.resolve(u,d)}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"result")){this.handlePong(e,t);return}let i=this.safeString(t,"method"),s={"depth.update":this.handleOrderBook,"price.update":this.handleTicker,"kline.update":this.handleOHLCV,"state.update":this.handleTicker,"deals.update":this.handleTrade},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}handleErrorMessage(e,t){let i=this.safeString(t,"error");if(void 0!==i)throw new n.ExchangeError(this.id+" error: "+this.json(i));return!1}ping(e){return{method:"server.ping",params:[],id:this.milliseconds()}}handlePong(e,t){return e.lastPong=this.safeInteger(t,"id"),t}onError(e,t){this.options.tickerSubs=this.createSafeDictionary(),this.onError(e,t)}onClose(e,t){this.options.tickerSubs=this.createSafeDictionary(),this.onClose(e,t)}}class rG extends iJ{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!0,watchOrderBook:!0,watchOrders:!1,watchTrades:!0,watchTradesForSymbols:!1,watchBalance:!1,watchOHLCV:!1},urls:{logo:"https://x.com/tradeparadex/photo",api:{ws:"wss://ws.api.prod.paradex.trade/v1"},test:{ws:"wss://ws.api.testnet.paradex.trade/v1"},www:"https://www.paradex.trade/",doc:"https://docs.api.testnet.paradex.trade/",fees:"https://docs.paradex.trade/getting-started/trading-fees",referral:""},options:{},streaming:{}})}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r="trades.";void 0!==e?r+=this.market(e).id:r+="ALL";let a=this.urls.api.ws,n={jsonrpc:"2.0",method:"subscribe",params:{channel:r}},o=await this.watch(a,r,this.deepExtend(n,s),r);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrade(e,t){let i=this.safeDict(t,"params",{}),s=this.safeDict(i,"data",{}),r=this.parseTrade(s),a=r.symbol,n=this.safeString(i,"channel"),o=this.safeValue(this.trades,a);return void 0===o&&(o=new sH.I3(this.safeInteger(this.options,"tradesLimit",1e3)),this.trades[a]=o),o.append(r),e.resolve(o,n),t}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s="order_book."+this.market(e).id+".snapshot@15@100ms",r=this.urls.api.ws;return(await this.watch(r,s,this.deepExtend({jsonrpc:"2.0",method:"subscribe",params:{channel:s}},i),s)).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"params",{}),s=this.safeDict(i,"data",{}),r=this.safeString(s,"market"),a=this.safeMarket(r),n=this.safeInteger(s,"last_updated_at"),o=a.symbol;o in this.orderbooks||(this.orderbooks[o]=this.orderBook());let h={bids:[],asks:[]},d=this.safeList(s,"inserts");for(let e=0;e<d.length;e++){let t=this.safeDict(d,e),i=this.safeString(t,"side"),s=this.safeString(t,"price"),r=this.safeString(t,"size");"BUY"===i?h.bids.push([s,r]):h.asks.push([s,r])}let l=this.orderbooks[o],c=this.parseOrderBook(h,o,n,"bids","asks");c.nonce=this.safeNumber(s,"seq_no"),l.reset(c);let u=this.safeString(i,"channel");e.resolve(l,u)}async watchTicker(e,t={}){await this.loadMarkets(),e=this.symbol(e);let i="markets_summary",s=this.urls.api.ws,r=i+"."+e;return await this.watch(s,r,this.deepExtend({jsonrpc:"2.0",method:"subscribe",params:{channel:i}},t),r)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i="markets_summary",s=this.urls.api.ws,r=[];if(Array.isArray(e))for(let t=0;t<e.length;t++){let s=i+"."+e[t];r.push(s)}else r.push(i);let a=await this.watchMultiple(s,r,this.deepExtend({jsonrpc:"2.0",method:"subscribe",params:{channel:i}},t),r);if(this.newUpdates){let e={};return e[a.symbol]=a,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeDict(t,"params",{}),s=this.safeDict(i,"data",{}),r=this.safeString(s,"symbol"),a=this.safeMarket(r),n=a.symbol,o=this.safeString(i,"channel"),h=this.parseTicker(s,a);return this.tickers[n]=h,e.resolve(h,o),e.resolve(h,o+"."+n),t}handleErrorMessage(e,t){let i=this.safeDict(t,"error");if(void 0===i)return!0;if(void 0!==this.safeString(i,"code")){let e=this.id+" "+this.json(i);this.throwExactlyMatchedException(this.exceptions.exact,"-32600",e);let t=this.safeValue(i,"message");void 0!==t&&this.throwBroadlyMatchedException(this.exceptions.broad,t,e)}return!1}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;let i=this.safeDict(t,"params");if(void 0!==i){let s=this.safeString(i,"channel").split("."),r=this.safeString(s,0),a={trades:this.handleTrade,order_book:this.handleOrderBook,markets_summary:this.handleTicker},n=this.safeValue(a,r);void 0!==n&&n.call(this,e,t)}}}class rU extends i3.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0,watchPositions:void 0,watchOrderBookForSymbols:!1,watchTradesForSymbols:!1,watchOHLCVForSymbols:!1,watchBalance:!0},urls:{test:{ws:"wss://testnet-api.phemex.com/ws"},api:{ws:"wss://ws.phemex.com"}},options:{tradesLimit:1e3,OHLCVLimit:1e3},streaming:{keepAlive:9e3}})}fromEn(e,t){if(void 0===e)return;let i=new r.Y(e);return i.decimals=this.sum(i.decimals,t),i.reduce(),i.toString()}fromEp(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"priceScale"))}fromEv(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"valueScale"))}fromEr(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"ratioScale"))}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}parseSwapTicker(e,t){let i,s,a;let n=this.safeString(e,"symbol"),o=(t=this.safeMarket(n,t)).symbol,h=this.safeIntegerProduct(e,"timestamp",1e-6),d=this.fromEp(this.safeString(e,"close"),t),l=this.parseNumber(d),c=this.parseNumber(this.fromEv(this.safeString(e,"turnover"),t)),u=this.parseNumber(this.fromEv(this.safeString(e,"volume"),t)),f=this.omitZero(this.fromEp(this.safeString(e,"open"),t)),p=this.parseNumber(f);return void 0!==f&&void 0!==d&&(i=this.parseNumber(r.Y.stringSub(d,f)),a=this.parseNumber(r.Y.stringDiv(r.Y.stringAdd(d,f),"2")),s=this.parseNumber(r.Y.stringMul(r.Y.stringSub(r.Y.stringDiv(d,f),"1"),"100"))),{symbol:o,timestamp:h,datetime:this.iso8601(h),high:this.parseNumber(this.fromEp(this.safeString(e,"high"),t)),low:this.parseNumber(this.fromEp(this.safeString(e,"low"),t)),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:p,close:l,last:l,previousClose:void 0,change:i,percentage:s,average:a,baseVolume:u,quoteVolume:c,markPrice:this.parseNumber(this.fromEp(this.safeString(e,"markPrice"),t)),indexPrice:this.parseNumber(this.fromEp(this.safeString(e,"indexPrice"),t)),info:e}}parsePerpetualTicker(e,t){let i,s,a;let n=this.safeString(e,0),o=(t=this.safeMarket(n,t)).symbol,h=this.fromEp(this.safeString(e,4),t),d=this.parseNumber(h),l=this.parseNumber(this.fromEv(this.safeString(e,6),t)),c=this.parseNumber(this.fromEv(this.safeString(e,5),t)),u=this.omitZero(this.fromEp(this.safeString(e,1),t)),f=this.parseNumber(u);return void 0!==u&&void 0!==h&&(i=this.parseNumber(r.Y.stringSub(h,u)),a=this.parseNumber(r.Y.stringDiv(r.Y.stringAdd(h,u),"2")),s=this.parseNumber(r.Y.stringMul(r.Y.stringSub(r.Y.stringDiv(h,u),"1"),"100"))),{symbol:o,timestamp:void 0,datetime:void 0,high:this.parseNumber(this.fromEp(this.safeString(e,2),t)),low:this.parseNumber(this.fromEp(this.safeString(e,3),t)),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:f,close:d,last:d,previousClose:void 0,change:i,percentage:s,average:a,baseVolume:c,quoteVolume:l,info:e}}handleTicker(e,t){let i=[];if("market24h"in t){let e=this.safeValue(t,"market24h");i.push(this.parseSwapTicker(e))}else if("spot_market24h"in t){let e=this.safeValue(t,"spot_market24h");i.push(this.parseTicker(e))}else if("data"in t){let e=this.safeValue(t,"data",[]);for(let t=0;t<e.length;t++)i.push(this.parsePerpetualTicker(e[t]))}for(let s=0;s<i.length;s++){let r=i[s],a=r.symbol,n="ticker:"+a,o=this.safeIntegerProduct(t,"timestamp",1e-6);r.timestamp=o,r.datetime=this.iso8601(o),this.tickers[a]=r,e.resolve(r,n)}}async watchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let i="USDT"===this.safeString(e,"settle"),s=":balance";return s=i?"perpetual"+s:t+s,await this.subscribePrivate(t,s,e)}handleBalance(e,t,i){this.balance.info=i;for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"currency"),a=this.safeCurrencyCode(s),n=this.safeValue(this.currencies,a,{}),o=this.safeInteger(n,"valueScale",8),h=this.account(),d=this.safeString(t,"totalUsedBalanceRv");if(void 0===d){let e=this.safeString(t,"totalUsedBalanceEv");if(void 0===e){let i=this.safeString(t,"lockedTradingBalanceEv"),s=this.safeString2(t,"lockedWithdrawEv","lockedWithdrawRv");e=r.Y.stringAdd(i,s)}d=this.fromEn(e,o)}let l=this.safeString(t,"accountBalanceRv");if(void 0===l){let e=this.safeString2(t,"accountBalanceEv","balanceEv");l=this.fromEn(e,o)}h.used=d,h.total=l,this.balance[a]=h,this.balance=this.safeBalance(this.balance)}t.resolve(this.balance,e+":balance")}handleTrades(e,t){let i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol,a="trade:"+r,n=this.safeValue(this.trades,r);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e),this.trades[r]=n}let o=this.safeValue2(t,"trades","trades_p",[]),h=this.parseTrades(o,s);for(let e=0;e<h.length;e++)n.append(h[e]);e.resolve(n,a)}handleOHLCV(e,t){let i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol,a=this.safeValue2(t,"kline","kline_p",[]),n=this.safeValue(a,0,[]),o=this.safeString(n,1),h=this.findTimeframe(o);if(void 0!==h){let t="kline:"+h+":"+r,i=this.parseOHLCVs(a,s);this.ohlcvs[r]=this.safeValue(this.ohlcvs,r,{});let n=this.safeValue(this.ohlcvs[r],h);if(void 0===n){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);n=new sH.TG(e),this.ohlcvs[r][h]=n}for(let e=0;e<i.length;e++){let t=i[e];n.append(t)}e.resolve(n,t)}}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=i.swap,r="USDT"===i.settle,a="spot_market24h";s&&(a=r?"perp_market24h_pack_p":"market24h");let n=this.urls.api.ws,o=this.requestId(),h=a+".subscribe",d="ticker:"+e,l=this.deepExtend({method:h,id:o,params:[]},t);return await this.watch(n,d,l,h)}async watchTickers(e,t={}){await this.loadMarkets();let i=(e=this.marketSymbols(e,void 0,!1))[0],s=this.market(i),r=s.swap,a="USDT"===s.settle,n="spot_market24h";r&&(n=a?"perp_market24h_pack_p":"market24h");let o=this.urls.api.ws,h=this.requestId(),d=n+".subscribe",l=[];for(let t=0;t<e.length;t++)l.push("ticker:"+e[t]);let c=this.deepExtend({method:d,id:h,params:[]},t),u=await this.watchMultiple(o,l,c,l);if(this.newUpdates){let e={};return e[u.symbol]=u,e}return this.filterByArray(this.tickers,"symbol",e)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=this.urls.api.ws,n=this.requestId(),o=r.swap,h="USDT"===r.settle,d="trade:"+e,l={method:(o&&h?"trade_p":"trade")+".subscribe",id:n,params:[r.id]},c=this.deepExtend(l,s),u=await this.watch(a,d,c,d);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySinceLimit(u,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r=this.urls.api.ws,a=this.requestId(),n=s.swap,o="USDT"===s.settle,h="orderbook:"+e,d={method:(n&&o?"orderbook_p":"orderbook")+".subscribe",id:a,params:[s.id]},l=this.deepExtend(d,i);return(await this.watch(r,h,l,h)).limit()}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.urls.api.ws,o=this.requestId(),h=a.swap,d="USDT"===a.settle,l="kline:"+t+":"+e,c={method:(h&&d?"kline_p":"kline")+".subscribe",id:o,params:[a.id,this.safeInteger(this.timeframes,t)]},u=this.deepExtend(c,r),f=await this.watch(n,l,u,l);return this.newUpdates&&(s=f.getLimit(e,s)),this.filterBySinceLimit(f,i,s,0,!0)}customHandleDelta(e,t,i){let s=this.customParseBidAsk(t,0,1,i);e.storeArray(s)}customHandleDeltas(e,t,i){for(let s=0;s<t.length;s++)this.customHandleDelta(e,t[s],i)}handleOrderBook(e,t){let i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol,a=this.safeString(t,"type"),n=this.safeInteger(t,"depth"),o="orderbook:"+r,h=this.safeInteger(t,"sequence"),d=this.safeIntegerProduct(t,"timestamp",1e-6);if("snapshot"===a){let i=this.safeValue2(t,"book","orderbook_p",{}),a=this.customParseOrderBook(i,r,d,"bids","asks",0,1,s);a.nonce=h;let l=this.orderBook(a,n);this.orderbooks[r]=l,e.resolve(l,o)}else if(r in this.orderbooks){let i=this.orderbooks[r],a=this.safeDict2(t,"book","orderbook_p",{}),n=this.safeList(a,"asks",[]),l=this.safeList(a,"bids",[]);this.customHandleDeltas(i.asks,n,s),this.customHandleDeltas(i.bids,l,s),i.nonce=h,i.timestamp=d,i.datetime=this.iso8601(d),this.orderbooks[r]=i,e.resolve(i,o)}}async watchMyTrades(e,t,i,s={}){let r,a;await this.loadMarkets();let n="trades:";void 0!==e&&(e=(r=this.market(e)).symbol,n+=r.symbol,"USDT"===r.settle&&((s=this.extend(s)).settle="USDT")),[a,s]=this.handleMarketTypeAndParams("watchMyTrades",r,s),void 0===e&&(n="USDT"===this.safeString(s,"settle")?n+"perpetual":n+a);let o=await this.subscribePrivate(a,n,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleMyTrades(e,t){let i;let s="trades";if(0===t.length)return;let r=this.myTrades;if(void 0===r){let e=this.safeInteger(this.options,"tradesLimit",1e3);r=new sH.Pt(e)}let a={};for(let e=0;e<t.length;e++){let s=t[e],n=this.safeString(s,"symbol"),o=this.safeMarket(n),h=this.parseTrade(s);r.append(h);let d=h.symbol;void 0===i&&(i="USDT"===o.settle?"perpetual":o.type),a[d]=!0}let n=Object.keys(a);for(let t=0;t<n.length;t++){let i=s+":"+n[t];e.resolve(r,i)}let o=s+":"+i;e.resolve(r,o)}async watchOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n="orders:";void 0!==e&&(e=(r=this.market(e)).symbol,n+=r.symbol,"USDT"===r.settle&&((s=this.extend(s)).settle="USDT")),[a,s]=this.handleMarketTypeAndParams("watchOrders",r,s);let o="USDT"===this.safeString(s,"settle");void 0===e&&(n=o?n+"perpetual":n+a);let h=await this.subscribePrivate(a,n,s);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleOrders(e,t){let i,s=[],r=[];if("closed"in t||"fills"in t||"open"in t){let e=this.safeValue(t,"closed",[]),i=this.safeValue(t,"open",[]),a=this.arrayConcat(i,e);if(0===a.length)return;s=this.safeValue(t,"fills",[]);for(let e=0;e<a.length;e++){let t=a[e],i=this.parseOrder(t);r.push(i)}}else for(let e=0;e<t.length;e++){let i=t[e],a=this.safeString(i,"action");void 0!==a&&"Cancel"!==a&&s.push(i);let n=this.parseWSSwapOrder(i);r.push(n)}this.handleMyTrades(e,s);let a=this.safeInteger(this.options,"ordersLimit",1e3),n={};void 0===this.orders&&(this.orders=new sH.Pt(a));let o=this.orders;for(let e=0;e<r.length;e++){let t=r[e];o.append(t);let s=t.symbol,a=this.market(s);void 0===i&&(i="USDT"===a.settle?"perpetual":a.type),n[s]=!0}let h=Object.keys(n);for(let t=0;t<h.length;t++){let i="orders:"+h[t];e.resolve(this.orders,i)}let d="orders:"+i;e.resolve(this.orders,d)}parseWSSwapOrder(e,t){let i=this.safeString(e,"orderID"),s=this.safeString(e,"clOrdID");void 0!==s&&s.length<1&&(s=void 0);let r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t)).symbol,n=this.parseOrderStatus(this.safeString(e,"ordStatus")),o=this.safeStringLower(e,"side"),h=this.parseOrderType(this.safeString(e,"ordType")),d=this.safeString(e,"priceRp",this.fromEp(this.safeString(e,"priceEp"),t)),l=this.safeString(e,"orderQty"),c=this.safeString(e,"cumQty"),u=this.safeString(e,"leavesQty"),f=this.safeIntegerProduct(e,"actionTimeNs",1e-6),p=this.safeString(e,"cumValueRv",this.fromEv(this.safeString(e,"cumValueEv"),t)),m=this.safeIntegerProduct(e,"transactTimeNs",1e-6);0===m&&(m=void 0);let g=this.parseTimeInForce(this.safeString(e,"timeInForce")),y=this.safeString(e,"stopPx");return this.safeOrder({info:e,id:i,clientOrderId:s,datetime:this.iso8601(f),timestamp:f,lastTradeTimestamp:m,symbol:a,type:h,timeInForce:g,postOnly:"PO"===g,side:o,price:d,stopPrice:y,triggerPrice:y,amount:l,filled:c,remaining:u,cost:p,average:void 0,status:n,fee:void 0,trades:void 0},t)}handleMessage(e,t){let i=this.safeString(t,"id");if(i in e.subscriptions){let s=e.subscriptions[i];if(delete e.subscriptions[i],!0!==s){s.call(this,e,t);return}}let s=this.safeString(t,"method","");if("market24h"in t||"spot_market24h"in t||s.indexOf("perp_market24h_pack_p")>=0){this.handleTicker(e,t);return}if("trades"in t||"trades_p"in t){this.handleTrades(e,t);return}if("kline"in t||"kline_p"in t){this.handleOHLCV(e,t);return}if("book"in t||"orderbook_p"in t){this.handleOrderBook(e,t);return}if("orders"in t||"orders_p"in t){let i=this.safeValue2(t,"orders","orders_p",{});this.handleOrders(e,i)}if("accounts"in t||"accounts_p"in t||"wallets"in t){let i="accounts"in t?"swap":"spot";"accounts_p"in t&&(i="perpetual");let s=this.safeValueN(t,["accounts","accounts_p","wallets"],[]);this.handleBalance(i,e,s)}}handleAuthenticate(e,t){let i=this.safeValue(t,"result"),s=this.safeString(i,"status"),r="authenticated";if("success"===s)e.resolve(t,r);else{let i=new n.AuthenticationError(this.id+" "+this.json(t));e.reject(i,r),r in e.subscriptions&&delete e.subscriptions[r]}}async subscribePrivate(e,t,i={}){await this.loadMarkets(),await this.authenticate();let s=this.urls.api.ws,r=this.seconds(),a="USDT"===this.safeValue(i,"settle","");i=this.omit(i,"settle");let n="aop.subscribe";"spot"===e&&(n="wo.subscribe"),a&&(n="aop_p.subscribe");let o={id:r,method:n,params:[]};return o=this.extend(o,i),await this.watch(s,t,o,n)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws,i=this.client(t),s=this.requestId(),r="authenticated",a=this.safeValue(i.subscriptions,r);if(void 0===a){let n=this.safeInteger(this.options,"expires",120),o=this.seconds()+n,h=this.apiKey+o.toString(),d=this.hmac(this.encode(h),this.encode(this.secret),l.s),c={method:"user.auth",params:["API",this.apiKey,d,o],id:s},u=s.toString(),f=this.extend(c,e);r in i.subscriptions||(i.subscriptions[u]=this.handleAuthenticate),a=await this.watch(t,r,f,r),i.subscriptions[r]=a}return a}}class rW extends i4{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOHLCV:!0,watchOrderBook:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0,watchBalance:!0,watchStatus:!1,watchOrders:!0,watchMyTrades:!0,createOrderWs:!0,editOrderWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,cancelOrderWs:!0,cancelOrdersWs:!0,cancelAllOrdersWs:!0,fetchTradesWs:!1,fetchBalanceWs:!1},urls:{api:{ws:{public:"wss://ws.poloniex.com/ws/public",private:"wss://ws.poloniex.com/ws/private"}}},options:{createMarketBuyOrderRequiresPrice:!0,tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,watchOrderBook:{name:"book_lv2"},connectionsLimit:2e3,requestsLimit:500,timeframes:{"1m":"candles_minute_1","5m":"candles_minute_5","10m":"candles_minute_10","15m":"candles_minute_15","30m":"candles_minute_30","1h":"candles_hour_1","2h":"candles_hour_2","4h":"candles_hour_4","6h":"candles_hour_6","12h":"candles_hour_12","1d":"candles_day_1","3d":"candles_day_3","1w":"candles_week_1","1M":"candles_month_1"}},streaming:{keepAlive:15e3,ping:this.ping}})}async authenticate(e={}){this.checkRequiredCredentials();let t=this.numberToString(this.milliseconds()),i=this.urls.api.ws.private,s="authenticated",r=this.client(i),a=this.safeValue(r.subscriptions,s);if(void 0===a){let n=this.hmac(this.encode("GET\n/ws\nsignTimestamp="+t),this.encode(this.secret),l.s,"base64"),o={event:"subscribe",channel:["auth"],params:{key:this.apiKey,signTimestamp:t,signature:n,signatureMethod:"HmacSHA256",signatureVersion:"2"}},h=this.extend(o,e);a=await this.watch(i,s,h,s),r.subscriptions[s]=a}return a}async subscribe(e,t,i,s,r={}){let a=this.urls.api.ws[i?"private":"public"],n={event:"subscribe",channel:[e]},o=[];this.isEmpty(s)?o.push("all"):(t=t+"::"+s.join(","),o=this.marketIds(s)),"balances"!==e&&(n.symbols=o);let h=this.extend(n,r);return await this.watch(a,t,h,t)}async tradeRequest(e,t={}){let i=this.urls.api.ws.private,s=this.nonce().toString();return await this.watch(i,s,{id:s,event:e,params:t},s)}async createOrderWs(e,t,i,s,a,o={}){await this.loadMarkets(),await this.authenticate();let h=this.market(e),d=t.toUpperCase(),l=i.toUpperCase();this.isPostOnly("MARKET"===d,"LIMIT_MAKER"===d,o)&&(d="LIMIT_MAKER");let c={symbol:h.id,side:i.toUpperCase(),type:t.toUpperCase()};if("MARKET"===d&&"BUY"===l){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let h=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0!==h)t=this.costToPrecision(e,h);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);c.amount=t}else c.quantity=this.amountToPrecision(h.symbol,s),void 0!==a&&(c.price=this.priceToPrecision(e,a));return await this.tradeRequest("createOrder",this.extend(c,o))}async cancelOrderWs(e,t,i={}){let s=this.safeString(i,"clientOrderId");if(void 0!==s){let e=this.safeValue(i,"clientOrderId",[]);i.clientOrderIds=this.arrayConcat(e,[s])}return await this.cancelOrdersWs([e],t,i)}async cancelOrdersWs(e,t,i={}){return await this.loadMarkets(),await this.authenticate(),await this.tradeRequest("cancelOrders",this.extend({orderIds:e},i))}async cancelAllOrdersWs(e,t={}){return await this.loadMarkets(),await this.authenticate(),await this.tradeRequest("cancelAllOrders",t)}handleOrderRequest(e,t){let i=this.safeString(t,"id"),s=this.safeValue(t,"data",[]),r=[];for(let e=0;e<s.length;e++){let t=s[e],i=this.parseWsOrder(t);r.push(i)}e.resolve(r,i)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.safeValue(this.options,"timeframes",{}),o=this.safeString(a,t,t);if(void 0===o)throw new n.BadRequest(this.id+" watchOHLCV cannot take a timeframe of "+t);let h=await this.subscribe(o,o,!1,[e],r);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}async watchTicker(e,t={}){await this.loadMarkets(),e=this.symbol(e);let i=await this.watchTickers([e],t);return this.safeValue(i,e)}async watchTickers(e,t={}){await this.loadMarkets();let i="ticker";e=this.marketSymbols(e);let s=await this.subscribe(i,i,!1,e,t);return this.newUpdates?s:this.filterByArray(this.tickers,"symbol",e)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1,!0,!0);let r="trades",a=this.urls.api.ws.public,n=this.marketIds(e),o=this.extend({event:"subscribe",channel:[r],symbols:n},s),h=[];if(void 0!==e)for(let t=0;t<e.length;t++)h.push(r+"::"+e[t]);let d=await this.watchMultiple(a,h,o,h);if(this.newUpdates){let e=this.safeValue(d,0),t=this.safeString(e,"symbol");i=d.getLimit(t,i)}return this.filterBySinceLimit(d,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.safeValue(this.options,"watchOrderBook"),r=this.safeString(s,"name","book_lv2");return[r,i]=this.handleOptionAndParams(i,"method","name",r),(await this.subscribe(r,r,!1,[e],i)).limit()}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r="orders";await this.authenticate(),void 0!==e&&(e=this.symbol(e));let a=void 0===e?void 0:[e],n=await this.subscribe(r,r,!0,a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=this.symbol(e));let r=void 0===e?void 0:[e],a=await this.subscribe("orders","myTrades",!0,r,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchBalance(e={}){await this.loadMarkets();let t="balances";return await this.authenticate(),await this.subscribe(t,t,!0,void 0,e)}parseWsOHLCV(e,t){return[this.safeInteger(e,"startTime"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"quantity")]}handleOHLCV(e,t){let i=this.safeValue(t,"data");i=this.safeValue(i,0);let s=this.safeString(t,"channel"),r=this.safeString(i,"symbol"),a=this.safeSymbol(r),n=this.safeMarket(a),o=this.safeValue(this.options,"timeframes",{}),h=this.findTimeframe(s,o),d=s+"::"+a,l=this.parseWsOHLCV(i,n);this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let c=this.safeValue(this.ohlcvs[a],h);if(void 0!==a){if(void 0===c){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new sH.TG(e),this.ohlcvs[a][h]=c}c.append(l),e.resolve(c,d)}return t}handleTrade(e,t){let i=this.safeValue(t,"data",[]);for(let t=0;t<i.length;t++){let s=i[t];if(void 0!==this.safeString(s,"symbol")){let t=this.parseWsTrade(s),i=t.symbol,r="trades::"+i,a=this.safeValue(this.trades,i);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[i]=a}a.append(t),e.resolve(a,r)}}return t}parseWsTrade(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeInteger(e,"createTime"),r=this.safeStringLower2(e,"matchRole","taker");return this.safeTrade({info:e,id:this.safeString2(e,"id","tradeId"),symbol:this.safeString(t,"symbol"),timestamp:s,datetime:this.iso8601(s),order:this.safeString(e,"orderId"),type:this.safeStringLower(e,"type"),side:this.safeStringLower2(e,"takerSide","side"),takerOrMaker:r,price:this.omitZero(this.safeString2(e,"tradePrice","price")),amount:this.omitZero(this.safeString2(e,"filledQuantity","quantity")),cost:this.safeString2(e,"amount","filledAmount"),fee:{rate:void 0,cost:this.safeString(e,"tradeFee"),currency:this.safeString(e,"feeCurrency")}},t)}parseStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",PENDING_CANCEL:"open",PARTIALLY_CANCELED:"open",CANCELED:"canceled"},e,e)}parseWsOrderTrade(e,t){let i=this.safeInteger(e,"tradeTime"),s=this.safeString(e,"symbol");return this.safeTrade({info:e,id:this.safeString(e,"tradeId"),symbol:this.safeSymbol(s,t),timestamp:i,datetime:this.iso8601(i),order:this.safeString(e,"orderId"),type:this.safeStringLower(e,"type"),side:this.safeString(e,"side"),takerOrMaker:this.safeStringLower(e,"matchRole"),price:this.safeString(e,"price"),amount:this.safeString(e,"tradeAmount"),cost:void 0,fee:{rate:void 0,cost:this.safeString(e,"tradeFee"),currency:this.safeString(e,"feeCurrency")}},t)}handleOrder(e,t){let i=this.safeValue(t,"data",[]),s=this.orders;if(void 0===s){let e=this.safeInteger(this.options,"ordersLimit");s=new sH.Pt(e),this.orders=s}let a=[];for(let t=0;t<i.length;t++){let n=this.safeValue(i,t),o=this.safeString(n,"symbol"),h=this.safeString(n,"eventType");if(void 0!==o){let t=this.safeSymbol(o),i=this.safeString(n,"orderId"),d=this.safeString(n,"clientOrderId");if("place"===h||"canceled"===h){let e=this.parseWsOrder(n);s.append(e)}else{let a=this.safeValue(s.hashmap,t,{}),o=this.safeValue2(a,i,d),h=this.parseWsTrade(n);this.handleMyTrades(e,h),void 0===o.trades&&(o.trades=[]),o.trades.push(h),o.lastTradeTimestamp=h.timestamp;let l="0",c="0",u=o.trades;for(let e=0;e<u.length;e++){let t=u[e],i=this.numberToString(t.cost),s=this.numberToString(t.amount);l=r.Y.stringAdd(l,i),c=r.Y.stringAdd(c,s)}if(r.Y.stringGt(c,"0")&&(o.average=this.parseNumber(r.Y.stringDiv(l,c))),o.cost=this.parseNumber(l),void 0!==o.filled){let e=this.numberToString(h.amount),t=this.numberToString(o.filled);if(t=r.Y.stringAdd(t,e),o.filled=t,void 0!==o.amount){let e=this.numberToString(o.amount);o.remaining=this.parseNumber(r.Y.stringSub(e,t))}}if(void 0===o.fee&&(o.fee={rate:void 0,cost:0,currency:h.fee.currency}),void 0!==o.fee.cost&&void 0!==h.fee.cost){let e=this.numberToString(o.fee.cost),t=this.numberToString(h.fee.cost);o.fee.cost=r.Y.stringAdd(e,t)}let f=this.safeString(n,"state"),p=this.parseStatus(f);o.status=p,s.append(o)}a.push(o)}}for(let t=0;t<a.length;t++){let i=a[t],r="orders::"+this.market(i).symbol;e.resolve(s,r)}return e.resolve(s,"orders"),t}parseWsOrder(e,t){let i;let s=this.safeString(e,"orderId"),a=this.safeString(e,"clientOrderId"),n=this.safeString(e,"symbol"),o=this.safeString(e,"ts"),h=this.safeString(e,"filledAmount"),d=this.safeString(e,"state");if(!r.Y.stringEq(h,"0")){i=[];let t=this.parseWsOrderTrade(e);i.push(t)}return this.safeOrder({info:e,symbol:this.safeSymbol(n,t),id:s,clientOrderId:a,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,type:this.safeString(e,"type"),timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"side"),price:this.safeString(e,"price"),stopPrice:void 0,triggerPrice:void 0,amount:this.safeString(e,"quantity"),cost:void 0,average:void 0,filled:h,remaining:this.safeString(e,"remaining_size"),status:this.parseStatus(d),fee:{rate:void 0,cost:this.safeString(e,"tradeFee"),currency:this.safeString(e,"feeCurrency")},trades:i})}handleTicker(e,t){let i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){let t=i[e];if(void 0!==this.safeString(t,"symbol")){let e=this.parseTicker(t),i=e.symbol;this.tickers[i]=e,s[i]=e}}let r=this.findMessageHashes(e,"ticker::");for(let t=0;t<r.length;t++){let i=r[t],a=i.split("::")[1].split(","),n=this.filterByArray(s,"symbol",a);this.isEmpty(n)||e.resolve(n,i)}return e.resolve(s,"ticker"),t}handleOrderBook(e,t){let i=this.safeValue(t,"data",[]),s=this.safeString(t,"action"),r="snapshot"===s,a="update"===s;for(let t=0;t<i.length;t++){let s=i[t],n=this.safeString(s,"symbol"),o=this.safeMarket(n).symbol,h="book_lv2::"+o,d=this.safeValue(e.subscriptions,h,{}),l=this.safeInteger(d,"limit"),c=this.safeInteger(s,"ts"),u=this.safeValue(s,"asks"),f=this.safeValue(s,"bids");if(r||a){r&&(this.orderbooks[o]=this.orderBook({},l));let t=this.orderbooks[o];if(void 0!==f)for(let e=0;e<f.length;e++){let i=this.safeValue(f,e),s=this.safeNumber(i,0),r=this.safeNumber(i,1);t.bids.store(s,r)}if(void 0!==u)for(let e=0;e<u.length;e++){let i=this.safeValue(u,e),s=this.safeNumber(i,0),r=this.safeNumber(i,1);t.asks.store(s,r)}t.symbol=o,t.timestamp=c,t.datetime=this.iso8601(c),e.resolve(t,h)}}}handleBalance(e,t){let i=this.safeValue(t,"data",[]);this.balance=this.parseWsBalance(i),e.resolve(this.balance,"balances")}parseWsBalance(e){let t=this.safeValue(e,0,{}),i=this.safeInteger(t,"ts"),s={info:e,timestamp:i,datetime:this.iso8601(i)};for(let t=0;t<e.length;t++){let i=this.safeValue(e,t),r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"hold"),s[a]=n}return this.safeBalance(s)}handleMyTrades(e,t){let i="myTrades",s=t.symbol;if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let r=this.myTrades;r.append(t),e.resolve(r,i),e.resolve(r,i+":"+s)}handlePong(e){e.lastPong=this.milliseconds()}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i=this.safeString(t,"channel");"pong"===this.safeString(t,"event")&&(e.lastPong=this.milliseconds());let s={candles_minute_1:this.handleOHLCV,candles_minute_5:this.handleOHLCV,candles_minute_10:this.handleOHLCV,candles_minute_15:this.handleOHLCV,candles_minute_30:this.handleOHLCV,candles_hour_1:this.handleOHLCV,candles_hour_2:this.handleOHLCV,candles_hour_4:this.handleOHLCV,candles_hour_6:this.handleOHLCV,candles_hour_12:this.handleOHLCV,candles_day_1:this.handleOHLCV,candles_day_3:this.handleOHLCV,candles_week_1:this.handleOHLCV,candles_month_1:this.handleOHLCV,book:this.handleOrderBook,book_lv2:this.handleOrderBook,ticker:this.handleTicker,trades:this.handleTrade,orders:this.handleOrder,balances:this.handleBalance,createOrder:this.handleOrderRequest,cancelOrder:this.handleOrderRequest,cancelAllOrders:this.handleOrderRequest,auth:this.handleAuthenticate},r=this.safeValue(s,i);"auth"===i?this.handleAuthenticate(e,t):void 0===i?this.handleOrderRequest(e,t):this.safeValue(t,"data",[]).length>0&&r.call(this,e,t)}handleErrorMessage(e,t){let i=this.safeString(t,"id"),s=this.safeString(t,"event"),r=this.safeList(t,"data"),a=this.safeDict(r,0),o=this.safeString(a,"orderId");if("error"===s||"0"===o)try{let e=this.safeString(a,"message"),i=this.safeString(a,"code"),s=this.id+" "+this.json(t);throw this.throwExactlyMatchedException(this.exceptions.exact,i,s),this.throwBroadlyMatchedException(this.exceptions.broad,e,s),new n.ExchangeError(s)}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t,i);return!0}return!1}handleAuthenticate(e,t){let i=this.safeValue(t,"data"),s=this.safeValue(i,"success"),r="authenticated";if(s)e.resolve(t,r);else{let i=new n.AuthenticationError(this.id+" "+this.json(t));e.reject(i,r),r in e.subscriptions&&delete e.subscriptions[r]}return t}ping(e){return{event:"ping"}}}class rj extends i9{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,cancelAllOrdersWs:!1,cancelOrdersWs:!1,cancelOrderWs:!1,createOrderWs:!1,editOrderWs:!1,fetchBalanceWs:!1,fetchOpenOrdersWs:!1,fetchOrderWs:!1,fetchTradesWs:!1,watchOHLCV:!1,watchOrderBook:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1,watchBalance:!0,watchOrders:!0,watchMyTrades:!1,watchPosition:void 0,watchPositions:!1},urls:{api:{ws:"wss://futures-apiws.poloniex.com/endpoint"}},options:{tradesLimit:1e3,ordersLimit:1e3,watchTicker:{method:"/contractMarket/ticker"},watchOrders:{method:"/contractMarket/tradeOrders"},watchOrderBook:{method:"/contractMarket/level2",snapshotDelay:5,snapshotMaxRetries:3,checksum:!0},streamLimit:5,streamBySubscriptionsHash:{},streamIndex:-1},streaming:{keepAlive:3e4,maxPingPongMisses:2}})}async negotiate(e,t={}){let i=e?"private":"public",s=this.safeValue(this.options,"urls",{});if(i in s){let e=s[i];return await e}s[i]=this.spawn(this.negotiateHelper,e,t),this.options.urls=s;let r=s[i];return await r}async negotiateHelper(e,t={}){let i;let s=e?"private":"public";try{i=e?await this.privatePostBulletPrivate(t):await this.publicPostBulletPublic(t);let r=this.safeValue(i,"data",{}),a=this.safeValue(r,"instanceServers",[]),n=this.safeValue(a,0),o=this.safeInteger(n,"pingInterval"),h=this.safeString(n,"endpoint"),d=this.safeString(r,"token"),l=h+"?"+this.urlencode({token:d,privateChannel:e,connectId:s});return this.client(l).keepAlive=o,l}catch(e){this.safeValue(this.options.urls,s).reject(e),delete this.options.urls[s]}}requestId(){let e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async subscribe(e,t,i,s,r={}){let a=await this.negotiate(t);if(void 0!==i){let t=this.market(i).id;e+=":"+t}let n=e,o=await this.stream(a,n),h=this.requestId(),d={id:h,type:"subscribe",topic:e,privateChannel:t,response:!0,tunnelId:o},l={id:h};s=void 0===s?l:this.extend(l,s);let c=this.extend(d,r);return await this.watch(a,n,c,e,l)}onClose(e,t){this.options.streamBySubscriptionsHash={},super.onClose(e,t)}async stream(e,t){let i=this.safeValue(this.options,"streamBySubscriptionsHash",{}),s=this.safeString(i,t);if(void 0===s){let i=this.safeInteger(this.options,"streamIndex",-1),r=(i+=1)%this.safeValue(this.options,"streamLimit");this.options.streamIndex=i,s="stream-"+this.numberToString(r),this.options.streamBySubscriptionsHash[t]=s;let a="tunnel:"+s,n={id:a,type:"openTunnel",newTunnelId:s,response:!0},o={id:a,method:this.handleNewStream};await this.watch(e,a,n,a,o)}return s}handleOrderBookSubscription(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");this.orderbooks[s]=this.orderBook({},r)}handleSubscriptionStatus(e,t){let i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}handleNewStream(e,t,i){let s=this.safeString(t,"id");e.resolve(t,s)}async watchTicker(e,t={}){return await this.loadMarkets(),e=this.symbol(e),await this.subscribe("/contractMarket/ticker",!1,e,void 0,t)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.safeValue(this.options,"watchTrades"),a=this.safeString(r,"method","/contractMarket/execution");[a,s]=this.handleOptionAndParams(s,"method","name",a),e=this.symbol(e);let n=await this.subscribe(a,!1,e,void 0,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.safeValue(this.options,"watchOrderBook"),r=this.safeString(s,"method","/contractMarket/level2");if([r,i]=this.handleOptionAndParams(i,"method","name",r),"/contractMarket/level2"===r&&void 0!==t){if(5!==t&&50!==t)throw new n.BadRequest(this.id+" watchOrderBook limit argument must be none, 5 or 50 if using method /contractMarket/level2");r+="Depth"+this.numberToString(t)}let a={symbol:e,limit:t,method:this.handleOrderBookSubscription};return(await this.subscribe(r,!1,e,a,i)).limit()}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.safeValue(this.options,"watchOrders"),a=this.safeString(r,"method","/contractMarket/tradeOrders"),n=await this.subscribe(a,!0,void 0,void 0,s);return(this.newUpdates&&(i=n.getLimit(e,i)),0===(n=this.filterBySymbolSinceLimit(n,e,t,i)).length)?await this.watchOrders(e,t,i,s):n}async watchBalance(e={}){return await this.loadMarkets(),await this.subscribe("/contractAccount/wallet",!0,void 0,void 0,e)}handleTrade(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"symbol");if(void 0!==s){let t=this.parseWsTrade(i),r=t.symbol,a=this.safeValue(this.trades,r);if(void 0===a){let e=this.safeInteger(this.options,"tradesLimit",1e3);a=new sH.I3(e),this.trades[r]=a}a.append(t),e.resolve(a,"/contractMarket/execution:"+s)}return t}parseWsTrade(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeIntegerProduct(e,"ts",1e-6);return this.safeTrade({info:e,id:this.safeString(e,"tradeId"),symbol:this.safeString(t,"symbol"),timestamp:s,datetime:this.iso8601(s),order:this.safeString2(e,"takerOrderId","makerOrderId"),type:void 0,side:this.safeString(e,"side"),takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString2(e,"matchSize","size"),cost:void 0,fee:void 0},t)}parseWsOrderTrade(e,t){let i=this.safeInteger(e,"tradeTime"),s=this.safeString(e,"symbol");return this.safeTrade({info:e,id:this.safeString(e,"tradeId"),symbol:this.safeSymbol(s,t),timestamp:i,datetime:this.iso8601(i),order:this.safeString(e,"orderId"),type:this.safeStringLower(e,"type"),side:this.safeString(e,"side"),takerOrMaker:this.safeStringLower(e,"matchRole"),price:this.safeString(e,"price"),amount:this.safeString(e,"tradeAmount"),cost:void 0,fee:{rate:void 0,cost:this.safeString(e,"tradeFee"),currency:this.safeString(e,"feeCurrency")}},t)}handleOrder(e,t){let i=this.safeValue(t,"data",{}),s=this.orders;if(void 0===s){let e=this.safeInteger(this.options,"ordersLimit");s=new sH.Pt(e),this.orders=s}let r=this.parseWsOrder(i);return s.append(r),e.resolve(s,"/contractMarket/tradeOrders"),t}parseOrderStatus(e,t){let i=this.safeString({canceled:"canceled",cancel:"canceled",filled:"closed"},t);return void 0===i&&(i=this.safeString({open:"open",match:"open",done:"closed"},e,e)),i}parseWsOrder(e,t){let i=this.safeString(e,"orderId"),s=this.safeString(e,"clientOid"),r=this.safeString(e,"symbol"),a=this.safeIntegerProduct2(e,"orderTime","ts",1e-6),n=this.safeString(e,"status"),o=this.safeString(e,"type");return this.safeOrder({info:e,symbol:this.safeSymbol(r,t),id:i,clientOrderId:s,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,type:this.safeString(e,"orderType"),timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"side"),price:this.safeString2(e,"price","orderPrice"),stopPrice:this.safeString(e,"stopPrice"),triggerPrice:void 0,amount:this.safeString(e,"size"),cost:void 0,average:void 0,filled:this.safeString(e,"filledSize"),remaining:this.safeString(e,"remainSize"),status:this.parseOrderStatus(n,o),fee:void 0,trades:void 0})}handleTicker(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(t,"topic"),r=this.getSymbolFromTopic(s);if(void 0!==r){let t=this.parseTicker(i);this.tickers[r]=t,e.resolve(t,s)}return t}handleL3OrderBook(e,t){let i=this.safeString(t,"topic");"received"!==this.safeString(t,"subject")&&e.resolve(t,i)}handleLevel2(e,t){if(this.safeString(t,"topic").indexOf("Depth")>=0){this.handeL2Snapshot(e,t);return}this.handleL2OrderBook(e,t)}handleL2OrderBook(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(t,"topic",""),r=this.getSymbolFromTopic(s),a=this.safeValue(this.orderbooks,r);if(void 0===a&&(this.orderbooks[r]=this.orderBook({}),(a=this.orderbooks[r]).symbol=r),void 0===this.safeInteger(a,"nonce")){a.cache.length===this.handleOption("watchOrderBook","snapshotDelay",5)&&this.spawn(this.loadOrderBook,e,s,r,0,{}),a.cache.push(i);return}try{this.handleDelta(a,i),e.resolve(a,s)}catch(t){delete this.orderbooks[r],e.reject(t,s)}}handeL2Snapshot(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(t,"topic",""),r=this.getSymbolFromTopic(s),a=this.safeInteger(i,"timestamp"),n=this.parseOrderBook(i,r,a,"bids","asks"),o=this.orderBook(n);this.orderbooks[r]=o,e.resolve(o,s)}getSymbolFromTopic(e){let t=e.split(":"),i=this.safeString(t,1);return this.safeSymbol(i)}getCacheIndex(e,t){let i=this.safeValue(t,0),s=this.safeInteger(e,"nonce");if(this.safeInteger(i,"sequence")>s+1)return -1;for(let e=0;e<t.length;e++){let i=t[e];if(s===this.safeInteger(i,"sequence")-1)return e}return t.length}handleDelta(e,t){let i=this.safeInteger(t,"sequence"),s=this.safeInteger(t,"lastSequence"),r=this.safeInteger(e,"nonce");if(r>i)return;if(r!==s&&this.handleOption("watchOrderBook","checksum",!0))throw new n.ChecksumError(this.id+" "+this.orderbookChecksumMessage(""));let a=this.safeList(t,"changes");for(let t=0;t<a.length;t++){let i=a[t].split(","),s=this.safeNumber(i,0),r=this.safeString(i,1),n=this.safeNumber(i,2);("buy"===r?e.bids:e.asks).store(s,n)}let o=this.safeInteger(t,"timestamp");e.timestamp=o,e.datetime=this.iso8601(o),e.nonce=i}handleBalance(e,t){let i=this.safeValue(t,"data",[]),s=this.safeString(i,"currency"),r=this.currency(s).code;return this.balance[r]=this.parseWsBalance(i),e.resolve(this.balance[r],"/contractAccount/wallet"),t}parseWsBalance(e){let t=this.safeInteger(e,"timestamp"),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s),a=this.account();return a.free=this.safeString(e,"availableBalance"),i[r]=a,this.safeBalance(i)}handleSystemStatus(e,t){return t}handleSubject(e,t){let i=this.safeString(t,"subject"),s={auth:this.handleAuthenticate,received:this.handleL3OrderBook,open:this.handleL3OrderBook,update:this.handleL3OrderBook,done:this.handleL3OrderBook,level2:this.handleLevel2,ticker:this.handleTicker,"snapshot.24h":this.handleTicker,match:this.handleTrade,orderChange:this.handleOrder,stopOrder:this.handleOrder,"availableBalance.change":this.handleBalance,"orderMargin.change":this.handleBalance},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}ping(e){return{id:this.requestId().toString(),type:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){e.reject(t)}handleMessage(e,t){let i=this.safeString(t,"type"),s={welcome:this.handleSystemStatus,ack:this.handleSubscriptionStatus,message:this.handleSubject,pong:this.handlePong,error:this.handleErrorMessage},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}handleAuthenticate(e,t){let i=this.safeValue(t,"data"),s=this.safeValue(i,"success"),r="authenticated";if(s)e.resolve(t,r);else{let i=new n.AuthenticationError(this.id+" "+this.json(t));e.reject(i,r),r in e.subscriptions&&delete e.subscriptions[r]}return t}}class rK extends si{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:"wss://api.probit.com/api/exchange/v1/ws"},test:{ws:"wss://demo-api.probit.com/api/exchange/v1/ws"}},options:{watchOrderBook:{filter:"order_books_l2",interval:100}},streaming:{}})}async watchBalance(e={}){return await this.authenticate(e),await this.subscribePrivate("balance","balance",e)}handleBalance(e,t){this.parseWSBalance(t),e.resolve(this.balance,"balance")}parseWSBalance(e){let t=this.safeBool(e,"reset",!1),i=this.safeValue(e,"data",{}),s=Object.keys(i);t&&(this.balance={});for(let e=0;e<s.length;e++){let t=s[e],r=i[t],a=this.safeCurrencyCode(t),n=this.account();n.free=this.safeString(r,"available"),n.total=this.safeString(r,"total"),this.balance[a]=n}this.balance=this.safeBalance(this.balance)}async watchTicker(e,t={}){return await this.subscribePublic("watchTicker",e,"ticker","ticker",t)}handleTicker(e,t){let i=this.safeString(t,"market_id"),s=this.safeSymbol(i),r=this.safeValue(t,"ticker",{}),a=this.safeMarket(i),n=this.parseTicker(r,a);this.tickers[s]=n,e.resolve(n,"ticker:"+s)}async watchTrades(e,t,i,s={}){e=this.safeSymbol(e);let r=await this.subscribePublic("watchTrades",e,"trades","recent_trades",s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySymbolSinceLimit(r,e,t,i,!0)}handleTrades(e,t){let i=this.safeString(t,"market_id"),s=this.safeSymbol(i),r=this.safeMarket(i),a=this.safeValue(t,"recent_trades",[]);if(this.safeBool(t,"reset",!1))return;let n=this.safeValue(this.trades,s);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e),this.trades[s]=n}for(let e=0;e<a.length;e++){let t=a[e],i=this.parseTrade(t,r);n.append(i)}this.trades[s]=n,e.resolve(this.trades[s],"trades:"+s)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets(),await this.authenticate(s);let r="trades";void 0!==e&&(r=r+":"+(e=this.safeSymbol(e)));let a=await this.subscribePrivate(r,"trade_history",s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleMyTrades(e,t){let i=this.safeValue(t,"data",[]);if(0===i.length||this.safeBool(t,"reset",!1))return;let s="trades",r=this.myTrades;if(void 0===r){let e=this.safeInteger(this.options,"tradesLimit",1e3);r=new sH.Pt(e),this.myTrades=r}let a=this.parseTrades(i),n={};for(let e=0;e<a.length;e++){let t=a[e];"executed"!==this.safeString(t.info,"status")&&(n[t.symbol]=!0,r.append(t))}let o=Object.keys(n);if(0!==o.length){for(let t=0;t<o.length;t++){let i=s+":"+o[t];e.resolve(r,i)}e.resolve(r,s)}}async watchOrders(e,t,i,s={}){await this.authenticate(s);let r="orders";void 0!==e&&(r=r+":"+(e=this.safeSymbol(e)));let a=await this.subscribePrivate(r,"open_order",s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleOrders(e,t){let i=this.safeValue(t,"data",[]);if(0===i.length)return;let s="orders",r=this.safeBool(t,"reset",!1),a=this.orders;if(void 0===a||r){let e=this.safeInteger(this.options,"ordersLimit",1e3);a=new sH.Pt(e),this.orders=a}let n={};for(let e=0;e<i.length;e++){let t=i[e],s=this.parseOrder(t);n[s.symbol]=!0,a.append(s)}let o=Object.keys(n);for(let t=0;t<o.length;t++){let i=s+":"+o[t];e.resolve(a,i)}e.resolve(a,s)}async watchOrderBook(e,t,i={}){let s;return[s,i]=this.handleOptionAndParams(i,"watchOrderBook","filter","order_books"),(await this.subscribePublic("watchOrderBook",e,"orderbook",s,i)).limit()}async subscribePrivate(e,t,i){let s=this.urls.api.ws,r=this.extend({type:"subscribe",channel:t},i);return await this.watch(s,e,r,e)}async subscribePublic(e,t,i,s,r={}){let a;await this.loadMarkets();let n=this.market(t);t=n.symbol;let o=this.urls.api.ws,h=this.client(o),d="marketdata:"+t,l=i+":"+t,c={};d in h.subscriptions&&!(s in(c=h.subscriptions[d]))&&delete h.subscriptions[d],c[s]=!0;let u=Object.keys(c);[a,r]=this.handleOptionAndParams(r,e,"interval",100);let f={type:"subscribe",channel:"marketdata",market_id:n.id,filter:u,interval:a};return f=this.extend(f,r),await this.watch(o,l,f,d,c)}handleOrderBook(e,t,i){let s=this.safeString(t,"market_id"),r=this.safeSymbol(s),a=this.groupBy(i,"side"),n="orderbook:"+r;r in this.orderbooks||(this.orderbooks[r]=this.orderBook({}));let o=this.orderbooks[r];if(this.safeBool(t,"reset",!1)){let e=this.parseOrderBook(a,r,void 0,"buy","sell","price","quantity");o.reset(e)}else this.handleDelta(o,a);e.resolve(o,n)}handleBidAsks(e,t){for(let i=0;i<t.length;i++){let s=t[i],r=this.parseBidAsk(s,"price","quantity");e.storeArray(r)}}handleDelta(e,t){let i=e.bids,s=e.asks,r=this.safeValue(t,"sell",[]),a=this.safeValue(t,"buy",[]);this.handleBidAsks(i,a),this.handleBidAsks(s,r)}handleErrorMessage(e,t){let i=this.safeString(t,"errorCode"),s=this.safeString(t,"message",""),r=this.safeValue(t,"details"),a=this.id+" "+i+" "+s+" "+this.json(r);throw"exact"in this.exceptions&&this.throwExactlyMatchedException(this.exceptions.exact,i,a),"broad"in this.exceptions&&this.throwBroadlyMatchedException(this.exceptions.broad,s,a),new n.ExchangeError(a)}handleAuthenticate(e,t){let i=this.safeString(t,"result"),s=e.subscriptions.authenticated;"ok"===i?e.resolve(t,"authenticated"):(s.reject(t),delete e.subscriptions.authenticated)}handleMarketData(e,t){void 0!==this.safeValue(t,"ticker")&&this.handleTicker(e,t),this.safeValue(t,"recent_trades",[]).length&&this.handleTrades(e,t);let i=this.safeValueN(t,["order_books","order_books_l1","order_books_l2","order_books_l3","order_books_l4"],[]);i.length&&this.handleOrderBook(e,t,i)}handleMessage(e,t){if(void 0!==this.safeString(t,"errorCode")){this.handleErrorMessage(e,t);return}if("authorization"===this.safeString(t,"type")){this.handleAuthenticate(e,t);return}let i={marketdata:this.handleMarketData,balance:this.handleBalance,trade_history:this.handleMyTrades,open_order:this.handleOrders,order_history:this.handleOrders},s=this.safeString(t,"channel"),r=this.safeValue(i,s);if(void 0!==r){r.call(this,e,t);return}let a=new n.NotSupported(this.id+" handleMessage: unknown message: "+this.json(t));e.reject(a)}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=this.safeInteger(this.options,"expires",0),a=this.safeValue(i.subscriptions,s);if(void 0===a||this.milliseconds()>r){let r=await this.signIn(),n=this.safeString(r,"access_token");a=await this.watch(t,s,this.extend({type:"authorization",token:n},e),s),i.subscriptions[s]=a}return a}}class rz extends sp{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!0,watchOrders:!0,watchMyTrades:!0,watchBalance:!0},urls:{api:{ws:"wss://{hostname}/websocket/v1"}},options:{tradesLimit:1e3}})}async watchPublic(e,t,i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r=s.id,a=this.implodeParams(this.urls.api.ws,{hostname:this.hostname});this.options[t]=this.safeValue(this.options,t,{}),this.options[t][e]=!0;let n=Object.keys(this.options[t]),o=this.marketIds(n),h=[{ticket:this.uuid()},{type:t,codes:o}],d=t+":"+r;return await this.watch(a,d,h,d)}async watchPublicMultiple(e,t,i={}){await this.loadMarkets(),void 0===e&&(e=this.symbols),e=this.marketSymbols(e);let s=this.marketIds(e),r=this.implodeParams(this.urls.api.ws,{hostname:this.hostname}),a=[];for(let e=0;e<s.length;e++)a.push(t+":"+s[e]);let n=[{ticket:this.uuid()},{type:t,codes:s}];return await this.watchMultiple(r,a,n,a)}async watchTicker(e,t={}){return await this.watchPublic(e,"ticker")}async watchTickers(e,t={}){let i=await this.watchPublicMultiple(e,"ticker");if(this.newUpdates){let e={};return e[i.symbol]=i,e}return this.filterByArray(this.tickers,"symbol",e)}async watchTrades(e,t,i,s={}){return await this.watchTradesForSymbols([e],t,i,s)}async watchTradesForSymbols(e,t,i,s={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1,!0,!0);let r="trade",a=[],n=this.implodeParams(this.urls.api.ws,{hostname:this.hostname});if(void 0!==e)for(let t=0;t<e.length;t++){let i=this.market(e[t]),s=i.id,n=i.symbol;this.options[r]=this.safeValue(this.options,r,{}),this.options[r][n]=!0,a.push(r+":"+s)}let o=Object.keys(this.options[r]),h=this.marketIds(o),d=[{ticket:this.uuid()},{type:r,codes:h}],l=await this.watchMultiple(n,a,d,a);if(this.newUpdates){let e=this.safeValue(l,0),t=this.safeString(e,"symbol");i=l.getLimit(t,i)}return this.filterBySinceLimit(l,t,i,"timestamp",!0)}async watchOrderBook(e,t,i={}){return(await this.watchPublic(e,"orderbook")).limit()}handleTicker(e,t){let i=this.safeString(t,"code"),s=this.parseTicker(t),r=s.symbol;this.tickers[r]=s,e.resolve(s,"ticker:"+i)}handleOrderBook(e,t){let i=this.safeString(t,"code"),s=this.safeSymbol(i,void 0,"-"),r=this.safeString(t,"stream_type"),a=this.safeValue(this.options,"watchOrderBook",{}),n=this.safeInteger(a,"limit",15);"SNAPSHOT"===r&&(this.orderbooks[s]=this.orderBook({},n));let o=this.orderbooks[s];o.reset({}),o.symbol=s;let h=o.bids,d=o.asks,l=this.safeValue(t,"orderbook_units",[]);for(let e=0;e<l.length;e++){let t=l[e],i=this.safeFloat(t,"ask_price"),s=this.safeFloat(t,"ask_size"),r=this.safeFloat(t,"bid_price"),a=this.safeFloat(t,"bid_size");d.store(i,s),h.store(r,a)}let c=this.safeInteger(t,"timestamp"),u=this.iso8601(c);o.timestamp=c,o.datetime=u,e.resolve(o,"orderbook:"+i)}handleTrades(e,t){let i=this.parseTrade(t),s=i.symbol,r=this.safeValue(this.trades,s);if(void 0===r){let e=this.safeInteger(this.options,"tradesLimit",1e3);r=new sH.I3(e),this.trades[s]=r}r.append(i);let a=this.safeString(t,"code");e.resolve(r,"trade:"+a)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.safeDict(this.options,"ws",{});if(void 0===this.safeString(t,"token")){let e={access_key:this.apiKey,nonce:this.uuid()},i=(0,w.a)(e,this.encode(this.secret),l.s,!1);t.token=i,t.options={headers:{authorization:"Bearer "+i}},this.options.ws=t}let i=this.urls.api.ws+"/private";return this.client(i)}async watchPrivate(e,t,i,s={}){await this.authenticate();let r={type:t};if(void 0!==e){await this.loadMarkets();let t=[e=this.market(e).symbol],s=this.marketIds(t);r.codes=s,i=i+":"+e}let a=this.implodeParams(this.urls.api.ws,{hostname:this.hostname});a+="/private";let n=[{ticket:this.uuid()},r];return await this.watch(a,i,n,i)}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.watchPrivate(e,"myOrder","myOrder");return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySymbolSinceLimit(r,e,t,i,!0)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=await this.watchPrivate(e,"myOrder","myTrades");return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySymbolSinceLimit(r,e,t,i,!0)}parseWsOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled",watch:"open",trade:"open"},e,e)}parseWsOrder(e,t){let i;let s=this.safeString(e,"uuid"),r=this.safeStringLower(e,"ask_bid");r="bid"===r?"buy":"sell";let a=this.parse8601(this.safeString(e,"order_timestamp")),n=this.parseWsOrderStatus(this.safeString(e,"state")),o=this.safeString(e,"code");t=this.safeMarket(o,t);let h=this.safeString(e,"paid_fee");return void 0!==h&&(i={currency:t.quote,cost:h}),this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:this.safeString(e,"trade_timestamp"),symbol:t.symbol,type:this.safeString(e,"order_type"),timeInForce:this.safeString(e,"time_in_force"),postOnly:void 0,side:r,price:this.safeString(e,"price"),stopPrice:void 0,triggerPrice:void 0,cost:this.safeString(e,"executed_funds"),average:this.safeString(e,"avg_price"),amount:this.safeString(e,"volume"),filled:this.safeString(e,"executed_volume"),remaining:this.safeString(e,"remaining_volume"),status:n,fee:i,trades:void 0})}parseWsTrade(e,t){let i,s=this.safeStringLower(e,"ask_bid");s="bid"===s?"buy":"sell";let r=this.parse8601(this.safeString(e,"trade_timestamp")),a=this.safeString(e,"code");t=this.safeMarket(a,t);let n=this.safeString(e,"paid_fee");return void 0!==n&&(i={currency:t.quote,cost:n}),this.safeTrade({id:this.safeString(e,"trade_uuid"),timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,side:s,price:this.safeString(e,"price"),amount:this.safeString(e,"volume"),cost:this.safeString(e,"executed_funds"),order:this.safeString(e,"uuid"),takerOrMaker:void 0,type:this.safeString(e,"order_type"),fee:i,info:e},t)}handleMyOrder(e,t){void 0!==this.safeString(t,"trade_uuid")&&this.handleMyTrade(e,t),this.handleOrder(e,t)}handleMyTrade(e,t){let i=this.myTrades;if(void 0===i){let e=this.safeInteger(this.options,"tradesLimit",1e3);i=new sH.Pt(e)}let s=this.parseWsTrade(t);i.append(s);let r="myTrades";e.resolve(i,r),r="myTrades:"+s.symbol,e.resolve(i,r)}handleOrder(e,t){let i=this.parseWsOrder(t),s=this.safeString(i,"symbol"),r=this.safeString(i,"id");if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let a=this.orders,n=this.safeValue(a.hashmap,s,{}),o=this.safeValue(n,r);if(void 0!==o){let e=this.safeValue(o,"fee");void 0!==e&&(i.fee=e);let t=this.safeValue(o,"fees");void 0!==t&&(i.fees=t),i.trades=this.safeValue(o,"trades"),i.timestamp=this.safeInteger(o,"timestamp"),i.datetime=this.safeString(o,"datetime")}a.append(i);let h="myOrder";e.resolve(this.orders,h),h=h+":"+s,e.resolve(this.orders,h)}async watchBalance(e={}){return await this.loadMarkets(),await this.watchPrivate(void 0,"myAsset","myAsset")}handleBalance(e,t){let i=this.safeList(t,"assets",[]),s=this.safeInteger(t,"timestamp");this.balance.timestamp=s,this.balance.datetime=this.iso8601(s);for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"currency"),r=this.safeCurrencyCode(s),a=this.safeString(t,"balance"),n=this.safeString(t,"locked"),o=this.account();o.free=a,o.used=n,this.balance[r]=o,this.balance=this.safeBalance(this.balance)}let r=this.safeString(t,"type");e.resolve(this.balance,r)}handleMessage(e,t){let i={ticker:this.handleTicker,orderbook:this.handleOrderBook,trade:this.handleTrades,myOrder:this.handleMyOrder,myAsset:this.handleBalance},s=this.safeString(t,"type"),r=this.safeValue(i,s);r&&r.call(this,e,t)}}class rY extends sy{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchMyTrades:!0,watchOHLCV:!1,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchTradesForSymbols:!1,watchPositions:!0},urls:{api:{ws:"wss://gateway.prod.vertexprotocol.com/v1/subscribe"},test:{ws:"wss://gateway.sepolia-test.vertexprotocol.com/v1/subscribe"}},requiredCredentials:{apiKey:!1,secret:!1,walletAddress:!0,privateKey:!0},options:{tradesLimit:1e3,ordersLimit:1e3,requestId:{},watchPositions:{fetchPositionsSnapshot:!0,awaitPositionsSnapshot:!0},ws:{inflate:!0}},streaming:{keepAlive:3e4},exceptions:{ws:{exact:{"Auth is needed.":n.AuthenticationError}}}})}requestId(e){let t=this.safeDict(this.options,"requestId",{}),i=this.safeInteger(t,e,0),s=this.sum(i,1);return this.options.requestId[e]=s,s}async watchPublic(e,t){let i=this.urls.api.ws,s={id:this.requestId(i)},r=this.extend(s,t);return this.options.ws={options:{headers:{"Sec-WebSocket-Extensions":"permessage-deflate"}}},await this.watch(i,e,r,e,s)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="trade",n=r.id+"@"+a,o={method:"subscribe",stream:{type:a,product_id:this.parseToNumeric(r.id)}},h=this.extend(o,s),d=await this.watchPublic(n,h);return this.newUpdates&&(i=d.getLimit(r.symbol,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}handleTrade(e,t){let i=this.safeString(t,"type"),s=this.safeString(t,"product_id"),r=this.parseWsTrade(t),a=r.symbol;if(!(a in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3),t=new sH.I3(e);this.trades[a]=t}let n=this.trades[a];n.append(r),this.trades[a]=n,e.resolve(n,s+"@"+i)}async watchMyTrades(e,t,i,s={}){let r;if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchMyTrades requires a symbol.");await this.loadMarkets(),[r,s]=this.handlePublicAddress("watchMyTrades",s);let a=this.market(e),o="fill",h=a.id+"@"+o,d={method:"subscribe",stream:{type:o,product_id:this.parseToNumeric(a.id),subaccount:this.convertAddressToSender(r)}},l=this.extend(d,s),c=await this.watchPublic(h,l);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleMyTrades(e,t){let i=this.safeString(t,"type"),s=this.safeString(t,"product_id");if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.Pt(e)}let r=this.myTrades,a=this.parseWsTrade(t);r.append(a),e.resolve(r,s+"@"+i)}parseWsTrade(e,t){let i,s;let a=this.safeString(e,"product_id"),n=(t=this.safeMarket(a,t)).symbol,o=this.convertFromX18(this.safeString(e,"price")),h=this.convertFromX18(this.safeString2(e,"taker_qty","filled_qty")),d=r.Y.stringMul(o,h),l=this.safeIntegerProduct(e,"timestamp",1e-6),c=this.safeBool(e,"is_taker");void 0!==c&&(i=c?"taker":"maker");let u=this.safeBool(e,"is_bid");return void 0!==u&&(s=u?"buy":"sell"),this.safeTrade({id:void 0,timestamp:l,datetime:this.iso8601(l),symbol:n,side:s,price:o,amount:h,cost:d,order:this.safeString2(e,"digest","id"),takerOrMaker:i,type:void 0,fee:void 0,info:e},t)}async watchTicker(e,t={}){await this.loadMarkets();let i="best_bid_offer",s=this.market(e),r=s.id+"@"+i,a={method:"subscribe",stream:{type:i,product_id:this.parseToNumeric(s.id)}},n=this.extend(a,t);return await this.watchPublic(r,n)}parseWsTicker(e,t){let i=this.safeIntegerProduct(e,"timestamp",1e-6);return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.convertFromX18(this.safeString(e,"bid_price")),bidVolume:this.convertFromX18(this.safeString(e,"bid_qty")),ask:this.convertFromX18(this.safeString(e,"ask_price")),askVolume:this.convertFromX18(this.safeString(e,"ask_qty")),vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}handleTicker(e,t){let i=this.safeString(t,"product_id"),s=this.safeMarket(i),r=this.parseWsTicker(t,s);return r.symbol=s.symbol,this.tickers[s.symbol]=r,e.resolve(r,i+"@best_bid_offer"),t}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s="book_depth",r=this.market(e),a=r.id+"@"+s,n=this.urls.api.ws,o=this.requestId(n),h={id:o,method:"subscribe",stream:{type:s,product_id:this.parseToNumeric(r.id)}},d={id:o.toString(),name:s,symbol:e,method:this.handleOrderBookSubscription,limit:t,params:i},l=this.extend(h,i);return(await this.watch(n,a,l,a,d)).limit()}handleOrderBookSubscription(e,t,i){let s=this.safeInteger(this.options,"watchOrderBookLimit",1e3),r=this.safeInteger(i,"limit",s),a=this.safeString(i,"symbol");a in this.orderbooks&&delete this.orderbooks[a],this.orderbooks[a]=this.orderBook({},r),this.spawn(this.fetchOrderBookSnapshot,e,t,i)}async fetchOrderBookSnapshot(e,t,i){let s=this.safeString(i,"symbol"),a=this.market(s).id+"@book_depth";try{let t=this.safeInteger(this.options,"watchOrderBookLimit",1e3),n=this.safeInteger(i,"limit",t),o=this.safeValue(i,"params"),h=await this.fetchRestOrderBookSafe(s,n,o);if(void 0===this.safeValue(this.orderbooks,s))return;let d=this.orderbooks[s];d.reset(h);let l=d.cache;for(let t=0;t<l.length;t++){let i=l[t];this.parseToInt(r.Y.stringDiv(this.safeString(i,"last_max_timestamp"),"1000000"))<d.timestamp||this.handleOrderBookMessage(e,i,d)}this.orderbooks[s]=d,e.resolve(d,a)}catch(t){delete e.subscriptions[a],e.reject(t,a)}}handleOrderBook(e,t){let i=this.safeString(t,"product_id"),s=this.safeMarket(i).symbol;s in this.orderbooks||(this.orderbooks[s]=this.orderBook());let a=this.orderbooks[s],n=this.safeInteger(a,"timestamp");void 0===n?a.cache.push(t):this.parseToInt(r.Y.stringDiv(this.safeString(t,"last_max_timestamp"),"1000000"))>n&&(this.handleOrderBookMessage(e,t,a),e.resolve(a,i+"@book_depth"))}handleOrderBookMessage(e,t,i){let s=this.parseToInt(r.Y.stringDiv(this.safeString(t,"last_max_timestamp"),"1000000")),a={bids:[],asks:[]},n=this.safeList(t,"bids",[]);for(let e=0;e<n.length;e++){let t=n[e];a.bids.push([this.convertFromX18(t[0]),this.convertFromX18(t[1])])}let o=this.safeList(t,"asks",[]);for(let e=0;e<o.length;e++){let t=o[e];a.asks.push([this.convertFromX18(t[0]),this.convertFromX18(t[1])])}return this.handleDeltas(i.asks,this.safeList(a,"asks",[])),this.handleDeltas(i.bids,this.safeList(a,"bids",[])),i.timestamp=s,i.datetime=this.iso8601(s),i}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleSubscriptionStatus(e,t){let i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}async watchPositions(e,t,i,s={}){let r;if(await this.loadMarkets(),e=this.marketSymbols(e),this.isEmpty(e))throw new n.ArgumentsRequired(this.id+" watchPositions require one symbol.");if(e.length>1)throw new n.NotSupported(this.id+" watchPositions require only one symbol.");[r,s]=this.handlePublicAddress("watchPositions",s);let a=this.urls.api.ws,o=this.client(a);this.setPositionsCache(o,e,s);let h=this.handleOption("watchPositions","fetchPositionsSnapshot",!0),d=this.handleOption("watchPositions","awaitPositionsSnapshot",!0);if(h&&d&&void 0===this.positions){let s=await o.future("fetchPositionsSnapshot");return this.filterBySymbolsSinceLimit(s,e,t,i,!0)}let l="position_change",c=this.market(e[0]),u=c.id+"@"+l,f={method:"subscribe",stream:{type:l,product_id:this.parseToNumeric(c.id),subaccount:this.convertAddressToSender(r)}},p=this.extend(f,s),m=await this.watchPublic(u,p);return this.newUpdates&&(i=m.getLimit(e[0],i)),this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}setPositionsCache(e,t,i={}){if(this.handleOption("watchPositions","fetchPositionsSnapshot",!1)){let s="fetchPositionsSnapshot";s in e.futures||(e.future(s),this.spawn(this.loadPositionsSnapshot,e,s,t,i))}else this.positions=new sH.Hk}async loadPositionsSnapshot(e,t,i,s){let r=await this.fetchPositions(i,s);this.positions=new sH.Hk;let a=this.positions;for(let e=0;e<r.length;e++){let t=r[e];a.append(t)}e.futures[t].resolve(a),e.resolve(a,"positions")}handlePositions(e,t){void 0===this.positions&&(this.positions=new sH.Hk);let i=this.positions,s=this.safeString(t,"type"),r=this.safeString(t,"product_id"),a=this.safeMarket(r),n=this.parseWsPosition(t,a);i.append(n),e.resolve(n,r+"@"+s)}parseWsPosition(e,t){let i=this.safeString(e,"product_id");t=this.safeMarket(i);let s=this.convertFromX18(this.safeString(e,"amount")),a="buy";r.Y.stringLt(s,"1")&&(a="sell");let n=this.parseToInt(r.Y.stringDiv(this.safeString(e,"timestamp"),"1000000"));return this.safePosition({info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:n,datetime:this.iso8601(n),lastUpdateTimestamp:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:void 0,notional:void 0,leverage:void 0,unrealizedPnl:void 0,contracts:void 0,contractSize:this.parseNumber(s),marginRatio:void 0,liquidationPrice:void 0,markPrice:void 0,lastPrice:void 0,collateral:void 0,marginMode:"cross",marginType:void 0,side:a,percentage:void 0,hedged:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}handleAuth(e,t){let i="authenticated";if(void 0===this.safeString(t,"error"))this.safeValue(e.futures,"authenticated").resolve(!0);else{let s=new n.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions.authenticated}}buildWsAuthenticationSig(e,t,i){return this.buildSig(t,{StreamAuthentication:[{name:"sender",type:"bytes32"},{name:"expiration",type:"uint64"}]},e,i)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){let i=this.requestId(t),r=await this.queryContracts(),a=this.safeString(r,"chain_id"),n=this.safeString(r,"endpoint_addr"),o=this.nonce(),h={sender:this.convertAddressToSender(this.walletAddress),expiration:o+9e4},d={id:i,method:"authenticate",tx:{sender:h.sender,expiration:this.numberToString(h.expiration)},signature:this.buildWsAuthenticationSig(h,a,n)},l=this.extend(d,e);this.watch(t,s,l,s)}return await r}async watchPrivate(e,t,i={}){await this.authenticate(i);let s=this.urls.api.ws,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watch(s,e,a,e,r)}async watchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchOrders requires a symbol.");this.checkRequiredCredentials(),await this.loadMarkets();let r="order_update",a=this.market(e),o=a.id+"@"+r,h={method:"subscribe",stream:{type:r,subaccount:this.convertAddressToSender(this.walletAddress),product_id:this.parseToNumeric(a.id)}},d=this.extend(h,s),l=await this.watchPrivate(o,d);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySymbolSinceLimit(l,e,t,i,!0)}parseWsOrderStatus(e){return void 0!==e?this.safeString({filled:"open",placed:"open",cancelled:"canceled"},e,e):e}parseWsOrder(e,t){let i=this.safeString(e,"product_id"),s=this.parseToInt(r.Y.stringDiv(this.safeString(e,"timestamp"),"1000000")),a=this.convertFromX18(this.safeString(e,"amount")),n=this.parseToNumeric(a),o=this.parseWsOrderStatus(this.safeString(e,"reason"));r.Y.stringEq(a,"0")&&"open"===o&&(o="closed");let h=(t=this.safeMarket(i,t)).symbol;return this.safeOrder({info:e,id:this.safeString2(e,"digest","id"),clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,lastUpdateTimestamp:void 0,symbol:h,type:void 0,timeInForce:void 0,postOnly:void 0,reduceOnly:void 0,side:void 0,price:void 0,triggerPrice:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:n,status:o,fee:void 0,trades:void 0},t)}handleOrderUpdate(e,t){let i=this.safeString(t,"type"),s=this.safeString(t,"product_id"),r=this.parseWsOrder(t),a=this.safeString(r,"symbol"),n=this.safeString(r,"id");if(void 0!==a){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let t=this.orders,o=this.safeDict(t.hashmap,a,{}),h=this.safeDict(o,n);void 0!==h&&(r.timestamp=this.safeInteger(h,"timestamp"),r.datetime=this.safeString(h,"datetime")),t.append(r),e.resolve(this.orders,s+"@"+i)}}handleErrorMessage(e,t){let i=this.safeString(t,"error");try{if(void 0!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i={trade:this.handleTrade,best_bid_offer:this.handleTicker,book_depth:this.handleOrderBook,fill:this.handleMyTrades,position_change:this.handlePositions,order_update:this.handleOrderUpdate},s=this.safeString(t,"type"),r=this.safeValue(i,s);if(void 0!==r){r.call(this,e,t);return}if(void 0!==this.safeString(t,"id")){this.handleSubscriptionStatus(e,t);return}void 0!==this.safeValue(e.futures,"authenticated")&&this.handleAuth(e,t)}}class rX extends sO{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!1,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://stream.wazirx.com/stream"}},options:{},streaming:{},exceptions:{},api:{private:{post:{create_auth_token:1}}}})}async watchBalance(e={}){await this.loadMarkets();let t=await this.authenticate(e),i="balance",s=this.urls.api.ws,r=this.deepExtend({event:"subscribe",streams:["outboundAccountPosition"],auth_key:t},e);return await this.watch(s,i,r,i)}handleBalance(e,t){let i=this.safeValue(t,"data",{}),s=this.safeValue(i,"B",[]),r=this.safeInteger(i,"E");this.balance.info=s,this.balance.timestamp=r,this.balance.datetime=this.iso8601(r);for(let e=0;e<s.length;e++){let t=s[e],i=this.safeString(t,"a"),r=this.safeCurrencyCode(i),a=this.safeString(t,"b"),n=this.safeString(t,"l"),o=this.account();o.free=a,o.used=n,this.balance[r]=o}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}parseWsTrade(e,t){let i;let s=this.safeInteger(e,"E"),r=this.safeString(e,"s");t=this.safeMarket(r,t);let a=this.safeString(e,"f"),n=this.safeString(e,"U"),o=!0===this.safeValue(e,"m");return void 0!==a&&(i={cost:a,currency:this.safeCurrencyCode(n),rate:void 0}),this.safeTrade({id:this.safeString(e,"t"),info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:this.safeStringN(e,["o"]),type:void 0,side:this.safeString(e,"S"),takerOrMaker:o?"maker":"taker",price:this.safeString(e,"p"),amount:this.safeString(e,"q"),cost:void 0,fee:i},t)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.urls.api.ws,r="ticker:"+i.symbol,a=this.deepExtend({event:"subscribe",streams:["!ticker@arr"]},t);return await this.watch(s,r,a,"tickers")}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=this.urls.api.ws,s="tickers",r=this.deepExtend({event:"subscribe",streams:["!ticker@arr"]},t),a=await this.watch(i,s,r,s);return this.filterByArray(a,"symbol",e,!1)}handleTicker(e,t){let i=this.safeValue(t,"data",[]);for(let t=0;t<i.length;t++){let s=i[t],r=this.parseWSTicker(s),a=r.symbol;this.tickers[a]=r;let n="ticker:"+a;e.resolve(r,n)}e.resolve(this.tickers,"tickers")}parseWSTicker(e,t){let i=this.safeString(e,"s"),s=this.safeInteger(e,"E");return this.safeTicker({symbol:this.safeSymbol(i,t),timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:this.safeNumber(e,"b"),bidVolume:void 0,ask:this.safeNumber(e,"a"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"o"),close:void 0,last:this.safeString(e,"l"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"q"),info:e},t)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=r.id+"@trades",n=this.urls.api.ws,o=this.extend({event:"subscribe",streams:[a]},s),h=await this.watch(n,a,o,a);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"data",{}),s=this.safeValue(i,"trades",[]),r=this.safeString(t,"stream"),a=r.split("@"),n=this.safeString(a,0),o=this.safeMarket(n),h=this.safeSymbol(n,o),d=this.safeValue(this.trades,h);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.I3(e),this.trades[h]=d}for(let e=0;e<s.length;e++){let t=this.parseWsTrade(s[e],o);d.append(t)}e.resolve(d,r)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=await this.authenticate(s);void 0!==e&&(e=this.market(e).symbol);let a=this.urls.api.ws,n="myTrades",o=this.deepExtend({event:"subscribe",streams:["ownTrade"],auth_key:r},s),h=await this.watch(a,n,o,n);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.urls.api.ws,o="ohlcv:"+e+":"+t,h=a.id+"@kline_"+t,d=this.deepExtend({event:"subscribe",streams:[h]},r),l=await this.watch(n,o,d,o);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeValue(t,"data",{}),s=this.safeString(i,"s"),r=this.safeMarket(s),a=this.safeSymbol(s,r),n=this.safeString(i,"i");this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let o=this.safeValue(this.ohlcvs[a],n);if(void 0===o){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);o=new sH.TG(e),this.ohlcvs[a][n]=o}let h=this.parseWsOHLCV(i,r);o.append(h);let d="ohlcv:"+a+":"+n;e.resolve(o,d)}parseWsOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"c"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"v")]}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);e=s.symbol;let r=this.urls.api.ws,a="orderbook:"+e,n=s.id+"@depth",o=this.deepExtend({event:"subscribe",streams:[n]},i);return(await this.watch(r,a,o,a)).limit()}handleDelta(e,t){let i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){let i=this.safeValue(t,"data",{}),s=this.safeInteger(i,"E"),r=this.safeString(i,"s"),a=this.safeMarket(r).symbol,n="orderbook:"+a;if(a in this.orderbooks){let e=this.orderbooks[a],t=this.safeList(i,"a",[]),r=this.safeList(i,"b",[]);this.handleDeltas(e.asks,t),this.handleDeltas(e.bids,r),e.nonce=s,e.timestamp=s,e.datetime=this.iso8601(s),this.orderbooks[a]=e}else{let e=this.parseOrderBook(i,a,s,"b","a");this.orderbooks[a]=this.orderBook(e)}e.resolve(this.orderbooks[a],n)}async watchOrders(e,t,i,s={}){await this.loadMarkets(),void 0!==e&&(e=this.market(e).symbol);let r=await this.authenticate(s),a="orders",n=this.urls.api.ws,o=this.deepExtend({event:"subscribe",streams:["orderUpdate"],auth_key:r},s),h=await this.watch(n,a,o,a,o);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleOrder(e,t){let i=this.safeValue(t,"data",{}),s=this.parseWsOrder(i);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}this.orders.append(s);let r="orders";e.resolve(this.orders,r),r+=":"+s.symbol,e.resolve(this.orders,r)}parseWsOrder(e,t){let i=this.safeInteger(e,"O"),s=this.safeString(e,"s"),r=this.safeString(e,"X");return t=this.safeMarket(s),this.safeOrder({info:e,id:this.safeString(e,"i"),clientOrderId:this.safeString(e,"c"),datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:void 0,symbol:t.symbol,type:this.safeValue(e,"m")?"limit":"market",timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"o"),price:this.safeString(e,"p"),stopPrice:void 0,triggerPrice:void 0,amount:this.safeString(e,"V"),filled:void 0,remaining:this.safeString(e,"q"),cost:void 0,average:this.safeString(e,"v"),status:this.parseOrderStatus(r),fee:void 0,trades:void 0},t)}handleMyTrades(e,t){let i;let s=this.safeValue(t,"data",{});if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);i=new sH.Pt(e),this.myTrades=i}else i=this.myTrades;let r=this.parseWsTrade(s);i.append(r),e.resolve(i,"myTrades")}handleConnected(e,t){return t}handleSubscribed(e,t){return t}handleError(e,t){throw new n.ExchangeError(this.id+" "+this.json(t))}handleMessage(e,t){if("error"===this.safeString(t,"status")){this.handleError(e,t);return}let i=this.safeString(t,"event"),s={error:this.handleError,connected:this.handleConnected,subscribed:this.handleSubscribed},r=this.safeValue(s,i);if(void 0!==r){r.call(this,e,t);return}let a=this.safeString(t,"stream",""),o={"ticker@arr":this.handleTicker,"@depth":this.handleOrderBook,"@kline":this.handleOHLCV,"@trades":this.handleTrades,outboundAccountPosition:this.handleBalance,orderUpdate:this.handleOrder,ownTrade:this.handleMyTrades},h=Object.keys(o);for(let i=0;i<h.length;i++)if(a.indexOf(h[i])>-1){o[h[i]].call(this,e,t);return}throw new n.NotSupported(this.id+" this message type is not supported yet. Message: "+this.json(t))}async authenticate(e={}){let t=this.urls.api.ws,i=this.client(t),s="authenticated",r=this.milliseconds(),a=this.safeValue(i.subscriptions,s),n=this.safeInteger(a,"expires");return(void 0===a||r>n)&&((a=await this.privatePostCreateAuthToken()).expires=r+1e3*this.safeInteger(a,"timeout_duration"),i.subscriptions[s]=a),this.safeString(a,"auth_key")}}class r$ extends sx{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!1},urls:{api:{ws:"wss://api.whitebit.com/ws"}},options:{timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","4h":"14400","8h":"28800","1d":"86400","1w":"604800"},watchOrderBook:{priceInterval:0}},streaming:{ping:this.ping},exceptions:{ws:{exact:{1:n.BadRequest,2:n.BadRequest,4:n.BadRequest,6:n.AuthenticationError}}}})}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);e=a.symbol;let n=this.safeValue(this.options,"timeframes",{}),o=this.safeInteger(n,t),h=a.id,d="candles:"+e,l=await this.watchPublic(d,"candles_subscribe",[h,o],r);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeValue(t,"params",[]);for(let t=0;t<i.length;t++){let s=i[t],r=this.safeString(s,7),a=this.safeMarket(r),n=a.symbol,o="candles:"+n,h=this.parseOHLCV(s,a);if(n in this.ohlcvs||(this.ohlcvs[n]={}),!("unknown"in this.ohlcvs[n])){let e=this.safeInteger(this.options,"OHLCVLimit",1e3),t=new sH.TG(e);this.ohlcvs[n].unknown=t}let d=this.ohlcvs[n].unknown;d.append(h),e.resolve(d,o)}return t}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);void 0===t&&(t=10);let r="orderbook:"+s.symbol,a=this.safeValue(this.options,"watchOrderBook",{}),n=this.safeString(a,"priceInterval","0"),o=this.safeString(i,"priceInterval",n);i=this.omit(i,"priceInterval");let h=[s.id,t,o,!0];return(await this.watchPublic(r,"depth_subscribe",h,i)).limit()}handleOrderBook(e,t){let i=this.safeValue(t,"params",[]),s=this.safeValue(i,0),r=this.safeString(i,2),a=this.safeMarket(r).symbol,n=this.safeValue(i,1),o=this.safeTimestamp(n,"timestamp");if(!(a in this.orderbooks)){let e=this.orderBook();this.orderbooks[a]=e}let h=this.orderbooks[a];if(h.timestamp=o,h.datetime=this.iso8601(o),s){let e=this.parseOrderBook(n,a);h.reset(e)}else{let e=this.safeValue(n,"asks",[]),t=this.safeValue(n,"bids",[]);this.handleDeltas(h.asks,e),this.handleDeltas(h.bids,t)}let d="orderbook:"+a;e.resolve(h,d)}handleDelta(e,t){let i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTicker(e,t={}){await this.loadMarkets();let i="ticker:"+(e=this.market(e).symbol);return await this.watchMultipleSubscription(i,"market_subscribe",e,!1,t)}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i=this.urls.api.ws,s=this.nonce(),r=[],a=[];for(let t=0;t<e.length;t++){let i=this.market(e[t]);r.push("ticker:"+i.symbol),a.push(i.id)}return await this.watchMultiple(i,r,this.extend({id:s,method:"market_subscribe",params:a},t),r),this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){let i=this.safeValue(t,"params",[]),s=this.safeString(i,0),r=this.safeMarket(s,void 0),a=r.symbol,n=this.safeValue(i,1,{}),o=this.parseTicker(n,r);this.tickers[a]=o,e.resolve(o,"ticker:"+a);let h=Object.keys(e.futures);for(let t=0;t<h.length;t++){let i=h[t];i.indexOf("tickers")>=0&&i.indexOf(a)>=0&&e.resolve(o,i)}return t}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r="trades:"+(e=this.market(e).symbol),a=await this.watchMultipleSubscription(r,"trades_subscribe",e,!1,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"params",[]),s=this.safeString(i,0),r=this.safeMarket(s),a=r.symbol,n=this.safeValue(this.trades,a);if(void 0===n){let e=this.safeInteger(this.options,"tradesLimit",1e3);n=new sH.I3(e),this.trades[a]=n}let o=this.safeValue(i,1,[]),h=this.parseTrades(o,r);for(let e=0;e<h.length;e++)n.append(h[e]);let d="trades:"+r.symbol;e.resolve(n,d)}async watchMyTrades(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchMyTrades() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r="myTrades:"+(e=this.market(e).symbol),a=await this.watchMultipleSubscription(r,"deals_subscribe",e,!0,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleMyTrades(e,t,i){let s=this.safeValue(t,"params");if(void 0===this.myTrades){let e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new sH.I3(e)}let r=this.myTrades,a=this.parseWsTrade(s);r.append(a);let n=a.symbol;e.resolve(r,"myTrades:"+n)}parseWsTrade(e,t){let i;let s=this.safeString(e,3),r=this.safeTimestamp(e,1),a=this.safeString(e,0),n=this.safeString(e,4),o=this.safeString(e,5),h=this.safeString(e,2);t=this.safeMarket(h,t);let d=this.safeString(e,6);return void 0!==d&&(i={cost:d,currency:t.quote}),this.safeTrade({id:a,info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:s,type:void 0,side:void 0,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:i},t)}async watchOrders(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" watchOrders() requires a symbol argument");await this.loadMarkets(),await this.authenticate();let r="orders:"+(e=this.market(e).symbol),a=await this.watchMultipleSubscription(r,"ordersPending_subscribe",e,!1,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleOrder(e,t,i){let s=this.safeValue(t,"params",[]),r=this.safeValue(s,1);if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let a=this.orders,n=this.safeInteger(s,0),o=this.parseWsOrder(this.extend(r,{status:n}));a.append(o);let h=o.symbol;e.resolve(this.orders,"orders:"+h)}parseWsOrder(e,t){let i,s,a,n;let o=this.safeInteger(e,"status"),h=this.safeString(e,"market");t=this.safeMarket(h,t);let d=this.safeString(e,"id"),l=this.omitZero(this.safeString(e,"client_order_id")),c=this.safeString(e,"price"),u=this.safeString(e,"deal_stock"),f=this.safeString(e,"deal_money"),p=this.safeString(e,"activation_price"),m=this.safeString(e,"type"),g=this.parseWsOrderType(m);"market"===g?(i=this.safeString(e,"deal_stock"),s="0"):(s=this.safeString(e,"left"),i=this.safeString(e,"amount"));let y=this.safeTimestamp(e,"ctime"),v=this.safeTimestamp(e,"mtime"),b=t.symbol,w=this.safeInteger(e,"side"),k=this.safeString(e,"deal_fee");return void 0!==k&&(a={cost:this.parseNumber(k),currency:t.quote}),n=1===o||2===o?"open":r.Y.stringEquals(s,"0")?"closed":"canceled",this.safeOrder({info:e,symbol:b,id:d,clientOrderId:l,timestamp:y,datetime:this.iso8601(y),lastTradeTimestamp:v,type:g,timeInForce:void 0,postOnly:void 0,side:1===w?"sell":"buy",price:c,stopPrice:p,triggerPrice:p,amount:i,cost:f,average:void 0,filled:u,remaining:s,status:n,fee:a,trades:void 0},t)}parseWsOrderType(e){return this.safeString({1:"limit",2:"market",202:"market",3:"limit",4:"market",5:"limit",6:"market",8:"limit",10:"market"},e,e)}async watchBalance(e={}){let t,i;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let s="wallet:";"spot"===t?(i="balanceSpot_subscribe",s+="spot"):(i="balanceMargin_subscribe",s+="margin");let r=Object.keys(this.currencies);return await this.watchPrivate(s,i,r,e)}handleBalance(e,t){let i=this.safeString(t,"method"),s=this.safeValue(t,"params"),r=this.safeValue(s,0);this.balance.info=r;let a=Object.keys(r),n=this.safeValue(a,0),o=this.safeValue(r,n),h=this.safeCurrencyCode(n),d=this.account();d.free=this.safeString(o,"available"),d.used=this.safeString(o,"freeze"),this.balance[h]=d,this.balance=this.safeBalance(this.balance);let l="wallet:";i.indexOf("Spot")>=0?l+="spot":l+="margin",e.resolve(this.balance,l)}async watchPublic(e,t,i=[],s={}){let r=this.urls.api.ws,a=this.nonce(),n=this.extend({id:a,method:t,params:i},s);return await this.watch(r,e,n,e)}async watchMultipleSubscription(e,t,i,s=!1,r={}){let a;await this.loadMarkets();let n=this.urls.api.ws,o=this.nonce(),h=this.safeValue(this.clients,n),d=[];if(void 0===h){let h={},l=this.market(i).id;h[l]=!0,d=[l],s&&(d=[d]),a={id:o,method:t,params:d};let c=this.extend(a,r);return await this.watch(n,e,c,t,h)}{let r=this.safeValue(h.subscriptions,t,{}),d=!0,l=this.market(i).id;if(this.safeBool(r,l,!1)||(r[l]=!0,d=!1),d)return await this.watch(n,e,a,t,r);{let i=[];i=Object.keys(r),s&&(i=[i]);let a={id:o,method:t,params:i};return t in h.subscriptions&&delete h.subscriptions[t],await this.watch(n,e,a,t,r)}}}async watchPrivate(e,t,i=[],s={}){this.checkRequiredCredentials(),await this.authenticate();let r=this.urls.api.ws,a=this.nonce(),n=this.extend({id:a,method:t,params:i},s);return await this.watch(r,e,n,e)}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws,i="authenticated",s=this.client(t),r=s.future("authenticated");if(void 0===this.safeValue(s.subscriptions,i)){let e=await this.v4PrivatePostProfileWebsocketToken(),a=this.safeString(e,"websocket_token"),n=this.nonce(),o={id:n,method:this.handleAuthenticate};try{await this.watch(t,i,{id:n,method:"authorize",params:[a,"public"]},i,o)}catch(e){delete s.subscriptions[i],r.reject(e)}}return await r}handleAuthenticate(e,t){return e.futures.authenticated.resolve(1),t}handleErrorMessage(e,t){let i=this.safeValue(t,"error");try{if(void 0!==i){let e=this.safeString(t,"code"),i=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,e,i)}}catch(t){if(t instanceof n.AuthenticationError)return e.reject(t,"authenticated"),"authenticated"in e.subscriptions&&delete e.subscriptions.authenticated,!1}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"result")){this.handlePong(e,t);return}let i=this.safeInteger(t,"id");if(void 0!==i){this.handleSubscriptionStatus(e,t,i);return}let s={market_update:this.handleTicker,trades_update:this.handleTrades,depth_update:this.handleOrderBook,candles_update:this.handleOHLCV,ordersPending_update:this.handleOrder,ordersExecuted_update:this.handleOrder,balanceSpot_update:this.handleBalance,balanceMargin_update:this.handleBalance,deals_update:this.handleMyTrades},r=this.safeValue(t,"method"),a=this.safeValue(s,r);void 0!==a&&a.call(this,e,t)}handleSubscriptionStatus(e,t,i){let s=Object.values(e.subscriptions);for(let r=0;r<s.length;r++){let a=s[r];if(!0!==a){let s=this.safeInteger(a,"id");if(void 0!==s&&s===i){let i=this.safeValue(a,"method");if(void 0!==i){i.call(this,e,t);return}}}}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}ping(e){return{id:0,method:"ping",params:[]}}}class rQ extends sP.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!1,watchPositions:!0},urls:{api:{ws:{public:"wss://wss.woox.io/ws/stream",private:"wss://wss.woox.io/v2/ws/private/stream"}},test:{ws:{public:"wss://wss.staging.woox.io/ws/stream",private:"wss://wss.staging.woox.io/v2/ws/private/stream"}}},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},options:{tradesLimit:1e3,ordersLimit:1e3,requestId:{},watchPositions:{fetchPositionsSnapshot:!0,awaitPositionsSnapshot:!0}},streaming:{ping:this.ping,keepAlive:9e3},exceptions:{ws:{exact:{"Auth is needed.":n.AuthenticationError}}}})}requestId(e){let t=this.safeValue(this.options,"requestId",{}),i=this.safeInteger(t,e,0),s=this.sum(i,1);return this.options.requestId[e]=s,s}async watchPublic(e,t){let i=this.uid?"/"+this.uid:"",s=this.urls.api.ws.public+i,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watch(s,e,a,e,r)}async watchOrderBook(e,t,i={}){let s;await this.loadMarkets(),[s,i]=this.handleOptionAndParams(i,"watchOrderBook","method","orderbook");let r=this.market(e).id+"@"+s,a=this.uid?"/"+this.uid:"",n=this.urls.api.ws.public+a,o=this.requestId(n),h={id:o.toString(),name:s,symbol:e,limit:t,params:i};return"orderbookupdate"===s&&(h.method=this.handleOrderBookSubscription),(await this.watch(n,r,this.extend({event:"subscribe",topic:r,id:o},i),r,h)).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"data"),s=this.safeString(i,"symbol"),r=this.safeMarket(s).symbol,a=this.safeString(t,"topic");if("orderbookupdate"===this.safeString(a.split("@"),1)){if(!(r in this.orderbooks))return;let i=this.orderbooks[r],s=this.safeInteger(i,"timestamp");if(void 0===s)i.cache.push(t);else try{this.safeInteger(t,"ts")>s&&(this.handleOrderBookMessage(e,t,i),e.resolve(i,a))}catch(t){delete this.orderbooks[r],delete e.subscriptions[a],e.reject(t,a)}}else{if(!(r in this.orderbooks)){let t=this.safeInteger(this.options,"watchOrderBookLimit",1e3),i=e.subscriptions[a],s=this.safeInteger(i,"limit",t);this.orderbooks[r]=this.orderBook({},s)}let s=this.orderbooks[r],n=this.safeInteger(t,"ts"),o=this.parseOrderBook(i,r,n,"bids","asks");s.reset(o),e.resolve(s,a)}}handleOrderBookSubscription(e,t,i){let s=this.safeInteger(this.options,"watchOrderBookLimit",1e3),r=this.safeInteger(i,"limit",s),a=this.safeString(i,"symbol");a in this.orderbooks&&delete this.orderbooks[a],this.orderbooks[a]=this.orderBook({},r),this.spawn(this.fetchOrderBookSnapshot,e,t,i)}async fetchOrderBookSnapshot(e,t,i){let s=this.safeString(i,"symbol"),r=this.safeString(t,"topic");try{let t=this.safeInteger(this.options,"watchOrderBookLimit",1e3),a=this.safeInteger(i,"limit",t),n=this.safeValue(i,"params"),o=await this.fetchRestOrderBookSafe(s,a,n);if(void 0===this.safeValue(this.orderbooks,s))return;let h=this.orderbooks[s];h.reset(o);let d=h.cache;for(let t=0;t<d.length;t++){let i=d[t];this.safeInteger(i,"ts")<h.timestamp||this.handleOrderBookMessage(e,i,h)}this.orderbooks[s]=h,e.resolve(h,r)}catch(t){delete e.subscriptions[r],e.reject(t,r)}}handleOrderBookMessage(e,t,i){let s=this.safeDict(t,"data");this.handleDeltas(i.asks,this.safeValue(s,"asks",[])),this.handleDeltas(i.bids,this.safeValue(s,"bids",[]));let r=this.safeInteger(t,"ts");return i.timestamp=r,i.datetime=this.iso8601(r),i}handleDelta(e,t){let i=this.safeFloat2(t,"price",0),s=this.safeFloat2(t,"quantity",1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=i.id+"@ticker",r=this.extend({event:"subscribe",topic:s},t);return await this.watchPublic(s,r)}parseWsTicker(e,t){return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"amount"),info:e},t)}handleTicker(e,t){let i=this.safeValue(t,"data"),s=this.safeValue(t,"topic"),r=this.safeString(i,"symbol"),a=this.safeMarket(r),n=this.safeInteger(t,"ts");i.date=n;let o=this.parseWsTicker(i,a);return o.symbol=a.symbol,this.tickers[a.symbol]=o,e.resolve(o,s),t}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i="tickers",s=this.extend({event:"subscribe",topic:i},t),r=await this.watchPublic(i,s);return this.filterByArray(r,"symbol",e)}handleTickers(e,t){let i=this.safeValue(t,"topic"),s=this.safeValue(t,"data"),r=this.safeInteger(t,"ts"),a=[];for(let e=0;e<s.length;e++){let t=this.safeString(s[e],"symbol"),i=this.safeMarket(t),n=this.parseWsTicker(this.extend(s[e],{date:r}),i);this.tickers[i.symbol]=n,a.push(n)}e.resolve(a,i)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e,void 0,!1);let i="bbos",s=this.extend({event:"subscribe",topic:i},t),r=await this.watchPublic(i,s);return this.newUpdates?r:this.filterByArray(this.bidsasks,"symbol",e)}handleBidAsk(e,t){let i=this.safeString(t,"topic"),s=this.safeList(t,"data",[]),r=this.safeInteger(t,"ts"),a={};for(let e=0;e<s.length;e++){let t=this.safeDict(s,e);t.ts=r;let i=this.parseWsBidAsk(t),n=i.symbol;this.bidsasks[n]=i,a[n]=i}e.resolve(a,i)}parseWsBidAsk(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"ts");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){if(await this.loadMarkets(),"1m"!==t&&"5m"!==t&&"15m"!==t&&"30m"!==t&&"1h"!==t&&"1d"!==t&&"1w"!==t&&"1M"!==t)throw new n.ExchangeError(this.id+" watchOHLCV timeframe argument must be 1m, 5m, 15m, 30m, 1h, 1d, 1w, 1M");let a=this.market(e),o=this.safeString(this.timeframes,t,t),h=a.id+"@kline_"+o,d=this.extend({event:"subscribe",topic:h},r),l=await this.watchPublic(h,d);return this.newUpdates&&(s=l.getLimit(a.symbol,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeValue(t,"data"),s=this.safeValue(t,"topic"),r=this.safeString(i,"symbol"),a=this.safeMarket(r).symbol,n=this.safeString(i,"type"),o=this.findTimeframe(n),h=[this.safeInteger(i,"startTime"),this.safeFloat(i,"open"),this.safeFloat(i,"high"),this.safeFloat(i,"low"),this.safeFloat(i,"close"),this.safeFloat(i,"volume")];this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let d=this.safeValue(this.ohlcvs[a],o);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[a][o]=d}d.append(h),e.resolve(d,s)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=r.id+"@trade",n=this.extend({event:"subscribe",topic:a},s),o=await this.watchPublic(a,n);return this.newUpdates&&(i=o.getLimit(r.symbol,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleTrade(e,t){let i=this.safeString(t,"topic"),s=this.safeInteger(t,"ts"),r=this.safeValue(t,"data"),a=this.safeString(r,"symbol"),n=this.safeMarket(a),o=n.symbol,h=this.parseWsTrade(this.extend(r,{timestamp:s}),n),d=this.safeValue(this.trades,o);if(void 0===d){let e=this.safeInteger(this.options,"tradesLimit",1e3);d=new sH.I3(e)}d.append(h),this.trades[o]=d,e.resolve(d,i)}parseWsTrade(e,t){let i,s;let a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeString2(e,"executedPrice","price"),h=this.safeString2(e,"executedQuantity","size"),d=r.Y.stringMul(o,h),l=this.safeStringLower(e,"side"),c=this.safeInteger(e,"timestamp"),u=this.safeBool(e,"marker");void 0!==u&&(i=u?"maker":"taker");let f=this.safeStringLower(e,"type"),p=this.safeNumber(e,"fee");return void 0!==p&&(s={cost:p,currency:this.safeCurrencyCode(this.safeString(e,"feeCurrency"))}),this.safeTrade({id:this.safeString(e,"tradeId"),timestamp:c,datetime:this.iso8601(c),symbol:n,side:l,price:o,amount:h,cost:d,order:this.safeString(e,"orderId"),takerOrMaker:i,type:f,fee:s,info:e},t)}checkRequiredUid(e=!0){if(!this.uid){if(!e)return!1;throw new n.AuthenticationError(this.id+" requires `uid` credential (woox calls it `application_id`)")}return!0}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws.private+"/"+this.uid,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){let i=this.nonce().toString(),r=this.hmac(this.encode("|"+i),this.encode(this.secret),l.s),a={event:"auth",params:{apikey:this.apiKey,sign:r,timestamp:i}},n=this.extend(a,e);this.watch(t,s,n,s,n)}return await r}async watchPrivate(e,t,i={}){await this.authenticate(i);let s=this.urls.api.ws.private+"/"+this.uid,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watch(s,e,a,e,r)}async watchPrivateMultiple(e,t,i={}){await this.authenticate(i);let s=this.urls.api.ws.private+"/"+this.uid,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watchMultiple(s,e,a,e,r)}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.safeBool2(s,"stop","trigger",!1)?"algoexecutionreportv2":"executionreport";s=this.omit(s,["stop","trigger"]);let a=r;void 0!==e&&(a+=":"+(e=this.market(e).symbol));let n=this.extend({event:"subscribe",topic:r},s),o=await this.watchPrivate(a,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.safeBool2(s,"stop","trigger",!1);s=this.omit(s,["stop","trigger"]);let a="myTrades";void 0!==e&&(a+=":"+(e=this.market(e).symbol));let n=this.extend({event:"subscribe",topic:r?"algoexecutionreportv2":"executionreport"},s),o=await this.watchPrivate(a,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}parseWsOrder(e,t){let i=this.safeString(e,"orderId"),s=this.safeString(e,"symbol"),a=this.market(s).symbol,n=this.safeInteger(e,"timestamp"),o={cost:this.safeString(e,"totalFee"),currency:this.safeString(e,"feeAsset")},h=this.safeString(e,"price"),d=this.safeNumber(e,"price"),l=this.safeNumber(e,"avgPrice");r.Y.stringEq(h,"0")&&void 0!==l&&(d=l);let c=this.safeFloat(e,"quantity"),u=this.safeStringLower(e,"side"),f=this.safeStringLower(e,"type"),p=this.safeNumber(e,"totalExecutedQuantity"),m=this.safeFloat(e,"totalExecutedQuantity"),g=c;c>=m&&(g-=m);let y=this.safeString(e,"status"),v=this.parseOrderStatus(y),b=this.safeString(e,"clientOrderId");return this.safeOrder({info:e,symbol:a,id:i,clientOrderId:b,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:n,type:f,timeInForce:void 0,postOnly:void 0,side:u,price:d,stopPrice:void 0,triggerPrice:void 0,amount:c,cost:void 0,average:l,filled:p,remaining:g,status:v,fee:o,trades:void 0})}handleOrderUpdate(e,t){let i=this.safeString(t,"topic"),s=this.safeValue(t,"data");if(Array.isArray(s))for(let t=0;t<s.length;t++){let r=s[t];void 0!==this.omitZero(this.safeString(s,"tradeId"))&&this.handleMyTrade(e,r),this.handleOrder(e,r,i)}else void 0!==this.omitZero(this.safeString(s,"tradeId"))&&this.handleMyTrade(e,s),this.handleOrder(e,s,i)}handleOrder(e,t,i){let s=this.parseWsOrder(t),r=this.safeString(s,"symbol"),a=this.safeString(s,"id");if(void 0!==r){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let t=this.orders,n=this.safeValue(t.hashmap,r,{}),o=this.safeValue(n,a);if(void 0!==o){let e=this.safeValue(o,"fee");void 0!==e&&(s.fee=e);let t=this.safeValue(o,"fees");void 0!==t&&(s.fees=t),s.trades=this.safeValue(o,"trades"),s.timestamp=this.safeInteger(o,"timestamp"),s.datetime=this.safeString(o,"datetime")}t.append(s),e.resolve(this.orders,i),e.resolve(this.orders,i+":"+r)}}handleMyTrade(e,t){let i=this.myTrades;if(void 0===i){let e=this.safeInteger(this.options,"tradesLimit",1e3);i=new sH.Pt(e)}let s=this.parseWsTrade(t);i.append(s);let r="myTrades:"+s.symbol;e.resolve(i,r),r="myTrades",e.resolve(i,r)}async watchPositions(e,t,i,s={}){await this.loadMarkets();let r=[];if(e=this.marketSymbols(e),this.isEmpty(e))r.push("positions");else for(let t=0;t<e.length;t++){let i=e[t];r.push("positions::"+i)}let a=this.urls.api.ws.private+"/"+this.uid,n=this.client(a);this.setPositionsCache(n,e);let o=this.handleOption("watchPositions","fetchPositionsSnapshot",!0),h=this.handleOption("watchPositions","awaitPositionsSnapshot",!0);if(o&&h&&void 0===this.positions){let s=await n.future("fetchPositionsSnapshot");return this.filterBySymbolsSinceLimit(s,e,t,i,!0)}let d=await this.watchPrivateMultiple(r,{event:"subscribe",topic:"position"},s);return this.newUpdates?d:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}setPositionsCache(e,t,i){if(this.handleOption("watchPositions","fetchPositionsSnapshot",!1)){let t="fetchPositionsSnapshot";t in e.futures||(e.future(t),this.spawn(this.loadPositionsSnapshot,e,t))}else this.positions=new sH.Hk}async loadPositionsSnapshot(e,t){let i=await this.fetchPositions();this.positions=new sH.Hk;let s=this.positions;for(let e=0;e<i.length;e++){let t=i[e];this.safeNumber(t,"contracts",0)>0&&s.append(t)}e.futures[t].resolve(s),e.resolve(s,"positions")}handlePositions(e,t){let i=this.safeValue(t,"data",{}),s=this.safeValue(i,"positions",{}),r=Object.keys(s);void 0===this.positions&&(this.positions=new sH.Hk);let a=this.positions,n=[];for(let t=0;t<r.length;t++){let i=r[t],o=this.safeMarket(i),h=s[i],d=this.parsePosition(h,o);n.push(d),a.append(d);let l="positions::"+o.symbol;e.resolve(d,l)}e.resolve(n,"positions")}async watchBalance(e={}){await this.loadMarkets();let t="balance",i=this.extend({event:"subscribe",topic:t},e);return await this.watchPrivate(t,i)}handleBalance(e,t){let i=this.safeValue(t,"data"),s=this.safeValue(i,"balances"),a=Object.keys(s),n=this.safeInteger(t,"ts");this.balance.info=i,this.balance.timestamp=n,this.balance.datetime=this.iso8601(n);for(let e=0;e<a.length;e++){let t=a[e],i=s[t],n=this.safeCurrencyCode(t),o=n in this.balance?this.balance[n]:this.account(),h=this.safeString(i,"holding"),d=this.safeString(i,"frozen");o.total=h,o.used=d,o.free=r.Y.stringSub(h,d),this.balance[n]=o}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}handleErrorMessage(e,t){if(!("success"in t)||this.safeBool(t,"success"))return!1;let i=this.safeString(t,"errorMsg");try{if(void 0!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i={ping:this.handlePing,pong:this.handlePong,subscribe:this.handleSubscribe,orderbook:this.handleOrderBook,orderbookupdate:this.handleOrderBook,ticker:this.handleTicker,tickers:this.handleTickers,kline:this.handleOHLCV,auth:this.handleAuth,executionreport:this.handleOrderUpdate,algoexecutionreportv2:this.handleOrderUpdate,trade:this.handleTrade,balance:this.handleBalance,position:this.handlePositions,bbos:this.handleBidAsk},s=this.safeString(t,"event"),r=this.safeValue(i,s);if(void 0!==r){r.call(this,e,t);return}let a=this.safeString(t,"topic");if(void 0!==a){if(void 0!==(r=this.safeValue(i,a))){r.call(this,e,t);return}let s=a.split("@");if(2===s.length){let a=this.safeString(s,1);if(void 0!==(r=this.safeValue(i,a))){r.call(this,e,t);return}let n=a.split("_");2===s.length&&void 0!==(r=this.safeValue(i,this.safeString(n,0)))&&r.call(this,e,t)}}}ping(e){return{event:"ping"}}handlePing(e,t){return{event:"pong"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleSubscribe(e,t){let i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}handleAuth(e,t){let i="authenticated";if(this.safeValue(t,"success"))this.safeValue(e.futures,"authenticated").resolve(!0);else{let s=new n.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions.authenticated}}}class rZ extends sC{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchBidsAsks:!0,watchTrades:!0,watchTradesForSymbols:!1,watchPositions:!0},urls:{api:{ws:{public:"wss://ws-evm.orderly.org/ws/stream",private:"wss://ws-private-evm.orderly.org/v2/ws/private/stream"}},test:{ws:{public:"wss://testnet-ws-evm.orderly.org/ws/stream",private:"wss://testnet-ws-private-evm.orderly.org/v2/ws/private/stream"}}},requiredCredentials:{apiKey:!0,secret:!0,accountId:!0},options:{tradesLimit:1e3,ordersLimit:1e3,requestId:{},watchPositions:{fetchPositionsSnapshot:!0,awaitPositionsSnapshot:!0}},streaming:{ping:this.ping,keepAlive:1e4},exceptions:{ws:{exact:{"Auth is needed.":n.AuthenticationError}}}})}requestId(e){let t=this.safeDict(this.options,"requestId",{}),i=this.safeInteger(t,e,0),s=this.sum(i,1);return this.options.requestId[e]=s,s}async watchPublic(e,t){let i="OqdphuyCtYWxwzhxyLLjOWNdFP7sQt8RPWzmb5xY";void 0!==this.accountId&&(i=this.accountId);let s=this.urls.api.ws.public+"/"+i,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watch(s,e,a,e,r)}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e).id+"@orderbook",r=this.extend({event:"subscribe",topic:s},i);return(await this.watchPublic(s,r)).limit()}handleOrderBook(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"symbol"),r=this.safeMarket(s).symbol,a=this.safeString(t,"topic");r in this.orderbooks||(this.orderbooks[r]=this.orderBook());let n=this.orderbooks[r],o=this.safeInteger(t,"ts"),h=this.parseOrderBook(i,r,o,"bids","asks");n.reset(h),e.resolve(n,a)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);e=i.symbol;let s=i.id+"@ticker",r=this.extend({event:"subscribe",topic:s},t);return await this.watchPublic(s,r)}parseWsTicker(e,t){return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"amount"),info:e},t)}handleTicker(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(t,"topic"),r=this.safeString(i,"symbol"),a=this.safeMarket(r),n=this.safeInteger(t,"ts");i.date=n;let o=this.parseWsTicker(i,a);return o.symbol=a.symbol,this.tickers[a.symbol]=o,e.resolve(o,s),t}async watchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i="tickers",s=this.extend({event:"subscribe",topic:i},t),r=await this.watchPublic(i,s);return this.filterByArray(r,"symbol",e)}handleTickers(e,t){let i=this.safeString(t,"topic"),s=this.safeList(t,"data",[]),r=this.safeInteger(t,"ts"),a=[];for(let e=0;e<s.length;e++){let t=this.safeString(s[e],"symbol"),i=this.safeMarket(t),n=this.parseWsTicker(this.extend(s[e],{date:r}),i);this.tickers[i.symbol]=n,a.push(n)}e.resolve(a,i)}async watchBidsAsks(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i="bbos",s=this.extend({event:"subscribe",topic:i},t),r=await this.watchPublic(i,s);return this.filterByArray(r,"symbol",e)}handleBidAsk(e,t){let i=this.safeString(t,"topic"),s=this.safeList(t,"data",[]),r=this.safeInteger(t,"ts"),a=[];for(let e=0;e<s.length;e++){let t=this.parseWsBidAsk(this.extend(s[e],{ts:r}));this.tickers[t.symbol]=t,a.push(t)}e.resolve(a,i)}parseWsBidAsk(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeString(t,"symbol"),r=this.safeInteger(e,"ts");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),info:e},t)}async watchOHLCV(e,t="1m",i,s,r={}){if(await this.loadMarkets(),"1m"!==t&&"5m"!==t&&"15m"!==t&&"30m"!==t&&"1h"!==t&&"1d"!==t&&"1w"!==t&&"1M"!==t)throw new n.NotSupported(this.id+" watchOHLCV timeframe argument must be 1m, 5m, 15m, 30m, 1h, 1d, 1w, 1M");let a=this.market(e),o=this.safeString(this.timeframes,t,t),h=a.id+"@kline_"+o,d=this.extend({event:"subscribe",topic:h},r),l=await this.watchPublic(h,d);return this.newUpdates&&(s=l.getLimit(a.symbol,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(t,"topic"),r=this.safeString(i,"symbol"),a=this.safeMarket(r).symbol,n=this.safeString(i,"type"),o=this.findTimeframe(n),h=[this.safeInteger(i,"startTime"),this.safeNumber(i,"open"),this.safeNumber(i,"high"),this.safeNumber(i,"low"),this.safeNumber(i,"close"),this.safeNumber(i,"volume")];this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let d=this.safeValue(this.ohlcvs[a],o);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[a][o]=d}let l=this.ohlcvs[a][o];l.append(h),e.resolve(l,s)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);e=r.symbol;let a=r.id+"@trade",n=this.extend({event:"subscribe",topic:a},s),o=await this.watchPublic(a,n);return this.newUpdates&&(i=o.getLimit(r.symbol,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleTrade(e,t){let i=this.safeString(t,"topic"),s=this.safeInteger(t,"ts"),r=this.safeDict(t,"data",{}),a=this.safeString(r,"symbol"),n=this.safeMarket(a),o=n.symbol,h=this.parseWsTrade(this.extend(r,{timestamp:s}),n);if(!(o in this.trades)){let e=this.safeInteger(this.options,"tradesLimit",1e3),t=new sH.I3(e);this.trades[o]=t}let d=this.trades[o];d.append(h),this.trades[o]=d,e.resolve(d,i)}parseWsTrade(e,t){let i,s;let a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeString2(e,"executedPrice","price"),h=this.safeString2(e,"executedQuantity","size"),d=r.Y.stringMul(o,h),l=this.safeStringLower(e,"side"),c=this.safeInteger(e,"timestamp"),u=this.safeBool(e,"maker");void 0!==u&&(i=u?"maker":"taker");let f=this.safeString(e,"fee");return void 0!==f&&(s={cost:f,currency:this.safeCurrencyCode(this.safeString(e,"feeAsset"))}),this.safeTrade({id:this.safeString(e,"tradeId"),timestamp:c,datetime:this.iso8601(c),symbol:n,side:l,price:o,amount:h,cost:d,order:this.safeString(e,"orderId"),takerOrMaker:i,type:this.safeStringLower(e,"type"),fee:s,info:e},t)}handleAuth(e,t){let i="authenticated";if(this.safeValue(t,"success"))this.safeValue(e.futures,"authenticated").resolve(!0);else{let s=new n.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions.authenticated}}async authenticate(e={}){this.checkRequiredCredentials();let t=this.urls.api.ws.private+"/"+this.accountId,i=this.client(t),s="authenticated",r=i.future(s);if(void 0===this.safeValue(i.subscriptions,s)){let i=this.nonce().toString(),r=this.secret;r.indexOf("ed25519:")>=0&&(r=r.split("ed25519:")[1]);let a=(0,tB.q4)(this.encode(i),this.base58ToBinary(r),tC.ev),n={event:"auth",params:{orderly_key:this.apiKey,sign:a,timestamp:i}},o=this.extend(n,e);this.watch(t,s,o,s)}return await r}async watchPrivate(e,t,i={}){await this.authenticate(i);let s=this.urls.api.ws.private+"/"+this.accountId,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watch(s,e,a,e,r)}async watchPrivateMultiple(e,t,i={}){await this.authenticate(i);let s=this.urls.api.ws.private+"/"+this.accountId,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watchMultiple(s,e,a,e,r)}async watchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.safeBool2(s,"stop","trigger",!1)?"algoexecutionreport":"executionreport";s=this.omit(s,["stop","trigger"]);let a=r;void 0!==e&&(a+=":"+(e=this.market(e).symbol));let n=this.extend({event:"subscribe",topic:r},s),o=await this.watchPrivate(a,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}async watchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.safeBool2(s,"stop","trigger",!1);s=this.omit(s,"stop");let a="myTrades";void 0!==e&&(a+=":"+(e=this.market(e).symbol));let n=this.extend({event:"subscribe",topic:r?"algoexecutionreport":"executionreport"},s),o=await this.watchPrivate(a,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}parseWsOrder(e,t){let i=this.safeString(e,"orderId"),s=this.safeString(e,"symbol"),a=this.market(s).symbol,n=this.safeInteger(e,"timestamp"),o={cost:this.safeString(e,"totalFee"),currency:this.safeString(e,"feeAsset")},h=this.safeString(e,"price"),d=this.safeNumber(e,"price"),l=this.safeNumber(e,"avgPrice");r.Y.stringEq(h,"0")&&void 0!==l&&(d=l);let c=this.safeString(e,"quantity"),u=this.safeStringLower(e,"side"),f=this.safeStringLower(e,"type"),p=this.safeNumber(e,"totalExecutedQuantity"),m=this.safeString(e,"totalExecutedQuantity"),g=c;r.Y.stringGe(c,m)&&(g=r.Y.stringSub(g,m));let y=this.safeString(e,"status"),v=this.parseOrderStatus(y),b=this.safeString(e,"clientOrderId"),w=this.safeNumber(e,"triggerPrice");return this.safeOrder({info:e,symbol:a,id:i,clientOrderId:b,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:n,type:f,timeInForce:void 0,postOnly:void 0,side:u,price:d,stopPrice:w,triggerPrice:w,amount:c,cost:void 0,average:void 0,filled:p,remaining:g,status:v,fee:o,trades:void 0})}handleOrderUpdate(e,t){let i=this.safeString(t,"topic"),s=this.safeValue(t,"data");if(Array.isArray(s))for(let t=0;t<s.length;t++){let r=s[t];void 0!==this.omitZero(this.safeString(s,"tradeId"))&&this.handleMyTrade(e,r),this.handleOrder(e,r,i)}else void 0!==this.omitZero(this.safeString(s,"tradeId"))&&this.handleMyTrade(e,s),this.handleOrder(e,s,i)}handleOrder(e,t,i){let s=this.parseWsOrder(t),r=this.safeString(s,"symbol"),a=this.safeString(s,"id");if(void 0!==r){if(void 0===this.orders){let e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new sH.Pt(e)}let t=this.orders,n=this.safeDict(t.hashmap,r,{}),o=this.safeDict(n,a);if(void 0!==o){let e=this.safeValue(o,"fee");void 0!==e&&(s.fee=e);let t=this.safeList(o,"fees");void 0!==t&&(s.fees=t),s.trades=this.safeList(o,"trades"),s.timestamp=this.safeInteger(o,"timestamp"),s.datetime=this.safeString(o,"datetime")}t.append(s),e.resolve(this.orders,i),e.resolve(this.orders,i+":"+r)}}handleMyTrade(e,t){let i="myTrades",s=this.safeString(t,"symbol"),r=this.safeMarket(s),a=r.symbol,n=this.parseWsTrade(t,r),o=this.myTrades;if(void 0===o){let e=this.safeInteger(this.options,"tradesLimit",1e3);o=new sH.Pt(e),this.myTrades=o}o.append(n),e.resolve(o,i),e.resolve(o,i+":"+a)}async watchPositions(e,t,i,s={}){await this.loadMarkets();let r=[];if(e=this.marketSymbols(e),this.isEmpty(e))r.push("positions");else for(let t=0;t<e.length;t++){let i=e[t];r.push("positions::"+i)}let a=this.urls.api.ws.private+"/"+this.accountId,n=this.client(a);this.setPositionsCache(n,e);let o=this.handleOption("watchPositions","fetchPositionsSnapshot",!0),h=this.handleOption("watchPositions","awaitPositionsSnapshot",!0);if(o&&h&&void 0===this.positions){let s=await n.future("fetchPositionsSnapshot");return this.filterBySymbolsSinceLimit(s,e,t,i,!0)}let d=await this.watchPrivateMultiple(r,{event:"subscribe",topic:"position"},s);return this.newUpdates?d:this.filterBySymbolsSinceLimit(this.positions,e,t,i,!0)}setPositionsCache(e,t,i){if(this.handleOption("watchPositions","fetchPositionsSnapshot",!1)){let t="fetchPositionsSnapshot";t in e.futures||(e.future(t),this.spawn(this.loadPositionsSnapshot,e,t))}else this.positions=new sH.Hk}async loadPositionsSnapshot(e,t){let i=await this.fetchPositions();this.positions=new sH.Hk;let s=this.positions;for(let e=0;e<i.length;e++){let t=i[e],a=this.safeString(t,"contracts","0");r.Y.stringGt(a,"0")&&s.append(t)}e.futures[t].resolve(s),e.resolve(s,"positions")}handlePositions(e,t){let i=this.safeDict(t,"data",{}),s=this.safeList(i,"positions",[]);void 0===this.positions&&(this.positions=new sH.Hk);let r=this.positions,a=[];for(let t=0;t<s.length;t++){let i=s[t],n=this.safeString(i,"symbol"),o=this.safeMarket(n),h=this.parseWsPosition(i,o);a.push(h),r.append(h);let d="positions::"+o.symbol;e.resolve(h,d)}e.resolve(a,"positions")}parseWsPosition(e,t){let i;let s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let a=this.safeString(e,"positionQty");i=r.Y.stringGt(a,"0")?"long":"short";let n=this.safeString(t,"contractSize"),o=this.safeString(e,"markPrice"),h=this.safeInteger(e,"timestamp"),d=this.safeString(e,"averageOpenPrice"),l=this.safeString(e,"unsettledPnl");a=r.Y.stringAbs(a);let c=r.Y.stringMul(a,o);return this.safePosition({info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:h,datetime:this.iso8601(h),lastUpdateTimestamp:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:this.parseNumber(d),notional:this.parseNumber(c),leverage:void 0,unrealizedPnl:this.parseNumber(l),contracts:this.parseNumber(a),contractSize:this.parseNumber(n),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"estLiqPrice"),markPrice:this.parseNumber(o),lastPrice:void 0,collateral:void 0,marginMode:"cross",marginType:void 0,side:i,percentage:void 0,hedged:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async watchBalance(e={}){await this.loadMarkets();let t="balance",i=this.extend({event:"subscribe",topic:t},e);return await this.watchPrivate(t,i)}handleBalance(e,t){let i=this.safeDict(t,"data",{}),s=this.safeDict(i,"balances",{}),a=Object.keys(s),n=this.safeInteger(t,"ts");this.balance.info=i,this.balance.timestamp=n,this.balance.datetime=this.iso8601(n);for(let e=0;e<a.length;e++){let t=a[e],i=s[t],n=this.safeCurrencyCode(t),o=n in this.balance?this.balance[n]:this.account(),h=this.safeString(i,"holding"),d=this.safeString(i,"frozen");o.total=h,o.used=d,o.free=r.Y.stringSub(h,d),this.balance[n]=o}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}handleErrorMessage(e,t){if(!("success"in t)||this.safeBool(t,"success"))return!1;let i=this.safeString(t,"errorMsg");try{if(void 0!==i){let e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e)}return!1}catch(t){if(t instanceof n.AuthenticationError){let i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;let i={ping:this.handlePing,pong:this.handlePong,subscribe:this.handleSubscribe,orderbook:this.handleOrderBook,ticker:this.handleTicker,tickers:this.handleTickers,kline:this.handleOHLCV,trade:this.handleTrade,auth:this.handleAuth,executionreport:this.handleOrderUpdate,algoexecutionreport:this.handleOrderUpdate,position:this.handlePositions,balance:this.handleBalance,bbos:this.handleBidAsk},s=this.safeString(t,"event"),r=this.safeValue(i,s);if(void 0!==r){r.call(this,e,t);return}let a=this.safeString(t,"topic");if(void 0!==a){if(void 0!==(r=this.safeValue(i,a))){r.call(this,e,t);return}let s=a.split("@");if(2===s.length){let a=this.safeString(s,1);if(void 0!==(r=this.safeValue(i,a))){r.call(this,e,t);return}let n=a.split("_");2===s.length&&void 0!==(r=this.safeValue(i,this.safeString(n,0)))&&r.call(this,e,t)}}}ping(e){return{event:"ping"}}handlePing(e,t){return{event:"pong"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleSubscribe(e,t){return t}}class rJ extends sB.A{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOHLCV:!0,watchOrderBook:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchTradesForSymbols:!1,watchBalance:!0,watchOrders:!0,watchMyTrades:!0,watchPositions:void 0},urls:{api:{ws:{spot:"wss://stream.xt.com",contract:"wss://fstream.xt.com/ws"}}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,watchTicker:{method:"ticker"},watchTickers:{method:"tickers"}},streaming:{keepAlive:2e4,ping:this.ping},token:void 0})}async getListenKey(e){this.checkRequiredCredentials();let t=this.urls.api.ws[e?"contract":"spot"];e||(t+="/private");let i=this.client(t);if(void 0===this.safeString(i.subscriptions,"token")){if(e){let e=await this.privateLinearGetFutureUserV1UserListenKey();i.subscriptions.token=this.safeString(e,"result")}else{let e=await this.privateSpotPostWsToken(),t=this.safeDict(e,"result");i.subscriptions.token=this.safeString(t,"accessToken")}}return i.subscriptions.token}getCacheIndex(e,t){let i=this.safeInteger(e,"nonce"),s=this.safeValue(t,0);if(i<this.safeInteger2(s,"i","u")-1)return -1;for(let e=0;e<t.length;e++){let s=t[e];if(this.safeInteger2(s,"i","u")>=i)return e}return t.length}handleDelta(e,t){e.nonce=this.safeInteger2(t,"i","u");let i=this.safeList(t,"a",[]),s=this.safeList(t,"b",[]),r=e.bids,a=e.asks;for(let e=0;e<s.length;e++){let t=s[e],i=this.safeNumber(t,0),a=this.safeNumber(t,1);r.store(i,a)}for(let e=0;e<i.length;e++){let t=i[e],s=this.safeNumber(t,0),r=this.safeNumber(t,1);a.store(s,r)}}async subscribe(e,t,i,s,r,a={}){let n;let o="private"===t;[n,a]=this.handleMarketTypeAndParams(i,s,a);let h="spot"!==n,d={method:h?"SUBSCRIBE":"subscribe",id:this.numberToString(this.milliseconds())+e};if(o){if(h){let t=e+"@"+await this.getListenKey(h);d.params=[t]}else d.params=[e],d.listenKey=await this.getListenKey(h)}else d.params=[e];let l=h?"contract":"spot",c=e+"::"+l;void 0!==r&&(c=c+"::"+r.join(","));let u=this.extend(d,a),f=t;h&&(f=o?"user":"market");let p=this.urls.api.ws[l]+"/"+f;return await this.watch(p,c,u,c)}async watchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.safeDict(this.options,"watchTicker"),r=this.safeString(s,"method","ticker"),a=this.safeString(t,"method",r)+"@"+i.id;return await this.subscribe(a,"public","watchTicker",i,void 0,t)}async watchTickers(e,t={}){let i;await this.loadMarkets();let s=this.safeDict(this.options,"watchTickers"),r=this.safeString(s,"method","tickers"),a=this.safeString(t,"method",r);void 0!==e&&(i=this.market(e[0]));let n=await this.subscribe(a,"public","watchTickers",i,e,t);return this.newUpdates?n:this.filterByArray(this.tickers,"symbol",e)}async watchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n="kline@"+a.id+","+t,o=await this.subscribe(n,"public","watchOHLCV",a,void 0,r);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}async watchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="trade@"+r.id,n=await this.subscribe(a,"public","watchTrades",r,void 0,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp")}async watchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=this.safeString(i,"levels");i=this.omit(i,"levels");let a="depth_update@"+s.id;return void 0!==r&&(a="depth@"+s.id+","+r),(await this.subscribe(a,"public","watchOrderBook",s,void 0,i)).limit()}async watchOrders(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.subscribe("order","private","watchOrders",r,void 0,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp")}async watchMyTrades(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.subscribe("trade","private","watchMyTrades",r,void 0,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp")}async watchBalance(e={}){return await this.loadMarkets(),await this.subscribe("balance","private","watchBalance",void 0,void 0,e)}handleTicker(e,t){let i=this.safeDict(t,"data");if(void 0!==this.safeString(i,"s")){let s=this.safeString(i,"cv"),r=this.parseTicker(i),a=r.symbol;this.tickers[a]=r;let n=this.safeString(t,"event");e.resolve(r,n+"::"+(void 0!==s?"spot":"contract"))}return t}handleTickers(e,t){let i=this.safeList(t,"data",[]),s=this.safeDict(i,0),r=this.safeString2(s,"cv","aq"),a=[];for(let e=0;e<i.length;e++){let t=i[e],s=this.parseTicker(t),r=s.symbol;this.tickers[r]=s,a.push(s)}let n=this.safeString(t,"topic")+"::"+(void 0!==r?"spot":"contract"),o=this.findMessageHashes(e,n+"::");for(let t=0;t<o.length;t++){let i=o[t],s=i.split("::")[2].split(","),r=this.filterByArray(a,"symbol",s);Object.keys(r).length>0&&e.resolve(r,i)}return e.resolve(this.tickers,n),t}handleOHLCV(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString(i,"s");if(void 0!==s){let r=this.safeString(i,"i"),a="q"in i?"spot":"contract",n=this.safeMarket(s,void 0,void 0,a),o=n.symbol,h=this.parseOHLCV(i,n);this.ohlcvs[o]=this.safeDict(this.ohlcvs,o,{});let d=this.safeValue(this.ohlcvs[o],r);if(void 0===d){let e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new sH.TG(e),this.ohlcvs[o][r]=d}d.append(h);let l=this.safeString(t,"event")+"::"+a;e.resolve(d,l)}return t}handleTrade(e,t){let i=this.safeDict(t,"data"),s=this.safeStringLower(i,"s");if(void 0!==s){let r=this.parseTrade(i),a=void 0!==this.safeString(i,"i")?"spot":"contract",n=this.safeMarket(s,void 0,void 0,a).symbol,o=this.safeString(t,"event"),h=this.safeValue(this.trades,n);if(void 0===h){let e=this.safeInteger(this.options,"tradesLimit",1e3);h=new sH.I3(e),this.trades[n]=h}h.append(r),e.resolve(h,o+"::"+a)}return t}handleOrderBook(e,t){let i=this.safeDict(t,"data"),s=this.safeString(i,"s");if(void 0!==s){let r=this.safeString(t,"event"),a=r.split(",");r=this.safeString(a,0);let n="fu"in i?"contract":"spot",o=this.safeMarket(s,void 0,void 0,n).symbol,h=this.safeList(i,"a"),d=this.safeList(i,"b"),l=r+"::"+n;if(!(o in this.orderbooks)){let t=this.safeDict(e.subscriptions,l,{}),i=this.safeInteger(t,"limit");this.orderbooks[o]=this.orderBook({},i)}let c=this.orderbooks[o];if(void 0===this.safeInteger(c,"nonce")){c.cache.length===this.handleOption("watchOrderBook","snapshotDelay",25)&&this.spawn(this.loadOrderBook,e,l,o),c.cache.push(i);return}if(void 0!==h){let e=c.asks;for(let t=0;t<h.length;t++){let i=h[t],s=this.safeNumber(i,0),r=this.safeNumber(i,1);e.store(s,r)}}if(void 0!==d){let e=c.bids;for(let t=0;t<d.length;t++){let i=d[t],s=this.safeNumber(i,0),r=this.safeNumber(i,1);e.store(s,r)}}let u=this.safeInteger(i,"t");c.nonce=this.safeInteger2(i,"i","u"),c.timestamp=u,c.datetime=this.iso8601(u),c.symbol=o,e.resolve(c,l)}}parseWsOrderTrade(e,t){let i=this.safeString(e,"s"),s="symbol"in e?"contract":"spot";t=this.safeMarket(i,t,void 0,s);let r=this.safeString(e,"t");return this.safeTrade({info:e,id:void 0,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:this.safeString(e,"i","orderId"),type:this.parseOrderStatus(this.safeString(e,"st","state")),side:this.safeStringLower(e,"sd","orderSide"),takerOrMaker:void 0,price:this.safeNumber(e,"price"),amount:this.safeString(e,"origQty"),cost:void 0,fee:{currency:void 0,cost:this.safeNumber(e,"f"),rate:void 0}},t)}parseWsOrder(e,t){let i=this.safeString2(e,"s","symbol"),s="symbol"in e?"contract":"spot";t=this.safeMarket(i,t,void 0,s);let r=this.safeInteger2(e,"ct","createTime");return this.safeOrder({info:e,id:this.safeString2(e,"i","orderId"),clientOrderId:this.safeString2(e,"ci","clientOrderId"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:t.symbol,type:t.type,timeInForce:void 0,postOnly:void 0,side:this.safeStringLower2(e,"sd","orderSide"),price:this.safeNumber2(e,"p","price"),stopPrice:void 0,stopLoss:void 0,takeProfit:void 0,amount:this.safeString2(e,"oq","origQty"),filled:this.safeString2(e,"eq","executedQty"),remaining:this.safeString(e,"lq"),cost:void 0,average:this.safeString2(e,"ap","avgPrice"),status:this.parseOrderStatus(this.safeString(e,"st","state")),fee:{currency:void 0,cost:this.safeNumber(e,"f")},trades:void 0},t)}handleOrder(e,t){let i=this.orders;if(void 0===i){let e=this.safeInteger(this.options,"ordersLimit");i=new sH.Pt(e),this.orders=i}let s=this.safeDict(t,"data",{}),r=this.safeString2(s,"s","symbol");if(void 0!==r){let t="symbol"in s?"contract":"spot",a=this.safeMarket(r,void 0,void 0,t),n=this.parseWsOrder(s,a);i.append(n),e.resolve(i,"order::"+t)}return t}handleBalance(e,t){let i=this.safeDict(t,"data",{}),s=this.safeString2(i,"c","coin"),r=this.safeCurrencyCode(s),a=this.account();a.free=this.safeString(i,"availableBalance"),a.used=this.safeString(i,"f"),a.total=this.safeString2(i,"b","walletBalance"),this.balance[r]=a,this.balance=this.safeBalance(this.balance);let n="coin"in i?"contract":"spot";e.resolve(this.balance,"balance::"+n)}handleMyTrades(e,t){let i=this.safeDict(t,"data",{}),s=this.myTrades;if(void 0===s){let e=this.safeInteger(this.options,"tradesLimit",1e3);s=new sH.Pt(e),this.myTrades=s}let r=this.parseTrade(i),a=this.market(r.symbol);s.append(r);let n=a.contract?"contract":"spot";e.resolve(s,"trade::"+n)}handleMessage(e,t){let i=this.safeString(t,"event");if("pong"===i)e.onPong();else if(void 0!==i){let i=this.safeString(t,"topic"),s={kline:this.handleOHLCV,depth:this.handleOrderBook,depth_update:this.handleOrderBook,ticker:this.handleTicker,agg_ticker:this.handleTicker,tickers:this.handleTickers,agg_tickers:this.handleTickers,balance:this.handleBalance,order:this.handleOrder},r=this.safeValue(s,i);if("trade"===i){let e=this.safeDict(t,"data");r="oi"in e||"orderId"in e?this.handleMyTrades:this.handleTrade}void 0!==r&&r.call(this,e,t)}}ping(e){return e.lastPong=this.milliseconds(),"ping"}handleErrorMessage(e,t){let i=this.safeString(t,"msg");if("invalid_listen_key"===i||"token expire"===i){e.subscriptions.token=void 0,this.getListenKey(!0);return}e.reject(t)}}let r0="4.4.48";s.k.ccxtVersion=r0;let r1={ace:c,alpaca:p,ascendex:m.A,bequant:y,bigone:k,binance:S.A,binancecoinm:O,binanceus:T,binanceusdm:I,bingx:x.A,bit2c:C,bitbank:_,bitbns:R,bitcoincom:V,bitfinex:q.A,bitfinex1:G,bitflyer:j,bitget:K.A,bithumb:X,bitmart:$.A,bitmex:ee,bitopro:es,bitpanda:eo,bitrue:el,bitso:ef,bitstamp:eg,bitteam:eb,bitvavo:eS,bl3p:eI,blockchaincom:eM,blofin:eB,btcalpha:eN,btcbox:eV,btcmarkets:eH,btcturk:eW,bybit:ej.A,cex:eY,coinbase:eX.A,coinbaseadvanced:e$,coinbaseexchange:eJ,coinbaseinternational:e2,coincatch:e3.A,coincheck:e4,coinex:e8.A,coinlist:te,coinmate:ts,coinmetro:tn,coinone:td,coinsph:tu,coinspot:tm,cryptocom:tv,currencycom:tk,defx:tT,delta:tI.A,deribit:tx.A,digifinex:tP.A,ellipx:tE,exmo:tL,fmfwio:D,gate:tR.A,gateio:tD,gemini:tF,hashkey:tH.A,hitbtc:g.A,hollaex:tW,htx:tj.A,huobi:tK,huobijp:tX,hyperliquid:t0,idex:t3,independentreserve:t4,indodax:t9,kraken:ii,krakenfutures:ia,kucoin:io.A,kucoinfutures:il,kuna:ip,latoken:iy,lbank:iw,luno:iO,lykke:ix,mercado:iA,mexc:iC.A,myokx:iE,ndax:iL,novadax:iV,oceanex:iH,okcoin:iW,okx:iB.A,onetrading:en,oxfun:iz,p2b:i$,paradex:iJ,paymium:i2,phemex:i3.A,poloniex:i4,poloniexfutures:i9,probit:si,timex:sa,tokocrypto:sh,tradeogre:sc,upbit:sp,vertex:sy,wavesexchange:sw,wazirx:sO,whitebit:sx,woo:sP.A,woofipro:sC,xt:sB.A,yobit:sN,zaif:sD,zonda:sF},r2={alpaca:sG,ascendex:sU,bequant:sj,binance:sK.A,binancecoinm:sz,binanceus:sY,binanceusdm:sX,bingx:s$,bitcoincom:sQ,bitfinex:sZ,bitfinex1:sJ,bitget:s0,bithumb:s1,bitmart:s3,bitmex:s5,bitopro:s6,bitpanda:s8,bitrue:s7,bitstamp:s9,bitvavo:re,blockchaincom:rt,blofin:ri,bybit:rs,cex:rr,coinbase:ra,coinbaseadvanced:rn,coinbaseexchange:ro,coinbaseinternational:rh,coincatch:rd,coincheck:rl,coinex:rc,coinone:ru,cryptocom:rf,currencycom:rp,defx:rm,deribit:rg,exmo:ry,gate:rv,gateio:rb,gemini:rw,hashkey:rk,hitbtc:sW,hollaex:rS,htx:rO,huobi:rT,huobijp:rI,hyperliquid:rx,idex:rP,independentreserve:rM,kraken:rA,krakenfutures:rC,kucoin:rB,kucoinfutures:rE,lbank:r_,luno:rN,mexc:rL,myokx:rD,ndax:rV,okcoin:rq,okx:rR,onetrading:s4,oxfun:rF,p2b:rH,paradex:rG,phemex:rU,poloniex:rW,poloniexfutures:rj,probit:rK,upbit:rz,vertex:rY,wazirx:rX,whitebit:r$,woo:rQ,woofipro:rZ,xt:rJ};for(let e in r2);r2.exchanges=Object.keys(r2),r2.Exchange=s.k;let r3=Object.assign({version:r0,Exchange:s.k,Precise:r.Y,exchanges:Object.keys(r1),pro:r2},r1,a,n)},7430:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},5437:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},5785:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},2696:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},2424:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},9719:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},8687:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},4069:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},9007:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},1965:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},3261:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},9122:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},8778:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},3406:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},5352:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},37:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},9555:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},1120:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},854:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},1689:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},9826:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},6867:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},1185:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var s=i(937);class r extends s.k{}let a=r},6077:(e,t,i)=>{"use strict";i.d(t,{A:()=>o,Y:()=>n});let s=BigInt(0),r=BigInt(-1),a=BigInt(10);class n{constructor(e,t){if(this.base=void 0,void 0===t){let t=0;if((e=e.toLowerCase()).indexOf("e")>-1){let i="0";[e,i]=e.split("e"),t=parseInt(i)}let i=e.indexOf(".");this.decimals=i>-1?e.length-i-1:0;let s=e.replace(".","");this.integer=BigInt(s),this.decimals=this.decimals-t}else this.integer=e,this.decimals=t}mul(e){return new n(this.integer*e.integer,this.decimals+e.decimals)}div(e,t=18){let i;let s=t-this.decimals+e.decimals;if(0===s)i=this.integer;else if(s<0){let e=a**BigInt(-s);i=this.integer/e}else{let e=a**BigInt(s);i=this.integer*e}return new n(i/e.integer,t)}add(e){if(this.decimals===e.decimals)return new n(this.integer+e.integer,this.decimals);{let[t,i]=this.decimals>e.decimals?[e,this]:[this,e],s=i.decimals-t.decimals;return new n(t.integer*a**BigInt(s)+i.integer,i.decimals)}}mod(e){let t=Math.max(-this.decimals+e.decimals,0),i=this.integer*a**BigInt(t),s=Math.max(-e.decimals+this.decimals,0);return new n(i%(e.integer*a**BigInt(s)),s+e.decimals)}sub(e){let t=new n(-e.integer,e.decimals);return this.add(t)}abs(){return new n(this.integer<0?this.integer*r:this.integer,this.decimals)}neg(){return new n(-this.integer,this.decimals)}or(e){return new n(this.integer|e.integer,this.decimals)}min(e){return this.lt(e)?this:e}max(e){return this.gt(e)?this:e}gt(e){return this.sub(e).integer>0}ge(e){return this.sub(e).integer>=0}lt(e){return e.gt(this)}le(e){return e.ge(this)}reduce(){let e;let t=this.integer.toString(),i=t.length-1;if(0===i)return"0"===t&&(this.decimals=0),this;for(e=i;e>=0&&"0"===t.charAt(e);e--);let s=i-e;if(0===s)return this;this.decimals-=s,this.integer=BigInt(t.slice(0,e+1))}equals(e){return this.reduce(),e.reduce(),this.decimals===e.decimals&&this.integer===e.integer}toString(){let e,t,i;this.reduce(),this.integer<0?(e="-",t=-this.integer):(e="",t=this.integer);let s=Array.from(t.toString(Number(a)).padStart(this.decimals,"0")),r=s.length-this.decimals;return i=0===r?"0.":this.decimals<0?"0".repeat(-this.decimals):0===this.decimals?"":".",s.splice(r,0,i),e+s.join("")}static stringMul(e,t){if(void 0!==e&&void 0!==t)return new n(e).mul(new n(t)).toString()}static stringDiv(e,t,i=18){if(void 0===e||void 0===t)return;let r=new n(t);if(r.integer!==s)return new n(e).div(r,i).toString()}static stringAdd(e,t){return void 0===e&&void 0===t?void 0:void 0===e?t:void 0===t?e:new n(e).add(new n(t)).toString()}static stringSub(e,t){if(void 0!==e&&void 0!==t)return new n(e).sub(new n(t)).toString()}static stringAbs(e){if(void 0!==e)return new n(e).abs().toString()}static stringNeg(e){if(void 0!==e)return new n(e).neg().toString()}static stringMod(e,t){if(void 0!==e&&void 0!==t)return new n(e).mod(new n(t)).toString()}static stringOr(e,t){if(void 0!==e&&void 0!==t)return new n(e).or(new n(t)).toString()}static stringEquals(e,t){if(void 0!==e&&void 0!==t)return new n(e).equals(new n(t))}static stringEq(e,t){if(void 0!==e&&void 0!==t)return new n(e).equals(new n(t))}static stringMin(e,t){if(void 0!==e&&void 0!==t)return new n(e).min(new n(t)).toString()}static stringMax(e,t){if(void 0!==e&&void 0!==t)return new n(e).max(new n(t)).toString()}static stringGt(e,t){if(void 0!==e&&void 0!==t)return new n(e).gt(new n(t))}static stringGe(e,t){if(void 0!==e&&void 0!==t)return new n(e).ge(new n(t))}static stringLt(e,t){if(void 0!==e&&void 0!==t)return new n(e).lt(new n(t))}static stringLe(e,t){if(void 0!==e&&void 0!==t)return new n(e).le(new n(t))}}let o=n},8119:(e,t,i)=>{"use strict";i.r(t),i.d(t,{AccountNotEnabled:()=>o,AccountSuspended:()=>h,AddressPending:()=>b,ArgumentsRequired:()=>d,AuthenticationError:()=>a,BadRequest:()=>l,BadResponse:()=>q,BadSymbol:()=>c,BaseError:()=>s,CancelPending:()=>H,ChecksumError:()=>D,ContractUnavailable:()=>x,DDoSProtection:()=>E,DuplicateOrderId:()=>I,ExchangeClosedByUser:()=>A,ExchangeError:()=>r,ExchangeNotAvailable:()=>N,InsufficientFunds:()=>y,InvalidAddress:()=>v,InvalidNonce:()=>R,InvalidOrder:()=>w,InvalidProxySettings:()=>M,ManualInteractionNeeded:()=>g,MarginModeAlreadySet:()=>p,MarketClosed:()=>m,NetworkError:()=>B,NoChange:()=>f,NotSupported:()=>P,NullResponse:()=>F,OnMaintenance:()=>L,OperationFailed:()=>C,OperationRejected:()=>u,OrderImmediatelyFillable:()=>O,OrderNotCached:()=>S,OrderNotFillable:()=>T,OrderNotFound:()=>k,PermissionDenied:()=>n,RateLimitExceeded:()=>_,RequestTimeout:()=>V,UnsubscribeError:()=>G,default:()=>U});class s extends Error{constructor(e){super(e),this.name="BaseError"}}class r extends s{constructor(e){super(e),this.name="ExchangeError"}}class a extends r{constructor(e){super(e),this.name="AuthenticationError"}}class n extends a{constructor(e){super(e),this.name="PermissionDenied"}}class o extends n{constructor(e){super(e),this.name="AccountNotEnabled"}}class h extends a{constructor(e){super(e),this.name="AccountSuspended"}}class d extends r{constructor(e){super(e),this.name="ArgumentsRequired"}}class l extends r{constructor(e){super(e),this.name="BadRequest"}}class c extends l{constructor(e){super(e),this.name="BadSymbol"}}class u extends r{constructor(e){super(e),this.name="OperationRejected"}}class f extends u{constructor(e){super(e),this.name="NoChange"}}class p extends f{constructor(e){super(e),this.name="MarginModeAlreadySet"}}class m extends u{constructor(e){super(e),this.name="MarketClosed"}}class g extends u{constructor(e){super(e),this.name="ManualInteractionNeeded"}}class y extends r{constructor(e){super(e),this.name="InsufficientFunds"}}class v extends r{constructor(e){super(e),this.name="InvalidAddress"}}class b extends v{constructor(e){super(e),this.name="AddressPending"}}class w extends r{constructor(e){super(e),this.name="InvalidOrder"}}class k extends w{constructor(e){super(e),this.name="OrderNotFound"}}class S extends w{constructor(e){super(e),this.name="OrderNotCached"}}class O extends w{constructor(e){super(e),this.name="OrderImmediatelyFillable"}}class T extends w{constructor(e){super(e),this.name="OrderNotFillable"}}class I extends w{constructor(e){super(e),this.name="DuplicateOrderId"}}class x extends w{constructor(e){super(e),this.name="ContractUnavailable"}}class P extends r{constructor(e){super(e),this.name="NotSupported"}}class M extends r{constructor(e){super(e),this.name="InvalidProxySettings"}}class A extends r{constructor(e){super(e),this.name="ExchangeClosedByUser"}}class C extends s{constructor(e){super(e),this.name="OperationFailed"}}class B extends C{constructor(e){super(e),this.name="NetworkError"}}class E extends B{constructor(e){super(e),this.name="DDoSProtection"}}class _ extends B{constructor(e){super(e),this.name="RateLimitExceeded"}}class N extends B{constructor(e){super(e),this.name="ExchangeNotAvailable"}}class L extends N{constructor(e){super(e),this.name="OnMaintenance"}}class R extends B{constructor(e){super(e),this.name="InvalidNonce"}}class D extends R{constructor(e){super(e),this.name="ChecksumError"}}class V extends B{constructor(e){super(e),this.name="RequestTimeout"}}class q extends C{constructor(e){super(e),this.name="BadResponse"}}class F extends q{constructor(e){super(e),this.name="NullResponse"}}class H extends C{constructor(e){super(e),this.name="CancelPending"}}class G extends s{constructor(e){super(e),this.name="UnsubscribeError"}}let U={BaseError:s,ExchangeError:r,AuthenticationError:a,PermissionDenied:n,AccountNotEnabled:o,AccountSuspended:h,ArgumentsRequired:d,BadRequest:l,BadSymbol:c,OperationRejected:u,NoChange:f,MarginModeAlreadySet:p,MarketClosed:m,ManualInteractionNeeded:g,InsufficientFunds:y,InvalidAddress:v,AddressPending:b,InvalidOrder:w,OrderNotFound:k,OrderNotCached:S,OrderImmediatelyFillable:O,OrderNotFillable:T,DuplicateOrderId:I,ContractUnavailable:x,NotSupported:P,InvalidProxySettings:M,ExchangeClosedByUser:A,OperationFailed:C,NetworkError:B,DDoSProtection:E,RateLimitExceeded:_,ExchangeNotAvailable:N,OnMaintenance:L,InvalidNonce:R,ChecksumError:D,RequestTimeout:V,BadResponse:q,NullResponse:F,CancelPending:H,UnsubscribeError:G}},7411:(e,t,i)=>{"use strict";i.r(t),i.d(t,{DECIMAL_PLACES:()=>v.fv,NO_PADDING:()=>v.w1,PAD_WITH_ZERO:()=>v.ex,ROUND:()=>v.D_,ROUND_DOWN:()=>v._g,ROUND_UP:()=>v.Tz,SIGNIFICANT_DIGITS:()=>v.v,TICK_SIZE:()=>v.kb,TRUNCATE:()=>v.R3,Throttler:()=>S,TimedOut:()=>k.GA,aggregate:()=>A,arrayConcat:()=>l.ax,asFloat:()=>y.Pf,asInteger:()=>y.JU,axolotl:()=>w.Sw,base16ToBinary:()=>b.FF,base58ToBinary:()=>b.Ry,base64ToBinary:()=>b.cg,base64ToString:()=>b.QM,binaryConcat:()=>b.qo,binaryConcatArray:()=>b.Vw,binaryToBase16:()=>b.t7,binaryToBase58:()=>b.bj,binaryToBase64:()=>b.sQ,binaryToString:()=>b.kn,capitalize:()=>u,clone:()=>l.o8,crc32:()=>w.QR,decimalToPrecision:()=>v.fq,decode:()=>b.D4,deepExtend:()=>l.zw,ecdsa:()=>w.h1,eddsa:()=>w.q4,encode:()=>b.lF,extend:()=>l.X$,extractParams:()=>x,filterBy:()=>l.WP,flatten:()=>l.Bq,groupBy:()=>l.$z,hasProps:()=>y.dl,hash:()=>w.tW,hmac:()=>w.w8,implodeParams:()=>P,inArray:()=>l.RV,index:()=>l.Pe,indexBy:()=>l.wQ,isArray:()=>y.cy,isBrowser:()=>r,isDeno:()=>h,isDictionary:()=>y.Hf,isElectron:()=>a,isEmpty:()=>l.Im,isInteger:()=>y.Fq,isJsonEncodedObject:()=>b.mC,isNode:()=>d,isNumber:()=>y.Et,isObject:()=>y.Gv,isString:()=>y.Kg,isStringCoercible:()=>y.KL,isWebWorker:()=>n,isWindows:()=>o,iso8601:()=>k.LC,json:()=>b.Pq,keys:()=>l.HP,keysort:()=>l.CA,mdy:()=>k.rE,merge:()=>l.h1,microseconds:()=>k.EZ,milliseconds:()=>k.Rz,now:()=>k.tB,numberToBE:()=>b.qE,numberToLE:()=>b.aN,numberToString:()=>v.um,omit:()=>l.cJ,omitZero:()=>v.Ye,ordered:()=>l.Sj,packb:()=>b.Am,parse8601:()=>k.Dj,parseDate:()=>k._U,parseTimeframe:()=>T,pluck:()=>l.Ey,precisionConstants:()=>v.S2,precisionFromString:()=>v.Iu,prop:()=>y._w,rawencode:()=>b.rO,rfc2616:()=>k.D9,roundTimeframe:()=>I,safeFloat:()=>y.w,safeFloat2:()=>y.Cw,safeFloatN:()=>y.Q7,safeInteger:()=>y.Y2,safeInteger2:()=>y.mU,safeIntegerN:()=>y.At,safeIntegerProduct:()=>y.lu,safeIntegerProduct2:()=>y.J0,safeIntegerProductN:()=>y.hO,safeString:()=>y.nr,safeString2:()=>y.d0,safeStringLower:()=>y.gw,safeStringLower2:()=>y.uS,safeStringLowerN:()=>y.I9,safeStringN:()=>y.Rc,safeStringUpper:()=>y.RH,safeStringUpper2:()=>y.F7,safeStringUpperN:()=>y.fu,safeTimestamp:()=>y.q0,safeTimestamp2:()=>y.ww,safeTimestampN:()=>y.Y_,safeValue:()=>y.pI,safeValue2:()=>y.Dj,safeValueN:()=>y.DR,seconds:()=>k.YA,selfIsDefined:()=>C,setTimeout_safe:()=>k.k4,sleep:()=>k.yy,sortBy:()=>l.Ul,sortBy2:()=>l.sy,stringToBase64:()=>b.q3,stringToBinary:()=>b.wN,strip:()=>f,sum:()=>l.cz,timeout:()=>k.wR,toArray:()=>l.$r,truncate:()=>v.xv,truncate_to_string:()=>v.NZ,unCamelCase:()=>c,unique:()=>l.Am,urlencode:()=>b.mu,urlencodeBase64:()=>b.LI,urlencodeNested:()=>b.Dy,urlencodeWithArrayRepeat:()=>b.ev,uuid:()=>p,uuid16:()=>m,uuid22:()=>g,uuidv1:()=>k.nm,values:()=>l.zu,vwap:()=>M,ymd:()=>k.Th,ymdhms:()=>k.RR,yymmdd:()=>k.x_,yyyymmdd:()=>k.Rn});var s=i(2818);let r="undefined"!=typeof window,a=void 0!==s&&void 0!==s.versions&&void 0!==s.versions.electron,n="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,o=void 0!==s&&"win32"===s.platform,h="undefined"!=typeof Deno,d=!(r||n||h);var l=i(575);let c=e=>{let t={fetchOHLCVWs:"fetch_ohlcv_ws"};return t[e]?t[e]:e.match(/[A-Z]/)?e.replace(/[a-z0-9][A-Z]/g,e=>e[0]+"_"+e[1]).replace(/[A-Z0-9][A-Z0-9][a-z][^$]/g,e=>e[0]+"_"+e[1]+e[2]+e[3]).replace(/[a-z][0-9]$/g,e=>e[0]+"_"+e[1]).toLowerCase():e},u=e=>e.length?e.charAt(0).toUpperCase()+e.slice(1):e,f=e=>e.replace(/^\s+|\s+$/g,""),p=e=>e?(e^16*Math.random()>>e/4).toString(16):"10000000-1000-4000-8000-100000000000".replace(/[018]/g,p),m=e=>e?(e^16*Math.random()>>e/4).toString(16):"1000001004008000".replace(/[018]/g,m),g=e=>e?(e^16*Math.random()>>e/4).toString(16):"1000000010004000800000".replace(/[018]/g,g);var y=i(8486),v=i(3675),b=i(7419),w=i(8715),k=i(1187);class S{constructor(e){this.config={refillRate:1,delay:.001,capacity:1,maxCapacity:2e3,tokens:0,cost:1},Object.assign(this.config,e),this.queue=[],this.running=!1}async loop(){let e=(0,k.tB)();for(;this.running;){let{resolver:t,cost:i}=this.queue[0];if(this.config.tokens>=0)this.config.tokens-=i,t(),this.queue.shift(),await Promise.resolve(),0===this.queue.length&&(this.running=!1);else{await (0,k.yy)(1e3*this.config.delay);let t=(0,k.tB)(),i=t-e;e=t;let s=this.config.tokens+this.config.refillRate*i;this.config.tokens=Math.min(s,this.config.capacity)}}}throttle(e){let t;let i=new Promise((e,i)=>{t=e});if(this.queue.length>this.config.maxCapacity)throw Error("throttle queue is over maxCapacity ("+this.config.maxCapacity.toString()+"), see https://github.com/ccxt/ccxt/issues/11645#issuecomment-1195695526");return e=void 0===e?this.config.cost:e,this.queue.push({resolver:t,cost:e}),this.running||(this.running=!0,this.loop()),i}}var O=i(8119);let T=e=>{let t;let i=(0,y.Pf)(e.slice(0,-1)),s=e.slice(-1);if("y"===s)t=31536e3;else if("M"===s)t=2592e3;else if("w"===s)t=604800;else if("d"===s)t=86400;else if("h"===s)t=3600;else if("m"===s)t=60;else if("s"===s)t=1;else throw new O.NotSupported("timeframe unit "+s+" is not supported");return i*t},I=(e,t,i=v._g)=>{let s=1e3*T(e);return t-t%s+(i===v.Tz?s:0)},x=e=>{let t=/{([\w-]+)}/g,i=[],s=t.exec(e);for(;s;)i.push(s[1]),s=t.exec(e);return i},P=(e,t)=>{if(!Array.isArray(t)){let i=Object.keys(t);for(let s=0;s<i.length;s++){let r=i[s];Array.isArray(t[r])||(e=e.replace("{"+r+"}",t[r]))}}return e};function M(e,t){return void 0!==e&&void 0!==t&&e>0?t/e:void 0}function A(e){let t={};for(let i=0;i<e.length;i++){let[s,r]=e[i];r>0&&(t[s]=(t[s]||0)+r)}return Object.keys(t).map(e=>[parseFloat(e),parseFloat(t[e])])}function C(){let e=!1;try{e=void 0!==self}catch(t){e=!1}return e}},8715:(e,t,i)=>{"use strict";i.d(t,{QR:()=>y,Sw:()=>m,h1:()=>p,q4:()=>g,tW:()=>u,w8:()=>f});var s=i(9360),r=i(6744),a=i(3624),n=i(984),o=i(2389),h=i(1750),d=i(5443);let l={binary:e=>e,hex:r.xn.encode,base64:r.K3.encode},c={"1.3.132.0.10":o.bI,"1.2.840.10045.3.1.7":h.Qj},u=(e,t,i="hex")=>{let s=t(e);return l[i](s)},f=(e,t,i,r="hex")=>{let a=(0,s.w)(i,t,e);return l[r](a)};function p(e,t,i,s=null,r=!1){if(s&&(e=u(e,s,"hex")),"string"==typeof t&&t.length>64){if(t.startsWith("-----BEGIN EC PRIVATE KEY-----")){let e=a.o.unarmor(t),s=n.Ge.decode(e);if(4===s.sub.length){if(s.sub[2].sub,s.sub[2].sub.length>0){let e=s.sub[2].sub[0].content(void 0);if(void 0===c[e])throw Error("Unsupported curve");i=c[e]}t=s.sub[1].getHexStringValue()}else throw Error("Unsupported key format")}else throw Error("Unsupported key format")}let o=i.sign(e,t,{lowS:!0}),h=(BigInt(1)<<BigInt(8)*BigInt(31))-BigInt(1),l=i.CURVE.n/BigInt(2),f=0;for(;r&&(o.r>l||o.r<=h||o.s<=h);)o=i.sign(e,t,{lowS:!0,extraEntropy:(0,d.z)(BigInt(f),32)}),f+=1;return{r:o.r.toString(16),s:o.s.toString(16),v:o.recovery}}function m(e,t,i){let s=i.signModified(e,t);return r.tw.encode(s)}function g(e,t,i){let s;32===t.length?s=t:"string"==typeof t&&(s=new Uint8Array(a.o.unarmor(t).slice(16)));let n=i.sign(e,s);return r.K3.encode(n)}function y(e,t=!1){void 0===y.table&&(y.table="00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F 63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC 51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E 7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D 806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA 11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F 30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D".split(" ").map(e=>parseInt(e,16)));let i=-1;for(let t=0;t<e.length;t++)i=i>>>8^y.table[(i^e.charCodeAt(t))&255];let s=(-1^i)>>>0;return t&&s>=0x80000000?s-0x100000000:s}},7419:(e,t,i)=>{"use strict";i.d(t,{FF:()=>p,Ry:()=>g,cg:()=>u,QM:()=>c,qo:()=>v,Vw:()=>b,t7:()=>m,bj:()=>y,sQ:()=>f,kn:()=>h,D4:()=>I,lF:()=>T,mC:()=>o,Pq:()=>n,qE:()=>M,aN:()=>P,Am:()=>A,rO:()=>O,q3:()=>l,wN:()=>d,mu:()=>w,LI:()=>x,Dy:()=>k,ev:()=>S});var s=i(6744),r=i(5443),a=i(5743);let n=(e,t)=>JSON.stringify(e),o=e=>"string"==typeof e&&e.length>=2&&("{"===e[0]||"["===e[0]),h=s.As.encode,d=s.As.decode,l=e=>s.K3.encode(s.As.decode(e)),c=e=>s.As.encode(s.K3.decode(e)),u=s.K3.decode,f=s.K3.encode,p=s.xn.decode,m=s.xn.encode,g=s.tw.decode,y=s.tw.encode,v=r.Id,b=e=>(0,r.Id)(...e),w=e=>a.stringify(e),k=e=>a.stringify(e),S=e=>a.stringify(e,{arrayFormat:"repeat"}),O=e=>a.stringify(e,{encode:!1}),T=s.As.decode,I=s.As.encode,x=e=>("string"==typeof e?l(e):f(e)).replace(/[=]+$/,"").replace(/\+/g,"-").replace(/\//g,"_"),P=(e,t)=>(0,r.z)(BigInt(e),t),M=(e,t)=>(0,r.lq)(BigInt(e),t);function A(e){return function(e,t){let i,s;let r=new Uint8Array(128),a=0;return n(e),r.subarray(0,a);function n(e,t){switch(typeof e){case"undefined":h(192);break;case"boolean":h(e?195:194);break;case"number":!function(e){if(isFinite(e)&&Math.floor(e)===e){if(e>=0&&e<=127)h(e);else if(e<0&&e>=-32)h(e);else if(e>0&&e<=255)d([204,e]);else if(e>=-128&&e<=127)d([208,e]);else if(e>0&&e<=65535)d([205,e>>>8,e]);else if(e>=-32768&&e<=32767)d([209,e>>>8,e]);else if(e>0&&e<=0xffffffff)d([206,e>>>24,e>>>16,e>>>8,e]);else if(e>=-0x80000000&&e<=0x7fffffff)d([210,e>>>24,e>>>16,e>>>8,e]);else if(e>0&&e<=0xffffffffffffffff){let t=e/0x100000000,i=e%0x100000000;d([207,t>>>24,t>>>16,t>>>8,t,i>>>24,i>>>16,i>>>8,i])}else e>=-0x8000000000000000&&e<=0x8000000000000000?(h(211),l(e)):e<0?d([211,128,0,0,0,0,0,0,0]):d([207,255,255,255,255,255,255,255,255])}else s||(s=new DataView(i=new ArrayBuffer(8))),s.setFloat64(0,e),h(203),d(new Uint8Array(i))}(e);break;case"string":let r,a;(a=(r=function(e){let t=!0,i=e.length;for(let s=0;s<i;s++)if(e.charCodeAt(s)>127){t=!1;break}let s=0,r=new Uint8Array(e.length*(t?1:4));for(let t=0;t!==i;t++){let a=e.charCodeAt(t);if(a<128){r[s++]=a;continue}if(a<2048)r[s++]=a>>6|192;else{if(a>55295&&a<56320){if(++t>=i)throw Error("UTF-8 encode: incomplete surrogate pair");let n=e.charCodeAt(t);if(n<56320||n>57343)throw Error("UTF-8 encode: second surrogate character 0x"+n.toString(16)+" at index "+t+" out of range");a=65536+((1023&a)<<10)+(1023&n),r[s++]=a>>18|240,r[s++]=a>>12&63|128}else r[s++]=a>>12|224;r[s++]=a>>6&63|128}r[s++]=63&a|128}return t?r:r.subarray(0,s)}(e)).length)<=31?h(160+a):a<=255?d([217,a]):a<=65535?d([218,a>>>8,a]):d([219,a>>>24,a>>>16,a>>>8,a]),d(r);break;case"object":let c;null===e?h(192):e instanceof Date?function(e){let t=e.getTime()/1e3;if(0===e.getMilliseconds()&&t>=0&&t<0x100000000)d([214,255,t>>>24,t>>>16,t>>>8,t]);else if(t>=0&&t<0x400000000){let i=1e6*e.getMilliseconds();d([215,255,i>>>22,i>>>14,i>>>6,i<<2>>>0|t/0x100000000,t>>>24,t>>>16,t>>>8,t])}else{let i=1e6*e.getMilliseconds();d([199,12,255,i>>>24,i>>>16,i>>>8,i]),l(t)}}(e):Array.isArray(e)?o(e):e instanceof Uint8Array||e instanceof Uint8ClampedArray?((c=e.length)<=15?d([196,c]):c<=65535?d([197,c>>>8,c]):d([198,c>>>24,c>>>16,c>>>8,c]),d(e)):e instanceof Int8Array||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array?o(e):function(e){let t=0;for(let i in e)void 0!==e[i]&&t++;for(let i in t<=15?h(128+t):t<=65535?d([222,t>>>8,t]):d([223,t>>>24,t>>>16,t>>>8,t]),e){let t=e[i];void 0!==t&&(n(i),n(t))}}(e);break;default:throw Error("Invalid argument type: The type '"+typeof e+"' cannot be serialized.")}}function o(e){let t=e.length;t<=15?h(144+t):t<=65535?d([220,t>>>8,t]):d([221,t>>>24,t>>>16,t>>>8,t]);for(let i=0;i<t;i++)n(e[i])}function h(e){if(r.length<a+1){let e=2*r.length;for(;e<a+1;)e*=2;let t=new Uint8Array(e);t.set(r),r=t}r[a]=e,a++}function d(e){if(r.length<a+e.length){let t=2*r.length;for(;t<a+e.length;)t*=2;let i=new Uint8Array(t);i.set(r),r=i}r.set(e,a),a+=e.length}function l(e){let t,i;e>=0?(t=e/0x100000000,i=e%0x100000000):(t=~(t=Math.abs(++e)/0x100000000),i=~(i=Math.abs(e)%0x100000000)),d([t>>>24,t>>>16,t>>>8,t,i>>>24,i>>>16,i>>>8,i])}}(e)}},575:(e,t,i)=>{"use strict";i.d(t,{$r:()=>f,$z:()=>g,Am:()=>l,Bq:()=>k,CA:()=>m,Ey:()=>S,HP:()=>r,Im:()=>p,Pe:()=>n,RV:()=>u,Sj:()=>d,Ul:()=>b,WP:()=>v,X$:()=>o,ax:()=>c,cJ:()=>O,cz:()=>T,h1:()=>x,o8:()=>h,sy:()=>w,wQ:()=>y,zu:()=>a,zw:()=>I});var s=i(8486);let r=Object.keys,a=e=>(0,s.cy)(e)?e:Object.values(e),n=e=>new Set(a(e)),o=(...e)=>Object.assign({},...e),h=e=>(0,s.cy)(e)?Array.from(e):o(e),d=e=>e,l=e=>Array.from(n(e)),c=(e,t)=>e.concat(t),u=(e,t)=>t.includes(e),f=e=>Object.values(e),p=e=>!e||(Array.isArray(e)?e:Object.keys(e)).length<1,m=(e,t={})=>{for(let i of r(e).sort())t[i]=e[i];return t},g=(e,t,i={})=>{for(let s of a(e))if(t in s){let e=s[t];i[e]=i[e]||[],i[e].push(s)}return i},y=(e,t,i={})=>{for(let s of a(e))t in s&&(i[s[t]]=s);return i},v=(e,t,i,s=[])=>{for(let r of a(e))r[t]===i&&s.push(r);return s},b=(e,t,i=!1,s=0,r=i?-1:1)=>e.sort((e,i)=>{let a=t in e?e[t]:s,n=t in i?i[t]:s;return a<n?-r:a>n?r:0}),w=(e,t,i,s=!1,r=s?-1:1)=>e.sort((e,s)=>e[t]<s[t]?-r:e[t]>s[t]?r:e[i]<s[i]?-r:e[i]>s[i]?r:0),k=function e(t,i=[]){for(let r of t)(0,s.cy)(r)?e(r,i):i.push(r);return i},S=(e,t)=>a(e).filter(e=>t in e).map(e=>e[t]),O=(e,...t)=>{if(!Array.isArray(e)){let i=h(e);for(let e of t)if((0,s.cy)(e))for(let t of e)delete i[t];else delete i[e];return i}return e},T=(...e)=>{let t=e.filter(s.Et);return t.length>0?t.reduce((e,t)=>e+t,0):void 0},I=function e(...t){let i;for(let r of t)if((0,s.Hf)(r))for(let t in(0,s.Hf)(i)||(i={}),r)i[t]=e(i[t],r[t]);else i=r;return i},x=(e,...t)=>{let i={},s=Object.assign({},...t),r=Object.keys(s);for(let t=0;t<r.length;t++){let a=r[t];void 0===e[a]&&(i[a]=s[a])}return Object.assign({},e,i)}},3675:(e,t,i)=>{"use strict";i.d(t,{D_:()=>r,Iu:()=>y,NZ:()=>m,R3:()=>s,S2:()=>u,Tz:()=>a,Ye:()=>w,_g:()=>n,ex:()=>c,fq:()=>v,fv:()=>o,kb:()=>d,um:()=>f,v:()=>h,w1:()=>l,xv:()=>g});let s=0,r=1,a=2,n=3,o=2,h=3,d=4,l=5,c=6,u={ROUND:1,TRUNCATE:0,ROUND_UP:2,ROUND_DOWN:3,DECIMAL_PLACES:o,SIGNIFICANT_DIGITS:3,TICK_SIZE:4,NO_PADDING:l,PAD_WITH_ZERO:6};function f(e){if(void 0===e)return;if("number"!=typeof e)return e.toString();let t=e.toString();if(1>Math.abs(e)){let i=t.split("e-"),s=i[0].replace(".",""),r=parseInt(i[1]),a="-"===t[0];if(r)return e=(a?"-":"")+"0."+Array(r).join("0")+s.substring(a)}else{let e=t.split("e");if(e[1]){let t=parseInt(e[1]),i=e[0].split("."),s="";return i[1]&&(t-=i[1].length,s=i[1]),i[0]+s+Array(t+1).join("0")}}return t}let p=[],m=(e,t=0)=>{if(e=f(e),t>0){let i=p[t]||(p[t]=RegExp("([-]*\\d+\\.\\d{"+t+"})(\\d)")),[,s]=e.toString().match(i)||[null,e];return s.toString()}return parseInt(e).toString()},g=(e,t=0)=>parseFloat(m(e,t));function y(e){if(e.indexOf("e")>-1||e.indexOf("E")>-1)return -1*parseInt(e.replace(/\d\.?\d*[eE]/,""));let t=e.replace(/0+$/g,"").split(".");return t.length>1?t[1].length:0}let v=(e,t,i,s=o,r=l)=>b(e,t,i,s,r),b=(e,t,i,a=o,n=l)=>{if(a===d&&("string"==typeof i&&(i=parseFloat(i)),i<=0))throw Error("TICK_SIZE cant be used with negative or zero numPrecisionDigits");if(i<0){let o=Math.pow(10,-i);if(t===r)return(o*b(e/o,t,0,a,n)).toString();if(t===s)return(e-e%o).toString()}if(a===d){let a=y(b(i,r,22,o,l)),h=e%i;return h=Number(b(h,r,8,o,l)),0!==y(b(h/i,r,Math.max(a,8),o,l))&&(t===r?e>0?h>=i/2?e=e-h+i:e-=h:e=h>=i/2?Number(e)-h:Number(e)-h-i:t===s&&(e-=h)),b(e,r,a,o,n)}let c=f(e),u="-"===c[0],p=u?1:0,m=c.length;for(var g=0;g<m&&"."!==c[g];g++);let v=new Uint8Array(m-p+(g<c.length?0:1));v[0]=48;let w=v.length,k=-1,S=-1;for(var O=1,T=p;T<m;T++,O++){let e=c.charCodeAt(T);if(46===e)w=O--;else if(e<48||e>57)throw Error(`${c}: invalid number (contains an illegal character '${c[O-1]}')`);else v[O]=e,48!==e&&k<0&&(k=O)}k<0&&(k=1);let I=a===o?w:k,x=I+i;S=-1;let P=!0,M=u;for(let e=v.length-1,s=0;e>=0;e--){let a=v[e];0!==e?(a+=s,e>=I+i&&(a=t===r&&a>=53&&!(53===a&&s)?58:48),a>57?(a=48,s=1):s=0):s&&(a=49),v[e]=a,48!==a&&(P=!1,k=e,S=S<0?e+1:S)}a===h&&(x=(I=k)+i),P&&(M=!1);let A=k>=w||P?w-1:k,C=S<w?w:S,B=M?1:0,E=B+(w-A),_=Math.max(C-w,0),N=C-A,L=Math.max((n===l?N:x-A)-N,0),R=E+1+_,D=R+L,V=_+L===0,q=new Uint8Array(E+(V?0:1)+_+L);for(M&&(q[0]=45),O=B,T=A;O<E;O++,T++)q[O]=v[T];for(V||(q[E]=46),O=E+1,T=w;O<R;O++,T++)q[O]=v[T];for(O=R;O<D;O++)q[O]=48;return String.fromCharCode(...q)};function w(e){try{if(void 0===e||""===e||0===parseFloat(e))return;return e}catch(t){return e}}},2982:(e,t,i)=>{"use strict";let s,r,a,n;i.d(t,{a:()=>j,n:()=>W});var o=i(6744);function h(e){return o.K3.encode(o.xn.decode(e))}function d(e){return o.xn.encode(o.K3.decode(e))}let l={decode(e){let t;if(void 0===s){let e="0123456789ABCDEF",i=" \f\n\r	\xa0\u2028\u2029";for(t=0,s={};t<16;++t)s[e.charAt(t)]=t;for(t=10,e=e.toLowerCase();t<16;++t)s[e.charAt(t)]=t;for(t=0;t<i.length;++t)s[i.charAt(t)]=-1}let i=[],r=0,a=0;for(t=0;t<e.length;++t){let n=e.charAt(t);if("="==n)break;if(-1!=(n=s[n])){if(void 0===n)throw Error("Illegal character at offset "+t);r|=n,++a>=2?(i[i.length]=r,r=0,a=0):r<<=4}}if(a)throw Error("Hex encoding incomplete: 4 bits missing");return i}};var c=i(3624),u=i(984);function f(e){return"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e)}function p(e,t){return e&t}function m(e,t){return e|t}function g(e,t){return e^t}function y(e,t){return e&~t}let v=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997],b=0x4000000/v[v.length-1];class w{constructor(e,t,i){null!=e&&("number"==typeof e?this.fromNumber(e,t,i):null==t&&"string"!=typeof e?this.fromString(e,256):this.fromString(e,t))}toString(e){let t,i;if(this.s<0)return"-"+this.negate().toString(e);if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)return this.toRadix(e);t=2}let s=(1<<t)-1,r=!1,a="",n=this.t,o=this.DB-n*this.DB%t;if(n-- >0)for(o<this.DB&&(i=this[n]>>o)>0&&(r=!0,a=f(i));n>=0;)o<t?i=(this[n]&(1<<o)-1)<<t-o|this[--n]>>(o+=this.DB-t):(i=this[n]>>(o-=t)&s,o<=0&&(o+=this.DB,--n)),i>0&&(r=!0),r&&(a+=f(i));return r?a:"0"}negate(){let e=I();return w.ZERO.subTo(this,e),e}abs(){return this.s<0?this.negate():this}compareTo(e){let t=this.s-e.s;if(0!=t)return t;let i=this.t;if(0!=(t=i-e.t))return this.s<0?-t:t;for(;--i>=0;)if(0!=(t=this[i]-e[i]))return t;return 0}bitLength(){return this.t<=0?0:this.DB*(this.t-1)+B(this[this.t-1]^this.s&this.DM)}mod(e){let t=I();return this.abs().divRemTo(e,null,t),this.s<0&&t.compareTo(w.ZERO)>0&&e.subTo(t,t),t}modPowInt(e,t){let i;return i=e<256||t.isEven()?new S(t):new O(t),this.exp(e,i)}clone(){let e=I();return this.copyTo(e),e}intValue(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0==this.t)return -1}else if(1==this.t)return this[0];else if(0==this.t)return 0;return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}byteValue(){return 0==this.t?this.s:this[0]<<24>>24}shortValue(){return 0==this.t?this.s:this[0]<<16>>16}signum(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1}toByteArray(){let e,t=this.t,i=[];i[0]=this.s;let s=this.DB-t*this.DB%8,r=0;if(t-- >0)for(s<this.DB&&(e=this[t]>>s)!=(this.s&this.DM)>>s&&(i[r++]=e|this.s<<this.DB-s);t>=0;)s<8?e=(this[t]&(1<<s)-1)<<8-s|this[--t]>>(s+=this.DB-8):(e=this[t]>>(s-=8)&255,s<=0&&(s+=this.DB,--t)),(128&e)!=0&&(e|=-256),0==r&&(128&this.s)!=(128&e)&&++r,(r>0||e!=this.s)&&(i[r++]=e);return i}equals(e){return 0==this.compareTo(e)}min(e){return 0>this.compareTo(e)?this:e}max(e){return this.compareTo(e)>0?this:e}and(e){let t=I();return this.bitwiseTo(e,p,t),t}or(e){let t=I();return this.bitwiseTo(e,m,t),t}xor(e){let t=I();return this.bitwiseTo(e,g,t),t}andNot(e){let t=I();return this.bitwiseTo(e,y,t),t}not(){let e=I();for(let t=0;t<this.t;++t)e[t]=this.DM&~this[t];return e.t=this.t,e.s=~this.s,e}shiftLeft(e){let t=I();return e<0?this.rShiftTo(-e,t):this.lShiftTo(e,t),t}shiftRight(e){let t=I();return e<0?this.lShiftTo(-e,t):this.rShiftTo(e,t),t}getLowestSetBit(){for(let e=0;e<this.t;++e)if(0!=this[e])return e*this.DB+function(e){if(0==e)return -1;let t=0;return(65535&e)==0&&(e>>=16,t+=16),(255&e)==0&&(e>>=8,t+=8),(15&e)==0&&(e>>=4,t+=4),(3&e)==0&&(e>>=2,t+=2),(1&e)==0&&++t,t}(this[e]);return this.s<0?this.t*this.DB:-1}bitCount(){let e=0,t=this.s&this.DM;for(let i=0;i<this.t;++i)e+=function(e){let t=0;for(;0!=e;)e&=e-1,++t;return t}(this[i]^t);return e}testBit(e){let t=Math.floor(e/this.DB);return t>=this.t?0!=this.s:(this[t]&1<<e%this.DB)!=0}setBit(e){return this.changeBit(e,m)}clearBit(e){return this.changeBit(e,y)}flipBit(e){return this.changeBit(e,g)}add(e){let t=I();return this.addTo(e,t),t}subtract(e){let t=I();return this.subTo(e,t),t}multiply(e){let t=I();return this.multiplyTo(e,t),t}divide(e){let t=I();return this.divRemTo(e,t,null),t}remainder(e){let t=I();return this.divRemTo(e,null,t),t}divideAndRemainder(e){let t=I(),i=I();return this.divRemTo(e,t,i),[t,i]}modPow(e,t){let i,s,r,a,n=e.bitLength(),o=C(1);if(n<=0)return o;i=n<18?1:n<48?3:n<144?4:n<768?5:6,s=n<8?new S(t):t.isEven()?new T(t):new O(t);let h=[],d=3,l=i-1,c=(1<<i)-1;if(h[1]=s.convert(this),i>1){let e=I();for(s.sqrTo(h[1],e);d<=c;)h[d]=I(),s.mulTo(e,h[d-2],h[d]),d+=2}let u=e.t-1,f=!0,p=I();for(n=B(e[u])-1;u>=0;){for(n>=l?r=e[u]>>n-l&c:(r=(e[u]&(1<<n+1)-1)<<l-n,u>0&&(r|=e[u-1]>>this.DB+n-l)),d=i;(1&r)==0;)r>>=1,--d;if((n-=d)<0&&(n+=this.DB,--u),f)h[r].copyTo(o),f=!1;else{for(;d>1;)s.sqrTo(o,p),s.sqrTo(p,o),d-=2;d>0?s.sqrTo(o,p):(a=o,o=p,p=a),s.mulTo(p,h[r],o)}for(;u>=0&&(e[u]&1<<n)==0;)s.sqrTo(o,p),a=o,o=p,p=a,--n<0&&(n=this.DB-1,--u)}return s.revert(o)}modInverse(e){let t=e.isEven();if(this.isEven()&&t||0==e.signum())return w.ZERO;let i=e.clone(),s=this.clone(),r=C(1),a=C(0),n=C(0),o=C(1);for(;0!=i.signum();){for(;i.isEven();)i.rShiftTo(1,i),t?(r.isEven()&&a.isEven()||(r.addTo(this,r),a.subTo(e,a)),r.rShiftTo(1,r)):a.isEven()||a.subTo(e,a),a.rShiftTo(1,a);for(;s.isEven();)s.rShiftTo(1,s),t?(n.isEven()&&o.isEven()||(n.addTo(this,n),o.subTo(e,o)),n.rShiftTo(1,n)):o.isEven()||o.subTo(e,o),o.rShiftTo(1,o);i.compareTo(s)>=0?(i.subTo(s,i),t&&r.subTo(n,r),a.subTo(o,a)):(s.subTo(i,s),t&&n.subTo(r,n),o.subTo(a,o))}return 0!=s.compareTo(w.ONE)?w.ZERO:o.compareTo(e)>=0?o.subtract(e):0>o.signum()&&(o.addTo(e,o),0>o.signum())?o.add(e):o}pow(e){return this.exp(e,new k)}gcd(e){let t=this.s<0?this.negate():this.clone(),i=e.s<0?e.negate():e.clone();if(0>t.compareTo(i)){let e=t;t=i,i=e}let s=t.getLowestSetBit(),r=i.getLowestSetBit();if(r<0)return t;for(s<r&&(r=s),r>0&&(t.rShiftTo(r,t),i.rShiftTo(r,i));t.signum()>0;)(s=t.getLowestSetBit())>0&&t.rShiftTo(s,t),(s=i.getLowestSetBit())>0&&i.rShiftTo(s,i),t.compareTo(i)>=0?(t.subTo(i,t),t.rShiftTo(1,t)):(i.subTo(t,i),i.rShiftTo(1,i));return r>0&&i.lShiftTo(r,i),i}isProbablePrime(e){let t;let i=this.abs();if(1==i.t&&i[0]<=v[v.length-1]){for(t=0;t<v.length;++t)if(i[0]==v[t])return!0;return!1}if(i.isEven())return!1;for(t=1;t<v.length;){let e=v[t],s=t+1;for(;s<v.length&&e<b;)e*=v[s++];for(e=i.modInt(e);t<s;)if(e%v[t++]==0)return!1}return i.millerRabin(e)}copyTo(e){for(let t=this.t-1;t>=0;--t)e[t]=this[t];e.t=this.t,e.s=this.s}fromInt(e){this.t=1,this.s=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+this.DV:this.t=0}fromString(e,t){let i;if(16==t)i=4;else if(8==t)i=3;else if(256==t)i=8;else if(2==t)i=1;else if(32==t)i=5;else if(4==t)i=2;else{this.fromRadix(e,t);return}this.t=0,this.s=0;let s=e.length,r=!1,a=0;for(;--s>=0;){let t=8==i?255&+e[s]:A(e,s);if(t<0){"-"==e.charAt(s)&&(r=!0);continue}r=!1,0==a?this[this.t++]=t:a+i>this.DB?(this[this.t-1]|=(t&(1<<this.DB-a)-1)<<a,this[this.t++]=t>>this.DB-a):this[this.t-1]|=t<<a,(a+=i)>=this.DB&&(a-=this.DB)}8==i&&(128&+e[0])!=0&&(this.s=-1,a>0&&(this[this.t-1]|=(1<<this.DB-a)-1<<a)),this.clamp(),r&&w.ZERO.subTo(this,this)}clamp(){let e=this.s&this.DM;for(;this.t>0&&this[this.t-1]==e;)--this.t}dlShiftTo(e,t){let i;for(i=this.t-1;i>=0;--i)t[i+e]=this[i];for(i=e-1;i>=0;--i)t[i]=0;t.t=this.t+e,t.s=this.s}drShiftTo(e,t){for(let i=e;i<this.t;++i)t[i-e]=this[i];t.t=Math.max(this.t-e,0),t.s=this.s}lShiftTo(e,t){let i=e%this.DB,s=this.DB-i,r=(1<<s)-1,a=Math.floor(e/this.DB),n=this.s<<i&this.DM;for(let e=this.t-1;e>=0;--e)t[e+a+1]=this[e]>>s|n,n=(this[e]&r)<<i;for(let e=a-1;e>=0;--e)t[e]=0;t[a]=n,t.t=this.t+a+1,t.s=this.s,t.clamp()}rShiftTo(e,t){t.s=this.s;let i=Math.floor(e/this.DB);if(i>=this.t){t.t=0;return}let s=e%this.DB,r=this.DB-s,a=(1<<s)-1;t[0]=this[i]>>s;for(let e=i+1;e<this.t;++e)t[e-i-1]|=(this[e]&a)<<r,t[e-i]=this[e]>>s;s>0&&(t[this.t-i-1]|=(this.s&a)<<r),t.t=this.t-i,t.clamp()}subTo(e,t){let i=0,s=0,r=Math.min(e.t,this.t);for(;i<r;)s+=this[i]-e[i],t[i++]=s&this.DM,s>>=this.DB;if(e.t<this.t){for(s-=e.s;i<this.t;)s+=this[i],t[i++]=s&this.DM,s>>=this.DB;s+=this.s}else{for(s+=this.s;i<e.t;)s-=e[i],t[i++]=s&this.DM,s>>=this.DB;s-=e.s}t.s=s<0?-1:0,s<-1?t[i++]=this.DV+s:s>0&&(t[i++]=s),t.t=i,t.clamp()}multiplyTo(e,t){let i=this.abs(),s=e.abs(),r=i.t;for(t.t=r+s.t;--r>=0;)t[r]=0;for(r=0;r<s.t;++r)t[r+i.t]=i.am(0,s[r],t,r,0,i.t);t.s=0,t.clamp(),this.s!=e.s&&w.ZERO.subTo(t,t)}squareTo(e){let t=this.abs(),i=e.t=2*t.t;for(;--i>=0;)e[i]=0;for(i=0;i<t.t-1;++i){let s=t.am(i,t[i],e,2*i,0,1);(e[i+t.t]+=t.am(i+1,2*t[i],e,2*i+1,s,t.t-i-1))>=t.DV&&(e[i+t.t]-=t.DV,e[i+t.t+1]=1)}e.t>0&&(e[e.t-1]+=t.am(i,t[i],e,2*i,0,1)),e.s=0,e.clamp()}divRemTo(e,t,i){let s=e.abs();if(s.t<=0)return;let r=this.abs();if(r.t<s.t){null!=t&&t.fromInt(0),null!=i&&this.copyTo(i);return}null==i&&(i=I());let a=I(),n=this.s,o=e.s,h=this.DB-B(s[s.t-1]);h>0?(s.lShiftTo(h,a),r.lShiftTo(h,i)):(s.copyTo(a),r.copyTo(i));let d=a.t,l=a[d-1];if(0==l)return;let c=l*(1<<this.F1)+(d>1?a[d-2]>>this.F2:0),u=this.FV/c,f=(1<<this.F1)/c,p=1<<this.F2,m=i.t,g=m-d,y=null==t?I():t;for(a.dlShiftTo(g,y),i.compareTo(y)>=0&&(i[i.t++]=1,i.subTo(y,i)),w.ONE.dlShiftTo(d,y),y.subTo(a,a);a.t<d;)a[a.t++]=0;for(;--g>=0;){let e=i[--m]==l?this.DM:Math.floor(i[m]*u+(i[m-1]+p)*f);if((i[m]+=a.am(0,e,i,g,0,d))<e)for(a.dlShiftTo(g,y),i.subTo(y,i);i[m]<--e;)i.subTo(y,i)}null!=t&&(i.drShiftTo(d,t),n!=o&&w.ZERO.subTo(t,t)),i.t=d,i.clamp(),h>0&&i.rShiftTo(h,i),n<0&&w.ZERO.subTo(i,i)}invDigit(){if(this.t<1)return 0;let e=this[0];if((1&e)==0)return 0;let t=3&e;return(t=(t=(t=(t=t*(2-(15&e)*t)&15)*(2-(255&e)*t)&255)*(2-((65535&e)*t&65535))&65535)*(2-e*t%this.DV)%this.DV)>0?this.DV-t:-t}isEven(){return(this.t>0?1&this[0]:this.s)==0}exp(e,t){if(e>0xffffffff||e<1)return w.ONE;let i=I(),s=I(),r=t.convert(this),a=B(e)-1;for(r.copyTo(i);--a>=0;)if(t.sqrTo(i,s),(e&1<<a)>0)t.mulTo(s,r,i);else{let e=i;i=s,s=e}return t.revert(i)}chunkSize(e){return Math.floor(Math.LN2*this.DB/Math.log(e))}toRadix(e){if(null==e&&(e=10),0==this.signum()||e<2||e>36)return"0";let t=this.chunkSize(e),i=Math.pow(e,t),s=C(i),r=I(),a=I(),n="";for(this.divRemTo(s,r,a);r.signum()>0;)n=(i+a.intValue()).toString(e).substr(1)+n,r.divRemTo(s,r,a);return a.intValue().toString(e)+n}fromRadix(e,t){this.fromInt(0),null==t&&(t=10);let i=this.chunkSize(t),s=Math.pow(t,i),r=!1,a=0,n=0;for(let o=0;o<e.length;++o){let h=A(e,o);if(h<0){"-"==e.charAt(o)&&0==this.signum()&&(r=!0);continue}n=t*n+h,++a>=i&&(this.dMultiply(s),this.dAddOffset(n,0),a=0,n=0)}a>0&&(this.dMultiply(Math.pow(t,a)),this.dAddOffset(n,0)),r&&w.ZERO.subTo(this,this)}fromNumber(e,t,i){if("number"==typeof t){if(e<2)this.fromInt(1);else for(this.fromNumber(e,i),this.testBit(e-1)||this.bitwiseTo(w.ONE.shiftLeft(e-1),m,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(t);)this.dAddOffset(2,0),this.bitLength()>e&&this.subTo(w.ONE.shiftLeft(e-1),this)}else{let i=[],s=7&e;i.length=(e>>3)+1,t.nextBytes(i),s>0?i[0]&=(1<<s)-1:i[0]=0,this.fromString(i,256)}}bitwiseTo(e,t,i){let s,r;let a=Math.min(e.t,this.t);for(s=0;s<a;++s)i[s]=t(this[s],e[s]);if(e.t<this.t){for(r=e.s&this.DM,s=a;s<this.t;++s)i[s]=t(this[s],r);i.t=this.t}else{for(r=this.s&this.DM,s=a;s<e.t;++s)i[s]=t(r,e[s]);i.t=e.t}i.s=t(this.s,e.s),i.clamp()}changeBit(e,t){let i=w.ONE.shiftLeft(e);return this.bitwiseTo(i,t,i),i}addTo(e,t){let i=0,s=0,r=Math.min(e.t,this.t);for(;i<r;)s+=this[i]+e[i],t[i++]=s&this.DM,s>>=this.DB;if(e.t<this.t){for(s+=e.s;i<this.t;)s+=this[i],t[i++]=s&this.DM,s>>=this.DB;s+=this.s}else{for(s+=this.s;i<e.t;)s+=e[i],t[i++]=s&this.DM,s>>=this.DB;s+=e.s}t.s=s<0?-1:0,s>0?t[i++]=s:s<-1&&(t[i++]=this.DV+s),t.t=i,t.clamp()}dMultiply(e){this[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()}dAddOffset(e,t){if(0!=e){for(;this.t<=t;)this[this.t++]=0;for(this[t]+=e;this[t]>=this.DV;)this[t]-=this.DV,++t>=this.t&&(this[this.t++]=0),++this[t]}}multiplyLowerTo(e,t,i){let s=Math.min(this.t+e.t,t);for(i.s=0,i.t=s;s>0;)i[--s]=0;for(let t=i.t-this.t;s<t;++s)i[s+this.t]=this.am(0,e[s],i,s,0,this.t);for(let r=Math.min(e.t,t);s<r;++s)this.am(0,e[s],i,s,0,t-s);i.clamp()}multiplyUpperTo(e,t,i){--t;let s=i.t=this.t+e.t-t;for(i.s=0;--s>=0;)i[s]=0;for(s=Math.max(t-this.t,0);s<e.t;++s)i[this.t+s-t]=this.am(t-s,e[s],i,0,0,this.t+s-t);i.clamp(),i.drShiftTo(1,i)}modInt(e){if(e<=0)return 0;let t=this.DV%e,i=this.s<0?e-1:0;if(this.t>0){if(0==t)i=this[0]%e;else for(let s=this.t-1;s>=0;--s)i=(t*i+this[s])%e}return i}millerRabin(e){let t=this.subtract(w.ONE),i=t.getLowestSetBit();if(i<=0)return!1;let s=t.shiftRight(i);(e=e+1>>1)>v.length&&(e=v.length);let r=I();for(let a=0;a<e;++a){r.fromInt(v[Math.floor(Math.random()*v.length)]);let e=r.modPow(s,this);if(0!=e.compareTo(w.ONE)&&0!=e.compareTo(t)){let s=1;for(;s++<i&&0!=e.compareTo(t);)if(0==(e=e.modPowInt(2,this)).compareTo(w.ONE))return!1;if(0!=e.compareTo(t))return!1}}return!0}square(){let e=I();return this.squareTo(e),e}gcda(e,t){let i=this.s<0?this.negate():this.clone(),s=e.s<0?e.negate():e.clone();if(0>i.compareTo(s)){let e=i;i=s,s=e}let r=i.getLowestSetBit(),a=s.getLowestSetBit();if(a<0){t(i);return}r<a&&(a=r),a>0&&(i.rShiftTo(a,i),s.rShiftTo(a,s));let n=function(){(r=i.getLowestSetBit())>0&&i.rShiftTo(r,i),(r=s.getLowestSetBit())>0&&s.rShiftTo(r,s),i.compareTo(s)>=0?(i.subTo(s,i),i.rShiftTo(1,i)):(s.subTo(i,s),s.rShiftTo(1,s)),i.signum()>0?setTimeout(n,0):(a>0&&s.lShiftTo(a,s),setTimeout(function(){t(s)},0))};setTimeout(n,10)}fromNumberAsync(e,t,i,s){if("number"==typeof t){if(e<2)this.fromInt(1);else{this.fromNumber(e,i),this.testBit(e-1)||this.bitwiseTo(w.ONE.shiftLeft(e-1),m,this),this.isEven()&&this.dAddOffset(1,0);let r=this,a=function(){r.dAddOffset(2,0),r.bitLength()>e&&r.subTo(w.ONE.shiftLeft(e-1),r),r.isProbablePrime(t)?setTimeout(function(){s()},0):setTimeout(a,0)};setTimeout(a,0)}}else{let i=[],s=7&e;i.length=(e>>3)+1,t.nextBytes(i),s>0?i[0]&=(1<<s)-1:i[0]=0,this.fromString(i,256)}}}class k{constructor(){}convert(e){return e}revert(e){return e}mulTo(e,t,i){e.multiplyTo(t,i)}sqrTo(e,t){e.squareTo(t)}}class S{constructor(e){this.m=e}convert(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e}revert(e){return e}reduce(e){e.divRemTo(this.m,null,e)}mulTo(e,t,i){e.multiplyTo(t,i),this.reduce(i)}sqrTo(e,t){e.squareTo(t),this.reduce(t)}}class O{constructor(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}convert(e){let t=I();return e.abs().dlShiftTo(this.m.t,t),t.divRemTo(this.m,null,t),e.s<0&&t.compareTo(w.ZERO)>0&&this.m.subTo(t,t),t}revert(e){let t=I();return e.copyTo(t),this.reduce(t),t}reduce(e){for(;e.t<=this.mt2;)e[e.t++]=0;for(let t=0;t<this.m.t;++t){let i=32767&e[t],s=i*this.mpl+((i*this.mph+(e[t]>>15)*this.mpl&this.um)<<15)&e.DM;for(i=t+this.m.t,e[i]+=this.m.am(0,s,e,t,0,this.m.t);e[i]>=e.DV;)e[i]-=e.DV,e[++i]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)}mulTo(e,t,i){e.multiplyTo(t,i),this.reduce(i)}sqrTo(e,t){e.squareTo(t),this.reduce(t)}}class T{constructor(e){this.m=e,this.r2=I(),this.q3=I(),w.ONE.dlShiftTo(2*e.t,this.r2),this.mu=this.r2.divide(e)}convert(e){if(e.s<0||e.t>2*this.m.t)return e.mod(this.m);if(0>e.compareTo(this.m))return e;{let t=I();return e.copyTo(t),this.reduce(t),t}}revert(e){return e}reduce(e){for(e.drShiftTo(this.m.t-1,this.r2),e.t>this.m.t+1&&(e.t=this.m.t+1,e.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);0>e.compareTo(this.r2);)e.dAddOffset(1,this.m.t+1);for(e.subTo(this.r2,e);e.compareTo(this.m)>=0;)e.subTo(this.m,e)}mulTo(e,t,i){e.multiplyTo(t,i),this.reduce(i)}sqrTo(e,t){e.squareTo(t),this.reduce(t)}}function I(){return new w(null)}function x(e,t){return new w(e,t)}let P="undefined"!=typeof navigator;P&&"Microsoft Internet Explorer"==navigator.appName?(w.prototype.am=function(e,t,i,s,r,a){let n=32767&t,o=t>>15;for(;--a>=0;){let t=32767&this[e],a=this[e++]>>15,h=o*t+a*n;r=((t=n*t+((32767&h)<<15)+i[s]+(0x3fffffff&r))>>>30)+(h>>>15)+o*a+(r>>>30),i[s++]=0x3fffffff&t}return r},r=30):P&&"Netscape"!=navigator.appName?(w.prototype.am=function(e,t,i,s,r,a){for(;--a>=0;){let a=t*this[e++]+i[s]+r;r=Math.floor(a/0x4000000),i[s++]=0x3ffffff&a}return r},r=26):(w.prototype.am=function(e,t,i,s,r,a){let n=16383&t,o=t>>14;for(;--a>=0;){let t=16383&this[e],a=this[e++]>>14,h=o*t+a*n;r=((t=n*t+((16383&h)<<14)+i[s]+r)>>28)+(h>>14)+o*a,i[s++]=0xfffffff&t}return r},r=28),w.prototype.DB=r,w.prototype.DM=(1<<r)-1,w.prototype.DV=1<<r,w.prototype.FV=0x10000000000000,w.prototype.F1=52-r,w.prototype.F2=2*r-52;let M=[];for(n=0,a=48;n<=9;++n)M[a++]=n;for(n=10,a=97;n<36;++n)M[a++]=n;for(n=10,a=65;n<36;++n)M[a++]=n;function A(e,t){let i=M[e.charCodeAt(t)];return null==i?-1:i}function C(e){let t=I();return t.fromInt(e),t}function B(e){let t,i=1;return 0!=(t=e>>>16)&&(e=t,i+=16),0!=(t=e>>8)&&(e=t,i+=8),0!=(t=e>>4)&&(e=t,i+=4),0!=(t=e>>2)&&(e=t,i+=2),0!=(t=e>>1)&&(e=t,i+=1),i}w.ZERO=C(0),w.ONE=C(1);var E=i(1150);class _{constructor(){this.n=null,this.e=0,this.d=null,this.p=null,this.q=null,this.dmp1=null,this.dmq1=null,this.coeff=null}doPublic(e){return e.modPowInt(this.e,this.n)}doPrivate(e){if(null==this.p||null==this.q)return e.modPow(this.d,this.n);let t=e.mod(this.p).modPow(this.dmp1,this.p),i=e.mod(this.q).modPow(this.dmq1,this.q);for(;0>t.compareTo(i);)t=t.add(this.p);return t.subtract(i).multiply(this.coeff).mod(this.p).multiply(this.q).add(i)}setPublic(e,t){null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=x(e,16),this.e=parseInt(t,16)):console.error("Invalid RSA public key")}encrypt(e){let t=this.n.bitLength()+7>>3,i=function(e,t){if(t<e.length+11)return console.error("Message too long for RSA"),null;let i=[],s=e.length-1;for(;s>=0&&t>0;){let r=e.charCodeAt(s--);r<128?i[--t]=r:r>127&&r<2048?(i[--t]=63&r|128,i[--t]=r>>6|192):(i[--t]=63&r|128,i[--t]=r>>6&63|128,i[--t]=r>>12|224)}i[--t]=0;let r=new E.D,a=[];for(;t>2;){for(a[0]=0;0==a[0];)r.nextBytes(a);i[--t]=a[0]}return i[--t]=2,i[--t]=0,new w(i)}(e,t);if(null==i)return null;let s=this.doPublic(i);if(null==s)return null;let r=s.toString(16),a=r.length;for(let e=0;e<2*t-a;e++)r="0"+r;return r}setPrivate(e,t,i){null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=x(e,16),this.e=parseInt(t,16),this.d=x(i,16)):console.error("Invalid RSA private key")}setPrivateEx(e,t,i,s,r,a,n,o){null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=x(e,16),this.e=parseInt(t,16),this.d=x(i,16),this.p=x(s,16),this.q=x(r,16),this.dmp1=x(a,16),this.dmq1=x(n,16),this.coeff=x(o,16)):console.error("Invalid RSA private key")}generate(e,t){let i=new E.D,s=e>>1;this.e=parseInt(t,16);let r=new w(t,16);for(;;){for(;this.p=new w(e-s,1,i),!(0==this.p.subtract(w.ONE).gcd(r).compareTo(w.ONE)&&this.p.isProbablePrime(10)););for(;this.q=new w(s,1,i),!(0==this.q.subtract(w.ONE).gcd(r).compareTo(w.ONE)&&this.q.isProbablePrime(10)););if(0>=this.p.compareTo(this.q)){let e=this.p;this.p=this.q,this.q=e}let t=this.p.subtract(w.ONE),a=this.q.subtract(w.ONE),n=t.multiply(a);if(0==n.gcd(r).compareTo(w.ONE)){this.n=this.p.multiply(this.q),this.d=r.modInverse(n),this.dmp1=this.d.mod(t),this.dmq1=this.d.mod(a),this.coeff=this.q.modInverse(this.p);break}}}decrypt(e){let t=x(e,16),i=this.doPrivate(t);return null==i?null:function(e,t){let i=e.toByteArray(),s=0;for(;s<i.length&&0==i[s];)++s;if(i.length-s!=t-1||2!=i[s])return null;for(++s;0!=i[s];)if(++s>=i.length)return null;let r="";for(;++s<i.length;){let e=255&i[s];e<128?r+=String.fromCharCode(e):e>191&&e<224?(r+=String.fromCharCode((31&e)<<6|63&i[s+1]),++s):(r+=String.fromCharCode((15&e)<<12|(63&i[s+1])<<6|63&i[s+2]),s+=2)}return r}(i,this.n.bitLength()+7>>3)}generateAsync(e,t,i){let s=new E.D,r=e>>1;this.e=parseInt(t,16);let a=new w(t,16),n=this,o=function(){let t=function(){if(0>=n.p.compareTo(n.q)){let e=n.p;n.p=n.q,n.q=e}let e=n.p.subtract(w.ONE),t=n.q.subtract(w.ONE),s=e.multiply(t);0==s.gcd(a).compareTo(w.ONE)?(n.n=n.p.multiply(n.q),n.d=a.modInverse(s),n.dmp1=n.d.mod(e),n.dmq1=n.d.mod(t),n.coeff=n.q.modInverse(n.p),setTimeout(function(){i()},0)):setTimeout(o,0)},h=function(){n.q=I(),n.q.fromNumberAsync(r,1,s,function(){n.q.subtract(w.ONE).gcda(a,function(e){0==e.compareTo(w.ONE)&&n.q.isProbablePrime(10)?setTimeout(t,0):setTimeout(h,0)})})},d=function(){n.p=I(),n.p.fromNumberAsync(e-r,1,s,function(){n.p.subtract(w.ONE).gcda(a,function(e){0==e.compareTo(w.ONE)&&n.p.isProbablePrime(10)?setTimeout(h,0):setTimeout(d,0)})})};setTimeout(d,0)};setTimeout(o,0)}sign(e,t,i){let s=function(e,t){if(t<e.length+22)return console.error("Message too long for RSA"),null;let i=t-e.length-6,s="";for(let e=0;e<i;e+=2)s+="ff";return x("0001"+s+"00"+e,16)}((N[i]||"")+t(e).toString(),this.n.bitLength()/4);if(null==s)return null;let r=this.doPrivate(s);if(null==r)return null;let a=r.toString(16);return(1&a.length)==0?a:"0"+a}verify(e,t,i){let s=x(t,16),r=this.doPublic(s);return null==r?null:function(e){for(let t in N)if(N.hasOwnProperty(t)){let i=N[t],s=i.length;if(e.substr(0,s)==i)return e.substr(s)}return e}(r.toString(16).replace(/^1f+00/,""))==i(e).toString()}}let N={md2:"3020300c06082a864886f70d020205000410",md5:"3020300c06082a864886f70d020505000410",sha1:"3021300906052b0e03021a05000414",sha224:"302d300d06096086480165030402040500041c",sha256:"3031300d060960864801650304020105000420",sha384:"3041300d060960864801650304020205000430",sha512:"3051300d060960864801650304020305000440",ripemd160:"3021300906052b2403020105000414"};var L={};L.lang={extend:function(e,t,i){if(!t||!e)throw Error("YAHOO.lang.extend failed, please check that all dependencies are included.");var s=function(){};if(s.prototype=t.prototype,e.prototype=new s,e.prototype.constructor=e,e.superclass=t.prototype,t.prototype.constructor==Object.prototype.constructor&&(t.prototype.constructor=t),i){for(r in i)e.prototype[r]=i[r];var r,a=function(){},n=["toString","valueOf"];try{/MSIE/.test(navigator.userAgent)&&(a=function(e,t){for(r=0;r<n.length;r+=1){var i=n[r],s=t[i];"function"==typeof s&&s!=Object.prototype[i]&&(e[i]=s)}})}catch(e){}a(e.prototype,i)}}};var R={};void 0!==R.asn1&&R.asn1||(R.asn1={}),R.asn1.ASN1Util=new function(){this.integerToByteHex=function(e){var t=e.toString(16);return t.length%2==1&&(t="0"+t),t},this.bigIntToMinTwosComplementsHex=function(e){var t=e.toString(16);if("-"!=t.substr(0,1))t.length%2==1?t="0"+t:t.match(/^[0-7]/)||(t="00"+t);else{var i=t.substr(1).length;i%2==1?i+=1:t.match(/^[0-7]/)||(i+=2);for(var s="",r=0;r<i;r++)s+="f";t=new w(s,16).xor(e).add(w.ONE).toString(16).replace(/^-/,"")}return t},this.getPEMStringFromHex=function(e,t){return hextopem(e,t)},this.newObject=function(e){var t=R.asn1,i=t.DERBoolean,s=t.DERInteger,r=t.DERBitString,a=t.DEROctetString,n=t.DERNull,o=t.DERObjectIdentifier,h=t.DEREnumerated,d=t.DERUTF8String,l=t.DERNumericString,c=t.DERPrintableString,u=t.DERTeletexString,f=t.DERIA5String,p=t.DERUTCTime,m=t.DERGeneralizedTime,g=t.DERSequence,y=t.DERSet,v=t.DERTaggedObject,b=t.ASN1Util.newObject,w=Object.keys(e);if(1!=w.length)throw"key of param shall be only one.";var k=w[0];if(-1==":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":"+k+":"))throw"undefined key: "+k;if("bool"==k)return new i(e[k]);if("int"==k)return new s(e[k]);if("bitstr"==k)return new r(e[k]);if("octstr"==k)return new a(e[k]);if("null"==k)return new n(e[k]);if("oid"==k)return new o(e[k]);if("enum"==k)return new h(e[k]);if("utf8str"==k)return new d(e[k]);if("numstr"==k)return new l(e[k]);if("prnstr"==k)return new c(e[k]);if("telstr"==k)return new u(e[k]);if("ia5str"==k)return new f(e[k]);if("utctime"==k)return new p(e[k]);if("gentime"==k)return new m(e[k]);if("seq"==k){for(var S=e[k],O=[],T=0;T<S.length;T++){var I=b(S[T]);O.push(I)}return new g({array:O})}if("set"==k){for(var S=e[k],O=[],T=0;T<S.length;T++){var I=b(S[T]);O.push(I)}return new y({array:O})}if("tag"==k){var x=e[k];if("[object Array]"===Object.prototype.toString.call(x)&&3==x.length){var P=b(x[2]);return new v({tag:x[0],explicit:x[1],obj:P})}var M={};if(void 0!==x.explicit&&(M.explicit=x.explicit),void 0!==x.tag&&(M.tag=x.tag),void 0===x.obj)throw"obj shall be specified for 'tag'.";return M.obj=b(x.obj),new v(M)}},this.jsonToASN1HEX=function(e){return this.newObject(e).getEncodedHex()}},R.asn1.ASN1Util.oidHexToInt=function(e){for(var t="",i=parseInt(e.substr(0,2),16),s=Math.floor(i/40),t=s+"."+i%40,r="",a=2;a<e.length;a+=2){var n=("00000000"+parseInt(e.substr(a,2),16).toString(2)).slice(-8);r+=n.substr(1,7),"0"==n.substr(0,1)&&(t=t+"."+new w(r,2).toString(10),r="")}return t},R.asn1.ASN1Util.oidIntToHex=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t};if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var i="",s=e.split(".");i+=t(40*parseInt(s[0])+parseInt(s[1])),s.splice(0,2);for(var r=0;r<s.length;r++)i+=function(e){var i="",s=new w(e,10).toString(2),r=7-s.length%7;7==r&&(r=0);for(var a="",n=0;n<r;n++)a+="0";s=a+s;for(var n=0;n<s.length-1;n+=7){var o=s.substr(n,7);n!=s.length-7&&(o="1"+o),i+=t(parseInt(o,2))}return i}(s[r]);return i},R.asn1.ASN1Object=function(){this.getLengthHexFromValue=function(){if(void 0===this.hV||null==this.hV)throw"this.hV is null or undefined.";if(this.hV.length%2==1)throw"value hex must be even length: n=0,v="+this.hV;var e=this.hV.length/2,t=e.toString(16);if(t.length%2==1&&(t="0"+t),e<128)return t;var i=t.length/2;if(i>15)throw"ASN.1 length too long to represent by 8x: n = "+e.toString(16);return(128+i).toString(16)+t},this.getEncodedHex=function(){return(null==this.hTLV||this.isModified)&&(this.hV=this.getFreshValueHex(),this.hL=this.getLengthHexFromValue(),this.hTLV=this.hT+this.hL+this.hV,this.isModified=!1),this.hTLV},this.getValueHex=function(){return this.getEncodedHex(),this.hV},this.getFreshValueHex=function(){return""}},R.asn1.DERAbstractString=function(e){R.asn1.DERAbstractString.superclass.constructor.call(this),this.getString=function(){return this.s},this.setString=function(e){this.hTLV=null,this.isModified=!0,this.s=e,this.hV=stohex(this.s)},this.setStringHex=function(e){this.hTLV=null,this.isModified=!0,this.s=null,this.hV=e},this.getFreshValueHex=function(){return this.hV},void 0!==e&&("string"==typeof e?this.setString(e):void 0!==e.str?this.setString(e.str):void 0!==e.hex&&this.setStringHex(e.hex))},L.lang.extend(R.asn1.DERAbstractString,R.asn1.ASN1Object),R.asn1.DERAbstractTime=function(e){R.asn1.DERAbstractTime.superclass.constructor.call(this),this.localDateToUTC=function(e){return new Date(utc=e.getTime()+6e4*e.getTimezoneOffset())},this.formatDate=function(e,t,i){var s=this.zeroPadding,r=this.localDateToUTC(e),a=String(r.getFullYear());"utc"==t&&(a=a.substr(2,2));var n=a+s(String(r.getMonth()+1),2)+s(String(r.getDate()),2)+s(String(r.getHours()),2)+s(String(r.getMinutes()),2)+s(String(r.getSeconds()),2);if(!0===i){var o=r.getMilliseconds();if(0!=o){var h=s(String(o),3);n=n+"."+(h=h.replace(/[0]+$/,""))}}return n+"Z"},this.zeroPadding=function(e,t){return e.length>=t?e:Array(t-e.length+1).join("0")+e},this.getString=function(){return this.s},this.setString=function(e){this.hTLV=null,this.isModified=!0,this.s=e,this.hV=stohex(e)},this.setByDateValue=function(e,t,i,s,r,a){var n=new Date(Date.UTC(e,t-1,i,s,r,a,0));this.setByDate(n)},this.getFreshValueHex=function(){return this.hV}},L.lang.extend(R.asn1.DERAbstractTime,R.asn1.ASN1Object),R.asn1.DERAbstractStructured=function(e){R.asn1.DERAbstractString.superclass.constructor.call(this),this.setByASN1ObjectArray=function(e){this.hTLV=null,this.isModified=!0,this.asn1Array=e},this.appendASN1Object=function(e){this.hTLV=null,this.isModified=!0,this.asn1Array.push(e)},this.asn1Array=[],void 0!==e&&void 0!==e.array&&(this.asn1Array=e.array)},L.lang.extend(R.asn1.DERAbstractStructured,R.asn1.ASN1Object),R.asn1.DERBoolean=function(){R.asn1.DERBoolean.superclass.constructor.call(this),this.hT="01",this.hTLV="0101ff"},L.lang.extend(R.asn1.DERBoolean,R.asn1.ASN1Object),R.asn1.DERInteger=function(e){R.asn1.DERInteger.superclass.constructor.call(this),this.hT="02",this.setByBigInteger=function(e){this.hTLV=null,this.isModified=!0,this.hV=R.asn1.ASN1Util.bigIntToMinTwosComplementsHex(e)},this.setByInteger=function(e){var t=new w(String(e),10);this.setByBigInteger(t)},this.setValueHex=function(e){this.hV=e},this.getFreshValueHex=function(){return this.hV},void 0!==e&&(void 0!==e.bigint?this.setByBigInteger(e.bigint):void 0!==e.int?this.setByInteger(e.int):"number"==typeof e?this.setByInteger(e):void 0!==e.hex&&this.setValueHex(e.hex))},L.lang.extend(R.asn1.DERInteger,R.asn1.ASN1Object),R.asn1.DERBitString=function(e){if(void 0!==e&&void 0!==e.obj){var t=R.asn1.ASN1Util.newObject(e.obj);e.hex="00"+t.getEncodedHex()}R.asn1.DERBitString.superclass.constructor.call(this),this.hT="03",this.setHexValueIncludingUnusedBits=function(e){this.hTLV=null,this.isModified=!0,this.hV=e},this.setUnusedBitsAndHexValue=function(e,t){if(e<0||7<e)throw"unused bits shall be from 0 to 7: u = "+e;this.hTLV=null,this.isModified=!0,this.hV="0"+e+t},this.setByBinaryString=function(e){var t=8-(e=e.replace(/0+$/,"")).length%8;8==t&&(t=0);for(var i=0;i<=t;i++)e+="0";for(var s="",i=0;i<e.length-1;i+=8){var r=parseInt(e.substr(i,8),2).toString(16);1==r.length&&(r="0"+r),s+=r}this.hTLV=null,this.isModified=!0,this.hV="0"+t+s},this.setByBooleanArray=function(e){for(var t="",i=0;i<e.length;i++)!0==e[i]?t+="1":t+="0";this.setByBinaryString(t)},this.newFalseArray=function(e){for(var t=Array(e),i=0;i<e;i++)t[i]=!1;return t},this.getFreshValueHex=function(){return this.hV},void 0!==e&&("string"==typeof e&&e.toLowerCase().match(/^[0-9a-f]+$/)?this.setHexValueIncludingUnusedBits(e):void 0!==e.hex?this.setHexValueIncludingUnusedBits(e.hex):void 0!==e.bin?this.setByBinaryString(e.bin):void 0!==e.array&&this.setByBooleanArray(e.array))},L.lang.extend(R.asn1.DERBitString,R.asn1.ASN1Object),R.asn1.DEROctetString=function(e){if(void 0!==e&&void 0!==e.obj){var t=R.asn1.ASN1Util.newObject(e.obj);e.hex=t.getEncodedHex()}R.asn1.DEROctetString.superclass.constructor.call(this,e),this.hT="04"},L.lang.extend(R.asn1.DEROctetString,R.asn1.DERAbstractString),R.asn1.DERNull=function(){R.asn1.DERNull.superclass.constructor.call(this),this.hT="05",this.hTLV="0500"},L.lang.extend(R.asn1.DERNull,R.asn1.ASN1Object),R.asn1.DERObjectIdentifier=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t},i=function(e){var i="",s=new w(e,10).toString(2),r=7-s.length%7;7==r&&(r=0);for(var a="",n=0;n<r;n++)a+="0";s=a+s;for(var n=0;n<s.length-1;n+=7){var o=s.substr(n,7);n!=s.length-7&&(o="1"+o),i+=t(parseInt(o,2))}return i};R.asn1.DERObjectIdentifier.superclass.constructor.call(this),this.hT="06",this.setValueHex=function(e){this.hTLV=null,this.isModified=!0,this.s=null,this.hV=e},this.setValueOidString=function(e){if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var s="",r=e.split(".");s+=t(40*parseInt(r[0])+parseInt(r[1])),r.splice(0,2);for(var a=0;a<r.length;a++)s+=i(r[a]);this.hTLV=null,this.isModified=!0,this.s=null,this.hV=s},this.setValueName=function(e){var t=R.asn1.x509.OID.name2oid(e);if(""!==t)this.setValueOidString(t);else throw"DERObjectIdentifier oidName undefined: "+e},this.getFreshValueHex=function(){return this.hV},void 0!==e&&("string"==typeof e?e.match(/^[0-2].[0-9.]+$/)?this.setValueOidString(e):this.setValueName(e):void 0!==e.oid?this.setValueOidString(e.oid):void 0!==e.hex?this.setValueHex(e.hex):void 0!==e.name&&this.setValueName(e.name))},L.lang.extend(R.asn1.DERObjectIdentifier,R.asn1.ASN1Object),R.asn1.DEREnumerated=function(e){R.asn1.DEREnumerated.superclass.constructor.call(this),this.hT="0a",this.setByBigInteger=function(e){this.hTLV=null,this.isModified=!0,this.hV=R.asn1.ASN1Util.bigIntToMinTwosComplementsHex(e)},this.setByInteger=function(e){var t=new w(String(e),10);this.setByBigInteger(t)},this.setValueHex=function(e){this.hV=e},this.getFreshValueHex=function(){return this.hV},void 0!==e&&(void 0!==e.int?this.setByInteger(e.int):"number"==typeof e?this.setByInteger(e):void 0!==e.hex&&this.setValueHex(e.hex))},L.lang.extend(R.asn1.DEREnumerated,R.asn1.ASN1Object),R.asn1.DERUTF8String=function(e){R.asn1.DERUTF8String.superclass.constructor.call(this,e),this.hT="0c"},L.lang.extend(R.asn1.DERUTF8String,R.asn1.DERAbstractString),R.asn1.DERNumericString=function(e){R.asn1.DERNumericString.superclass.constructor.call(this,e),this.hT="12"},L.lang.extend(R.asn1.DERNumericString,R.asn1.DERAbstractString),R.asn1.DERPrintableString=function(e){R.asn1.DERPrintableString.superclass.constructor.call(this,e),this.hT="13"},L.lang.extend(R.asn1.DERPrintableString,R.asn1.DERAbstractString),R.asn1.DERTeletexString=function(e){R.asn1.DERTeletexString.superclass.constructor.call(this,e),this.hT="14"},L.lang.extend(R.asn1.DERTeletexString,R.asn1.DERAbstractString),R.asn1.DERIA5String=function(e){R.asn1.DERIA5String.superclass.constructor.call(this,e),this.hT="16"},L.lang.extend(R.asn1.DERIA5String,R.asn1.DERAbstractString),R.asn1.DERUTCTime=function(e){R.asn1.DERUTCTime.superclass.constructor.call(this,e),this.hT="17",this.setByDate=function(e){this.hTLV=null,this.isModified=!0,this.date=e,this.s=this.formatDate(this.date,"utc"),this.hV=stohex(this.s)},this.getFreshValueHex=function(){return void 0===this.date&&void 0===this.s&&(this.date=new Date,this.s=this.formatDate(this.date,"utc"),this.hV=stohex(this.s)),this.hV},void 0!==e&&(void 0!==e.str?this.setString(e.str):"string"==typeof e&&e.match(/^[0-9]{12}Z$/)?this.setString(e):void 0!==e.hex?this.setStringHex(e.hex):void 0!==e.date&&this.setByDate(e.date))},L.lang.extend(R.asn1.DERUTCTime,R.asn1.DERAbstractTime),R.asn1.DERGeneralizedTime=function(e){R.asn1.DERGeneralizedTime.superclass.constructor.call(this,e),this.hT="18",this.withMillis=!1,this.setByDate=function(e){this.hTLV=null,this.isModified=!0,this.date=e,this.s=this.formatDate(this.date,"gen",this.withMillis),this.hV=stohex(this.s)},this.getFreshValueHex=function(){return void 0===this.date&&void 0===this.s&&(this.date=new Date,this.s=this.formatDate(this.date,"gen",this.withMillis),this.hV=stohex(this.s)),this.hV},void 0!==e&&(void 0!==e.str?this.setString(e.str):"string"==typeof e&&e.match(/^[0-9]{14}Z$/)?this.setString(e):void 0!==e.hex?this.setStringHex(e.hex):void 0!==e.date&&this.setByDate(e.date),!0===e.millis&&(this.withMillis=!0))},L.lang.extend(R.asn1.DERGeneralizedTime,R.asn1.DERAbstractTime),R.asn1.DERSequence=function(e){R.asn1.DERSequence.superclass.constructor.call(this,e),this.hT="30",this.getFreshValueHex=function(){for(var e="",t=0;t<this.asn1Array.length;t++)e+=this.asn1Array[t].getEncodedHex();return this.hV=e,this.hV}},L.lang.extend(R.asn1.DERSequence,R.asn1.DERAbstractStructured),R.asn1.DERSet=function(e){R.asn1.DERSet.superclass.constructor.call(this,e),this.hT="31",this.sortFlag=!0,this.getFreshValueHex=function(){for(var e=[],t=0;t<this.asn1Array.length;t++){var i=this.asn1Array[t];e.push(i.getEncodedHex())}return!0==this.sortFlag&&e.sort(),this.hV=e.join(""),this.hV},void 0!==e&&void 0!==e.sortflag&&!1==e.sortflag&&(this.sortFlag=!1)},L.lang.extend(R.asn1.DERSet,R.asn1.DERAbstractStructured),R.asn1.DERTaggedObject=function(e){R.asn1.DERTaggedObject.superclass.constructor.call(this),this.hT="a0",this.hV="",this.isExplicit=!0,this.asn1Object=null,this.setASN1Object=function(e,t,i){this.hT=t,this.isExplicit=e,this.asn1Object=i,this.isExplicit?(this.hV=this.asn1Object.getEncodedHex(),this.hTLV=null,this.isModified=!0):(this.hV=null,this.hTLV=i.getEncodedHex(),this.hTLV=this.hTLV.replace(/^../,t),this.isModified=!1)},this.getFreshValueHex=function(){return this.hV},void 0!==e&&(void 0!==e.tag&&(this.hT=e.tag),void 0!==e.explicit&&(this.isExplicit=e.explicit),void 0!==e.obj&&(this.asn1Object=e.obj,this.setASN1Object(this.isExplicit,this.hT,this.asn1Object)))},L.lang.extend(R.asn1.DERTaggedObject,R.asn1.ASN1Object);class D extends _{constructor(e){super(),e&&("string"==typeof e?this.parseKey(e):(D.hasPrivateKeyProperty(e)||D.hasPublicKeyProperty(e))&&this.parsePropertiesFrom(e))}parseKey(e){try{let i=0,s=0,r=/^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/.test(e)?l.decode(e):c.o.unarmor(e),a=u.Ge.decode(r);if(3===a.sub.length&&(a=a.sub[2].sub[0]),9===a.sub.length){i=a.sub[1].getHexStringValue(),this.n=x(i,16),s=a.sub[2].getHexStringValue(),this.e=parseInt(s,16);let e=a.sub[3].getHexStringValue();this.d=x(e,16);let t=a.sub[4].getHexStringValue();this.p=x(t,16);let r=a.sub[5].getHexStringValue();this.q=x(r,16);let n=a.sub[6].getHexStringValue();this.dmp1=x(n,16);let o=a.sub[7].getHexStringValue();this.dmq1=x(o,16);let h=a.sub[8].getHexStringValue();this.coeff=x(h,16)}else if(2!==a.sub.length)return!1;else if(a.sub[0].sub){var t=a.sub[1].sub[0];i=t.sub[0].getHexStringValue(),this.n=x(i,16),s=t.sub[1].getHexStringValue(),this.e=parseInt(s,16)}else i=a.sub[0].getHexStringValue(),this.n=x(i,16),s=a.sub[1].getHexStringValue(),this.e=parseInt(s,16);return!0}catch(e){return!1}}getPrivateBaseKey(){let e={array:[new R.asn1.DERInteger({int:0}),new R.asn1.DERInteger({bigint:this.n}),new R.asn1.DERInteger({int:this.e}),new R.asn1.DERInteger({bigint:this.d}),new R.asn1.DERInteger({bigint:this.p}),new R.asn1.DERInteger({bigint:this.q}),new R.asn1.DERInteger({bigint:this.dmp1}),new R.asn1.DERInteger({bigint:this.dmq1}),new R.asn1.DERInteger({bigint:this.coeff})]};return new R.asn1.DERSequence(e).getEncodedHex()}getPrivateBaseKeyB64(){return h(this.getPrivateBaseKey())}getPublicBaseKey(){let e=new R.asn1.DERSequence({array:[new R.asn1.DERObjectIdentifier({oid:"1.2.840.113549.1.1.1"}),new R.asn1.DERNull]}),t=new R.asn1.DERSequence({array:[new R.asn1.DERInteger({bigint:this.n}),new R.asn1.DERInteger({int:this.e})]}),i=new R.asn1.DERBitString({hex:"00"+t.getEncodedHex()});return new R.asn1.DERSequence({array:[e,i]}).getEncodedHex()}getPublicBaseKeyB64(){return h(this.getPublicBaseKey())}static wordwrap(e,t){if(t=t||64,!e)return e;let i="(.{1,"+t+"})( +|$\n?)|(.{1,"+t+"})";return e.match(RegExp(i,"g")).join("\n")}getPrivateKey(){return"-----BEGIN RSA PRIVATE KEY-----\n"+D.wordwrap(this.getPrivateBaseKeyB64())+"\n-----END RSA PRIVATE KEY-----"}getPublicKey(){return"-----BEGIN PUBLIC KEY-----\n"+D.wordwrap(this.getPublicBaseKeyB64())+"\n-----END PUBLIC KEY-----"}static hasPublicKeyProperty(e){return(e=e||{}).hasOwnProperty("n")&&e.hasOwnProperty("e")}static hasPrivateKeyProperty(e){return(e=e||{}).hasOwnProperty("n")&&e.hasOwnProperty("e")&&e.hasOwnProperty("d")&&e.hasOwnProperty("p")&&e.hasOwnProperty("q")&&e.hasOwnProperty("dmp1")&&e.hasOwnProperty("dmq1")&&e.hasOwnProperty("coeff")}parsePropertiesFrom(e){this.n=e.n,this.e=e.e,e.hasOwnProperty("d")&&(this.d=e.d,this.p=e.p,this.q=e.q,this.dmp1=e.dmp1,this.dmq1=e.dmq1,this.coeff=e.coeff)}}var V=i(2818);let q=void 0!==V?V.env?.npm_package_version:void 0;class F{constructor(e={}){e=e||{},this.default_key_size=e.default_key_size?parseInt(e.default_key_size,10):1024,this.default_public_exponent=e.default_public_exponent||"010001",this.log=e.log||!1,this.key=null}setKey(e){this.log&&this.key&&console.warn("A key was already set, overriding existing."),this.key=new D(e)}setPrivateKey(e){this.setKey(e)}setPublicKey(e){this.setKey(e)}decrypt(e){try{return this.getKey().decrypt(d(e))}catch(e){return!1}}encrypt(e){try{return h(this.getKey().encrypt(e))}catch(e){return!1}}sign(e,t,i){try{return h(this.getKey().sign(e,t,i))}catch(e){return!1}}verify(e,t,i){try{return this.getKey().verify(e,d(t),i)}catch(e){return!1}}getKey(e){if(!this.key){if(this.key=new D,e&&"[object Function]"===({}).toString.call(e)){this.key.generateAsync(this.default_key_size,this.default_public_exponent,e);return}this.key.generate(this.default_key_size,this.default_public_exponent)}return this.key}getPrivateKey(){return this.getKey().getPrivateKey()}getPrivateKeyB64(){return this.getKey().getPrivateBaseKeyB64()}getPublicKey(){return this.getKey().getPublicKey()}getPublicKeyB64(){return this.getKey().getPublicBaseKeyB64()}}F.version=q;var H=i(7419),G=i(8715),U=i(1750);function W(e,t,i){let s=new F;s.setPrivateKey(t);let r=i.create().constructor.name.toLowerCase();return s.sign(e,e=>o.xn.encode(i(e)),r)}function j(e,t,i,s=!1,r={}){let a,n=(s?"RS":"HS")+8*i.outputLen;r.alg&&(n=r.alg.toUpperCase());let h=Object.assign({alg:n,typ:"JWT"},r);void 0!==h.iat&&(e.iat=h.iat,delete h.iat);let d=[(0,H.LI)(JSON.stringify(h)),(0,H.LI)(JSON.stringify(e))].join("."),l=n.slice(0,2);if("HS"===l)a=(0,H.LI)((0,G.w8)(d,t,i,"binary"));else if(s||"RS"===l)a=(0,H.LI)((0,H.cg)(W(d,o.As.encode(t),i)));else if("ES"===l){let e=(0,G.h1)(d,o.As.encode(t),U.Qj,i),s=e.r.padStart(64,"0"),r=e.s.padStart(64,"0");a=(0,H.LI)((0,H.FF)(s+r))}return[d,a].join(".")}},1187:(e,t,i)=>{"use strict";i.d(t,{D9:()=>p,Dj:()=>u,EZ:()=>r,GA:()=>l,LC:()=>c,RR:()=>b,Rn:()=>v,Rz:()=>a,Th:()=>g,YA:()=>n,_U:()=>f,k4:()=>d,nm:()=>o,rE:()=>m,tB:()=>s,wR:()=>k,x_:()=>y,yy:()=>w});let s=Date.now,r=()=>1e3*s(),a=s,n=()=>Math.floor(s()/1e3),o=()=>{let e=(10*r()+122192928e9).toString(16);return e.slice(7,15)+e.slice(3,7)+"1"+e.slice(0,3)+"9696"+"ff".repeat(6)},h=setTimeout,d=(e,t,i=h,r=s()+t)=>{if(t>=0x7fffffff)throw Error("setTimeout() function was called with unrealistic value of "+t.toString());let a=()=>{},n=!0,o=i(()=>{n=!0;let t=r-s();t>0?a=d(e,t,i,r):e()},t);return function(){n&&(n=!1,clearTimeout(o)),a()}};class l extends Error{constructor(){let e="timed out";super(e),this.constructor=l,this.__proto__=l.prototype,this.message=e}}let c=e=>{let t;if(!Number.isNaN(t="number"==typeof e?Math.floor(e):parseInt(e,10))&&!(t<0))try{return new Date(t).toISOString()}catch(e){return}},u=e=>{if(!("string"!=typeof e||!e||e.match(/^[0-9]+$/)||0>e.indexOf("-")||0>e.indexOf(":")))try{let t=Date.parse(e.indexOf("+")>=0||"Z"===e.slice(-1)?e:(e+"Z").replace(/\s(\d\d):/,"T$1:"));if(Number.isNaN(t))return;return t}catch(e){return}},f=e=>{if("string"==typeof e&&e){if(e.indexOf("GMT")>=0)try{return Date.parse(e)}catch(e){return}return u(e)}},p=e=>new Date(e).toUTCString(),m=(e,t="-")=>{t=t||"";let i=new Date(e),s=i.getUTCFullYear().toString(),r=i.getUTCMonth()+1,a=i.getUTCDate();return(r=r<10?"0"+r:r.toString())+t+(a=a<10?"0"+a:a.toString())+t+s},g=(e,t,i=!0)=>{t=t||"";let s=new Date(e),r=s.getUTCFullYear(),a=(i?r:r-2e3).toString(),n=s.getUTCMonth()+1,o=s.getUTCDate();return a+t+(n=n<10?"0"+n:n.toString())+t+(o=o<10?"0"+o:o.toString())},y=(e,t="")=>g(e,t,!1),v=(e,t="-")=>g(e,t,!0),b=(e,t=" ")=>{let i=new Date(e),s=i.getUTCFullYear(),r=i.getUTCMonth()+1,a=i.getUTCDate(),n=i.getUTCHours(),o=i.getUTCMinutes(),h=i.getUTCSeconds();return s+"-"+(r=r<10?"0"+r:r)+"-"+(a=a<10?"0"+a:a)+t+(n=n<10?"0"+n:n)+":"+(o=o<10?"0"+o:o)+":"+(h=h<10?"0"+h:h)},w=e=>new Promise(t=>d(t,e)),k=async(e,t)=>{let i=()=>{},s=new Promise(t=>i=d(t,e));try{return await Promise.race([t,s.then(()=>{throw new l})])}finally{i()}}},9378:(e,t,i)=>{"use strict";i.d(t,{A:()=>m,O:()=>p});var s=i(6744),r=i(5936),a=i(8370);let n=(e,t)=>e<<t|e>>>32-t>>>0,o=(e,t,i)=>e&t^~e&i,h=(e,t,i)=>e&t^e&i^t&i,d=new Uint32Array([0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0]),l=new Uint32Array(80);class c extends r.D{constructor(){super(64,20,8,!1),this.A=0|d[0],this.B=0|d[1],this.C=0|d[2],this.D=0|d[3],this.E=0|d[4]}get(){let{A:e,B:t,C:i,D:s,E:r}=this;return[e,t,i,s,r]}set(e,t,i,s,r){this.A=0|e,this.B=0|t,this.C=0|i,this.D=0|s,this.E=0|r}process(e,t){for(let i=0;i<16;i++,t+=4)l[i]=e.getUint32(t,!1);for(let e=16;e<80;e++)l[e]=n(l[e-3]^l[e-8]^l[e-14]^l[e-16],1);let{A:i,B:s,C:r,D:a,E:d}=this;for(let e=0;e<80;e++){let t,c;e<20?(t=o(s,r,a),c=0x5a827999):e<40?(t=s^r^a,c=0x6ed9eba1):e<60?(t=h(s,r,a),c=0x8f1bbcdc):(t=s^r^a,c=0xca62c1d6);let u=n(i,5)+t+d+c+l[e]|0;d=a,a=r,r=n(s,30),s=i,i=u}i=i+this.A|0,s=s+this.B|0,r=r+this.C|0,a=a+this.D|0,d=d+this.E|0,this.set(i,s,r,a,d)}roundClean(){l.fill(0)}destroy(){this.set(0,0,0,0,0),this.buffer.fill(0)}}let u=(0,a.ld)(()=>new c);var f=i(8715);function p(e){let t,i;let r=e=>parseInt(e,16);e=e.replace(" ","");let a=((i="0000000000000000")+((t=Math.floor(Math.round(new Date().getTime()/1e3)/30))<15.5?"0":"")+Math.round(t).toString(16)).slice(-i.length),n=(0,f.w8)(s.xn.decode(a),s.RG.decode(e),u,"hex"),o=r(n.substring(n.length-1)),h=(r(n.substr(2*o,8))&r("7fffffff"))+"";return h.substring(h.length-6,h.length)}let m=p},8486:(e,t,i)=>{"use strict";i.d(t,{At:()=>N,Cw:()=>I,DR:()=>D,Dj:()=>A,Et:()=>s,F7:()=>E,Fq:()=>r,Gv:()=>h,Hf:()=>l,I9:()=>q,J0:()=>P,JU:()=>g,KL:()=>c,Kg:()=>o,Pf:()=>m,Q7:()=>_,RH:()=>T,Rc:()=>V,Y2:()=>v,Y_:()=>R,_w:()=>u,cy:()=>a,d0:()=>C,dl:()=>n,fu:()=>F,gw:()=>O,hO:()=>L,lu:()=>b,mU:()=>x,nr:()=>S,pI:()=>k,q0:()=>w,uS:()=>B,w:()=>y,ww:()=>M});let s=Number.isFinite,r=Number.isInteger,a=Array.isArray,n=e=>null!=e,o=e=>"string"==typeof e,h=e=>null!==e&&"object"==typeof e,d=e=>e instanceof RegExp,l=e=>h(e)&&Object.getPrototypeOf(e)===Object.prototype&&!a(e)&&!d(e),c=e=>n(e)&&e.toString||s(e),u=(e,t)=>h(e)&&""!==e[t]&&null!==e[t]?e[t]:void 0,f=(e,t,i)=>h(e)?void 0!==e[t]&&""!==e[t]&&null!==e[t]?e[t]:""!==e[i]&&null!==e[i]?e[i]:void 0:void 0,p=(e,t)=>h(e)?e[t.find(t=>void 0!==u(e,t))]:void 0,m=e=>s(e)||o(e)&&0!==e.length?parseFloat(e):NaN,g=e=>s(e)||o(e)&&0!==e.length?Math.trunc(Number(e)):NaN,y=(e,t,i)=>{let r=m(u(e,t));return s(r)?r:i},v=(e,t,i)=>{let r=g(u(e,t));return s(r)?r:i},b=(e,t,i,r)=>{let a=m(u(e,t));return s(a)?parseInt(a*i):r},w=(e,t,i)=>{let r=m(u(e,t));return s(r)?parseInt(1e3*r):i},k=(e,t,i)=>{let s=u(e,t);return n(s)?s:i},S=(e,t,i)=>{let s=u(e,t);return c(s)?String(s):i},O=(e,t,i)=>{let s=u(e,t);return c(s)?String(s).toLowerCase():c(i)?String(i).toLowerCase():i},T=(e,t,i)=>{let s=u(e,t);return c(s)?String(s).toUpperCase():c(i)?String(i).toUpperCase():i},I=(e,t,i,r)=>{let a=m(f(e,t,i));return s(a)?a:r},x=(e,t,i,r)=>{let a=g(f(e,t,i));return s(a)?a:r},P=(e,t,i,r,a)=>{let n=m(f(e,t,i));return s(n)?parseInt(n*r):a},M=(e,t,i,r)=>{let a=m(f(e,t,i));return s(a)?parseInt(1e3*a):r},A=(e,t,i,s)=>{let r=f(e,t,i);return n(r)?r:s},C=(e,t,i,s)=>{let r=f(e,t,i);return c(r)?String(r):s},B=(e,t,i,s)=>{let r=f(e,t,i);return c(r)?String(r).toLowerCase():c(s)?String(s).toLowerCase():s},E=(e,t,i,s)=>{let r=f(e,t,i);return c(r)?String(r).toUpperCase():c(s)?String(s).toUpperCase():s},_=(e,t,i)=>{let r=m(p(e,t));return s(r)?r:i},N=(e,t,i)=>{if(void 0===e)return i;let r=g(p(e,t));return s(r)?r:i},L=(e,t,i,r)=>{let a=m(p(e,t));return s(a)?parseInt(a*i):r},R=(e,t,i)=>{let r=m(p(e,t));return s(r)?parseInt(1e3*r):i},D=(e,t,i)=>{if(void 0===e)return i;let s=p(e,t);return n(s)?s:i},V=(e,t,i)=>{if(void 0===e)return i;let s=p(e,t);return c(s)?String(s):i},q=(e,t,i)=>{let s=p(e,t);return c(s)?String(s).toLowerCase():c(i)?String(i).toLowerCase():i},F=(e,t,i)=>{let s=p(e,t);return c(s)?String(s).toUpperCase():c(i)?String(i).toUpperCase():i}},4587:(e,t,i)=>{"use strict";i.d(t,{Hk:()=>o,I3:()=>r,Pt:()=>n,TG:()=>a});class s extends Array{constructor(e){super(),Object.defineProperty(this,"maxSize",{__proto__:null,value:e,writable:!0})}clear(){this.length=0}}class r extends s{constructor(e){super(e),this.hashmap={},Object.defineProperty(this,"nestedNewUpdatesBySymbol",{__proto__:null,value:!1,writable:!0}),Object.defineProperty(this,"newUpdatesBySymbol",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"clearUpdatesBySymbol",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"allNewUpdates",{__proto__:null,value:0,writable:!0}),Object.defineProperty(this,"clearAllUpdates",{__proto__:null,value:!1,writable:!0}),Object.defineProperty(this,"hashmap",{__proto__:null,value:{},writable:!0,enumerable:!1})}getLimit(e,t){let i;return(void 0===e?(i=this.allNewUpdates,this.clearAllUpdates=!0):(void 0!==(i=this.newUpdatesBySymbol[e])&&this.nestedNewUpdatesBySymbol&&(i=i.size),this.clearUpdatesBySymbol[e]=!0),void 0===i)?t:void 0!==t?Math.min(i,t):i}append(e){this.maxSize&&this.length===this.maxSize&&this.shift(),this.push(e),this.clearAllUpdates&&(this.clearAllUpdates=!1,this.clearUpdatesBySymbol={},this.allNewUpdates=0,this.newUpdatesBySymbol={}),this.clearUpdatesBySymbol[e.symbol]&&(this.clearUpdatesBySymbol[e.symbol]=!1,this.newUpdatesBySymbol[e.symbol]=0),this.newUpdatesBySymbol[e.symbol]=(this.newUpdatesBySymbol[e.symbol]||0)+1,this.allNewUpdates=(this.allNewUpdates||0)+1}}class a extends s{constructor(e){super(e),Object.defineProperty(this,"hashmap",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"sizeTracker",{__proto__:null,value:new Set,writable:!0}),Object.defineProperty(this,"newUpdates",{__proto__:null,value:0,writable:!0}),Object.defineProperty(this,"clearUpdates",{__proto__:null,value:!1,writable:!0})}getLimit(e,t){return(this.clearUpdates=!0,void 0===t)?this.newUpdates:Math.min(this.newUpdates,t)}append(e){if(e[0]in this.hashmap){let t=this.hashmap[e[0]];if(t!==e)for(let i in e)t[i]=e[i]}else{if(this.hashmap[e[0]]=e,this.maxSize&&this.length===this.maxSize){let e=this.shift();delete this.hashmap[e[0]]}this.push(e)}this.clearUpdates&&(this.clearUpdates=!1,this.sizeTracker.clear()),this.sizeTracker.add(e[0]),this.newUpdates=this.sizeTracker.size}}class n extends r{constructor(e){super(e),this.nestedNewUpdatesBySymbol=!0}append(e){let t=this.hashmap[e.symbol]=this.hashmap[e.symbol]||{};if(e.id in t){let i=t[e.id];if(i!==e)for(let t in e)i[t]=e[t];e=i;let s=this.findIndex(t=>t.id===e.id);this.splice(s,1)}else t[e.id]=e;if(this.maxSize&&this.length===this.maxSize){let e=this.shift();delete this.hashmap[e.symbol][e.id]}this.push(e),this.clearAllUpdates&&(this.clearAllUpdates=!1,this.clearUpdatesBySymbol={},this.allNewUpdates=0,this.newUpdatesBySymbol={}),void 0===this.newUpdatesBySymbol[e.symbol]&&(this.newUpdatesBySymbol[e.symbol]=new Set),this.clearUpdatesBySymbol[e.symbol]&&(this.clearUpdatesBySymbol[e.symbol]=!1,this.newUpdatesBySymbol[e.symbol].clear());let i=this.newUpdatesBySymbol[e.symbol],s=i.size;i.add(e.id);let r=i.size;this.allNewUpdates=(this.allNewUpdates||0)+(r-s)}}class o extends r{constructor(){super(),this.nestedNewUpdatesBySymbol=!0,Object.defineProperty(this,"hashmap",{__proto__:null,value:{},writable:!0})}append(e){let t=this.hashmap[e.symbol]=this.hashmap[e.symbol]||{};if(e.side in t){let i=t[e.side];if(i!==e)for(let t in e)i[t]=e[t];e=i;let s=this.findIndex(t=>t.symbol===e.symbol&&t.side===e.side);this.splice(s,1)}else t[e.side]=e;this.push(e),this.clearAllUpdates&&(this.clearAllUpdates=!1,this.clearUpdatesBySymbol={},this.allNewUpdates=0,this.newUpdatesBySymbol={}),void 0===this.newUpdatesBySymbol[e.symbol]&&(this.newUpdatesBySymbol[e.symbol]=new Set),this.clearUpdatesBySymbol[e.symbol]&&(this.clearUpdatesBySymbol[e.symbol]=!1,this.newUpdatesBySymbol[e.symbol].clear());let i=this.newUpdatesBySymbol[e.symbol],s=i.size;i.add(e.side);let r=i.size;this.allNewUpdates=(this.allNewUpdates||0)+(r-s)}}},5979:(e,t,i)=>{"use strict";var s;i.d(t,{K:()=>h});let r=new WeakMap,a=()=>{};class n{constructor(e){this.subscribers=[],this.settlement=null,this[s]="Unpromise","function"==typeof e?this.promise=new Promise(e):this.promise=e;let t=this.promise.then(e=>{let{subscribers:t}=this;this.subscribers=null,this.settlement={status:"fulfilled",value:e},t?.forEach(({resolve:t})=>{t(e)})});"catch"in t&&t.catch(e=>{let{subscribers:t}=this;this.subscribers=null,this.settlement={status:"rejected",reason:e},t?.forEach(({reject:t})=>{t(e)})})}subscribe(){let e,t;let{settlement:i}=this;if(null===i){let i,s;if(null===this.subscribers)throw Error("Unpromise settled but still has subscribers");let r={promise:new Promise((e,t)=>{i=e,s=t}),resolve:i,reject:s};this.subscribers=[...this.subscribers,r],e=r.promise,t=()=>{null!==this.subscribers&&(this.subscribers=function(e,t){let i=e.indexOf(t);return -1!==i?[...e.slice(0,i),...e.slice(i+1)]:e}(this.subscribers,r))}}else{let{status:s}=i;e="fulfilled"===s?Promise.resolve(i.value):Promise.reject(i.reason),t=a}return Object.assign(e,{unsubscribe:t})}then(e,t){let i=this.subscribe(),{unsubscribe:s}=i;return Object.assign(i.then(e,t),{unsubscribe:s})}catch(e){let t=this.subscribe(),{unsubscribe:i}=t;return Object.assign(t.catch(e),{unsubscribe:i})}finally(e){let t=this.subscribe(),{unsubscribe:i}=t;return Object.assign(t.finally(e),{unsubscribe:i})}static proxy(e){let t=n.getSubscribablePromise(e);return void 0!==t?t:n.createSubscribablePromise(e)}static createSubscribablePromise(e){let t=new n(e);return r.set(e,t),r.set(t,t),t}static getSubscribablePromise(e){return r.get(e)}static resolve(e){let t="object"==typeof e&&null!==e&&"then"in e&&"function"==typeof e.then?e:Promise.resolve(e);return n.proxy(t).subscribe()}static async any(e){let t=(Array.isArray(e)?e:[...e]).map(n.resolve);try{return await Promise.any(t)}finally{t.forEach(({unsubscribe:e})=>{e()})}}static async race(e){let t=(Array.isArray(e)?e:[...e]).map(n.resolve);try{return await Promise.race(t)}finally{t.forEach(({unsubscribe:e})=>{e()})}}static async raceReferences(e){let t=e.map(o);try{return await Promise.race(t)}finally{for(let e of t)e.unsubscribe()}}}function o(e){return n.proxy(e).then(()=>[e])}function h(){let e,t;let i=new Promise((i,s)=>{e=i,t=s});return i.resolve=function(){setTimeout(()=>{e.apply(this,arguments)})},i.reject=function(){setTimeout(()=>{t.apply(this,arguments)})},i}s=Symbol.toStringTag,h.race=e=>(function(e){let t=h();return e.then(t.resolve,t.reject),t})(n.race(e))},328:(e,t,i)=>{"use strict";i.d(t,{Mi:()=>n,if:()=>o,nS:()=>h});var s=i(1187),r=i(575),a=i(44);class n{constructor(e={},t){this.cache=[],Object.defineProperty(this,"cache",{__proto__:null,value:[],writable:!0,enumerable:!1}),t=t||Number.MAX_SAFE_INTEGER;let i=Object.entries((0,r.X$)({bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0,symbol:void 0},e));for(let e=0;e<i.length;e++){let[t,s]=i[e];this[t]=s}"Array"===this.asks.constructor.name&&(this.asks=new a.$w(this.asks,t)),"Array"===this.bids.constructor.name&&(this.bids=new a.PB(this.bids,t)),this.timestamp&&(this.datetime=(0,s.LC)(this.timestamp))}limit(){return this.asks.limit(),this.bids.limit(),this}update(e){return void 0!==e.nonce&&void 0!==this.nonce&&e.nonce<=this.nonce?this:(this.nonce=e.nonce,this.timestamp=e.timestamp,this.datetime=(0,s.LC)(this.timestamp),this.reset(e))}reset(e={}){if(this.asks.index.fill(Number.MAX_VALUE),this.asks.length=0,e.asks)for(let t=0;t<e.asks.length;t++)this.asks.storeArray(e.asks[t]);if(this.bids.index.fill(Number.MAX_VALUE),this.bids.length=0,e.bids)for(let t=0;t<e.bids.length;t++)this.bids.storeArray(e.bids[t]);return this.nonce=e.nonce,this.timestamp=e.timestamp,this.datetime=(0,s.LC)(this.timestamp),this.symbol=e.symbol,this}}class o extends n{constructor(e={},t){super((0,r.X$)(e,{asks:new a.f_(e.asks||[],t),bids:new a.jR(e.bids||[],t)}))}}class h extends n{constructor(e={},t){super((0,r.X$)(e,{asks:new a.o5(e.asks||[],t),bids:new a.eB(e.bids||[],t)}))}}},44:(e,t,i)=>{"use strict";function s(e,t){let i=0,s=e.length-1;for(;i<=s;){let r=i+s>>>1;e[r]-t<0?i=r+1:s=r-1}return i}i.d(t,{$w:()=>h,PB:()=>d,eB:()=>f,f_:()=>l,jR:()=>c,o5:()=>u});let r=new Float64Array(Array(1024).fill(Number.MAX_VALUE));class a extends Array{constructor(e=[],t){super(),Object.defineProperty(this,"index",{__proto__:null,value:new Float64Array(r),writable:!0}),Object.defineProperty(this,"depth",{__proto__:null,value:t||Number.MAX_SAFE_INTEGER,writable:!0}),this.length=0;for(let t=0;t<e.length;t++)this.storeArray(e[t].slice())}storeArray(e){let t=e[0],i=e[1],r=this.side?-t:t,a=s(this.index,r);if(i){if(this.index[a]===r)this[a][1]=i;else if(this.length++,this.index.copyWithin(a+1,a,this.index.length),this.index[a]=r,this.copyWithin(a+1,a,this.length),this[a]=e,this.length>this.index.length-1){let e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else this.index[a]===r&&(this.index.copyWithin(a,a+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(a,a+1,this.length),this.length--)}store(e,t){this.storeArray([e,t])}limit(){if(this.length>this.depth){for(let e=this.depth;e<this.length;e++)this.index[e]=Number.MAX_VALUE;this.length=this.depth}}}class n extends a{store(e,t){throw Error("CountedOrderBookSide.store() is not supported, use storeArray([price, size, count]) instead")}storeArray(e){let t=e[0],i=e[1],r=e[2],a=this.side?-t:t,n=s(this.index,a);if(i&&r){if(this.index[n]===a){let e=this[n];e[1]=i,e[2]=r}else if(this.length++,this.index.copyWithin(n+1,n,this.index.length),this.index[n]=a,this.copyWithin(n+1,n,this.length),this[n]=e,this.length>this.index.length-1){let e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else this.index[n]===a&&(this.index.copyWithin(n,n+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(n,n+1,this.length),this.length--)}}class o extends Array{constructor(e=[],t=Number.MAX_SAFE_INTEGER){super(e.length),Object.defineProperty(this,"hashmap",{__proto__:null,value:new Map,writable:!0}),Object.defineProperty(this,"index",{__proto__:null,value:new Float64Array(r),writable:!0}),Object.defineProperty(this,"depth",{__proto__:null,value:t||Number.MAX_SAFE_INTEGER,writable:!0});for(let t=0;t<e.length;t++)this.length=t,this.storeArray(e[t].slice())}store(e,t){throw Error("IndexedOrderBook.store() is not supported, use storeArray([price, size, id]) instead")}storeArray(e){let t;let i=e[0],r=e[1],a=e[2];if(t=void 0!==i?this.side?-i:i:void 0,r){if(this.hashmap.has(a)){let i=this.hashmap.get(a);if(t=t||i,e[0]=Math.abs(t),t===i){let i=s(this.index,t);for(;this[i][2]!==a;)i++;this.index[i]=t,this[i]=e;return}{let e=s(this.index,i);for(;this[e][2]!==a;)e++;this.index.copyWithin(e,e+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(e,e+1,this.length),this.length--}}this.hashmap.set(a,t);let i=s(this.index,t);for(;i<this.length&&this.index[i]===t&&this[i][2]<a;)i++;if(this.length++,this.index.copyWithin(i+1,i,this.index.length),this.index[i]=t,this.copyWithin(i+1,i,this.length),this[i]=e,this.length>this.index.length-1){let e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else if(this.hashmap.has(a)){let e=this.hashmap.get(a),t=s(this.index,e);for(;this[t][2]!==a;)t++;this.index.copyWithin(t,t+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(t,t+1,this.length),this.length--,this.hashmap.delete(a)}}limit(){if(this.length>this.depth){for(let e=this.depth;e<this.length;e++)this.hashmap.delete(this.index[e]),this.index[e]=Number.MAX_VALUE;this.length=this.depth}}}class h extends a{get side(){return!1}}class d extends a{get side(){return!0}}class l extends n{get side(){return!1}}class c extends n{get side(){return!0}}class u extends o{get side(){return!1}}class f extends o{get side(){return!0}}},2074:(e,t,i)=>{"use strict";i.d(t,{A:()=>eu});var s=i(6735),r=i(8119),a={},n=function(e,t,i,s,r){var n=new Worker(a[t]||(a[t]=URL.createObjectURL(new Blob([e+';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'],{type:"text/javascript"}))));return n.onmessage=function(e){var t=e.data,i=t.$e$;if(i){var s=Error(i[0]);s.code=i[1],s.stack=i[2],r(s,null)}else r(null,t)},n.postMessage(i,s),n},o=Uint8Array,h=Uint16Array,d=Uint32Array,l=new o([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),c=new o([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),u=new o([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),f=function(e,t){for(var i=new h(31),s=0;s<31;++s)i[s]=t+=1<<e[s-1];for(var r=new d(i[30]),s=1;s<30;++s)for(var a=i[s];a<i[s+1];++a)r[a]=a-i[s]<<5|s;return[i,r]},p=f(l,2),m=p[0],g=p[1];m[28]=258,g[258]=28;for(var y=f(c,0),v=y[0],b=y[1],w=new h(32768),k=0;k<32768;++k){var S=(43690&k)>>>1|(21845&k)<<1;S=(61680&(S=(52428&S)>>>2|(13107&S)<<2))>>>4|(3855&S)<<4,w[k]=((65280&S)>>>8|(255&S)<<8)>>>1}for(var O=function(e,t,i){for(var s,r=e.length,a=0,n=new h(t);a<r;++a)e[a]&&++n[e[a]-1];var o=new h(t);for(a=0;a<t;++a)o[a]=o[a-1]+n[a-1]<<1;if(i){s=new h(1<<t);var d=15-t;for(a=0;a<r;++a)if(e[a])for(var l=a<<4|e[a],c=t-e[a],u=o[e[a]-1]++<<c,f=u|(1<<c)-1;u<=f;++u)s[w[u]>>>d]=l}else for(a=0,s=new h(r);a<r;++a)e[a]&&(s[a]=w[o[e[a]-1]++]>>>15-e[a]);return s},T=new o(288),k=0;k<144;++k)T[k]=8;for(var k=144;k<256;++k)T[k]=9;for(var k=256;k<280;++k)T[k]=7;for(var k=280;k<288;++k)T[k]=8;for(var I=new o(32),k=0;k<32;++k)I[k]=5;var x=O(T,9,1),P=O(I,5,1),M=function(e){for(var t=e[0],i=1;i<e.length;++i)e[i]>t&&(t=e[i]);return t},A=function(e,t,i){var s=t/8|0;return(e[s]|e[s+1]<<8)>>(7&t)&i},C=function(e,t){var i=t/8|0;return(e[i]|e[i+1]<<8|e[i+2]<<16)>>(7&t)},B=function(e){return(e+7)/8|0},E=function(e,t,i){(null==t||t<0)&&(t=0),(null==i||i>e.length)&&(i=e.length);var s=new(2==e.BYTES_PER_ELEMENT?h:4==e.BYTES_PER_ELEMENT?d:o)(i-t);return s.set(e.subarray(t,i)),s},_=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],N=function(e,t,i){var s=Error(t||_[e]);if(s.code=e,Error.captureStackTrace&&Error.captureStackTrace(s,N),!i)throw s;return s},L=function(e,t,i){var s=e.length;if(!s||i&&i.f&&!i.l)return t||new o(0);var r=!t||i,a=!i||i.i;i||(i={}),t||(t=new o(3*s));var n=function(e){var i=t.length;if(e>i){var s=new o(Math.max(2*i,e));s.set(t),t=s}},h=i.f||0,d=i.p||0,f=i.b||0,p=i.l,g=i.d,y=i.m,b=i.n,w=8*s;do{if(!p){h=A(e,d,1);var k=A(e,d+1,3);if(d+=3,k){if(1==k)p=x,g=P,y=9,b=5;else if(2==k){var S=A(e,d,31)+257,T=A(e,d+10,15)+4,I=S+A(e,d+5,31)+1;d+=14;for(var _=new o(I),L=new o(19),R=0;R<T;++R)L[u[R]]=A(e,d+3*R,7);d+=3*T;for(var D=M(L),V=(1<<D)-1,q=O(L,D,1),R=0;R<I;){var F=q[A(e,d,V)];d+=15&F;var H=F>>>4;if(H<16)_[R++]=H;else{var G=0,U=0;for(16==H?(U=3+A(e,d,3),d+=2,G=_[R-1]):17==H?(U=3+A(e,d,7),d+=3):18==H&&(U=11+A(e,d,127),d+=7);U--;)_[R++]=G}}var W=_.subarray(0,S),j=_.subarray(S);y=M(W),b=M(j),p=O(W,y,1),g=O(j,b,1)}else N(1)}else{var H=B(d)+4,K=e[H-4]|e[H-3]<<8,z=H+K;if(z>s){a&&N(0);break}r&&n(f+K),t.set(e.subarray(H,z),f),i.b=f+=K,i.p=d=8*z,i.f=h;continue}if(d>w){a&&N(0);break}}r&&n(f+131072);for(var Y=(1<<y)-1,X=(1<<b)-1,$=d;;$=d){var G=p[C(e,d)&Y],Q=G>>>4;if((d+=15&G)>w){a&&N(0);break}if(G||N(2),Q<256)t[f++]=Q;else if(256==Q){$=d,p=null;break}else{var Z=Q-254;if(Q>264){var R=Q-257,J=l[R];Z=A(e,d,(1<<J)-1)+m[R],d+=J}var ee=g[C(e,d)&X],et=ee>>>4;ee||N(3),d+=15&ee;var j=v[et];if(et>3){var J=c[et];j+=C(e,d)&(1<<J)-1,d+=J}if(d>w){a&&N(0);break}r&&n(f+131072);for(var ei=f+Z;f<ei;f+=4)t[f]=t[f-j],t[f+1]=t[f+1-j],t[f+2]=t[f+2-j],t[f+3]=t[f+3-j];f=ei}}i.l=p,i.p=$,i.b=f,i.f=h,p&&(h=1,i.m=y,i.d=g,i.n=b)}while(!h);return f==t.length?t:E(t,0,f)},R=function(e,t,i){i<<=7&t;var s=t/8|0;e[s]|=i,e[s+1]|=i>>>8},D=function(e,t,i){i<<=7&t;var s=t/8|0;e[s]|=i,e[s+1]|=i>>>8,e[s+2]|=i>>>16},V=function(e,t){for(var i=[],s=0;s<e.length;++s)e[s]&&i.push({s:s,f:e[s]});var r=i.length,a=i.slice();if(!r)return[j,0];if(1==r){var n=new o(i[0].s+1);return n[i[0].s]=1,[n,1]}i.sort(function(e,t){return e.f-t.f}),i.push({s:-1,f:25001});var d=i[0],l=i[1],c=0,u=1,f=2;for(i[0]={s:-1,f:d.f+l.f,l:d,r:l};u!=r-1;)d=i[i[c].f<i[f].f?c++:f++],l=i[c!=u&&i[c].f<i[f].f?c++:f++],i[u++]={s:-1,f:d.f+l.f,l:d,r:l};for(var p=a[0].s,s=1;s<r;++s)a[s].s>p&&(p=a[s].s);var m=new h(p+1),g=q(i[u-1],m,0);if(g>t){var s=0,y=0,v=g-t,b=1<<v;for(a.sort(function(e,t){return m[t.s]-m[e.s]||e.f-t.f});s<r;++s){var w=a[s].s;if(m[w]>t)y+=b-(1<<g-m[w]),m[w]=t;else break}for(y>>>=v;y>0;){var k=a[s].s;m[k]<t?y-=1<<t-m[k]++-1:++s}for(;s>=0&&y;--s){var S=a[s].s;m[S]==t&&(--m[S],++y)}g=t}return[new o(m),g]},q=function(e,t,i){return -1==e.s?Math.max(q(e.l,t,i+1),q(e.r,t,i+1)):t[e.s]=i},F=function(e){for(var t=e.length;t&&!e[--t];);for(var i=new h(++t),s=0,r=e[0],a=1,n=function(e){i[s++]=e},o=1;o<=t;++o)if(e[o]==r&&o!=t)++a;else{if(!r&&a>2){for(;a>138;a-=138)n(32754);a>2&&(n(a>10?a-11<<5|28690:a-3<<5|12305),a=0)}else if(a>3){for(n(r),--a;a>6;a-=6)n(8304);a>2&&(n(a-3<<5|8208),a=0)}for(;a--;)n(r);a=1,r=e[o]}return[i.subarray(0,s),t]},H=function(e,t){for(var i=0,s=0;s<t.length;++s)i+=e[s]*t[s];return i},G=function(e,t,i){var s=i.length,r=B(t+2);e[r]=255&s,e[r+1]=s>>>8,e[r+2]=255^e[r],e[r+3]=255^e[r+1];for(var a=0;a<s;++a)e[r+a+4]=i[a];return(r+4+s)*8},U=function(e,t,i,s,r,a,n,o,d,f,p){R(t,p++,i),++r[256];for(var m,g,y,v,b=V(r,15),w=b[0],k=b[1],S=V(a,15),x=S[0],P=S[1],M=F(w),A=M[0],C=M[1],B=F(x),E=B[0],_=B[1],N=new h(19),L=0;L<A.length;++L)N[31&A[L]]++;for(var L=0;L<E.length;++L)N[31&E[L]]++;for(var q=V(N,7),U=q[0],W=q[1],j=19;j>4&&!U[u[j-1]];--j);var K=f+5<<3,z=H(r,T)+H(a,I)+n,Y=H(r,w)+H(a,x)+n+14+3*j+H(N,U)+(2*N[16]+3*N[17]+7*N[18]);if(K<=z&&K<=Y)return G(t,p,e.subarray(d,d+f));if(R(t,p,1+(Y<z)),p+=2,Y<z){m=O(w,k,0),g=w,y=O(x,P,0),v=x;var X=O(U,W,0);R(t,p,C-257),R(t,p+5,_-1),R(t,p+10,j-4),p+=14;for(var L=0;L<j;++L)R(t,p+3*L,U[u[L]]);p+=3*j;for(var $=[A,E],Q=0;Q<2;++Q)for(var Z=$[Q],L=0;L<Z.length;++L){var J=31&Z[L];R(t,p,X[J]),p+=U[J],J>15&&(R(t,p,Z[L]>>>5&127),p+=Z[L]>>>12)}}else m=null,g=T,y=null,v=I;for(var L=0;L<o;++L)if(s[L]>255){var J=s[L]>>>18&31;D(t,p,m[J+257]),p+=g[J+257],J>7&&(R(t,p,s[L]>>>23&31),p+=l[J]);var ee=31&s[L];D(t,p,y[ee]),p+=v[ee],ee>3&&(D(t,p,s[L]>>>5&8191),p+=c[ee])}else D(t,p,m[s[L]]),p+=g[s[L]];return D(t,p,m[256]),p+g[256]},W=new d([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),j=new o(0),K=function(e,t,i,s,r,a){var n=e.length,u=new o(s+n+5*(1+Math.ceil(n/7e3))+r),f=u.subarray(s,u.length-r),p=0;if(!t||n<8)for(var m=0;m<=n;m+=65535){var y=m+65535;y>=n&&(f[p>>3]=a),p=G(f,p+1,e.subarray(m,y))}else{for(var v=W[t-1],w=v>>>13,k=8191&v,S=(1<<i)-1,O=new h(32768),T=new h(S+1),I=Math.ceil(i/3),x=2*I,P=function(t){return(e[t]^e[t+1]<<I^e[t+2]<<x)&S},M=new d(25e3),A=new h(288),C=new h(32),_=0,N=0,m=0,L=0,R=0,D=0;m<n;++m){var V=P(m),q=32767&m,F=T[V];if(O[q]=F,T[V]=q,R<=m){var H=n-m;if((_>7e3||L>24576)&&H>423){p=U(e,f,0,M,A,C,N,L,D,m-D,p),L=_=N=0,D=m;for(var K=0;K<286;++K)A[K]=0;for(var K=0;K<30;++K)C[K]=0}var z=2,Y=0,X=k,$=q-F&32767;if(H>2&&V==P(m-$))for(var Q=Math.min(w,H)-1,Z=Math.min(32767,m),J=Math.min(258,H);$<=Z&&--X&&q!=F;){if(e[m+z]==e[m+z-$]){for(var ee=0;ee<J&&e[m+ee]==e[m+ee-$];++ee);if(ee>z){if(z=ee,Y=$,ee>Q)break;for(var et=Math.min($,ee-2),ei=0,K=0;K<et;++K){var es=m-$+K+32768&32767,er=O[es],ea=es-er+32768&32767;ea>ei&&(ei=ea,F=es)}}}F=O[q=F],$+=q-F+32768&32767}if(Y){M[L++]=0x10000000|g[z]<<18|b[Y];var en=31&g[z],eo=31&b[Y];N+=l[en]+c[eo],++A[257+en],++C[eo],R=m+z,++_}else M[L++]=e[m],++A[e[m]]}}p=U(e,f,a,M,A,C,N,L,D,m-D,p),!a&&7&p&&(p=G(f,p+1,j))}return E(u,0,s+B(p)+r)},z=function(e,t){var i={};for(var s in e)i[s]=e[s];for(var s in t)i[s]=t[s];return i},Y=function(e,t,i){for(var s=e(),r=e.toString(),a=r.slice(r.indexOf("[")+1,r.lastIndexOf("]")).replace(/\s+/g,"").split(","),n=0;n<s.length;++n){var o=s[n],h=a[n];if("function"==typeof o){t+=";"+h+"=";var d=o.toString();if(o.prototype){if(-1!=d.indexOf("[native code]")){var l=d.indexOf(" ",8)+1;t+=d.slice(l,d.indexOf("(",l))}else for(var c in t+=d,o.prototype)t+=";"+h+".prototype."+c+"="+o.prototype[c].toString()}else t+=d}else i[h]=o}return[t,i]},X=function(e){var t=[];for(var i in e)e[i].buffer&&t.push((e[i]=new e[i].constructor(e[i])).buffer);return t},$=function(e,t,i,s){if(!null[i]){for(var r,a="",o={},h=e.length-1,d=0;d<h;++d)a=(r=Y(e[d],a,o))[0],o=r[1];null[i]=Y(e[h],a,o)}var l=z({},null[i][1]);return n(null[i][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+t.toString()+"}",i,l,X(l),s)},Q=function(e){return postMessage(e,[e.buffer])},Z=function(e){return e&&e.size&&new o(e.size)},J=function(e,t){return e[t]|e[t+1]<<8},ee=function(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0},et=function(e,t){return ee(e,t)+0x100000000*ee(e,t+4)},ei=function(e,t,i){for(;i;++t)e[t]=i,i>>>=8},es=function(e){(31!=e[0]||139!=e[1]||8!=e[2])&&N(6,"invalid gzip data");var t=e[3],i=10;4&t&&(i+=e[10]|(e[11]<<8)+2);for(var s=(t>>3&1)+(t>>4&1);s>0;s-=!e[i++]);return i+(2&t)},er=function(e){var t=e.length;return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0};function ea(e,t){return L(e,t)}var en="undefined"!=typeof TextDecoder&&new TextDecoder;try{en.decode(j,{stream:!0})}catch(e){}var eo=("function"==typeof queueMicrotask?queueMicrotask:"function"==typeof setTimeout&&setTimeout,i(5979)),eh=i(7411),ed=i(6744);class el{constructor(e,t,i,s,r,a={}){this.useMessageQueue=!1,this.verbose=!1,Object.assign(this,(0,eh.deepExtend)({url:e,onMessageCallback:t,onErrorCallback:i,onCloseCallback:s,onConnectedCallback:r,verbose:!1,protocols:void 0,options:void 0,futures:{},subscriptions:{},rejections:{},messageQueue:{},useMessageQueue:!1,connected:void 0,error:void 0,connectionStarted:void 0,connectionEstablished:void 0,isConnected:!1,connectionTimer:void 0,connectionTimeout:1e4,pingInterval:void 0,ping:void 0,keepAlive:3e4,maxPingPongMisses:2,connection:void 0,startedConnecting:!1,gunzip:!1,inflate:!1},a)),this.connected=(0,eo.K)()}future(e){e in this.futures||(this.futures[e]=(0,eo.K)());let t=this.futures[e];if(e in this.rejections)return t.reject(this.rejections[e]),delete this.rejections[e],delete this.messageQueue[e],t;if(this.useMessageQueue){let i=this.messageQueue[e];i&&i.length&&(t.resolve(i.shift()),delete this.futures[e])}return t}resolve(e,t){if(this.verbose&&void 0===t&&this.log(new Date,"resolve received undefined messageHash"),!0===this.useMessageQueue){t in this.messageQueue||(this.messageQueue[t]=[]);let i=this.messageQueue[t];for(i.push(e);i.length>10;)i.shift();void 0!==t&&t in this.futures&&(this.futures[t].resolve(i.shift()),delete this.futures[t])}else t in this.futures&&(this.futures[t].resolve(e),delete this.futures[t]);return e}reject(e,t){if(t)t in this.futures?(this.futures[t].reject(e),delete this.futures[t]):this.rejections[t]=e;else{let t=Object.keys(this.futures);for(let i=0;i<t.length;i++)this.reject(e,t[i])}return e}log(...e){console.log(...e)}connect(e=0){throw new r.NotSupported("connect() not implemented yet")}isOpen(){throw new r.NotSupported("isOpen() not implemented yet")}reset(e){this.clearConnectionTimeout(),this.clearPingInterval(),this.messageQueue={},this.reject(e)}onConnectionTimeout(){if(!this.isOpen()){let e=new r.RequestTimeout("Connection to "+this.url+" failed due to a connection timeout");this.onError(e),this.connection.close(1006)}}setConnectionTimeout(){if(this.connectionTimeout){let e=this.onConnectionTimeout.bind(this);this.connectionTimer=setTimeout(e,this.connectionTimeout)}}clearConnectionTimeout(){this.connectionTimer&&(this.connectionTimer=clearTimeout(this.connectionTimer))}setPingInterval(){if(this.keepAlive){let e=this.onPingInterval.bind(this);this.pingInterval=setInterval(e,this.keepAlive)}}clearPingInterval(){this.pingInterval&&(this.pingInterval=clearInterval(this.pingInterval))}onPingInterval(){if(this.keepAlive&&this.isOpen()){let e=(0,eh.milliseconds)();if(this.lastPong=this.lastPong||e,this.lastPong+this.keepAlive*this.maxPingPongMisses<e)this.onError(new r.RequestTimeout("Connection to "+this.url+" timed out due to a ping-pong keepalive missing on time"));else{let t;this.ping&&(t=this.ping(this)),t?this.send(t).catch(e=>{this.onError(e)}):eh.isNode?this.connection.ping():this.lastPong=e}}}onOpen(){this.verbose&&this.log(new Date,"onOpen"),this.connectionEstablished=(0,eh.milliseconds)(),this.isConnected=!0,this.connected.resolve(this.url),this.clearConnectionTimeout(),this.setPingInterval(),this.onConnectedCallback(this)}onPing(){this.verbose&&this.log(new Date,"onPing")}onPong(){this.lastPong=(0,eh.milliseconds)(),this.verbose&&this.log(new Date,"onPong")}onError(e){this.verbose&&this.log(new Date,"onError",e.message),e instanceof r.BaseError||(e=new r.NetworkError(e.message)),this.error=e,this.reset(this.error),this.onErrorCallback(this,this.error)}onClose(e){this.verbose&&this.log(new Date,"onClose",e),this.error||this.reset(new r.NetworkError("connection closed by remote server, closing code "+String(e.code))),this.error instanceof r.ExchangeClosedByUser&&this.reset(this.error),void 0!==this.disconnected&&this.disconnected.resolve(!0),this.onCloseCallback(this,e)}onUpgrade(e){this.verbose&&this.log(new Date,"onUpgrade")}async send(e){this.verbose&&this.log(new Date,"sending",e),e="string"==typeof e?e:JSON.stringify(e);let t=(0,eo.K)();return eh.isNode?this.connection.send(e,{},function(e){e?t.reject(e):t.resolve(null)}):(this.connection.send(e),t.resolve(null)),t}close(){throw new r.NotSupported("close() not implemented yet")}onMessage(e){let t,i=e.data;if("string"!=typeof i){if(this.gunzip||this.inflate){if(t=new Uint8Array(i.buffer.slice(i.byteOffset,i.byteOffset+i.byteLength)),this.gunzip){var s;t=L((s=t).subarray(es(s),-8),new o(er(s)))}else this.inflate&&(t=L(t,void 0));i=ed.As.encode(t)}else i=i.toString()}try{(0,eh.isJsonEncodedObject)(i)&&(i=JSON.parse(i.replace(/:(\d{15,}),/g,':"$1",'))),this.verbose&&this.log(new Date,"onMessage",i)}catch(e){this.log(new Date,"onMessage JSON.parse",e)}try{this.onMessageCallback(this,i)}catch(e){this.reject(e)}}}let ec=eh.isNode||!(0,eh.selfIsDefined)()?s:self.WebSocket;class eu extends el{constructor(){super(...arguments),this.startedConnecting=!1}createConnection(){this.verbose&&this.log(new Date,"connecting to",this.url),this.connectionStarted=(0,eh.milliseconds)(),this.setConnectionTimeout(),eh.isNode?this.connection=new ec(this.url,this.protocols,this.options):this.connection=new ec(this.url,this.protocols),this.connection.onopen=this.onOpen.bind(this),this.connection.onmessage=this.onMessage.bind(this),this.connection.onerror=this.onError.bind(this),this.connection.onclose=this.onClose.bind(this),eh.isNode&&this.connection.on("ping",this.onPing.bind(this)).on("pong",this.onPong.bind(this)).on("upgrade",this.onUpgrade.bind(this))}connect(e=0){return this.startedConnecting||(this.startedConnecting=!0,e?(0,eh.sleep)(e).then(this.createConnection.bind(this)):this.createConnection()),this.connected}isOpen(){return this.connection.readyState===ec.OPEN}close(){return this.connection instanceof ec&&(void 0===this.disconnected&&(this.disconnected=(0,eo.K)()),this.connection.close()),this.disconnected}}},5557:(e,t,i)=>{"use strict";i.d(t,{bv:()=>l});var s=i(1672),r=i(7380);let a=BigInt(0),n=BigInt(36);function o(e){let t=(e=e.toLowerCase()).substring(2).split(""),i=new Uint8Array(40);for(let e=0;e<40;e++)i[e]=t[e].charCodeAt(0);let r=(0,s.lY)(i);for(let e=0;e<40;e+=2)r[e>>1]>>4>=8&&(t[e]=t[e].toUpperCase()),(15&r[e>>1])>=8&&(t[e+1]=t[e+1].toUpperCase());return"0x"+t.join("")}let h={};for(let e=0;e<10;e++)h[String(e)]=String(e);for(let e=0;e<26;e++)h[String.fromCharCode(65+e)]=String(10+e);let d=function(){let e={};for(let t=0;t<36;t++)e["0123456789abcdefghijklmnopqrstuvwxyz"[t]]=BigInt(t);return e}();function l(e){if((0,r.MR)("string"==typeof e,"invalid address","address",e),e.match(/^(0x)?[0-9a-fA-F]{40}$/)){e.startsWith("0x")||(e="0x"+e);let t=o(e);return(0,r.MR)(!e.match(/([A-F].*[a-f])|([a-f].*[A-F])/)||t===e,"bad address checksum","address",e),t}if(e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){(0,r.MR)(e.substring(2,4)===function(e){let t=(e=(e=e.toUpperCase()).substring(4)+e.substring(0,2)+"00").split("").map(e=>h[e]).join("");for(;t.length>=15;){let e=t.substring(0,15);t=parseInt(e,10)%97+t.substring(e.length)}let i=String(98-parseInt(t,10)%97);for(;i.length<2;)i="0"+i;return i}(e),"bad icap checksum","address",e);let t=(function(e){e=e.toLowerCase();let t=a;for(let i=0;i<e.length;i++)t=t*n+d[e[i]];return t})(e.substring(4)).toString(16);for(;t.length<40;)t="0"+t;return o("0x"+t)}(0,r.MR)(!1,"invalid address","address",e)}},329:(e,t,i)=>{"use strict";i.d(t,{zl:()=>P});var s,r,a,n,o,h=i(7380),d=i(5557),l=i(7411),c=function(e,t,i,s,r){if("m"===s)throw TypeError("Private method is not writable");if("a"===s&&!r)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?r.call(e,i):r?r.value=i:t.set(e,i),i},u=function(e,t,i,s){if("a"===i&&!s)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?s:"a"===i?s.call(e):s?s.value:t.get(e)};let{base16ToBinary:f}=l,p=new Uint8Array(32);p.fill(0);let m=BigInt(-1),g=BigInt(0),y=BigInt(1),v=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),b=(0,h.up)(y,32),w=(0,h.up)(g,32),k={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},S=["name","version","chainId","verifyingContract","salt"];function O(e){return function(t){return(0,h.MR)("string"==typeof t,`invalid domain value for ${JSON.stringify(e)}`,`domain.${e}`,t),t}}let T={name:O("name"),version:O("version"),chainId:function(e){let t=(0,h.Ab)(e,"domain.chainId");return((0,h.MR)(t>=0,"invalid chain ID","domain.chainId",e),Number.isSafeInteger(t))?Number(t):(0,h.nD)(t)},verifyingContract:function(e){try{return(0,d.bv)(e).toLowerCase()}catch(e){}(0,h.MR)(!1,'invalid domain value "verifyingContract"',"domain.verifyingContract",e)},salt:function(e){let t=(0,h.q5)(e,"domain.salt");return(0,h.MR)(32===t.length,'invalid domain value "salt"',"domain.salt",e),(0,h.c$)(t)}};function I(e){{let t=e.match(/^(u?)int(\d*)$/);if(t){let i=""===t[1],s=parseInt(t[2]||"256");(0,h.MR)(s%8==0&&0!==s&&s<=256&&(null==t[2]||t[2]===String(s)),"invalid numeric width","type",e);let r=(0,h.dK)(v,i?s-1:s),a=i?(r+y)*m:g;return function(t){let s=(0,h.Ab)(t,"value");return(0,h.MR)(s>=a&&s<=r,`value out-of-bounds for ${e}`,"value",s),(0,h.up)(i?(0,h.JJ)(s,256):s,32)}}}{let t=e.match(/^bytes(\d+)$/);if(t){let i=parseInt(t[1]);return(0,h.MR)(0!==i&&i<=32&&t[1]===String(i),"invalid bytes width","type",e),function(t){let s=(0,h.q5)(t);return(0,h.MR)(s.length===i,`invalid length for ${e}`,"value",t),function(e){let t=(0,h.q5)(e),i=t.length%32;return i?(0,h.xW)([t,p.slice(i)]):(0,h.c$)(t)}(t)}}}switch(e){case"address":return function(e){return(0,h.nx)((0,d.bv)(e),32)};case"bool":return function(e){return e?b:w};case"bytes":return function(e){return(0,h.So)(e)};case"string":return function(e){return(0,h.id)(e)}}return null}function x(e,t){return`${e}(${t.map(({name:e,type:t})=>t+" "+e).join(",")})`}class P{constructor(e){s.add(this),r.set(this,void 0),a.set(this,void 0),n.set(this,void 0),c(this,r,JSON.stringify(e),"f"),c(this,a,new Map,"f"),c(this,n,new Map,"f");let t=new Map,i=new Map,o=new Map;for(let s in Object.keys(e).forEach(e=>{t.set(e,new Set),i.set(e,[]),o.set(e,new Set)}),e){let r=new Set;for(let a of e[s]){(0,h.MR)(!r.has(a.name),`duplicate variable name ${JSON.stringify(a.name)} in ${JSON.stringify(s)}`,"types",e),r.add(a.name);let n=a.type.match(/^([^\x5b]*)(\x5b|$)/)[1]||null;(0,h.MR)(n!==s,`circular type reference to ${JSON.stringify(n)}`,"types",e),I(n)||((0,h.MR)(i.has(n),`unknown type ${JSON.stringify(n)}`,"types",e),i.get(n).push(s),t.get(s).add(n))}}let d=Array.from(i.keys()).filter(e=>0===i.get(e).length);for(let[s,r]of((0,h.MR)(0!==d.length,"missing primary type","types",e),(0,h.MR)(1===d.length,`ambiguous primary types or unused types: ${d.map(e=>JSON.stringify(e)).join(", ")}`,"types",e),(0,h.ny)(this,{primaryType:d[0]}),!function s(r,a){for(let n of((0,h.MR)(!a.has(r),`circular type reference to ${JSON.stringify(r)}`,"types",e),a.add(r),t.get(r)))if(i.has(n))for(let e of(s(n,a),a))o.get(e).add(n);a.delete(r)}(this.primaryType,new Set),o)){let t=Array.from(r);t.sort(),u(this,a,"f").set(s,x(s,e[s])+t.map(t=>x(t,e[t])).join(""))}}get types(){return JSON.parse(u(this,r,"f"))}getEncoder(e){let t=u(this,n,"f").get(e);return t||(t=u(this,s,"m",o).call(this,e),u(this,n,"f").set(e,t)),t}encodeType(e){let t=u(this,a,"f").get(e);return(0,h.MR)(t,`unknown type: ${JSON.stringify(e)}`,"name",e),t}encodeData(e,t){return this.getEncoder(e)(t)}hashStruct(e,t){return(0,h.So)(f(this.encodeData(e,t).slice(2)))}encode(e){return this.encodeData(this.primaryType,e)}hash(e){return this.hashStruct(this.primaryType,e)}_visit(e,t,i){if(I(e))return i(e,t);let s=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(s)return(0,h.MR)(!s[3]||parseInt(s[3])===t.length,`array length mismatch; expected length ${parseInt(s[3])}`,"value",t),t.map(e=>this._visit(s[1],e,i));let r=this.types[e];if(r)return r.reduce((e,{name:s,type:r})=>(e[s]=this._visit(r,t[s],i),e),{});(0,h.MR)(!1,`unknown type: ${e}`,"type",e)}visit(e,t){return this._visit(this.primaryType,e,t)}static from(e){return new P(e)}static getPrimaryType(e){return P.from(e).primaryType}static hashStruct(e,t,i){return P.from(t).hashStruct(e,i)}static hashDomain(e){let t=[];for(let i in e){if(null==e[i])continue;let s=k[i];(0,h.MR)(s,`invalid typed-data domain key: ${JSON.stringify(i)}`,"domain",e),t.push({name:i,type:s})}return t.sort((e,t)=>S.indexOf(e.name)-S.indexOf(t.name)),P.hashStruct("EIP712Domain",{EIP712Domain:t},e)}static encode(e,t,i){return(0,h.xW)(["0x1901",P.hashDomain(e),P.from(t).hash(i)])}static hash(e,t,i){return(0,h.So)(P.encode(e,t,i))}static async resolveNames(e,t,i,s){for(let t in e=Object.assign({},e))null==e[t]&&delete e[t];let r={};e.verifyingContract&&!(0,h.Lo)(e.verifyingContract,20)&&(r[e.verifyingContract]="0x");let a=P.from(t);for(let e in a.visit(i,(e,t)=>("address"!==e||(0,h.Lo)(t,20)||(r[t]="0x"),t)),r)r[e]=await s(e);return e.verifyingContract&&r[e.verifyingContract]&&(e.verifyingContract=r[e.verifyingContract]),i=a.visit(i,(e,t)=>"address"===e&&r[t]?r[t]:t),{domain:e,value:i}}static getPayload(e,t,i){P.hashDomain(e);let s={},r=[];S.forEach(t=>{let i=e[t];null!=i&&(s[t]=T[t](i),r.push({name:t,type:k[t]}))});let a=P.from(t),n=Object.assign({},t);return(0,h.MR)(null==n.EIP712Domain,"types must not contain EIP712Domain type","types.EIP712Domain",t),n.EIP712Domain=r,a.encode(i),{types:n,domain:s,primaryType:a.primaryType,message:a.visit(i,(e,t)=>{if(e.match(/^bytes(\d*)/))return(0,h.c$)((0,h.q5)(t));if(e.match(/^u?int/))return(0,h.Ab)(t).toString();switch(e){case"address":return t.toLowerCase();case"bool":return!!t;case"string":return(0,h.MR)("string"==typeof t,"invalid string","value",t),t}(0,h.MR)(!1,"unsupported type","type",e)})}}}r=new WeakMap,a=new WeakMap,n=new WeakMap,s=new WeakSet,o=function(e){{let t=I(e);if(t)return t}let t=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(t){let e=t[1],i=this.getEncoder(e);return s=>{(0,h.MR)(!t[3]||parseInt(t[3])===s.length,`array length mismatch; expected length ${parseInt(t[3])}`,"value",s);let r=s.map(i);return u(this,a,"f").has(e)&&(r=r.map(h.So)),(0,h.So)((0,h.q5)((0,h.xW)(r)))}}let i=this.types[e];if(i){let t=(0,h.id)(u(this,a,"f").get(e));return e=>{let s=i.map(({name:t,type:i})=>{let s=this.getEncoder(i)(e[t]);return u(this,a,"f").has(i)?(0,h.So)(s):s});return s.unshift(t),(0,h.xW)(s)}}(0,h.MR)(!1,`unknown type: ${e}`,"type",e)}},7330:(e,t,i)=>{"use strict";i.d(t,{Ay:()=>tt});var s,r,a,n,o,h,d,l,c,u,f,p,m,g,y,v,b,w,k,S,O,T,I=i(7380),x=function(e,t,i,s,r){if("m"===s)throw TypeError("Private method is not writable");if("a"===s&&!r)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?r.call(e,i):r?r.value=i:t.set(e,i),i},P=function(e,t,i,s){if("a"===i&&!s)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?s:"a"===i?s.call(e):s?s.value:t.get(e)};let M=new Uint8Array(32),A=["then"],C={};function B(e,t){let i=Error(`deferred error during ABI decoding triggered accessing ${e}`);throw i.error=t,i}class E extends Array{constructor(...e){let t=e[0],i=e[1],r=(e[2]||[]).slice(),a=!0;t!==C&&(i=e,r=[],a=!1),super(i.length),s.set(this,void 0),i.forEach((e,t)=>{this[t]=e});let n=r.reduce((e,t)=>("string"==typeof t&&e.set(t,(e.get(t)||0)+1),e),new Map);if(x(this,s,Object.freeze(i.map((e,t)=>{let i=r[t];return null!=i&&1===n.get(i)?i:null})),"f"),!a)return;return Object.freeze(this),new Proxy(this,{get:(e,t,i)=>{if("string"==typeof t){if(t.match(/^[0-9]+$/)){let i=(0,I.WZ)(t,"%index");if(i<0||i>=this.length)throw RangeError("out of result range");let s=e[i];return s instanceof Error&&B(`index ${i}`,s),s}if(A.indexOf(t)>=0)return Reflect.get(e,t,i);let s=e[t];if(s instanceof Function)return function(...t){return s.apply(this===i?e:this,t)};if(!(t in e))return e.getValue.apply(this===i?e:this,[t])}return Reflect.get(e,t,i)}})}toArray(){let e=[];return this.forEach((t,i)=>{t instanceof Error&&B(`index ${i}`,t),e.push(t)}),e}toObject(){return P(this,s,"f").reduce((e,t,i)=>((0,I.vA)(null!=t,"value at index ${ index } unnamed","UNSUPPORTED_OPERATION",{operation:"toObject()"}),t in e||(e[t]=this.getValue(t)),e),{})}slice(e,t){null==e&&(e=0),e<0&&(e+=this.length)<0&&(e=0),null==t&&(t=this.length),t<0&&(t+=this.length)<0&&(t=0),t>this.length&&(t=this.length);let i=[],r=[];for(let a=e;a<t;a++)i.push(this[a]),r.push(P(this,s,"f")[a]);return new E(C,i,r)}filter(e,t){let i=[],r=[];for(let a=0;a<this.length;a++){let n=this[a];n instanceof Error&&B(`index ${a}`,n),e.call(t,n,a,this)&&(i.push(n),r.push(P(this,s,"f")[a]))}return new E(C,i,r)}map(e,t){let i=[];for(let s=0;s<this.length;s++){let r=this[s];r instanceof Error&&B(`index ${s}`,r),i.push(e.call(t,r,s,this))}return i}getValue(e){let t=P(this,s,"f").indexOf(e);if(-1===t)return;let i=this[t];return i instanceof Error&&B(`property ${JSON.stringify(e)}`,i.error),i}static fromItems(e,t){return new E(C,e,t)}}function _(e){let t=(0,I.c4)(e);return(0,I.vA)(t.length<=32,"value out-of-bounds","BUFFER_OVERRUN",{buffer:t,length:32,offset:t.length}),32!==t.length&&(t=(0,I.Lm)((0,I.xW)([M.slice(t.length%32),t]))),t}s=new WeakMap;class N{constructor(e,t,i,s){(0,I.ny)(this,{name:e,type:t,localName:i,dynamic:s},{name:"string",type:"string",localName:"string",dynamic:"boolean"})}_throwError(e,t){(0,I.MR)(!1,e,this.localName,t)}}class L{constructor(){r.add(this),a.set(this,void 0),n.set(this,void 0),x(this,a,[],"f"),x(this,n,0,"f")}get data(){return(0,I.xW)(P(this,a,"f"))}get length(){return P(this,n,"f")}appendWriter(e){return P(this,r,"m",o).call(this,(0,I.Lm)(e.data))}writeBytes(e){let t=(0,I.Lm)(e),i=t.length%32;return i&&(t=(0,I.Lm)((0,I.xW)([t,M.slice(i)]))),P(this,r,"m",o).call(this,t)}writeValue(e){return P(this,r,"m",o).call(this,_(e))}writeUpdatableValue(){let e=P(this,a,"f").length;return P(this,a,"f").push(M),x(this,n,P(this,n,"f")+32,"f"),t=>{P(this,a,"f")[e]=_(t)}}}a=new WeakMap,n=new WeakMap,r=new WeakSet,o=function(e){return P(this,a,"f").push(e),x(this,n,P(this,n,"f")+e.length,"f"),e.length};class R{constructor(e,t,i){h.add(this),d.set(this,void 0),l.set(this,void 0),c.set(this,void 0),u.set(this,void 0),f.set(this,void 0),(0,I.ny)(this,{allowLoose:!!t}),x(this,d,(0,I.Lm)(e),"f"),x(this,c,0,"f"),x(this,u,null,"f"),x(this,f,null!=i?i:1024,"f"),x(this,l,0,"f")}get data(){return(0,I.c$)(P(this,d,"f"))}get dataLength(){return P(this,d,"f").length}get consumed(){return P(this,l,"f")}get bytes(){return new Uint8Array(P(this,d,"f"))}subReader(e){let t=new R(P(this,d,"f").slice(P(this,l,"f")+e),this.allowLoose,P(this,f,"f"));return x(t,u,this,"f"),t}readBytes(e,t){let i=P(this,h,"m",m).call(this,0,e,!!t);return P(this,h,"m",p).call(this,e),x(this,l,P(this,l,"f")+i.length,"f"),i.slice(0,e)}readValue(){return(0,I.Dg)(this.readBytes(32))}readIndex(){return(0,I.Ro)(this.readBytes(32))}}d=new WeakMap,l=new WeakMap,c=new WeakMap,u=new WeakMap,f=new WeakMap,h=new WeakSet,p=function e(t){var i;if(P(this,u,"f"))return P(i=P(this,u,"f"),h,"m",e).call(i,t);x(this,c,P(this,c,"f")+t,"f"),(0,I.vA)(1>P(this,f,"f")||P(this,c,"f")<=P(this,f,"f")*this.dataLength,`compressed ABI data exceeds inflation ratio of ${P(this,f,"f")} ( see: https://github.com/ethers-io/ethers.js/issues/4537 )`,"BUFFER_OVERRUN",{buffer:(0,I.Lm)(P(this,d,"f")),offset:P(this,l,"f"),length:t,info:{bytesRead:P(this,c,"f"),dataLength:this.dataLength}})},m=function(e,t,i){let s=32*Math.ceil(t/32);return P(this,l,"f")+s>P(this,d,"f").length&&(this.allowLoose&&i&&P(this,l,"f")+t<=P(this,d,"f").length?s=t:(0,I.vA)(!1,"data out-of-bounds","BUFFER_OVERRUN",{buffer:(0,I.Lm)(P(this,d,"f")),length:P(this,d,"f").length,offset:P(this,l,"f")+s})),P(this,d,"f").slice(P(this,l,"f"),P(this,l,"f")+s)};var D=i(5557),V=i(6906),q=function(e,t,i,s,r){if("m"===s)throw TypeError("Private method is not writable");if("a"===s&&!r)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?r.call(e,i):r?r.value=i:t.set(e,i),i},F=function(e,t,i,s){if("a"===i&&!s)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?s:"a"===i?s.call(e):s?s.value:t.get(e)};let H={};function G(e,t){let i=!1;return t<0&&(i=!0,t*=-1),new j(H,`${i?"":"u"}int${t}`,e,{signed:i,width:t})}function U(e,t){return new j(H,`bytes${t||""}`,e,{size:t})}let W=Symbol.for("_ethers_typed");class j{constructor(e,t,i,s){g.set(this,void 0),null==s&&(s=null),(0,I.ny)(this,{_typedSymbol:W,type:t,value:i}),q(this,g,s,"f"),this.format()}format(){if("array"===this.type||"dynamicArray"===this.type)throw Error("");return"tuple"===this.type?`tuple(${this.value.map(e=>e.format()).join(",")})`:this.type}defaultValue(){return 0}minValue(){return 0}maxValue(){return 0}isBigInt(){return!!this.type.match(/^u?int[0-9]+$/)}isData(){return this.type.startsWith("bytes")}isString(){return"string"===this.type}get tupleName(){if("tuple"!==this.type)throw TypeError("not a tuple");return F(this,g,"f")}get arrayLength(){if("array"!==this.type)throw TypeError("not an array");return!0===F(this,g,"f")?-1:!1===F(this,g,"f")?this.value.length:null}static from(e,t){return new j(H,e,t)}static uint8(e){return G(e,8)}static uint16(e){return G(e,16)}static uint24(e){return G(e,24)}static uint32(e){return G(e,32)}static uint40(e){return G(e,40)}static uint48(e){return G(e,48)}static uint56(e){return G(e,56)}static uint64(e){return G(e,64)}static uint72(e){return G(e,72)}static uint80(e){return G(e,80)}static uint88(e){return G(e,88)}static uint96(e){return G(e,96)}static uint104(e){return G(e,104)}static uint112(e){return G(e,112)}static uint120(e){return G(e,120)}static uint128(e){return G(e,128)}static uint136(e){return G(e,136)}static uint144(e){return G(e,144)}static uint152(e){return G(e,152)}static uint160(e){return G(e,160)}static uint168(e){return G(e,168)}static uint176(e){return G(e,176)}static uint184(e){return G(e,184)}static uint192(e){return G(e,192)}static uint200(e){return G(e,200)}static uint208(e){return G(e,208)}static uint216(e){return G(e,216)}static uint224(e){return G(e,224)}static uint232(e){return G(e,232)}static uint240(e){return G(e,240)}static uint248(e){return G(e,248)}static uint256(e){return G(e,256)}static uint(e){return G(e,256)}static int8(e){return G(e,-8)}static int16(e){return G(e,-16)}static int24(e){return G(e,-24)}static int32(e){return G(e,-32)}static int40(e){return G(e,-40)}static int48(e){return G(e,-48)}static int56(e){return G(e,-56)}static int64(e){return G(e,-64)}static int72(e){return G(e,-72)}static int80(e){return G(e,-80)}static int88(e){return G(e,-88)}static int96(e){return G(e,-96)}static int104(e){return G(e,-104)}static int112(e){return G(e,-112)}static int120(e){return G(e,-120)}static int128(e){return G(e,-128)}static int136(e){return G(e,-136)}static int144(e){return G(e,-144)}static int152(e){return G(e,-152)}static int160(e){return G(e,-160)}static int168(e){return G(e,-168)}static int176(e){return G(e,-176)}static int184(e){return G(e,-184)}static int192(e){return G(e,-192)}static int200(e){return G(e,-200)}static int208(e){return G(e,-208)}static int216(e){return G(e,-216)}static int224(e){return G(e,-224)}static int232(e){return G(e,-232)}static int240(e){return G(e,-240)}static int248(e){return G(e,-248)}static int256(e){return G(e,-256)}static int(e){return G(e,-256)}static bytes1(e){return U(e,1)}static bytes2(e){return U(e,2)}static bytes3(e){return U(e,3)}static bytes4(e){return U(e,4)}static bytes5(e){return U(e,5)}static bytes6(e){return U(e,6)}static bytes7(e){return U(e,7)}static bytes8(e){return U(e,8)}static bytes9(e){return U(e,9)}static bytes10(e){return U(e,10)}static bytes11(e){return U(e,11)}static bytes12(e){return U(e,12)}static bytes13(e){return U(e,13)}static bytes14(e){return U(e,14)}static bytes15(e){return U(e,15)}static bytes16(e){return U(e,16)}static bytes17(e){return U(e,17)}static bytes18(e){return U(e,18)}static bytes19(e){return U(e,19)}static bytes20(e){return U(e,20)}static bytes21(e){return U(e,21)}static bytes22(e){return U(e,22)}static bytes23(e){return U(e,23)}static bytes24(e){return U(e,24)}static bytes25(e){return U(e,25)}static bytes26(e){return U(e,26)}static bytes27(e){return U(e,27)}static bytes28(e){return U(e,28)}static bytes29(e){return U(e,29)}static bytes30(e){return U(e,30)}static bytes31(e){return U(e,31)}static bytes32(e){return U(e,32)}static address(e){return new j(H,"address",e)}static bool(e){return new j(H,"bool",!!e)}static bytes(e){return new j(H,"bytes",e)}static string(e){return new j(H,"string",e)}static array(e,t){throw Error("not implemented yet")}static tuple(e,t){throw Error("not implemented yet")}static overrides(e){return new j(H,"overrides",Object.assign({},e))}static isTyped(e){return e&&"object"==typeof e&&"_typedSymbol"in e&&e._typedSymbol===W}static dereference(e,t){if(j.isTyped(e)){if(e.type!==t)throw Error(`invalid type: expecetd ${t}, got ${e.type}`);return e.value}return e}}g=new WeakMap;class K extends N{constructor(e){super("address","address",e,!1)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(e,t){let i=j.dereference(t,"string");try{i=(0,D.bv)(i)}catch(e){return this._throwError(e.message,t)}return e.writeValue(i)}decode(e){return(0,D.bv)((0,V.up)(e.readValue(),20))}}class z extends N{constructor(e){super(e.name,e.type,"_",e.dynamic),this.coder=e}defaultValue(){return this.coder.defaultValue()}encode(e,t){return this.coder.encode(e,t)}decode(e){return this.coder.decode(e)}}function Y(e,t,i){let s=[];if(Array.isArray(i))s=i;else if(i&&"object"==typeof i){let e={};s=t.map(t=>{let s=t.localName;return(0,I.vA)(s,"cannot encode object for signature with missing names","INVALID_ARGUMENT",{argument:"values",info:{coder:t},value:i}),(0,I.vA)(!e[s],"cannot encode object for signature with duplicate names","INVALID_ARGUMENT",{argument:"values",info:{coder:t},value:i}),e[s]=!0,i[s]})}else(0,I.MR)(!1,"invalid tuple value","tuple",i);(0,I.MR)(t.length===s.length,"types/value length mismatch","tuple",i);let r=new L,a=new L,n=[];return t.forEach((e,t)=>{let i=s[t];if(e.dynamic){let t=a.length;e.encode(a,i);let s=r.writeUpdatableValue();n.push(e=>{s(e+t)})}else e.encode(r,i)}),n.forEach(e=>{e(r.length)}),e.appendWriter(r)+e.appendWriter(a)}function X(e,t){let i=[],s=[],r=e.subReader(0);return t.forEach(t=>{let a=null;if(t.dynamic){let i=e.readIndex(),s=r.subReader(i);try{a=t.decode(s)}catch(e){if((0,I.bJ)(e,"BUFFER_OVERRUN"))throw e;(a=e).baseType=t.name,a.name=t.localName,a.type=t.type}}else try{a=t.decode(e)}catch(e){if((0,I.bJ)(e,"BUFFER_OVERRUN"))throw e;(a=e).baseType=t.name,a.name=t.localName,a.type=t.type}if(void 0==a)throw Error("investigate");i.push(a),s.push(t.localName||null)}),E.fromItems(i,s)}class $ extends N{constructor(e,t,i){super("array",e.type+"["+(t>=0?t:"")+"]",i,-1===t||e.dynamic),(0,I.ny)(this,{coder:e,length:t})}defaultValue(){let e=this.coder.defaultValue(),t=[];for(let i=0;i<this.length;i++)t.push(e);return t}encode(e,t){let i=j.dereference(t,"array");Array.isArray(i)||this._throwError("expected array value",i);let s=this.length;-1===s&&(s=i.length,e.writeValue(i.length)),(0,I.dd)(i.length,s,"coder array"+(this.localName?" "+this.localName:""));let r=[];for(let e=0;e<i.length;e++)r.push(this.coder);return Y(e,r,i)}decode(e){let t=this.length;-1===t&&(t=e.readIndex(),(0,I.vA)(32*t<=e.dataLength,"insufficient data length","BUFFER_OVERRUN",{buffer:e.bytes,offset:32*t,length:e.dataLength}));let i=[];for(let e=0;e<t;e++)i.push(new z(this.coder));return X(e,i)}}class Q extends N{constructor(e){super("bool","bool",e,!1)}defaultValue(){return!1}encode(e,t){let i=j.dereference(t,"bool");return e.writeValue(i?1:0)}decode(e){return!!e.readValue()}}class Z extends N{constructor(e,t){super(e,e,t,!0)}defaultValue(){return"0x"}encode(e,t){return t=(0,I.Lm)(t),e.writeValue(t.length)+e.writeBytes(t)}decode(e){return e.readBytes(e.readIndex(),!0)}}class J extends Z{constructor(e){super("bytes",e)}decode(e){return(0,I.c$)(super.decode(e))}}class ee extends N{constructor(e,t){let i="bytes"+String(e);super(i,i,t,!1),(0,I.ny)(this,{size:e},{size:"number"})}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+2*this.size)}encode(e,t){let i=(0,I.Lm)(j.dereference(t,this.type));return i.length!==this.size&&this._throwError("incorrect data length",t),e.writeBytes(i)}decode(e){return(0,I.c$)(e.readBytes(this.size))}}let et=new Uint8Array([]);class ei extends N{constructor(e){super("null","",e,!1)}defaultValue(){return null}encode(e,t){return null!=t&&this._throwError("not null",t),e.writeBytes(et)}decode(e){return e.readBytes(0),null}}let es=BigInt(0),er=BigInt(1),ea=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");class en extends N{constructor(e,t,i){let s=(t?"int":"uint")+8*e;super(s,s,i,!1),(0,I.ny)(this,{size:e,signed:t},{size:"number",signed:"boolean"})}defaultValue(){return 0}encode(e,t){let i=(0,I.Ab)(j.dereference(t,this.type)),s=(0,I.dK)(ea,256);if(this.signed){let e=(0,I.dK)(s,8*this.size-1);(i>e||i<-(e+er))&&this._throwError("value out-of-bounds",t),i=(0,I.JJ)(i,256)}else(i<es||i>(0,I.dK)(s,8*this.size))&&this._throwError("value out-of-bounds",t);return e.writeValue(i)}decode(e){let t=(0,I.dK)(e.readValue(),8*this.size);return this.signed&&(t=(0,I.ST)(t,8*this.size)),t}}var eo=i(1508);class eh extends Z{constructor(e){super("string",e)}defaultValue(){return""}encode(e,t){return super.encode(e,(0,eo.YW)(j.dereference(t,"string")))}decode(e){return(0,eo._v)(super.decode(e))}}var ed=i(5874);class el extends N{constructor(e,t){let i=!1,s=[];e.forEach(e=>{e.dynamic&&(i=!0),s.push(e.type)}),super("tuple","tuple("+s.join(",")+")",t,i),(0,ed.n)(this,{coders:Object.freeze(e.slice())})}defaultValue(){let e=[];this.coders.forEach(t=>{e.push(t.defaultValue())});let t=this.coders.reduce((e,t)=>{let i=t.localName;return i&&(e[i]||(e[i]=0),e[i]++),e},{});return this.coders.forEach((i,s)=>{let r=i.localName;r&&1===t[r]&&("length"===r&&(r="_length"),null==e[r]&&(e[r]=e[s]))}),Object.freeze(e)}encode(e,t){let i=j.dereference(t,"tuple");return Y(e,this.coders,i)}decode(e){return X(e,this.coders)}}var ec=function(e,t,i,s,r){if("m"===s)throw TypeError("Private method is not writable");if("a"===s&&!r)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?r.call(e,i):r?r.value=i:t.set(e,i),i},eu=function(e,t,i,s){if("a"===i&&!s)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?s:"a"===i?s.call(e):s?s.value:t.get(e)};function ef(e){let t=new Set;return e.forEach(e=>t.add(e)),Object.freeze(t)}let ep=ef("external public payable".split(" ")),em="constant external internal payable private public pure view",eg=ef(em.split(" ")),ey="constructor error event fallback function receive struct",ev=ef(ey.split(" ")),eb="calldata memory storage payable indexed",ew=ef(eb.split(" ")),ek=ef([ey,eb,"tuple returns",em].join(" ").split(" ")),eS={"(":"OPEN_PAREN",")":"CLOSE_PAREN","[":"OPEN_BRACKET","]":"CLOSE_BRACKET",",":"COMMA","@":"AT"},eO=RegExp("^(\\s*)"),eT=RegExp("^([0-9]+)"),eI=RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)"),ex=RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$"),eP=RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");class eM{constructor(e){y.add(this),v.set(this,void 0),b.set(this,void 0),ec(this,v,0,"f"),ec(this,b,e.slice(),"f")}get offset(){return eu(this,v,"f")}get length(){return eu(this,b,"f").length-eu(this,v,"f")}clone(){return new eM(eu(this,b,"f"))}reset(){ec(this,v,0,"f")}popKeyword(e){let t=this.peek();if("KEYWORD"!==t.type||!e.has(t.text))throw Error(`expected keyword ${t.text}`);return this.pop().text}popType(e){if(this.peek().type!==e)throw Error(`expected ${e}; got ${JSON.stringify(this.peek())}`);return this.pop().text}popParen(){let e=this.peek();if("OPEN_PAREN"!==e.type)throw Error("bad start");let t=eu(this,y,"m",w).call(this,eu(this,v,"f")+1,e.match+1);return ec(this,v,e.match+1,"f"),t}popParams(){let e=this.peek();if("OPEN_PAREN"!==e.type)throw Error("bad start");let t=[];for(;eu(this,v,"f")<e.match-1;){let e=this.peek().linkNext;t.push(eu(this,y,"m",w).call(this,eu(this,v,"f")+1,e)),ec(this,v,e,"f")}return ec(this,v,e.match+1,"f"),t}peek(){if(eu(this,v,"f")>=eu(this,b,"f").length)throw Error("out-of-bounds");return eu(this,b,"f")[eu(this,v,"f")]}peekKeyword(e){let t=this.peekType("KEYWORD");return null!=t&&e.has(t)?t:null}peekType(e){if(0===this.length)return null;let t=this.peek();return t.type===e?t.text:null}pop(){var e;let t=this.peek();return ec(this,v,(e=eu(this,v,"f"),++e),"f"),t}toString(){let e=[];for(let t=eu(this,v,"f");t<eu(this,b,"f").length;t++){let i=eu(this,b,"f")[t];e.push(`${i.type}:${i.text}`)}return`<TokenString ${e.join(" ")}>`}}function eA(e){let t=[],i=t=>{let i=a<e.length?JSON.stringify(e[a]):"$EOI";throw Error(`invalid token ${i} at ${a}: ${t}`)},s=[],r=[],a=0;for(;a<e.length;){let n=e.substring(a),o=n.match(eO);o&&(a+=o[1].length,n=e.substring(a));let h={depth:s.length,linkBack:-1,linkNext:-1,match:-1,type:"",text:"",offset:a,value:-1};t.push(h);let d=eS[n[0]]||"";if(d){if(h.type=d,h.text=n[0],a++,"OPEN_PAREN"===d)s.push(t.length-1),r.push(t.length-1);else if("CLOSE_PAREN"==d)0===s.length&&i("no matching open bracket"),h.match=s.pop(),t[h.match].match=t.length-1,h.depth--,h.linkBack=r.pop(),t[h.linkBack].linkNext=t.length-1;else if("COMMA"===d)h.linkBack=r.pop(),t[h.linkBack].linkNext=t.length-1,r.push(t.length-1);else if("OPEN_BRACKET"===d)h.type="BRACKET";else if("CLOSE_BRACKET"===d){let e=t.pop().text;if(t.length>0&&"NUMBER"===t[t.length-1].type){let i=t.pop().text;e=i+e,t[t.length-1].value=(0,I.WZ)(i)}if(0===t.length||"BRACKET"!==t[t.length-1].type)throw Error("missing opening bracket");t[t.length-1].text+=e}continue}if(o=n.match(eI)){if(h.text=o[1],a+=h.text.length,ek.has(h.text)){h.type="KEYWORD";continue}if(h.text.match(eP)){h.type="TYPE";continue}h.type="ID";continue}if(o=n.match(eT)){h.text=o[1],h.type="NUMBER",a+=h.text.length;continue}throw Error(`unexpected token ${JSON.stringify(n[0])} at position ${a}`)}return new eM(t.map(e=>Object.freeze(e)))}function eC(e,t){let i=[];for(let s in t.keys())e.has(s)&&i.push(s);if(i.length>1)throw Error(`conflicting types: ${i.join(", ")}`)}function eB(e,t){if(t.peekKeyword(ev)){let i=t.pop().text;if(i!==e)throw Error(`expected ${e}, got ${i}`)}return t.popType("ID")}function eE(e,t){let i=new Set;for(;;){let s=e.peekType("KEYWORD");if(null==s||t&&!t.has(s))break;if(e.pop(),i.has(s))throw Error(`duplicate keywords: ${JSON.stringify(s)}`);i.add(s)}return Object.freeze(i)}function e_(e){let t=eE(e,eg);return(eC(t,ef("constant payable nonpayable".split(" "))),eC(t,ef("pure view payable nonpayable".split(" "))),t.has("view"))?"view":t.has("pure")?"pure":t.has("payable")?"payable":t.has("nonpayable")?"nonpayable":t.has("constant")?"view":"nonpayable"}function eN(e,t){return e.popParams().map(e=>eY.from(e,t))}function eL(e){if(e.peekType("AT")){if(e.pop(),e.peekType("NUMBER"))return(0,I.Ab)(e.pop().text);throw Error("invalid gas")}return null}function eR(e){if(e.length)throw Error(`unexpected tokens: ${e.toString()}`)}v=new WeakMap,b=new WeakMap,y=new WeakSet,w=function(e=0,t=0){return new eM(eu(this,b,"f").slice(e,t).map(t=>Object.freeze(Object.assign({},t,{match:t.match-e,linkBack:t.linkBack-e,linkNext:t.linkNext-e}))))};let eD=new RegExp(/^(.*)\[([0-9]*)\]$/);function eV(e){let t=e.match(eP);if((0,I.MR)(t,"invalid type","type",e),"uint"===e)return"uint256";if("int"===e)return"int256";if(t[2]){let i=parseInt(t[2]);(0,I.MR)(0!==i&&i<=32,"invalid bytes length","type",e)}else if(t[3]){let i=parseInt(t[3]);(0,I.MR)(0!==i&&i<=256&&i%8==0,"invalid numeric width","type",e)}return e}let eq={},eF=Symbol.for("_ethers_internal"),eH="_ParamTypeInternal",eG="_ErrorInternal",eU="_EventInternal",eW="_ConstructorInternal",ej="_FallbackInternal",eK="_FunctionInternal",ez="_StructInternal";class eY{constructor(e,t,i,s,r,a,n,o){if(k.add(this),(0,I.gk)(e,eq,"ParamType"),Object.defineProperty(this,eF,{value:eH}),a&&(a=Object.freeze(a.slice())),"array"===s){if(null==n||null==o)throw Error("")}else if(null!=n||null!=o)throw Error("");if("tuple"===s){if(null==a)throw Error("")}else if(null!=a)throw Error("");(0,I.ny)(this,{name:t,type:i,baseType:s,indexed:r,components:a,arrayLength:n,arrayChildren:o})}format(e){if(null==e&&(e="sighash"),"json"===e){let t=this.name||"";if(this.isArray()){let e=JSON.parse(this.arrayChildren.format("json"));return e.name=t,e.type+=`[${this.arrayLength<0?"":String(this.arrayLength)}]`,JSON.stringify(e)}let i={type:"tuple"===this.baseType?"tuple":this.type,name:t};return"boolean"==typeof this.indexed&&(i.indexed=this.indexed),this.isTuple()&&(i.components=this.components.map(t=>JSON.parse(t.format(e)))),JSON.stringify(i)}let t="";return this.isArray()?(t+=this.arrayChildren.format(e),t+=`[${this.arrayLength<0?"":String(this.arrayLength)}]`):this.isTuple()?t+="("+this.components.map(t=>t.format(e)).join("full"===e?", ":",")+")":t+=this.type,"sighash"!==e&&(!0===this.indexed&&(t+=" indexed"),"full"===e&&this.name&&(t+=" "+this.name)),t}isArray(){return"array"===this.baseType}isTuple(){return"tuple"===this.baseType}isIndexable(){return null!=this.indexed}walk(e,t){if(this.isArray()){if(!Array.isArray(e))throw Error("invalid array value");if(-1!==this.arrayLength&&e.length!==this.arrayLength)throw Error("array is wrong length");let i=this;return e.map(e=>i.arrayChildren.walk(e,t))}if(this.isTuple()){if(!Array.isArray(e))throw Error("invalid tuple value");if(e.length!==this.components.length)throw Error("array is wrong length");let i=this;return e.map((e,s)=>i.components[s].walk(e,t))}return t(this.type,e)}async walkAsync(e,t){let i=[],s=[e];return eu(this,k,"m",S).call(this,i,e,t,e=>{s[0]=e}),i.length&&await Promise.all(i),s[0]}static from(e,t){if(eY.isParamType(e))return e;if("string"==typeof e)try{return eY.from(eA(e),t)}catch(t){(0,I.MR)(!1,"invalid param type","obj",e)}else if(e instanceof eM){let i="",s="",r=null;eE(e,ef(["tuple"])).has("tuple")||e.peekType("OPEN_PAREN")?(s="tuple",r=e.popParams().map(e=>eY.from(e)),i=`tuple(${r.map(e=>e.format()).join(",")})`):s=i=eV(e.popType("TYPE"));let a=null,n=null;for(;e.length&&e.peekType("BRACKET");){let t=e.pop();a=new eY(eq,"",i,s,null,r,n,a),n=t.value,i+=t.text,s="array",r=null}let o=null;if(eE(e,ew).has("indexed")){if(!t)throw Error("");o=!0}let h=e.peekType("ID")?e.pop().text:"";if(e.length)throw Error("leftover tokens");return new eY(eq,h,i,s,o,r,n,a)}let i=e.name;(0,I.MR)(!i||"string"==typeof i&&i.match(ex),"invalid name","obj.name",i);let s=e.indexed;null!=s&&((0,I.MR)(t,"parameter cannot be indexed","obj.indexed",e.indexed),s=!!s);let r=e.type,a=r.match(eD);if(a){let t=parseInt(a[2]||"-1"),n=eY.from({type:a[1],components:e.components});return new eY(eq,i||"",r,"array",s,null,t,n)}if("tuple"===r||r.startsWith("tuple(")||r.startsWith("(")){let t=null!=e.components?e.components.map(e=>eY.from(e)):null;return new eY(eq,i||"",r,"tuple",s,t,null,null)}return new eY(eq,i||"",r=eV(e.type),r,s,null,null,null)}static isParamType(e){return e&&e[eF]===eH}}k=new WeakSet,S=function e(t,i,s,r){if(this.isArray()){if(!Array.isArray(i))throw Error("invalid array value");if(-1!==this.arrayLength&&i.length!==this.arrayLength)throw Error("array is wrong length");let a=this.arrayChildren,n=i.slice();n.forEach((i,r)=>{eu(a,k,"m",e).call(a,t,i,s,e=>{n[r]=e})}),r(n);return}if(this.isTuple()){let a;let n=this.components;if(Array.isArray(i))a=i.slice();else{if(null==i||"object"!=typeof i)throw Error("invalid tuple value");a=n.map(e=>{if(!e.name)throw Error("cannot use object value with unnamed components");if(!(e.name in i))throw Error(`missing value for component ${e.name}`);return i[e.name]})}if(a.length!==this.components.length)throw Error("array is wrong length");a.forEach((i,r)=>{var o;eu(o=n[r],k,"m",e).call(o,t,i,s,e=>{a[r]=e})}),r(a);return}let a=s(this.type,i);a.then?t.push(async function(){r(await a)}()):r(a)};class eX{constructor(e,t,i){(0,I.gk)(e,eq,"Fragment"),i=Object.freeze(i.slice()),(0,I.ny)(this,{type:t,inputs:i})}static from(e){if("string"==typeof e){try{eX.from(JSON.parse(e))}catch(e){}return eX.from(eA(e))}if(e instanceof eM)switch(e.peekKeyword(ev)){case"constructor":return e0.from(e);case"error":return eZ.from(e);case"event":return eJ.from(e);case"fallback":case"receive":return e1.from(e);case"function":return e2.from(e);case"struct":return e3.from(e)}else if("object"==typeof e){switch(e.type){case"constructor":return e0.from(e);case"error":return eZ.from(e);case"event":return eJ.from(e);case"fallback":case"receive":return e1.from(e);case"function":return e2.from(e);case"struct":return e3.from(e)}(0,I.vA)(!1,`unsupported type: ${e.type}`,"UNSUPPORTED_OPERATION",{operation:"Fragment.from"})}(0,I.MR)(!1,"unsupported frgament object","obj",e)}static isConstructor(e){return e0.isFragment(e)}static isError(e){return eZ.isFragment(e)}static isEvent(e){return eJ.isFragment(e)}static isFunction(e){return e2.isFragment(e)}static isStruct(e){return e3.isFragment(e)}}class e$ extends eX{constructor(e,t,i,s){super(e,t,s),(0,I.MR)("string"==typeof i&&i.match(ex),"invalid identifier","name",i),s=Object.freeze(s.slice()),(0,I.ny)(this,{name:i})}}function eQ(e,t){return"("+t.map(t=>t.format(e)).join("full"===e?", ":",")+")"}class eZ extends e${constructor(e,t,i){super(e,"error",t,i),Object.defineProperty(this,eF,{value:eG})}get selector(){return(0,I.id)(this.format("sighash")).substring(0,10)}format(e){if(null==e&&(e="sighash"),"json"===e)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map(t=>JSON.parse(t.format(e)))});let t=[];return"sighash"!==e&&t.push("error"),t.push(this.name+eQ(e,this.inputs)),t.join(" ")}static from(e){if(eZ.isFragment(e))return e;if("string"==typeof e)return eZ.from(eA(e));if(e instanceof eM){let t=eB("error",e),i=eN(e);return eR(e),new eZ(eq,t,i)}return new eZ(eq,e.name,e.inputs?e.inputs.map(eY.from):[])}static isFragment(e){return e&&e[eF]===eG}}class eJ extends e${constructor(e,t,i,s){super(e,"event",t,i),Object.defineProperty(this,eF,{value:eU}),(0,I.ny)(this,{anonymous:s})}get topicHash(){return(0,I.id)(this.format("sighash"))}format(e){if(null==e&&(e="sighash"),"json"===e)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(t=>JSON.parse(t.format(e)))});let t=[];return"sighash"!==e&&t.push("event"),t.push(this.name+eQ(e,this.inputs)),"sighash"!==e&&this.anonymous&&t.push("anonymous"),t.join(" ")}static getTopicHash(e,t){return new eJ(eq,e,t=(t||[]).map(e=>eY.from(e)),!1).topicHash}static from(e){if(eJ.isFragment(e))return e;if("string"==typeof e)try{return eJ.from(eA(e))}catch(t){(0,I.MR)(!1,"invalid event fragment","obj",e)}else if(e instanceof eM){let t=eB("event",e),i=eN(e,!0),s=!!eE(e,ef(["anonymous"])).has("anonymous");return eR(e),new eJ(eq,t,i,s)}return new eJ(eq,e.name,e.inputs?e.inputs.map(e=>eY.from(e,!0)):[],!!e.anonymous)}static isFragment(e){return e&&e[eF]===eU}}class e0 extends eX{constructor(e,t,i,s,r){super(e,t,i),Object.defineProperty(this,eF,{value:eW}),(0,I.ny)(this,{payable:s,gas:r})}format(e){if((0,I.vA)(null!=e&&"sighash"!==e,"cannot format a constructor for sighash","UNSUPPORTED_OPERATION",{operation:"format(sighash)"}),"json"===e)return JSON.stringify({type:"constructor",stateMutability:this.payable?"payable":"undefined",payable:this.payable,gas:null!=this.gas?this.gas:void 0,inputs:this.inputs.map(t=>JSON.parse(t.format(e)))});let t=[`constructor${eQ(e,this.inputs)}`];return this.payable&&t.push("payable"),null!=this.gas&&t.push(`@${this.gas.toString()}`),t.join(" ")}static from(e){if(e0.isFragment(e))return e;if("string"==typeof e)try{return e0.from(eA(e))}catch(t){(0,I.MR)(!1,"invalid constuctor fragment","obj",e)}else if(e instanceof eM){eE(e,ef(["constructor"]));let t=eN(e),i=!!eE(e,ep).has("payable"),s=eL(e);return eR(e),new e0(eq,"constructor",t,i,s)}return new e0(eq,"constructor",e.inputs?e.inputs.map(eY.from):[],!!e.payable,null!=e.gas?e.gas:null)}static isFragment(e){return e&&e[eF]===eW}}class e1 extends eX{constructor(e,t,i){super(e,"fallback",t),Object.defineProperty(this,eF,{value:ej}),(0,I.ny)(this,{payable:i})}format(e){let t=0===this.inputs.length?"receive":"fallback";return"json"===e?JSON.stringify({type:t,stateMutability:this.payable?"payable":"nonpayable"}):`${t}()${this.payable?" payable":""}`}static from(e){if(e1.isFragment(e))return e;if("string"==typeof e)try{return e1.from(eA(e))}catch(t){(0,I.MR)(!1,"invalid fallback fragment","obj",e)}else if(e instanceof eM){let t=e.toString(),i=e.peekKeyword(ef(["fallback","receive"]));if((0,I.MR)(i,"type must be fallback or receive","obj",t),"receive"===e.popKeyword(ef(["fallback","receive"]))){let t=eN(e);return(0,I.MR)(0===t.length,"receive cannot have arguments","obj.inputs",t),eE(e,ef(["payable"])),eR(e),new e1(eq,[],!0)}let s=eN(e);s.length?(0,I.MR)(1===s.length&&"bytes"===s[0].type,"invalid fallback inputs","obj.inputs",s.map(e=>e.format("minimal")).join(", ")):s=[eY.from("bytes")];let r=e_(e);if((0,I.MR)("nonpayable"===r||"payable"===r,"fallback cannot be constants","obj.stateMutability",r),eE(e,ef(["returns"])).has("returns")){let t=eN(e);(0,I.MR)(1===t.length&&"bytes"===t[0].type,"invalid fallback outputs","obj.outputs",t.map(e=>e.format("minimal")).join(", "))}return eR(e),new e1(eq,s,"payable"===r)}return"receive"===e.type?new e1(eq,[],!0):"fallback"===e.type?new e1(eq,[eY.from("bytes")],"payable"===e.stateMutability):void(0,I.MR)(!1,"invalid fallback description","obj",e)}static isFragment(e){return e&&e[eF]===ej}}class e2 extends e${constructor(e,t,i,s,r,a){super(e,"function",t,s),Object.defineProperty(this,eF,{value:eK}),r=Object.freeze(r.slice()),(0,I.ny)(this,{constant:"view"===i||"pure"===i,gas:a,outputs:r,payable:"payable"===i,stateMutability:i})}get selector(){return(0,I.id)(this.format("sighash")).substring(0,10)}format(e){if(null==e&&(e="sighash"),"json"===e)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:null!=this.gas?this.gas:void 0,inputs:this.inputs.map(t=>JSON.parse(t.format(e))),outputs:this.outputs.map(t=>JSON.parse(t.format(e)))});let t=[];return"sighash"!==e&&t.push("function"),t.push(this.name+eQ(e,this.inputs)),"sighash"!==e&&("nonpayable"!==this.stateMutability&&t.push(this.stateMutability),this.outputs&&this.outputs.length&&(t.push("returns"),t.push(eQ(e,this.outputs))),null!=this.gas&&t.push(`@${this.gas.toString()}`)),t.join(" ")}static getSelector(e,t){return new e2(eq,e,"view",t=(t||[]).map(e=>eY.from(e)),[],null).selector}static from(e){if(e2.isFragment(e))return e;if("string"==typeof e)try{return e2.from(eA(e))}catch(t){(0,I.MR)(!1,"invalid function fragment","obj",e)}else if(e instanceof eM){let t=eB("function",e),i=eN(e),s=e_(e),r=[];eE(e,ef(["returns"])).has("returns")&&(r=eN(e));let a=eL(e);return eR(e),new e2(eq,t,s,i,r,a)}let t=e.stateMutability;return null!=t||(t="payable","boolean"==typeof e.constant?(t="view",e.constant||(t="payable","boolean"!=typeof e.payable||e.payable||(t="nonpayable"))):"boolean"!=typeof e.payable||e.payable||(t="nonpayable")),new e2(eq,e.name,t,e.inputs?e.inputs.map(eY.from):[],e.outputs?e.outputs.map(eY.from):[],null!=e.gas?e.gas:null)}static isFragment(e){return e&&e[eF]===eK}}class e3 extends e${constructor(e,t,i){super(e,"struct",t,i),Object.defineProperty(this,eF,{value:ez})}format(){throw Error("@TODO")}static from(e){if("string"==typeof e)try{return e3.from(eA(e))}catch(t){(0,I.MR)(!1,"invalid struct fragment","obj",e)}else if(e instanceof eM){let t=eB("struct",e),i=eN(e);return eR(e),new e3(eq,t,i)}return new e3(eq,e.name,e.inputs?e.inputs.map(eY.from):[])}static isFragment(e){return e&&e[eF]===ez}}var e5=function(e,t,i,s){if("a"===i&&!s)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?s:"a"===i?s.call(e):s?s.value:t.get(e)};let e6=new Map;e6.set(0,"GENERIC_PANIC"),e6.set(1,"ASSERT_FALSE"),e6.set(17,"OVERFLOW"),e6.set(18,"DIVIDE_BY_ZERO"),e6.set(33,"ENUM_RANGE_ERROR"),e6.set(34,"BAD_STORAGE_DATA"),e6.set(49,"STACK_UNDERFLOW"),e6.set(50,"ARRAY_RANGE_ERROR"),e6.set(65,"OUT_OF_MEMORY"),e6.set(81,"UNINITIALIZED_FUNCTION_CALL");let e4=new RegExp(/^bytes([0-9]*)$/),e8=new RegExp(/^(u?int)([0-9]*)$/),e7=null,e9=1024;class te{constructor(){O.add(this)}getDefaultValue(e){return new el(e.map(e=>e5(this,O,"m",T).call(this,eY.from(e))),"_").defaultValue()}encode(e,t){(0,I.dd)(t.length,e.length,"types/values length mismatch");let i=new el(e.map(e=>e5(this,O,"m",T).call(this,eY.from(e))),"_"),s=new L;return i.encode(s,t),s.data}decode(e,t,i){return new el(e.map(e=>e5(this,O,"m",T).call(this,eY.from(e))),"_").decode(new R(t,i,e9))}static _setDefaultMaxInflation(e){(0,I.MR)("number"==typeof e&&Number.isInteger(e),"invalid defaultMaxInflation factor","value",e),e9=e}static defaultAbiCoder(){return null==e7&&(e7=new te),e7}}O=new WeakSet,T=function e(t){if(t.isArray())return new $(e5(this,O,"m",e).call(this,t.arrayChildren),t.arrayLength,t.name);if(t.isTuple())return new el(t.components.map(t=>e5(this,O,"m",e).call(this,t)),t.name);switch(t.baseType){case"address":return new K(t.name);case"bool":return new Q(t.name);case"string":return new eh(t.name);case"bytes":return new J(t.name);case"":return new ei(t.name)}let i=t.type.match(e8);if(i){let e=parseInt(i[2]||"256");return(0,I.MR)(0!==e&&e<=256&&e%8==0,"invalid "+i[1]+" bit length","param",t),new en(e/8,"int"===i[1],t.name)}if(i=t.type.match(e4)){let e=parseInt(i[1]);return(0,I.MR)(0!==e&&e<=32,"invalid bytes length","param",t),new ee(e,t.name)}(0,I.MR)(!1,"invalid type","type",t.type)},new WeakMap,new WeakMap,new WeakMap,new WeakMap,new WeakSet;let tt=te.defaultAbiCoder()},4359:(e,t,i)=>{"use strict";i.d(t,{Lm:()=>n,Lo:()=>o,c$:()=>l,f:()=>h,nx:()=>u,q5:()=>a,xW:()=>c});var s=i(7600);function r(e,t,i){if(e instanceof Uint8Array)return i?new Uint8Array(e):e;if("string"==typeof e&&e.match(/^0x([0-9a-f][0-9a-f])*$/i)){let t=new Uint8Array((e.length-2)/2),i=2;for(let s=0;s<t.length;s++)t[s]=parseInt(e.substring(i,i+2),16),i+=2;return t}(0,s.MR)(!1,"invalid BytesLike value",t||"value",e)}function a(e,t){return r(e,t,!1)}function n(e,t){return r(e,t,!0)}function o(e,t){return!!("string"==typeof e&&e.match(/^0x[0-9A-Fa-f]*$/))&&("number"!=typeof t||e.length===2+2*t)&&(!0!==t||e.length%2==0)}function h(e){return o(e,!0)||e instanceof Uint8Array}let d="0123456789abcdef";function l(e){let t=a(e),i="0x";for(let e=0;e<t.length;e++){let s=t[e];i+=d[(240&s)>>4]+d[15&s]}return i}function c(e){return"0x"+e.map(e=>l(e).substring(2)).join("")}function u(e,t){return function(e,t,i){let r=a(e);(0,s.vA)(t>=r.length,"padding exceeds data length","BUFFER_OVERRUN",{buffer:new Uint8Array(r),length:t,offset:t+1});let n=new Uint8Array(t);return n.fill(0),i?n.set(r,t-r.length):n.set(r,0),l(n)}(e,t,!0)}},7600:(e,t,i)=>{"use strict";i.d(t,{MR:()=>o,SP:()=>l,bJ:()=>a,dd:()=>h,gk:()=>c,vA:()=>n});var s=i(5874);function r(e){if(null==e)return"null";if(Array.isArray(e))return"[ "+e.map(r).join(", ")+" ]";if(e instanceof Uint8Array){let t="0123456789abcdef",i="0x";for(let s=0;s<e.length;s++)i+=t[e[s]>>4],i+=t[15&e[s]];return i}if("object"==typeof e&&"function"==typeof e.toJSON)return r(e.toJSON());switch(typeof e){case"boolean":case"symbol":case"number":return e.toString();case"bigint":return BigInt(e).toString();case"string":return JSON.stringify(e);case"object":{let t=Object.keys(e);return t.sort(),"{ "+t.map(t=>`${r(t)}: ${r(e[t])}`).join(", ")+" }"}}return"[ COULD NOT SERIALIZE ]"}function a(e,t){return e&&e.code===t}function n(e,t,i,a){if(!e)throw function(e,t,i){let a,n=e;{let s=[];if(i){if("message"in i||"code"in i||"name"in i)throw Error(`value will overwrite populated values: ${r(i)}`);for(let e in i){if("shortMessage"===e)continue;let t=i[e];s.push(e+"="+r(t))}}s.push(`code=${t}`),s.length&&(e+=" ("+s.join(", ")+")")}switch(t){case"INVALID_ARGUMENT":a=TypeError(e);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":a=RangeError(e);break;default:a=Error(e)}return(0,s.n)(a,{code:t}),i&&Object.assign(a,i),null==a.shortMessage&&(0,s.n)(a,{shortMessage:n}),a}(t,i,a)}function o(e,t,i,s){n(e,t,"INVALID_ARGUMENT",{argument:i,value:s})}function h(e,t,i){null==i&&(i=""),i&&(i=": "+i),n(e>=t,"missing arguemnt"+i,"MISSING_ARGUMENT",{count:e,expectedCount:t}),n(e<=t,"too many arguemnts"+i,"UNEXPECTED_ARGUMENT",{count:e,expectedCount:t})}let d=["NFD","NFC","NFKD","NFKC"].reduce((e,t)=>{try{if("test"!=="test".normalize(t))throw Error("bad");if("NFD"===t){let e=String.fromCharCode(233).normalize("NFD"),t=String.fromCharCode(101,769);if(e!==t)throw Error("broken")}e.push(t)}catch(e){}return e},[]);function l(e){n(d.indexOf(e)>=0,"platform missing String.prototype.normalize","UNSUPPORTED_OPERATION",{operation:"String.prototype.normalize",info:{form:e}})}function c(e,t,i){if(null==i&&(i=""),e!==t){let e=i,t="new";i&&(e+=".",t+=" "+i),n(!1,`private constructor; use ${e}from* methods`,"UNSUPPORTED_OPERATION",{operation:t})}}},7380:(e,t,i)=>{"use strict";i.d(t,{vA:()=>p.vA,MR:()=>p.MR,dd:()=>p.dd,gk:()=>p.gk,xW:()=>f.xW,ny:()=>g.n,ST:()=>m.ST,Ab:()=>m.Ab,q5:()=>f.q5,Lm:()=>f.Lm,WZ:()=>m.WZ,c$:()=>f.c$,id:()=>E,bJ:()=>p.bJ,Lo:()=>f.Lo,So:()=>_,dK:()=>m.dK,c4:()=>m.c4,up:()=>m.up,Dg:()=>m.Dg,Ro:()=>m.Ro,nD:()=>m.nD,JJ:()=>m.JJ,nx:()=>f.nx});var s,r,a,n,o,h,d,l,c,u,f=i(4359),p=i(7600),m=i(6906);BigInt(0),BigInt(58),i(5714).Buffer,new WeakMap;var g=i(5874),y=function(e,t,i,s,r){if("m"===s)throw TypeError("Private method is not writable");if("a"===s&&!r)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?r.call(e,i):r?r.value=i:t.set(e,i),i},v=function(e,t,i,s){if("a"===i&&!s)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?s:"a"===i?s.call(e):s?s.value:t.get(e)};let b=BigInt(-1),w=BigInt(0),k=BigInt(1),S=BigInt(5),O={},T="0000";for(;T.length<80;)T+=T;function I(e){let t=T;for(;t.length<e;)t+=t;return BigInt("1"+t.substring(0,e))}function x(e,t,i){let s=BigInt(t.width);if(t.signed){let t=k<<s-k;(0,p.vA)(null==i||e>=-t&&e<t,"overflow","NUMERIC_FAULT",{operation:i,fault:"overflow",value:e}),e=e>w?(0,m.ST)((0,m.dK)(e,s),s):-(0,m.ST)((0,m.dK)(-e,s),s)}else{let t=k<<s;(0,p.vA)(null==i||e>=0&&e<t,"overflow","NUMERIC_FAULT",{operation:i,fault:"overflow",value:e}),e=(e%t+t)%t&t-k}return e}function P(e){"number"==typeof e&&(e=`fixed128x${e}`);let t=!0,i=128,s=18;if("string"==typeof e){if("fixed"===e);else if("ufixed"===e)t=!1;else{let r=e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);(0,p.MR)(r,"invalid fixed format","format",e),t="u"!==r[1],i=parseInt(r[2]),s=parseInt(r[3])}}else if(e){let r=e,a=(e,t,i)=>null==r[e]?i:((0,p.MR)(typeof r[e]===t,"invalid fixed format ("+e+" not "+t+")","format."+e,r[e]),r[e]);t=a("signed","boolean",t),i=a("width","number",i),s=a("decimals","number",s)}(0,p.MR)(i%8==0,"invalid FixedNumber width (not byte aligned)","format.width",i),(0,p.MR)(s<=80,"invalid FixedNumber decimals (too large)","format.decimals",s);let r=(t?"":"u")+"fixed"+String(i)+"x"+String(s);return{signed:t,width:i,decimals:s,name:r}}class M{constructor(e,t,i){s.add(this),r.set(this,void 0),a.set(this,void 0),n.set(this,void 0),(0,p.gk)(e,O,"FixedNumber"),y(this,a,t,"f"),y(this,r,i,"f");let o=function(e,t){let i="";e<w&&(i="-",e*=b);let s=e.toString();if(0===t)return i+s;for(;s.length<=t;)s=T+s;let r=s.length-t;for(s=s.substring(0,r)+"."+s.substring(r);"0"===s[0]&&"."!==s[1];)s=s.substring(1);for(;"0"===s[s.length-1]&&"."!==s[s.length-2];)s=s.substring(0,s.length-1);return i+s}(t,i.decimals);(0,g.n)(this,{format:i.name,_value:o}),y(this,n,I(i.decimals),"f")}get signed(){return v(this,r,"f").signed}get width(){return v(this,r,"f").width}get decimals(){return v(this,r,"f").decimals}get value(){return v(this,a,"f")}addUnsafe(e){return v(this,s,"m",d).call(this,e)}add(e){return v(this,s,"m",d).call(this,e,"add")}subUnsafe(e){return v(this,s,"m",l).call(this,e)}sub(e){return v(this,s,"m",l).call(this,e,"sub")}mulUnsafe(e){return v(this,s,"m",c).call(this,e)}mul(e){return v(this,s,"m",c).call(this,e,"mul")}mulSignal(e){v(this,s,"m",o).call(this,e);let t=v(this,a,"f")*v(e,a,"f");return(0,p.vA)(t%v(this,n,"f")===w,"precision lost during signalling mul","NUMERIC_FAULT",{operation:"mulSignal",fault:"underflow",value:this}),v(this,s,"m",h).call(this,t/v(this,n,"f"),"mulSignal")}divUnsafe(e){return v(this,s,"m",u).call(this,e)}div(e){return v(this,s,"m",u).call(this,e,"div")}divSignal(e){(0,p.vA)(v(e,a,"f")!==w,"division by zero","NUMERIC_FAULT",{operation:"div",fault:"divide-by-zero",value:this}),v(this,s,"m",o).call(this,e);let t=v(this,a,"f")*v(this,n,"f");return(0,p.vA)(t%v(e,a,"f")===w,"precision lost during signalling div","NUMERIC_FAULT",{operation:"divSignal",fault:"underflow",value:this}),v(this,s,"m",h).call(this,t/v(e,a,"f"),"divSignal")}cmp(e){let t=this.value,i=e.value,s=this.decimals-e.decimals;return(s>0?i*=I(s):s<0&&(t*=I(-s)),t<i)?-1:t>i?1:0}eq(e){return 0===this.cmp(e)}lt(e){return 0>this.cmp(e)}lte(e){return 0>=this.cmp(e)}gt(e){return this.cmp(e)>0}gte(e){return this.cmp(e)>=0}floor(){let e=v(this,a,"f");return v(this,a,"f")<w&&(e-=v(this,n,"f")-k),e=v(this,a,"f")/v(this,n,"f")*v(this,n,"f"),v(this,s,"m",h).call(this,e,"floor")}ceiling(){let e=v(this,a,"f");return v(this,a,"f")>w&&(e+=v(this,n,"f")-k),e=v(this,a,"f")/v(this,n,"f")*v(this,n,"f"),v(this,s,"m",h).call(this,e,"ceiling")}round(e){if(null==e&&(e=0),e>=this.decimals)return this;let t=this.decimals-e,i=S*I(t-1),s=this.value+i,a=I(t);return x(s=s/a*a,v(this,r,"f"),"round"),new M(O,s,v(this,r,"f"))}isZero(){return v(this,a,"f")===w}isNegative(){return v(this,a,"f")<w}toString(){return this._value}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(e){return M.fromString(this.toString(),e)}static fromValue(e,t,i){let s=null==t?0:(0,m.WZ)(t),r=P(i),a=(0,m.Ab)(e,"value"),n=s-r.decimals;if(n>0){let t=I(n);(0,p.vA)(a%t===w,"value loses precision for format","NUMERIC_FAULT",{operation:"fromValue",fault:"underflow",value:e}),a/=t}else n<0&&(a*=I(-n));return x(a,r,"fromValue"),new M(O,a,r)}static fromString(e,t){let i=e.match(/^(-?)([0-9]*)\.?([0-9]*)$/);(0,p.MR)(i&&i[2].length+i[3].length>0,"invalid FixedNumber string value","value",e);let s=P(t),r=i[2]||"0",a=i[3]||"";for(;a.length<s.decimals;)a+=T;(0,p.vA)(a.substring(s.decimals).match(/^0*$/),"too many decimals for format","NUMERIC_FAULT",{operation:"fromString",fault:"underflow",value:e}),a=a.substring(0,s.decimals);let n=BigInt(i[1]+r+a);return x(n,s,"fromString"),new M(O,n,s)}static fromBytes(e,t){let i=(0,m.Dg)((0,f.q5)(e,"value")),s=P(t);return s.signed&&(i=(0,m.ST)(i,s.width)),x(i,s,"fromBytes"),new M(O,i,s)}}function A(e,t,i){let s=0;for(let r=0;r<i;r++)s=256*s+e[t+r];return s}r=new WeakMap,a=new WeakMap,n=new WeakMap,s=new WeakSet,o=function(e){(0,p.MR)(this.format===e.format,"incompatible format; use fixedNumber.toFormat","other",e)},h=function(e,t){return new M(O,e=x(e,v(this,r,"f"),t),v(this,r,"f"))},d=function(e,t){return v(this,s,"m",o).call(this,e),v(this,s,"m",h).call(this,v(this,a,"f")+v(e,a,"f"),t)},l=function(e,t){return v(this,s,"m",o).call(this,e),v(this,s,"m",h).call(this,v(this,a,"f")-v(e,a,"f"),t)},c=function(e,t){return v(this,s,"m",o).call(this,e),v(this,s,"m",h).call(this,v(this,a,"f")*v(e,a,"f")/v(this,n,"f"),t)},u=function(e,t){return(0,p.vA)(v(e,a,"f")!==w,"division by zero","NUMERIC_FAULT",{operation:"div",fault:"divide-by-zero",value:this}),v(this,s,"m",o).call(this,e),v(this,s,"m",h).call(this,v(this,a,"f")*v(this,n,"f")/v(e,a,"f"),t)},i(1508);var C=i(7411),B=i(1672);function E(e){return"0x"+(0,C.hash)(e,B.lY,"hex")}function _(e){return"0x"+(0,C.hash)(e,B.lY,"hex")}i(5432)},6906:(e,t,i)=>{"use strict";i.d(t,{Ab:()=>l,Dg:()=>f,JJ:()=>h,Ro:()=>m,ST:()=>o,WZ:()=>p,c4:()=>y,dK:()=>d,nD:()=>v,up:()=>g});var s=i(4359),r=i(7600);let a=BigInt(0),n=BigInt(1);function o(e,t){let i=c(e,"value"),s=BigInt(p(t,"width"));return((0,r.vA)(i>>s===a,"overflow","NUMERIC_FAULT",{operation:"fromTwos",fault:"overflow",value:e}),i>>s-n)?-((~i&(n<<s)-n)+n):i}function h(e,t){let i=l(e,"value"),s=BigInt(p(t,"width")),o=n<<s-n;return i<a?(i=-i,(0,r.vA)(i<=o,"too low","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:e}),(~i&(n<<s)-n)+n):((0,r.vA)(i<o,"too high","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:e}),i)}function d(e,t){return c(e,"value")&(n<<BigInt(p(t,"bits")))-n}function l(e,t){switch(typeof e){case"bigint":return e;case"number":return(0,r.MR)(Number.isInteger(e),"underflow",t||"value",e),(0,r.MR)(e>=-0x1fffffffffffff&&e<=0x1fffffffffffff,"overflow",t||"value",e),BigInt(e);case"string":try{if(""===e)throw Error("empty string");if("-"===e[0]&&"-"!==e[1])return-BigInt(e.substring(1));return BigInt(e)}catch(i){(0,r.MR)(!1,`invalid BigNumberish string: ${i.message}`,t||"value",e)}}(0,r.MR)(!1,"invalid BigNumberish value",t||"value",e)}function c(e,t){let i=l(e,t);return(0,r.vA)(i>=a,"unsigned value cannot be negative","NUMERIC_FAULT",{fault:"overflow",operation:"getUint",value:e}),i}let u="0123456789abcdef";function f(e){if(e instanceof Uint8Array){let t="0x0";for(let i of e)t+=u[i>>4],t+=u[15&i];return BigInt(t)}return l(e)}function p(e,t){switch(typeof e){case"bigint":return(0,r.MR)(e>=-0x1fffffffffffff&&e<=0x1fffffffffffff,"overflow",t||"value",e),Number(e);case"number":return(0,r.MR)(Number.isInteger(e),"underflow",t||"value",e),(0,r.MR)(e>=-0x1fffffffffffff&&e<=0x1fffffffffffff,"overflow",t||"value",e),e;case"string":try{if(""===e)throw Error("empty string");return p(BigInt(e),t)}catch(i){(0,r.MR)(!1,`invalid numeric string: ${i.message}`,t||"value",e)}}(0,r.MR)(!1,"invalid numeric value",t||"value",e)}function m(e){return p(f(e))}function g(e,t){let i=c(e,"value").toString(16);if(null==t)i.length%2&&(i="0"+i);else{let s=p(t,"width");for((0,r.vA)(2*s>=i.length,`value exceeds width (${s} bytes)`,"NUMERIC_FAULT",{operation:"toBeHex",fault:"overflow",value:e});i.length<2*s;)i="0"+i}return"0x"+i}function y(e){let t=c(e,"value");if(t===a)return new Uint8Array([]);let i=t.toString(16);i.length%2&&(i="0"+i);let s=new Uint8Array(i.length/2);for(let e=0;e<s.length;e++){let t=2*e;s[e]=parseInt(i.substring(t,t+2),16)}return s}function v(e){let t=(0,s.c$)((0,s.f)(e)?e:y(e)).substring(2);for(;t.startsWith("0");)t=t.substring(1);return""===t&&(t="0"),"0x"+t}},5874:(e,t,i)=>{"use strict";function s(e,t,i){for(let s in t){let r=t[s],a=i?i[s]:null;a&&function(e,t,i){let s=t.split("|").map(e=>e.trim());for(let i=0;i<s.length;i++)switch(t){case"any":return;case"bigint":case"boolean":case"number":case"string":if(typeof e===t)return}let r=Error(`invalid value for type ${t}`);throw r.code="INVALID_ARGUMENT",r.argument=`value.${i}`,r.value=e,r}(r,a,s),Object.defineProperty(e,s,{enumerable:!0,value:r,writable:!1})}}i.d(t,{n:()=>s})},1508:(e,t,i)=>{"use strict";i.d(t,{YW:()=>o,_v:()=>h});var s=i(4359),r=i(7600);function a(e,t,i,s,r){if("BAD_PREFIX"===e||"UNEXPECTED_CONTINUE"===e){let e=0;for(let s=t+1;s<i.length&&i[s]>>6==2;s++)e++;return e}return"OVERRUN"===e?i.length-t-1:0}let n=Object.freeze({error:function(e,t,i,s,a){(0,r.MR)(!1,`invalid codepoint at offset ${t}; ${e}`,"bytes",i)},ignore:a,replace:function(e,t,i,s,n){return"OVERLONG"===e?((0,r.MR)("number"==typeof n,"invalid bad code point for replacement","badCodepoint",n),s.push(n),0):(s.push(65533),a(e,t,i,s,n))}});function o(e,t){null!=t&&((0,r.SP)(t),e=e.normalize(t));let i=[];for(let t=0;t<e.length;t++){let s=e.charCodeAt(t);if(s<128)i.push(s);else if(s<2048)i.push(s>>6|192),i.push(63&s|128);else if((64512&s)==55296){t++;let a=e.charCodeAt(t);(0,r.MR)(t<e.length&&(64512&a)==56320,"invalid surrogate pair","str",e);let n=65536+((1023&s)<<10)+(1023&a);i.push(n>>18|240),i.push(n>>12&63|128),i.push(n>>6&63|128),i.push(63&n|128)}else i.push(s>>12|224),i.push(s>>6&63|128),i.push(63&s|128)}return new Uint8Array(i)}function h(e,t){return(function(e,t){null==t&&(t=n.error);let i=(0,s.q5)(e,"bytes"),r=[],a=0;for(;a<i.length;){let e=i[a++];if(e>>7==0){r.push(e);continue}let s=null,n=null;if((224&e)==192)s=1,n=127;else if((240&e)==224)s=2,n=2047;else if((248&e)==240)s=3,n=65535;else{(192&e)==128?a+=t("UNEXPECTED_CONTINUE",a-1,i,r):a+=t("BAD_PREFIX",a-1,i,r);continue}if(a-1+s>=i.length){a+=t("OVERRUN",a-1,i,r);continue}let o=e&(1<<8-s-1)-1;for(let e=0;e<s;e++){let e=i[a];if((192&e)!=128){a+=t("MISSING_CONTINUE",a,i,r),o=null;break}o=o<<6|63&e,a++}if(null!==o){if(o>1114111){a+=t("OUT_OF_RANGE",a-1-s,i,r,o);continue}if(o>=55296&&o<=57343){a+=t("UTF16_SURROGATE",a-1-s,i,r,o);continue}if(o<=n){a+=t("OVERLONG",a-1-s,i,r,o);continue}r.push(o)}}return r})(e,t).map(e=>e<=65535?String.fromCharCode(e):String.fromCharCode(((e-=65536)>>10&1023)+55296,(1023&e)+56320)).join("")}},984:(e,t,i)=>{"use strict";i.d(t,{Ge:()=>h});class s{constructor(e){this.buf=[+e||0]}mulAdd(e,t){let i,s;let r=this.buf,a=r.length;for(i=0;i<a;++i)(s=r[i]*e+t)<1e13?t=0:(t=0|s/1e13,s-=1e13*t),r[i]=s;t>0&&(r[i]=t)}sub(e){let t,i;let s=this.buf,r=s.length;for(t=0;t<r;++t)(i=s[t]-e)<0?(i+=1e13,e=1):e=0,s[t]=i;for(;0===s[s.length-1];)s.pop()}toString(e){if(10!=(e||10))throw Error("only base 10 is supported");let t=this.buf,i=t[t.length-1].toString();for(let e=t.length-2;e>=0;--e)i+=(1e13+t[e]).toString().substring(1);return i}valueOf(){let e=this.buf,t=0;for(let i=e.length-1;i>=0;--i)t=1e13*t+e[i];return t}simplify(){let e=this.buf;return 1==e.length?e[0]:this}}let r=/^(\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/,a=/^(\d\d\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;function n(e,t){return e.length>t&&(e=e.substring(0,t)+"…"),e}class o{constructor(e,t){this.hexDigits="0123456789ABCDEF",e instanceof o?(this.enc=e.enc,this.pos=e.pos):(this.enc=e,this.pos=t)}get(e){if(void 0===e&&(e=this.pos++),e>=this.enc.length)throw Error(`Requesting byte offset ${e} on a stream of length ${this.enc.length}`);return"string"==typeof this.enc?this.enc.charCodeAt(e):this.enc[e]}hexByte(e){return this.hexDigits.charAt(e>>4&15)+this.hexDigits.charAt(15&e)}hexDump(e,t,i){let s="";for(let r=e;r<t;++r)if(s+=this.hexByte(this.get(r)),!0!==i)switch(15&r){case 7:s+="  ";break;case 15:s+="\n";break;default:s+=" "}return s}isASCII(e,t){for(let i=e;i<t;++i){let e=this.get(i);if(e<32||e>176)return!1}return!0}parseStringISO(e,t){let i="";for(let s=e;s<t;++s)i+=String.fromCharCode(this.get(s));return i}parseStringUTF(e,t){let i="";for(let s=e;s<t;){let e=this.get(s++);e<128?i+=String.fromCharCode(e):e>191&&e<224?i+=String.fromCharCode((31&e)<<6|63&this.get(s++)):i+=String.fromCharCode((15&e)<<12|(63&this.get(s++))<<6|63&this.get(s++))}return i}parseStringBMP(e,t){let i="";for(let s=e;s<t;)i+=String.fromCharCode(this.get(s++)<<8|this.get(s++));return i}parseTime(e,t,i){let s=this.parseStringISO(e,t),n=(i?r:a).exec(s);return n?(i&&(n[1]=+n[1],n[1]+=70>+n[1]?2e3:1900),s=n[1]+"-"+n[2]+"-"+n[3]+" "+n[4],n[5]&&(s+=":"+n[5],n[6]&&(s+=":"+n[6],n[7]&&(s+="."+n[7]))),n[8]&&(s+=" UTC","Z"!=n[8]&&(s+=n[8],n[9]&&(s+=":"+n[9]))),s):"Unrecognized time: "+s}parseInteger(e,t){let i,r=this.get(e),a=r>127,n=a?255:0,o="";for(;r==n&&++e<t;)r=this.get(e);if(0==(i=t-e))return a?-1:0;if(i>4){for(o=r,i<<=3;((+o^n)&128)==0;)o=+o<<1,--i;o="("+i+" bit)\n"}a&&(r-=256);let h=new s(r);for(let i=e+1;i<t;++i)h.mulAdd(256,this.get(i));return o+h.toString()}parseBitString(e,t,i){let s=this.get(e),r="("+((t-e-1<<3)-s)+" bit)\n",a="";for(let o=e+1;o<t;++o){let e=this.get(o),h=o==t-1?s:0;for(let t=7;t>=h;--t)a+=e>>t&1?"1":"0";if(a.length>i)return r+n(a,i)}return r+a}parseOctetString(e,t,i){if(this.isASCII(e,t))return n(this.parseStringISO(e,t),i);let s=t-e,r="("+s+" byte)\n";s>(i/=2)&&(t=e+i);for(let i=e;i<t;++i)r+=this.hexByte(this.get(i));return s>i&&(r+="…"),r}parseOID(e,t,i){let r="",a=new s,o=0;for(let h=e;h<t;++h){let e=this.get(h);if(a.mulAdd(128,127&e),o+=7,!(128&e)){if(""===r){if((a=a.simplify())instanceof s)a.sub(80),r="2."+a.toString();else{let e=a<80?a<40?0:1:2;r=e+"."+(a-40*e)}}else r+="."+a.toString();if(r.length>i)return n(r,i);a=new s,o=0}}return o>0&&(r+=".incomplete"),r}}class h{constructor(e,t,i,s,r){if(!(s instanceof d))throw Error("Invalid tag value.");this.stream=e,this.header=t,this.length=i,this.tag=s,this.sub=r}typeName(){switch(this.tag.tagClass){case 0:switch(this.tag.tagNumber){case 0:return"EOC";case 1:return"BOOLEAN";case 2:return"INTEGER";case 3:return"BIT_STRING";case 4:return"OCTET_STRING";case 5:return"NULL";case 6:return"OBJECT_IDENTIFIER";case 7:return"ObjectDescriptor";case 8:return"EXTERNAL";case 9:return"REAL";case 10:return"ENUMERATED";case 11:return"EMBEDDED_PDV";case 12:return"UTF8String";case 16:return"SEQUENCE";case 17:return"SET";case 18:return"NumericString";case 19:return"PrintableString";case 20:return"TeletexString";case 21:return"VideotexString";case 22:return"IA5String";case 23:return"UTCTime";case 24:return"GeneralizedTime";case 25:return"GraphicString";case 26:return"VisibleString";case 27:return"GeneralString";case 28:return"UniversalString";case 30:return"BMPString"}return"Universal_"+this.tag.tagNumber.toString();case 1:return"Application_"+this.tag.tagNumber.toString();case 2:return"["+this.tag.tagNumber.toString()+"]";case 3:return"Private_"+this.tag.tagNumber.toString()}}content(e){if(void 0===this.tag)return null;void 0===e&&(e=1/0);let t=this.posContent(),i=Math.abs(this.length);if(!this.tag.isUniversal())return null!==this.sub?"("+this.sub.length+" elem)":this.stream.parseOctetString(t,t+i,e);switch(this.tag.tagNumber){case 1:return 0===this.stream.get(t)?"false":"true";case 2:return this.stream.parseInteger(t,t+i);case 3:return this.sub?"("+this.sub.length+" elem)":this.stream.parseBitString(t,t+i,e);case 4:return this.sub?"("+this.sub.length+" elem)":this.stream.parseOctetString(t,t+i,e);case 6:return this.stream.parseOID(t,t+i,e);case 16:case 17:if(null!==this.sub)return"("+this.sub.length+" elem)";return"(no elem)";case 12:return n(this.stream.parseStringUTF(t,t+i),e);case 18:case 19:case 20:case 21:case 22:case 26:return n(this.stream.parseStringISO(t,t+i),e);case 30:return n(this.stream.parseStringBMP(t,t+i),e);case 23:case 24:return this.stream.parseTime(t,t+i,23==this.tag.tagNumber)}return null}toString(){return this.typeName()+"@"+this.stream.pos+"[header:"+this.header+",length:"+this.length+",sub:"+(null===this.sub?"null":this.sub.length)+"]"}toPrettyString(e){void 0===e&&(e="");let t=e+this.typeName()+" @"+this.stream.pos;if(this.length>=0&&(t+="+"),t+=this.length,this.tag.tagConstructed?t+=" (constructed)":this.tag.isUniversal()&&(3==this.tag.tagNumber||4==this.tag.tagNumber)&&null!==this.sub&&(t+=" (encapsulates)"),t+="\n",null!==this.sub){e+="  ";for(let i=0,s=this.sub.length;i<s;++i)t+=this.sub[i].toPrettyString(e)}return t}posStart(){return this.stream.pos}posContent(){return this.stream.pos+this.header}posEnd(){return this.stream.pos+this.header+Math.abs(this.length)}toHexString(){return this.stream.hexDump(this.posStart(),this.posEnd(),!0)}static decodeLength(e){let t=e.get(),i=127&t;if(i==t)return i;if(i>6)throw Error("Length over 48 bits not supported at position "+(e.pos-1));if(0===i)return null;t=0;for(let s=0;s<i;++s)t=256*t+e.get();return t}getHexStringValue(){let e=this.toHexString(),t=2*this.header,i=2*this.length;return e.substr(t,i)}static decode(e){let t;t=e instanceof o?e:new o(e,0);let i=new o(t),s=new d(t),r=h.decodeLength(t),a=t.pos,n=a-i.pos,l=null,c=function(){let e=[];if(null!==r){let i=a+r;for(;t.pos<i;)e[e.length]=h.decode(t);if(t.pos!=i)throw Error("Content size is not correct for container starting at offset "+a)}else try{for(;;){let i=h.decode(t);if(i.tag.isEOC())break;e[e.length]=i}r=a-t.pos}catch(e){throw Error("Exception while decoding undefined length content: "+e)}return e};if(s.tagConstructed)l=c();else if(s.isUniversal()&&(3==s.tagNumber||4==s.tagNumber))try{if(3==s.tagNumber&&0!=t.get())throw Error("BIT STRINGs with unused bits cannot encapsulate.");l=c();for(let e=0;e<l.length;++e)if(l[e].tag.isEOC())throw Error("EOC is not supposed to be actual content.")}catch(e){l=null}if(null===l){if(null===r)throw Error("We can't skip over an invalid tag with undefined length at offset "+a);t.pos=a+Math.abs(r)}return new h(i,n,r,s,l)}}class d{constructor(e){let t=e.get();if(this.tagClass=t>>6,this.tagConstructed=(32&t)!=0,this.tagNumber=31&t,31==this.tagNumber){let i=new s;do t=e.get(),i.mulAdd(128,127&t);while(128&t);this.tagNumber=i.simplify()}}isUniversal(){return 0===this.tagClass}isEOC(){return 0===this.tagClass&&0===this.tagNumber}}},3624:(e,t,i)=>{"use strict";let s;i.d(t,{o:()=>r});let r={decode(e){let t;if(void 0===s){let e="= \f\n\r	\xa0\u2028\u2029";for(t=0,s=Object.create(null);t<64;++t)s["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(t)]=t;for(t=0,s["-"]=62,s._=63;t<e.length;++t)s[e.charAt(t)]=-1}let i=[],r=0,a=0;for(t=0;t<e.length;++t){let n=e.charAt(t);if("="==n)break;if(-1!=(n=s[n])){if(void 0===n)throw Error("Illegal character at offset "+t);r|=n,++a>=4?(i[i.length]=r>>16,i[i.length]=r>>8&255,i[i.length]=255&r,r=0,a=0):r<<=6}}switch(a){case 1:throw Error("Base64 encoding incomplete: at least 2 bits missing");case 2:i[i.length]=r>>10;break;case 3:i[i.length]=r>>16,i[i.length]=r>>8&255}return i},re:/-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,unarmor(e){let t=r.re.exec(e);if(t){if(t[1])e=t[1];else if(t[2])e=t[2];else throw Error("RegExp out of sync")}return r.decode(e)}}},1150:(e,t,i)=>{"use strict";let s,r;i.d(t,{D:()=>h});class a{constructor(){this.i=0,this.j=0,this.S=[]}init(e){let t,i,s;for(t=0;t<256;++t)this.S[t]=t;for(t=0,i=0;t<256;++t)i=i+this.S[t]+e[t%e.length]&255,s=this.S[t],this.S[t]=this.S[i],this.S[i]=s;this.i=0,this.j=0}next(){let e;return this.i=this.i+1&255,this.j=this.j+this.S[this.i]&255,e=this.S[this.i],this.S[this.i]=this.S[this.j],this.S[this.j]=e,this.S[e+this.S[this.i]&255]}}let n=null;{let e;if(n=[],r=0,"undefined"!=typeof window&&window.crypto&&window.crypto.getRandomValues){let t=new Uint32Array(256);for(window.crypto.getRandomValues(t),e=0;e<t.length;++e)n[r++]=255&t[e]}var o=0;let t=function(e){if((o=o||0)>=256||r>=256){window.removeEventListener?window.removeEventListener("mousemove",t,!1):window.detachEvent&&window.detachEvent("onmousemove",t);return}try{let t=e.x+e.y;n[r++]=255&t,o+=1}catch(e){}};"undefined"!=typeof window&&(window.addEventListener?window.addEventListener("mousemove",t,!1):window.attachEvent&&window.attachEvent("onmousemove",t))}class h{nextBytes(e){for(let t=0;t<e.length;++t)e[t]=function(){if(null==s){for(s=new a;r<256;){let e=Math.floor(65536*Math.random());n[r++]=255&e}for(s.init(n),r=0;r<n.length;++r)n[r]=0;r=0}return s.next()}()}}},5569:(e,t,i)=>{"use strict";i.d(t,{Z:()=>n,s:()=>o});var s=i(9360),r=i(8370),a=i(698);function n(e){return{hash:e,hmac:(t,...i)=>(0,s.w)(e,t,(0,r.Id)(...i)),randomBytes:r.po}}function o(e,t){let i=t=>(0,a.x3)({...e,...n(t)});return Object.freeze({...i(t),create:i})}},5269:(e,t,i)=>{"use strict";i.d(t,{A:()=>o,h:()=>h});var s=i(2968),r=i(5443);let a=BigInt(0),n=BigInt(1);function o(e,t){let i=(e,t)=>{let i=t.negate();return e?i:t},s=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate:i,unsafeLadder(t,i){let s=e.ZERO,r=t;for(;i>a;)i&n&&(s=s.add(r)),r=r.double(),i>>=n;return s},precomputeWindow(e,t){let{windows:i,windowSize:r}=s(t),a=[],n=e,o=n;for(let e=0;e<i;e++){o=n,a.push(o);for(let e=1;e<r;e++)o=o.add(n),a.push(o);n=o.double()}return a},wNAF(t,r,a){let{windows:o,windowSize:h}=s(t),d=e.ZERO,l=e.BASE,c=BigInt(2**t-1),u=2**t,f=BigInt(t);for(let e=0;e<o;e++){let t=e*h,s=Number(a&c);a>>=f,s>h&&(s-=u,a+=n);let o=t+Math.abs(s)-1,p=e%2!=0,m=s<0;0===s?l=l.add(i(p,r[t])):d=d.add(i(m,r[o]))}return{p:d,f:l}},wNAFCached(e,t,i,s){let r=e._WINDOW_SIZE||1,a=t.get(e);return a||(a=this.precomputeWindow(e,r),1!==r&&t.set(e,s(a))),this.wNAF(r,a,i)}}}function h(e){return(0,s.jr)(e.Fp),(0,r.Q5)(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...(0,s.LH)(e.n,e.nBitLength),...e})}},3926:(e,t,i)=>{"use strict";i.d(t,{FL:()=>l,qj:()=>c});var s=i(2968),r=i(5443);let a=r.Ph;function n(e,t){if(e<0||e>=1<<8*t)throw Error(`bad I2OSP call: value=${e} length=${t}`);let i=Array.from({length:t}).fill(0);for(let s=t-1;s>=0;s--)i[s]=255&e,e>>>=8;return new Uint8Array(i)}function o(e){if(!(e instanceof Uint8Array))throw Error("Uint8Array expected")}function h(e){if(!Number.isSafeInteger(e))throw Error("number expected")}function d(e,t,i){let d;(0,r.Q5)(i,{DST:"string",p:"bigint",m:"isSafeInteger",k:"isSafeInteger",hash:"hash"});let{p:l,k:c,m:u,hash:f,expand:p,DST:m}=i;o(e),h(t);let g=function(e){if(e instanceof Uint8Array)return e;if("string"==typeof e)return(0,r.AI)(e);throw Error("DST must be Uint8Array or string")}(m),y=Math.ceil((l.toString(2).length+c)/8),v=t*u*y;if("xmd"===p)d=function(e,t,i,s){o(e),o(t),h(i),t.length>255&&(t=s((0,r.Id)((0,r.AI)("H2C-OVERSIZE-DST-"),t)));let{outputLen:a,blockLen:d}=s,l=Math.ceil(i/a);if(l>255)throw Error("Invalid xmd length");let c=(0,r.Id)(t,n(t.length,1)),u=n(0,d),f=n(i,2),p=Array(l),m=s((0,r.Id)(u,e,f,n(0,1),c));p[0]=s((0,r.Id)(m,n(1,1),c));for(let e=1;e<=l;e++){let t=[function(e,t){let i=new Uint8Array(e.length);for(let s=0;s<e.length;s++)i[s]=e[s]^t[s];return i}(m,p[e-1]),n(e+1,1),c];p[e]=s((0,r.Id)(...t))}return(0,r.Id)(...p).slice(0,i)}(e,g,v,f);else if("xof"===p)d=function(e,t,i,s,a){if(o(e),o(t),h(i),t.length>255){let e=Math.ceil(2*s/8);t=a.create({dkLen:e}).update((0,r.AI)("H2C-OVERSIZE-DST-")).update(t).digest()}if(i>65535||t.length>255)throw Error("expand_message_xof: invalid lenInBytes");return a.create({dkLen:i}).update(e).update(n(i,2)).update(t).update(n(t.length,1)).digest()}(e,g,v,c,f);else if(void 0===p)d=e;else throw Error('expand must be "xmd", "xof" or undefined');let b=Array(t);for(let e=0;e<t;e++){let t=Array(u);for(let i=0;i<u;i++){let r=y*(i+e*u),n=d.subarray(r,r+y);t[i]=(0,s.zi)(a(n),l)}b[e]=t}return b}function l(e,t){let i=t.map(e=>Array.from(e).reverse());return(t,s)=>{let[r,a,n,o]=i.map(i=>i.reduce((i,s)=>e.add(e.mul(i,t),s)));return t=e.div(r,a),s=e.mul(s,e.div(n,o)),{x:t,y:s}}}function c(e,t,i){if("function"!=typeof t)throw Error("mapToCurve() must be defined");return{hashToCurve(s,r){let a=d(s,2,{...i,DST:i.DST,...r}),n=e.fromAffine(t(a[0])),o=e.fromAffine(t(a[1])),h=n.add(o).clearCofactor();return h.assertValidity(),h},encodeToCurve(s,r){let a=d(s,1,{...i,DST:i.encodeDST,...r}),n=e.fromAffine(t(a[0])).clearCofactor();return n.assertValidity(),n}}}},2968:(e,t,i)=>{"use strict";i.d(t,{B8:()=>p,Fp:()=>w,LH:()=>b,PA:()=>S,Tv:()=>k,dQ:()=>m,f4:()=>v,jr:()=>y,n7:()=>u,zH:()=>f,zi:()=>c});var s=i(5443);let r=BigInt(0),a=BigInt(1),n=BigInt(2),o=BigInt(3),h=BigInt(4),d=BigInt(5),l=BigInt(8);function c(e,t){let i=e%t;return i>=r?i:t+i}function u(e,t,i){if(i<=r||t<r)throw Error("Expected power/modulo > 0");if(i===a)return r;let s=a;for(;t>r;)t&a&&(s=s*e%i),e=e*e%i,t>>=a;return s}function f(e,t,i){let s=e;for(;t-- >r;)s*=s,s%=i;return s}function p(e,t){if(e===r||t<=r)throw Error(`invert: expected positive integers, got n=${e} mod=${t}`);let i=c(e,t),s=t,n=r,o=a,h=a,d=r;for(;i!==r;){let e=s/i,t=s%i,r=n-h*e,a=o-d*e;s=i,i=t,n=h,o=d,h=r,d=a}if(s!==a)throw Error("invert: does not exist");return c(n,t)}BigInt(9),BigInt(16);let m=(e,t)=>(c(e,t)&a)===a,g=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function y(e){let t=g.reduce((e,t)=>(e[t]="function",e),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"});return(0,s.Q5)(e,t)}function v(e,t,i){if(i<r)throw Error("Expected power > 0");if(i===r)return e.ONE;if(i===a)return t;let s=e.ONE,n=t;for(;i>r;)i&a&&(s=e.mul(s,n)),n=e.sqr(n),i>>=1n;return s}function b(e,t){let i=void 0!==t?t:e.toString(2).length,s=Math.ceil(i/8);return{nBitLength:i,nByteLength:s}}function w(e,t,i=!1,f={}){if(e<=r)throw Error(`Expected Fp ORDER > 0, got ${e}`);let{nBitLength:m,nByteLength:g}=b(e,t);if(g>2048)throw Error("Field lengths over 2048 bytes are not supported");let y=function(e){if(e%h===o){let t=(e+a)/h;return function(e,i){let s=e.pow(i,t);if(!e.eql(e.sqr(s),i))throw Error("Cannot find square root");return s}}if(e%l===d){let t=(e-d)/l;return function(e,i){let s=e.mul(i,n),r=e.pow(s,t),a=e.mul(i,r),o=e.mul(e.mul(a,n),r),h=e.mul(a,e.sub(o,e.ONE));if(!e.eql(e.sqr(h),i))throw Error("Cannot find square root");return h}}return function(e){let t,i,s;let o=(e-a)/n;for(t=e-a,i=0;t%n===r;t/=n,i++);for(s=n;s<e&&u(s,o,e)!==e-a;s++);if(1===i){let t=(e+a)/h;return function(e,i){let s=e.pow(i,t);if(!e.eql(e.sqr(s),i))throw Error("Cannot find square root");return s}}let d=(t+a)/n;return function(e,r){if(e.pow(r,o)===e.neg(e.ONE))throw Error("Cannot find square root");let n=i,h=e.pow(e.mul(e.ONE,s),t),l=e.pow(r,d),c=e.pow(r,t);for(;!e.eql(c,e.ONE);){if(e.eql(c,e.ZERO))return e.ZERO;let t=1;for(let i=e.sqr(c);t<n&&!e.eql(i,e.ONE);t++)i=e.sqr(i);let i=e.pow(h,a<<BigInt(n-t-1));h=e.sqr(i),l=e.mul(l,i),c=e.mul(c,h),n=t}return l}}(e)}(e),k=Object.freeze({ORDER:e,BITS:m,BYTES:g,MASK:(0,s.OG)(m),ZERO:r,ONE:a,create:t=>c(t,e),isValid:t=>{if("bigint"!=typeof t)throw Error(`Invalid field element: expected bigint, got ${typeof t}`);return r<=t&&t<e},is0:e=>e===r,isOdd:e=>(e&a)===a,neg:t=>c(-t,e),eql:(e,t)=>e===t,sqr:t=>c(t*t,e),add:(t,i)=>c(t+i,e),sub:(t,i)=>c(t-i,e),mul:(t,i)=>c(t*i,e),pow:(e,t)=>v(k,e,t),div:(t,i)=>c(t*p(i,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>p(t,e),sqrt:f.sqrt||(e=>y(k,e)),invertBatch:e=>(function(e,t){let i=Array(t.length),s=t.reduce((t,s,r)=>e.is0(s)?t:(i[r]=t,e.mul(t,s)),e.ONE),r=e.inv(s);return t.reduceRight((t,s,r)=>e.is0(s)?t:(i[r]=e.mul(t,i[r]),e.mul(t,s)),r),i})(k,e),cmov:(e,t,i)=>i?t:e,toBytes:e=>i?(0,s.z)(e,g):(0,s.lq)(e,g),fromBytes:e=>{if(e.length!==g)throw Error(`Fp.fromBytes: expected ${g}, got ${e.length}`);return i?(0,s.lX)(e):(0,s.Ph)(e)}});return Object.freeze(k)}function k(e,t){if(!e.isOdd)throw Error("Field doesn't have isOdd");let i=e.sqrt(t);return e.isOdd(i)?e.neg(i):i}function S(e,t,i=!1){let r=(e=(0,s.qj)("privateHash",e)).length,n=b(t).nByteLength+8;if(n<24||r<n||r>1024)throw Error(`hashToPrivateScalar: expected ${n}-1024 bytes of input, got ${r}`);return c(i?(0,s.lX)(e):(0,s.Ph)(e),t-a)+a}},9751:(e,t,i)=>{"use strict";i.r(t),i.d(t,{poseidon:()=>n,splitConstants:()=>a,validateOpts:()=>r});var s=i(2968);function r(e){let{Fp:t}=e;for(let i of((0,s.jr)(t),["t","roundsFull","roundsPartial"]))if("number"!=typeof e[i]||!Number.isSafeInteger(e[i]))throw Error(`Poseidon: invalid param ${i}=${e[i]} (${typeof e[i]})`);if(void 0!==e.reversePartialPowIdx&&"boolean"!=typeof e.reversePartialPowIdx)throw Error(`Poseidon: invalid param reversePartialPowIdx=${e.reversePartialPowIdx}`);let i=e.sboxPower;if(void 0===i&&(i=5),"number"!=typeof i||!Number.isSafeInteger(i))throw Error(`Poseidon wrong sboxPower=${i}`);let r=BigInt(i),a=e=>(0,s.f4)(t,e,r);if(3===i?a=e=>t.mul(t.sqrN(e),e):5===i&&(a=e=>t.mul(t.sqrN(t.sqrN(e)),e)),e.roundsFull%2!=0)throw Error(`Poseidon roundsFull is not even: ${e.roundsFull}`);let n=e.roundsFull+e.roundsPartial;if(!Array.isArray(e.roundConstants)||e.roundConstants.length!==n)throw Error("Poseidon: wrong round constants");let o=e.roundConstants.map(i=>{if(!Array.isArray(i)||i.length!==e.t)throw Error(`Poseidon wrong round constants: ${i}`);return i.map(e=>{if("bigint"!=typeof e||!t.isValid(e))throw Error(`Poseidon wrong round constant=${e}`);return t.create(e)})});if(!Array.isArray(e.mds)||e.mds.length!==e.t)throw Error("Poseidon: wrong MDS matrix");let h=e.mds.map(i=>{if(!Array.isArray(i)||i.length!==e.t)throw Error(`Poseidon MDS matrix row: ${i}`);return i.map(e=>{if("bigint"!=typeof e)throw Error(`Poseidon MDS matrix value=${e}`);return t.create(e)})});return Object.freeze({...e,rounds:n,sboxFn:a,roundConstants:o,mds:h})}function a(e,t){if("number"!=typeof t)throw Error("poseidonSplitConstants: wrong t");if(!Array.isArray(e)||e.length%t)throw Error("poseidonSplitConstants: wrong rc");let i=[],s=[];for(let r=0;r<e.length;r++)s.push(e[r]),s.length===t&&(i.push(s),s=[]);return i}function n(e){let{t,Fp:i,rounds:s,sboxFn:a,reversePartialPowIdx:n}=r(e),o=Math.floor(e.roundsFull/2),h=n?t-1:0,d=(t,s,r)=>(t=t.map((t,s)=>i.add(t,e.roundConstants[r][s])),s?t=t.map(e=>a(e)):t[h]=a(t[h]),t=e.mds.map(e=>e.reduce((e,s,r)=>i.add(e,i.mulN(s,t[r])),i.ZERO))),l=function(r){if(!Array.isArray(r)||r.length!==t)throw Error(`Poseidon: wrong values (expected array of bigints with length ${t})`);r=r.map(e=>{if("bigint"!=typeof e)throw Error(`Poseidon: wrong value=${e} (${typeof e})`);return i.create(e)});let a=0;for(let e=0;e<o;e++)r=d(r,!0,a++);for(let t=0;t<e.roundsPartial;t++)r=d(r,!1,a++);for(let e=0;e<o;e++)r=d(r,!0,a++);if(a!==s)throw Error(`Poseidon: wrong number of rounds: last round=${a}, total=${s}`);return r};return l.roundConstants=e.roundConstants,l}},5443:(e,t,i)=>{"use strict";i.d(t,{AI:()=>v,IV:()=>p,Id:()=>g,My:()=>o,OG:()=>b,Ph:()=>l,Q5:()=>T,aT:()=>d,ex:()=>y,fg:()=>S,lX:()=>c,lq:()=>u,qj:()=>m,z:()=>f}),BigInt(0);let s=BigInt(1),r=BigInt(2),a=e=>e instanceof Uint8Array,n=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));function o(e){if(!a(e))throw Error("Uint8Array expected");let t="";for(let i=0;i<e.length;i++)t+=n[e[i]];return t}function h(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}function d(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);if(e.length%2)throw Error("hex string is invalid: unpadded "+e.length);let t=new Uint8Array(e.length/2);for(let i=0;i<t.length;i++){let s=2*i,r=Number.parseInt(e.slice(s,s+2),16);if(Number.isNaN(r)||r<0)throw Error("invalid byte sequence");t[i]=r}return t}function l(e){return h(o(e))}function c(e){if(!a(e))throw Error("Uint8Array expected");return h(o(Uint8Array.from(e).reverse()))}let u=(e,t)=>d(e.toString(16).padStart(2*t,"0")),f=(e,t)=>u(e,t).reverse(),p=e=>d(function(e){let t=e.toString(16);return 1&t.length?`0${t}`:t}(e));function m(e,t,i){let s;if("string"==typeof t)try{s=d(t)}catch(i){throw Error(`${e} must be valid hex string, got "${t}". Cause: ${i}`)}else if(a(t))s=Uint8Array.from(t);else throw Error(`${e} must be hex string or Uint8Array`);let r=s.length;if("number"==typeof i&&r!==i)throw Error(`${e} expected ${i} bytes, got ${r}`);return s}function g(...e){let t=new Uint8Array(e.reduce((e,t)=>e+t.length,0)),i=0;return e.forEach(e=>{if(!a(e))throw Error("Uint8Array expected");t.set(e,i),i+=e.length}),t}function y(e,t){if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(e[i]!==t[i])return!1;return!0}function v(e){if("string"!=typeof e)throw Error(`utf8ToBytes expected string, got ${typeof e}`);return new TextEncoder().encode(e)}let b=e=>(r<<BigInt(e-1))-s,w=e=>new Uint8Array(e),k=e=>Uint8Array.from(e);function S(e,t,i){if("number"!=typeof e||e<2)throw Error("hashLen must be a number");if("number"!=typeof t||t<2)throw Error("qByteLen must be a number");if("function"!=typeof i)throw Error("hmacFn must be a function");let s=w(e),r=w(e),a=0,n=()=>{s.fill(1),r.fill(0),a=0},o=(...e)=>i(r,s,...e),h=(e=w())=>{r=o(k([0]),e),s=o(),0!==e.length&&(r=o(k([1]),e),s=o())},d=()=>{if(a++>=1e3)throw Error("drbg: tried 1000 values");let e=0,i=[];for(;e<t;){let t=(s=o()).slice();i.push(t),e+=s.length}return g(...i)};return(e,t)=>{let i;for(n(),h(e);!(i=t(d()));)h();return n(),i}}let O={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};function T(e,t,i={}){let s=(t,i,s)=>{let r=O[i];if("function"!=typeof r)throw Error(`Invalid validator "${i}", expected function`);let a=e[t];if((!s||void 0!==a)&&!r(a,e))throw Error(`Invalid param ${String(t)}=${a} (${typeof a}), expected ${i}`)};for(let[e,i]of Object.entries(t))s(e,i,!1);for(let[e,t]of Object.entries(i))s(e,t,!0);return e}},698:(e,t,i)=>{"use strict";i.d(t,{Is:()=>u,x3:()=>c});var s=i(2968),r=i(5443),a=i(5269);let{Ph:n,aT:o}=r,h={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(e){let{Err:t}=h;if(e.length<2||2!==e[0])throw new t("Invalid signature integer tag");let i=e[1],s=e.subarray(2,i+2);if(!i||s.length!==i)throw new t("Invalid signature integer: wrong length");if(0===s[0]&&s[1]<=127)throw new t("Invalid signature integer: trailing length");return{d:n(s),l:e.subarray(i+2)}},toSig(e){let{Err:t}=h,i="string"==typeof e?o(e):e;if(!(i instanceof Uint8Array))throw Error("ui8a expected");let s=i.length;if(s<2||48!=i[0])throw new t("Invalid signature tag");if(i[1]!==s-2)throw new t("Invalid signature: incorrect length");let{d:r,l:a}=h._parseInt(i.subarray(2)),{d:n,l:d}=h._parseInt(a);if(d.length)throw new t("Invalid signature: left bytes after parsing");return{r,s:n}},hexFromSig(e){let t=e=>Number.parseInt(e[0],16)>=8?"00"+e:e,i=e=>{let t=e.toString(16);return 1&t.length?`0${t}`:t},s=t(i(e.s)),r=t(i(e.r)),a=s.length/2,n=r.length/2,o=i(a),h=i(n);return`30${i(n+a+4)}02${h}${r}02${o}${s}`}},d=BigInt(0),l=BigInt(1);function c(e){let t=function(e){let t=(0,a.h)(e);return r.Q5(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}(e),i=t.n,n=t.Fp,o=n.BYTES+1,c=2*n.BYTES+1;function u(e){return s.zi(e,i)}function f(e){return s.B8(e,i)}let{ProjectivePoint:p,normPrivateKeyToScalar:m,weierstrassEquation:g,isWithinCurveOrder:y}=function(e){let t=function(e){let t=(0,a.h)(e);r.Q5(t,{a:"field",b:"field",fromBytes:"function",toBytes:"function"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean"});let{endo:i,Fp:s,a:n}=t;if(i){if(!s.eql(n,s.ZERO))throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof i||"bigint"!=typeof i.beta||"function"!=typeof i.splitScalar)throw Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}(e),{Fp:i}=t;function n(e){let{a:s,b:r}=t,a=i.sqr(e),n=i.mul(a,e);return i.add(i.add(n,i.mul(e,s)),r)}function o(e){return"bigint"==typeof e&&d<e&&e<t.n}function h(e){if(!o(e))throw Error("Expected valid bigint: 0 < bigint < curve.n")}function c(e){let i;let{allowedPrivateKeyLengths:a,nByteLength:n,wrapPrivateKey:o,n:d}=t;if(a&&"bigint"!=typeof e){if(e instanceof Uint8Array&&(e=r.My(e)),"string"!=typeof e||!a.includes(e.length))throw Error("Invalid key");e=e.padStart(2*n,"0")}try{i="bigint"==typeof e?e:r.Ph((0,r.qj)("private key",e,n))}catch(t){throw Error(`private key must be ${n} bytes, hex or bigint, not ${typeof e}`)}return o&&(i=s.zi(i,d)),h(i),i}let u=new Map;function f(e){if(!(e instanceof p))throw Error("ProjectivePoint expected")}class p{constructor(e,t,s){if(this.px=e,this.py=t,this.pz=s,null==e||!i.isValid(e))throw Error("x required");if(null==t||!i.isValid(t))throw Error("y required");if(null==s||!i.isValid(s))throw Error("z required")}static fromAffine(e){let{x:t,y:s}=e||{};if(!e||!i.isValid(t)||!i.isValid(s))throw Error("invalid affine point");if(e instanceof p)throw Error("projective point not allowed");let r=e=>i.eql(e,i.ZERO);return r(t)&&r(s)?p.ZERO:new p(t,s,i.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){let t=i.invertBatch(e.map(e=>e.pz));return e.map((e,i)=>e.toAffine(t[i])).map(p.fromAffine)}static fromHex(e){let i=p.fromAffine(t.fromBytes((0,r.qj)("pointHex",e)));return i.assertValidity(),i}static fromPrivateKey(e){return p.BASE.multiply(c(e))}_setWindowSize(e){this._WINDOW_SIZE=e,u.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint)return;throw Error("bad point: ZERO")}let{x:e,y:s}=this.toAffine();if(!i.isValid(e)||!i.isValid(s))throw Error("bad point: x or y not FE");let r=i.sqr(s),a=n(e);if(!i.eql(r,a))throw Error("bad point: equation left != right");if(!this.isTorsionFree())throw Error("bad point: not in prime-order subgroup")}hasEvenY(){let{y:e}=this.toAffine();if(i.isOdd)return!i.isOdd(e);throw Error("Field doesn't support isOdd")}equals(e){f(e);let{px:t,py:s,pz:r}=this,{px:a,py:n,pz:o}=e,h=i.eql(i.mul(t,o),i.mul(a,r)),d=i.eql(i.mul(s,o),i.mul(n,r));return h&&d}negate(){return new p(this.px,i.neg(this.py),this.pz)}double(){let{a:e,b:s}=t,r=i.mul(s,3n),{px:a,py:n,pz:o}=this,h=i.ZERO,d=i.ZERO,l=i.ZERO,c=i.mul(a,a),u=i.mul(n,n),f=i.mul(o,o),m=i.mul(a,n);return m=i.add(m,m),l=i.mul(a,o),l=i.add(l,l),h=i.mul(e,l),d=i.mul(r,f),d=i.add(h,d),h=i.sub(u,d),d=i.add(u,d),d=i.mul(h,d),h=i.mul(m,h),l=i.mul(r,l),f=i.mul(e,f),m=i.sub(c,f),m=i.mul(e,m),m=i.add(m,l),l=i.add(c,c),c=i.add(l,c),c=i.add(c,f),c=i.mul(c,m),d=i.add(d,c),f=i.mul(n,o),f=i.add(f,f),c=i.mul(f,m),h=i.sub(h,c),l=i.mul(f,u),l=i.add(l,l),new p(h,d,l=i.add(l,l))}add(e){f(e);let{px:s,py:r,pz:a}=this,{px:n,py:o,pz:h}=e,d=i.ZERO,l=i.ZERO,c=i.ZERO,u=t.a,m=i.mul(t.b,3n),g=i.mul(s,n),y=i.mul(r,o),v=i.mul(a,h),b=i.add(s,r),w=i.add(n,o);b=i.mul(b,w),w=i.add(g,y),b=i.sub(b,w),w=i.add(s,a);let k=i.add(n,h);return w=i.mul(w,k),k=i.add(g,v),w=i.sub(w,k),k=i.add(r,a),d=i.add(o,h),k=i.mul(k,d),d=i.add(y,v),k=i.sub(k,d),c=i.mul(u,w),d=i.mul(m,v),c=i.add(d,c),d=i.sub(y,c),c=i.add(y,c),l=i.mul(d,c),y=i.add(g,g),y=i.add(y,g),v=i.mul(u,v),w=i.mul(m,w),y=i.add(y,v),v=i.sub(g,v),v=i.mul(u,v),w=i.add(w,v),g=i.mul(y,w),l=i.add(l,g),g=i.mul(k,w),d=i.mul(b,d),d=i.sub(d,g),g=i.mul(b,y),c=i.mul(k,c),new p(d,l,c=i.add(c,g))}subtract(e){return this.add(e.negate())}is0(){return this.equals(p.ZERO)}wNAF(e){return g.wNAFCached(this,u,e,e=>{let t=i.invertBatch(e.map(e=>e.pz));return e.map((e,i)=>e.toAffine(t[i])).map(p.fromAffine)})}multiplyUnsafe(e){let s=p.ZERO;if(e===d)return s;if(h(e),e===l)return this;let{endo:r}=t;if(!r)return g.unsafeLadder(this,e);let{k1neg:a,k1:n,k2neg:o,k2:c}=r.splitScalar(e),u=s,f=s,m=this;for(;n>d||c>d;)n&l&&(u=u.add(m)),c&l&&(f=f.add(m)),m=m.double(),n>>=l,c>>=l;return a&&(u=u.negate()),o&&(f=f.negate()),f=new p(i.mul(f.px,r.beta),f.py,f.pz),u.add(f)}multiply(e){let s,r;h(e);let{endo:a}=t;if(a){let{k1neg:t,k1:n,k2neg:o,k2:h}=a.splitScalar(e),{p:d,f:l}=this.wNAF(n),{p:c,f:u}=this.wNAF(h);d=g.constTimeNegate(t,d),c=g.constTimeNegate(o,c),c=new p(i.mul(c.px,a.beta),c.py,c.pz),s=d.add(c),r=l.add(u)}else{let{p:t,f:i}=this.wNAF(e);s=t,r=i}return p.normalizeZ([s,r])[0]}multiplyAndAddUnsafe(e,t,i){let s=p.BASE,r=(e,t)=>t!==d&&t!==l&&e.equals(s)?e.multiply(t):e.multiplyUnsafe(t),a=r(this,t).add(r(e,i));return a.is0()?void 0:a}toAffine(e){let{px:t,py:s,pz:r}=this,a=this.is0();null==e&&(e=a?i.ONE:i.inv(r));let n=i.mul(t,e),o=i.mul(s,e),h=i.mul(r,e);if(a)return{x:i.ZERO,y:i.ZERO};if(!i.eql(h,i.ONE))throw Error("invZ was invalid");return{x:n,y:o}}isTorsionFree(){let{h:e,isTorsionFree:i}=t;if(e===l)return!0;if(i)return i(p,this);throw Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:e,clearCofactor:i}=t;return e===l?this:i?i(p,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),t.toBytes(p,this,e)}toHex(e=!0){return r.My(this.toRawBytes(e))}}p.BASE=new p(t.Gx,t.Gy,i.ONE),p.ZERO=new p(i.ZERO,i.ONE,i.ZERO);let m=t.nBitLength,g=(0,a.A)(p,t.endo?Math.ceil(m/2):m);return{ProjectivePoint:p,normPrivateKeyToScalar:c,weierstrassEquation:n,isWithinCurveOrder:o}}({...t,toBytes(e,t,i){let s=t.toAffine(),a=n.toBytes(s.x),o=r.Id;return i?o(Uint8Array.from([t.hasEvenY()?2:3]),a):o(Uint8Array.from([4]),a,n.toBytes(s.y))},fromBytes(e){let t=e.length,i=e[0],s=e.subarray(1);if(t===o&&(2===i||3===i)){let e=r.Ph(s);if(!(d<e&&e<n.ORDER))throw Error("Point is not on curve");let t=g(e),a=n.sqrt(t);return(1&i)==1!=((a&l)===l)&&(a=n.neg(a)),{x:e,y:a}}if(t===c&&4===i)return{x:n.fromBytes(s.subarray(0,n.BYTES)),y:n.fromBytes(s.subarray(n.BYTES,2*n.BYTES))};throw Error(`Point of length ${t} was invalid. Expected ${o} compressed bytes or ${c} uncompressed bytes`)}}),v=e=>r.My(r.lq(e,t.nByteLength)),b=(e,t,i)=>r.Ph(e.slice(t,i));class w{constructor(e,t,i){this.r=e,this.s=t,this.recovery=i,this.assertValidity()}static fromCompact(e){let i=t.nByteLength;return new w(b(e=(0,r.qj)("compactSignature",e,2*i),0,i),b(e,i,2*i))}static fromDER(e){let{r:t,s:i}=h.toSig((0,r.qj)("DER",e));return new w(t,i)}assertValidity(){if(!y(this.r))throw Error("r must be 0 < r < CURVE.n");if(!y(this.s))throw Error("s must be 0 < s < CURVE.n")}addRecoveryBit(e){return new w(this.r,this.s,e)}recoverPublicKey(e){let{r:i,s,recovery:a}=this,o=O((0,r.qj)("msgHash",e));if(null==a||![0,1,2,3].includes(a))throw Error("recovery id invalid");let h=2===a||3===a?i+t.n:i;if(h>=n.ORDER)throw Error("recovery id 2 or 3 invalid");let d=(1&a)==0?"02":"03",l=p.fromHex(d+v(h)),c=f(h),m=u(-o*c),g=u(s*c),y=p.BASE.multiplyAndAddUnsafe(l,m,g);if(!y)throw Error("point at infinify");return y.assertValidity(),y}hasHighS(){return this.s>i>>l}normalizeS(){return this.hasHighS()?new w(this.r,u(-this.s),this.recovery):this}toDERRawBytes(){return r.aT(this.toDERHex())}toDERHex(){return h.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return r.aT(this.toCompactHex())}toCompactHex(){return v(this.r)+v(this.s)}}function k(e){let t=e instanceof Uint8Array,i="string"==typeof e,s=(t||i)&&e.length;return t?s===o||s===c:i?s===2*o||s===2*c:e instanceof p}let S=t.bits2int||function(e){let i=r.Ph(e),s=8*e.length-t.nBitLength;return s>0?i>>BigInt(s):i},O=t.bits2int_modN||function(e){return u(S(e))},T=r.OG(t.nBitLength);function I(e){if("bigint"!=typeof e)throw Error("bigint expected");if(!(d<=e&&e<T))throw Error(`bigint expected < 2^${t.nBitLength}`);return r.lq(e,t.nByteLength)}let x={lowS:t.lowS,prehash:!1},P={lowS:t.lowS,prehash:!1};return p.BASE._setWindowSize(8),{CURVE:t,getPublicKey:function(e,t=!0){return p.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function(e,t,i=!0){if(k(e))throw Error("first arg must be private key");if(!k(t))throw Error("second arg must be public key");return p.fromHex(t).multiply(m(e)).toRawBytes(i)},sign:function(e,s,a=x){let{seed:o,k2sig:h}=function(e,s,a=x){if(["recovered","canonical"].some(e=>e in a))throw Error("sign() legacy options not supported");let{hash:o,randomBytes:h}=t,{lowS:c,prehash:g,extraEntropy:v}=a;null==c&&(c=!0),e=(0,r.qj)("msgHash",e),g&&(e=(0,r.qj)("prehashed msgHash",o(e)));let b=O(e),k=m(s),T=[I(k),I(b)];if(null!=v){let e=!0===v?h(n.BYTES):v;T.push((0,r.qj)("extraEntropy",e,n.BYTES))}return{seed:r.Id(...T),k2sig:function(e){let t=S(e);if(!y(t))return;let s=f(t),r=p.BASE.multiply(t).toAffine(),a=u(r.x);if(a===d)return;let n=u(s*u(b+a*k));if(n===d)return;let o=(r.x===a?0:2)|Number(r.y&l),h=n;if(c&&n>i>>l)h=n>i>>l?u(-n):n,o^=1;return new w(a,h,o)}}}(e,s,a);return r.fg(t.hash.outputLen,t.nByteLength,t.hmac)(o,h)},verify:function(e,i,s,a=P){let n,o;if(i=(0,r.qj)("msgHash",i),s=(0,r.qj)("publicKey",s),"strict"in a)throw Error("options.strict was renamed to lowS");let{lowS:d,prehash:l}=a;try{if("string"==typeof e||e instanceof Uint8Array)try{o=w.fromDER(e)}catch(t){if(!(t instanceof h.Err))throw t;o=w.fromCompact(e)}else if("object"==typeof e&&"bigint"==typeof e.r&&"bigint"==typeof e.s){let{r:t,s:i}=e;o=new w(t,i)}else throw Error("PARSE");n=p.fromHex(s)}catch(e){if("PARSE"===e.message)throw Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(d&&o.hasHighS())return!1;l&&(i=t.hash(i));let{r:c,s:m}=o,g=O(i),y=f(m),v=u(g*y),b=u(c*y),k=p.BASE.multiplyAndAddUnsafe(n,v,b)?.toAffine();return!!k&&u(k.x)===c},ProjectivePoint:p,Signature:w,utils:{isValidPrivateKey(e){try{return m(e),!0}catch(e){return!1}},normPrivateKeyToScalar:m,randomPrivateKey:()=>{let e=t.randomBytes(n.BYTES+8),a=s.PA(e,i);return r.lq(a,t.nByteLength)},precompute:(e=8,t=p.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}}function u(e,t){if(s.jr(e),!e.isValid(t.A)||!e.isValid(t.B)||!e.isValid(t.Z))throw Error("mapToCurveSimpleSWU: invalid opts");let i=function(e,t){let i=e.ORDER,s=0n;for(let e=i-1n;e%2n===0n;e/=2n)s+=1n;let r=s,a=(i-1n)/2n**r,n=(a-1n)/2n,o=2n**r-1n,h=2n**(r-1n),d=e.pow(t,a),l=e.pow(t,(a+1n)/2n),c=(t,i)=>{let s=d,a=e.pow(i,o),c=e.sqr(a);c=e.mul(c,i);let u=e.mul(t,c);u=e.pow(u,n),u=e.mul(u,a),a=e.mul(u,i),c=e.mul(u,t);let f=e.mul(c,a);u=e.pow(f,h);let p=e.eql(u,e.ONE);a=e.mul(c,l),u=e.mul(f,s),c=e.cmov(a,c,p),f=e.cmov(u,f,p);for(let t=r;t>1;t--){let i=2n**(t-2n),r=e.pow(f,i),n=e.eql(r,e.ONE);a=e.mul(c,s),s=e.mul(s,s),r=e.mul(f,s),c=e.cmov(a,c,n),f=e.cmov(r,f,n)}return{isValid:p,value:c}};if(e.ORDER%4n===3n){let i=(e.ORDER-3n)/4n,s=e.sqrt(e.neg(t));c=(t,r)=>{let a=e.sqr(r),n=e.mul(t,r);a=e.mul(a,n);let o=e.pow(a,i);o=e.mul(o,n);let h=e.mul(o,s),d=e.mul(e.sqr(o),r),l=e.eql(d,t),c=e.cmov(h,o,l);return{isValid:l,value:c}}}return c}(e,t.Z);if(!e.isOdd)throw Error("Fp.isOdd is not implemented!");return s=>{let r,a,n,o,h,d,l,c;r=e.sqr(s),r=e.mul(r,t.Z),a=e.sqr(r),a=e.add(a,r),n=e.add(a,e.ONE),n=e.mul(n,t.B),o=e.cmov(t.Z,e.neg(a),!e.eql(a,e.ZERO)),o=e.mul(o,t.A),a=e.sqr(n),d=e.sqr(o),h=e.mul(d,t.A),a=e.add(a,h),a=e.mul(a,n),d=e.mul(d,o),h=e.mul(d,t.B),a=e.add(a,h),l=e.mul(r,n);let{isValid:u,value:f}=i(a,d);c=e.mul(r,s),c=e.mul(c,f),l=e.cmov(l,n,u),c=e.cmov(c,f,u);let p=e.isOdd(s)===e.isOdd(c);return c=e.cmov(e.neg(c),c,p),{x:l=e.div(l,o),y:c}}}},74:(e,t,i)=>{"use strict";i.d(t,{ev:()=>C});var s=i(1701),r=i(8370),a=i(2968),n=i(5443),o=i(5269);let h=BigInt(0),d=BigInt(1),l=BigInt(2),c=BigInt(8);function u(e){let t=function(e){let t=(0,o.h)(e);return n.Q5(e,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...t})}(e),{Fp:i,n:s,preHash:r,hash:u,randomBytes:f,nByteLength:p,h:m}=t,g=l**BigInt(8*p),y=i.create,v=t.uvRatio||((e,t)=>{try{return{isValid:!0,value:i.sqrt(e*i.inv(t))}}catch(e){return{isValid:!1,value:h}}}),b=t.adjustScalarBytes||(e=>e),w=t.domain||((e,t,i)=>{if(t.length||i)throw Error("Contexts/pre-hash are not supported");return e}),k=e=>"bigint"==typeof e&&0n<e,S=(e,t)=>k(e)&&k(t)&&e<t,O=e=>e===h||S(e,g);function T(e,t){if(S(e,t))return e;throw Error(`Expected valid scalar < ${t}, got ${typeof e} ${e}`)}function I(e){return e===h?e:T(e,s)}let x=new Map;function P(e){if(!(e instanceof M))throw Error("ExtendedPoint expected")}class M{constructor(e,t,i,s){if(this.ex=e,this.ey=t,this.ez=i,this.et=s,!O(e))throw Error("x required");if(!O(t))throw Error("y required");if(!O(i))throw Error("z required");if(!O(s))throw Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(e){if(e instanceof M)throw Error("extended point not allowed");let{x:t,y:i}=e||{};if(!O(t)||!O(i))throw Error("invalid affine point");return new M(t,i,d,y(t*i))}static normalizeZ(e){let t=i.invertBatch(e.map(e=>e.ez));return e.map((e,i)=>e.toAffine(t[i])).map(M.fromAffine)}_setWindowSize(e){this._WINDOW_SIZE=e,x.delete(this)}assertValidity(){let{a:e,d:i}=t;if(this.is0())throw Error("bad point: ZERO");let{ex:s,ey:r,ez:a,et:n}=this,o=y(s*s),h=y(r*r),d=y(a*a),l=y(d*d),c=y(o*e);if(y(d*y(c+h))!==y(l+y(i*y(o*h))))throw Error("bad point: equation left != right (1)");if(y(s*r)!==y(a*n))throw Error("bad point: equation left != right (2)")}equals(e){P(e);let{ex:t,ey:i,ez:s}=this,{ex:r,ey:a,ez:n}=e,o=y(t*n),h=y(r*s),d=y(i*n),l=y(a*s);return o===h&&d===l}is0(){return this.equals(M.ZERO)}negate(){return new M(y(-this.ex),this.ey,this.ez,y(-this.et))}double(){let{a:e}=t,{ex:i,ey:s,ez:r}=this,a=y(i*i),n=y(s*s),o=y(l*y(r*r)),h=y(e*a),d=i+s,c=y(y(d*d)-a-n),u=h+n,f=u-o,p=h-n,m=y(c*f),g=y(u*p),v=y(c*p);return new M(m,g,y(f*u),v)}add(e){P(e);let{a:i,d:s}=t,{ex:r,ey:a,ez:n,et:o}=this,{ex:d,ey:c,ez:u,et:f}=e;if(i===BigInt(-1)){let e=y((a-r)*(c+d)),t=y((a+r)*(c-d)),i=y(t-e);if(i===h)return this.double();let s=y(n*l*f),p=y(o*l*u),m=p+s,g=t+e,v=p-s,b=y(m*i),w=y(g*v),k=y(m*v);return new M(b,w,y(i*g),k)}let p=y(r*d),m=y(a*c),g=y(o*s*f),v=y(n*u),b=y((r+a)*(d+c)-p-m),w=v-g,k=v+g,S=y(m-i*p),O=y(b*w),T=y(k*S),I=y(b*S);return new M(O,T,y(w*k),I)}subtract(e){return this.add(e.negate())}wNAF(e){return B.wNAFCached(this,x,e,M.normalizeZ)}multiply(e){let{p:t,f:i}=this.wNAF(T(e,s));return M.normalizeZ([t,i])[0]}multiplyUnsafe(e){let t=I(e);return t===h?C:this.equals(C)||t===d?this:this.equals(A)?this.wNAF(t).p:B.unsafeLadder(this,t)}isSmallOrder(){return this.multiplyUnsafe(m).is0()}isTorsionFree(){return B.unsafeLadder(this,s).is0()}toAffine(e){let{ex:t,ey:s,ez:r}=this,a=this.is0();null==e&&(e=a?c:i.inv(r));let n=y(t*e),o=y(s*e),l=y(r*e);if(a)return{x:h,y:d};if(l!==d)throw Error("invZ was invalid");return{x:n,y:o}}clearCofactor(){let{h:e}=t;return e===d?this:this.multiplyUnsafe(e)}static fromHex(e,s=!0){let{d:r,a}=t,o=i.BYTES,l=(e=(0,n.qj)("pointHex",e,o)).slice(),c=e[o-1];l[o-1]=-129&c;let u=n.lX(l);u===h||(s?T(u,i.ORDER):T(u,g));let f=y(u*u),{isValid:p,value:m}=v(y(f-d),y(r*f-a));if(!p)throw Error("Point.fromHex: invalid y coordinate");return(128&c)!=0!=((m&d)===d)&&(m=y(-m)),M.fromAffine({x:m,y:u})}static fromPrivateKey(e){return _(e).point}toRawBytes(){let{x:e,y:t}=this.toAffine(),s=n.z(t,i.BYTES);return s[s.length-1]|=e&d?128:0,s}toHex(){return n.My(this.toRawBytes())}}M.BASE=new M(t.Gx,t.Gy,d,y(t.Gx*t.Gy)),M.ZERO=new M(h,d,d,h);let{BASE:A,ZERO:C}=M,B=(0,o.A)(M,8*p);function E(e){return(0,a.zi)(e,s)}function _(e){e=(0,n.qj)("private key",e,p);let t=(0,n.qj)("hashed private key",u(e),2*p),i=b(t.slice(0,p)),s=t.slice(p,2*p),r=E(n.lX(i)),a=A.multiply(r),o=a.toRawBytes();return{head:i,prefix:s,scalar:r,point:a,pointBytes:o}}function N(e=new Uint8Array,...t){var i;return i=u(w(n.Id(...t),(0,n.qj)("context",e),!!r)),E(n.lX(i))}return A._setWindowSize(8),{CURVE:t,getPublicKey:function(e){return _(e).pointBytes},sign:function(e,t,s){e=(0,n.qj)("message",e),r&&(e=r(e));let{prefix:a,scalar:o,pointBytes:h}=_(t),d=N(s,a,e),l=A.multiply(d).toRawBytes(),c=E(d+N(s,l,h,e)*o);I(c);let u=n.Id(l,n.z(c,i.BYTES));return(0,n.qj)("result",u,2*p)},signModified:function(e,t,s){e=(0,n.qj)("message",e);let r=(0,n.qj)("privKey",t),a=n.lX(r),o=A.multiply(E(a)).toRawBytes(),h=128&o[31],d=N(s,r,e),l=A.multiply(d).toRawBytes(),c=E(d+N(s,l,o,e)*a);I(c);let u=n.z(c,i.BYTES);u[31]|=h;let f=n.Id(l,u);return(0,n.qj)("result",f,2*p)},verify:function(e,t,s,a){let o=i.BYTES;e=(0,n.qj)("signature",e,2*o),t=(0,n.qj)("message",t),r&&(t=r(t));let h=M.fromHex(s,!1),d=M.fromHex(e.slice(0,o),!1),l=n.lX(e.slice(o,2*o)),c=A.multiplyUnsafe(l),u=N(a,d.toRawBytes(),h.toRawBytes(),t);return d.add(h.multiplyUnsafe(u)).subtract(c).clearCofactor().equals(M.ZERO)},ExtendedPoint:M,utils:{getExtendedPublicKey:_,randomPrivateKey:()=>f(i.BYTES),precompute:(e=8,t=M.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}}let f=BigInt(0);BigInt(1);var p=i(3926);let m=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),g=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),y=BigInt(0),v=BigInt(1),b=BigInt(2),w=BigInt(5),k=BigInt(10),S=BigInt(20),O=BigInt(40),T=BigInt(80);function I(e){let t=e*e%m*e%m,i=(0,a.zH)(t,b,m)*t%m,s=(0,a.zH)(i,v,m)*e%m,r=(0,a.zH)(s,w,m)*s%m,n=(0,a.zH)(r,k,m)*r%m,o=(0,a.zH)(n,S,m)*n%m,h=(0,a.zH)(o,O,m)*o%m,d=(0,a.zH)(h,T,m)*h%m,l=(0,a.zH)(d,T,m)*h%m,c=(0,a.zH)(l,k,m)*r%m;return{pow_p_5_8:(0,a.zH)(c,b,m)*e%m,b2:t}}function x(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}function P(e,t){let i=(0,a.zi)(t*t*t,m),s=I(e*(0,a.zi)(i*i*t,m)).pow_p_5_8,r=(0,a.zi)(e*i*s,m),n=(0,a.zi)(t*r*r,m),o=r,h=(0,a.zi)(r*g,m),d=n===e,l=n===(0,a.zi)(-e,m),c=n===(0,a.zi)(-e*g,m);return d&&(r=o),(l||c)&&(r=h),(0,a.dQ)(r,m)&&(r=(0,a.zi)(-r,m)),{isValid:d||l,value:r}}let M=(0,a.Fp)(m,void 0,!0),A={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:M,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:s.Zf,randomBytes:r.po,adjustScalarBytes:x,uvRatio:P},C=u(A);function B(e,t,i){if(t.length>255)throw Error("Context is too big");return(0,r.Id)((0,r.AI)("SigEd25519 no Ed25519 collisions"),new Uint8Array([i?1:0,t.length]),t,e)}u({...A,domain:B}),u({...A,domain:B,preHash:s.Zf}),function(e){var t;let i=((0,n.Q5)(e,{a:"bigint"},{montgomeryBits:"isSafeInteger",nByteLength:"isSafeInteger",adjustScalarBytes:"function",domain:"function",powPminus2:"function",Gu:"bigint"}),Object.freeze({...e})),{P:s}=i,r=e=>(0,a.zi)(e,s),o=Math.ceil(i.montgomeryBits/8);i.nByteLength,i.adjustScalarBytes||(e=>e),i.powPminus2||(e=>(0,a.n7)(e,s-BigInt(2),s));i.a,BigInt(2),BigInt(4);t=i.Gu,(0,n.z)(r(t),o)}({P:m,a:BigInt(486662),montgomeryBits:255,nByteLength:32,Gu:BigInt(9),powPminus2:e=>{let{pow_p_5_8:t,b2:i}=I(e);return(0,a.zi)((0,a.zH)(t,BigInt(3),m)*i,m)},adjustScalarBytes:x,randomBytes:r.po});let E=(M.ORDER+BigInt(3))/BigInt(8),_=M.pow(b,E),N=M.sqrt(M.neg(M.ONE)),L=(M.ORDER-BigInt(5))/BigInt(8),R=BigInt(486662),D=(0,a.Tv)(M,M.neg(BigInt(486664))),{hashToCurve:V,encodeToCurve:q}=p.qj(C.ExtendedPoint,e=>(function(e){let t,i,s,r,a,n,o,h,d,l,c,u,f,p,m,g,y,v,w,k,S;let{xMn:O,xMd:T,yMn:I,yMd:x}=(t=M.sqr(e),t=M.mul(t,b),i=M.add(t,M.ONE),s=M.neg(R),r=M.sqr(i),a=M.mul(r,i),n=M.mul(t,R),n=M.mul(n,s),n=M.add(n,r),n=M.mul(n,s),o=M.sqr(a),r=M.sqr(o),o=M.mul(o,a),o=M.mul(o,n),r=M.mul(r,o),h=M.pow(r,L),h=M.mul(h,o),d=M.mul(h,N),r=M.sqr(h),r=M.mul(r,a),l=M.eql(r,n),c=M.cmov(d,h,l),u=M.mul(s,t),f=M.mul(h,e),f=M.mul(f,_),p=M.mul(f,N),m=M.mul(n,t),r=M.sqr(f),r=M.mul(r,a),g=M.eql(r,m),y=M.cmov(p,f,g),r=M.sqr(c),r=M.mul(r,a),v=M.eql(r,n),w=M.cmov(u,s,v),k=M.cmov(y,c,v),S=M.isOdd(k),{xMn:w,xMd:i,yMn:k=M.cmov(k,M.neg(k),v!==S),yMd:1n}),P=M.mul(O,x);P=M.mul(P,D);let A=M.mul(T,I),C=M.sub(O,T),B=M.add(O,T),E=M.mul(A,B),V=M.eql(E,M.ZERO);P=M.cmov(P,M.ZERO,V),A=M.cmov(A,M.ONE,V),C=M.cmov(C,M.ONE,V),B=M.cmov(B,M.ONE,V);let q=M.invertBatch([A,B]);return{x:M.mul(P,q[0]),y:M.mul(C,q[1])}})(e[0]),{DST:"edwards25519_XMD:SHA-512_ELL2_RO_",encodeDST:"edwards25519_XMD:SHA-512_ELL2_NU_",p:M.ORDER,m:1,k:128,expand:"xmd",hash:s.Zf});function F(e){if(!(e instanceof $))throw Error("RistrettoPoint expected")}let H=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),G=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),U=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),W=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),j=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),K=e=>P(v,e),z=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),Y=e=>C.CURVE.Fp.create((0,n.lX)(e)&z);function X(e){let{d:t}=C.CURVE,i=C.CURVE.Fp.ORDER,s=C.CURVE.Fp.create,r=s(H*e*e),n=s((r+v)*W),o=BigInt(-1),h=s((o-t*r)*s(r+t)),{isValid:d,value:l}=P(n,h),c=s(l*e);(0,a.dQ)(c,i)||(c=s(-c)),d||(l=c),d||(o=r);let u=s(o*(r-v)*j-h),f=l*l,p=s((l+l)*h),m=s(u*G),g=s(v-f),y=s(v+f);return new C.ExtendedPoint(s(p*y),s(g*m),s(m*y),s(p*g))}class ${constructor(e){this.ep=e}static fromAffine(e){return new $(C.ExtendedPoint.fromAffine(e))}static hashToCurve(e){let t=X(Y((e=(0,n.qj)("ristrettoHash",e,64)).slice(0,32))),i=X(Y(e.slice(32,64)));return new $(t.add(i))}static fromHex(e){e=(0,n.qj)("ristrettoHex",e,32);let{a:t,d:i}=C.CURVE,s=C.CURVE.Fp.ORDER,r=C.CURVE.Fp.create,o="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",h=Y(e);if(!(0,n.ex)((0,n.z)(h,32),e)||(0,a.dQ)(h,s))throw Error(o);let d=r(h*h),l=r(v+t*d),c=r(v-t*d),u=r(l*l),f=r(c*c),p=r(t*i*u-f),{isValid:m,value:g}=K(r(p*f)),b=r(g*c),w=r(g*b*p),k=r((h+h)*b);(0,a.dQ)(k,s)&&(k=r(-k));let S=r(l*w),O=r(k*S);if(!m||(0,a.dQ)(O,s)||S===y)throw Error(o);return new $(new C.ExtendedPoint(k,S,v,O))}toRawBytes(){let e,{ex:t,ey:i,ez:s,et:r}=this.ep,o=C.CURVE.Fp.ORDER,h=C.CURVE.Fp.create,d=h(h(s+i)*h(s-i)),l=h(t*i),c=h(l*l),{value:u}=K(h(d*c)),f=h(u*d),p=h(u*l),m=h(f*p*r);if((0,a.dQ)(r*m,o)){let s=h(i*H),r=h(t*H);t=s,i=r,e=h(f*U)}else e=p;(0,a.dQ)(t*m,o)&&(i=h(-i));let g=h((s-i)*e);return(0,a.dQ)(g,o)&&(g=h(-g)),(0,n.z)(g,32)}toHex(){return(0,n.My)(this.toRawBytes())}toString(){return this.toHex()}equals(e){F(e);let{ex:t,ey:i}=this.ep,{ex:s,ey:r}=e.ep,a=C.CURVE.Fp.create,n=a(t*r)===a(i*s),o=a(i*r)===a(t*s);return n||o}add(e){return F(e),new $(this.ep.add(e.ep))}subtract(e){return F(e),new $(this.ep.subtract(e.ep))}multiply(e){return new $(this.ep.multiply(e))}multiplyUnsafe(e){return new $(this.ep.multiplyUnsafe(e))}}$.BASE=new $(C.ExtendedPoint.BASE),$.ZERO=new $(C.ExtendedPoint.ZERO)},1750:(e,t,i)=>{"use strict";i.d(t,{Qj:()=>u});var s=i(5569),r=i(5432),a=i(2968),n=i(698),o=i(3926);let h=(0,a.Fp)(BigInt("0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff")),d=h.create(BigInt("-3")),l=BigInt("0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"),c=(0,n.Is)(h,{A:d,B:l,Z:h.create(BigInt("-10"))}),u=(0,s.s)({a:d,b:l,Fp:h,n:BigInt("0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551"),Gx:BigInt("0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"),Gy:BigInt("0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"),h:BigInt(1),lowS:!1},r.s),{hashToCurve:f,encodeToCurve:p}=o.qj(u.ProjectivePoint,e=>c(e[0]),{DST:"P256_XMD:SHA-256_SSWU_RO_",encodeDST:"P256_XMD:SHA-256_SSWU_NU_",p:h.ORDER,m:1,k:128,expand:"xmd",hash:r.s})},2389:(e,t,i)=>{"use strict";i.d(t,{bI:()=>m});var s=i(5432),r=(i(8370),i(2968)),a=i(698),n=i(5443),o=i(3926),h=i(5569);let d=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),l=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),c=BigInt(1),u=BigInt(2),f=(e,t)=>(e+t/u)/t,p=(0,r.Fp)(d,void 0,void 0,{sqrt:function(e){let t=BigInt(3),i=BigInt(6),s=BigInt(11),a=BigInt(22),n=BigInt(23),o=BigInt(44),h=BigInt(88),l=e*e*e%d,c=l*l*e%d,f=(0,r.zH)(c,t,d)*c%d,m=(0,r.zH)(f,t,d)*c%d,g=(0,r.zH)(m,u,d)*l%d,y=(0,r.zH)(g,s,d)*g%d,v=(0,r.zH)(y,a,d)*y%d,b=(0,r.zH)(v,o,d)*v%d,w=(0,r.zH)(b,h,d)*b%d,k=(0,r.zH)(w,o,d)*v%d,S=(0,r.zH)(k,t,d)*c%d,O=(0,r.zH)(S,n,d)*y%d,T=(0,r.zH)(O,i,d)*l%d,I=(0,r.zH)(T,u,d);if(!p.eql(p.sqr(I),e))throw Error("Cannot find square root");return I}}),m=(0,h.s)({a:BigInt(0),b:BigInt(7),Fp:p,n:l,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{let t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),i=-c*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),a=BigInt("0x100000000000000000000000000000000"),n=f(t*e,l),o=f(-i*e,l),h=(0,r.zi)(e-n*t-o*s,l),d=(0,r.zi)(-n*i-o*t,l),u=h>a,p=d>a;if(u&&(h=l-h),p&&(d=l-d),h>a||d>a)throw Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:u,k1:h,k2neg:p,k2:d}}}},s.s);BigInt(0),m.ProjectivePoint,m.utils.randomPrivateKey,n.lq,n.Ph,r.zi;let g=o.FL(p,[["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7","0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581","0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262","0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b","0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14","0x0000000000000000000000000000000000000000000000000000000000000001"],["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c","0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3","0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931","0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b","0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573","0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f","0x0000000000000000000000000000000000000000000000000000000000000001"]].map(e=>e.map(e=>BigInt(e)))),y=(0,a.Is)(p,{A:BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),B:BigInt("1771"),Z:p.create(BigInt("-11"))}),{hashToCurve:v,encodeToCurve:b}=o.qj(m.ProjectivePoint,e=>{let{x:t,y:i}=y(p.create(e[0]));return g(t,i)},{DST:"secp256k1_XMD:SHA-256_SSWU_RO_",encodeDST:"secp256k1_XMD:SHA-256_SSWU_NU_",p:p.ORDER,m:1,k:128,expand:"xmd",hash:s.s})},6710:(e,t,i)=>{"use strict";function s(e){if(!Number.isSafeInteger(e)||e<0)throw Error(`Wrong positive integer: ${e}`)}function r(e,...t){if(!(e instanceof Uint8Array))throw TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}i.d(t,{Ay:()=>a});let a={number:s,bool:function(e){if("boolean"!=typeof e)throw Error(`Expected boolean, not ${e}`)},bytes:r,hash:function(e){if("function"!=typeof e||"function"!=typeof e.create)throw Error("Hash should be wrapped by utils.wrapConstructor");s(e.outputLen),s(e.blockLen)},exists:function(e,t=!0){if(e.destroyed)throw Error("Hash instance has been destroyed");if(t&&e.finished)throw Error("Hash#digest() has already been called")},output:function(e,t){r(e);let i=t.outputLen;if(e.length<i)throw Error(`digestInto() expects output buffer of length at least ${i}`)}}},5936:(e,t,i)=>{"use strict";i.d(t,{D:()=>a});var s=i(6710),r=i(8370);class a extends r.Vw{constructor(e,t,i,s){super(),this.blockLen=e,this.outputLen=t,this.padOffset=i,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,r.O8)(this.buffer)}update(e){s.Ay.exists(this);let{view:t,buffer:i,blockLen:a}=this,n=(e=(0,r.ZJ)(e)).length;for(let s=0;s<n;){let o=Math.min(a-this.pos,n-s);if(o===a){let t=(0,r.O8)(e);for(;a<=n-s;s+=a)this.process(t,s);continue}i.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===a&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){s.Ay.exists(this),s.Ay.output(e,this),this.finished=!0;let{buffer:t,view:i,blockLen:a,isLE:n}=this,{pos:o}=this;t[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>a-o&&(this.process(i,0),o=0);for(let e=o;e<a;e++)t[e]=0;!function(e,t,i,s){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,i,s);let r=BigInt(32),a=BigInt(0xffffffff),n=Number(i>>r&a),o=Number(i&a),h=s?4:0,d=s?0:4;e.setUint32(t+h,n,s),e.setUint32(t+d,o,s)}(i,a-8,BigInt(8*this.length),n),this.process(i,0);let h=(0,r.O8)(e),d=this.outputLen;if(d%4)throw Error("_sha2: outputLen should be aligned to 32bit");let l=d/4,c=this.get();if(l>c.length)throw Error("_sha2: outputLen bigger than state");for(let e=0;e<l;e++)h.setUint32(4*e,c[e],n)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let i=e.slice(0,t);return this.destroy(),i}_cloneInto(e){(e||=new this.constructor).set(...this.get());let{blockLen:t,buffer:i,length:s,finished:r,destroyed:a,pos:n}=this;return e.length=s,e.pos=n,e.finished=r,e.destroyed=a,s%t&&e.buffer.set(i),e}}},7717:(e,t,i)=>{"use strict";i.d(t,{Ay:()=>n});let s=BigInt(0x100000000-1),r=BigInt(32);function a(e,t=!1){return t?{h:Number(e&s),l:Number(e>>r&s)}:{h:0|Number(e>>r&s),l:0|Number(e&s)}}let n={fromBig:a,split:function(e,t=!1){let i=new Uint32Array(e.length),s=new Uint32Array(e.length);for(let r=0;r<e.length;r++){let{h:n,l:o}=a(e[r],t);[i[r],s[r]]=[n,o]}return[i,s]},toBig:(e,t)=>BigInt(e>>>0)<<r|BigInt(t>>>0),shrSH:(e,t,i)=>e>>>i,shrSL:(e,t,i)=>e<<32-i|t>>>i,rotrSH:(e,t,i)=>e>>>i|t<<32-i,rotrSL:(e,t,i)=>e<<32-i|t>>>i,rotrBH:(e,t,i)=>e<<64-i|t>>>i-32,rotrBL:(e,t,i)=>e>>>i-32|t<<64-i,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH:(e,t,i)=>e<<i|t>>>32-i,rotlSL:(e,t,i)=>t<<i|e>>>32-i,rotlBH:(e,t,i)=>t<<i-32|e>>>64-i,rotlBL:(e,t,i)=>e<<i-32|t>>>64-i,add:function(e,t,i,s){let r=(t>>>0)+(s>>>0);return{h:e+i+(r/0x100000000|0)|0,l:0|r}},add3L:(e,t,i)=>(e>>>0)+(t>>>0)+(i>>>0),add3H:(e,t,i,s)=>t+i+s+(e/0x100000000|0)|0,add4L:(e,t,i,s)=>(e>>>0)+(t>>>0)+(i>>>0)+(s>>>0),add4H:(e,t,i,s,r)=>t+i+s+r+(e/0x100000000|0)|0,add5H:(e,t,i,s,r,a)=>t+i+s+r+a+(e/0x100000000|0)|0,add5L:(e,t,i,s,r)=>(e>>>0)+(t>>>0)+(i>>>0)+(s>>>0)+(r>>>0)}},9360:(e,t,i)=>{"use strict";i.d(t,{w:()=>n});var s=i(6710),r=i(8370);class a extends r.Vw{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,s.Ay.hash(e);let i=(0,r.ZJ)(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw TypeError("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let a=this.blockLen,n=new Uint8Array(a);n.set(i.length>a?e.create().update(i).digest():i);for(let e=0;e<n.length;e++)n[e]^=54;this.iHash.update(n),this.oHash=e.create();for(let e=0;e<n.length;e++)n[e]^=106;this.oHash.update(n),n.fill(0)}update(e){return s.Ay.exists(this),this.iHash.update(e),this}digestInto(e){s.Ay.exists(this),s.Ay.bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||=Object.create(Object.getPrototypeOf(this),{});let{oHash:t,iHash:i,finished:s,destroyed:r,blockLen:a,outputLen:n}=this;return e.finished=s,e.destroyed=r,e.blockLen=a,e.outputLen=n,e.oHash=t._cloneInto(e.oHash),e.iHash=i._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}let n=(e,t,i)=>new a(e,t).update(i).digest();n.create=(e,t)=>new a(e,t)},1717:(e,t,i)=>{"use strict";let s;i.d(t,{F:()=>s});var r=i(8370);function a(e,t){var i=e[0],s=e[1],r=e[2],a=e[3];i+=(s&r|~s&a)+t[0]-0x28955b88|0,a+=((i=(i<<7|i>>>25)+s|0)&s|~i&r)+t[1]-0x173848aa|0,r+=((a=(a<<12|a>>>20)+i|0)&i|~a&s)+t[2]+0x242070db|0,s+=((r=(r<<17|r>>>15)+a|0)&a|~r&i)+t[3]-0x3e423112|0,i+=((s=(s<<22|s>>>10)+r|0)&r|~s&a)+t[4]-0xa83f051|0,a+=((i=(i<<7|i>>>25)+s|0)&s|~i&r)+t[5]+0x4787c62a|0,r+=((a=(a<<12|a>>>20)+i|0)&i|~a&s)+t[6]-0x57cfb9ed|0,s+=((r=(r<<17|r>>>15)+a|0)&a|~r&i)+t[7]-0x2b96aff|0,i+=((s=(s<<22|s>>>10)+r|0)&r|~s&a)+t[8]+0x698098d8|0,a+=((i=(i<<7|i>>>25)+s|0)&s|~i&r)+t[9]-0x74bb0851|0,r+=((a=(a<<12|a>>>20)+i|0)&i|~a&s)+t[10]-42063|0,s+=((r=(r<<17|r>>>15)+a|0)&a|~r&i)+t[11]-0x76a32842|0,i+=((s=(s<<22|s>>>10)+r|0)&r|~s&a)+t[12]+0x6b901122|0,a+=((i=(i<<7|i>>>25)+s|0)&s|~i&r)+t[13]-0x2678e6d|0,r+=((a=(a<<12|a>>>20)+i|0)&i|~a&s)+t[14]-0x5986bc72|0,s+=((r=(r<<17|r>>>15)+a|0)&a|~r&i)+t[15]+0x49b40821|0,i+=((s=(s<<22|s>>>10)+r|0)&a|r&~a)+t[1]-0x9e1da9e|0,a+=((i=(i<<5|i>>>27)+s|0)&r|s&~r)+t[6]-0x3fbf4cc0|0,r+=((a=(a<<9|a>>>23)+i|0)&s|i&~s)+t[11]+0x265e5a51|0,s+=((r=(r<<14|r>>>18)+a|0)&i|a&~i)+t[0]-0x16493856|0,i+=((s=(s<<20|s>>>12)+r|0)&a|r&~a)+t[5]-0x29d0efa3|0,a+=((i=(i<<5|i>>>27)+s|0)&r|s&~r)+t[10]+0x2441453|0,r+=((a=(a<<9|a>>>23)+i|0)&s|i&~s)+t[15]-0x275e197f|0,s+=((r=(r<<14|r>>>18)+a|0)&i|a&~i)+t[4]-0x182c0438|0,i+=((s=(s<<20|s>>>12)+r|0)&a|r&~a)+t[9]+0x21e1cde6|0,a+=((i=(i<<5|i>>>27)+s|0)&r|s&~r)+t[14]-0x3cc8f82a|0,r+=((a=(a<<9|a>>>23)+i|0)&s|i&~s)+t[3]-0xb2af279|0,s+=((r=(r<<14|r>>>18)+a|0)&i|a&~i)+t[8]+0x455a14ed|0,i+=((s=(s<<20|s>>>12)+r|0)&a|r&~a)+t[13]-0x561c16fb|0,a+=((i=(i<<5|i>>>27)+s|0)&r|s&~r)+t[2]-0x3105c08|0,r+=((a=(a<<9|a>>>23)+i|0)&s|i&~s)+t[7]+0x676f02d9|0,s+=((r=(r<<14|r>>>18)+a|0)&i|a&~i)+t[12]-0x72d5b376|0,i+=((s=(s<<20|s>>>12)+r|0)^r^a)+t[5]-378558|0,a+=((i=(i<<4|i>>>28)+s|0)^s^r)+t[8]-0x788e097f|0,r+=((a=(a<<11|a>>>21)+i|0)^i^s)+t[11]+0x6d9d6122|0,s+=((r=(r<<16|r>>>16)+a|0)^a^i)+t[14]-0x21ac7f4|0,i+=((s=(s<<23|s>>>9)+r|0)^r^a)+t[1]-0x5b4115bc|0,a+=((i=(i<<4|i>>>28)+s|0)^s^r)+t[4]+0x4bdecfa9|0,r+=((a=(a<<11|a>>>21)+i|0)^i^s)+t[7]-0x944b4a0|0,s+=((r=(r<<16|r>>>16)+a|0)^a^i)+t[10]-0x41404390|0,i+=((s=(s<<23|s>>>9)+r|0)^r^a)+t[13]+0x289b7ec6|0,a+=((i=(i<<4|i>>>28)+s|0)^s^r)+t[0]-0x155ed806|0,r+=((a=(a<<11|a>>>21)+i|0)^i^s)+t[3]-0x2b10cf7b|0,s+=((r=(r<<16|r>>>16)+a|0)^a^i)+t[6]+0x4881d05|0,i+=((s=(s<<23|s>>>9)+r|0)^r^a)+t[9]-0x262b2fc7|0,a+=((i=(i<<4|i>>>28)+s|0)^s^r)+t[12]-0x1924661b|0,r+=((a=(a<<11|a>>>21)+i|0)^i^s)+t[15]+0x1fa27cf8|0,s+=((r=(r<<16|r>>>16)+a|0)^a^i)+t[2]-0x3b53a99b|0,s=(s<<23|s>>>9)+r|0,i+=(r^(s|~a))+t[0]-0xbd6ddbc|0,i=(i<<6|i>>>26)+s|0,a+=(s^(i|~r))+t[7]+0x432aff97|0,a=(a<<10|a>>>22)+i|0,r+=(i^(a|~s))+t[14]-0x546bdc59|0,r=(r<<15|r>>>17)+a|0,s+=(a^(r|~i))+t[5]-0x36c5fc7|0,s=(s<<21|s>>>11)+r|0,i+=(r^(s|~a))+t[12]+0x655b59c3|0,i=(i<<6|i>>>26)+s|0,a+=(s^(i|~r))+t[3]-0x70f3336e|0,a=(a<<10|a>>>22)+i|0,r+=(i^(a|~s))+t[10]-1051523|0,r=(r<<15|r>>>17)+a|0,s+=(a^(r|~i))+t[1]-0x7a7ba22f|0,s=(s<<21|s>>>11)+r|0,i+=(r^(s|~a))+t[8]+0x6fa87e4f|0,i=(i<<6|i>>>26)+s|0,a+=(s^(i|~r))+t[15]-0x1d31920|0,a=(a<<10|a>>>22)+i|0,r+=(i^(a|~s))+t[6]-0x5cfebcec|0,r=(r<<15|r>>>17)+a|0,s+=(a^(r|~i))+t[13]+0x4e0811a1|0,s=(s<<21|s>>>11)+r|0,i+=(r^(s|~a))+t[4]-0x8ac817e|0,i=(i<<6|i>>>26)+s|0,a+=(s^(i|~r))+t[11]-0x42c50dcb|0,a=(a<<10|a>>>22)+i|0,r+=(i^(a|~s))+t[2]+0x2ad7d2bb|0,r=(r<<15|r>>>17)+a|0,s+=(a^(r|~i))+t[9]-0x14792c6f|0,s=(s<<21|s>>>11)+r|0,e[0]=i+e[0]|0,e[1]=s+e[1]|0,e[2]=r+e[2]|0,e[3]=a+e[3]|0}let n=new Uint32Array([0x67452301,-0x10325477,-0x67452302,0x10325476]);class o extends r.Vw{constructor(){super(...arguments),this.blockLen=64,this.outputLen=16,this._buffer=new Uint8Array}digest(){let e=function(e){var t,i,s,r,o,h,d=e.length,l=new Uint32Array(n);for(t=64;t<=d;t+=64)a(l,function(e){var t,i=[];for(t=0;t<64;t+=4)i[t>>2]=e[t]+(e[t+1]<<8)+(e[t+2]<<16)+(e[t+3]<<24);return i}(e.subarray(t-64,t)));for(i=(e=t-64<d?e.subarray(t-64):new Uint8Array(0)).length,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t=0;t<i;t+=1)s[t>>2]|=e[t]<<(t%4<<3);if(s[t>>2]|=128<<(t%4<<3),t>55)for(a(l,s),t=0;t<16;t+=1)s[t]=0;o=parseInt((r=(r=8*d).toString(16).match(/(.*?)(.{0,8})$/))[2],16),h=parseInt(r[1],16)||0,s[14]=o,s[15]=h,a(l,s);let c=new Uint8Array(4*l.length);for(let e=0;e<s.length;e++){let t=4*e;c[t]=255&l[e],c[t+1]=l[e]>>8&255,c[t+2]=l[e]>>16&255,c[t+3]=l[e]>>24}return c}(this._buffer);return this.destroy(),e}digestInto(e){let t=this.digest();for(let i=0;i<t.length;i++)e[i]=t[i]}_cloneInto(e){return this}destroy(){this._buffer=new Uint8Array}update(e){return this._buffer=(0,r.Id)(this._buffer,(0,r.ZJ)(e)),this}}s=(0,r.ld)(()=>new o)},5432:(e,t,i)=>{"use strict";i.d(t,{s:()=>u});var s=i(5936),r=i(8370);let a=(e,t,i)=>e&t^~e&i,n=(e,t,i)=>e&t^e&i^t&i,o=new Uint32Array([0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0xfc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x6ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2]),h=new Uint32Array([0x6a09e667,0xbb67ae85,0x3c6ef372,0xa54ff53a,0x510e527f,0x9b05688c,0x1f83d9ab,0x5be0cd19]),d=new Uint32Array(64);class l extends s.D{constructor(){super(64,32,8,!1),this.A=0|h[0],this.B=0|h[1],this.C=0|h[2],this.D=0|h[3],this.E=0|h[4],this.F=0|h[5],this.G=0|h[6],this.H=0|h[7]}get(){let{A:e,B:t,C:i,D:s,E:r,F:a,G:n,H:o}=this;return[e,t,i,s,r,a,n,o]}set(e,t,i,s,r,a,n,o){this.A=0|e,this.B=0|t,this.C=0|i,this.D=0|s,this.E=0|r,this.F=0|a,this.G=0|n,this.H=0|o}process(e,t){for(let i=0;i<16;i++,t+=4)d[i]=e.getUint32(t,!1);for(let e=16;e<64;e++){let t=d[e-15],i=d[e-2],s=(0,r.Ow)(t,7)^(0,r.Ow)(t,18)^t>>>3,a=(0,r.Ow)(i,17)^(0,r.Ow)(i,19)^i>>>10;d[e]=a+d[e-7]+s+d[e-16]|0}let{A:i,B:s,C:h,D:l,E:c,F:u,G:f,H:p}=this;for(let e=0;e<64;e++){let t=p+((0,r.Ow)(c,6)^(0,r.Ow)(c,11)^(0,r.Ow)(c,25))+a(c,u,f)+o[e]+d[e]|0,m=((0,r.Ow)(i,2)^(0,r.Ow)(i,13)^(0,r.Ow)(i,22))+n(i,s,h)|0;p=f,f=u,u=c,c=l+t|0,l=h,h=s,s=i,i=t+m|0}i=i+this.A|0,s=s+this.B|0,h=h+this.C|0,l=l+this.D|0,c=c+this.E|0,u=u+this.F|0,f=f+this.G|0,p=p+this.H|0,this.set(i,s,h,l,c,u,f,p)}roundClean(){d.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class c extends l{constructor(){super(),this.A=-0x3efa6128,this.B=0x367cd507,this.C=0x3070dd17,this.D=-0x8f1a6c7,this.E=-4191439,this.F=0x68581511,this.G=0x64f98fa7,this.H=-0x4105b05c,this.outputLen=28}}let u=(0,r.ld)(()=>new l);(0,r.ld)(()=>new c)},1672:(e,t,i)=>{"use strict";i.d(t,{lY:()=>k});var s=i(6710),r=i(7717),a=i(8370);let[n,o,h]=[[],[],[]],d=BigInt(0),l=BigInt(1),c=BigInt(2),u=BigInt(7),f=BigInt(256),p=BigInt(113);for(let e=0,t=l,i=1,s=0;e<24;e++){[i,s]=[s,(2*i+3*s)%5],n.push(2*(5*s+i)),o.push((e+1)*(e+2)/2%64);let r=d;for(let e=0;e<7;e++)(t=(t<<l^(t>>u)*p)%f)&c&&(r^=l<<(l<<BigInt(e))-l);h.push(r)}let[m,g]=r.Ay.split(h,!0),y=(e,t,i)=>i>32?r.Ay.rotlBH(e,t,i):r.Ay.rotlSH(e,t,i),v=(e,t,i)=>i>32?r.Ay.rotlBL(e,t,i):r.Ay.rotlSL(e,t,i);class b extends a.Vw{constructor(e,t,i,r=!1,n=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=i,this.enableXOF=r,this.rounds=n,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,s.Ay.number(i),0>=this.blockLen||this.blockLen>=200)throw Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,a.DH)(this.state)}keccak(){!function(e,t=24){let i=new Uint32Array(10);for(let s=24-t;s<24;s++){for(let t=0;t<10;t++)i[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){let s=(t+8)%10,r=(t+2)%10,a=i[r],n=i[r+1],o=y(a,n,1)^i[s],h=v(a,n,1)^i[s+1];for(let i=0;i<50;i+=10)e[t+i]^=o,e[t+i+1]^=h}let t=e[2],r=e[3];for(let i=0;i<24;i++){let s=o[i],a=y(t,r,s),h=v(t,r,s),d=n[i];t=e[d],r=e[d+1],e[d]=a,e[d+1]=h}for(let t=0;t<50;t+=10){for(let s=0;s<10;s++)i[s]=e[t+s];for(let s=0;s<10;s++)e[t+s]^=~i[(s+2)%10]&i[(s+4)%10]}e[0]^=m[s],e[1]^=g[s]}i.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){s.Ay.exists(this);let{blockLen:t,state:i}=this,r=(e=(0,a.ZJ)(e)).length;for(let s=0;s<r;){let a=Math.min(t-this.pos,r-s);for(let t=0;t<a;t++)i[this.pos++]^=e[s++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;let{state:e,suffix:t,pos:i,blockLen:s}=this;e[i]^=t,(128&t)!=0&&i===s-1&&this.keccak(),e[s-1]^=128,this.keccak()}writeInto(e){s.Ay.exists(this,!1),s.Ay.bytes(e),this.finish();let t=this.state,{blockLen:i}=this;for(let s=0,r=e.length;s<r;){this.posOut>=i&&this.keccak();let a=Math.min(i-this.posOut,r-s);e.set(t.subarray(this.posOut,this.posOut+a),s),this.posOut+=a,s+=a}return e}xofInto(e){if(!this.enableXOF)throw Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return s.Ay.number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(s.Ay.output(e,this),this.finished)throw Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){let{blockLen:t,suffix:i,outputLen:s,rounds:r,enableXOF:a}=this;return(e||=new b(t,i,s,a,r)).state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=r,e.suffix=i,e.outputLen=s,e.enableXOF=a,e.destroyed=this.destroyed,e}}let w=(e,t,i)=>(0,a.ld)(()=>new b(t,e,i));w(6,144,28),w(6,136,32),w(6,104,48),w(6,72,64),w(1,144,28);let k=w(1,136,32);w(1,104,48),w(1,72,64);let S=(e,t,i)=>(0,a.t6)((s={})=>new b(t,e,void 0===s.dkLen?i:s.dkLen,!0));S(31,168,16),S(31,136,32)},1701:(e,t,i)=>{"use strict";i.d(t,{Zf:()=>p,qt:()=>m});var s=i(5936),r=i(7717),a=i(8370);let[n,o]=r.Ay.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))),h=new Uint32Array(80),d=new Uint32Array(80);class l extends s.D{constructor(){super(128,64,16,!1),this.Ah=0x6a09e667,this.Al=-0xc4336f8,this.Bh=-0x4498517b,this.Bl=-0x7b3558c5,this.Ch=0x3c6ef372,this.Cl=-0x16b07d5,this.Dh=-0x5ab00ac6,this.Dl=0x5f1d36f1,this.Eh=0x510e527f,this.El=-0x52197d2f,this.Fh=-0x64fa9774,this.Fl=0x2b3e6c1f,this.Gh=0x1f83d9ab,this.Gl=-0x4be4295,this.Hh=0x5be0cd19,this.Hl=0x137e2179}get(){let{Ah:e,Al:t,Bh:i,Bl:s,Ch:r,Cl:a,Dh:n,Dl:o,Eh:h,El:d,Fh:l,Fl:c,Gh:u,Gl:f,Hh:p,Hl:m}=this;return[e,t,i,s,r,a,n,o,h,d,l,c,u,f,p,m]}set(e,t,i,s,r,a,n,o,h,d,l,c,u,f,p,m){this.Ah=0|e,this.Al=0|t,this.Bh=0|i,this.Bl=0|s,this.Ch=0|r,this.Cl=0|a,this.Dh=0|n,this.Dl=0|o,this.Eh=0|h,this.El=0|d,this.Fh=0|l,this.Fl=0|c,this.Gh=0|u,this.Gl=0|f,this.Hh=0|p,this.Hl=0|m}process(e,t){for(let i=0;i<16;i++,t+=4)h[i]=e.getUint32(t),d[i]=e.getUint32(t+=4);for(let e=16;e<80;e++){let t=0|h[e-15],i=0|d[e-15],s=r.Ay.rotrSH(t,i,1)^r.Ay.rotrSH(t,i,8)^r.Ay.shrSH(t,i,7),a=r.Ay.rotrSL(t,i,1)^r.Ay.rotrSL(t,i,8)^r.Ay.shrSL(t,i,7),n=0|h[e-2],o=0|d[e-2],l=r.Ay.rotrSH(n,o,19)^r.Ay.rotrBH(n,o,61)^r.Ay.shrSH(n,o,6),c=r.Ay.rotrSL(n,o,19)^r.Ay.rotrBL(n,o,61)^r.Ay.shrSL(n,o,6),u=r.Ay.add4L(a,c,d[e-7],d[e-16]),f=r.Ay.add4H(u,s,l,h[e-7],h[e-16]);h[e]=0|f,d[e]=0|u}let{Ah:i,Al:s,Bh:a,Bl:l,Ch:c,Cl:u,Dh:f,Dl:p,Eh:m,El:g,Fh:y,Fl:v,Gh:b,Gl:w,Hh:k,Hl:S}=this;for(let e=0;e<80;e++){let t=r.Ay.rotrSH(m,g,14)^r.Ay.rotrSH(m,g,18)^r.Ay.rotrBH(m,g,41),O=r.Ay.rotrSL(m,g,14)^r.Ay.rotrSL(m,g,18)^r.Ay.rotrBL(m,g,41),T=m&y^~m&b,I=g&v^~g&w,x=r.Ay.add5L(S,O,I,o[e],d[e]),P=r.Ay.add5H(x,k,t,T,n[e],h[e]),M=0|x,A=r.Ay.rotrSH(i,s,28)^r.Ay.rotrBH(i,s,34)^r.Ay.rotrBH(i,s,39),C=r.Ay.rotrSL(i,s,28)^r.Ay.rotrBL(i,s,34)^r.Ay.rotrBL(i,s,39),B=i&a^i&c^a&c,E=s&l^s&u^l&u;k=0|b,S=0|w,b=0|y,w=0|v,y=0|m,v=0|g,({h:m,l:g}=r.Ay.add(0|f,0|p,0|P,0|M)),f=0|c,p=0|u,c=0|a,u=0|l,a=0|i,l=0|s;let _=r.Ay.add3L(M,C,E);i=r.Ay.add3H(_,P,A,B),s=0|_}({h:i,l:s}=r.Ay.add(0|this.Ah,0|this.Al,0|i,0|s)),({h:a,l:l}=r.Ay.add(0|this.Bh,0|this.Bl,0|a,0|l)),({h:c,l:u}=r.Ay.add(0|this.Ch,0|this.Cl,0|c,0|u)),({h:f,l:p}=r.Ay.add(0|this.Dh,0|this.Dl,0|f,0|p)),({h:m,l:g}=r.Ay.add(0|this.Eh,0|this.El,0|m,0|g)),({h:y,l:v}=r.Ay.add(0|this.Fh,0|this.Fl,0|y,0|v)),({h:b,l:w}=r.Ay.add(0|this.Gh,0|this.Gl,0|b,0|w)),({h:k,l:S}=r.Ay.add(0|this.Hh,0|this.Hl,0|k,0|S)),this.set(i,s,a,l,c,u,f,p,m,g,y,v,b,w,k,S)}roundClean(){h.fill(0),d.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class c extends l{constructor(){super(),this.Ah=-0x73c2c838,this.Al=0x19544da2,this.Bh=0x73e19966,this.Bl=-0x76232b2a,this.Ch=0x1dfab7ae,this.Cl=0x32ff9c82,this.Dh=0x679dd514,this.Dl=0x582f9fcf,this.Eh=0xf6d2b69,this.El=0x7bd44da8,this.Fh=0x77e36f73,this.Fl=0x4c48942,this.Gh=0x3f9d85a8,this.Gl=0x6a1d36c8,this.Hh=0x1112e6ad,this.Hl=-0x6e296d5f,this.outputLen=28}}class u extends l{constructor(){super(),this.Ah=0x22312194,this.Al=-0x3d408d4,this.Bh=-0x60aaa05d,this.Bl=-0x37b39b3e,this.Ch=0x2393b86b,this.Cl=0x6f53b151,this.Dh=-0x69c788e7,this.Dl=0x5940eabd,this.Eh=-0x69d7c11e,this.El=-0x5771001d,this.Fh=-0x41a1e1db,this.Fl=0x53863992,this.Gh=0x2b0199fc,this.Gl=0x2c85b8aa,this.Hh=0xeb72ddc,this.Hl=-0x7e3ad35e,this.outputLen=32}}class f extends l{constructor(){super(),this.Ah=-0x344462a3,this.Al=-0x3efa6128,this.Bh=0x629a292a,this.Bl=0x367cd507,this.Ch=-0x6ea6fea6,this.Cl=0x3070dd17,this.Dh=0x152fecd8,this.Dl=-0x8f1a6c7,this.Eh=0x67332667,this.El=-4191439,this.Fh=-0x714bb579,this.Fl=0x68581511,this.Gh=-0x24f3d1f3,this.Gl=0x64f98fa7,this.Hh=0x47b5481d,this.Hl=-0x4105b05c,this.outputLen=48}}let p=(0,a.ld)(()=>new l);(0,a.ld)(()=>new c),(0,a.ld)(()=>new u);let m=(0,a.ld)(()=>new f)},8370:(e,t,i)=>{"use strict";i.d(t,{Vw:()=>l,Id:()=>d,O8:()=>a,po:()=>f,Ow:()=>n,ZJ:()=>h,DH:()=>r,AI:()=>o,ld:()=>c,t6:()=>u});let s="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0,r=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),a=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),n=(e,t)=>e<<32-t|e>>>t;if(68!==new Uint8Array(new Uint32Array([0x11223344]).buffer)[0])throw Error("Non little-endian hardware is not supported");function o(e){if("string"!=typeof e)throw TypeError(`utf8ToBytes expected string, got ${typeof e}`);return new TextEncoder().encode(e)}function h(e){if("string"==typeof e&&(e=o(e)),!(e instanceof Uint8Array))throw TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}function d(...e){if(!e.every(e=>e instanceof Uint8Array))throw Error("Uint8Array list expected");if(1===e.length)return e[0];let t=new Uint8Array(e.reduce((e,t)=>e+t.length,0));for(let i=0,s=0;i<e.length;i++){let r=e[i];t.set(r,s),s+=r.length}return t}Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));class l{clone(){return this._cloneInto()}}function c(e){let t=t=>e().update(h(t)).digest(),i=e();return t.outputLen=i.outputLen,t.blockLen=i.blockLen,t.create=()=>e(),t}function u(e){let t=(t,i)=>e(i).update(h(t)).digest(),i=e({});return t.outputLen=i.outputLen,t.blockLen=i.blockLen,t.create=t=>e(t),t}function f(e=32){if(s&&"function"==typeof s.getRandomValues)return s.getRandomValues(new Uint8Array(e));throw Error("crypto.getRandomValues must be defined")}},6744:(e,t,i)=>{"use strict";function s(e){if(!Number.isSafeInteger(e))throw Error(`Wrong integer: ${e}`)}function r(...e){let t=(e,t)=>i=>e(t(i));return{encode:Array.from(e).reverse().reduce((e,i)=>e?t(e,i.encode):i.encode,void 0),decode:e.reduce((e,i)=>e?t(e,i.decode):i.decode,void 0)}}function a(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw Error("alphabet.encode input should be an array of numbers");return t.map(t=>{if(s(t),t<0||t>=e.length)throw Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]})},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw Error("alphabet.decode input should be array of strings");return t.map(t=>{if("string"!=typeof t)throw Error(`alphabet.decode: not string element=${t}`);let i=e.indexOf(t);if(-1===i)throw Error(`Unknown letter: "${t}". Allowed: ${e}`);return i})}}}function n(e=""){if("string"!=typeof e)throw Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw Error("join.encode input should be array of strings");for(let e of t)if("string"!=typeof e)throw Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if("string"!=typeof t)throw Error("join.decode input should be string");return t.split(e)}}}function o(e,t="="){if(s(e),"string"!=typeof t)throw Error("padding chr should be string");return{encode(i){if(!Array.isArray(i)||i.length&&"string"!=typeof i[0])throw Error("padding.encode input should be array of strings");for(let e of i)if("string"!=typeof e)throw Error(`padding.encode: non-string input=${e}`);for(;i.length*e%8;)i.push(t);return i},decode(i){if(!Array.isArray(i)||i.length&&"string"!=typeof i[0])throw Error("padding.encode input should be array of strings");for(let e of i)if("string"!=typeof e)throw Error(`padding.decode: non-string input=${e}`);let s=i.length;if(s*e%8)throw Error("Invalid padding: string should have whole number of bytes");for(;s>0&&i[s-1]===t;s--)if(!((s-1)*e%8))throw Error("Invalid padding: string has too much padding");return i.slice(0,s)}}}function h(e){if("function"!=typeof e)throw Error("normalize fn should be function");return{encode:e=>e,decode:t=>e(t)}}function d(e,t,i){if(t<2)throw Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(i<2)throw Error(`convertRadix: wrong to=${i}, base cannot be less than 2`);if(!Array.isArray(e))throw Error("convertRadix: data should be array");if(!e.length)return[];let r=0,a=[],n=Array.from(e);for(n.forEach(e=>{if(s(e),e<0||e>=t)throw Error(`Wrong integer: ${e}`)});;){let e=0,s=!0;for(let a=r;a<n.length;a++){let o=n[a],h=t*e+o;if(!Number.isSafeInteger(h)||t*e/t!==e||h-o!=t*e||(e=h%i,n[a]=Math.floor(h/i),!Number.isSafeInteger(n[a])||n[a]*i+e!==h))throw Error("convertRadix: carry overflow");s&&(n[a]?s=!1:r=a)}if(a.push(e),s)break}for(let t=0;t<e.length-1&&0===e[t];t++)a.push(0);return a.reverse()}i.d(t,{As:()=>I,K3:()=>y,RG:()=>g,tw:()=>b,xn:()=>m});let l=(e,t)=>t?l(t,e%t):e,c=(e,t)=>e+(t-l(e,t));function u(e,t,i,r){if(!Array.isArray(e))throw Error("convertRadix2: data should be array");if(t<=0||t>32)throw Error(`convertRadix2: wrong from=${t}`);if(i<=0||i>32)throw Error(`convertRadix2: wrong to=${i}`);if(c(t,i)>32)throw Error(`convertRadix2: carry overflow from=${t} to=${i} carryBits=${c(t,i)}`);let a=0,n=0,o=2**i-1,h=[];for(let r of e){if(s(r),r>=2**t)throw Error(`convertRadix2: invalid data word=${r} from=${t}`);if(a=a<<t|r,n+t>32)throw Error(`convertRadix2: carry overflow pos=${n} from=${t}`);for(n+=t;n>=i;n-=i)h.push((a>>n-i&o)>>>0);a&=2**n-1}if(a=a<<i-n&o,!r&&n>=t)throw Error("Excess padding");if(!r&&a)throw Error(`Non-zero padding: ${a}`);return r&&n>0&&h.push(a>>>0),h}function f(e,t=!1){if(s(e),e<=0||e>32)throw Error("radix2: bits should be in (0..32]");if(c(8,e)>32||c(e,8)>32)throw Error("radix2: carry overflow");return{encode:i=>{if(!(i instanceof Uint8Array))throw Error("radix2.encode input should be Uint8Array");return u(Array.from(i),8,e,!t)},decode:i=>{if(!Array.isArray(i)||i.length&&"number"!=typeof i[0])throw Error("radix2.decode input should be array of strings");return Uint8Array.from(u(i,e,8,t))}}}function p(e){if("function"!=typeof e)throw Error("unsafeWrapper fn should be function");return function(...t){try{return e.apply(null,t)}catch(e){}}}let m=r(f(4),a("0123456789abcdef"),n("")),g=r(f(5),a("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),o(5),n(""));r(f(5),a("0123456789ABCDEFGHIJKLMNOPQRSTUV"),o(5),n("")),r(f(5),a("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),n(""),h(e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")));let y=r(f(6),a("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),o(6),n("")),v=(r(f(6),a("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),o(6),n("")),e=>{var t;return r((t=58,s(58),{encode:e=>{if(!(e instanceof Uint8Array))throw Error("radix.encode input should be Uint8Array");return d(Array.from(e),256,58)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw Error("radix.decode input should be array of strings");return Uint8Array.from(d(e,58,256))}}),a(e),n(""))}),b=v("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");v("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),v("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");let w=r(a("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),n("")),k=[0x3b6a57b2,0x26508e6d,0x1ea119fa,0x3d4233dd,0x2a1462b3];function S(e){let t=e>>25,i=(0x1ffffff&e)<<5;for(let e=0;e<k.length;e++)(t>>e&1)==1&&(i^=k[e]);return i}function O(e,t,i=1){let s=e.length,r=1;for(let t=0;t<s;t++){let i=e.charCodeAt(t);if(i<33||i>126)throw Error(`Invalid prefix (${e})`);r=S(r)^i>>5}r=S(r);for(let t=0;t<s;t++)r=S(r)^31&e.charCodeAt(t);for(let e of t)r=S(r)^e;for(let e=0;e<6;e++)r=S(r);return r^=i,w.encode(u([r%0x40000000],30,5,!1))}function T(e){let t="bech32"===e?1:0x2bc830a3,i=f(5),s=i.decode,r=i.encode,a=p(s);function n(e,i=90){if("string"!=typeof e)throw Error(`bech32.decode input should be string, not ${typeof e}`);if(e.length<8||!1!==i&&e.length>i)throw TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${i})`);let s=e.toLowerCase();if(e!==s&&e!==e.toUpperCase())throw Error("String must be lowercase or uppercase");let r=(e=s).lastIndexOf("1");if(0===r||-1===r)throw Error('Letter "1" must be present between prefix and data only');let a=e.slice(0,r),o=e.slice(r+1);if(o.length<6)throw Error("Data must be at least 6 characters long");let h=w.decode(o).slice(0,-6),d=O(a,h,t);if(!o.endsWith(d))throw Error(`Invalid checksum in ${e}: expected "${d}"`);return{prefix:a,words:h}}let o=p(n);return{encode:function(e,i,s=90){if("string"!=typeof e)throw Error(`bech32.encode prefix should be string, not ${typeof e}`);if(!Array.isArray(i)||i.length&&"number"!=typeof i[0])throw Error(`bech32.encode words should be array of numbers, not ${typeof i}`);let r=e.length+7+i.length;if(!1!==s&&r>s)throw TypeError(`Length ${r} exceeds limit ${s}`);return e=e.toLowerCase(),`${e}1${w.encode(i)}${O(e,i,t)}`},decode:n,decodeToBytes:function(e){let{prefix:t,words:i}=n(e,!1);return{prefix:t,words:i,bytes:s(i)}},decodeUnsafe:o,fromWords:s,fromWordsUnsafe:a,toWords:r}}T("bech32"),T("bech32m");let I={encode:e=>new TextDecoder().decode(e),decode:e=>new TextEncoder().encode(e)};r(f(4),a("0123456789abcdef"),n(""),h(e=>{if("string"!=typeof e||e.length%2)throw TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()}))},7233:(e,t,i)=>{"use strict";i.d(t,{$u:()=>I,Dq:()=>N,Ef:()=>V,NO:()=>E,_S:()=>v,b:()=>x,pd:()=>q});var s=i(1672),r=i(5432),a=i(8370),n=i(2968),o=i(9751),h=i(698),d=i(5443),l=i(5569);let c=BigInt("3618502788666131213697322783095070105526743751716087489154079457884512865583"),u=BigInt("0x800000000000000000000000000000000000000000000000000000000000000");function f(e){for(;0===e[0];)e=e.subarray(1);let t=8*e.length-252,i=d.Ph(e);return t>0?i>>BigInt(t):i}function p(e){return"string"==typeof e&&1&(e=T(e)).length&&(e="0"+e),d.aT(e)}let m=(0,h.x3)({a:BigInt(1),b:BigInt("3141592653589793238462643383279502884197169399375105820974944592307816406665"),Fp:(0,n.Fp)(BigInt("0x800000000000011000000000000000000000000000000000000000000000001")),n:c,nBitLength:252,Gx:BigInt("874739451078007766457464989774322083649278607533249481151382481072868806602"),Gy:BigInt("152666792071518830868575557812948353041420400780739481342941381225525861407"),h:BigInt(1),lowS:!1,...(0,l.Z)(r.s),bits2int:f,bits2int_modN:e=>{let t=d.Ph(e).toString(16);return 63===t.length&&(e=p(t+"0")),(0,n.zi)(f(e),c)}});function g(e){return d.qj("","string"==typeof e?p(e):e)}function y(e){return d.My(g(e)).padStart(64,"0")}function v(e,t,i){let s=m.sign(function(e){let t=g(e);if(d.Ph(t)>=u)throw Error(`msgHash should be [0, ${u})`);return t}(e),y(t),i);return function(e){let{r:t,s:i}=e;if(t<0n||t>=u)throw Error(`Signature.r should be [1, ${u})`);let s=(0,n.B8)(i,c);if(s<0n||s>=u)throw Error(`inv(Signature.s) should be [1, ${u})`)}(s),s}let{CURVE:b,ProjectivePoint:w,Signature:k,utils:S}=m;function O(e){let t=d.My(e.subarray(1)).replace(/^0+/gm,"");return`0x${t}`}function T(e){return e.replace(/^0x/i,"")}function I(e){return O(function(e,t=!1){return m.getPublicKey(y(e),t)}(e,!0))}function x(e){if(130!==(e=T(e)).length)throw Error("Wrong ethereum signature");return function(e){let t=g(e),i=2n**256n,s=i-(0,n.zi)(i,c);for(let e=0;;e++){let i=L(d.Id(t,d.IV(BigInt(e))));if(i<s)return(0,n.zi)(i,c).toString(16);if(1e5===e)throw Error("grindKey is broken: tried 100k vals")}}(e.substring(0,64))}let P=[new w(0x49ee3eba8c1600700ee1b87eb599f16716b0b1022947733551fde4050ca6804n,0x3ca0cfe4b3bc6ddf346d49d06ea0ed34e621062c0e056c1d0405d266e10268an,1n),new w(0x234287dcbaffe7f969c748655fca9e58fa8120b6d56eb0c1080d17957ebe47bn,0x3b056f100f96fb21e889527d41f4e39940135dd7a6c94cc6ed0268ee89e5615n,1n),new w(0x4fa56f376c83db33f9dab2656558f3399099ec1de5e3018b7a6932dba8aa378n,0x3fa0984c931c9e38113e0c0e47e4401562761f92a7a23b45168f4e80ff5b54dn,1n),new w(0x4ba4cc166be8dec764910f75b45f74b40c690c74709e90f3aa372f0bd2d6997n,0x40301cf5c1751f4b971e46c4ede85fcac5c59a5ce5ae7c48151f27b24b219cn,1n),new w(0x54302dcb0e6cc1c6e44cca8f61a63bb2ca65048d53fb325d36ff12c49a58202n,0x1b77b3e37d13504b348046268d8ae25ce98ad783c25561a879dcc77e99c2426n,1n)];function M(e,t){let i=[],s=e;for(let e=0;e<248;e++)i.push(s),s=s.double();s=t;for(let e=0;e<4;e++)i.push(s),s=s.double();return i}let A=M(P[1],P[2]),C=M(P[3],P[4]);function B(e,t,i){let s=function(e){let t;if("bigint"==typeof e)t=e;else if("number"==typeof e){if(!Number.isSafeInteger(e))throw Error(`Invalid pedersenArg: ${e}`);t=BigInt(e)}else t=d.Ph(g(e));if(!(0n<=t&&t<m.CURVE.Fp.ORDER))throw Error(`PedersenArg should be 0 <= value < CURVE.P: ${t}`);return t}(t);for(let t=0;t<252;t++){let r=i[t];if(!r)throw Error("invalid constant index");if(r.equals(e))throw Error("Same point");(1n&s)!==0n&&(e=e.add(r)),s>>=1n}return e}function E(e,t){let i=P[0];return i=B(i,e,A),O((i=B(i,t,C)).toRawBytes(!0))}let _=d.OG(250),N=e=>d.Ph((0,s.lY)(e))&_,L=e=>d.Ph((0,r.s)(e)),R=(0,n.Fp)(BigInt("3618502788666131213697322783095070105623107215331596699973092056135872020481")),D=function(e,t){if((0,n.jr)(e.Fp),!Number.isSafeInteger(e.rate)||!Number.isSafeInteger(e.capacity))throw Error(`Wrong poseidon opts: ${e}`);let i=e.rate+e.capacity,s=e.roundsFull+e.roundsPartial,h=[];for(let t=0;t<s;t++){let s=[];for(let n=0;n<i;n++)s.push(function(e,t,i){let s=e.fromBytes((0,r.s)((0,a.AI)(`${t}${i}`)));return e.create(s)}(e.Fp,"Hades",i*t+n));h.push(s)}let d=(0,o.poseidon)({...e,t:i,sboxPower:3,reversePartialPowIdx:!0,mds:t,roundConstants:h});return d.m=i,d.rate=e.rate,d.capacity=e.capacity,d}({Fp:R,rate:2,capacity:1,roundsFull:8,roundsPartial:83},[[3,1,1],[1,-1,1],[1,1,-2]].map(e=>e.map(BigInt)));function V(e,t,i=D){return i([e,t,2n])[0]}function q(e,t=D){let{m:i,rate:s}=t;if(!Array.isArray(e))throw Error("bigint array expected in values");let r=Array.from(e);for(r.push(1n);r.length%s!=0;)r.push(0n);let a=Array(i).fill(0n);for(let e=0;e<r.length;e+=s){for(let t=0;t<s;t++){let i=r[e+t];if(void 0===i)throw Error("invalid index");a[t]+=i}a=t(a)}return a[0]}},5287:(e,t,i)=>{"use strict";i.d(t,{fP:()=>eQ,tW:()=>w,pp:()=>k});var s,r,a,n,o,h,d,l,c,u,f,p,m,g,y,v,b,w={};i.r(w),i.d(w,{calculateContractAddressFromHash:()=>e3,computeCompiledClassHash:()=>e9,computeContractClassHash:()=>ti,computeHashOnElements:()=>e0,computeLegacyContractClassHash:()=>e4,computePedersenHash:()=>eZ,computePedersenHashOnElements:()=>e1,computePoseidonHash:()=>eJ,computePoseidonHashOnElements:()=>e2,computeSierraContractClassHash:()=>tt,formatSpaces:()=>e6,getSelector:()=>W,getSelectorFromName:()=>U,hashByteCodeSegments:()=>e7,keccakBn:()=>H,poseidon:()=>S,starknetKeccak:()=>G});var k={};i.r(k),i.d(k,{encodeData:()=>tm,encodeType:()=>tu,encodeValue:()=>tp,getDependencies:()=>tc,getMessageHash:()=>ty,getStructHash:()=>tg,getTypeHash:()=>tf,isMerkleTreeType:()=>tl,prepareSelector:()=>td});var S=i(9751),O=i(7233);function T(e){return new TextEncoder().encode(e)}function I(e){return e.replace(/^0x/i,"")}function x(e){return`0x${I(e)}`}i(6744);let P=2n**250n-1n,M=2n**251n+17n*2n**192n+1n,A=2n**251n-256n,C=(e,t)=>({min:e,max:t}),B=C(0n,M-1n),E=C(-(2n**127n),2n**127n-1n),_=C(0n,2n**128n-1n);!function(e){e.SN_MAIN="https://alpha-mainnet.starknet.io",e.SN_SEPOLIA="https://alpha-sepolia.starknet.io"}(s||(s={})),function(e){e.SN_MAIN="SN_MAIN",e.SN_SEPOLIA="SN_SEPOLIA"}(r||(r={})),function(e){e.SN_MAIN="0x534e5f4d41494e",e.SN_SEPOLIA="0x534e5f5345504f4c4941"}(a||(a={})),function(e){e.DECLARE="0x6465636c617265",e.DEPLOY="0x6465706c6f79",e.DEPLOY_ACCOUNT="0x6465706c6f795f6163636f756e74",e.INVOKE="0x696e766f6b65",e.L1_HANDLER="0x6c315f68616e646c6572"}(n||(n={}));var N=i(5443);function L(e){return/^0x[0-9a-f]*$/i.test(e)}function R(e){return"bigint"==typeof e}function D(e){return x(BigInt(e).toString(16))}let V=e=>/^\d+$/.test(e);function q(e){return"number"==typeof e}function F(e){return"boolean"==typeof e}function H(e){let t=I(D(BigInt(e))),i=t.length%2==0?t:`0${t}`;return x((0,O.Dq)(function(e){if(!L(e))throw Error(`${e} need to be a hex-string`);let t=I(e);return t.length%2!=0&&(t=`0${t}`),(0,N.aT)(t)}(x(i))).toString(16))}function G(e){return BigInt(x((0,O.Dq)(T(e)).toString(16)))&P}function U(e){return D(G(e))}function W(e){return L(e)?e:V(e)?D(e):U(e)}!function(e){e.DEPLOY="DEPLOY",e.CALL="CALL",e.INVOKE="INVOKE"}(o||(o={})),function(e){e.u8="core::integer::u8",e.u16="core::integer::u16",e.u32="core::integer::u32",e.u64="core::integer::u64",e.u128="core::integer::u128",e.u256="core::integer::u256",e.u512="core::integer::u512"}(h||(h={})),function(e){e.ClassHash="core::starknet::class_hash::ClassHash",e.ContractAddress="core::starknet::contract_address::ContractAddress",e.Secp256k1Point="core::starknet::secp256k1::Secp256k1Point"}(d||(d={})),function(e){e[e.function=0]="function",e[e.l1_handler=1]="l1_handler",e[e.constructor=2]="constructor"}(l||(l={})),function(e){e.EXTERNAL="EXTERNAL",e.L1_HANDLER="L1_HANDLER",e.CONSTRUCTOR="CONSTRUCTOR"}(c||(c={})),function(e){e.DECLARE="DECLARE",e.DEPLOY="DEPLOY",e.DEPLOY_ACCOUNT="DEPLOY_ACCOUNT",e.INVOKE="INVOKE_FUNCTION"}(u||(u={})),function(e){e.NOT_RECEIVED="NOT_RECEIVED",e.RECEIVED="RECEIVED",e.ACCEPTED_ON_L2="ACCEPTED_ON_L2",e.ACCEPTED_ON_L1="ACCEPTED_ON_L1",e.REJECTED="REJECTED",e.REVERTED="REVERTED"}(f||(f={})),function(e){e.NOT_RECEIVED="NOT_RECEIVED",e.RECEIVED="RECEIVED",e.ACCEPTED_ON_L2="ACCEPTED_ON_L2",e.ACCEPTED_ON_L1="ACCEPTED_ON_L1"}(p||(p={})),function(e){e.REJECTED="REJECTED",e.REVERTED="REVERTED",e.SUCCEEDED="SUCCEEDED"}(m||(m={})),function(e){e.PENDING="PENDING",e.ACCEPTED_ON_L1="ACCEPTED_ON_L1",e.ACCEPTED_ON_L2="ACCEPTED_ON_L2",e.REJECTED="REJECTED"}(g||(g={})),function(e){e.pending="pending",e.latest="latest"}(y||(y={}));let j={Active:"1",Legacy:"0"};function K(e,t){if(!e)throw Error(t||"Assertion failure")}function z(e){return/^[\x00-\x7F]*$/.test(e)}function Y(e){return e.length<=31}function X(e){return"string"==typeof e}function $(e){return X(e)&&!L(e)&&!V(e)}let Q=e=>$(e)&&!Y(e);function Z(e){let t=RegExp("[^]{1,31}","g");return e.match(t)||[]}function J(e){if(!z(e))throw Error(`${e} is not an ASCII string`);if(!Y(e))throw Error(`${e} is too long`);return x(e.replace(/./g,e=>e.charCodeAt(0).toString(16)))}function ee(e){if(!z(e))throw Error(`${e} is not an ASCII string`);if(L(e))return I(e).replace(/.{2}/g,e=>String.fromCharCode(parseInt(e,16)));if(/^[0-9]*$/i.test(e))return ee("0X".concat(BigInt(e).toString(16)));throw Error(`${e} is not Hex or decimal`)}function et(e){let t=Z(e),i=t[t.length-1],s=t.map(J),[r,a]=void 0===i||31===i.length?["0x00",0]:[s.pop(),i.length];return{data:0===s.length?[]:s,pending_word:r,pending_word_len:a}}function ei(e){if(R(e)||Number.isInteger(e))return e.toString();if(X(e)){if(L(e))return BigInt(e).toString();if($(e)){if(!Y(e))throw Error(`${e} is a long string > 31 chars. Please split it into an array of short strings.`);return BigInt(J(e)).toString()}if(V(e))return e}if(F(e))return`${+e}`;throw Error(`${e} can't be computed by felt()`)}let es=(1n<<128n)-1n,er=(1n<<256n)-1n;class ea{constructor(...e){if("object"==typeof e[0]&&1===e.length&&"low"in e[0]&&"high"in e[0]){let t=ea.validateProps(e[0].low,e[0].high);this.low=t.low,this.high=t.high}else if(1===e.length){let t=ea.validate(e[0]);this.low=t&es,this.high=t>>128n}else if(2===e.length){let t=ea.validateProps(e[0],e[1]);this.low=t.low,this.high=t.high}else throw Error("Incorrect constructor parameters")}static validate(e){let t=BigInt(e);if(t<0n)throw Error("bigNumberish is smaller than UINT_256_MIN");if(t>er)throw Error("bigNumberish is bigger than UINT_256_MAX");return t}static validateProps(e,t){let i=BigInt(e),s=BigInt(t);if(i<0n||i>0xffffffffffffffffffffffffffffffffn)throw Error("low is out of range UINT_256_LOW_MIN - UINT_256_LOW_MAX");if(s<0n||s>0xffffffffffffffffffffffffffffffffn)throw Error("high is out of range UINT_256_HIGH_MIN - UINT_256_HIGH_MAX");return{low:i,high:s}}static is(e){try{ea.validate(e)}catch(e){return!1}return!0}static isAbiType(e){return e===ea.abiSelector}toBigInt(){return(this.high<<128n)+this.low}toUint256HexString(){return{low:x(this.low.toString(16)),high:x(this.high.toString(16))}}toUint256DecimalString(){return{low:this.low.toString(10),high:this.high.toString(10)}}toApiRequest(){return[ei(this.low),ei(this.high)]}}ea.abiSelector="core::integer::u256";let en=(1n<<512n)-1n;class eo{constructor(...e){if("object"==typeof e[0]&&1===e.length&&"limb0"in e[0]&&"limb1"in e[0]&&"limb2"in e[0]&&"limb3"in e[0]){let t=eo.validateProps(e[0].limb0,e[0].limb1,e[0].limb2,e[0].limb3);this.limb0=t.limb0,this.limb1=t.limb1,this.limb2=t.limb2,this.limb3=t.limb3}else if(1===e.length){let t=eo.validate(e[0]);this.limb0=t&es,this.limb1=(t&es<<128n)>>128n,this.limb2=(t&es<<256n)>>256n,this.limb3=t>>384n}else if(4===e.length){let t=eo.validateProps(e[0],e[1],e[2],e[3]);this.limb0=t.limb0,this.limb1=t.limb1,this.limb2=t.limb2,this.limb3=t.limb3}else throw Error("Incorrect Uint512 constructor parameters")}static validate(e){let t=BigInt(e);if(t<0n)throw Error("bigNumberish is smaller than UINT_512_MIN.");if(t>en)throw Error("bigNumberish is bigger than UINT_512_MAX.");return t}static validateProps(e,t,i,s){let r=BigInt(e),a=BigInt(t),n=BigInt(i),o=BigInt(s);return[r,a,n,o].forEach((e,t)=>{if(e<0n||e>es)throw Error(`limb${t} is not in the range of a u128 number`)}),{limb0:r,limb1:a,limb2:n,limb3:o}}static is(e){try{eo.validate(e)}catch(e){return!1}return!0}static isAbiType(e){return e===eo.abiSelector}toBigInt(){return(this.limb3<<384n)+(this.limb2<<256n)+(this.limb1<<128n)+this.limb0}toUint512HexString(){return{limb0:x(this.limb0.toString(16)),limb1:x(this.limb1.toString(16)),limb2:x(this.limb2.toString(16)),limb3:x(this.limb3.toString(16))}}toUint512DecimalString(){return{limb0:this.limb0.toString(10),limb1:this.limb1.toString(10),limb2:this.limb2.toString(10),limb3:this.limb3.toString(10)}}toApiRequest(){return[ei(this.limb0),ei(this.limb1),ei(this.limb2),ei(this.limb3)]}}eo.abiSelector="core::integer::u512";let eh=e=>/_len$/.test(e),ed=e=>"felt"===e||"core::felt252"===e,el=e=>/\*/.test(e)||e.startsWith("core::array::Array::")||e.startsWith("core::array::Span::"),ec=e=>/^\(.*\)$/i.test(e),eu=e=>/\(.*\)/i.test(e)&&e.includes(":"),ef=(e,t)=>e in t,ep=(e,t)=>e in t,em=e=>e.startsWith("core::option::Option::"),eg=e=>e.startsWith("core::result::Result::"),ey=e=>Object.values(h).includes(e),ev=e=>Object.values(d).includes(e),eb=e=>"core::bool"===e,ew=e=>"core::starknet::eth_address::EthAddress"===e,ek=e=>"core::bytes_31::bytes31"===e,eS=e=>"core::byte_array::byteArray.js"===e,eO=e=>"core::starknet::secp256k1::Secp256k1Point"===e,eT=e=>e.includes("::"),eI=e=>eT(e)?e.substring(e.indexOf("<")+1,e.lastIndexOf(">")):e.replace("*",""),ex=e=>new ea(e).toUint256DecimalString();class eP{constructor(e){let t=Object.values(e);if(0===t.length)throw Error("This Enum must have at least 1 variant");if(1!==t.filter(e=>void 0!==e).length)throw Error("This Enum must have exactly one active variant");this.variant=e}unwrap(){let e=Object.entries(this.variant).find(e=>void 0!==e[1]);if(void 0!==e)return e[1]}activeVariant(){let e=Object.entries(this.variant).find(e=>void 0!==e[1]);return void 0===e?"":e[0]}}!function(e){e[e.Some=0]="Some",e[e.None=1]="None"}(v||(v={}));class eM{constructor(e,t){if(!(e in v))throw Error("Wrong variant : should be CairoOptionVariant.Some or .None.");if(e===v.Some){if(void 0===t)throw Error('The creation of a Cairo Option with "Some" variant needs a content as input.');this.Some=t,this.None=void 0}else this.Some=void 0,this.None=!0}unwrap(){if(!this.None)return this.Some}isSome(){return void 0!==this.Some}isNone(){return!0===this.None}}!function(e){e[e.Ok=0]="Ok",e[e.Err=1]="Err"}(b||(b={}));class eA{constructor(e,t){if(!(e in b))throw Error("Wrong variant : should be CairoResultVariant.Ok or .Err.");e===b.Ok?(this.Ok=t,this.Err=void 0):(this.Ok=void 0,this.Err=t)}unwrap(){if(void 0!==this.Ok)return this.Ok;if(void 0!==this.Err)return this.Err;throw Error("Both Result.Ok and .Err are undefined. Not authorized.")}isOk(){return void 0!==this.Ok}isErr(){return void 0!==this.Err}}let eC={isBN:(e,t,i)=>{if(!R(e[i]))throw Error(`Data and formatter mismatch on ${i}:${t[i]}, expected response data ${i}:${e[i]} to be BN instead it is ${typeof e[i]}`)},unknown:(e,t,i)=>{throw Error(`Unhandled formatter type on ${i}:${t[i]} for data ${i}:${e[i]}`)}};class eB{constructor(e){this.abi=e}methodInputsLength(e){return e.inputs.reduce((e,t)=>eh(t.name)?e:e+1,0)}getMethod(e){return this.abi.find(t=>t.name===e)}getLegacyFormat(){return this.abi}}class eE{constructor(e){this.abi=e}methodInputsLength(e){return e.inputs.length}getMethod(e){return this.abi.find(e=>"interface"===e.type).items.find(t=>t.name===e)}getLegacyFormat(){return this.abi.flatMap(e=>"interface"===e.type?e.items:e)}}function e_(e,t,i){return"constructor"===e&&!i&&!t.length}function eN(e,t,i){for(let s=0,r=0;s<e.length;s++)if(e[s]===t)r++;else if(e[s]===i&&0==--r)return s;return Number.POSITIVE_INFINITY}function eL(e){return eT(e)?function(e){let t;let i=e.slice(1,-1),s=[],r=0;for(;r<i.length;){switch(!0){case"("===i[r]:t=r+eN(i.slice(r),"(",")")+1;break;case i.startsWith("core::result::Result::<",r)||i.startsWith("core::array::Array::<",r)||i.startsWith("core::option::Option::<",r):t=r+eN(i.slice(r),"<",">")+1;break;default:{let e=i.indexOf(",",r);t=-1!==e?e:Number.POSITIVE_INFINITY}}s.push(i.slice(r,t)),r=t+2}return s}(e):function(e){let{subTuple:t,result:i}=function(e){if(!e.includes("("))return{subTuple:[],result:e};let t=[],i="",s=0;for(;s<e.length;){if("("===e[s]){let r=1,a=s;for(s++;r;)")"===e[s]&&r--,"("===e[s]&&r++,s++;t.push(e.substring(a,s)),i+=" ",s--}else i+=e[s];s++}return{subTuple:t,result:i}}(e.replace(/\s/g,"").slice(1,-1)),s=i.split(",").map(e=>t.length?e.replace(" ",t.shift()):e);return eu(e)&&(s=s.reduce((e,t)=>e.concat(function(e){let t=e.substring(0,e.indexOf(":")),i=e.substring(t.length+1);return{name:t,type:i}}(t)),[])),s}(e)}function eR(e,t){switch(!0){case ea.isAbiType(e):return new ea(t).toApiRequest();case eo.isAbiType(e):return new eo(t).toApiRequest();case ek(e):return J(t.toString());case eO(e):{let e=I(D(t)).padStart(128,"0"),i=ex(x(e.slice(-64))),s=ex(x(e.slice(0,-64)));return[ei(s.low),ei(s.high),ei(i.low),ei(i.high)]}default:return ei(t)}}function eD(e,t,i,s){if(void 0===e)throw Error(`Missing parameter for type ${t}`);if(Array.isArray(e)){let r=[];r.push(ei(e.length));let a=eI(t);return e.reduce((e,t)=>e.concat(eD(t,a,i,s)),r)}if(i[t]&&i[t].members.length){if(ea.isAbiType(t))return new ea(e).toApiRequest();if(eo.isAbiType(t))return new eo(e).toApiRequest();if("core::starknet::eth_address::EthAddress"===t)return eR(t,e);if("core::byte_array::ByteArray"===t)return function(e){let t=et(e);return[t.data.length.toString(),...t.data.map(e=>e.toString()),t.pending_word.toString(),t.pending_word_len.toString()]}(e);let{members:r}=i[t];return r.reduce((t,r)=>t.concat(eD(e[r.name],r.type,i,s)),[])}if(ec(t))return(function(e,t){let i=eL(t),s=Object.values(e);if(s.length!==i.length)throw Error(`ParseTuple: provided and expected abi tuple size do not match.
      provided: ${s} 
      expected: ${i}`);return i.map((e,t)=>({element:s[t],type:e.type??e}))})(e,t).reduce((e,t)=>{let r=eD(t.element,t.type,i,s);return e.concat(r)},[]);if(ea.isAbiType(t))return new ea(e).toApiRequest();if(eo.isAbiType(t))return new eo(e).toApiRequest();if(ep(t,s)){let{variants:r}=s[t];if(em(t)){if(e.isSome()){let t=r.find(e=>"Some"===e.name);if(void 0===t)throw Error("Error in abi : Option has no 'Some' variant.");let a=t.type;if("()"===a)return v.Some.toString();let n=eD(e.unwrap(),a,i,s);return Array.isArray(n)?[v.Some.toString(),...n]:[v.Some.toString(),n]}return v.None.toString()}if(eg(t)){if(e.isOk()){let t=r.find(e=>"Ok"===e.name);if(void 0===t)throw Error("Error in abi : Result has no 'Ok' variant.");let a=t.type;if("()"===a)return b.Ok.toString();let n=eD(e.unwrap(),a,i,s);return Array.isArray(n)?[b.Ok.toString(),...n]:[b.Ok.toString(),n]}let t=r.find(e=>"Err"===e.name);if(void 0===t)throw Error("Error in abi : Result has no 'Err' variant.");let a=t.type;if("()"===a)return b.Err.toString();let n=eD(e.unwrap(),a,i,s);return Array.isArray(n)?[b.Err.toString(),...n]:[b.Err.toString(),n]}let a=e.activeVariant(),n=r.find(e=>e.name===a);if(void 0===n)throw Error(`Not find in abi : Enum has no '${a}' variant.`);let o=n.type,h=r.findIndex(e=>e.name===a);if("()"===o)return h.toString();let d=eD(e.unwrap(),o,i,s);return Array.isArray(d)?[h.toString(),...d]:[h.toString(),d]}if("object"==typeof e)throw Error(`Parameter ${e} do not align with abi parameter ${t}`);return eR(t,e)}function eV(e,t){switch(!0){case eb(e):return!!BigInt(t.next().value);case ea.isAbiType(e):return new ea(t.next().value,t.next().value).toBigInt();case eo.isAbiType(e):let i=t.next().value;return new eo(i,t.next().value,t.next().value,t.next().value).toBigInt();case"core::starknet::eth_address::EthAddress"===e:return BigInt(t.next().value);case"core::bytes_31::bytes31"===e:return ee(t.next().value);case eO(e):let s=I(t.next().value).padStart(32,"0"),r=I(t.next().value).padStart(32,"0"),a=I(t.next().value).padStart(32,"0");return BigInt(x(r+s+I(t.next().value).padStart(32,"0")+a));default:return BigInt(t.next().value)}}function eq(e,t,i,s){if("()"===t.type)return{};if(ea.isAbiType(t.type))return new ea(e.next().value,e.next().value).toBigInt();if(eo.isAbiType(t.type)){let t=e.next().value;return new eo(t,e.next().value,e.next().value,e.next().value).toBigInt()}if(eS(t.type)){let t=[],i=BigInt(e.next().value);for(;t.length<i;)t.push(D(e.next().value));return function(e){let t=0n===BigInt(e.pending_word)?"":ee(D(e.pending_word));return e.data.reduce((e,t)=>e+(0n===BigInt(t)?"":ee(D(t))),"")+t}({data:t,pending_word:D(e.next().value),pending_word_len:BigInt(e.next().value)})}if(el(t.type)){let r=[],a={name:"",type:eI(t.type)},n=BigInt(e.next().value);for(;r.length<n;)r.push(eq(e,a,i,s));return r}if(i&&t.type in i&&i[t.type])return"core::starknet::eth_address::EthAddress"===t.type?eV(t.type,e):i[t.type].members.reduce((t,r)=>(t[r.name]=eq(e,r,i,s),t),{});if(s&&t.type in s&&s[t.type]){let r=Number(e.next().value),a=s[t.type].variants.reduce((t,a,n)=>(n===r?t[a.name]=eq(e,{name:"",type:a.type},i,s):t[a.name]=void 0,t),{});if(t.type.startsWith("core::option::Option")){let e=r===v.Some?a.Some:void 0;return new eM(r,e)}if(t.type.startsWith("core::result::Result")){let e;return e=r===b.Ok?a.Ok:a.Err,new eA(r,e)}return new eP(a)}if(ec(t.type))return eL(t.type).reduce((t,r,a)=>{let n=r?.name?r.name:a,o=r?.type?r.type:r;return t[n]=eq(e,{name:n,type:o},i,s),t},{});if(el(t.type)){let r=[],a={name:"",type:eI(t.type)},n=BigInt(e.next().value);for(;r.length<n;)r.push(eq(e,a,i,s));return r}return eV(t.type,e)}function eF(e,t,i,s,r){let{name:a,type:n}=t;switch(!0){case eh(a):return BigInt(e.next().value);case i&&n in i||ec(n):case s&&ep(n,s):return eq(e,t,i,s);case el(n):if(eT(n))return eq(e,t,i,s);let o=[];if(r&&r[`${a}_len`]){let n=r[`${a}_len`];for(;o.length<n;)o.push(eq(e,{name:a,type:t.type.replace("*","")},i,s))}return o;default:return eV(n,e)}}let eH=(e,t)=>{if(K(X(e)||q(e)||R(e),`Validate: arg ${t.name} should be a felt typed as (String, Number or BigInt)`),X(e)&&!L(e))return;let i=BigInt(e.toString(10));K(i>=0n&&i<=2n**252n-1n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0, 2^252-1]`)},eG=(e,t)=>{K(X(e),`Validate: arg ${t.name} should be a string.`),K(e.length<32,`Validate: arg ${t.name} cairo typed ${t.type} should be a string of less than 32 characters.`)},eU=(e,t)=>{K(X(e),`Validate: arg ${t.name} should be a string.`)},eW=(e,t)=>{let i;switch(q(e)&&K(e<=Number.MAX_SAFE_INTEGER,"Validation: Parameter is to large to be typed as Number use (BigInt or String)"),K(X(e)||q(e)||R(e)||"object"==typeof e&&"low"in e&&"high"in e||"object"==typeof e&&["limb0","limb1","limb2","limb3"].every(t=>t in e),`Validate: arg ${t.name} of cairo type ${t.type} should be type (String, Number or BigInt), but is ${typeof e} ${e}.`),t.type){case h.u256:i=new ea(e).toBigInt();break;case h.u512:i=new eo(e).toBigInt();break;default:i=BigInt(e)}switch(t.type){case h.u8:K(i>=0n&&i<=255n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0 - 255]`);break;case h.u16:K(i>=0n&&i<=65535n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0, 65535]`);break;case h.u32:K(i>=0n&&i<=4294967295n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0, 4294967295]`);break;case h.u64:K(i>=0n&&i<=2n**64n-1n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0, 2^64-1]`);break;case h.u128:K(i>=0n&&i<=2n**128n-1n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0, 2^128-1]`);break;case h.u256:K(i>=0n&&i<=2n**256n-1n,`Validate: arg ${t.name} is ${t.type} 0 - 2^256-1`);break;case h.u512:K(eo.is(i),`Validate: arg ${t.name} is ${t.type} 0 - 2^512-1`);break;case d.ClassHash:case d.ContractAddress:K(i>=0n&&i<=2n**252n-1n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0, 2^252-1]`);break;case d.Secp256k1Point:K(i>=0n&&i<=2n**512n-1n,`Validate: arg ${t.name} must be ${t.type} : a 512 bits number.`)}},ej=(e,t)=>{K(F(e),`Validate: arg ${t.name} of cairo type ${t.type} should be type (Boolean)`)},eK=(e,t,i)=>{if(t.type===h.u256||t.type===h.u512){eW(e,t);return}if("core::starknet::eth_address::EthAddress"===t.type){K("object"!=typeof e,`EthAddress type is waiting a BigNumberish. Got ${e}`);let i=BigInt(e.toString(10));K(i>=0n&&i<=2n**160n-1n,`Validate: arg ${t.name} cairo typed ${t.type} should be in range [0, 2^160-1]`);return}K("object"==typeof e&&!Array.isArray(e),`Validate: arg ${t.name} is cairo type struct (${t.type}), and should be defined as js object (not array)`),i[t.type].members.forEach(({name:i})=>{K(Object.keys(e).includes(i),`Validate: arg ${t.name} should have a property ${i}`)})},ez=(e,t)=>{K("object"==typeof e&&!Array.isArray(e),`Validate: arg ${t.name} is cairo type Enum (${t.type}), and should be defined as js object (not array)`);let i=Object.getOwnPropertyNames(Object.getPrototypeOf(e)),s=[...Object.getOwnPropertyNames(e),...i];if(!(em(t.type)&&s.includes("isSome")&&s.includes("isNone")||eg(t.type)&&s.includes("isOk")&&s.includes("isErr")||s.includes("variant")&&s.includes("activeVariant")))throw Error(`Validate Enum: argument ${t.name}, type ${t.type}, value received ${e}, is not an Enum.`)},eY=(e,t)=>{K("object"==typeof e&&!Array.isArray(e),`Validate: arg ${t.name} should be a tuple (defined as object)`)},eX=(e,t,i,s)=>{let r=eI(t.type);if(!(ed(r)&&Q(e)))switch(K(Array.isArray(e),`Validate: arg ${t.name} should be an Array`),!0){case ed(r):e.forEach(e=>eH(e,t));break;case ec(r):e.forEach(e=>eY(e,{name:t.name,type:r}));break;case el(r):e.forEach(e=>eX(e,{name:"",type:r},i,s));break;case ef(r,i):e.forEach(e=>eK(e,{name:t.name,type:r},i));break;case ep(r,s):e.forEach(e=>ez(e,{name:t.name,type:r}));break;case ey(r)||ev(r):e.forEach(e=>eW(e,{name:"",type:r}));break;case eb(r):e.forEach(e=>ej(e,t));break;default:throw Error(`Validate Unhandled: argument ${t.name}, type ${t.type}, value ${e}`)}};function e$(e,t,i,s){e.inputs.reduce((e,r)=>{let a=t[e];switch(!0){case eh(r.name):return e;case ed(r.type):eH(a,r);break;case ek(r.type):eG(a,r);break;case ey(r.type)||ev(r.type):eW(a,r);break;case eb(r.type):ej(a,r);break;case eS(r.type):eU(a,r);break;case el(r.type):eX(a,r,i,s);break;case ef(r.type,i):eK(a,r,i);break;case ep(r.type,s):ez(a,r);break;case ec(r.type):eY(a,r);break;default:throw Error(`Validate Unhandled: argument ${r.name}, type ${r.type}, value ${a}`)}return e+1},0)}class eQ{constructor(e){this.structs=eQ.getAbiStruct(e),this.enums=eQ.getAbiEnum(e),this.parser=function(e){let t=e.find(e=>"interface"===e.type)?2:!function(e){let{cairo:t}=function(e){if(e.find(e=>"interface"===e.type))return{cairo:"1",compiler:"2"};let t=e.find(e=>"function"===e.type&&(e.inputs.length||e.outputs.length));return t?eT((t.inputs.length?t.inputs:t.outputs)[0].type)?{cairo:"1",compiler:"1"}:{cairo:"0",compiler:"0"}:{cairo:void 0,compiler:void 0}}(e);if(void 0===t)throw Error("Unable to determine Cairo version");return"1"===t}(e)?0:1;if(0===t||1===t)return new eB(e);if(2===t)return new eE(e);throw Error(`Unsupported ABI version ${t}`)}(e),this.abi=this.parser.getLegacyFormat()}validate(e,t,i=[]){e!==o.DEPLOY&&K(this.abi.filter(t=>{if("function"!==t.type)return!1;let i="view"===t.stateMutability||"view"===t.state_mutability;return e===o.INVOKE?!i:i}).map(e=>e.name).includes(t),`${e===o.INVOKE?"invocable":"viewable"} method not found in abi`);let s=this.abi.find(i=>e===o.DEPLOY?i.name===t&&"constructor"===i.type:i.name===t&&"function"===i.type);if(e_(t,i,s))return;let r=this.parser.methodInputsLength(s);if(i.length!==r)throw Error(`Invalid number of arguments, expected ${r} arguments, but got ${i.length}`);e$(s,i,this.structs,this.enums)}compile(e,t){let i;let s=this.abi.find(t=>t.name===e);if(e_(e,t,s))return[];Array.isArray(t)?i=t:(i=Object.values(function(e,t,i,s){let r=(e,t)=>{if(el(t))return function(e,t){let i=eI(t);return X(e)?e:e.map(e=>r(e,i))}(e,t);if(ep(t,s))return n(e,s[t]);if(ec(t))return eL(t).reduce((t,i,s)=>{let a;let n=Object.keys(e),o=i?.type?i.type:i;return a=r(e[n[s]],o),Object.defineProperty(t,s.toString(),{enumerable:!0,value:a??e[n[s]]}),t},{});if(ew(t)||eS(t)||eO(t))return e;if(ea.isAbiType(t)){if("object"!=typeof e)return e;if(!("low"in e&&"high"in e))throw Error(`Your object includes the property : ${t}, containing an Uint256 object without the 'low' and 'high' keys.`);return{low:e.low,high:e.high}}if(eo.isAbiType(t)){if("object"!=typeof e)return e;if(!["limb0","limb1","limb2","limb3"].every(t=>t in e))throw Error(`Your object includes the property : ${t}, containing an Uint512 object without the 'limb0' to 'limb3' keys.`);return{limb0:e.limb0,limb1:e.limb1,limb2:e.limb2,limb3:e.limb3}}return ef(t,i)?a(e,i[t].members):e},a=(e,t)=>t.reduce((t,i)=>{let s;if("undefined"===e[i.name]&&(eT(i.type)||!eh(i.name)))throw Error(`Your object needs a property with key : ${i.name} .`);return s=r(e[i.name],i.type),Object.defineProperty(t,i.name,{enumerable:!0,value:s??e[i.name]}),t},{}),n=(e,t)=>{if(eg(t.name)){let i=t.name.substring(t.name.indexOf("<")+1,t.name.lastIndexOf(",")),s=t.name.substring(t.name.indexOf(",")+1,t.name.lastIndexOf(">"));return e.isOk()?new eA(b.Ok,r(e.unwrap(),i)):new eA(b.Err,r(e.unwrap(),s))}if(em(t.name)){let i=t.name.substring(t.name.indexOf("<")+1,t.name.lastIndexOf(">"));return e.isSome()?new eM(v.Some,r(e.unwrap(),i)):new eM(v.None,{})}return new eP(Object.fromEntries(Object.entries(e.variant).map(i=>{if(void 0===i[1])return i;let s=t.type.substring(t.type.lastIndexOf("<")+1,t.type.lastIndexOf(">"));return"()"===s?i:[i[0],r(e.unwrap(),s)]})))};return t.reduce((t,i)=>{let s;return eh(i.name)&&!eT(i.type)||(s=r(e[i.name],i.type),Object.defineProperty(t,i.name,{enumerable:!0,value:s})),t},{})}(t,s.inputs,this.structs,this.enums)),e$(s,i,this.structs,this.enums));let r=i[Symbol.iterator](),a=s.inputs.reduce((e,t)=>eh(t.name)&&!eT(t.type)?e:e.concat(function(e,t,i,s){let{name:r,type:a}=t,{value:n}=e.next();switch(!0){case el(a):if(!Array.isArray(n)&&!$(n))throw Error(`ABI expected parameter ${r} to be array or long string, got ${n}`);return X(n)&&(n=Z(n)),eD(n,t.type,i,s);case"core::starknet::eth_address::EthAddress"===a:return eR(a,n);case ef(a,i)||ec(a)||ea.isAbiType(a)||ea.isAbiType(a):case ep(a,s):return eD(n,a,i,s);default:return eR(a,n)}}(r,t,this.structs,this.enums)),[]);return Object.defineProperty(a,"__compiled__",{enumerable:!1,writable:!1,value:!0}),a}static compile(e){let t;let i=e=>{let t=(e,i=".")=>{let s=Array.isArray(e)?[e.length.toString(),...e]:e;return Object.entries(s).flatMap(([e,r])=>{let a=r;"entrypoint"===e?a=U(a):Q(a)&&(a=et(a));let n=Array.isArray(s)&&"0"===e?"$$len":e;if(R(a))return[[`${i}${n}`,ei(a)]];if(Object(a)===a){let e=Object.getOwnPropertyNames(Object.getPrototypeOf(a)),s=[...Object.getOwnPropertyNames(a),...e];if(s.includes("isSome")&&s.includes("isNone")){let e=a,s=e.isSome()?v.Some:v.None;return e.isSome()?t({0:s,1:e.unwrap()},`${i}${n}.`):[[`${i}${n}`,ei(s)]]}if(s.includes("isOk")&&s.includes("isErr")){let e=a;return t({0:e.isOk()?b.Ok:b.Err,1:e.unwrap()},`${i}${n}.`)}if(s.includes("variant")&&s.includes("activeVariant")){let e=a,s=e.activeVariant(),r=Object.keys(e.variant).findIndex(e=>e===s);return"object"==typeof e.unwrap()&&0===Object.keys(e.unwrap()).length?[[`${i}${n}`,ei(r)]]:t({0:r,1:e.unwrap()},`${i}${n}.`)}return t(a,`${i}${n}.`)}return[[`${i}${n}`,ei(a)]]})};return Object.fromEntries(t(e))};return Object.defineProperty(t=Array.isArray(e)?Object.values(i({...e})):Object.values(i(e)),"__compiled__",{enumerable:!1,writable:!1,value:!0}),t}parse(e,t){let{outputs:i}=this.abi.find(t=>t.name===e),s=t.flat()[Symbol.iterator](),r=i.flat().reduce((e,t,i)=>{let r=t.name??i;return e[r]=eF(s,t,this.structs,this.enums,e),e[r]&&e[`${r}_len`]&&delete e[`${r}_len`],e},{});return 1===Object.keys(r).length&&0 in r?r[0]:r}format(e,t,i){return function e(t,i,s){return Object.entries(t).reduce((r,[a,n])=>{let o=s??i[a];if(!(a in i)&&!s)return r[a]=n,r;if("string"===o){if(Array.isArray(t[a])){let i=e(t[a],t[a].map(e=>o));return r[a]=Object.values(i).join(""),r}return eC.isBN(t,i,a),r[a]=ee(n),r}if("number"===o)return eC.isBN(t,i,a),r[a]=Number(n),r;if("function"==typeof o)return r[a]=o(n),r;if(Array.isArray(o)){let i=e(t[a],o,o[0]);return r[a]=Object.values(i),r}return"object"==typeof o?r[a]=e(t[a],o):eC.unknown(t,i,a),r},{})}(this.parse(e,t),i)}static getAbiStruct(e){return e.filter(e=>"struct"===e.type).reduce((e,t)=>({...e,[t.name]:t}),{})}static getAbiEnum(e){let t=e.filter(e=>"enum"===e.type).reduce((e,t)=>({...e,[t.name]:t}),{});return delete t["core::bool"],t}static toCalldata(e=[]){return eQ.compile(e)}static toHex(e=[]){return eQ.compile(e).map(e=>D(e))}decodeParameters(e,t){let i=Array.isArray(e)?e:[e],s=t.flat()[Symbol.iterator](),r=i.map(e=>eF(s,{name:"",type:e},this.structs,this.enums));return 1===r.length?r[0]:r}}function eZ(e,t){return(0,O.NO)(BigInt(e),BigInt(t))}function eJ(e,t){return D((0,O.Ef)(BigInt(e),BigInt(t)))}function e0(e){return[...e,e.length].reduce((e,t)=>(0,O.NO)(BigInt(e),BigInt(t)),0).toString()}let e1=e0;function e2(e){return D((0,O.pd)(e.map(e=>BigInt(e))))}function e3(e,t,i,s){let r=e0(eQ.compile(i));return D(BigInt(e0([ei("0x535441524b4e45545f434f4e54524143545f41444452455353"),s,e,t,r]))%A)}function e5(e,t){return"attributes"===e||"accessible_scopes"===e?Array.isArray(t)&&0===t.length?void 0:t:"debug_info"===e?null:null===t?void 0:t}function e6(e){let t=!1,i=[];for(let s of e)'"'===s&&!1==(i.length>0&&"\\"===i.slice(-1)[0])&&(t=!t),t?i.push(s):i.push(":"===s?": ":","===s?", ":s);return i.join("")}function e4(e){let t=X(e)?JSON.parse(e):e,i=D(0n),s=e0(t.entry_points_by_type.EXTERNAL.flatMap(e=>[e.selector,e.offset])),r=e0(t.entry_points_by_type.L1_HANDLER.flatMap(e=>[e.selector,e.offset])),a=e0(t.entry_points_by_type.CONSTRUCTOR.flatMap(e=>[e.selector,e.offset])),n=e0(t.program.builtins.map(e=>J(e))),o=function(e){let{abi:t,program:i}=e,s=e6(JSON.stringify({abi:t,program:i},e5));return x((0,O.Dq)(T(s)).toString(16))}(t),h=e0(t.program.data);return e0([i,s,r,a,n,o,h])}function e8(e){let t=e.flatMap(e=>{var t;return[BigInt(e.selector),BigInt(e.offset),(t=e.builtins,(0,O.pd)(t.flatMap(e=>BigInt(J(e)))))]});return(0,O.pd)(t)}function e7(e){let t=e.bytecode.map(e=>BigInt(e)),i=e.bytecode_segment_lengths??[],s=0,r=i.flatMap(e=>{let i=t.slice(s,s+=e);return[BigInt(e),(0,O.pd)(i)]});return 1n+(0,O.pd)(r)}function e9(e){let t=BigInt(J("COMPILED_CLASS_V1")),i=e8(e.entry_points_by_type.EXTERNAL),s=e8(e.entry_points_by_type.L1_HANDLER),r=e8(e.entry_points_by_type.CONSTRUCTOR),a=e.bytecode_segment_lengths?e7(e):(0,O.pd)(e.bytecode.map(e=>BigInt(e)));return D((0,O.pd)([t,i,s,r,a]))}function te(e){let t=e.flatMap(e=>[BigInt(e.selector),BigInt(e.function_idx)]);return(0,O.pd)(t)}function tt(e){let t=BigInt(J("CONTRACT_CLASS_V0.1.0")),i=te(e.entry_points_by_type.EXTERNAL),s=te(e.entry_points_by_type.L1_HANDLER),r=te(e.entry_points_by_type.CONSTRUCTOR),a=function(e){let t=e6(JSON.stringify(e.abi,null));return BigInt(x((0,O.Dq)(T(t)).toString(16)))}(e),n=(0,O.pd)(e.sierra_program.map(e=>BigInt(e)));return D((0,O.pd)([t,i,s,r,a,n]))}function ti(e){let t=X(e)?JSON.parse(e):e;return"sierra_program"in t?tt(t):e4(t)}class ts{constructor(e,t=eZ){this.branches=[],this.hashMethod=t,this.leaves=e,this.root=this.build(e)}build(e){if(1===e.length)return e[0];e.length!==this.leaves.length&&this.branches.push(e);let t=[];for(let i=0;i<e.length;i+=2)i+1===e.length?t.push(ts.hash(e[i],"0x0",this.hashMethod)):t.push(ts.hash(e[i],e[i+1],this.hashMethod));return this.build(t)}static hash(e,t,i=eZ){let[s,r]=[BigInt(e),BigInt(t)].sort((e,t)=>e>=t?1:-1);return i(s,r)}getProof(e,t=this.leaves,i=[]){let s=t.indexOf(e);if(-1===s)throw Error("leaf not found");if(1===t.length)return i;let r=s%2==0,a=(r?t[s+1]:t[s-1])??"0x0",n=[...i,a],o=this.leaves.length===t.length?-1:this.branches.findIndex(e=>e.length===t.length),h=this.branches[o+1]??[this.root];return this.getProof(ts.hash(r?e:a,r?a:e,this.hashMethod),h,n)}}let tr={u256:JSON.parse('[{ "name": "low", "type": "u128" }, { "name": "high", "type": "u128" }]'),TokenAmount:JSON.parse('[{ "name": "token_address", "type": "ContractAddress" }, { "name": "amount", "type": "u256" }]'),NftId:JSON.parse('[{ "name": "collection_address", "type": "ContractAddress" }, { "name": "token_id", "type": "u256" }]')},ta={[j.Active]:{domain:"StarknetDomain",hashMethod:e2,hashMerkleMethod:eJ,escapeTypeString:e=>`"${e}"`,presetTypes:tr},[j.Legacy]:{domain:"StarkNetDomain",hashMethod:e1,hashMerkleMethod:eZ,escapeTypeString:e=>e,presetTypes:{}}};function tn(e,t,{min:i,max:s}){let r=BigInt(e);K(r>=i&&r<=s,`${r} (${t}) is out of bounds [${i}, ${s}]`)}function to({types:e,domain:t}){return ta[j.Active].domain in e&&t.revision===j.Active?j.Active:ta[j.Legacy].domain in e&&(t.revision??j.Legacy)===j.Legacy?j.Legacy:void 0}function th(e){try{return D(e)}catch(t){if(X(e))return D(J(e));throw Error(`Invalid BigNumberish: ${e}`)}}function td(e){return L(e)?e:U(e)}function tl(e){return"merkletree"===e.type}function tc(e,t,i=[],s="",r=j.Legacy){return("*"===t[t.length-1]?t=t.slice(0,-1):r===j.Active&&("enum"===t?t=s:t.match(/^\(.*\)$/)&&(t=t.slice(1,-1))),i.includes(t)||!e[t])?i:[t,...e[t].reduce((t,i)=>[...t,...tc(e,i.type,t,i.contains,r).filter(e=>!t.includes(e))],[])]}function tu(e,t,i=j.Legacy){let s=i===j.Active?{...e,...ta[i].presetTypes}:e,[r,...a]=tc(s,t,void 0,void 0,i),n=r?[r,...a.sort()]:[],o=ta[i].escapeTypeString;return n.map(e=>{let t=s[e].map(e=>{let t="enum"===e.type&&i===j.Active?e.contains:e.type,s=t.match(/^\(.*\)$/)?`(${t.slice(1,-1).split(",").map(e=>e?o(e):e).join(",")})`:o(t);return`${o(e.name)}:${s}`});return`${o(e)}(${t})`}).join("")}function tf(e,t,i=j.Legacy){return U(tu(e,t,i))}function tp(e,t,i,s={},r=j.Legacy){if(e[t])return[t,tg(e,t,i,r)];if(ta[r].presetTypes[t])return[t,tg(ta[r].presetTypes,t,i,r)];if(t.endsWith("*")){let s=i.map(i=>tp(e,t.slice(0,-1),i,void 0,r)[1]);return[t,ta[r].hashMethod(s)]}switch(t){case"enum":if(r===j.Active){let[a,n]=Object.entries(i)[0],o=e[s.parent][0],h=e[o.contains],d=h.find(e=>e.name===a),l=h.indexOf(d),c=d.type.slice(1,-1).split(",").map((t,i)=>t?tp(e,t,n[i],void 0,r)[1]:t);return[t,ta[r].hashMethod([l,...c])]}return[t,th(i)];case"merkletree":{let t=function(e,t){if(t.parent&&t.key){let i=e[t.parent].find(e=>e.name===t.key);if(!tl(i))throw Error(`${t.key} is not a merkle tree`);if(i.contains.endsWith("*"))throw Error(`Merkle tree contain property must not be an array but was given ${t.key}`);return i.contains}return"raw"}(e,s),{root:a}=new ts(i.map(i=>tp(e,t,i,void 0,r)[1]),ta[r].hashMerkleMethod);return["felt",a]}case"selector":return["felt",td(i)];case"string":if(r===j.Active){let e=et(i),s=[e.data.length,...e.data,e.pending_word,e.pending_word_len];return[t,ta[r].hashMethod(s)]}return[t,th(i)];case"i128":if(r===j.Active){let e=BigInt(i);return tn(e,t,E),[t,th(e<0n?M+e:e)]}return[t,th(i)];case"timestamp":case"u128":return r===j.Active&&tn(i,t,_),[t,th(i)];case"felt":case"shortstring":return r===j.Active&&tn(th(i),t,B),[t,th(i)];case"ClassHash":case"ContractAddress":return r===j.Active&&tn(i,t,B),[t,th(i)];case"bool":return r===j.Active&&K("boolean"==typeof i,`Type mismatch for ${t} ${i}`),[t,th(i)];default:if(r===j.Active)throw Error(`Unsupported type: ${t}`);return[t,th(i)]}}function tm(e,t,i,s=j.Legacy){let[r,a]=(e[t]??ta[s].presetTypes[t]).reduce(([r,a],n)=>{if(void 0===i[n.name]||null===i[n.name]&&"enum"!==n.type)throw Error(`Cannot encode data: missing data for '${n.name}'`);let o=i[n.name],h={parent:t,key:n.name},[d,l]=tp(e,n.type,o,h,s);return[[...r,d],[...a,l]]},[["felt"],[tf(e,t,s)]]);return[r,a]}function tg(e,t,i,s=j.Legacy){return ta[s].hashMethod(tm(e,t,i,s)[1])}function ty(e,t){if(!(e.message&&e.primaryType&&e.types&&to(e)))throw Error("Typed data does not match JSON schema");let i=to(e),{domain:s,hashMethod:r}=ta[i];return r([J("StarkNet Message"),tg(e.types,s,e.domain,i),t,tg(e.types,e.primaryType,e.message,i)])}}}]);