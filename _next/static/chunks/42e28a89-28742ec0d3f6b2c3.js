"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[232],{2284:(e,t,i)=>{i.d(t,{A:()=>d});var r=i(1689),s=i(8119),a=i(6077),n=i(3675),o=i(5432);class d extends r.A{describe(){return this.deepExtend(super.describe(),{id:"okx",name:"OKX",countries:["CN","US"],version:"v5",rateLimit:103,pro:!0,certified:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!0,addMargin:!0,cancelAllOrders:!1,cancelAllOrdersAfter:!0,cancelOrder:!0,cancelOrders:!0,cancelOrdersForSymbols:!0,closeAllPositions:!1,closePosition:!0,createConvertTrade:!0,createDepositAddress:!1,createMarketBuyOrderWithCost:!0,createMarketSellOrderWithCost:!0,createOrder:!0,createOrders:!0,createOrderWithTakeProfitAndStopLoss:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopLossOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,createTakeProfitOrder:!0,createTrailingPercentOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:!0,fetchBorrowRateHistories:!0,fetchBorrowRateHistory:!0,fetchCanceledOrders:!0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchConvertCurrencies:!0,fetchConvertQuote:!0,fetchConvertTrade:!0,fetchConvertTradeHistory:!0,fetchCrossBorrowRate:!0,fetchCrossBorrowRates:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingInterval:!0,fetchFundingIntervals:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchGreeks:!0,fetchIndexOHLCV:!0,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!1,fetchLedger:!0,fetchLedgerEntry:void 0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchLongShortRatio:!1,fetchLongShortRatioHistory:!0,fetchMarginAdjustmentHistory:!0,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMarkPrice:!0,fetchMarkPrices:!0,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOption:!0,fetchOptionChain:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionHistory:"emulated",fetchPositions:!0,fetchPositionsForSymbol:!0,fetchPositionsHistory:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!0,fetchTransfers:!0,fetchUnderlyingAssets:!0,fetchVolatilityHistory:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!0,repayCrossMargin:!0,sandbox:!0,setLeverage:!0,setMargin:!1,setMarginMode:!0,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","6h":"6H","12h":"12H","1d":"1D","1w":"1W","1M":"1M","3M":"3M"},hostname:"www.okx.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg",api:{rest:"https://{hostname}"},www:"https://www.okx.com",doc:"https://www.okx.com/docs-v5/en/",fees:"https://www.okx.com/pages/products/fees.html",referral:{url:"https://www.okx.com/join/CCXT2023",discount:.2},test:{rest:"https://{hostname}"}},api:{public:{get:{"market/books-full":2,"market/tickers":1,"market/ticker":1,"market/index-tickers":1,"market/books":.5,"market/books-lite":5/3,"market/candles":.5,"market/history-candles":1,"market/index-candles":1,"market/history-index-candles":2,"market/mark-price-candles":1,"market/history-mark-price-candles":2,"market/trades":.2,"market/history-trades":2,"market/option/instrument-family-trades":1,"market/platform-24-volume":10,"market/open-oracle":50,"market/exchange-rate":20,"market/index-components":1,"public/economic-calendar":50,"market/block-tickers":1,"market/block-ticker":1,"public/block-trades":1,"public/instruments":1,"public/delivery-exercise-history":.5,"public/open-interest":1,"public/funding-rate":1,"public/funding-rate-history":1,"public/price-limit":1,"public/opt-summary":1,"public/estimated-price":2,"public/discount-rate-interest-free-quota":10,"public/time":2,"public/mark-price":2,"public/position-tiers":2,"public/interest-rate-loan-quota":10,"public/vip-interest-rate-loan-quota":10,"public/underlying":1,"public/insurance-fund":2,"public/convert-contract-coin":2,"public/option-trades":1,"public/instrument-tick-bands":4,"rubik/stat/trading-data/support-coin":4,"rubik/stat/taker-volume":4,"rubik/stat/margin/loan-ratio":4,"rubik/stat/contracts/long-short-account-ratio":4,"rubik/stat/contracts/long-short-account-ratio-contract":4,"rubik/stat/contracts/open-interest-volume":4,"rubik/stat/option/open-interest-volume":4,"rubik/stat/option/open-interest-volume-ratio":4,"rubik/stat/option/open-interest-volume-expiry":4,"rubik/stat/option/open-interest-volume-strike":4,"rubik/stat/option/taker-block-volume":4,"system/status":50,"sprd/spreads":1,"sprd/books":.5,"sprd/ticker":1,"sprd/public-trades":.2,"market/sprd-ticker":2,"market/sprd-candles":2,"market/sprd-history-candles":2,"tradingBot/grid/ai-param":1,"tradingBot/grid/min-investment":1,"tradingBot/public/rsi-back-testing":1,"asset/exchange-list":5/3,"finance/staking-defi/eth/apy-history":5/3,"finance/staking-defi/sol/apy-history":5/3,"finance/savings/lending-rate-summary":5/3,"finance/savings/lending-rate-history":5/3,"finance/fixed-loan/lending-offers":10/3,"finance/fixed-loan/lending-apy-history":10/3,"finance/fixed-loan/pending-lending-volume":10/3,"finance/sfp/dcd/products":2/3,"copytrading/public-lead-traders":4,"copytrading/public-weekly-pnl":4,"copytrading/public-stats":4,"copytrading/public-preference-currency":4,"copytrading/public-current-subpositions":4,"copytrading/public-subpositions-history":4,"support/announcements-types":20}},private:{get:{"rfq/counterparties":4,"rfq/maker-instrument-settings":4,"rfq/mmp-config":4,"rfq/rfqs":10,"rfq/quotes":10,"rfq/trades":4,"rfq/public-trades":4,"sprd/order":1/3,"sprd/orders-pending":1/3,"sprd/orders-history":.5,"sprd/orders-history-archive":.5,"sprd/trades":1/3,"trade/order":1/3,"trade/orders-pending":1/3,"trade/orders-history":.5,"trade/orders-history-archive":1,"trade/fills":1/3,"trade/fills-history":2.2,"trade/fills-archive":2,"trade/order-algo":1,"trade/orders-algo-pending":1,"trade/orders-algo-history":1,"trade/easy-convert-currency-list":20,"trade/easy-convert-history":20,"trade/one-click-repay-currency-list":20,"trade/one-click-repay-history":20,"trade/account-rate-limit":1,"asset/currencies":5/3,"asset/balances":5/3,"asset/non-tradable-assets":5/3,"asset/asset-valuation":10,"asset/transfer-state":10,"asset/bills":5/3,"asset/deposit-lightning":5,"asset/deposit-address":5/3,"asset/deposit-history":5/3,"asset/withdrawal-history":5/3,"asset/deposit-withdraw-status":20,"asset/convert/currencies":5/3,"asset/convert/currency-pair":5/3,"asset/convert/history":5/3,"asset/monthly-statement":2,"account/instruments":1,"account/balance":2,"account/positions":2,"account/positions-history":100,"account/account-position-risk":2,"account/bills":5/3,"account/bills-archive":5/3,"account/bills-history-archive":2,"account/config":4,"account/max-size":1,"account/max-avail-size":1,"account/leverage-info":1,"account/adjust-leverage-info":4,"account/max-loan":1,"account/trade-fee":4,"account/interest-accrued":4,"account/interest-rate":4,"account/max-withdrawal":1,"account/risk-state":2,"account/quick-margin-borrow-repay-history":4,"account/borrow-repay-history":4,"account/vip-interest-accrued":4,"account/vip-interest-deducted":4,"account/vip-loan-order-list":4,"account/vip-loan-order-detail":4,"account/interest-limits":4,"account/greeks":2,"account/position-tiers":2,"account/mmp-config":4,"account/fixed-loan/borrowing-limit":4,"account/fixed-loan/borrowing-quote":5,"account/fixed-loan/borrowing-orders-list":5,"account/spot-manual-borrow-repay":10,"account/set-auto-repay":4,"account/spot-borrow-repay-history":4,"users/subaccount/list":10,"account/subaccount/balances":10/3,"asset/subaccount/balances":10/3,"account/subaccount/max-withdrawal":1,"asset/subaccount/bills":5/3,"asset/subaccount/managed-subaccount-bills":5/3,"users/entrust-subaccount-list":10,"account/subaccount/interest-limits":4,"tradingBot/grid/orders-algo-pending":1,"tradingBot/grid/orders-algo-history":1,"tradingBot/grid/orders-algo-details":1,"tradingBot/grid/sub-orders":1,"tradingBot/grid/positions":1,"tradingBot/grid/ai-param":1,"tradingBot/signal/signals":1,"tradingBot/signal/orders-algo-details":1,"tradingBot/signal/orders-algo-history":1,"tradingBot/signal/positions":1,"tradingBot/signal/positions-history":1,"tradingBot/signal/sub-orders":1,"tradingBot/signal/event-history":1,"tradingBot/recurring/orders-algo-pending":1,"tradingBot/recurring/orders-algo-history":1,"tradingBot/recurring/orders-algo-details":1,"tradingBot/recurring/sub-orders":1,"finance/savings/balance":5/3,"finance/savings/lending-history":5/3,"finance/staking-defi/offers":10/3,"finance/staking-defi/orders-active":10/3,"finance/staking-defi/orders-history":10/3,"finance/staking-defi/eth/balance":5/3,"finance/staking-defi/eth/purchase-redeem-history":5/3,"finance/staking-defi/eth/product-info":3,"finance/staking-defi/sol/balance":5/3,"finance/staking-defi/sol/purchase-redeem-history":5/3,"copytrading/current-subpositions":1,"copytrading/subpositions-history":1,"copytrading/instruments":4,"copytrading/profit-sharing-details":4,"copytrading/total-profit-sharing":4,"copytrading/unrealized-profit-sharing-details":4,"copytrading/copy-settings":4,"copytrading/batch-leverage-info":4,"copytrading/current-lead-traders":4,"copytrading/lead-traders-history":4,"broker/nd/info":10,"broker/nd/subaccount-info":10,"broker/nd/subaccount/apikey":10,"asset/broker/nd/subaccount-deposit-address":5/3,"asset/broker/nd/subaccount-deposit-history":4,"asset/broker/nd/subaccount-withdrawal-history":4,"broker/nd/rebate-daily":100,"broker/nd/rebate-per-orders":300,"finance/sfp/dcd/order":2,"finance/sfp/dcd/orders":2,"broker/fd/rebate-per-orders":300,"broker/fd/if-rebate":5,"affiliate/invitee/detail":1,"users/partner/if-rebate":1,"support/announcements":4},post:{"rfq/create-rfq":4,"rfq/cancel-rfq":4,"rfq/cancel-batch-rfqs":10,"rfq/cancel-all-rfqs":10,"rfq/execute-quote":15,"rfq/maker-instrument-settings":4,"rfq/mmp-reset":4,"rfq/mmp-config":100,"rfq/create-quote":.4,"rfq/cancel-quote":.4,"rfq/cancel-batch-quotes":10,"rfq/cancel-all-quotes":10,"sprd/order":1,"sprd/cancel-order":1,"sprd/mass-cancel":1,"sprd/amend-order":1,"sprd/cancel-all-after":10,"trade/order":1/3,"trade/batch-orders":1/15,"trade/cancel-order":1/3,"trade/cancel-batch-orders":1/15,"trade/amend-order":1/3,"trade/amend-batch-orders":1/150,"trade/close-position":1,"trade/fills-archive":172800,"trade/order-algo":1,"trade/cancel-algos":1,"trade/amend-algos":1,"trade/cancel-advance-algos":1,"trade/easy-convert":20,"trade/one-click-repay":20,"trade/mass-cancel":4,"trade/cancel-all-after":10,"asset/transfer":10,"asset/withdrawal":5/3,"asset/withdrawal-lightning":5,"asset/cancel-withdrawal":5/3,"asset/convert-dust-assets":10,"asset/convert/estimate-quote":1,"asset/convert/trade":1,"asset/monthly-statement":1,"account/set-position-mode":4,"account/set-leverage":1,"account/position/margin-balance":1,"account/set-greeks":4,"account/set-isolated-mode":4,"account/quick-margin-borrow-repay":4,"account/borrow-repay":5/3,"account/simulated_margin":10,"account/position-builder":10,"account/set-riskOffset-type":2,"account/activate-option":4,"account/set-auto-loan":4,"account/set-account-level":4,"account/mmp-reset":4,"account/mmp-config":100,"account/fixed-loan/borrowing-order":5,"account/fixed-loan/amend-borrowing-order":5,"account/fixed-loan/manual-reborrow":5,"account/fixed-loan/repay-borrowing-order":5,"account/bills-history-archive":72e3,"users/subaccount/modify-apikey":10,"asset/subaccount/transfer":10,"users/subaccount/set-transfer-out":10,"account/subaccount/set-loan-allocation":4,"tradingBot/grid/order-algo":1,"tradingBot/grid/amend-order-algo":1,"tradingBot/grid/stop-order-algo":1,"tradingBot/grid/close-position":1,"tradingBot/grid/cancel-close-order":1,"tradingBot/grid/order-instant-trigger":1,"tradingBot/grid/withdraw-income":1,"tradingBot/grid/compute-margin-balance":1,"tradingBot/grid/margin-balance":1,"tradingBot/grid/min-investment":1,"tradingBot/grid/adjust-investment":1,"tradingBot/signal/create-signal":1,"tradingBot/signal/order-algo":1,"tradingBot/signal/stop-order-algo":1,"tradingBot/signal/margin-balance":1,"tradingBot/signal/amendTPSL":1,"tradingBot/signal/set-instruments":1,"tradingBot/signal/close-position":1,"tradingBot/signal/sub-order":1,"tradingBot/signal/cancel-sub-order":1,"tradingBot/recurring/order-algo":1,"tradingBot/recurring/amend-order-algo":1,"tradingBot/recurring/stop-order-algo":1,"finance/savings/purchase-redempt":5/3,"finance/savings/set-lending-rate":5/3,"finance/staking-defi/purchase":3,"finance/staking-defi/redeem":3,"finance/staking-defi/cancel":3,"finance/staking-defi/eth/purchase":5,"finance/staking-defi/eth/redeem":5,"finance/staking-defi/sol/purchase":5,"finance/staking-defi/sol/redeem":5,"copytrading/algo-order":1,"copytrading/close-subposition":1,"copytrading/set-instruments":4,"copytrading/first-copy-settings":4,"copytrading/amend-copy-settings":4,"copytrading/stop-copy-trading":4,"copytrading/batch-set-leverage":4,"broker/nd/create-subaccount":.25,"broker/nd/delete-subaccount":1,"broker/nd/subaccount/apikey":.25,"broker/nd/subaccount/modify-apikey":1,"broker/nd/subaccount/delete-apikey":1,"broker/nd/set-subaccount-level":4,"broker/nd/set-subaccount-fee-rate":4,"broker/nd/set-subaccount-assets":.25,"asset/broker/nd/subaccount-deposit-address":1,"asset/broker/nd/modify-subaccount-deposit-address":5/3,"broker/nd/rebate-per-orders":36e3,"finance/sfp/dcd/quote":10,"finance/sfp/dcd/order":10,"broker/nd/report-subaccount-ip":.25,"broker/fd/rebate-per-orders":36e3}}},fees:{trading:{taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010")},spot:{taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010")},future:{taker:this.parseNumber("0.0005"),maker:this.parseNumber("0.0002")},swap:{taker:this.parseNumber("0.00050"),maker:this.parseNumber("0.00020")}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:s.ExchangeError,2:s.ExchangeError,4088:s.ManualInteractionNeeded,5e4:s.BadRequest,50001:s.OnMaintenance,50002:s.BadRequest,50004:s.RequestTimeout,50005:s.ExchangeNotAvailable,50006:s.BadRequest,50007:s.AccountSuspended,50008:s.AuthenticationError,50009:s.AccountSuspended,50010:s.ExchangeError,50011:s.RateLimitExceeded,50012:s.ExchangeError,50013:s.ExchangeNotAvailable,50014:s.BadRequest,50015:s.ExchangeError,50016:s.ExchangeError,50017:s.ExchangeError,50018:s.ExchangeError,50019:s.ExchangeError,50020:s.ExchangeError,50021:s.ExchangeError,50022:s.ExchangeError,50023:s.ExchangeError,50024:s.BadRequest,50025:s.ExchangeError,50026:s.ExchangeNotAvailable,50027:s.PermissionDenied,50028:s.ExchangeError,50044:s.BadRequest,50061:s.ExchangeError,50062:s.ExchangeError,50100:s.ExchangeError,50101:s.AuthenticationError,50102:s.InvalidNonce,50103:s.AuthenticationError,50104:s.AuthenticationError,50105:s.AuthenticationError,50106:s.AuthenticationError,50107:s.AuthenticationError,50108:s.ExchangeError,50109:s.ExchangeError,50110:s.PermissionDenied,50111:s.AuthenticationError,50112:s.AuthenticationError,50113:s.AuthenticationError,50114:s.AuthenticationError,50115:s.BadRequest,51e3:s.BadRequest,51001:s.BadSymbol,51002:s.BadSymbol,51003:s.BadRequest,51004:s.InvalidOrder,51005:s.InvalidOrder,51006:s.InvalidOrder,51007:s.InvalidOrder,51008:s.InsufficientFunds,51009:s.AccountSuspended,51010:s.AccountNotEnabled,51011:s.InvalidOrder,51012:s.BadSymbol,51014:s.BadSymbol,51015:s.BadSymbol,51016:s.InvalidOrder,51017:s.ExchangeError,51018:s.ExchangeError,51019:s.ExchangeError,51020:s.InvalidOrder,51021:s.ContractUnavailable,51022:s.ContractUnavailable,51023:s.ExchangeError,51024:s.AccountSuspended,51025:s.ExchangeError,51026:s.BadSymbol,51027:s.ContractUnavailable,51028:s.ContractUnavailable,51029:s.ContractUnavailable,51030:s.ContractUnavailable,51031:s.InvalidOrder,51046:s.InvalidOrder,51047:s.InvalidOrder,51072:s.InvalidOrder,51073:s.InvalidOrder,51074:s.InvalidOrder,51090:s.InvalidOrder,51091:s.InvalidOrder,51092:s.InvalidOrder,51093:s.InvalidOrder,51094:s.InvalidOrder,51095:s.InvalidOrder,51096:s.InvalidOrder,51098:s.InvalidOrder,51099:s.InvalidOrder,51100:s.InvalidOrder,51101:s.InvalidOrder,51102:s.InvalidOrder,51103:s.InvalidOrder,51104:s.InvalidOrder,51105:s.InvalidOrder,51106:s.InvalidOrder,51107:s.InvalidOrder,51108:s.InvalidOrder,51109:s.InvalidOrder,51110:s.InvalidOrder,51111:s.BadRequest,51112:s.InvalidOrder,51113:s.RateLimitExceeded,51115:s.InvalidOrder,51116:s.InvalidOrder,51117:s.InvalidOrder,51118:s.InvalidOrder,51119:s.InsufficientFunds,51120:s.InvalidOrder,51121:s.InvalidOrder,51122:s.InvalidOrder,51124:s.InvalidOrder,51125:s.InvalidOrder,51126:s.InvalidOrder,51127:s.InsufficientFunds,51128:s.InvalidOrder,51129:s.InvalidOrder,51130:s.BadSymbol,51131:s.InsufficientFunds,51132:s.InvalidOrder,51133:s.InvalidOrder,51134:s.InvalidOrder,51135:s.InvalidOrder,51136:s.InvalidOrder,51137:s.InvalidOrder,51138:s.InvalidOrder,51139:s.InvalidOrder,51156:s.BadRequest,51159:s.BadRequest,51162:s.InvalidOrder,51163:s.InvalidOrder,51166:s.InvalidOrder,51174:s.InvalidOrder,51185:s.InvalidOrder,51201:s.InvalidOrder,51202:s.InvalidOrder,51203:s.InvalidOrder,51204:s.InvalidOrder,51205:s.InvalidOrder,51250:s.InvalidOrder,51251:s.InvalidOrder,51252:s.InvalidOrder,51253:s.InvalidOrder,51254:s.InvalidOrder,51255:s.InvalidOrder,51256:s.InvalidOrder,51257:s.InvalidOrder,51258:s.InvalidOrder,51259:s.InvalidOrder,51260:s.InvalidOrder,51261:s.InvalidOrder,51262:s.InvalidOrder,51263:s.InvalidOrder,51264:s.InvalidOrder,51265:s.InvalidOrder,51267:s.InvalidOrder,51268:s.InvalidOrder,51269:s.InvalidOrder,51270:s.InvalidOrder,51271:s.InvalidOrder,51272:s.InvalidOrder,51273:s.InvalidOrder,51274:s.InvalidOrder,51275:s.InvalidOrder,51276:s.InvalidOrder,51277:s.InvalidOrder,51278:s.InvalidOrder,51279:s.InvalidOrder,51280:s.InvalidOrder,51321:s.InvalidOrder,51322:s.InvalidOrder,51323:s.BadRequest,51324:s.BadRequest,51325:s.InvalidOrder,51327:s.InvalidOrder,51328:s.InvalidOrder,51329:s.InvalidOrder,51330:s.InvalidOrder,51400:s.OrderNotFound,51401:s.OrderNotFound,51402:s.OrderNotFound,51403:s.InvalidOrder,51404:s.InvalidOrder,51405:s.ExchangeError,51406:s.ExchangeError,51407:s.BadRequest,51408:s.ExchangeError,51409:s.ExchangeError,51410:s.CancelPending,51500:s.ExchangeError,51501:s.ExchangeError,51502:s.InsufficientFunds,51503:s.ExchangeError,51506:s.ExchangeError,51508:s.ExchangeError,51509:s.ExchangeError,51510:s.ExchangeError,51511:s.ExchangeError,51600:s.ExchangeError,51601:s.ExchangeError,51602:s.ExchangeError,51603:s.OrderNotFound,51732:s.AuthenticationError,51733:s.AuthenticationError,51734:s.AuthenticationError,51735:s.ExchangeError,51736:s.InsufficientFunds,52e3:s.ExchangeError,54e3:s.ExchangeError,54001:s.ExchangeError,54008:s.InvalidOrder,54009:s.InvalidOrder,54011:s.InvalidOrder,55100:s.InvalidOrder,55101:s.InvalidOrder,55102:s.InvalidOrder,55103:s.InvalidOrder,55104:s.InvalidOrder,55111:s.InvalidOrder,55112:s.InvalidOrder,55113:s.InvalidOrder,58e3:s.ExchangeError,58001:s.AuthenticationError,58002:s.PermissionDenied,58003:s.ExchangeError,58004:s.AccountSuspended,58005:s.ExchangeError,58006:s.ExchangeError,58007:s.ExchangeError,58100:s.ExchangeError,58101:s.AccountSuspended,58102:s.RateLimitExceeded,58103:s.ExchangeError,58104:s.ExchangeError,58105:s.ExchangeError,58106:s.ExchangeError,58107:s.ExchangeError,58108:s.ExchangeError,58109:s.ExchangeError,58110:s.ExchangeError,58111:s.ExchangeError,58112:s.ExchangeError,58114:s.ExchangeError,58115:s.ExchangeError,58116:s.ExchangeError,58117:s.ExchangeError,58125:s.BadRequest,58126:s.BadRequest,58127:s.BadRequest,58128:s.BadRequest,58200:s.ExchangeError,58201:s.ExchangeError,58202:s.ExchangeError,58203:s.InvalidAddress,58204:s.AccountSuspended,58205:s.ExchangeError,58206:s.ExchangeError,58207:s.InvalidAddress,58208:s.ExchangeError,58209:s.ExchangeError,58210:s.ExchangeError,58211:s.ExchangeError,58212:s.ExchangeError,58213:s.AuthenticationError,58221:s.BadRequest,58222:s.BadRequest,58224:s.BadRequest,58227:s.BadRequest,58228:s.BadRequest,58229:s.InsufficientFunds,58300:s.ExchangeError,58350:s.InsufficientFunds,59e3:s.ExchangeError,59001:s.ExchangeError,59100:s.ExchangeError,59101:s.ExchangeError,59102:s.ExchangeError,59103:s.InsufficientFunds,59104:s.ExchangeError,59105:s.ExchangeError,59106:s.ExchangeError,59107:s.ExchangeError,59108:s.InsufficientFunds,59109:s.ExchangeError,59128:s.InvalidOrder,59200:s.InsufficientFunds,59201:s.InsufficientFunds,59216:s.BadRequest,59260:s.PermissionDenied,59262:s.PermissionDenied,59300:s.ExchangeError,59301:s.ExchangeError,59313:s.ExchangeError,59401:s.ExchangeError,59410:s.OperationRejected,59411:s.InsufficientFunds,59412:s.OperationRejected,59413:s.OperationRejected,59414:s.BadRequest,59500:s.ExchangeError,59501:s.ExchangeError,59502:s.ExchangeError,59503:s.ExchangeError,59504:s.ExchangeError,59505:s.ExchangeError,59506:s.ExchangeError,59507:s.ExchangeError,59508:s.AccountSuspended,59642:s.BadRequest,59643:s.ExchangeError,60001:s.AuthenticationError,60002:s.AuthenticationError,60003:s.AuthenticationError,60004:s.AuthenticationError,60005:s.AuthenticationError,60006:s.InvalidNonce,60007:s.AuthenticationError,60008:s.AuthenticationError,60009:s.AuthenticationError,60010:s.AuthenticationError,60011:s.AuthenticationError,60012:s.BadRequest,60013:s.BadRequest,60014:s.RateLimitExceeded,60015:s.NetworkError,60016:s.ExchangeNotAvailable,60017:s.BadRequest,60018:s.BadRequest,60019:s.BadRequest,60020:s.ExchangeError,60021:s.AccountNotEnabled,60022:s.AuthenticationError,60023:s.DDoSProtection,60024:s.AuthenticationError,60025:s.ExchangeError,60026:s.AuthenticationError,60027:s.ArgumentsRequired,60028:s.NotSupported,60029:s.AccountNotEnabled,60030:s.AccountNotEnabled,60031:s.AuthenticationError,60032:s.AuthenticationError,63999:s.ExchangeError,64e3:s.BadRequest,64001:s.BadRequest,64002:s.BadRequest,64003:s.AccountNotEnabled,70010:s.BadRequest,70013:s.BadRequest,70016:s.BadRequest,1009:s.BadRequest,4001:s.AuthenticationError,4002:s.BadRequest,4003:s.RateLimitExceeded,4004:s.NetworkError,4005:s.ExchangeNotAvailable,4006:s.BadRequest,4007:s.AuthenticationError,4008:s.RateLimitExceeded},broad:{"Internal Server Error":s.ExchangeNotAvailable,"server error":s.ExchangeNotAvailable}},httpExceptions:{429:s.ExchangeNotAvailable},precisionMode:n.kb,options:{sandboxMode:!1,defaultNetwork:"ERC20",defaultNetworks:{ETH:"ERC20",BTC:"BTC",USDT:"TRC20"},networks:{BTC:"Bitcoin",BTCLN:"Lightning",BEP20:"BSC",ERC20:"ERC20",TRC20:"TRC20",CRC20:"Crypto",ACA:"Acala",ALGO:"Algorand",BHP:"BHP",APT:"Aptos",ARBONE:"Arbitrum One",AVAXC:"Avalanche C-Chain",AVAXX:"Avalanche X-Chain",ARK:"ARK",AR:"Arweave",ASTR:"Astar",BCH:"BitcoinCash",BSV:"Bitcoin SV",BTM:"Bytom",ADA:"Cardano",CSPR:"Casper",CELO:"CELO",XCH:"Chia",CHZ:"Chiliz",ATOM:"Cosmos",TRUE:"TrueChain",DCR:"Decred",DGB:"Digibyte",DOGE:"Dogecoin",XEC:"XEC",EGLD:"Elrond",EOS:"EOS",ETC:"Ethereum Classic",ETHW:"EthereumPow",FTM:"Fantom",FIL:"Filecoin",FLOW:"FLOW",FSN:"Fusion",ONE:"Harmony",HBAR:"Hedera",HNT:"Helium",ZEN:"Horizen",ICX:"ICON",ICP:"Dfinity",IOST:"IOST",IOTA:"MIOTA",KDA:"Kadena",KAR:"KAR",KLAY:"Klaytn",KSM:"Kusama",LSK:"Lisk",LTC:"Litecoin",METIS:"Metis",MINA:"Mina",XMR:"Monero",GLRM:"Moonbeam",MOVR:"Moonriver",NANO:"Nano",NEAR:"NEAR",NAS:"Nebulas",NEM:"New Economy Movement",NULS:"NULS",OASYS:"OASYS",OKC:"OKC",ONT:"Ontology",OPTIMISM:"Optimism",LAT:"PlatON",DOT:"Polkadot",MATIC:"Polygon",RVN:"Ravencoin",XRP:"Ripple",SC:"Siacoin",SOL:"Solana",STX:"l-Stacks",XLM:"Stellar Lumens",XTZ:"Tezos",TON:"TON",THETA:"Theta",VSYS:"VSYSTEMS",WAVES:"WAVES",WAX:"Wax",ZEC:"Zcash",ZIL:"Zilliqa",ZKSYNC:"ZKSYNC",OMNI:"Omni"},fetchOpenInterestHistory:{timeframes:{"5m":"5m","1h":"1H","8h":"8H","1d":"1D","5M":"5m","1H":"1H","8H":"8H","1D":"1D"}},fetchOHLCV:{timezone:"UTC"},fetchPositions:{method:"privateGetAccountPositions"},createOrder:"privatePostTradeBatchOrders",createMarketBuyOrderRequiresPrice:!1,fetchMarkets:["spot","future","swap","option"],timeDifference:0,adjustForTimeDifference:!1,defaultType:"spot",fetchLedger:{method:"privateGetAccountBills"},fetchOrder:{method:"privateGetTradeOrder"},fetchOpenOrders:{method:"privateGetTradeOrdersPending"},cancelOrders:{method:"privatePostTradeCancelBatchOrders"},fetchCanceledOrders:{method:"privateGetTradeOrdersHistory"},fetchClosedOrders:{method:"privateGetTradeOrdersHistory"},withdraw:{password:void 0,pwd:void 0},algoOrderTypes:{conditional:!0,trigger:!0,oco:!0,move_order_stop:!0,iceberg:!0,twap:!0},accountsByType:{funding:"6",trading:"18",spot:"18",future:"18",futures:"18",margin:"18",swap:"18",option:"18"},accountsById:{6:"funding",18:"trading"},exchangeType:{spot:"SPOT",margin:"MARGIN",swap:"SWAP",future:"FUTURES",futures:"FUTURES",option:"OPTION",SPOT:"SPOT",MARGIN:"MARGIN",SWAP:"SWAP",FUTURES:"FUTURES",OPTION:"OPTION"},brokerId:"e847386590ce4dBC"},features:{default:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!0},triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:{triggerPriceType:{last:!0,mark:!0,index:!0},price:!0},timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!0,trailing:!0,iceberg:!0,leverage:!1,selfTradePrevention:!0,marketBuyByCost:!0,marketBuyRequiresPrice:!1},createOrders:{max:20},fetchMyTrades:{marginMode:!1,daysBack:90,limit:100,untilDays:1e4},fetchOrder:{marginMode:!1,trigger:!0,trailing:!0},fetchOpenOrders:{marginMode:!1,limit:100,trigger:!0,trailing:!0},fetchOrders:void 0,fetchClosedOrders:{marginMode:!1,limit:100,daysBack:90,daysBackCanceled:1/12,untilDays:void 0,trigger:!0,trailing:!0},fetchOHLCV:{limit:300}},spot:{extends:"default"},swap:{linear:{extends:"default"},inverse:{extends:"default"}},future:{linear:{extends:"default"},inverse:{extends:"default"}}},commonCurrencies:{AE:"AET",WIN:"WINTOKEN"}})}handleMarketTypeAndParams(e,t,i={},r){let s=this.safeString(i,"instType");return i=this.omit(i,"instType"),void 0===this.safeString(i,"type")&&void 0!==s&&(i.type=s),super.handleMarketTypeAndParams(e,t,i,r)}convertToInstrumentType(e){let t=this.safeDict(this.options,"exchangeType",{});return this.safeString(t,e,e)}createExpiredOptionMarket(e){let t;let i=e.split("-"),r=e.split("/"),s=t=e.indexOf("/")>-1?this.safeString(r,0):this.safeString(i,0),a=this.safeString(i,2),n=this.safeString(i,3),o=this.safeString(i,4),d=this.convertExpireDate(a),h=this.parse8601(d);return{id:t+"-USD-"+a+"-"+n+"-"+o,symbol:t+"/USD:"+s+"-"+a+"-"+n+"-"+o,base:t,quote:"USD",settle:s,baseId:t,quoteId:"USD",settleId:s,active:!1,type:"option",linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!0,margin:!1,contract:!0,contractSize:this.parseNumber("1"),expiry:h,expiryDatetime:d,optionType:"C"===o?"call":"put",strike:this.parseNumber(n),precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0}}safeMarket(e,t,i,r){return void 0!==e&&(e.indexOf("-C")>-1||e.indexOf("-P")>-1)&&!(e in this.markets_by_id)?this.createExpiredOptionMarket(e):super.safeMarket(e,t,i,r)}async fetchStatus(e={}){let t=await this.publicGetSystemStatus(e),i=this.safeList(t,"data",[]),r={updated:void 0,status:0===i.length?"ok":"maintenance",eta:void 0,url:void 0,info:t};for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"state");r.eta=this.safeInteger(t,"end"),r.url=this.safeString(t,"href"),"ongoing"===s?r.status="maintenance":"scheduled"===s?r.status="ok":"completed"===s?r.status="ok":"canceled"===s&&(r.status="ok")}return r}async fetchTime(e={}){let t=await this.publicGetPublicTime(e),i=this.safeList(t,"data",[]),r=this.safeDict(i,0,{});return this.safeInteger(r,"ts")}async fetchAccounts(e={}){let t=await this.privateGetAccountConfig(e),i=this.safeList(t,"data",[]),r=[];for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"uid"),a=this.safeString(t,"acctLv");r.push({id:s,type:a,currency:void 0,info:t,code:void 0})}return r}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchMarkets(e={}){this.options.adjustForTimeDifference&&await this.loadTimeDifference();let t=this.safeList(this.options,"fetchMarkets",[]),i=[],r=[];for(let r=0;r<t.length;r++)i.push(this.fetchMarketsByType(t[r],e));i=await Promise.all(i);for(let e=0;e<i.length;e++)r=this.arrayConcat(r,i[e]);return r}parseMarket(e){let t,i,r;let s=this.safeString(e,"instId"),n=this.safeStringLower(e,"instType");"futures"===n&&(n="future");let o="spot"===n,d="future"===n,h="swap"===n,c="option"===n,l=h||d||c,f=this.safeString(e,"baseCcy"),u=this.safeString(e,"quoteCcy"),g=this.safeString(e,"settleCcy"),p=this.safeCurrencyCode(g),m=this.safeString(e,"uly");if(void 0!==m&&!o){let e=m.split("-");f=this.safeString(e,0),u=this.safeString(e,1)}let y=this.safeCurrencyCode(f),v=this.safeCurrencyCode(u),b=y+"/"+v;l&&(b=b+":"+p,t=this.safeInteger(e,"expTime"),d?b=b+"-"+this.yymmdd(t):c&&(i=this.safeString(e,"stk"),r=this.safeString(e,"optType"),b=b+"-"+this.yymmdd(t)+"-"+i+"-"+r,r="P"===r?"put":"call"));let O=this.safeString(e,"tickSz"),k=this.safeDict2(this.fees,n,"trading",{}),S=this.safeString(e,"lever","1");S=a.Y.stringMax(S,"1");let w=this.safeNumber(e,"maxMktSz");return this.extend(k,{id:s,symbol:b,base:y,quote:v,settle:p,baseId:f,quoteId:u,settleId:g,type:n,spot:o,margin:o&&a.Y.stringGt(S,"1"),swap:h,future:d,option:c,active:!0,contract:l,linear:l?u===g:void 0,inverse:l?f===g:void 0,contractSize:l?this.safeNumber(e,"ctVal"):void 0,expiry:t,expiryDatetime:this.iso8601(t),strike:this.parseNumber(i),optionType:r,created:this.safeInteger(e,"listTime"),precision:{amount:this.safeNumber(e,"lotSz"),price:this.parseNumber(O)},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(S)},amount:{min:this.safeNumber(e,"minSz"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:l?void 0:w}},info:e})}async fetchMarketsByType(e,t={}){let i={instType:this.convertToInstrumentType(e)};if("option"===e){let e=this.safeList(this.options,"defaultUnderlying",["BTC-USD","ETH-USD"]),r=[];for(let s=0;s<e.length;s++){let a=e[s];i.uly=a,r.push(this.publicGetPublicInstruments(this.extend(i,t)))}let s=await Promise.all(r),a=[];for(let e=0;e<s.length;e++){let t=this.safeDict(s,e,{}),i=this.safeList(t,"data",[]);a=this.arrayConcat(a,i)}return this.parseMarkets(a)}let r=await this.publicGetPublicInstruments(this.extend(i,t)),s=this.safeList(r,"data",[]);return this.parseMarkets(s)}async fetchCurrencies(e={}){let t=this.safeBool(this.options,"sandboxMode",!1);if(!this.checkRequiredCredentials(!1)||t)return;let i=await this.privateGetAssetCurrencies(e),r=this.safeList(i,"data",[]),s={},n=this.groupBy(r,"ccy"),o=Object.keys(n);for(let e=0;e<o.length;e++){let t;let i=o[e],r=this.safeCurrency(i),d=r.code,h=n[i],c={},l=!1,f=!1,u=!1;for(let e=0;e<h.length;e++){let i=h[e],s=this.safeBool(i,"canDep");f=s||f;let n=this.safeBool(i,"canWd");u=n||u;let o=this.safeBool(i,"canInternal"),d=!!s&&!!n&&!!o;l=d||l;let g=this.safeString(i,"chain");if(void 0!==g&&g.indexOf("-")>=0){let e=g.split("-").slice(1).join("-"),o=this.networkIdToCode(e,r.code),h=this.parsePrecision(this.safeString(i,"wdTickSz"));t=void 0===t?h:a.Y.stringMin(t,h),c[o]={id:g,network:o,active:d,deposit:s,withdraw:n,fee:this.safeNumber(i,"fee"),precision:this.parseNumber(h),limits:{withdraw:{min:this.safeNumber(i,"minWd"),max:this.safeNumber(i,"maxWd")}},info:i}}}let g=this.safeDict(h,0,{});s[d]={info:h,code:d,id:i,name:this.safeString(g,"name"),active:l,deposit:f,withdraw:u,fee:void 0,precision:this.parseNumber(t),limits:{amount:{min:void 0,max:void 0}},networks:c}}return s}async fetchOrderBook(e,t,i={}){let r,s;await this.loadMarkets();let a={instId:this.market(e).id};[r,i]=this.handleOptionAndParams(i,"fetchOrderBook","method","publicGetMarketBooks"),"publicGetMarketBooksFull"===r&&void 0===t&&(t=5e3),void 0!==(t=void 0===t?100:t)&&(a.sz=t),s="publicGetMarketBooksFull"===r||t>400?await this.publicGetMarketBooksFull(this.extend(a,i)):await this.publicGetMarketBooks(this.extend(a,i));let n=this.safeList(s,"data",[]),o=this.safeDict(n,0,{}),d=this.safeInteger(o,"ts");return this.parseOrderBook(o,e,d)}parseTicker(e,t){let i=this.safeInteger(e,"ts"),r=this.safeString(e,"instId"),s=(t=this.safeMarket(r,t,"-")).symbol,a=this.safeString(e,"last"),n=this.safeString(e,"open24h"),o=this.safeBool(t,"spot",!1)?this.safeString(e,"volCcy24h"):void 0,d=this.safeString(e,"vol24h"),h=this.safeString(e,"high24h"),c=this.safeString(e,"low24h");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:h,low:c,bid:this.safeString(e,"bidPx"),bidVolume:this.safeString(e,"bidSz"),ask:this.safeString(e,"askPx"),askVolume:this.safeString(e,"askSz"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:o,markPrice:this.safeString(e,"markPx"),indexPrice:this.safeString(e,"idxPx"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),r={instId:i.id},s=await this.publicGetMarketTicker(this.extend(r,t)),a=this.safeList(s,"data",[]),n=this.safeDict(a,0,{});return this.parseTicker(n,i)}async fetchTickers(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e);let r=this.getMarketFromSymbols(e);[i,t]=this.handleMarketTypeAndParams("fetchTickers",r,t);let a={instType:this.convertToInstrumentType(i)};if("option"===i){let e=this.safeString(this.options,"defaultUnderlying","BTC-USD"),i=this.safeString2(t,"uly","marketId",e);if(void 0===i)throw new s.ArgumentsRequired(this.id+" fetchTickers() requires an underlying uly or marketId parameter for options markets");a.uly=i}let n=await this.publicGetMarketTickers(this.extend(a,t)),o=this.safeList(n,"data",[]);return this.parseTickers(o,e)}async fetchMarkPrice(e,t={}){await this.loadMarkets();let i=this.market(e),r={instId:i.id},s=await this.publicGetPublicMarkPrice(this.extend(r,t)),a=this.safeList(s,"data");return this.parseTicker(this.safeDict(a,0),i)}async fetchMarkPrices(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e);let r=this.getMarketFromSymbols(e);[i,t]=this.handleMarketTypeAndParams("fetchTickers",r,t,"swap");let a={instType:this.convertToInstrumentType(i)};if("option"===i){let e=this.safeString(this.options,"defaultUnderlying","BTC-USD"),i=this.safeString2(t,"uly","marketId",e);if(void 0===i)throw new s.ArgumentsRequired(this.id+" fetchMarkPrices() requires an underlying uly or marketId parameter for options markets");a.uly=i}let n=await this.publicGetPublicMarkPrice(this.extend(a,t)),o=this.safeList(n,"data",[]);return this.parseTickers(o,e)}parseTrade(e,t){let i;let r=this.safeString(e,"tradeId"),s=this.safeString(e,"instId"),n=(t=this.safeMarket(s,t,"-")).symbol,o=this.safeInteger(e,"ts"),d=this.safeString2(e,"fillPx","px"),h=this.safeString2(e,"fillSz","sz"),c=this.safeString(e,"side"),l=this.safeString(e,"ordId"),f=this.safeString(e,"fee");if(void 0!==f){let t=a.Y.stringNeg(f),r=this.safeString(e,"feeCcy");i={cost:t,currency:this.safeCurrencyCode(r)}}let u=this.safeString(e,"execType");return"T"===u?u="taker":"M"===u&&(u="maker"),this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:n,id:r,order:l,type:void 0,takerOrMaker:u,side:c,price:d,amount:h,cost:void 0,fee:i},t)}async fetchTrades(e,t,i,r={}){let s;await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchTrades","paginate"),a)return await this.fetchPaginatedCallCursor("fetchTrades",e,t,i,r,"tradeId","after",void 0,100);let n=this.market(e),o={instId:n.id};if(n.option)s=await this.publicGetPublicOptionTrades(this.extend(o,r));else{let e;void 0!==i&&(o.limit=i),[e,r]=this.handleOptionAndParams(r,"fetchTrades","method","publicGetMarketTrades"),"publicGetMarketTrades"===e?s=await this.publicGetMarketTrades(this.extend(o,r)):"publicGetMarketHistoryTrades"===e&&(s=await this.publicGetMarketHistoryTrades(this.extend(o,r)))}let d=this.safeList(s,"data",[]);return this.parseTrades(d,n,t,i)}parseOHLCV(e,t){let i=this.handleMarketTypeAndParams("fetchOHLCV",t,void 0)[0];return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,"spot"===i?5:6)]}async fetchOHLCV(e,t="1m",i,r,s={}){let a;await this.loadMarkets();let n=this.market(e),o=!1;if([o,s]=this.handleOptionAndParams(s,"fetchOHLCV","paginate"),o)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,r,t,s,200);let d=this.safeString(s,"price");s=this.omit(s,"price");let h=this.safeDict(this.options,"fetchOHLCV",{}),c=this.safeString(h,"timezone","UTC");void 0===r&&(r=100);let l=this.parseTimeframe(t),f=this.safeString(this.timeframes,t,t);"UTC"===c&&l>=21600&&(f+=c.toLowerCase());let u={instId:n.id,bar:f,limit:r},g="Candles";if(void 0!==i){let e=this.milliseconds(),t=1e3*l;i<e-1439*t&&(g="HistoryCandles");let s=Math.max(i-1,0);u.before=s,u.after=this.sum(i,t*r)}let p=this.safeInteger(s,"until");void 0!==p&&(u.after=p,s=this.omit(s,"until")),g=this.safeString(h,"type",g);let m=this.safeString(s,"type",g);s=this.omit(s,"type");let y="HistoryCandles"===m;"mark"===d?a=y?await this.publicGetMarketHistoryMarkPriceCandles(this.extend(u,s)):await this.publicGetMarketMarkPriceCandles(this.extend(u,s)):"index"===d?(u.instId=n.info.instFamily,a=y?await this.publicGetMarketHistoryIndexCandles(this.extend(u,s)):await this.publicGetMarketIndexCandles(this.extend(u,s))):a=y?await this.publicGetMarketHistoryCandles(this.extend(u,s)):await this.publicGetMarketCandles(this.extend(u,s));let v=this.safeList(a,"data",[]);return this.parseOHLCVs(v,n,t,i,r)}async fetchFundingRateHistory(e,t,i,r={}){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchFundingRateHistory","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchFundingRateHistory",e,t,i,"8h",r,100);let n=this.market(e),o={instId:n.id};void 0!==t&&(o.before=Math.max(t-1,0)),void 0!==i&&(o.limit=i);let d=await this.publicGetPublicFundingRateHistory(this.extend(o,r)),h=[],c=this.safeList(d,"data",[]);for(let e=0;e<c.length;e++){let t=c[e],i=this.safeInteger(t,"fundingTime");h.push({info:t,symbol:this.safeSymbol(this.safeString(t,"instId")),fundingRate:this.safeNumber(t,"realizedRate"),timestamp:i,datetime:this.iso8601(i)})}let l=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(l,n.symbol,t,i)}parseBalanceByType(e,t){return"funding"===e?this.parseFundingBalance(t):this.parseTradingBalance(t)}parseTradingBalance(e){let t={info:e},i=this.safeList(e,"data",[]),r=this.safeDict(i,0,{}),s=this.safeInteger(r,"uTime"),a=this.safeList(r,"details",[]);for(let e=0;e<a.length;e++){let i=a[e],r=this.safeString(i,"ccy"),s=this.safeCurrencyCode(r),n=this.account(),o=this.safeString(i,"eq"),d=this.safeString(i,"availEq");void 0===o||void 0===d?(n.free=this.safeString(i,"availBal"),n.used=this.safeString(i,"frozenBal")):(n.total=o,n.free=d),t[s]=n}return t.timestamp=s,t.datetime=this.iso8601(s),this.safeBalance(t)}parseFundingBalance(e){let t={info:e},i=this.safeList(e,"data",[]);for(let e=0;e<i.length;e++){let r=i[e],s=this.safeString(r,"ccy"),a=this.safeCurrencyCode(s),n=this.account();n.total=this.safeString(r,"bal"),n.free=this.safeString(r,"availBal"),n.used=this.safeString(r,"frozenBal"),t[a]=n}return this.safeBalance(t)}parseTradingFee(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.parseNumber(a.Y.stringNeg(this.safeString2(e,"maker","makerU"))),taker:this.parseNumber(a.Y.stringNeg(this.safeString2(e,"taker","takerU"))),percentage:void 0,tierBased:void 0}}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),r={instType:this.convertToInstrumentType(i.type)};if(i.spot)r.instId=i.id;else if(i.swap||i.future||i.option)r.uly=i.baseId+"-"+i.quoteId;else throw new s.NotSupported(this.id+" fetchTradingFee() supports spot, swap, future or option markets only");let a=await this.privateGetAccountTradeFee(this.extend(r,t)),n=this.safeList(a,"data",[]),o=this.safeDict(n,0,{});return this.parseTradingFee(o,i)}async fetchBalance(e={}){let t;await this.loadMarkets();let[i,r]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),s={};return t="funding"===i?await this.privateGetAssetBalances(this.extend(s,r)):await this.privateGetAccountBalance(this.extend(s,r)),this.parseBalanceByType(i,t)}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new s.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot markets only");return await this.createOrder(e,"market","buy",t,void 0,this.extend({createMarketBuyOrderRequiresPrice:!1,tgtCcy:"quote_ccy"},i))}async createMarketSellOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new s.NotSupported(this.id+" createMarketSellOrderWithCost() supports spot markets only");return await this.createOrder(e,"market","sell",t,void 0,this.extend({createMarketBuyOrderRequiresPrice:!1,tgtCcy:"quote_ccy"},i))}createOrderRequest(e,t,i,r,n,o={}){let d=this.market(e),h={instId:d.id,side:i,ordType:t,sz:this.amountToPrecision(e,r)},c=d.spot,l=d.contract,f=this.safeValueN(o,["triggerPrice","stopPrice","triggerPx"]),u=this.safeString(o,"timeInForce","GTC"),g=this.safeValue2(o,"takeProfitPrice","tpTriggerPx"),p=this.safeValue(o,"tpOrdPx",n),m=this.safeString(o,"tpTriggerPxType","last"),y=this.safeValue2(o,"stopLossPrice","slTriggerPx"),v=this.safeValue(o,"slOrdPx",n),b=this.safeString(o,"slTriggerPxType","last"),O=this.safeString2(o,"clOrdId","clientOrderId"),k=this.safeValue(o,"stopLoss"),S=void 0!==k,w=this.safeValue(o,"takeProfit"),T=void 0!==w,I=this.safeString2(o,"trailingPercent","callbackRatio"),x=void 0!==I,P=void 0!==f||"trigger"===t,E=this.safeValue(o,"reduceOnly",!1),M=this.safeString2(this.options,"defaultMarginMode","marginMode","cross"),A=this.safeString2(o,"marginMode","tdMode"),C=!1;if(void 0!==A&&"cash"!==A?C=!0:(A=M,C=this.safeBool(o,"margin",!1)),c){if(C){let e="buy"===i?d.quote:d.base,t=this.safeString(o,"ccy",e);h.ccy=this.safeCurrencyCode(t)}let e=C?A:"cash";h.tdMode=e}else if(l){if(d.swap||d.future){let e;if([e,o]=this.handleOptionAndParams(o,"createOrder","positionSide"),void 0!==e)h.posSide=e;else{let e;if([e,o]=this.handleOptionAndParams(o,"createOrder","hedged"),e){let e="buy"===i;void 0!==g||void 0!==y||E?(h.posSide=e?"short":"long",E&&(o=this.omit(o,"reduceOnly"))):h.posSide=e?"long":"short"}}}h.tdMode=A}let B="market"===t,L=!1;[L,o]=this.handlePostOnly(B,"post_only"===t,o),o=this.omit(o,["currency","ccy","marginMode","timeInForce","stopPrice","triggerPrice","clientOrderId","stopLossPrice","takeProfitPrice","slOrdPx","tpOrdPx","margin","stopLoss","takeProfit","trailingPercent"]);let R="IOC"===u||"ioc"===t,N="FOK"===u||"fok"===t,q=void 0!==y||void 0!==g||"conditional"===t,D=B&&R||"optimal_limit_ioc"===t,G=this.safeString(this.options,"tgtCcy","base_ccy"),H=this.safeString(o,"tgtCcy",G);if(l||C||(h.tgtCcy=H),B||D){if(h.ordType="market",c&&"buy"===i&&"quote_ccy"===H){let t=!0;[t,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let i=this.safeNumber2(o,"cost","sz");if(o=this.omit(o,["cost","sz"]),t){if(void 0!==n){if(void 0===i){let e=this.numberToString(r),t=this.numberToString(n),s=a.Y.stringMul(e,t);i=this.parseNumber(s)}}else if(void 0===i)throw new s.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'cost' unified extra parameter or in exchange-specific 'sz' extra parameter (the exchange-specific behaviour)")}else i=void 0===i?r:i;h.sz=this.costToPrecision(e,i)}D&&l&&(h.ordType="optimal_limit_ioc")}else P||q||(h.px=this.priceToPrecision(e,n));if(L?h.ordType="post_only":R&&!D?h.ordType="ioc":N&&(h.ordType="fok"),x){let e=a.Y.stringDiv(I,"100");h.callbackRatio=e,h.ordType="move_order_stop"}else if(S||T){if(S){let t=this.safeValueN(k,["triggerPrice","stopPrice","slTriggerPx"]);if(void 0===t)throw new s.InvalidOrder(this.id+' createOrder() requires a trigger price in params["stopLoss"]["triggerPrice"], or params["stopLoss"]["stopPrice"], or params["stopLoss"]["slTriggerPx"] for a stop loss order');h.slTriggerPx=this.priceToPrecision(e,t);let i=this.safeValueN(k,["price","stopLossPrice","slOrdPx"]),r=this.safeString(k,"type");if(void 0!==r){let t="limit"===r;if(t||"market"===r){if(t){if(void 0===i)throw new s.InvalidOrder(this.id+' createOrder() requires a limit price in params["stopLoss"]["price"] or params["stopLoss"]["slOrdPx"] for a stop loss limit order');h.slOrdPx=this.priceToPrecision(e,i)}else"market"===r&&(h.slOrdPx="-1")}else throw new s.InvalidOrder(this.id+' createOrder() params["stopLoss"]["type"] must be either "limit" or "market"')}else void 0!==i?h.slOrdPx=this.priceToPrecision(e,i):h.slOrdPx="-1";let a=this.safeString2(k,"triggerPriceType","slTriggerPxType","last");if(void 0!==a){if("last"!==a&&"index"!==a&&"mark"!==a)throw new s.InvalidOrder(this.id+' createOrder() stop loss trigger price type must be one of "last", "index" or "mark"');h.slTriggerPxType=a}}if(T){let t=this.safeValueN(w,["triggerPrice","stopPrice","tpTriggerPx"]);if(void 0===t)throw new s.InvalidOrder(this.id+' createOrder() requires a trigger price in params["takeProfit"]["triggerPrice"], or params["takeProfit"]["stopPrice"], or params["takeProfit"]["tpTriggerPx"] for a take profit order');h.tpTriggerPx=this.priceToPrecision(e,t);let i=this.safeValueN(w,["price","takeProfitPrice","tpOrdPx"]),r=this.safeString2(w,"type","tpOrdKind");if(void 0!==r){let t="limit"===r,a="market"===r;if(t||a){if(t){if(void 0===i)throw new s.InvalidOrder(this.id+' createOrder() requires a limit price in params["takeProfit"]["price"] or params["takeProfit"]["tpOrdPx"] for a take profit limit order');h.tpOrdKind=r,h.tpOrdPx=this.priceToPrecision(e,i)}else"market"===r&&(h.tpOrdPx="-1")}else throw new s.InvalidOrder(this.id+' createOrder() params["takeProfit"]["type"] must be either "limit" or "market"')}else void 0!==i?(h.tpOrdKind="limit",h.tpOrdPx=this.priceToPrecision(e,i)):h.tpOrdPx="-1";let a=this.safeString2(w,"triggerPriceType","tpTriggerPxType","last");if(void 0!==a){if("last"!==a&&"index"!==a&&"mark"!==a)throw new s.InvalidOrder(this.id+' createOrder() take profit trigger price type must be one of "last", "index" or "mark"');h.tpTriggerPxType=a}}}else P?(h.ordType="trigger",h.triggerPx=this.priceToPrecision(e,f),h.orderPx=B?"-1":this.priceToPrecision(e,n)):q&&(h.ordType="conditional",void 0!==g&&void 0!==y&&(h.ordType="oco"),void 0!==g&&(h.tpTriggerPx=this.priceToPrecision(e,g),h.tpOrdPx=void 0===p?"-1":this.priceToPrecision(e,p),h.tpTriggerPxType=m),void 0!==y&&(h.slTriggerPx=this.priceToPrecision(e,y),h.slOrdPx=void 0===v?"-1":this.priceToPrecision(e,v),h.slTriggerPxType=b));if(void 0===O){let e=this.safeString(this.options,"brokerId");void 0!==e&&(h.clOrdId=e+this.uuid16(),h.tag=e)}else h.clOrdId=O,o=this.omit(o,["clOrdId","clientOrderId"]);return this.extend(h,o)}async createOrder(e,t,i,r,a,n={}){let o;await this.loadMarkets();let d=this.market(e),h=this.createOrderRequest(e,t,i,r,a,n),c=this.safeString(this.options,"createOrder","privatePostTradeBatchOrders"),l=this.safeString(h,"ordType");if(("trigger"===l||"conditional"===l||"move_order_stop"===l||"move_order_stop"===t||"oco"===t||"iceberg"===t||"twap"===t)&&(c="privatePostTradeOrderAlgo"),"privatePostTradeOrder"!==c&&"privatePostTradeOrderAlgo"!==c&&"privatePostTradeBatchOrders"!==c)throw new s.ExchangeError(this.id+' createOrder() this.options["createOrder"] must be either privatePostTradeBatchOrders or privatePostTradeOrder or privatePostTradeOrderAlgo');"privatePostTradeBatchOrders"===c&&(h=[h]),o="privatePostTradeOrder"===c?await this.privatePostTradeOrder(h):"privatePostTradeOrderAlgo"===c?await this.privatePostTradeOrderAlgo(h):await this.privatePostTradeBatchOrders(h);let f=this.safeList(o,"data",[]),u=this.safeDict(f,0,{}),g=this.parseOrder(u,d);return g.type=t,g.side=i,g}async createOrders(e,t={}){await this.loadMarkets();let i=[];for(let r=0;r<e.length;r++){let s=e[r],a=this.safeString(s,"symbol"),n=this.safeString(s,"type"),o=this.safeString(s,"side"),d=this.safeValue(s,"amount"),h=this.safeValue(s,"price"),c=this.safeDict(s,"params",{}),l=this.extend(c,t),f=this.createOrderRequest(a,n,o,d,h,l);i.push(f)}let r=await this.privatePostTradeBatchOrders(i),s=this.safeList(r,"data",[]);return this.parseOrders(s)}editOrderRequest(e,t,i,r,a,n,o={}){let d;let h={instId:this.market(t).id};("trigger"===i||"conditional"===i||"move_order_stop"===i||"oco"===i||"iceberg"===i||"twap"===i)&&(d=!0);let c=this.safeString2(o,"clOrdId","clientOrderId");void 0!==c?d?h.algoClOrdId=c:h.clOrdId=c:d?h.algoId=e:h.ordId=e;let l=this.safeValue2(o,"stopLossPrice","newSlTriggerPx"),f=this.safeValue(o,"newSlOrdPx"),u=this.safeString(o,"newSlTriggerPxType","last"),g=this.safeValue2(o,"takeProfitPrice","newTpTriggerPx"),p=this.safeValue(o,"newTpOrdPx"),m=this.safeString(o,"newTpTriggerPxType","last"),y=this.safeValue(o,"stopLoss"),v=this.safeValue(o,"takeProfit"),b=void 0!==y,O=void 0!==v;if(d){if(void 0===l&&void 0===g)throw new s.BadRequest(this.id+" editOrder() requires a stopLossPrice or takeProfitPrice parameter for editing an algo order");if(void 0!==l){if(void 0===f)throw new s.BadRequest(this.id+" editOrder() requires a newSlOrdPx parameter for editing an algo order");h.newSlTriggerPx=this.priceToPrecision(t,l),h.newSlOrdPx="market"===i?"-1":this.priceToPrecision(t,f),h.newSlTriggerPxType=u}if(void 0!==g){if(void 0===p)throw new s.BadRequest(this.id+" editOrder() requires a newTpOrdPx parameter for editing an algo order");h.newTpTriggerPx=this.priceToPrecision(t,g),h.newTpOrdPx="market"===i?"-1":this.priceToPrecision(t,p),h.newTpTriggerPxType=m}}else{if(void 0!==l&&(h.newSlTriggerPx=this.priceToPrecision(t,l),h.newSlOrdPx="market"===i?"-1":this.priceToPrecision(t,f),h.newSlTriggerPxType=u),void 0!==g&&(h.newTpTriggerPx=this.priceToPrecision(t,g),h.newTpOrdPx="market"===i?"-1":this.priceToPrecision(t,p),h.newTpTriggerPxType=m),b){l=this.safeValue(y,"triggerPrice"),f=this.safeValue(y,"price");let e=this.safeString(y,"type");h.newSlTriggerPx=this.priceToPrecision(t,l),h.newSlOrdPx="market"===e?"-1":this.priceToPrecision(t,f),h.newSlTriggerPxType=u}if(O){g=this.safeValue(v,"triggerPrice"),p=this.safeValue(v,"price");let e=this.safeString(v,"type");h.newTpOrdKind="limit"===e?e:"condition",h.newTpTriggerPx=this.priceToPrecision(t,g),h.newTpOrdPx="market"===e?"-1":this.priceToPrecision(t,p),h.newTpTriggerPxType=m}}return void 0!==a&&(h.newSz=this.amountToPrecision(t,a)),d||void 0===n||(h.newPx=this.priceToPrecision(t,n)),o=this.omit(o,["clOrdId","clientOrderId","takeProfitPrice","stopLossPrice","stopLoss","takeProfit","postOnly"]),this.extend(h,o)}async editOrder(e,t,i,r,s,a,n={}){let o,d;await this.loadMarkets();let h=this.market(t),c=this.editOrderRequest(e,t,i,r,s,a,n);("trigger"===i||"conditional"===i||"move_order_stop"===i||"oco"===i||"iceberg"===i||"twap"===i)&&(o=!0),d=o?await this.privatePostTradeAmendAlgos(this.extend(c,n)):await this.privatePostTradeAmendOrder(this.extend(c,n));let l=this.safeList(d,"data",[]),f=this.safeDict(l,0,{}),u=this.parseOrder(f,h);return u.type=i,u.side=r,u}async cancelOrder(e,t,i={}){if(void 0===t)throw new s.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");let r=this.safeValue2(i,"stop","trigger"),a=this.safeBool(i,"trailing",!1);if(r||a){let r=await this.cancelOrders([e],t,i);return this.safeValue(r,0)}await this.loadMarkets();let n=this.market(t),o={instId:n.id},d=this.safeString2(i,"clOrdId","clientOrderId");void 0!==d?o.clOrdId=d:o.ordId=e;let h=this.omit(i,["clOrdId","clientOrderId"]),c=await this.privatePostTradeCancelOrder(this.extend(o,h)),l=this.safeValue(c,"data",[]),f=this.safeDict(l,0);return this.parseOrder(f,n)}parseIds(e){return void 0!==e&&"string"==typeof e?e.split(","):e}async cancelOrders(e,t,i={}){let r;if(void 0===t)throw new s.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let a=this.market(t),n=[],o=this.safeValue(this.options,"cancelOrders",{}),d=this.safeString(o,"method","privatePostTradeCancelBatchOrders"),h=this.safeString(i,"method",d),c=this.parseIds(this.safeValue2(i,"clOrdId","clientOrderId")),l=this.parseIds(this.safeValue(i,"algoId")),f=this.safeValue2(i,"stop","trigger"),u=this.safeBool(i,"trailing",!1);if((f||u)&&(h="privatePostTradeCancelAlgos"),void 0===c){if(e=this.parseIds(e),void 0!==l)for(let e=0;e<l.length;e++)n.push({algoId:l[e],instId:a.id});for(let t=0;t<e.length;t++)u||f?n.push({algoId:e[t],instId:a.id}):n.push({ordId:e[t],instId:a.id})}else for(let e=0;e<c.length;e++)n.push({instId:a.id,clOrdId:c[e]});r="privatePostTradeCancelAlgos"===h?await this.privatePostTradeCancelAlgos(n):await this.privatePostTradeCancelBatchOrders(n);let g=this.safeList(r,"data",[]);return this.parseOrders(g,a,void 0,void 0,i)}async cancelOrdersForSymbols(e,t={}){let i;await this.loadMarkets();let r=[],s=this.safeDict(this.options,"cancelOrders",{}),a=this.safeString(s,"method","privatePostTradeCancelBatchOrders"),n=this.safeString(t,"method",a),o=this.safeBool2(t,"stop","trigger"),d=this.safeBool(t,"trailing",!1),h=o||d;h&&(n="privatePostTradeCancelAlgos");for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,"id"),a=this.safeString2(i,"clOrdId","clientOrderId"),n=this.safeString(i,"symbol"),o=this.market(n),d="ordId";h?d="algoId":void 0!==a&&(d="clOrdId");let c={instId:o.id};c[d]=void 0!==a?a:s,r.push(c)}i="privatePostTradeCancelAlgos"===n?await this.privatePostTradeCancelAlgos(r):await this.privatePostTradeCancelBatchOrders(r);let c=this.safeList(i,"data",[]);return this.parseOrders(c,void 0,void 0,void 0,t)}async cancelAllOrdersAfter(e,t={}){await this.loadMarkets();let i={timeOut:e>0?this.parseToInt(e/1e3):0};return await this.privatePostTradeCancelAllAfter(this.extend(i,t))}parseOrderStatus(e){return this.safeString({canceled:"canceled",order_failed:"canceled",live:"open",partially_filled:"open",filled:"closed",effective:"closed"},e,e)}parseOrder(e,t){let i,r,s,n,o;let d=this.safeString(e,"sCode");if(void 0!==d&&"0"!==d)return this.safeOrder({id:this.safeString(e,"ordId"),clientOrderId:this.safeString(e,"clOrdId"),status:"rejected",info:e});let h=this.safeString2(e,"algoId","ordId"),c=this.safeInteger(e,"cTime"),l=this.safeInteger(e,"uTime"),f=this.safeInteger(e,"fillTime"),u=this.safeString(e,"side"),g=this.safeString(e,"ordType");"post_only"===g?(i=!0,g="limit"):"fok"===g?(r="FOK",g="limit"):"ioc"===g&&(r="IOC",g="limit");let p=this.safeString(e,"instId");t=this.safeMarket(p,t);let m=this.safeSymbol(p,t,"-"),y=this.safeString(e,"accFillSz"),v=this.safeString2(e,"px","ordPx"),b=this.safeString(e,"avgPx"),O=this.parseOrderStatus(this.safeString(e,"state")),k=this.safeString(e,"fee"),S=this.safeString(this.options,"tgtCcy","base_ccy"),w=this.safeString(e,"tgtCcy",S),T=this.safeString(e,"instType");if("buy"===u&&"market"===g&&"SPOT"===T&&"quote_ccy"===w?n=this.safeString(e,"sz"):s=this.safeString(e,"sz"),void 0!==k){let t=a.Y.stringNeg(k),i=this.safeString(e,"feeCcy"),r=this.safeCurrencyCode(i);o={cost:this.parseNumber(t),currency:r}}let I=this.safeString(e,"clOrdId");void 0!==I&&I.length<1&&(I=void 0);let x=this.safeNumber2(e,"slTriggerPx","slOrdPx"),P=this.safeNumber2(e,"tpTriggerPx","tpOrdPx"),E=this.safeString(e,"reduceOnly"),M=!1;return M="true"===E,this.safeOrder({info:e,id:h,clientOrderId:I,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:f,lastUpdateTimestamp:l,symbol:m,type:g,timeInForce:r,postOnly:i,side:u,price:v,stopLossPrice:x,takeProfitPrice:P,triggerPrice:this.safeNumberN(e,["triggerPx","moveTriggerPx"]),average:b,cost:n,amount:s,filled:y,remaining:void 0,status:O,fee:o,trades:void 0,reduceOnly:M},t)}async fetchOrder(e,t,i={}){let r;if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let a=this.market(t),n={instId:a.id},o=this.safeString2(i,"clOrdId","clientOrderId"),d=this.safeValue(this.options,"fetchOrder",{}),h=this.safeString(d,"method","privateGetTradeOrder"),c=this.safeString(i,"method",h);this.safeValue2(i,"stop","trigger")?(c="privateGetTradeOrderAlgo",void 0!==o?n.algoClOrdId=o:n.algoId=e):void 0!==o?n.clOrdId=o:n.ordId=e;let l=this.omit(i,["method","clOrdId","clientOrderId","stop","trigger"]);r="privateGetTradeOrderAlgo"===c?await this.privateGetTradeOrderAlgo(this.extend(n,l)):await this.privateGetTradeOrder(this.extend(n,l));let f=this.safeValue(r,"data",[]),u=this.safeDict(f,0);return this.parseOrder(u,a)}async fetchOpenOrders(e,t,i,r={}){let s,a;await this.loadMarkets();let n=!1;if([n,r]=this.handleOptionAndParams(r,"fetchOpenOrders","paginate"),n)return await this.fetchPaginatedCallDynamic("fetchOpenOrders",e,t,i,r);let o={};void 0!==e&&(s=this.market(e),o.instId=s.id),void 0!==i&&(o.limit=i);let d=this.safeValue(this.options,"fetchOpenOrders",{}),h=this.safeValue(this.options,"algoOrderTypes",{}),c=this.safeString(d,"method","privateGetTradeOrdersPending"),l=this.safeString(r,"method",c),f=this.safeString(r,"ordType"),u=this.safeValue2(r,"stop","trigger"),g=this.safeBool(r,"trailing",!1);(g||u||f in h)&&(l="privateGetTradeOrdersAlgoPending"),g?o.ordType="move_order_stop":u&&void 0===f&&(o.ordType="trigger");let p=this.omit(r,["method","stop","trigger","trailing"]);a="privateGetTradeOrdersAlgoPending"===l?await this.privateGetTradeOrdersAlgoPending(this.extend(o,p)):await this.privateGetTradeOrdersPending(this.extend(o,p));let m=this.safeList(a,"data",[]);return this.parseOrders(m,s,t,i)}async fetchCanceledOrders(e,t,i,r={}){let a,n,o,d;await this.loadMarkets();let h={};void 0!==e&&(a=this.market(e),h.instId=a.id),[n,o]=this.handleMarketTypeAndParams("fetchCanceledOrders",a,r),h.instType=this.convertToInstrumentType(n),void 0!==i&&(h.limit=i),h.state="canceled";let c=this.safeValue(this.options,"fetchCanceledOrders",{}),l=this.safeValue(this.options,"algoOrderTypes",{}),f=this.safeString(c,"method","privateGetTradeOrdersHistory"),u=this.safeString(r,"method",f),g=this.safeString(r,"ordType"),p=this.safeValue2(r,"stop","trigger");if(this.safeBool(r,"trailing",!1))u="privateGetTradeOrdersAlgoHistory",h.ordType="move_order_stop";else if(p||g in l){u="privateGetTradeOrdersAlgoHistory";let e=this.safeString(r,"algoId");if(void 0!==e&&(h.algoId=e,r=this.omit(r,"algoId")),p&&void 0===g)throw new s.ArgumentsRequired(this.id+' fetchCanceledOrders() requires an "ordType" string parameter, "conditional", "oco", "trigger", "move_order_stop", "iceberg", or "twap"')}else{void 0!==t&&(h.begin=t);let e=this.safeInteger(o,"until");void 0!==e&&(h.end=e,o=this.omit(o,["until"]))}let m=this.omit(o,["method","stop","trigger","trailing"]);d="privateGetTradeOrdersAlgoHistory"===u?await this.privateGetTradeOrdersAlgoHistory(this.extend(h,m)):await this.privateGetTradeOrdersHistory(this.extend(h,m));let y=this.safeList(d,"data",[]);return this.parseOrders(y,a,t,i)}async fetchClosedOrders(e,t,i,r={}){let s,a,n,o;await this.loadMarkets();let d=!1;if([d,r]=this.handleOptionAndParams(r,"fetchClosedOrders","paginate"),d)return await this.fetchPaginatedCallDynamic("fetchClosedOrders",e,t,i,r);let h={};void 0!==e&&(s=this.market(e),h.instId=s.id),[a,n]=this.handleMarketTypeAndParams("fetchClosedOrders",s,r),h.instType=this.convertToInstrumentType(a),void 0!==i&&(h.limit=i);let c=this.safeDict(this.options,"fetchClosedOrders",{}),l=this.safeDict(this.options,"algoOrderTypes",{}),f=this.safeString(c,"method","privateGetTradeOrdersHistory"),u=this.safeString(r,"method",f),g=this.safeString(r,"ordType"),p=this.safeBool2(r,"stop","trigger"),m=this.safeBool(r,"trailing",!1);if((m||p||g in l)&&(u="privateGetTradeOrdersAlgoHistory",h.state="effective"),m)h.ordType="move_order_stop";else if(p)void 0===g&&(h.ordType="trigger");else{void 0!==t&&(h.begin=t);let e=this.safeInteger(n,"until");void 0!==e&&(h.end=e,n=this.omit(n,["until"])),h.state="filled"}let y=this.omit(n,["method","stop","trigger","trailing"]);o="privateGetTradeOrdersAlgoHistory"===u?await this.privateGetTradeOrdersAlgoHistory(this.extend(h,y)):"privateGetTradeOrdersHistoryArchive"===u?await this.privateGetTradeOrdersHistoryArchive(this.extend(h,y)):await this.privateGetTradeOrdersHistory(this.extend(h,y));let v=this.safeList(o,"data",[]);return this.parseOrders(v,s,t,i)}async fetchMyTrades(e,t,i,r={}){let s;await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,r);let n={};void 0!==e&&(s=this.market(e),n.instId=s.id),void 0!==t&&(n.begin=t),[n,r]=this.handleUntilOption("end",n,r);let[o,d]=this.handleMarketTypeAndParams("fetchMyTrades",s,r);n.instType=this.convertToInstrumentType(o),void 0!==i&&void 0===t&&(n.limit=i);let h=await this.privateGetTradeFillsHistory(this.extend(n,d)),c=this.safeList(h,"data",[]);return this.parseTrades(c,s,t,i,d)}async fetchOrderTrades(e,t,i,r,s={}){return await this.fetchMyTrades(t,i,r,this.extend({ordId:e},s))}async fetchLedger(e,t,i,r={}){let s,a,n;await this.loadMarkets();let o=!1;if([o,r]=this.handleOptionAndParams(r,"fetchLedger","paginate"),o)return await this.fetchPaginatedCallDynamic("fetchLedger",e,t,i,r);let d=this.safeDict(this.options,"fetchLedger",{}),h=this.safeString(d,"method");h=this.safeString(r,"method",h),r=this.omit(r,"method");let c={};[s,r]=this.handleMarginModeAndParams("fetchLedger",r),void 0===s&&(s=this.safeString(r,"mgnMode")),"privateGetAssetBills"!==h&&void 0!==s&&(c.mgnMode=s);let[l,f]=this.handleMarketTypeAndParams("fetchLedger",void 0,r);void 0!==l&&(c.instType=this.convertToInstrumentType(l)),void 0!==i&&(c.limit=i),void 0!==e&&(a=this.currency(e),c.ccy=a.id),[c,r]=this.handleUntilOption("end",c,r),n="privateGetAccountBillsArchive"===h?await this.privateGetAccountBillsArchive(this.extend(c,f)):"privateGetAssetBills"===h?await this.privateGetAssetBills(this.extend(c,f)):await this.privateGetAccountBills(this.extend(c,f));let u=this.safeList(n,"data",[]);return this.parseLedger(u,a,t,i)}parseLedgerEntryType(e){return this.safeString({1:"transfer",2:"trade",3:"trade",4:"rebate",5:"trade",6:"transfer",7:"trade",8:"fee",9:"trade",10:"trade",11:"trade"},e,e)}parseLedgerEntry(e,t){let i;let r=this.safeString(e,"ccy"),s=this.safeCurrencyCode(r,t);t=this.safeCurrency(r,t);let n=this.safeInteger(e,"ts"),o=this.safeString(e,"fee");void 0!==o&&(i={cost:this.parseNumber(a.Y.stringNeg(o)),currency:s});let d=this.safeString(e,"instId"),h=this.safeSymbol(d,void 0,"-");return this.safeLedgerEntry({info:e,id:this.safeString(e,"billId"),timestamp:n,datetime:this.iso8601(n),account:void 0,referenceId:this.safeString(e,"ordId"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:s,symbol:h,amount:this.safeNumber(e,"balChg"),before:void 0,after:this.safeNumber(e,"bal"),status:"ok",fee:i},t)}parseDepositAddress(e,t){let i=this.safeString(e,"addr"),r=this.safeStringN(e,["tag","pmtId","memo"]);if(void 0===r){let t=this.safeValue(e,"addrEx",{});r=this.safeString(t,"comment")}let s=this.safeString(e,"ccy"),a=(t=this.safeCurrency(s,t)).code,n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),d=this.indexBy(o,"id"),h=this.safeValue(d,n);"USDT-Polygon"===n&&(h=this.safeValue2(d,"USDT-Polygon-Bridge","USDT-Polygon"));let c=this.safeString(h,"network"),l=this.networkIdToCode(c,a);return this.checkAddress(i),{info:e,currency:a,network:l,address:i,tag:r}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();let i=this.currency(e),r={ccy:i.id},s=await this.privateGetAssetDepositAddress(this.extend(r,t)),a=this.safeList(s,"data",[]),n=this.filterBy(a,"selected",!0),o=this.parseDepositAddresses(n,[i.code],!1);return this.indexBy(o,"network")}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.safeStringUpper(t,"network");t=this.omit(t,"network"),e=this.safeCurrencyCode(e);let r=this.networkIdToCode(i,e),a=await this.fetchDepositAddressesByNetwork(e,t);if(void 0!==r){let t=this.safeDict(a,r);if(void 0===t)throw new s.InvalidAddress(this.id+" fetchDepositAddress() cannot find "+r+" deposit address for "+e);return t}let n=this.networkIdToCode(e,e);if(n in a)return a[n];let o=Object.keys(a),d=this.safeString(o,0);return this.safeDict(a,d)}async withdraw(e,t,i,r,a={}){[r,a]=this.handleWithdrawTagAndParams(r,a),this.checkAddress(i),await this.loadMarkets();let n=this.currency(e);void 0!==r&&r.length>0&&(i=i+":"+r);let o={ccy:n.id,toAddr:i,dest:"4",amt:this.numberToString(t)},d=this.safeString(a,"network");if(void 0!==d){let e=this.safeDict(this.options,"networks",{});d=this.safeString(e,d.toUpperCase(),d),o.chain=n.id+"-"+d,a=this.omit(a,"network")}let h=this.safeString(a,"fee");if(void 0===h){let e=await this.fetchCurrencies();this.currencies=this.deepExtend(this.currencies,e);let t=this.safeDict(n.networks,this.networkIdToCode(d),{});if(void 0===(h=this.safeString(t,"fee")))throw new s.ArgumentsRequired(this.id+' withdraw() requires a "fee" string parameter, network transaction fee must be ≥ 0. Withdrawals to OKCoin or OKX are fee-free, please set "0". Withdrawing to external digital asset address requires network transaction fee.')}o.fee=this.numberToString(h);let c=this.omit(a,["fee"]),l=await this.privatePostAssetWithdrawal(this.extend(o,c)),f=this.safeList(l,"data",[]),u=this.safeDict(f,0);return this.parseTransaction(u,n)}async fetchDeposits(e,t,i,r={}){let s;await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchDeposits","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchDeposits",e,t,i,r);let n={};void 0!==e&&(s=this.currency(e),n.ccy=s.id),void 0!==t&&(n.before=Math.max(t-1,0)),void 0!==i&&(n.limit=i),[n,r]=this.handleUntilOption("after",n,r);let o=await this.privateGetAssetDepositHistory(this.extend(n,r)),d=this.safeList(o,"data",[]);return this.parseTransactions(d,s,t,i,r)}async fetchDeposit(e,t,i={}){let r;await this.loadMarkets();let s={depId:e};void 0!==t&&(r=this.currency(t),s.ccy=r.id);let a=await this.privateGetAssetDepositHistory(this.extend(s,i)),n=this.safeValue(a,"data"),o=this.safeDict(n,0,{});return this.parseTransaction(o,r)}async fetchWithdrawals(e,t,i,r={}){let s;await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchWithdrawals","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchWithdrawals",e,t,i,r);let n={};void 0!==e&&(s=this.currency(e),n.ccy=s.id),void 0!==t&&(n.before=Math.max(t-1,0)),void 0!==i&&(n.limit=i),[n,r]=this.handleUntilOption("after",n,r);let o=await this.privateGetAssetWithdrawalHistory(this.extend(n,r)),d=this.safeList(o,"data",[]);return this.parseTransactions(d,s,t,i,r)}async fetchWithdrawal(e,t,i={}){let r;await this.loadMarkets();let s={wdId:e};void 0!==t&&(r=this.currency(t),s.ccy=r.id);let a=await this.privateGetAssetWithdrawalHistory(this.extend(s,i)),n=this.safeList(a,"data",[]),o=this.safeDict(n,0,{});return this.parseTransaction(o)}parseTransactionStatus(e){return this.safeString({"-3":"pending","-2":"canceled","-1":"failed",0:"pending",1:"pending",2:"ok",3:"pending",4:"pending",5:"pending",6:"pending",7:"pending",8:"pending",9:"pending",10:"pending",12:"pending",15:"pending",16:"pending"},e,e)}parseTransaction(e,t){let i,r,s;let a=this.safeString(e,"wdId"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),d=this.safeString2(e,"tag","memo");d=this.safeString2(e,"pmtId",d),void 0!==a?(i="withdrawal",r=a):(r=this.safeString(e,"depId"),i="deposit");let h=this.safeString(e,"ccy"),c=this.safeCurrencyCode(h),l=this.safeNumber(e,"amt"),f=this.parseTransactionStatus(this.safeString(e,"state")),u=this.safeString(e,"txId"),g=this.safeInteger(e,"ts");return s="deposit"===i?0:this.safeNumber(e,"fee"),{info:e,id:r,currency:c,amount:l,network:void 0,addressFrom:n,addressTo:o,address:o,tagFrom:void 0,tagTo:d,tag:d,status:f,type:i,updated:void 0,txid:u,timestamp:g,datetime:this.iso8601(g),internal:void 0,comment:void 0,fee:{currency:c,cost:s}}}async fetchLeverage(e,t={}){let i;if(await this.loadMarkets(),[i,t]=this.handleMarginModeAndParams("fetchLeverage",t),void 0===i&&(i=this.safeString(t,"mgnMode","cross")),"cross"!==i&&"isolated"!==i)throw new s.BadRequest(this.id+" fetchLeverage() requires a marginMode parameter that must be either cross or isolated");let r=this.market(e),a={instId:r.id,mgnMode:i},n=await this.privateGetAccountLeverageInfo(this.extend(a,t)),o=this.safeList(n,"data",[]);return this.parseLeverage(o,r)}parseLeverage(e,t){let i,r,s,a;for(let t=0;t<e.length;t++){let n=e[t];r=this.safeStringLower(n,"mgnMode"),i=this.safeString(n,"instId");let o=this.safeStringLower(n,"posSide");"long"===o?s=this.safeInteger(n,"lever"):("short"===o||(s=this.safeInteger(n,"lever")),a=this.safeInteger(n,"lever"))}return{info:e,symbol:this.safeSymbol(i,t),marginMode:r,longLeverage:s,shortLeverage:a}}async fetchPosition(e,t={}){await this.loadMarkets();let i=this.market(e),[r,s]=this.handleMarketTypeAndParams("fetchPosition",i,t),a={instId:i.id};void 0!==r&&(a.instType=this.convertToInstrumentType(r));let n=await this.privateGetAccountPositions(this.extend(a,s)),o=this.safeList(n,"data",[]),d=this.safeDict(o,0);if(void 0!==d)return this.parsePosition(d,i)}async fetchPositions(e,t={}){let i;await this.loadMarkets();let r={};if(void 0!==e){let t=[];for(let i=0;i<e.length;i++){let r=e[i],s=this.market(r);t.push(s.id)}t.length>0&&(r.instId=t.join(","))}let s=this.safeDict(this.options,"fetchPositions",{});i="privateGetAccountPositionsHistory"===this.safeString(s,"method","privateGetAccountPositions")?await this.privateGetAccountPositionsHistory(this.extend(r,t)):await this.privateGetAccountPositions(this.extend(r,t));let a=this.safeList(i,"data",[]),n=[];for(let e=0;e<a.length;e++)n.push(this.parsePosition(a[e]));return this.filterByArrayPositions(n,"symbol",this.marketSymbols(e),!1)}async fetchPositionsForSymbol(e,t={}){return await this.fetchPositions([e],t)}parsePosition(e,t){let i,r,s;let n=this.safeString(e,"instId"),o=(t=this.safeMarket(n,t,void 0,"contract")).symbol,d=this.safeString(e,"pos"),h=a.Y.stringAbs(d),c=this.safeString2(e,"posSide","direction"),l="net"!==c,f=this.parseNumber(h);if(t.margin){if("net"===c){let i=this.safeString(e,"posCcy"),r=this.safeCurrencyCode(i);void 0!==r&&(c=t.base===r?"long":"short")}void 0===c&&(c=this.safeString(e,"direction"))}else void 0!==d&&"net"===c&&(c=a.Y.stringGt(d,"0")?"long":a.Y.stringLt(d,"0")?"short":void 0);let u=this.safeNumber(t,"contractSize"),g=this.numberToString(u),p=this.safeString(e,"markPx"),m=this.safeString(e,"notionalUsd");t.inverse&&(m=a.Y.stringDiv(a.Y.stringMul(h,g),p));let y=this.parseNumber(m),v=this.safeString(e,"mgnMode"),b=this.safeString2(e,"avgPx","openAvgPx"),O=this.safeString(e,"upl"),k=this.safeString(e,"lever");"cross"===v?(i=this.safeString(e,"imr"),s=a.Y.stringAdd(i,O)):"isolated"===v&&(r=a.Y.stringDiv("1",k),s=this.safeString(e,"margin"));let S=this.safeString(e,"mmr"),w=this.parseNumber(S),T=a.Y.stringDiv(S,m);void 0===r?r=this.parseNumber(a.Y.stringDiv(i,m,4)):void 0===i&&(i=a.Y.stringMul(r,m));let I=this.parseNumber(a.Y.stringDiv(a.Y.stringAdd(T,"0.00005"),"1",4)),x=this.safeNumber(e,"liqPx"),P=this.safeString(e,"uplRatio"),E=this.parseNumber(a.Y.stringMul(P,"100")),M=this.safeInteger(e,"cTime"),A=this.parseNumber(a.Y.stringDiv(S,s,4));return this.safePosition({info:e,id:this.safeString(e,"posId"),symbol:o,notional:y,marginMode:v,liquidationPrice:x,entryPrice:this.parseNumber(b),unrealizedPnl:this.parseNumber(O),realizedPnl:this.safeNumber(e,"realizedPnl"),percentage:E,contracts:f,contractSize:u,markPrice:this.parseNumber(p),lastPrice:this.safeNumber(e,"closeAvgPx"),side:c,hedged:l,timestamp:M,datetime:this.iso8601(M),lastUpdateTimestamp:this.safeInteger(e,"uTime"),maintenanceMargin:w,maintenanceMarginPercentage:I,collateral:this.parseNumber(s),initialMargin:this.parseNumber(i),initialMarginPercentage:this.parseNumber(r),leverage:this.parseNumber(k),marginRatio:A,stopLossPrice:void 0,takeProfitPrice:void 0})}async transfer(e,t,i,r,s={}){await this.loadMarkets();let a=this.currency(e),n=this.safeDict(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,r,r),h={ccy:a.id,amt:this.currencyToPrecision(e,t),type:"0",from:o,to:d};"master"===o?(h.type="1",h.subAcct=d,h.from=this.safeString(s,"from","6"),h.to=this.safeString(s,"to","6")):"master"===d&&(h.type="2",h.subAcct=o,h.from=this.safeString(s,"from","6"),h.to=this.safeString(s,"to","6"));let c=await this.privatePostAssetTransfer(this.extend(h,s)),l=this.safeList(c,"data",[]),f=this.safeDict(l,0,{});return this.parseTransfer(f,a)}parseTransfer(e,t){let i=this.safeString2(e,"transId","billId"),r=this.safeString(e,"ccy"),s=this.safeCurrencyCode(r,t),n=this.safeNumber(e,"amt"),o=this.safeString(e,"from"),d=this.safeString(e,"to"),h=this.safeDict(this.options,"accountsById",{}),c=this.safeInteger(e,"ts"),l=this.safeString(e,"sz");return void 0!==l&&(n=this.parseNumber(a.Y.stringAbs(l))),{info:e,id:i,timestamp:c,datetime:this.iso8601(c),currency:s,amount:n,fromAccount:this.safeString(h,o),toAccount:this.safeString(h,d),status:this.parseTransferStatus(this.safeString(e,"state"))}}parseTransferStatus(e){return this.safeString({success:"ok"},e,e)}async fetchTransfer(e,t,i={}){await this.loadMarkets();let r=await this.privateGetAssetTransferState(this.extend({transId:e},i)),s=this.safeList(r,"data",[]),a=this.safeDict(s,0);return this.parseTransfer(a)}async fetchTransfers(e,t,i,r={}){let s;await this.loadMarkets();let a={type:"1"};void 0!==e&&(s=this.currency(e),a.ccy=s.id),void 0!==t&&(a.begin=t),void 0!==i&&(a.limit=i);let n=await this.privateGetAccountBillsArchive(this.extend(a,r)),o=this.safeList(n,"data",[]);return this.parseTransfers(o,s,t,i,r)}sign(e,t="public",i="GET",r={},s,a){let n=Array.isArray(r),d="/api/"+this.version+"/"+this.implodeParams(e,r),h=this.omit(r,this.extractParams(e)),c=this.implodeHostname(this.urls.api.rest)+d;if("public"===t)Object.keys(h).length&&(c+="?"+this.urlencode(h));else if("private"===t){if(this.checkRequiredCredentials(),"POST"===i&&("trade/batch-orders"===e||"trade/order-algo"===e||"trade/order"===e)){let e=this.safeString(this.options,"brokerId","e847386590ce4dBC");if(Array.isArray(r))for(let t=0;t<r.length;t++){let i=r[t];void 0===this.safeString(i,"clOrdId")&&(i.clOrdId=e+this.uuid16(),i.tag=e,r[t]=i)}else void 0===this.safeString(r,"clOrdId")&&(r.clOrdId=e+this.uuid16(),r.tag=e)}let t=this.iso8601(this.nonce());s={"OK-ACCESS-KEY":this.apiKey,"OK-ACCESS-PASSPHRASE":this.password,"OK-ACCESS-TIMESTAMP":t};let l=t+i+d;if("GET"===i){if(Object.keys(h).length){let e="?"+this.urlencode(h);c+=e,l+=e}}else(n||Object.keys(h).length)&&(l+=a=this.json(h)),s["Content-Type"]="application/json";let f=this.hmac(this.encode(l),this.encode(this.secret),o.s,"base64");s["OK-ACCESS-SIGN"]=f}return{url:c,method:i,body:a,headers:s}}parseFundingRate(e,t){let i=this.safeInteger(e,"nextFundingTime"),r=this.safeString(e,"instId"),s=this.safeSymbol(r,t),n=this.safeNumber(e,"nextFundingRate"),o=this.safeInteger(e,"fundingTime"),d=this.safeString(e,"fundingTime"),h=this.safeString(e,"nextFundingRate"),c=a.Y.stringSub(h,d);return{info:e,symbol:s,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:o,fundingDatetime:this.iso8601(o),nextFundingRate:n,nextFundingTimestamp:i,nextFundingDatetime:this.iso8601(i),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:this.parseFundingInterval(c)}}parseFundingInterval(e){return this.safeString({36e5:"1h",144e5:"4h",288e5:"8h",576e5:"16h",864e5:"24h"},e,e)}async fetchFundingInterval(e,t={}){return await this.fetchFundingRate(e,t)}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.swap)throw new s.ExchangeError(this.id+" fetchFundingRate() is only valid for swap markets");let r={instId:i.id},a=await this.publicGetPublicFundingRate(this.extend(r,t)),n=this.safeList(a,"data",[]),o=this.safeDict(n,0,{});return this.parseFundingRate(o,i)}async fetchFundingHistory(e,t,i,r={}){let s;await this.loadMarkets();let a={type:"8"};void 0!==i&&(a.limit=i.toString()),void 0!==e&&(e=(s=this.market(e)).symbol,s.contract&&(s.linear?(a.ctType="linear",a.ccy=s.quoteId):(a.ctType="inverse",a.ccy=s.baseId)));let[n,o]=this.handleMarketTypeAndParams("fetchFundingHistory",s,r);"swap"===n&&(a.instType=this.convertToInstrumentType(n));let d=await this.privateGetAccountBillsArchive(this.extend(a,o)),h=this.safeList(d,"data",[]),c=[];for(let e=0;e<h.length;e++){let t=h[e],i=this.safeInteger(t,"ts"),r=this.safeString(t,"instId"),s=this.safeMarket(r),a=this.safeString(t,"ccy"),n=this.safeCurrencyCode(a);c.push({info:t,symbol:s.symbol,code:n,timestamp:i,datetime:this.iso8601(i),id:this.safeString(t,"billId"),amount:this.safeNumber(t,"balChg")})}let l=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(l,e,t,i)}async setLeverage(e,t,i={}){let r;if(void 0===t)throw new s.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new s.BadRequest(this.id+" setLeverage() leverage should be between 1 and 125");await this.loadMarkets();let a=this.market(t);if([r,i]=this.handleMarginModeAndParams("setLeverage",i),void 0===r&&(r=this.safeString(i,"mgnMode","cross")),"cross"!==r&&"isolated"!==r)throw new s.BadRequest(this.id+" setLeverage() requires a marginMode parameter that must be either cross or isolated");let n={lever:e,mgnMode:r,instId:a.id},o=this.safeString(i,"posSide","net");if("isolated"===r){if("long"!==o&&"short"!==o&&"net"!==o)throw new s.BadRequest(this.id+' setLeverage() requires the posSide argument to be either "long", "short" or "net"');n.posSide=o}return await this.privatePostAccountSetLeverage(this.extend(n,i))}async fetchPositionMode(e,t={}){let i;let r=await this.fetchAccounts();if(r.length>1){let e=this.safeString(t,"accountId");if(void 0===e){let e=this.getListFromObjectValues(r,"id");throw new s.ExchangeError(this.id+' fetchPositionMode() can not detect position mode, because you have multiple accounts. Set params["accountId"] to desired id from: '+e.join(", "))}{let t=this.indexBy(r,"id");i=this.safeDict(t,e)}}else i=r[0];let a=i.info,n=this.safeString(a,"posMode");return{info:a,hedged:"long_short_mode"===n}}async setPositionMode(e,t,i={}){return await this.privatePostAccountSetPositionMode(this.extend({posMode:e?"long_short_mode":"net_mode"},i))}async setMarginMode(e,t,i={}){if(void 0===t)throw new s.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("cross"!==(e=e.toLowerCase())&&"isolated"!==e)throw new s.BadRequest(this.id+" setMarginMode() marginMode must be either cross or isolated");await this.loadMarkets();let r=this.market(t),a=this.safeInteger2(i,"lever","leverage");if(void 0===a||a<1||a>125)throw new s.BadRequest(this.id+' setMarginMode() params["lever"] should be between 1 and 125');i=this.omit(i,["leverage"]);let n={lever:a,mgnMode:e,instId:r.id};return await this.privatePostAccountSetLeverage(this.extend(n,i))}async fetchCrossBorrowRates(e={}){await this.loadMarkets();let t=await this.privateGetAccountInterestRate(e),i=this.safeList(t,"data",[]),r=[];for(let e=0;e<i.length;e++)r.push(this.parseBorrowRate(i[e]));return r}async fetchCrossBorrowRate(e,t={}){await this.loadMarkets();let i={ccy:this.currency(e).id},r=await this.privateGetAccountInterestRate(this.extend(i,t)),s=this.safeList(r,"data",[]),a=this.safeDict(s,0,{});return this.parseBorrowRate(a)}parseBorrowRate(e,t){let i=this.safeString(e,"ccy"),r=this.safeInteger(e,"ts");return{currency:this.safeCurrencyCode(i),rate:this.safeNumber2(e,"interestRate","rate"),period:864e5,timestamp:r,datetime:this.iso8601(r),info:e}}parseBorrowRateHistories(e,t,i,r){let s={};for(let i=0;i<e.length;i++){let r=e[i],a=this.safeCurrencyCode(this.safeString(r,"ccy"));if(void 0===t||this.inArray(a,t)){a in s||(s[a]=[]);let e=this.parseBorrowRate(r);s[a].push(e)}}let a=Object.keys(s);for(let e=0;e<a.length;e++){let t=a[e];s[t]=this.filterByCurrencySinceLimit(s[t],t,i,r)}return s}async fetchBorrowRateHistories(e,t,i,r={}){await this.loadMarkets();let s={};void 0!==t&&(s.before=t),void 0!==i&&(s.limit=i);let a=await this.publicGetFinanceSavingsLendingRateHistory(this.extend(s,r)),n=this.safeList(a,"data",[]);return this.parseBorrowRateHistories(n,e,t,i)}async fetchBorrowRateHistory(e,t,i,r={}){await this.loadMarkets();let s={ccy:this.currency(e).id};void 0!==t&&(s.before=t),void 0!==i&&(s.limit=i);let a=await this.publicGetFinanceSavingsLendingRateHistory(this.extend(s,r)),n=this.safeList(a,"data",[]);return this.parseBorrowRateHistory(n,e,t,i)}async modifyMarginHelper(e,t,i,r={}){await this.loadMarkets();let s=this.market(e),a=this.safeString(r,"posSide","net");r=this.omit(r,["posSide"]);let n={instId:s.id,amt:t,type:i,posSide:a},o=await this.privatePostAccountPositionMarginBalance(this.extend(n,r)),d=this.safeList(o,"data",[]),h=this.safeDict(d,0,{}),c=this.safeString(o,"code");return this.extend(this.parseMarginModification(h,s),{status:"0"===c?"ok":"failed"})}parseMarginModification(e,t){let i;let r=this.safeString2(e,"amt","posBalChg"),s=this.safeString(e,"type");i="6"===s?a.Y.stringGt(r,"0")?"add":"reduce":s;let n=a.Y.stringAbs(r),o=this.safeString(e,"instId"),d=this.safeMarket(o,t),h=d.inverse?d.base:d.quote,c=this.safeInteger(e,"ts");return{info:e,symbol:d.symbol,type:i,marginMode:"isolated",amount:this.parseNumber(n),code:h,total:void 0,status:void 0,timestamp:c,datetime:this.iso8601(c)}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"reduce",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async fetchMarketLeverageTiers(e,t={}){let i;await this.loadMarkets();let r=this.market(e),a=r.spot?"MARGIN":this.convertToInstrumentType(r.type),n=this.safeString(r.info,"uly");if(!n&&"MARGIN"!==a)throw new s.BadRequest(this.id+" fetchMarketLeverageTiers() cannot fetch leverage tiers for "+e);[i,t]=this.handleMarginModeAndParams("fetchMarketLeverageTiers",t),void 0===i&&(i=this.safeString(t,"tdMode","cross"));let o={instType:a,tdMode:i,uly:n};"MARGIN"===a&&(o.instId=r.id);let d=await this.publicGetPublicPositionTiers(this.extend(o,t)),h=this.safeList(d,"data",[]);return this.parseMarketLeverageTiers(h,r)}parseMarketLeverageTiers(e,t){let i=[];for(let r=0;r<e.length;r++){let s=e[r],a=this.safeString(s,"instId");i.push({tier:this.safeInteger(s,"tier"),symbol:this.safeSymbol(a,t),currency:t.quote,minNotional:this.safeNumber(s,"minSz"),maxNotional:this.safeNumber(s,"maxSz"),maintenanceMarginRate:this.safeNumber(s,"mmr"),maxLeverage:this.safeNumber(s,"maxLever"),info:s})}return i}async fetchBorrowInterest(e,t,i,r,s={}){let a,n;await this.loadMarkets(),[a,s]=this.handleMarginModeAndParams("fetchBorrowInterest",s),void 0===a&&(a=this.safeString(s,"mgnMode","cross"));let o={mgnMode:a};if(void 0!==e){let t=this.currency(e);o.ccy=t.id}void 0!==i&&(o.before=i-1),void 0!==r&&(o.limit=r),void 0!==t&&(n=this.market(t),o.instId=n.id);let d=await this.privateGetAccountInterestAccrued(this.extend(o,s)),h=this.safeList(d,"data",[]),c=this.parseBorrowInterests(h);return this.filterByCurrencySinceLimit(c,e,i,r)}parseBorrowInterest(e,t){let i=this.safeString(e,"instId");void 0!==i&&(t=this.safeMarket(i,t));let r=this.safeInteger(e,"ts");return{info:e,symbol:this.safeString(t,"symbol"),currency:this.safeCurrencyCode(this.safeString(e,"ccy")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"interestRate"),amountBorrowed:this.safeNumber(e,"liab"),marginMode:this.safeString(e,"mgnMode"),timestamp:r,datetime:this.iso8601(r)}}async borrowCrossMargin(e,t,i={}){await this.loadMarkets();let r=this.currency(e),s={ccy:r.id,amt:this.currencyToPrecision(e,t),side:"borrow"},a=await this.privatePostAccountBorrowRepay(this.extend(s,i)),n=this.safeList(a,"data",[]),o=this.safeDict(n,0,{});return this.parseMarginLoan(o,r)}async repayCrossMargin(e,t,i={}){await this.loadMarkets();let r=this.safeString2(i,"id","ordId");if(i=this.omit(i,"id"),void 0===r)throw new s.ArgumentsRequired(this.id+" repayCrossMargin() requires an id parameter");let a=this.currency(e),n={ccy:a.id,amt:this.currencyToPrecision(e,t),side:"repay",ordId:r},o=await this.privatePostAccountBorrowRepay(this.extend(n,i)),d=this.safeList(o,"data",[]),h=this.safeDict(d,0,{});return this.parseMarginLoan(h,a)}parseMarginLoan(e,t){let i=this.safeString(e,"ccy");return{id:void 0,currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amt"),symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}async fetchOpenInterest(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.contract)throw new s.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");let r={instType:this.convertToInstrumentType(i.type),uly:this.safeString(i.info,"uly"),instId:i.id},a=await this.publicGetPublicOpenInterest(this.extend(r,t)),n=this.safeList(a,"data",[]);return this.parseOpenInterest(n[0],i)}async fetchOpenInterestHistory(e,t="1d",i,r,a={}){let n,o,d;let h=this.safeDict(this.options,"fetchOpenInterestHistory",{}),c=this.safeDict(h,"timeframes",{});if("5m"!==(t=this.safeString(c,t,t))&&"1H"!==t&&"1D"!==t)throw new s.BadRequest(this.id+" fetchOpenInterestHistory cannot only use the 5m, 1h, and 1d timeframe");await this.loadMarkets();let l={ccy:e in this.markets||e in this.markets_by_id?(n=this.market(e)).baseId:this.currency(e).id,period:t};if([o,a]=this.handleMarketTypeAndParams("fetchOpenInterestHistory",n,a),"option"===o)d=await this.publicGetRubikStatOptionOpenInterestVolume(this.extend(l,a));else{void 0!==i&&(l.begin=i);let e=this.safeInteger(a,"until");void 0!==e&&(l.end=e,a=this.omit(a,["until"])),d=await this.publicGetRubikStatContractsOpenInterestVolume(this.extend(l,a))}let f=this.safeList(d,"data",[]);return this.parseOpenInterestsHistory(f,void 0,i,r)}parseOpenInterest(e,t){let i,r,s,a;let n=this.safeString(e,"instId");t=this.safeMarket(n,t);let o=this.safeInteger(e,"ts"),d=this.safeInteger(e,0,o),h=this.safeString(this.options,"defaultType");return Array.isArray(e)?"option"===h?(s=this.safeNumber(e,1),i=this.safeNumber(e,2)):(a=this.safeNumber(e,1),r=this.safeNumber(e,2)):(i=this.safeNumber(e,"oiCcy"),s=this.safeNumber(e,"oi"),a=this.safeNumber(e,"oiUsd")),this.safeOpenInterest({symbol:this.safeSymbol(n),baseVolume:i,quoteVolume:r,openInterestAmount:s,openInterestValue:a,timestamp:d,datetime:this.iso8601(d),info:e},t)}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e,e?this.headers["x-simulated-trading"]="1":"x-simulated-trading"in this.headers&&(this.headers=this.omit(this.headers,"x-simulated-trading"))}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i={};if(void 0!==e){let t=this.currencyIds(e);i.ccy=t.join(",")}let r=await this.privateGetAssetCurrencies(this.extend(i,t)),s=this.safeList(r,"data");return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t,i){let r={};t=this.marketCodes(t);for(let i=0;i<e.length;i++){let s=e[i],a=this.safeString(s,"ccy"),n=this.safeCurrencyCode(a);if(void 0===t||this.inArray(n,t)){void 0===this.safeValue(r,n)&&(r[n]=this.depositWithdrawFee({})),r[n].info[a]=s;let e=this.safeString(s,"chain");if(void 0===e)continue;let t=e.split("-"),i=this.safeValue(t,1),o=this.safeNumber(s,"fee"),d={fee:o,percentage:void 0===o&&void 0},h={fee:void 0,percentage:void 0},c=this.networkIdToCode(i,n);r[n].networks[c]={withdraw:d,deposit:h}}}let s=Object.keys(r);for(let e=0;e<s.length;e++){let t=s[e],i=this.currency(t);r[t]=this.assignDefaultDepositWithdrawFees(r[t],i)}return r}async fetchSettlementHistory(e,t,i,r={}){let a;if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchSettlementHistory() requires a symbol argument");await this.loadMarkets();let n=this.market(e);if([a,r]=this.handleMarketTypeAndParams("fetchSettlementHistory",n,r),"future"!==a&&"option"!==a)throw new s.NotSupported(this.id+" fetchSettlementHistory() supports futures and options markets only");let o={instType:this.convertToInstrumentType(a),uly:n.baseId+"-"+n.quoteId};void 0!==t&&(o.before=t-1),void 0!==i&&(o.limit=i);let d=await this.publicGetPublicDeliveryExerciseHistory(this.extend(o,r)),h=this.safeList(d,"data",[]),c=this.parseSettlements(h,n),l=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(l,n.symbol,t,i)}parseSettlement(e,t){let i=this.safeString(e,"insId");return{info:e,symbol:this.safeSymbol(i,t),price:this.safeNumber(e,"px"),timestamp:void 0,datetime:void 0}}parseSettlements(e,t){let i=[];for(let r=0;r<e.length;r++){let s=e[r],a=this.safeInteger(s,"ts"),n=this.safeList(s,"details",[]);for(let e=0;e<n.length;e++){let r=this.parseSettlement(n[e],t);i.push(this.extend(r,{timestamp:a,datetime:this.iso8601(a)}))}}return i}async fetchUnderlyingAssets(e={}){let t;if(await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchUnderlyingAssets",void 0,e),(void 0===t||"spot"===t)&&(t="option"),"option"!==t&&"swap"!==t&&"future"!==t)throw new s.NotSupported(this.id+" fetchUnderlyingAssets() supports contract markets only");let i={instType:this.convertToInstrumentType(t)},r=await this.publicGetPublicUnderlying(this.extend(i,e));return this.safeList(r,"data",[])[0]}async fetchGreeks(e,t={}){await this.loadMarkets();let i=this.market(e),r=i.id,s=r.split("-"),a={uly:i.info.uly,instFamily:i.info.instFamily,expTime:this.safeString(s,2)},n=await this.publicGetPublicOptSummary(this.extend(a,t)),o=this.safeList(n,"data",[]);for(let e=0;e<o.length;e++){let t=o[e];if(this.safeString(t,"instId")===r)return this.parseGreeks(t,i)}}parseGreeks(e,t){let i=this.safeInteger(e,"ts"),r=this.safeString(e,"instId");return{symbol:this.safeSymbol(r,t),timestamp:i,datetime:this.iso8601(i),delta:this.safeNumber(e,"delta"),gamma:this.safeNumber(e,"gamma"),theta:this.safeNumber(e,"theta"),vega:this.safeNumber(e,"vega"),rho:void 0,bidSize:void 0,askSize:void 0,bidImpliedVolatility:this.safeNumber(e,"bidVol"),askImpliedVolatility:this.safeNumber(e,"askVol"),markImpliedVolatility:this.safeNumber(e,"markVol"),bidPrice:void 0,askPrice:void 0,markPrice:void 0,lastPrice:void 0,underlyingPrice:void 0,info:e}}async closePosition(e,t,i={}){let r;await this.loadMarkets();let s=this.market(e),a=this.safeString(i,"clientOrderId"),n=this.safeString(i,"code");[r,i]=this.handleMarginModeAndParams("closePosition",i,"cross");let o={instId:s.id,mgnMode:r};if(void 0!==t&&("buy"===t?o.posSide="long":"sell"===t?o.posSide="short":o.posSide=t),void 0!==a&&(o.clOrdId=a),void 0!==n){let e=this.currency(n);o.ccy=e.id}let d=await this.privatePostTradeClosePosition(this.extend(o,i)),h=this.safeList(d,"data",[]),c=this.safeDict(h,0);return this.parseOrder(c,s)}async fetchOption(e,t={}){await this.loadMarkets();let i=this.market(e),r={instId:i.id},s=await this.publicGetMarketTicker(this.extend(r,t)),a=this.safeList(s,"data",[]),n=this.safeDict(a,0,{});return this.parseOption(n,void 0,i)}async fetchOptionChain(e,t={}){await this.loadMarkets();let i={uly:this.currency(e).code+"-USD",instType:"OPTION"},r=await this.publicGetMarketTickers(this.extend(i,t)),s=this.safeList(r,"data",[]);return this.parseOptionChain(s,void 0,"instId")}parseOption(e,t,i){let r=this.safeString(e,"instId");i=this.safeMarket(r,i);let s=this.safeInteger(e,"ts");return{info:e,currency:void 0,symbol:i.symbol,timestamp:s,datetime:this.iso8601(s),impliedVolatility:void 0,openInterest:void 0,bidPrice:this.safeNumber(e,"bidPx"),askPrice:this.safeNumber(e,"askPx"),midPrice:void 0,markPrice:void 0,lastPrice:this.safeNumber(e,"last"),underlyingPrice:void 0,change:void 0,percentage:void 0,baseVolume:this.safeNumber(e,"volCcy24h"),quoteVolume:void 0}}async fetchConvertQuote(e,t,i,r={}){await this.loadMarkets();let s={baseCcy:e.toUpperCase(),quoteCcy:t.toUpperCase(),rfqSzCcy:e.toUpperCase(),rfqSz:this.numberToString(i),side:"sell"},a=await this.privatePostAssetConvertEstimateQuote(this.extend(s,r)),n=this.safeList(a,"data",[]),o=this.safeDict(n,0,{}),d=this.safeString(o,"baseCcy",e),h=this.currency(d),c=this.safeString(o,"quoteCcy",t),l=this.currency(c);return this.parseConversion(o,h,l)}async createConvertTrade(e,t,i,r,s={}){await this.loadMarkets();let a={quoteId:e,baseCcy:t,quoteCcy:i,szCcy:t,sz:this.numberToString(r),side:"sell"},n=await this.privatePostAssetConvertTrade(this.extend(a,s)),o=this.safeList(n,"data",[]),d=this.safeDict(o,0,{}),h=this.safeString(d,"baseCcy",t),c=this.currency(h),l=this.safeString(d,"quoteCcy",i),f=this.currency(l);return this.parseConversion(d,c,f)}async fetchConvertTrade(e,t,i={}){let r,s;await this.loadMarkets();let a=await this.privateGetAssetConvertHistory(this.extend({clTReqId:e},i)),n=this.safeList(a,"data",[]),o=this.safeDict(n,0,{}),d=this.safeString(o,"baseCcy"),h=this.safeString(o,"quoteCcy");return void 0!==d&&(r=this.currency(d)),void 0!==h&&(s=this.currency(h)),this.parseConversion(o,r,s)}async fetchConvertTradeHistory(e,t,i,r={}){await this.loadMarkets();let s={};[s,r]=this.handleUntilOption("after",s,r),void 0!==t&&(s.before=t),void 0!==i&&(s.limit=i);let a=await this.privateGetAssetConvertHistory(this.extend(s,r)),n=this.safeList(a,"data",[]);return this.parseConversions(n,e,"baseCcy","quoteCcy",t,i)}parseConversion(e,t,i){let r=this.safeInteger2(e,"quoteTime","ts"),s=this.safeString(e,"baseCcy"),a=this.safeCurrencyCode(s,t),n=this.safeString(e,"quoteCcy"),o=this.safeCurrencyCode(n,i);return{info:e,timestamp:r,datetime:this.iso8601(r),id:this.safeStringN(e,["clQReqId","tradeId","quoteId"]),fromCurrency:a,fromAmount:this.safeNumber2(e,"baseSz","fillBaseSz"),toCurrency:o,toAmount:this.safeNumber2(e,"quoteSz","fillQuoteSz"),price:this.safeNumber2(e,"cnvtPx","fillPx"),fee:void 0}}async fetchConvertCurrencies(e={}){await this.loadMarkets();let t=await this.privateGetAssetConvertCurrencies(e),i={},r=this.safeList(t,"data",[]);for(let e=0;e<r.length;e++){let t=r[e],s=this.safeString(t,"ccy"),a=this.safeCurrencyCode(s);i[a]={info:t,id:s,code:a,networks:void 0,type:void 0,name:void 0,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{amount:{min:this.safeNumber(t,"min"),max:this.safeNumber(t,"max")},withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}},created:void 0}}return i}handleErrors(e,t,i,r,a,n,o,d,h){if(!o)return;let c=this.safeString(o,"code");if("0"!==c&&"2"!==c){let e=this.id+" "+n,t=this.safeList(o,"data",[]);for(let i=0;i<t.length;i++){let r=t[i],s=this.safeString(r,"sCode"),a=this.safeString(r,"sMsg");this.throwExactlyMatchedException(this.exceptions.exact,s,e),this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}throw this.throwExactlyMatchedException(this.exceptions.exact,c,e),new s.ExchangeError(e)}}async fetchMarginAdjustmentHistory(e,t,i,r,a={}){let n;await this.loadMarkets();let o=this.safeBool(a,"auto");if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchMarginAdjustmentHistory () requires a type argument");let d="add"===t,h=d?"160":"161";if(o){if(d)h="162";else throw new s.BadRequest(this.id+" cannot fetch margin adjustments for type "+t)}let c={subType:h,mgnMode:"isolated"},l=this.safeInteger(a,"until");a=this.omit(a,"until"),void 0!==i&&(c.startTime=i),void 0!==r&&(c.limit=r),void 0!==l&&(c.endTime=l);let f=this.milliseconds();if(void 0===i||i>f-6048e5)n=await this.privateGetAccountBills(this.extend(c,a));else if(i>f-7776e6)n=await this.privateGetAccountBillsArchive(this.extend(c,a));else throw new s.BadRequest(this.id+" fetchMarginAdjustmentHistory () cannot fetch margin adjustments older than 3 months");let u=this.safeList(n,"data"),g=this.parseMarginModifications(u);return this.filterBySymbolSinceLimit(g,e,i,r)}async fetchPositionsHistory(e,t,i,r={}){await this.loadMarkets();let s=this.safeString(r,"marginMode"),a=this.safeStringUpper(r,"instType");r=this.omit(r,["until","marginMode","instType"]),void 0===i&&(i=100);let n={limit:i};if(void 0!==e&&1===e.length){let t=this.market(e[0]);n.instId=t.id}void 0!==s&&(n.mgnMode=s),void 0!==a&&(n.instType=a);let o=await this.privateGetAccountPositionsHistory(this.extend(n,r)),d=this.safeList(o,"data"),h=this.parsePositions(d,e,r);return this.filterBySinceLimit(h,t,i)}async fetchLongShortRatioHistory(e,t,i,r,s={}){await this.loadMarkets();let a=this.market(e),n={instId:a.id},o=this.safeString2(s,"until","end");s=this.omit(s,"until"),void 0!==o&&(n.end=o),void 0!==t&&(n.period=t),void 0!==i&&(n.begin=i),void 0!==r&&(n.limit=r);let d=await this.publicGetRubikStatContractsLongShortAccountRatioContract(this.extend(n,s)),h=this.safeList(d,"data",[]),c=[];for(let e=0;e<h.length;e++){let t=h[e];c.push({timestamp:this.safeString(t,0),longShortRatio:this.safeString(t,1)})}return this.parseLongShortRatioHistory(c,a)}parseLongShortRatio(e,t){let i;let r=this.safeInteger(e,"timestamp");return void 0!==t&&(i=t.symbol),{info:e,symbol:i,timestamp:r,datetime:this.iso8601(r),timeframe:void 0,longShortRatio:this.safeNumber(e,"longShortRatio")}}}}}]);