"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[323],{6299:(e,t,r)=>{r.d(t,{A:()=>d});var i=r(2424),s=r(8119),a=r(6077),o=r(3675),n=r(5432);class d extends i.A{describe(){return this.deepExtend(super.describe(),{id:"bitget",name:"Bitget",countries:["SG"],version:"v2",rateLimit:50,certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!1,addMargin:!0,borrowCrossMargin:!0,borrowIsolatedMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!0,closePosition:!0,createConvertTrade:!0,createDepositAddress:!1,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!0,createOrderWithTakeProfitAndStopLoss:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopLossOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,createTakeProfitOrder:!0,createTrailingAmountOrder:!1,createTrailingPercentOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledAndClosedOrders:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchConvertCurrencies:!0,fetchConvertQuote:!0,fetchConvertTrade:!1,fetchConvertTradeHistory:!0,fetchCrossBorrowRate:!0,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingInterval:!0,fetchFundingIntervals:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchIsolatedBorrowRate:!0,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchLiquidations:!1,fetchLongShortRatio:!1,fetchLongShortRatioHistory:!0,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!0,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMarkPrice:!0,fetchMyLiquidations:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!1,fetchPosition:!0,fetchPositionHistory:"emulated",fetchPositionMode:!1,fetchPositions:!0,fetchPositionsHistory:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawAddresses:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!0,repayCrossMargin:!0,repayIsolatedMargin:!0,setLeverage:!0,setMargin:!1,setMarginMode:!0,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1m"},hostname:"bitget.com",urls:{logo:"https://github.com/user-attachments/assets/fbaa10cc-a277-441d-a5b7-997dd9a87658",api:{spot:"https://api.{hostname}",mix:"https://api.{hostname}",user:"https://api.{hostname}",p2p:"https://api.{hostname}",broker:"https://api.{hostname}",margin:"https://api.{hostname}",common:"https://api.{hostname}",tax:"https://api.{hostname}",convert:"https://api.{hostname}",copy:"https://api.{hostname}",earn:"https://api.{hostname}"},www:"https://www.bitget.com",doc:["https://www.bitget.com/api-doc/common/intro","https://www.bitget.com/api-doc/spot/intro","https://www.bitget.com/api-doc/contract/intro","https://www.bitget.com/api-doc/broker/intro","https://www.bitget.com/api-doc/margin/intro","https://www.bitget.com/api-doc/copytrading/intro","https://www.bitget.com/api-doc/earn/intro","https://bitgetlimited.github.io/apidoc/en/mix","https://bitgetlimited.github.io/apidoc/en/spot","https://bitgetlimited.github.io/apidoc/en/broker","https://bitgetlimited.github.io/apidoc/en/margin"],fees:"https://www.bitget.cc/zh-CN/rate?tab=1",referral:"https://www.bitget.com/expressly?languageType=0&channelCode=ccxt&vipCode=tg9j"},api:{public:{common:{get:{"v2/public/annoucements":1,"v2/public/time":1}},spot:{get:{"spot/v1/notice/queryAllNotices":1,"spot/v1/public/time":1,"spot/v1/public/currencies":6.6667,"spot/v1/public/products":1,"spot/v1/public/product":1,"spot/v1/market/ticker":1,"spot/v1/market/tickers":1,"spot/v1/market/fills":2,"spot/v1/market/fills-history":2,"spot/v1/market/candles":1,"spot/v1/market/depth":1,"spot/v1/market/spot-vip-level":2,"spot/v1/market/merge-depth":1,"spot/v1/market/history-candles":1,"spot/v1/public/loan/coinInfos":2,"spot/v1/public/loan/hour-interest":2,"v2/spot/public/coins":6.6667,"v2/spot/public/symbols":1,"v2/spot/market/vip-fee-rate":2,"v2/spot/market/tickers":1,"v2/spot/market/merge-depth":1,"v2/spot/market/orderbook":1,"v2/spot/market/candles":1,"v2/spot/market/history-candles":1,"v2/spot/market/fills":2,"v2/spot/market/fills-history":2}},mix:{get:{"mix/v1/market/contracts":1,"mix/v1/market/depth":1,"mix/v1/market/ticker":1,"mix/v1/market/tickers":1,"mix/v1/market/contract-vip-level":2,"mix/v1/market/fills":1,"mix/v1/market/fills-history":2,"mix/v1/market/candles":1,"mix/v1/market/index":1,"mix/v1/market/funding-time":1,"mix/v1/market/history-fundRate":1,"mix/v1/market/current-fundRate":1,"mix/v1/market/open-interest":1,"mix/v1/market/mark-price":1,"mix/v1/market/symbol-leverage":1,"mix/v1/market/queryPositionLever":1,"mix/v1/market/open-limit":1,"mix/v1/market/history-candles":1,"mix/v1/market/history-index-candles":1,"mix/v1/market/history-mark-candles":1,"mix/v1/market/merge-depth":1,"v2/mix/market/vip-fee-rate":2,"v2/mix/market/merge-depth":1,"v2/mix/market/ticker":1,"v2/mix/market/tickers":1,"v2/mix/market/fills":1,"v2/mix/market/fills-history":2,"v2/mix/market/candles":1,"v2/mix/market/history-candles":1,"v2/mix/market/history-index-candles":1,"v2/mix/market/history-mark-candles":1,"v2/mix/market/open-interest":1,"v2/mix/market/funding-time":1,"v2/mix/market/symbol-price":1,"v2/mix/market/history-fund-rate":1,"v2/mix/market/current-fund-rate":1,"v2/mix/market/contracts":1,"v2/mix/market/query-position-lever":2,"v2/mix/market/account-long-short":20}},margin:{get:{"margin/v1/cross/public/interestRateAndLimit":2,"margin/v1/isolated/public/interestRateAndLimit":2,"margin/v1/cross/public/tierData":2,"margin/v1/isolated/public/tierData":2,"margin/v1/public/currencies":1,"v2/margin/currencies":2,"v2/margin/market/long-short-ratio":20}},earn:{get:{"v2/earn/loan/public/coinInfos":2,"v2/earn/loan/public/hour-interest":2}}},private:{spot:{get:{"spot/v1/wallet/deposit-address":4,"spot/v1/wallet/withdrawal-list":1,"spot/v1/wallet/deposit-list":1,"spot/v1/account/getInfo":20,"spot/v1/account/assets":2,"spot/v1/account/assets-lite":2,"spot/v1/account/transferRecords":1,"spot/v1/convert/currencies":2,"spot/v1/convert/convert-record":2,"spot/v1/loan/ongoing-orders":2,"spot/v1/loan/repay-history":2,"spot/v1/loan/revise-history":2,"spot/v1/loan/borrow-history":2,"spot/v1/loan/debts":2,"v2/spot/trade/orderInfo":1,"v2/spot/trade/unfilled-orders":1,"v2/spot/trade/history-orders":1,"v2/spot/trade/fills":2,"v2/spot/trade/current-plan-order":1,"v2/spot/trade/history-plan-order":1,"v2/spot/account/info":20,"v2/spot/account/assets":2,"v2/spot/account/subaccount-assets":2,"v2/spot/account/bills":2,"v2/spot/account/transferRecords":1,"v2/account/funding-assets":2,"v2/account/bot-assets":2,"v2/account/all-account-balance":20,"v2/spot/wallet/deposit-address":2,"v2/spot/wallet/deposit-records":2,"v2/spot/wallet/withdrawal-records":2},post:{"spot/v1/wallet/transfer":4,"spot/v1/wallet/transfer-v2":4,"spot/v1/wallet/subTransfer":10,"spot/v1/wallet/withdrawal":4,"spot/v1/wallet/withdrawal-v2":4,"spot/v1/wallet/withdrawal-inner":4,"spot/v1/wallet/withdrawal-inner-v2":4,"spot/v1/account/sub-account-spot-assets":200,"spot/v1/account/bills":2,"spot/v1/trade/orders":2,"spot/v1/trade/batch-orders":4,"spot/v1/trade/cancel-order":2,"spot/v1/trade/cancel-order-v2":2,"spot/v1/trade/cancel-symbol-order":2,"spot/v1/trade/cancel-batch-orders":4,"spot/v1/trade/cancel-batch-orders-v2":4,"spot/v1/trade/orderInfo":1,"spot/v1/trade/open-orders":1,"spot/v1/trade/history":1,"spot/v1/trade/fills":1,"spot/v1/plan/placePlan":1,"spot/v1/plan/modifyPlan":1,"spot/v1/plan/cancelPlan":1,"spot/v1/plan/currentPlan":1,"spot/v1/plan/historyPlan":1,"spot/v1/plan/batchCancelPlan":2,"spot/v1/convert/quoted-price":4,"spot/v1/convert/trade":4,"spot/v1/loan/borrow":2,"spot/v1/loan/repay":2,"spot/v1/loan/revise-pledge":2,"spot/v1/trace/order/orderCurrentList":2,"spot/v1/trace/order/orderHistoryList":2,"spot/v1/trace/order/closeTrackingOrder":2,"spot/v1/trace/order/updateTpsl":2,"spot/v1/trace/order/followerEndOrder":2,"spot/v1/trace/order/spotInfoList":2,"spot/v1/trace/config/getTraderSettings":2,"spot/v1/trace/config/getFollowerSettings":2,"spot/v1/trace/user/myTraders":2,"spot/v1/trace/config/setFollowerConfig":2,"spot/v1/trace/user/myFollowers":2,"spot/v1/trace/config/setProductCode":2,"spot/v1/trace/user/removeTrader":2,"spot/v1/trace/getRemovableFollower":2,"spot/v1/trace/user/removeFollower":2,"spot/v1/trace/profit/totalProfitInfo":2,"spot/v1/trace/profit/totalProfitList":2,"spot/v1/trace/profit/profitHisList":2,"spot/v1/trace/profit/profitHisDetailList":2,"spot/v1/trace/profit/waitProfitDetailList":2,"spot/v1/trace/user/getTraderInfo":2,"v2/spot/trade/place-order":2,"v2/spot/trade/cancel-order":2,"v2/spot/trade/batch-orders":20,"v2/spot/trade/batch-cancel-order":2,"v2/spot/trade/cancel-symbol-order":4,"v2/spot/trade/place-plan-order":1,"v2/spot/trade/modify-plan-order":1,"v2/spot/trade/cancel-plan-order":1,"v2/spot/trade/batch-cancel-plan-order":2,"v2/spot/wallet/transfer":2,"v2/spot/wallet/subaccount-transfer":2,"v2/spot/wallet/withdrawal":2,"v2/spot/wallet/cancel-withdrawal":2,"v2/spot/wallet/modify-deposit-account":2}},mix:{get:{"mix/v1/account/account":2,"mix/v1/account/accounts":2,"mix/v1/position/singlePosition":2,"mix/v1/position/singlePosition-v2":2,"mix/v1/position/allPosition":4,"mix/v1/position/allPosition-v2":4,"mix/v1/position/history-position":1,"mix/v1/account/accountBill":2,"mix/v1/account/accountBusinessBill":4,"mix/v1/order/current":1,"mix/v1/order/marginCoinCurrent":1,"mix/v1/order/history":2,"mix/v1/order/historyProductType":4,"mix/v1/order/detail":2,"mix/v1/order/fills":2,"mix/v1/order/allFills":2,"mix/v1/plan/currentPlan":1,"mix/v1/plan/historyPlan":2,"mix/v1/trace/currentTrack":2,"mix/v1/trace/followerOrder":2,"mix/v1/trace/followerHistoryOrders":2,"mix/v1/trace/historyTrack":2,"mix/v1/trace/summary":1,"mix/v1/trace/profitSettleTokenIdGroup":1,"mix/v1/trace/profitDateGroupList":1,"mix/v1/trade/profitDateList":2,"mix/v1/trace/waitProfitDateList":1,"mix/v1/trace/traderSymbols":1,"mix/v1/trace/traderList":2,"mix/v1/trace/traderDetail":2,"mix/v1/trace/queryTraceConfig":2,"v2/mix/account/account":2,"v2/mix/account/accounts":2,"v2/mix/account/sub-account-assets":200,"v2/mix/account/open-count":2,"v2/mix/account/bill":2,"v2/mix/market/query-position-lever":2,"v2/mix/position/single-position":2,"v2/mix/position/all-position":4,"v2/mix/position/history-position":1,"v2/mix/order/detail":2,"v2/mix/order/fills":2,"v2/mix/order/fill-history":2,"v2/mix/order/orders-pending":2,"v2/mix/order/orders-history":2,"v2/mix/order/orders-plan-pending":2,"v2/mix/order/orders-plan-history":2,"v2/mix/market/position-long-short":20},post:{"mix/v1/account/sub-account-contract-assets":200,"mix/v1/account/open-count":1,"mix/v1/account/setLeverage":4,"mix/v1/account/setMargin":4,"mix/v1/account/setMarginMode":4,"mix/v1/account/setPositionMode":4,"mix/v1/order/placeOrder":2,"mix/v1/order/batch-orders":2,"mix/v1/order/cancel-order":2,"mix/v1/order/cancel-batch-orders":2,"mix/v1/order/modifyOrder":2,"mix/v1/order/cancel-symbol-orders":2,"mix/v1/order/cancel-all-orders":2,"mix/v1/order/close-all-positions":20,"mix/v1/plan/placePlan":2,"mix/v1/plan/modifyPlan":2,"mix/v1/plan/modifyPlanPreset":2,"mix/v1/plan/placeTPSL":2,"mix/v1/plan/placeTrailStop":2,"mix/v1/plan/placePositionsTPSL":2,"mix/v1/plan/modifyTPSLPlan":2,"mix/v1/plan/cancelPlan":2,"mix/v1/plan/cancelSymbolPlan":2,"mix/v1/plan/cancelAllPlan":2,"mix/v1/trace/closeTrackOrder":2,"mix/v1/trace/modifyTPSL":2,"mix/v1/trace/closeTrackOrderBySymbol":2,"mix/v1/trace/setUpCopySymbols":2,"mix/v1/trace/followerSetBatchTraceConfig":2,"mix/v1/trace/followerCloseByTrackingNo":2,"mix/v1/trace/followerCloseByAll":2,"mix/v1/trace/followerSetTpsl":2,"mix/v1/trace/cancelCopyTrader":4,"mix/v1/trace/traderUpdateConfig":2,"mix/v1/trace/myTraderList":2,"mix/v1/trace/myFollowerList":2,"mix/v1/trace/removeFollower":2,"mix/v1/trace/public/getFollowerConfig":2,"mix/v1/trace/report/order/historyList":2,"mix/v1/trace/report/order/currentList":2,"mix/v1/trace/queryTraderTpslRatioConfig":2,"mix/v1/trace/traderUpdateTpslRatioConfig":2,"v2/mix/account/set-leverage":4,"v2/mix/account/set-margin":4,"v2/mix/account/set-margin-mode":4,"v2/mix/account/set-position-mode":4,"v2/mix/order/place-order":2,"v2/mix/order/click-backhand":20,"v2/mix/order/batch-place-order":20,"v2/mix/order/modify-order":2,"v2/mix/order/cancel-order":2,"v2/mix/order/batch-cancel-orders":2,"v2/mix/order/close-positions":20,"v2/mix/order/place-tpsl-order":2,"v2/mix/order/place-plan-order":2,"v2/mix/order/modify-tpsl-order":2,"v2/mix/order/modify-plan-order":2,"v2/mix/order/cancel-plan-order":2}},user:{get:{"user/v1/fee/query":2,"user/v1/sub/virtual-list":2,"user/v1/sub/virtual-api-list":2,"user/v1/tax/spot-record":1,"user/v1/tax/future-record":1,"user/v1/tax/margin-record":1,"user/v1/tax/p2p-record":1,"v2/user/virtual-subaccount-list":2,"v2/user/virtual-subaccount-apikey-list":2},post:{"user/v1/sub/virtual-create":4,"user/v1/sub/virtual-modify":4,"user/v1/sub/virtual-api-batch-create":20,"user/v1/sub/virtual-api-create":4,"user/v1/sub/virtual-api-modify":4,"v2/user/create-virtual-subaccount":4,"v2/user/modify-virtual-subaccount":4,"v2/user/batch-create-subaccount-and-apikey":20,"v2/user/create-virtual-subaccount-apikey":4,"v2/user/modify-virtual-subaccount-apikey":4}},p2p:{get:{"p2p/v1/merchant/merchantList":2,"p2p/v1/merchant/merchantInfo":2,"p2p/v1/merchant/advList":2,"p2p/v1/merchant/orderList":2,"v2/p2p/merchantList":2,"v2/p2p/merchantInfo":2,"v2/p2p/orderList":2,"v2/p2p/advList":2}},broker:{get:{"broker/v1/account/info":2,"broker/v1/account/sub-list":20,"broker/v1/account/sub-email":20,"broker/v1/account/sub-spot-assets":2,"broker/v1/account/sub-future-assets":2,"broker/v1/account/subaccount-transfer":1,"broker/v1/account/subaccount-deposit":1,"broker/v1/account/subaccount-withdrawal":1,"broker/v1/account/sub-api-list":2,"v2/broker/account/info":2,"v2/broker/account/subaccount-list":20,"v2/broker/account/subaccount-email":2,"v2/broker/account/subaccount-spot-assets":2,"v2/broker/account/subaccount-future-assets":2,"v2/broker/manage/subaccount-apikey-list":2},post:{"broker/v1/account/sub-create":20,"broker/v1/account/sub-modify":20,"broker/v1/account/sub-modify-email":20,"broker/v1/account/sub-address":2,"broker/v1/account/sub-withdrawal":2,"broker/v1/account/sub-auto-transfer":4,"broker/v1/account/sub-api-create":2,"broker/v1/account/sub-api-modify":2,"v2/broker/account/modify-subaccount-email":2,"v2/broker/account/create-subaccount":20,"v2/broker/account/modify-subaccount":20,"v2/broker/account/subaccount-address":2,"v2/broker/account/subaccount-withdrawal":2,"v2/broker/account/set-subaccount-autotransfer":2,"v2/broker/manage/create-subaccount-apikey":2,"v2/broker/manage/modify-subaccount-apikey":2}},margin:{get:{"margin/v1/cross/account/riskRate":2,"margin/v1/cross/account/maxTransferOutAmount":2,"margin/v1/isolated/account/maxTransferOutAmount":2,"margin/v1/isolated/order/openOrders":2,"margin/v1/isolated/order/history":2,"margin/v1/isolated/order/fills":2,"margin/v1/isolated/loan/list":2,"margin/v1/isolated/repay/list":2,"margin/v1/isolated/interest/list":2,"margin/v1/isolated/liquidation/list":2,"margin/v1/isolated/fin/list":2,"margin/v1/cross/order/openOrders":2,"margin/v1/cross/order/history":2,"margin/v1/cross/order/fills":2,"margin/v1/cross/loan/list":2,"margin/v1/cross/repay/list":2,"margin/v1/cross/interest/list":2,"margin/v1/cross/liquidation/list":2,"margin/v1/cross/fin/list":2,"margin/v1/cross/account/assets":2,"margin/v1/isolated/account/assets":2,"v2/margin/crossed/borrow-history":2,"v2/margin/crossed/repay-history":2,"v2/margin/crossed/interest-history":2,"v2/margin/crossed/liquidation-history":2,"v2/margin/crossed/financial-records":2,"v2/margin/crossed/account/assets":2,"v2/margin/crossed/account/risk-rate":2,"v2/margin/crossed/account/max-borrowable-amount":2,"v2/margin/crossed/account/max-transfer-out-amount":2,"v2/margin/crossed/interest-rate-and-limit":2,"v2/margin/crossed/tier-data":2,"v2/margin/crossed/open-orders":2,"v2/margin/crossed/history-orders":2,"v2/margin/crossed/fills":2,"v2/margin/isolated/borrow-history":2,"v2/margin/isolated/repay-history":2,"v2/margin/isolated/interest-history":2,"v2/margin/isolated/liquidation-history":2,"v2/margin/isolated/financial-records":2,"v2/margin/isolated/account/assets":2,"v2/margin/isolated/account/risk-rate":2,"v2/margin/isolated/account/max-borrowable-amount":2,"v2/margin/isolated/account/max-transfer-out-amount":2,"v2/margin/isolated/interest-rate-and-limit":2,"v2/margin/isolated/tier-data":2,"v2/margin/isolated/open-orders":2,"v2/margin/isolated/history-orders":2,"v2/margin/isolated/fills":2},post:{"margin/v1/cross/account/borrow":2,"margin/v1/isolated/account/borrow":2,"margin/v1/cross/account/repay":2,"margin/v1/isolated/account/repay":2,"margin/v1/isolated/account/riskRate":2,"margin/v1/cross/account/maxBorrowableAmount":2,"margin/v1/isolated/account/maxBorrowableAmount":2,"margin/v1/isolated/account/flashRepay":2,"margin/v1/isolated/account/queryFlashRepayStatus":2,"margin/v1/cross/account/flashRepay":2,"margin/v1/cross/account/queryFlashRepayStatus":2,"margin/v1/isolated/order/placeOrder":4,"margin/v1/isolated/order/batchPlaceOrder":4,"margin/v1/isolated/order/cancelOrder":2,"margin/v1/isolated/order/batchCancelOrder":2,"margin/v1/cross/order/placeOrder":2,"margin/v1/cross/order/batchPlaceOrder":2,"margin/v1/cross/order/cancelOrder":2,"margin/v1/cross/order/batchCancelOrder":2,"v2/margin/crossed/account/borrow":2,"v2/margin/crossed/account/repay":2,"v2/margin/crossed/account/flash-repay":2,"v2/margin/crossed/account/query-flash-repay-status":2,"v2/margin/crossed/place-order":2,"v2/margin/crossed/batch-place-order":2,"v2/margin/crossed/cancel-order":2,"v2/margin/crossed/batch-cancel-order":2,"v2/margin/isolated/account/borrow":2,"v2/margin/isolated/account/repay":2,"v2/margin/isolated/account/flash-repay":2,"v2/margin/isolated/account/query-flash-repay-status":2,"v2/margin/isolated/place-order":2,"v2/margin/isolated/batch-place-order":2,"v2/margin/isolated/cancel-order":2,"v2/margin/isolated/batch-cancel-order":2}},copy:{get:{"v2/copy/mix-trader/order-current-track":2,"v2/copy/mix-trader/order-history-track":2,"v2/copy/mix-trader/order-total-detail":2,"v2/copy/mix-trader/profit-history-summarys":1,"v2/copy/mix-trader/profit-history-details":1,"v2/copy/mix-trader/profit-details":1,"v2/copy/mix-trader/profits-group-coin-date":1,"v2/copy/mix-trader/config-query-symbols":1,"v2/copy/mix-trader/config-query-followers":2,"v2/copy/mix-follower/query-current-orders":2,"v2/copy/mix-follower/query-history-orders":1,"v2/copy/mix-follower/query-settings":2,"v2/copy/mix-follower/query-traders":2,"v2/copy/mix-follower/query-quantity-limit":2,"v2/copy/mix-broker/query-traders":2,"v2/copy/mix-broker/query-history-traces":2,"v2/copy/mix-broker/query-current-traces":2,"v2/copy/spot-trader/profit-summarys":2,"v2/copy/spot-trader/profit-history-details":2,"v2/copy/spot-trader/profit-details":2,"v2/copy/spot-trader/order-total-detail":2,"v2/copy/spot-trader/order-history-track":2,"v2/copy/spot-trader/order-current-track":2,"v2/copy/spot-trader/config-query-settings":2,"v2/copy/spot-trader/config-query-followers":2,"v2/copy/spot-follower/query-traders":2,"v2/copy/spot-follower/query-trader-symbols":2,"v2/copy/spot-follower/query-settings":2,"v2/copy/spot-follower/query-history-orders":2,"v2/copy/spot-follower/query-current-orders":2},post:{"v2/copy/mix-trader/order-modify-tpsl":2,"v2/copy/mix-trader/order-close-positions":2,"v2/copy/mix-trader/config-setting-symbols":2,"v2/copy/mix-trader/config-setting-base":2,"v2/copy/mix-trader/config-remove-follower":2,"v2/copy/mix-follower/setting-tpsl":1,"v2/copy/mix-follower/settings":2,"v2/copy/mix-follower/close-positions":2,"v2/copy/mix-follower/cancel-trader":4,"v2/copy/spot-trader/order-modify-tpsl":2,"v2/copy/spot-trader/order-close-tracking":2,"v2/copy/spot-trader/config-setting-symbols":2,"v2/copy/spot-trader/config-remove-follower":2,"v2/copy/spot-follower/stop-order":2,"v2/copy/spot-follower/settings":2,"v2/copy/spot-follower/setting-tpsl":2,"v2/copy/spot-follower/order-close-tracking":2,"v2/copy/spot-follower/cancel-trader":2}},tax:{get:{"v2/tax/spot-record":20,"v2/tax/future-record":20,"v2/tax/margin-record":20,"v2/tax/p2p-record":20}},convert:{get:{"v2/convert/currencies":2,"v2/convert/quoted-price":2,"v2/convert/convert-record":2,"v2/convert/bgb-convert-coin-list":2,"v2/convert/bgb-convert-records":2},post:{"v2/convert/trade":2,"v2/convert/bgb-convert":2}},earn:{get:{"v2/earn/savings/product":2,"v2/earn/savings/account":2,"v2/earn/savings/assets":2,"v2/earn/savings/records":2,"v2/earn/savings/subscribe-info":2,"v2/earn/savings/subscribe-result":2,"v2/earn/savings/redeem-result":2,"v2/earn/sharkfin/product":2,"v2/earn/sharkfin/account":2,"v2/earn/sharkfin/assets":2,"v2/earn/sharkfin/records":2,"v2/earn/sharkfin/subscribe-info":2,"v2/earn/sharkfin/subscribe-result":4,"v2/earn/loan/ongoing-orders":2,"v2/earn/loan/repay-history":2,"v2/earn/loan/revise-history":2,"v2/earn/loan/borrow-history":2,"v2/earn/loan/debts":2,"v2/earn/loan/reduces":2,"v2/earn/account/assets":2},post:{"v2/earn/savings/subscribe":2,"v2/earn/savings/redeem":2,"v2/earn/sharkfin/subscribe":2,"v2/earn/loan/borrow":2,"v2/earn/loan/repay":2,"v2/earn/loan/revise-pledge":2}},common:{get:{"v2/common/trade-rate":2}}}},fees:{spot:{taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")},swap:{taker:this.parseNumber("0.0006"),maker:this.parseNumber("0.0004")}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:s.ExchangeError,"failure to get a peer from the ring-balancer":s.ExchangeNotAvailable,4010:s.PermissionDenied,4001:s.ExchangeError,4002:s.ExchangeError,30001:s.AuthenticationError,30002:s.AuthenticationError,30003:s.AuthenticationError,30004:s.AuthenticationError,30005:s.InvalidNonce,30006:s.AuthenticationError,30007:s.BadRequest,30008:s.RequestTimeout,30009:s.ExchangeError,30010:s.AuthenticationError,30011:s.PermissionDenied,30012:s.AuthenticationError,30013:s.AuthenticationError,30014:s.DDoSProtection,30015:s.AuthenticationError,30016:s.ExchangeError,30017:s.ExchangeError,30018:s.ExchangeError,30019:s.ExchangeNotAvailable,30020:s.BadRequest,30021:s.BadRequest,30022:s.PermissionDenied,30023:s.BadRequest,30024:s.BadSymbol,30025:s.BadRequest,30026:s.DDoSProtection,30027:s.AuthenticationError,30028:s.PermissionDenied,30029:s.AccountSuspended,30030:s.ExchangeError,30031:s.BadRequest,30032:s.BadSymbol,30033:s.BadRequest,30034:s.ExchangeError,30035:s.ExchangeError,30036:s.ExchangeError,30037:s.ExchangeNotAvailable,30038:s.OnMaintenance,32001:s.AccountSuspended,32002:s.PermissionDenied,32003:s.CancelPending,32004:s.ExchangeError,32005:s.InvalidOrder,32006:s.InvalidOrder,32007:s.InvalidOrder,32008:s.InvalidOrder,32009:s.InvalidOrder,32010:s.ExchangeError,32011:s.ExchangeError,32012:s.ExchangeError,32013:s.ExchangeError,32014:s.ExchangeError,32015:s.ExchangeError,32016:s.ExchangeError,32017:s.ExchangeError,32018:s.ExchangeError,32019:s.ExchangeError,32020:s.ExchangeError,32021:s.ExchangeError,32022:s.ExchangeError,32023:s.ExchangeError,32024:s.ExchangeError,32025:s.ExchangeError,32026:s.ExchangeError,32027:s.ExchangeError,32028:s.AccountSuspended,32029:s.ExchangeError,32030:s.InvalidOrder,32031:s.ArgumentsRequired,32038:s.AuthenticationError,32040:s.ExchangeError,32044:s.ExchangeError,32045:s.ExchangeError,32046:s.ExchangeError,32047:s.ExchangeError,32048:s.InvalidOrder,32049:s.ExchangeError,32050:s.InvalidOrder,32051:s.InvalidOrder,32052:s.ExchangeError,32053:s.ExchangeError,32057:s.ExchangeError,32054:s.ExchangeError,32055:s.InvalidOrder,32056:s.ExchangeError,32058:s.ExchangeError,32059:s.InvalidOrder,32060:s.InvalidOrder,32061:s.InvalidOrder,32062:s.InvalidOrder,32063:s.InvalidOrder,32064:s.ExchangeError,32065:s.ExchangeError,32066:s.ExchangeError,32067:s.ExchangeError,32068:s.ExchangeError,32069:s.ExchangeError,32070:s.ExchangeError,32071:s.ExchangeError,32072:s.ExchangeError,32073:s.ExchangeError,32074:s.ExchangeError,32075:s.ExchangeError,32076:s.ExchangeError,32077:s.ExchangeError,32078:s.ExchangeError,32079:s.ExchangeError,32080:s.ExchangeError,32083:s.ExchangeError,33001:s.PermissionDenied,33002:s.AccountSuspended,33003:s.InsufficientFunds,33004:s.ExchangeError,33005:s.ExchangeError,33006:s.ExchangeError,33007:s.ExchangeError,33008:s.InsufficientFunds,33009:s.ExchangeError,33010:s.ExchangeError,33011:s.ExchangeError,33012:s.ExchangeError,33013:s.InvalidOrder,33014:s.OrderNotFound,33015:s.InvalidOrder,33016:s.ExchangeError,33017:s.InsufficientFunds,33018:s.ExchangeError,33020:s.ExchangeError,33021:s.BadRequest,33022:s.InvalidOrder,33023:s.ExchangeError,33024:s.InvalidOrder,33025:s.InvalidOrder,33026:s.ExchangeError,33027:s.InvalidOrder,33028:s.InvalidOrder,33029:s.InvalidOrder,33034:s.ExchangeError,33035:s.ExchangeError,33036:s.ExchangeError,33037:s.ExchangeError,33038:s.ExchangeError,33039:s.ExchangeError,33040:s.ExchangeError,33041:s.ExchangeError,33042:s.ExchangeError,33043:s.ExchangeError,33044:s.ExchangeError,33045:s.ExchangeError,33046:s.ExchangeError,33047:s.ExchangeError,33048:s.ExchangeError,33049:s.ExchangeError,33050:s.ExchangeError,33051:s.ExchangeError,33059:s.BadRequest,33060:s.BadRequest,33061:s.ExchangeError,33062:s.ExchangeError,33063:s.ExchangeError,33064:s.ExchangeError,33065:s.ExchangeError,21009:s.ExchangeError,34001:s.PermissionDenied,34002:s.InvalidAddress,34003:s.ExchangeError,34004:s.ExchangeError,34005:s.ExchangeError,34006:s.ExchangeError,34007:s.ExchangeError,34008:s.InsufficientFunds,34009:s.ExchangeError,34010:s.ExchangeError,34011:s.ExchangeError,34012:s.ExchangeError,34013:s.ExchangeError,34014:s.ExchangeError,34015:s.ExchangeError,34016:s.PermissionDenied,34017:s.AccountSuspended,34018:s.AuthenticationError,34019:s.PermissionDenied,34020:s.PermissionDenied,34021:s.InvalidAddress,34022:s.ExchangeError,34023:s.PermissionDenied,34026:s.ExchangeError,34036:s.ExchangeError,34037:s.ExchangeError,34038:s.ExchangeError,34039:s.ExchangeError,35001:s.ExchangeError,35002:s.ExchangeError,35003:s.ExchangeError,35004:s.ExchangeError,35005:s.AuthenticationError,35008:s.InvalidOrder,35010:s.InvalidOrder,35012:s.InvalidOrder,35014:s.InvalidOrder,35015:s.InvalidOrder,35017:s.ExchangeError,35019:s.InvalidOrder,35020:s.InvalidOrder,35021:s.InvalidOrder,35022:s.ExchangeError,35024:s.ExchangeError,35025:s.InsufficientFunds,35026:s.ExchangeError,35029:s.OrderNotFound,35030:s.InvalidOrder,35031:s.InvalidOrder,35032:s.ExchangeError,35037:s.ExchangeError,35039:s.ExchangeError,35040:s.InvalidOrder,35044:s.ExchangeError,35046:s.InsufficientFunds,35047:s.InsufficientFunds,35048:s.ExchangeError,35049:s.InvalidOrder,35050:s.InvalidOrder,35052:s.InsufficientFunds,35053:s.ExchangeError,35055:s.InsufficientFunds,35057:s.ExchangeError,35058:s.ExchangeError,35059:s.BadRequest,35060:s.BadRequest,35061:s.BadRequest,35062:s.InvalidOrder,35063:s.InvalidOrder,35064:s.InvalidOrder,35066:s.InvalidOrder,35067:s.InvalidOrder,35068:s.InvalidOrder,35069:s.InvalidOrder,35070:s.InvalidOrder,35071:s.InvalidOrder,35072:s.InvalidOrder,35073:s.InvalidOrder,35074:s.InvalidOrder,35075:s.InvalidOrder,35076:s.InvalidOrder,35077:s.InvalidOrder,35078:s.InvalidOrder,35079:s.InvalidOrder,35080:s.InvalidOrder,35081:s.InvalidOrder,35082:s.InvalidOrder,35083:s.InvalidOrder,35084:s.InvalidOrder,35085:s.InvalidOrder,35086:s.InvalidOrder,35087:s.InvalidOrder,35088:s.InvalidOrder,35089:s.InvalidOrder,35090:s.ExchangeError,35091:s.ExchangeError,35092:s.ExchangeError,35093:s.ExchangeError,35094:s.ExchangeError,35095:s.BadRequest,35096:s.ExchangeError,35097:s.ExchangeError,35098:s.ExchangeError,35099:s.ExchangeError,36001:s.BadRequest,36002:s.BadRequest,36005:s.ExchangeError,36101:s.AuthenticationError,36102:s.PermissionDenied,36103:s.AccountSuspended,36104:s.PermissionDenied,36105:s.PermissionDenied,36106:s.AccountSuspended,36107:s.PermissionDenied,36108:s.InsufficientFunds,36109:s.PermissionDenied,36201:s.PermissionDenied,36202:s.PermissionDenied,36203:s.InvalidOrder,36204:s.ExchangeError,36205:s.BadRequest,36206:s.BadRequest,36207:s.InvalidOrder,36208:s.InvalidOrder,36209:s.InvalidOrder,36210:s.InvalidOrder,36211:s.InvalidOrder,36212:s.InvalidOrder,36213:s.InvalidOrder,36214:s.ExchangeError,36216:s.OrderNotFound,36217:s.InvalidOrder,36218:s.InvalidOrder,36219:s.InvalidOrder,36220:s.InvalidOrder,36221:s.InvalidOrder,36222:s.InvalidOrder,36223:s.InvalidOrder,36224:s.InvalidOrder,36225:s.InvalidOrder,36226:s.InvalidOrder,36227:s.InvalidOrder,36228:s.InvalidOrder,36229:s.InvalidOrder,36230:s.InvalidOrder,400:s.BadRequest,401:s.AuthenticationError,403:s.PermissionDenied,404:s.BadRequest,405:s.BadRequest,415:s.BadRequest,429:s.DDoSProtection,500:s.ExchangeNotAvailable,1001:s.RateLimitExceeded,1002:s.ExchangeError,1003:s.ExchangeError,40001:s.AuthenticationError,40002:s.AuthenticationError,40003:s.AuthenticationError,40004:s.InvalidNonce,40005:s.InvalidNonce,40006:s.AuthenticationError,40007:s.BadRequest,40008:s.InvalidNonce,40009:s.AuthenticationError,40010:s.AuthenticationError,40011:s.AuthenticationError,40012:s.AuthenticationError,40013:s.ExchangeError,40014:s.PermissionDenied,40015:s.ExchangeError,40016:s.PermissionDenied,40017:s.ExchangeError,40018:s.PermissionDenied,40019:s.BadRequest,40031:s.AccountSuspended,40037:s.AuthenticationError,40102:s.BadRequest,40103:s.BadRequest,40104:s.ExchangeError,40105:s.ExchangeError,40106:s.ExchangeError,40107:s.ExchangeError,40108:s.InvalidOrder,40109:s.OrderNotFound,40200:s.OnMaintenance,40201:s.InvalidOrder,40202:s.ExchangeError,40203:s.BadRequest,40204:s.BadRequest,40205:s.BadRequest,40206:s.BadRequest,40207:s.BadRequest,40208:s.BadRequest,40209:s.BadRequest,40300:s.ExchangeError,40301:s.PermissionDenied,40302:s.BadRequest,40303:s.BadRequest,40304:s.BadRequest,40305:s.BadRequest,40306:s.ExchangeError,40308:s.OnMaintenance,40309:s.BadSymbol,40400:s.ExchangeError,40401:s.ExchangeError,40402:s.BadRequest,40403:s.BadRequest,40404:s.BadRequest,40405:s.BadRequest,40406:s.BadRequest,40407:s.ExchangeError,40408:s.ExchangeError,40409:s.ExchangeError,40500:s.InvalidOrder,40501:s.ExchangeError,40502:s.ExchangeError,40503:s.ExchangeError,40504:s.ExchangeError,40505:s.ExchangeError,40506:s.AuthenticationError,40507:s.AuthenticationError,40508:s.ExchangeError,40509:s.ExchangeError,40600:s.ExchangeError,40601:s.ExchangeError,40602:s.ExchangeError,40603:s.ExchangeError,40604:s.ExchangeNotAvailable,40605:s.ExchangeError,40606:s.ExchangeError,40607:s.ExchangeError,40608:s.ExchangeError,40609:s.ExchangeError,40700:s.BadRequest,40701:s.ExchangeError,40702:s.ExchangeError,40703:s.ExchangeError,40704:s.ExchangeError,40705:s.BadRequest,40706:s.InvalidOrder,40707:s.BadRequest,40708:s.BadRequest,40709:s.ExchangeError,40710:s.ExchangeError,40711:s.InsufficientFunds,40712:s.InsufficientFunds,40713:s.ExchangeError,40714:s.ExchangeError,40762:s.InsufficientFunds,40768:s.OrderNotFound,40808:s.InvalidOrder,41103:s.InvalidOrder,41114:s.OnMaintenance,43011:s.InvalidOrder,43001:s.OrderNotFound,43012:s.InsufficientFunds,43025:s.InvalidOrder,43115:s.OnMaintenance,45110:s.InvalidOrder,"invalid sign":s.AuthenticationError,"invalid currency":s.BadSymbol,"invalid symbol":s.BadSymbol,"invalid period":s.BadRequest,"invalid user":s.ExchangeError,"invalid amount":s.InvalidOrder,"invalid type":s.InvalidOrder,"invalid orderId":s.InvalidOrder,"invalid record":s.ExchangeError,"invalid accountId":s.BadRequest,"invalid address":s.BadRequest,"accesskey not null":s.AuthenticationError,"illegal accesskey":s.AuthenticationError,"sign not null":s.AuthenticationError,"req_time is too much difference from server time":s.InvalidNonce,"permissions not right":s.PermissionDenied,"illegal sign invalid":s.AuthenticationError,"user locked":s.AccountSuspended,"Request Frequency Is Too High":s.RateLimitExceeded,"more than a daily rate of cash":s.BadRequest,"more than the maximum daily withdrawal amount":s.BadRequest,"need to bind email or mobile":s.ExchangeError,"user forbid":s.PermissionDenied,"User Prohibited Cash Withdrawal":s.PermissionDenied,"Cash Withdrawal Is Less Than The Minimum Value":s.BadRequest,"Cash Withdrawal Is More Than The Maximum Value":s.BadRequest,"the account with in 24 hours ban coin":s.PermissionDenied,"order cancel fail":s.BadRequest,"base symbol error":s.BadSymbol,"base date error":s.ExchangeError,"api signature not valid":s.AuthenticationError,"gateway internal error":s.ExchangeError,"audit failed":s.ExchangeError,"order queryorder invalid":s.BadRequest,"market no need price":s.InvalidOrder,"limit need price":s.InvalidOrder,"userid not equal to account_id":s.ExchangeError,"your balance is low":s.InsufficientFunds,"address invalid cointype":s.ExchangeError,"system exception":s.ExchangeError,50003:s.ExchangeError,50004:s.BadSymbol,50006:s.PermissionDenied,50007:s.PermissionDenied,50008:s.RequestTimeout,50009:s.RateLimitExceeded,50010:s.ExchangeError,50014:s.InvalidOrder,50015:s.InvalidOrder,50016:s.InvalidOrder,50017:s.InvalidOrder,50018:s.InvalidOrder,50019:s.InvalidOrder,50020:s.InsufficientFunds,50021:s.InvalidOrder,50026:s.InvalidOrder,"invalid order query time":s.ExchangeError,"invalid start time":s.BadRequest,"invalid end time":s.BadRequest,20003:s.ExchangeError,"01001":s.ExchangeError,43111:s.PermissionDenied},broad:{"invalid size, valid range":s.ExchangeError}},precisionMode:o.kb,commonCurrencies:{APX:"AstroPepeX",DEGEN:"DegenReborn",JADE:"Jade Protocol",OMNI:"omni",TONCOIN:"TON"},options:{timeDifference:0,adjustForTimeDifference:!1,timeframes:{spot:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1h","4h":"4h","6h":"6Hutc","12h":"12Hutc","1d":"1Dutc","3d":"3Dutc","1w":"1Wutc","1M":"1Mutc"},swap:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","6h":"6Hutc","12h":"12Hutc","1d":"1Dutc","3d":"3Dutc","1w":"1Wutc","1M":"1Mutc"}},fetchMarkets:["spot","swap"],defaultType:"spot",defaultSubType:"linear",createMarketBuyOrderRequiresPrice:!0,broker:"p4sve",withdraw:{fillResponseFromRequest:!0},fetchOHLCV:{spot:{method:"publicSpotGetV2SpotMarketCandles"},swap:{method:"publicMixGetV2MixMarketCandles"},maxDaysPerTimeframe:{"1m":30,"3m":30,"5m":30,"10m":52,"15m":52,"30m":52,"1h":83,"2h":120,"4h":240,"6h":360,"12h":360,"1d":360,"3d":1e3,"1w":1e3,"1M":1e3}},fetchTrades:{spot:{method:"publicSpotGetV2SpotMarketFillsHistory"},swap:{method:"publicMixGetV2MixMarketFillsHistory"}},accountsByType:{spot:"spot",cross:"crossed_margin",isolated:"isolated_margin",swap:"usdt_futures",usdc_swap:"usdc_futures",future:"coin_futures",p2p:"p2p"},accountsById:{spot:"spot",crossed_margin:"cross",isolated_margin:"isolated",usdt_futures:"swap",usdc_futures:"usdc_swap",coin_futures:"future",p2p:"p2p"},sandboxMode:!1,networks:{TRC20:"TRC20",ERC20:"ERC20",BEP20:"BSC",BSC:"BEP20",ATOM:"ATOM",ACA:"AcalaToken",APT:"Aptos",ARBONE:"ArbitrumOne",ARBNOVA:"ArbitrumNova",AVAXC:"C-Chain",AVAXX:"X-Chain",AR:"Arweave",BCH:"BCH",BCHA:"BCHA",BITCI:"BITCI",BTC:"BTC",CELO:"CELO",CSPR:"CSPR",ADA:"Cardano",CHZ:"ChilizChain",CRC20:"CronosChain",DOGE:"DOGE",DOT:"DOT",EOS:"EOS",ETHF:"ETHFAIR",ETHW:"ETHW",ETC:"ETC",EGLD:"Elrond",FIL:"FIL",FIO:"FIO",FTM:"Fantom",HRC20:"HECO",ONE:"Harmony",HNT:"Helium",ICP:"ICP",IOTX:"IoTeX",KARDIA:"KAI",KAVA:"KAVA",KDA:"KDA",KLAY:"Klaytn",KSM:"Kusama",LAT:"LAT",LTC:"LTC",MINA:"MINA",MOVR:"MOVR",METIS:"MetisToken",GLMR:"Moonbeam",NEAR:"NEARProtocol",NULS:"NULS",OASYS:"OASYS",OASIS:"ROSE",OMNI:"OMNI",ONT:"Ontology",OPTIMISM:"Optimism",OSMO:"Osmosis",POKT:"PocketNetwork",MATIC:"Polygon",QTUM:"QTUM",REEF:"REEF",SOL:"SOL",SYS:"SYS",SXP:"Solar",XYM:"Symbol",TON:"TON",TT:"TT",TLOS:"Telos",THETA:"ThetaToken",VITE:"VITE",WAVES:"WAVES",WAX:"WAXP",WEMIX:"WEMIXMainnet",XDC:"XDCNetworkXDC",XRP:"XRP",FET:"FETCH",NEM:"NEM",REI:"REINetwork",ZIL:"ZIL",ABBC:"ABBCCoin",RSK:"RSK",AZERO:"AZERO",TRC10:"TRC10",JUNO:"JUNO",ZKSYNC:"zkSyncEra",STARKNET:"Starknet",VIC:"VICTION"},networksById:{},fetchPositions:{method:"privateMixGetV2MixPositionAllPosition"},defaultTimeInForce:"GTC"},features:{spot:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!1},triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:{triggerPriceType:{last:!1,mark:!1,index:!1},price:!0},timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!1,marketBuyRequiresPrice:!0,marketBuyByCost:!0},createOrders:{max:50},fetchMyTrades:{marginMode:!0,limit:100,daysBack:void 0,untilDays:90},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:100,trigger:!0,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!0,limit:100,daysBack:void 0,daysBackCanceled:void 0,untilDays:90,trigger:!0,trailing:!1},fetchOHLCV:{limit:1e3}},forPerps:{extends:"spot",createOrder:{triggerPrice:!0,triggerPriceType:{last:!0,mark:!0,index:!1},triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:{triggerPriceType:{last:!0,mark:!0,index:!0},price:!1},timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!0,trailing:!0,marketBuyRequiresPrice:!1,marketBuyByCost:!1},fetchMyTrades:{untilDays:7},fetchClosedOrders:{trailing:!0}},swap:{linear:{extends:"forPerps"},inverse:{extends:"forPerps"}},future:{linear:{extends:"forPerps"},inverse:{extends:"forPerps"}}}})}setSandboxMode(e){this.options.sandboxMode=e}convertSymbolForSandbox(e){let t;if(e.startsWith("S"))return e;if(e.indexOf("/")>-1){if(-1===e.indexOf(":"))throw new s.NotSupported(this.id+" sandbox supports swap and future markets only");let r=e.split("/"),i=this.safeString(r,0),a=this.safeString(r,1).split(":"),o=this.safeString(a,0),n=this.safeString(a,1).split("-"),d=this.safeString(n,0),c=this.safeString(n,1);t="S"+i+"/S"+o+":S"+d,void 0!==c&&(t=t+"-"+c)}else t="S"+e.slice(0,3)+"S"+e.slice(3);return t}handleProductTypeAndParams(e,t={}){let r,i;[r,t]=this.handleSubTypeAndParams("handleProductTypeAndParams",void 0,t),void 0!==r&&void 0===e&&(i=this.safeBool(this.options,"sandboxMode",!1)?"linear"===r?"SUSDT-FUTURES":"SCOIN-FUTURES":"linear"===r?"USDT-FUTURES":"COIN-FUTURES");let a=this.safeString(t,"productType",i);if(void 0===a&&void 0!==e){let t=e.settle;a="USDT"===t?"USDT-FUTURES":"USDC"===t?"USDC-FUTURES":"SUSDT"===t?"SUSDT-FUTURES":"SUSDC"===t?"SUSDC-FUTURES":"SBTC"===t||"SETH"===t||"SEOS"===t?"SCOIN-FUTURES":"COIN-FUTURES"}if(void 0===a)throw new s.ArgumentsRequired(this.id+' requires a productType param, one of "USDT-FUTURES", "USDC-FUTURES", "COIN-FUTURES", "SUSDT-FUTURES", "SUSDC-FUTURES" or "SCOIN-FUTURES"');return[a,t=this.omit(t,"productType")]}async fetchTime(e={}){let t=await this.publicCommonGetV2PublicTime(e),r=this.safeValue(t,"data",{});return this.safeInteger(r,"serverTime")}async fetchMarkets(e={}){this.options.adjustForTimeDifference&&await this.loadTimeDifference();let t=this.safeBool(this.options,"sandboxMode",!1),r=this.safeValue(this.options,"fetchMarkets",["spot","swap"]);t&&(r=["swap"]);let i=[],a=!1;for(let o=0;o<r.length;o++){let n=r[o];if("swap"===n||"future"===n){let r;r=t?["SUSDT-FUTURES","SCOIN-FUTURES","SUSDC-FUTURES"]:["USDT-FUTURES","COIN-FUTURES","USDC-FUTURES"];for(let t=0;t<r.length;t++)i.push(this.publicMixGetV2MixMarketContracts(this.extend(e,{productType:r[t]})))}else if("spot"===n)i.push(this.publicSpotGetV2SpotPublicSymbols(e)),a=!0,i.push(this.publicMarginGetV2MarginCurrencies(e));else throw new s.NotSupported(this.id+" does not support "+n+" market")}let o=await Promise.all(i),n=[];this.options.crossMarginPairsData=[],this.options.isolatedMarginPairsData=[];for(let e=0;e<o.length;e++){let t=this.safeDict(o,e),r=this.safeList(t,"data",[]),i=this.safeDict(r,0,{}),s=this.safeString(i,"isBorrowable");if(a&&void 0!==s){let e=Object.keys(this.indexBy(r,"symbol"));this.options.crossMarginPairsData=e,this.options.isolatedMarginPairsData=e}else n=this.arrayConcat(n,r)}let d=[];for(let e=0;e<n.length;e++)d.push(this.parseMarket(n[e]));return d}parseMarket(e){let t,r,i,s,o,n,d,c,l,h,p;let u=this.safeString(e,"symbol"),m=this.safeString(e,"quoteCoin"),f=this.safeString(e,"baseCoin"),g=this.safeCurrencyCode(m),v=this.safeCurrencyCode(f),y=this.safeValue(e,"supportMarginCoins",[]);t=this.inArray(f,y)?f:this.inArray(m,y)?m:this.safeString(y,0);let x=this.safeCurrencyCode(t),b=v+"/"+g,S=!1,w=!1,P=!1,T=!1,M=this.safeString(e,"symbolType"),E=!1;if(void 0===M){r="spot",w=!0,i=this.parseNumber(this.parsePrecision(this.safeString(e,"pricePrecision"))),s=this.parseNumber(this.parsePrecision(this.safeString(e,"quantityPrecision")));let t=this.inArray(u,this.options.crossMarginPairsData);l={cross:t,isolated:this.inArray(u,this.options.isolatedMarginPairsData)},E=t||t}else{if("perpetual"===M)r="swap",S=!0,b=b+":"+x;else if("delivery"===M){d=this.safeInteger(e,"deliveryTime");let t=(c=this.iso8601(d)).split("-"),i=this.safeString(t,0),s=this.safeString(t,2),a=i.slice(2,4);r="future",P=!0,b=b+":"+x+"-"+(a+this.safeString(t,1)+s.slice(0,2))}T=!0,o=!(n=v===x);let t=this.safeInteger(e,"pricePlace"),h=this.safeInteger(e,"volumePlace"),p=this.safeString(e,"priceEndStep"),u=this.safeString(e,"minTradeNum"),m=new a.Y(p);m.decimals=Math.max(m.decimals,t),m.reduce();let f=m.toString();i=this.parseNumber(f);let g=new a.Y(u);g.decimals=Math.max(g.decimals,h),g.reduce();let y=g.toString();s=this.parseNumber(y),l={cross:!0,isolated:!0}}let O=this.safeString2(e,"status","symbolStatus");void 0!==O&&(h="online"===O||"normal"===O),"USDT"===g&&(p=this.safeNumber(e,"minTradeUSDT"));let k=T?1:void 0;return{id:u,symbol:b,base:v,quote:g,settle:x,baseId:f,quoteId:m,settleId:t,type:r,spot:w,margin:w&&E,marginModes:l,swap:S,future:P,option:!1,active:h,contract:T,linear:o,inverse:n,taker:this.safeNumber(e,"takerFeeRate"),maker:this.safeNumber(e,"makerFeeRate"),contractSize:k,expiry:d,expiryDatetime:c,strike:void 0,optionType:void 0,precision:{amount:s,price:i},limits:{leverage:{min:this.safeNumber(e,"minLever"),max:this.safeNumber(e,"maxLever")},amount:{min:this.safeNumber2(e,"minTradeNum","minTradeAmount"),max:this.safeNumber(e,"maxTradeAmount")},price:{min:void 0,max:void 0},cost:{min:p,max:void 0}},created:this.safeInteger(e,"launchTime"),info:e}}async fetchCurrencies(e={}){let t=await this.publicSpotGetV2SpotPublicCoins(e),r={},i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){let t,s,o;let n=i[e],d=this.safeString(n,"coin"),c=this.safeCurrencyCode(d),l=this.safeValue(n,"chains",[]),h={},p=!1,u=!1;for(let e=0;e<l.length;e++){let r=l[e],i=this.safeString(r,"chain"),n=this.networkIdToCode(i,c);void 0!==n&&(n=n.toUpperCase());let d="true"===this.safeString(r,"withdrawable");u=d||u;let m="true"===this.safeString(r,"rechargeable");p=m||p;let f=this.safeString(r,"withdrawFee");void 0!==f&&(o=void 0===o?f:a.Y.stringMin(f,o));let g=this.safeString(r,"minWithdrawAmount");void 0!==g&&(t=void 0===t?g:a.Y.stringMin(g,t));let v=this.safeString(r,"minDepositAmount");void 0!==v&&(s=void 0===s?v:a.Y.stringMin(v,s)),h[n]={info:r,id:i,network:n,limits:{withdraw:{min:this.parseNumber(g),max:void 0},deposit:{min:this.parseNumber(v),max:void 0}},active:d&&m,withdraw:d,deposit:m,fee:this.parseNumber(f),precision:void 0}}r[c]={info:n,id:d,code:c,networks:h,type:void 0,name:void 0,active:p&&u,deposit:p,withdraw:u,fee:this.parseNumber(o),precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.parseNumber(t),max:void 0},deposit:{min:this.parseNumber(s),max:void 0}},created:void 0}}return r}async fetchMarketLeverageTiers(e,t={}){let r,i,a;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);let o={};if([a,t]=this.handleMarginModeAndParams("fetchMarketLeverageTiers",t,"isolated"),r.swap||r.future){let e;[e,t]=this.handleProductTypeAndParams(r,t),o.productType=e,o.symbol=r.id,i=await this.publicMixGetV2MixMarketQueryPositionLever(this.extend(o,t))}else if("isolated"===a)o.symbol=r.id,i=await this.privateMarginGetV2MarginIsolatedTierData(this.extend(o,t));else if("cross"===a){let e=this.safeString(t,"code");if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchMarketLeverageTiers() requires a code argument");t=this.omit(t,"code");let r=this.currency(e);o.coin=r.id,i=await this.privateMarginGetV2MarginCrossedTierData(this.extend(o,t))}else throw new s.BadRequest(this.id+" fetchMarketLeverageTiers() symbol does not support market "+r.symbol);let n=this.safeValue(i,"data",[]);return this.parseMarketLeverageTiers(n,r)}parseMarketLeverageTiers(e,t){let r=[],i=0;for(let s=0;s<e.length;s++){let a=e[s],o=this.safeNumber(a,"startUnit");void 0!==o&&(i=o);let n=this.safeNumberN(a,["endUnit","maxBorrowableAmount","baseMaxBorrowableAmount"]),d=this.safeString2(a,"coin","baseCoin"),c=void 0!==d?d:t.base,l=this.safeString(a,"symbol");r.push({tier:this.safeInteger2(a,"level","tier"),symbol:this.safeSymbol(l,t),currency:this.safeCurrencyCode(c),minNotional:i,maxNotional:n,maintenanceMarginRate:this.safeNumber2(a,"keepMarginRate","maintainMarginRate"),maxLeverage:this.safeNumber(a,"leverage"),info:a}),i=n}return r}async fetchDeposits(e,t,r,i={}){await this.loadMarkets();let a=!1;if([a,i]=this.handleOptionAndParams(i,"fetchDeposits","paginate"),a)return await this.fetchPaginatedCallCursor("fetchDeposits",void 0,t,r,i,"idLessThan","idLessThan",void 0,100);if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchDeposits() requires a `code` argument");let o=this.currency(e);void 0===t&&(t=this.milliseconds()-7776e6);let n={coin:o.id,startTime:t,endTime:this.milliseconds()};void 0!==r&&(n.limit=r),[n,i]=this.handleUntilOption("endTime",n,i);let d=await this.privateSpotGetV2SpotWalletDepositRecords(this.extend(n,i)),c=this.safeList(d,"data",[]);return this.parseTransactions(c,o,t,r)}async withdraw(e,t,r,i,a={}){let o;if(this.checkAddress(r),[o,a]=this.handleNetworkCodeAndParams(a),void 0===o)throw new s.ArgumentsRequired(this.id+' withdraw() requires a "network" parameter');await this.loadMarkets();let n=this.currency(e),d=this.networkCodeToId(o),c={coin:n.id,address:r,chain:d,size:t,transferType:"on_chain"};void 0!==i&&(c.tag=i);let l=await this.privateSpotPostV2SpotWalletWithdrawal(this.extend(c,a)),h=this.safeValue(l,"data",{}),p=this.parseTransaction(h,n);p.type="withdrawal";let u=this.safeValue(this.options,"withdraw",{});return this.safeBool(u,"fillResponseFromRequest",!0)&&(p.currency=e,p.timestamp=this.milliseconds(),p.datetime=this.iso8601(this.milliseconds()),p.amount=t,p.tag=i,p.address=r,p.addressTo=r,p.network=o),p}async fetchWithdrawals(e,t,r,i={}){await this.loadMarkets();let a=!1;if([a,i]=this.handleOptionAndParams(i,"fetchWithdrawals","paginate"),a)return await this.fetchPaginatedCallCursor("fetchWithdrawals",void 0,t,r,i,"idLessThan","idLessThan",void 0,100);if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchWithdrawals() requires a `code` argument");let o=this.currency(e);void 0===t&&(t=this.milliseconds()-7776e6);let n={coin:o.id,startTime:t,endTime:this.milliseconds()};[n,i]=this.handleUntilOption("endTime",n,i),void 0!==r&&(n.limit=r);let d=await this.privateSpotGetV2SpotWalletWithdrawalRecords(this.extend(n,i)),c=this.safeList(d,"data",[]);return this.parseTransactions(c,o,t,r)}parseTransaction(e,t){let r;let i=this.safeString(e,"coin"),s=this.safeCurrencyCode(i,t),o=this.safeInteger(e,"cTime"),n=this.safeString(e,"chain"),d=this.safeString(e,"status"),c=this.safeString(e,"tag"),l=this.safeString(e,"fee"),h=a.Y.stringAbs(l),p=this.safeString(e,"size");return void 0!==h&&(r={currency:s,cost:this.parseNumber(h)},p=a.Y.stringSub(p,h)),{id:this.safeString(e,"orderId"),info:e,txid:this.safeString(e,"tradeId"),timestamp:o,datetime:this.iso8601(o),network:this.networkIdToCode(n),addressFrom:this.safeString(e,"fromAddress"),address:this.safeString(e,"toAddress"),addressTo:this.safeString(e,"toAddress"),amount:this.parseNumber(p),type:this.safeString(e,"type"),currency:s,status:this.parseTransactionStatus(d),updated:this.safeInteger(e,"uTime"),tagFrom:void 0,tag:c,tagTo:c,comment:void 0,internal:void 0,fee:r}}parseTransactionStatus(e){return this.safeString({success:"ok",Pending:"pending",pending_review:"pending",pending_review_fail:"failed",reject:"failed"},e,e)}async fetchDepositAddress(e,t={}){let r;await this.loadMarkets(),[r,t]=this.handleNetworkCodeAndParams(t);let i=this.currency(e),s={coin:i.id};void 0!==r&&(s.chain=this.networkCodeToId(r,e));let a=await this.privateSpotGetV2SpotWalletDepositAddress(this.extend(s,t)),o=this.safeDict(a,"data",{});return this.parseDepositAddress(o,i)}parseDepositAddress(e,t){let r;let i=this.safeString(e,"coin"),s=this.safeString(e,"chain"),a=this.safeCurrencyCode(i,t);return void 0!==s&&(r=this.networkIdToCode(s,a)),{info:e,currency:a,network:r,address:this.safeString(e,"address"),tag:this.safeString(e,"tag")}}async fetchOrderBook(e,t,r={}){let i,s;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);i=this.market(t)}else i=this.market(e);let a={symbol:i.id};if(void 0!==t&&(a.limit=t),i.spot)s=await this.publicSpotGetV2SpotMarketOrderbook(this.extend(a,r));else{let e;[e,r]=this.handleProductTypeAndParams(i,r),a.productType=e,s=await this.publicMixGetV2MixMarketMergeDepth(this.extend(a,r))}let o=this.safeValue(s,"data",{}),n=this.safeInteger(o,"ts");return this.parseOrderBook(o,i.symbol,n)}parseTicker(e,t){let r,i;let s=this.safeString(e,"symbol"),o=this.safeString(e,"lastPr"),n=this.safeIntegerOmitZero(e,"ts"),d=this.safeString(e,"change24h"),c=this.safeString(e,"open24"),l=this.safeString(e,"open");return void 0===l?(r=this.safeSymbol(s,t,void 0,"contract"),i=c):(r=this.safeSymbol(s,t,void 0,"spot"),i=l),this.safeTicker({symbol:r,timestamp:n,datetime:this.iso8601(n),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:this.safeString(e,"bidPr"),bidVolume:this.safeString(e,"bidSz"),ask:this.safeString(e,"askPr"),askVolume:this.safeString(e,"askSz"),vwap:void 0,open:i,close:o,last:o,previousClose:void 0,change:d,percentage:a.Y.stringMul(d,"100"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),indexPrice:this.safeString(e,"indexPrice"),markPrice:this.safeString(e,"markPrice"),info:e},t)}async fetchTicker(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);let s={symbol:r.id};if(r.spot)i=await this.publicSpotGetV2SpotMarketTickers(this.extend(s,t));else{let e;[e,t]=this.handleProductTypeAndParams(r,t),s.productType=e,i=await this.publicMixGetV2MixMarketTicker(this.extend(s,t))}let a=this.safeList(i,"data",[]);return this.parseTicker(a[0],r)}async fetchMarkPrice(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);let a={symbol:r.id};if(r.spot)throw new s.NotSupported(this.id+" fetchMarkPrice() is not supported for spot markets");{let e;[e,t]=this.handleProductTypeAndParams(r,t),a.productType=e,i=await this.publicMixGetV2MixMarketSymbolPrice(this.extend(a,t))}let o=this.safeList(i,"data",[]);return this.parseTicker(o[0],r)}async fetchTickers(e,t={}){let r,i,s,a;if(await this.loadMarkets(),void 0!==e){let t=this.safeValue(e,0);if(this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);r=this.market(e)}else r=this.market(t)}let o={};[s,t]=this.handleMarketTypeAndParams("fetchTickers",r,t);let n=this.safeString(t,"subType");[a,t]=this.handleProductTypeAndParams(r,t),"spot"===s&&void 0===n?i=await this.publicSpotGetV2SpotMarketTickers(this.extend(o,t)):(o.productType=a,i=await this.publicMixGetV2MixMarketTickers(this.extend(o,t)));let d=this.safeList(i,"data",[]);return this.parseTickers(d,e)}parseTrade(e,t){let r;let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),o=this.safeInteger2(e,"cTime","ts"),n=this.safeValue(e,"feeDetail"),d=void 0!==this.safeString(e,"posMode")?n[0]:n;if(void 0!==d){r={currency:this.safeCurrencyCode(this.safeString(d,"feeCoin"))};let e=this.safeString(d,"totalFee");"yes"===this.safeString(d,"deduction")?r.cost=e:r.cost=a.Y.stringNeg(e)}return this.safeTrade({info:e,id:this.safeString(e,"tradeId"),order:this.safeString(e,"orderId"),symbol:s,side:this.safeStringLower(e,"side"),type:this.safeString(e,"orderType"),takerOrMaker:this.safeString(e,"tradeScope"),price:this.safeString2(e,"priceAvg","price"),amount:this.safeString2(e,"baseVolume","size"),cost:this.safeString2(e,"quoteVolume","amount"),timestamp:o,datetime:this.iso8601(o),fee:r},t)}async fetchTrades(e,t,r,i={}){let s,a;await this.loadMarkets();let o=!1;if([o,i]=this.handleOptionAndParams(i,"fetchTrades","paginate"),o)return await this.fetchPaginatedCallCursor("fetchTrades",e,t,r,i,"idLessThan","idLessThan");if(this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);s=this.market(t)}else s=this.market(e);let n={symbol:s.id};void 0!==r&&(s.contract?n.limit=Math.min(r,1e3):n.limit=r);let d=this.safeValue(this.options,"fetchTrades",{});if(s.spot){let e=this.safeValue(d,"spot",{}),r=this.safeString(e,"method","publicSpotGetV2SpotMarketFillsHistory"),s=this.safeString(i,"method",r);i=this.omit(i,"method"),"publicSpotGetV2SpotMarketFillsHistory"===s?([n,i]=this.handleUntilOption("endTime",n,i),void 0!==t&&(n.startTime=t),a=await this.publicSpotGetV2SpotMarketFillsHistory(this.extend(n,i))):"publicSpotGetV2SpotMarketFills"===s&&(a=await this.publicSpotGetV2SpotMarketFills(this.extend(n,i)))}else{let e;let r=this.safeValue(d,"swap",{}),o=this.safeString(r,"method","publicMixGetV2MixMarketFillsHistory"),c=this.safeString(i,"method",o);i=this.omit(i,"method"),[e,i]=this.handleProductTypeAndParams(s,i),n.productType=e,"publicMixGetV2MixMarketFillsHistory"===c?([n,i]=this.handleUntilOption("endTime",n,i),void 0!==t&&(n.startTime=t),a=await this.publicMixGetV2MixMarketFillsHistory(this.extend(n,i))):"publicMixGetV2MixMarketFills"===c&&(a=await this.publicMixGetV2MixMarketFills(this.extend(n,i)))}let c=this.safeList(a,"data",[]);return this.parseTrades(c,s,t,r)}async fetchTradingFee(e,t={}){let r;await this.loadMarkets();let i=this.market(e),s={symbol:i.id};[r,t]=this.handleMarginModeAndParams("fetchTradingFee",t),i.spot?void 0!==r?s.businessType="margin":s.businessType="spot":s.businessType="contract";let a=await this.privateCommonGetV2CommonTradeRate(this.extend(s,t)),o=this.safeValue(a,"data",{});return this.parseTradingFee(o,i)}async fetchTradingFees(e={}){let t,r,i;if(await this.loadMarkets(),[r,e]=this.handleMarginModeAndParams("fetchTradingFees",e),[i,e]=this.handleMarketTypeAndParams("fetchTradingFees",void 0,e),"spot"===i){let i=this.safeBool(e,"margin",!1);e=this.omit(e,"margin"),t=void 0!==r||i?await this.publicMarginGetV2MarginCurrencies(e):await this.publicSpotGetV2SpotPublicSymbols(e)}else if("swap"===i||"future"===i){let r;[r,e]=this.handleProductTypeAndParams(void 0,e),e.productType=r,t=await this.publicMixGetV2MixMarketContracts(e)}else throw new s.NotSupported(this.id+" does not support "+i+" market");let a=this.safeValue(t,"data",[]),o={};for(let e=0;e<a.length;e++){let t=a[e],r=this.safeString(t,"symbol"),s=this.safeSymbol(r,void 0,void 0,i),n=this.market(s),d=this.parseTradingFee(t,n);o[s]=d}return o}parseTradingFee(e,t){let r=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(r,t),maker:this.safeNumber(e,"makerFeeRate"),taker:this.safeNumber(e,"takerFeeRate"),percentage:void 0,tierBased:void 0}}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",r,i,a={}){let o,n,d,c;await this.loadMarkets();let l=!1;if([l,a]=this.handleOptionAndParams(a,"fetchOHLCV","paginate"),l)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,r,i,t,a,200);if(this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);o=this.market(t)}else o=this.market(e);let h=o.spot?"spot":"swap",p=this.options.timeframes[h],u=1e3*this.parseTimeframe(t),m={symbol:o.id,granularity:this.safeString(p,t,t)},f=this.safeInteger(a,"until"),g=void 0!==i,v=void 0!==r,y=void 0!==f;a=this.omit(a,["until"]);let x=this.milliseconds(),b=this.safeDict(this.options,"fetchOHLCV",{}),S=this.safeDict(b,"maxDaysPerTimeframe",{}),w=this.safeInteger(S,t,30);g?(i=Math.min(i,1e3),m.limit=i):i=100;let P=i*u;v&&(d=r,m.startTime=r,y||(c=this.sum(d,P),m.endTime=c)),y&&(c=f,m.endTime=c,v||(d=c-P));let T=void 0!==d&&d<=x-864e5*w;if(T&&g&&(m.limit=Math.min(i,200)),o.spot)n=T?await this.publicSpotGetV2SpotMarketHistoryCandles(this.extend(m,a)):await this.publicSpotGetV2SpotMarketCandles(this.extend(m,a));else{let e,t;if(v){if(y){if(c-d>7776e6)throw new s.BadRequest(this.id+" fetchOHLCV() between start and end must be less than 90 days")}else m.endTime=Math.min(c,this.sum(r,7776e6))}[e,a]=this.handleParamString(a,"price"),[t,a]=this.handleProductTypeAndParams(o,a),m.productType=t;let i=this.extend(m,a);n="mark"===e?await this.publicMixGetV2MixMarketHistoryMarkCandles(i):"index"===e?await this.publicMixGetV2MixMarketHistoryIndexCandles(i):T?await this.publicMixGetV2MixMarketHistoryCandles(i):await this.publicMixGetV2MixMarketCandles(i)}if(""===n)return[];let M=this.safeList(n,"data",n);return this.parseOHLCVs(M,o,t,r,i)}async fetchBalance(e={}){let t,r,i;await this.loadMarkets();let a={};if([t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),[r,e]=this.handleMarginModeAndParams("fetchBalance",e),"swap"===t||"future"===t){let t;[t,e]=this.handleProductTypeAndParams(void 0,e),a.productType=t,i=await this.privateMixGetV2MixAccountAccounts(this.extend(a,e))}else if("isolated"===r)i=await this.privateMarginGetMarginV1IsolatedAccountAssets(this.extend(a,e));else if("cross"===r)i=await this.privateMarginGetMarginV1CrossAccountAssets(this.extend(a,e));else if("spot"===t)i=await this.privateSpotGetV2SpotAccountAssets(this.extend(a,e));else throw new s.NotSupported(this.id+" fetchBalance() does not support "+t+" accounts");let o=this.safeValue(i,"data",[]);return this.parseBalance(o)}parseBalance(e){let t={info:e};for(let r=0;r<e.length;r++){let i=e[r],s=this.account(),o=this.safeString2(i,"marginCoin","coin"),n=this.safeCurrencyCode(o),d=this.safeString(i,"borrow");if(void 0!==d){let e=this.safeString(i,"interest");s.free=this.safeString(i,"transferable"),s.total=this.safeString(i,"totalAmount"),s.debt=a.Y.stringAdd(d,e)}else{let e=this.safeString(i,"available"),t=this.safeString(i,"maxTransferOut");if(void 0!==t)s.free=t,s.total=this.safeString(i,"accountEquity");else{s.free=e;let t=this.safeString(i,"frozen"),r=this.safeString(i,"locked");s.used=a.Y.stringAdd(t,r)}}t[n]=s}return this.safeBalance(t)}parseOrderStatus(e){return this.safeString({new:"open",init:"open",not_trigger:"open",partial_fill:"open",partially_fill:"open",partially_filled:"open",triggered:"closed",full_fill:"closed",filled:"closed",fail_trigger:"rejected",cancel:"canceled",cancelled:"canceled",canceled:"canceled",live:"open",fail_execute:"rejected",executed:"closed"},e,e)}parseOrder(e,t){let r,i,s,o,n,d,c;if(void 0!==this.safeString(e,"errorMsg"))return this.safeOrder({info:e,id:this.safeString(e,"orderId"),clientOrderId:this.safeString2(e,"clientOrderId","clientOid"),status:"rejected"},t);let l="posSide"in e?"contract":"spot";void 0!==t&&(l=t.type);let h=this.safeString(e,"symbol");t=this.safeMarket(h,t,void 0,l);let p=this.safeInteger2(e,"cTime","ctime"),u=this.safeInteger(e,"uTime"),m=this.safeString2(e,"status","state"),f=this.safeString(e,"fee");void 0!==f&&(r={cost:this.parseNumber(a.Y.stringNeg(f)),currency:t.settle});let g=this.safeValue(e,"feeDetail");if(void 0!==g){let e;let t=Object.values(JSON.parse(g));for(let r=0;r<t.length;r++){let i=t[r];if(void 0!==this.safeValue(i,"feeCoinCode")){e=i;break}}r={cost:this.parseNumber(a.Y.stringNeg(this.safeString(e,"totalFee"))),currency:this.safeCurrencyCode(this.safeString(e,"feeCoinCode"))}}let v=this.safeStringUpper(e,"force");"POST_ONLY"===v&&(i=!0,v="PO");let y=this.safeString(e,"reduceOnly");void 0!==y&&(s="NO"!==y),void 0!==this.safeString(e,"basePrice")?(o=this.safeString(e,"priceAvg"),n=this.safeString(e,"basePrice")):(o=this.safeString2(e,"price","executePrice"),n=this.safeString(e,"priceAvg"));let x=this.safeString(e,"baseSize");void 0!==x?(d=x,c=this.safeString(e,"size")):(d=this.safeString(e,"size"),c=this.safeString(e,"baseVolume"));let b=this.safeString(e,"side");return"hedge_mode"===this.safeString(e,"posMode")&&s&&(b="buy"===b?"sell":"buy"),this.safeOrder({info:e,id:this.safeString2(e,"orderId","data"),clientOrderId:this.safeString2(e,"clientOrderId","clientOid"),timestamp:p,datetime:this.iso8601(p),lastTradeTimestamp:u,lastUpdateTimestamp:u,symbol:t.symbol,type:this.safeString(e,"orderType"),side:b,price:o,amount:d,cost:this.safeString2(e,"quoteVolume","quoteSize"),average:n,filled:c,remaining:void 0,timeInForce:v,postOnly:i,reduceOnly:s,triggerPrice:this.safeNumber(e,"triggerPrice"),takeProfitPrice:this.safeNumber2(e,"presetStopSurplusPrice","stopSurplusTriggerPrice"),stopLossPrice:this.safeNumber2(e,"presetStopLossPrice","stopLossTriggerPrice"),status:this.parseOrderStatus(m),fee:r,trades:void 0},t)}async createMarketBuyOrderWithCost(e,t,r={}){if(await this.loadMarkets(),!this.market(e).spot)throw new s.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return await this.createOrder(e,"market","buy",t,void 0,this.extend({createMarketBuyOrderRequiresPrice:!1},r))}async createOrder(e,t,r,i,s,a={}){let o;await this.loadMarkets();let n=this.market(e),d=this.handleMarginModeAndParams("createOrder",a)[0],c=this.safeValue2(a,"stopPrice","triggerPrice"),l=this.safeValue(a,"stopLossPrice"),h=this.safeValue(a,"takeProfitPrice"),p=this.safeString2(a,"trailingPercent","callbackRatio"),u=void 0!==c,m=this.createOrderRequest(e,t,r,i,s,a);o=n.spot?u?await this.privateSpotPostV2SpotTradePlacePlanOrder(m):"isolated"===d?await this.privateMarginPostV2MarginIsolatedPlaceOrder(m):"cross"===d?await this.privateMarginPostV2MarginCrossedPlaceOrder(m):await this.privateSpotPostV2SpotTradePlaceOrder(m):u||void 0!==p?await this.privateMixPostV2MixOrderPlacePlanOrder(m):void 0!==l||void 0!==h?await this.privateMixPostV2MixOrderPlaceTpslOrder(m):await this.privateMixPostV2MixOrderPlaceOrder(m);let f=this.safeDict(o,"data",{});return this.parseOrder(f,n)}createOrderRequest(e,t,r,i,o,n={}){let d,c,l,h;if(this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);d=this.market(t)}else d=this.market(e);[c,n]=this.handleMarketTypeAndParams("createOrder",d,n),[l,n]=this.handleMarginModeAndParams("createOrder",n);let p={symbol:d.id,orderType:t},u="market"===t,m=this.safeValue2(n,"stopPrice","triggerPrice"),f=this.safeValue(n,"stopLossPrice"),g=this.safeValue(n,"takeProfitPrice"),v=this.safeValue(n,"stopLoss"),y=this.safeValue(n,"takeProfit"),x=void 0!==m,b=void 0!==f,S=void 0!==g,w=void 0!==v,P=void 0!==y,T=b||S,M=this.safeString(n,"trailingTriggerPrice",this.numberToString(o)),E=this.safeString2(n,"trailingPercent","callbackRatio"),O=void 0!==E;if(this.sum(x,b,S,O)>1)throw new s.ExchangeError(this.id+" createOrder() params can only contain one of triggerPrice, stopLossPrice, takeProfitPrice, trailingPercent");"limit"===t&&(p.price=this.priceToPrecision(e,o));let k=this.safeString2(n,"triggerPriceType","triggerType","mark_price"),C=this.safeBool(n,"reduceOnly",!1),I=this.safeString2(n,"clientOid","clientOrderId"),A=this.safeString2(n,"force","timeInForce");[h,n]=this.handlePostOnly(u,"post_only"===A,n);let R=this.safeStringUpper(this.options,"defaultTimeInForce"),V=this.safeStringUpper(n,"timeInForce",R);if(h?p.force="post_only":"GTC"===V?p.force="GTC":"FOK"===V?p.force="FOK":"IOC"===V&&(p.force="IOC"),n=this.omit(n,["stopPrice","triggerType","stopLossPrice","takeProfitPrice","stopLoss","takeProfit","postOnly","reduceOnly","clientOrderId","trailingPercent","trailingTriggerPrice"]),"swap"===c||"future"===c){let t;if(p.marginCoin=d.settleId,p.size=this.amountToPrecision(e,i),[t,n]=this.handleProductTypeAndParams(d,n),p.productType=t,void 0!==I&&(p.clientOid=I),(x||T||O)&&(p.triggerType=k),O){if(!u)throw new s.BadRequest(this.id+" createOrder() bitget trailing orders must be market orders");if(void 0===M)throw new s.ArgumentsRequired(this.id+" createOrder() bitget trailing orders must have a trailingTriggerPrice param");p.planType="track_plan",p.triggerPrice=this.priceToPrecision(e,M),p.callbackRatio=E}else if(x){if(p.planType="normal_plan",p.triggerPrice=this.priceToPrecision(e,m),void 0!==o&&(p.executePrice=this.priceToPrecision(e,o)),w){let t=this.safeNumber2(v,"triggerPrice","stopPrice");p.stopLossTriggerPrice=this.priceToPrecision(e,t);let r=this.safeNumber(v,"price");p.stopLossExecutePrice=this.priceToPrecision(e,r);let i=this.safeString(v,"type","mark_price");p.stopLossTriggerType=i}if(P){let t=this.safeNumber2(y,"triggerPrice","stopPrice");p.stopSurplusTriggerPrice=this.priceToPrecision(e,t);let r=this.safeNumber(y,"price");p.stopSurplusExecutePrice=this.priceToPrecision(e,r);let i=this.safeString(y,"type","mark_price");p.stopSurplusTriggerType=i}}else if(T){if(!u)throw new s.ExchangeError(this.id+" createOrder() bitget stopLoss or takeProfit orders must be market orders");p.holdSide="buy"===r?"long":"short",b?(p.triggerPrice=this.priceToPrecision(e,f),p.planType="pos_loss"):S&&(p.triggerPrice=this.priceToPrecision(e,g),p.planType="pos_profit")}else{if(w){let t=this.safeValue2(v,"triggerPrice","stopPrice");p.presetStopLossPrice=this.priceToPrecision(e,t)}if(P){let t=this.safeValue2(y,"triggerPrice","stopPrice");p.presetStopSurplusPrice=this.priceToPrecision(e,t)}}if(!T){let e,t;void 0===l&&(l="cross");let i="cross"===l?"crossed":"isolated";p.marginMode=i,[e,n]=this.handleParamBool(n,"hedged",!1),[t,n]=this.handleParamBool(n,"oneWayMode"),void 0!==t&&(e=!t);let s=r;C?e?(s="buy"===r?"sell":"buy",p.tradeSide="Close"):p.reduceOnly="YES":e&&(p.tradeSide="Open"),p.side=s}}else if("spot"===c){let t,d;if(T||w||P)throw new s.InvalidOrder(this.id+" createOrder() does not support stop loss/take profit orders on spot markets, only swap markets");p.side=r;let c=!0;if([c,n]=this.handleOptionAndParams(n,"createOrder","createMarketBuyOrderRequiresPrice",!0),u&&"buy"===r){d="total";let r=this.safeNumber(n,"cost");if(n=this.omit(n,"cost"),void 0!==r)t=this.costToPrecision(e,r);else if(c){if(void 0===o)throw new s.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend in the amount argument");{let r=this.numberToString(i),s=this.numberToString(o),n=a.Y.stringMul(r,s);t=this.costToPrecision(e,n)}}else t=this.costToPrecision(e,i)}else d="amount",t=this.amountToPrecision(e,i);void 0!==I&&(p.clientOid=I),void 0!==l?(p.loanType="normal",u&&"buy"===r?p.quoteSize=t:p.baseSize=t):(void 0!==t&&(p.size=t),void 0!==m&&(p.planType=d,p.triggerType=k,p.triggerPrice=this.priceToPrecision(e,m),void 0!==o&&(p.executePrice=this.priceToPrecision(e,o))))}else throw new s.NotSupported(this.id+" createOrder() does not support "+c+" orders");return this.extend(p,n)}async createOrders(e,t={}){let r,i,a,o;await this.loadMarkets();let n=[];for(let t=0;t<e.length;t++){let a=e[t],o=this.safeString(a,"symbol");if(void 0===r)r=o;else if(r!==o)throw new s.BadRequest(this.id+" createOrders() requires all orders to have the same symbol");let d=this.safeString(a,"type"),c=this.safeString(a,"side"),l=this.safeValue(a,"amount"),h=this.safeValue(a,"price"),p=this.safeValue(a,"params",{}),u=this.handleMarginModeAndParams("createOrders",p)[0];if(void 0!==u){if(void 0===i)i=u;else if(i!==u)throw new s.BadRequest(this.id+" createOrders() requires all orders to have the same margin mode (isolated or cross)")}let m=this.createOrderRequest(o,d,c,l,h,p);n.push(m)}if(this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(r);a=this.market(e)}else a=this.market(r);let d={symbol:a.id,orderList:n};if(a.swap||a.future){let e;void 0===i&&(i="cross");let r="cross"===i?"crossed":"isolated";d.marginMode=r,d.marginCoin=a.settleId,[e,t]=this.handleProductTypeAndParams(a,t),d.productType=e,o=await this.privateMixPostV2MixOrderBatchPlaceOrder(d)}else o="isolated"===i?await this.privateMarginPostV2MarginIsolatedBatchPlaceOrder(d):"cross"===i?await this.privateMarginPostV2MarginCrossedBatchPlaceOrder(d):await this.privateSpotPostV2SpotTradeBatchOrders(d);let c=this.safeValue(o,"data",{}),l=this.safeValue(c,"failureList",[]),h=this.safeValue(c,"successList",[]),p=this.arrayConcat(h,l);return this.parseOrders(p,a)}async editOrder(e,t,r,i,o,n,d={}){let c,l;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);c=this.market(e)}else c=this.market(t);let h={orderId:e},p="market"===r,u=this.safeValue2(d,"stopPrice","triggerPrice"),m=void 0!==u,f=this.safeValue(d,"stopLossPrice"),g=void 0!==f,v=this.safeValue(d,"takeProfitPrice"),y=void 0!==v,x=this.safeValue(d,"stopLoss"),b=this.safeValue(d,"takeProfit"),S=void 0!==x,w=void 0!==b,P=this.safeString(d,"trailingTriggerPrice",this.numberToString(n)),T=this.safeString2(d,"trailingPercent","newCallbackRatio"),M=void 0!==T;if(this.sum(m,g,y,M)>1)throw new s.ExchangeError(this.id+" editOrder() params can only contain one of triggerPrice, stopLossPrice, takeProfitPrice, trailingPercent");let E=this.safeString2(d,"clientOid","clientOrderId");if(void 0!==E&&(h.clientOid=E),d=this.omit(d,["stopPrice","triggerType","stopLossPrice","takeProfitPrice","stopLoss","takeProfit","clientOrderId","trailingTriggerPrice","trailingPercent"]),c.spot){if(void 0===u)throw new s.NotSupported(this.id+"editOrder() only supports plan/trigger spot orders");if(this.safeBool(this.options,"editMarketBuyOrderRequiresPrice",!0)&&p&&"buy"===i){if(void 0===n)throw new s.InvalidOrder(this.id+" editOrder() requires price argument for market buy orders on spot markets to calculate the total amount to spend (amount * price), alternatively set the editMarketBuyOrderRequiresPrice option to false and pass in the cost to spend into the amount parameter");{let e=this.numberToString(o),r=this.numberToString(n),i=this.parseNumber(a.Y.stringMul(e,r));h.size=this.priceToPrecision(t,i)}}else h.size=this.amountToPrecision(t,o);h.orderType=r,h.triggerPrice=this.priceToPrecision(t,u),h.executePrice=this.priceToPrecision(t,n),l=await this.privateSpotPostV2SpotTradeModifyPlanOrder(this.extend(h,d))}else{let e;if(!c.swap&&!c.future)throw new s.NotSupported(this.id+" editOrder() does not support "+c.type+" orders");if(h.symbol=c.id,[e,d]=this.handleProductTypeAndParams(c,d),h.productType=e,y||g||(h.newSize=this.amountToPrecision(t,o),void 0===n||M||(h.newPrice=this.priceToPrecision(t,n))),M){if(!p)throw new s.BadRequest(this.id+" editOrder() bitget trailing orders must be market orders");void 0!==P&&(h.newTriggerPrice=this.priceToPrecision(t,P)),h.newCallbackRatio=T,l=await this.privateMixPostV2MixOrderModifyPlanOrder(this.extend(h,d))}else if(y||g)h.marginCoin=c.settleId,h.size=this.amountToPrecision(t,o),h.executePrice=this.priceToPrecision(t,n),g?h.triggerPrice=this.priceToPrecision(t,f):y&&(h.triggerPrice=this.priceToPrecision(t,v)),l=await this.privateMixPostV2MixOrderModifyTpslOrder(this.extend(h,d));else if(m){if(h.newTriggerPrice=this.priceToPrecision(t,u),S){let e=this.safeNumber2(x,"triggerPrice","stopPrice");h.newStopLossTriggerPrice=this.priceToPrecision(t,e);let r=this.safeNumber(x,"price");h.newStopLossExecutePrice=this.priceToPrecision(t,r);let i=this.safeString(x,"type","mark_price");h.newStopLossTriggerType=i}if(w){let e=this.safeNumber2(b,"triggerPrice","stopPrice");h.newSurplusTriggerPrice=this.priceToPrecision(t,e);let r=this.safeNumber(b,"price");h.newStopSurplusExecutePrice=this.priceToPrecision(t,r);let i=this.safeString(b,"type","mark_price");h.newStopSurplusTriggerType=i}l=await this.privateMixPostV2MixOrderModifyPlanOrder(this.extend(h,d))}else{let e=this.uuid(),r=this.safeString2(d,"newClientOid","newClientOrderId",e);if(d=this.omit(d,"newClientOrderId"),h.newClientOid=r,S){let e=this.safeValue2(x,"triggerPrice","stopPrice");h.newPresetStopLossPrice=this.priceToPrecision(t,e)}if(w){let e=this.safeValue2(b,"triggerPrice","stopPrice");h.newPresetStopSurplusPrice=this.priceToPrecision(t,e)}l=await this.privateMixPostV2MixOrderModifyOrder(this.extend(h,d))}}let O=this.safeDict(l,"data",{});return this.parseOrder(O,c)}async cancelOrder(e,t,r={}){let i,a,o,n;if(void 0===t)throw new s.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);i=this.market(e)}else i=this.market(t);[a,r]=this.handleMarginModeAndParams("cancelOrder",r);let d={},c=this.safeValue(r,"trailing"),l=this.safeValue2(r,"stop","trigger");if(r=this.omit(r,["stop","trigger","trailing"]),i.spot&&l||(d.symbol=i.id),(i.swap||i.future)&&l||(d.orderId=e),i.swap||i.future){let t;if([t,r]=this.handleProductTypeAndParams(i,r),d.productType=t,l||c){let t=[];t.push({orderId:e}),d.orderIdList=t}if(c){let e=this.safeString(r,"planType","track_plan");d.planType=e,o=await this.privateMixPostV2MixOrderCancelPlanOrder(this.extend(d,r))}else o=l?await this.privateMixPostV2MixOrderCancelPlanOrder(this.extend(d,r)):await this.privateMixPostV2MixOrderCancelOrder(this.extend(d,r))}else if(i.spot)void 0!==a?"isolated"===a?o=await this.privateMarginPostV2MarginIsolatedCancelOrder(this.extend(d,r)):"cross"===a&&(o=await this.privateMarginPostV2MarginCrossedCancelOrder(this.extend(d,r))):o=l?await this.privateSpotPostV2SpotTradeCancelPlanOrder(this.extend(d,r)):await this.privateSpotPostV2SpotTradeCancelOrder(this.extend(d,r));else throw new s.NotSupported(this.id+" cancelOrder() does not support "+i.type+" orders");let h=this.safeValue(o,"data",{});return n=(i.swap||i.future)&&l?this.safeValue(h,"successList",[])[0]:h,this.parseOrder(n,i)}async cancelOrders(e,t,r={}){let i,a,o;if(void 0===t)throw new s.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);i=this.market(e)}else i=this.market(t);[a,r]=this.handleMarginModeAndParams("cancelOrders",r);let n=this.safeValue2(r,"stop","trigger");r=this.omit(r,["stop","trigger"]);let d=[];for(let t=0;t<e.length;t++){let r={orderId:e[t]};d.push(r)}let c={symbol:i.id};if(i.spot&&void 0===a?c.orderList=d:c.orderIdList=d,i.spot)o=void 0!==a?"cross"===a?await this.privateMarginPostV2MarginCrossedBatchCancelOrder(this.extend(c,r)):await this.privateMarginPostV2MarginIsolatedBatchCancelOrder(this.extend(c,r)):await this.privateSpotPostV2SpotTradeBatchCancelOrder(this.extend(c,r));else{let e;[e,r]=this.handleProductTypeAndParams(i,r),c.productType=e,o=n?await this.privateMixPostV2MixOrderCancelPlanOrder(this.extend(c,r)):await this.privateMixPostV2MixOrderBatchCancelOrders(this.extend(c,r))}let l=this.safeValue(o,"data",{}),h=this.safeList(l,"successList",[]);return this.parseOrders(h,i)}async cancelAllOrders(e,t={}){let r,i,a;if(void 0===e)throw new s.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);[i,t]=this.handleMarginModeAndParams("cancelAllOrders",t);let o={symbol:r.id},n=this.safeBool2(t,"stop","trigger");if(t=this.omit(t,["stop","trigger"]),r.spot){if(void 0!==i)a="cross"===i?await this.privateMarginPostMarginV1CrossOrderBatchCancelOrder(this.extend(o,t)):await this.privateMarginPostMarginV1IsolatedOrderBatchCancelOrder(this.extend(o,t));else{if(n){let e={symbolList:[r.id]};a=await this.privateSpotPostV2SpotTradeBatchCancelPlanOrder(this.extend(e,t))}else a=await this.privateSpotPostV2SpotTradeCancelSymbolOrder(this.extend(o,t));let e=this.safeInteger(a,"requestTime"),i=this.safeDict(a,"data"),s=this.safeString(i,"symbol");return[this.safeOrder({info:a,symbol:this.safeSymbol(s,void 0,void 0,"spot"),timestamp:e,datetime:this.iso8601(e)})]}}else{let e;[e,t]=this.handleProductTypeAndParams(r,t),o.productType=e,a=n?await this.privateMixPostV2MixOrderCancelPlanOrder(this.extend(o,t)):await this.privateMixPostV2MixOrderBatchCancelOrders(this.extend(o,t))}let d=this.safeDict(a,"data"),c=this.safeList2(d,"resultList","successList"),l=this.safeList2(d,"failure","failureList"),h=this.arrayConcat(c,l);return this.parseOrders(h)}async fetchOrder(e,t,r={}){let i,a;if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);i=this.market(e)}else i=this.market(t);let o={orderId:e};if(i.spot)a=await this.privateSpotGetV2SpotTradeOrderInfo(this.extend(o,r));else if(i.swap||i.future){let e;o.symbol=i.id,[e,r]=this.handleProductTypeAndParams(i,r),o.productType=e,a=await this.privateMixGetV2MixOrderDetail(this.extend(o,r))}else throw new s.NotSupported(this.id+" fetchOrder() does not support "+i.type+" orders");"string"==typeof a&&(a=JSON.parse(a));let n=this.safeDict(a,"data");if(void 0!==n&&!Array.isArray(n))return this.parseOrder(n,i);let d=this.safeList(a,"data",[]),c=this.safeDict(d,0,{});return this.parseOrder(c,i)}async fetchOpenOrders(e,t,r,i={}){let s,a,o,n,d;await this.loadMarkets();let c=this.safeBool(this.options,"sandboxMode",!1),l={};if([o,i]=this.handleMarginModeAndParams("fetchOpenOrders",i),void 0!==e){if(c){let t=this.convertSymbolForSandbox(e);s=this.market(t)}else s=this.market(e);l.symbol=s.id;let t=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot"),r="type"in s?s.type:t;a=this.safeString(i,"type",r)}else{let e=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot");a=this.safeString(i,"type",e)}let h=!1;if([h,i]=this.handleOptionAndParams(i,"fetchOpenOrders","paginate"),h){let s;return"spot"===a?void 0!==o&&(s="minId"):s="endId",await this.fetchPaginatedCallCursor("fetchOpenOrders",e,t,r,i,s,"idLessThan")}let p=this.safeBool(i,"trailing"),u=this.safeBool2(i,"stop","trigger"),m=void 0!==this.safeString(i,"planType");if(i=this.omit(i,["stop","trigger","trailing"]),[l,i]=this.handleUntilOption("endTime",l,i),void 0!==t&&(l.startTime=t),void 0!==r&&(l.limit=r),"swap"===a||"future"===a||void 0!==o){let e=this.safeString2(i,"clientOid","clientOrderId");i=this.omit(i,"clientOrderId"),void 0!==e&&(l.clientOid=e)}if(d=this.omit(i,["type"]),"spot"===a)void 0!==o?(void 0===t&&(t=this.milliseconds()-7776e6,l.startTime=t),"isolated"===o?n=await this.privateMarginGetV2MarginIsolatedOpenOrders(this.extend(l,d)):"cross"===o&&(n=await this.privateMarginGetV2MarginCrossedOpenOrders(this.extend(l,d)))):n=u?await this.privateSpotGetV2SpotTradeCurrentPlanOrder(this.extend(l,d)):await this.privateSpotGetV2SpotTradeUnfilledOrders(this.extend(l,d));else{let e;if([e,d]=this.handleProductTypeAndParams(s,d),l.productType=e,p){let e=this.safeString(i,"planType","track_plan");l.planType=e,n=await this.privateMixGetV2MixOrderOrdersPlanPending(this.extend(l,d))}else if(u||m){let e=this.safeString(d,"planType","normal_plan");l.planType=e,n=await this.privateMixGetV2MixOrderOrdersPlanPending(this.extend(l,d))}else n=await this.privateMixGetV2MixOrderOrdersPending(this.extend(l,d))}let f=this.safeValue(n,"data");if("spot"===a){if(void 0!==o||u){let e=this.safeList(f,"orderList",[]);return this.parseOrders(e,s,t,r)}}else{let e=this.safeList(f,"entrustedList",[]);return this.parseOrders(e,s,t,r)}return this.parseOrders(f,s,t,r)}async fetchClosedOrders(e,t,r,i={}){await this.loadMarkets();let s=await this.fetchCanceledAndClosedOrders(e,t,r,i);return this.filterBy(s,"status","closed")}async fetchCanceledOrders(e,t,r,i={}){await this.loadMarkets();let s=await this.fetchCanceledAndClosedOrders(e,t,r,i);return this.filterBy(s,"status","canceled")}async fetchCanceledAndClosedOrders(e,t,r,i={}){let a,o,n,d;await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)&&void 0!==e&&(e=this.convertSymbolForSandbox(e));let c={};void 0!==e&&(a=this.market(e),c.symbol=a.id),[o,i]=this.handleMarketTypeAndParams("fetchCanceledAndClosedOrders",a,i),[n,i]=this.handleMarginModeAndParams("fetchCanceledAndClosedOrders",i);let l=!1;if([l,i]=this.handleOptionAndParams(i,"fetchCanceledAndClosedOrders","paginate"),l){let s;return"spot"===o?void 0!==n&&(s="minId"):s="endId",await this.fetchPaginatedCallCursor("fetchCanceledAndClosedOrders",e,t,r,i,s,"idLessThan")}let h=this.safeValue(i,"trailing"),p=this.safeBool2(i,"stop","trigger");if(i=this.omit(i,["stop","trigger","trailing"]),[c,i]=this.handleUntilOption("endTime",c,i),void 0!==t&&(c.startTime=t),void 0!==r&&(c.limit=r),"swap"===o||"future"===o||void 0!==n){let e=this.safeString2(i,"clientOid","clientOrderId");i=this.omit(i,"clientOrderId"),void 0!==e&&(c.clientOid=e)}let u=this.milliseconds();if("spot"===o){if(void 0!==n)void 0===t&&(t=u-7776e6,c.startTime=t),"isolated"===n?d=await this.privateMarginGetV2MarginIsolatedHistoryOrders(this.extend(c,i)):"cross"===n&&(d=await this.privateMarginGetV2MarginCrossedHistoryOrders(this.extend(c,i)));else if(p){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchCanceledAndClosedOrders() requires a symbol argument");let r=this.safeIntegerN(i,["endTime","until"]);i=this.omit(i,["until"]),void 0===t&&(t=u-7776e6,c.startTime=t),void 0===r&&(c.endTime=u),d=await this.privateSpotGetV2SpotTradeHistoryPlanOrder(this.extend(c,i))}else d=await this.privateSpotGetV2SpotTradeHistoryOrders(this.extend(c,i))}else{let e;if([e,i]=this.handleProductTypeAndParams(a,i),c.productType=e,h){let e=this.safeString(i,"planType","track_plan");c.planType=e,d=await this.privateMixGetV2MixOrderOrdersPlanHistory(this.extend(c,i))}else if(p){let e=this.safeString(i,"planType","normal_plan");c.planType=e,d=await this.privateMixGetV2MixOrderOrdersPlanHistory(this.extend(c,i))}else d=await this.privateMixGetV2MixOrderOrdersHistory(this.extend(c,i))}let m=this.safeValue(d,"data",{});if("spot"!==o)return this.parseOrders(this.safeValue(m,"entrustedList",[]),a,t,r);if(void 0!==n||p)return this.parseOrders(this.safeValue(m,"orderList",[]),a,t,r);"string"==typeof d&&(d=JSON.parse(d));let f=this.safeList(d,"data",[]);return this.parseOrders(f,a,t,r)}async fetchLedger(e,t,r,i={}){let s,a,o,n;await this.loadMarkets();let d=this.safeString(i,"symbol");if(i=this.omit(i,"symbol"),void 0!==d){if(this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(d);s=this.market(e)}else s=this.market(d)}[a,i]=this.handleMarketTypeAndParams("fetchLedger",s,i);let c=!1;if([c,i]=this.handleOptionAndParams(i,"fetchLedger","paginate"),c){let e;return"spot"!==a&&(e="endId"),await this.fetchPaginatedCallCursor("fetchLedger",d,t,r,i,e,"idLessThan")}let l={};if(void 0!==e&&(o=this.currency(e),l.coin=o.id),[l,i]=this.handleUntilOption("endTime",l,i),void 0!==t&&(l.startTime=t),void 0!==r&&(l.limit=r),"spot"===a)n=await this.privateSpotGetV2SpotAccountBills(this.extend(l,i));else{let e;void 0!==d&&(l.symbol=s.id),[e,i]=this.handleProductTypeAndParams(s,i),l.productType=e,n=await this.privateMixGetV2MixAccountBill(this.extend(l,i))}let h=this.safeValue(n,"data");if("swap"===a||"future"===a){let e=this.safeValue(h,"bills",[]);return this.parseLedger(e,o,t,r)}return this.parseLedger(h,o,t,r)}parseLedgerEntry(e,t){let r=this.safeString(e,"coin"),i=this.safeCurrencyCode(r,t);t=this.safeCurrency(r,t);let s=this.safeInteger(e,"cTime"),o=this.safeNumber(e,"balance"),n=this.safeNumber2(e,"fees","fee"),d=this.safeString2(e,"size","amount"),c=this.parseNumber(a.Y.stringAbs(d)),l="in";return d.indexOf("-")>=0&&(l="out"),this.safeLedgerEntry({info:e,id:this.safeString(e,"billId"),timestamp:s,datetime:this.iso8601(s),direction:l,account:void 0,referenceId:void 0,referenceAccount:void 0,type:this.parseLedgerType(this.safeString(e,"businessType")),currency:i,amount:c,before:void 0,after:o,status:void 0,fee:{currency:i,cost:n}},t)}parseLedgerType(e){return this.safeString({trans_to_cross:"transfer",trans_from_cross:"transfer",trans_to_exchange:"transfer",trans_from_exchange:"transfer",trans_to_isolated:"transfer",trans_from_isolated:"transfer",trans_to_contract:"transfer",trans_from_contract:"transfer",trans_to_otc:"transfer",trans_from_otc:"transfer",open_long:"trade",close_long:"trade",open_short:"trade",close_short:"trade",force_close_long:"trade",force_close_short:"trade",burst_long_loss_query:"trade",burst_short_loss_query:"trade",force_buy:"trade",force_sell:"trade",burst_buy:"trade",burst_sell:"trade",delivery_long:"settlement",delivery_short:"settlement",contract_settle_fee:"fee",append_margin:"transaction",adjust_down_lever_append_margin:"transaction",reduce_margin:"transaction",auto_append_margin:"transaction",cash_gift_issue:"cashback",cash_gift_recycle:"cashback",bonus_issue:"rebate",bonus_recycle:"rebate",bonus_expired:"rebate",transfer_in:"transfer",transfer_out:"transfer",deposit:"deposit",withdraw:"withdrawal",buy:"trade",sell:"trade"},e,e)}async fetchMyTrades(e,t,r,i={}){let a,o,n;if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);a=this.market(t)}else a=this.market(e);[o,i]=this.handleMarginModeAndParams("fetchMyTrades",i);let d=!1;if([d,i]=this.handleOptionAndParams(i,"fetchMyTrades","paginate"),d){let s;return a.spot?void 0!==o&&(s="minId"):s="endId",await this.fetchPaginatedCallCursor("fetchMyTrades",e,t,r,i,s,"idLessThan")}let c={symbol:a.id};if([c,i]=this.handleUntilOption("endTime",c,i),void 0!==t&&(c.startTime=t),void 0!==r&&(c.limit=r),a.spot)void 0!==o?(void 0===t&&(c.startTime=this.milliseconds()-7776e6),"isolated"===o?n=await this.privateMarginGetV2MarginIsolatedFills(this.extend(c,i)):"cross"===o&&(n=await this.privateMarginGetV2MarginCrossedFills(this.extend(c,i)))):n=await this.privateSpotGetV2SpotTradeFills(this.extend(c,i));else{let e;[e,i]=this.handleProductTypeAndParams(a,i),c.productType=e,n=await this.privateMixGetV2MixOrderFills(this.extend(c,i))}let l=this.safeValue(n,"data");if(a.swap||a.future){let e=this.safeList(l,"fillList",[]);return this.parseTrades(e,a,t,r)}if(void 0!==o){let e=this.safeList(l,"fills",[]);return this.parseTrades(e,a,t,r)}return this.parseTrades(l,a,t,r)}async fetchPosition(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);[i,t]=this.handleProductTypeAndParams(r,t);let s={symbol:r.id,marginCoin:r.settleId,productType:i},a=await this.privateMixGetV2MixPositionSinglePosition(this.extend(s,t)),o=this.safeList(a,"data",[]),n=this.safeDict(o,0,{});return this.parsePosition(n,r)}async fetchPositions(e,t={}){let r,i,a,o;await this.loadMarkets();let n=!1;if([n,t]=this.handleOptionAndParams(t,"fetchPositions","paginate"),n)return await this.fetchPaginatedCallCursor("fetchPositions",void 0,void 0,void 0,t,"endId","idLessThan");if(this.safeBool(t,"useHistoryEndpoint",!1)?r="privateMixGetV2MixPositionHistoryPosition":[r,t]=this.handleOptionAndParams(t,"fetchPositions","method","privateMixGetV2MixPositionAllPosition"),void 0!==e){let t=this.safeString(e,0);if(this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);i=this.market(e)}else i=this.market(t)}[a,t]=this.handleProductTypeAndParams(i,t);let d={productType:a},c=!1;if("privateMixGetV2MixPositionAllPosition"===r){let r=this.safeString(t,"marginCoin","USDT");if(void 0!==e)r=i.settleId;else if("USDT-FUTURES"===a)r="USDT";else if("USDC-FUTURES"===a)r="USDC";else if("SUSDT-FUTURES"===a)r="SUSDT";else if("SUSDC-FUTURES"===a)r="SUSDC";else if(("SCOIN-FUTURES"===a||"COIN-FUTURES"===a)&&void 0===r)throw new s.ArgumentsRequired(this.id+" fetchPositions() requires a marginCoin parameter that matches the productType");d.marginCoin=r,o=await this.privateMixGetV2MixPositionAllPosition(this.extend(d,t))}else c=!0,void 0!==i&&(d.symbol=i.id),o=await this.privateMixGetV2MixPositionHistoryPosition(this.extend(d,t));let l=[];if(c){let e=this.safeDict(o,"data",{});l=this.safeList(e,"list",[])}else l=this.safeList(o,"data",[]);let h=[];for(let e=0;e<l.length;e++)h.push(this.parsePosition(l[e],i));return e=this.marketSymbols(e),this.filterByArrayPositions(h,"symbol",e,!1)}parsePosition(e,t){let r,i,s;let o=this.safeString(e,"symbol"),n=(t=this.safeMarket(o,t,void 0,"contract")).symbol,d=this.safeInteger2(e,"cTime","ctime"),c=this.safeString(e,"marginMode"),l=this.safeString(e,"unrealizedPL"),h=this.safeString(e,"marginSize");"isolated"===c?r=a.Y.stringAdd(h,l):"crossed"===c&&(c="cross",i=h);let p=this.safeString(e,"posMode");"hedge_mode"===p?s=!0:"one_way_mode"===p&&(s=!1);let u=this.safeString(e,"holdSide"),m=this.safeString(e,"leverage"),f=this.safeValue(t,"contractSize"),g=this.numberToString(f),v=this.safeString(e,"total"),y=this.safeString2(e,"openPriceAvg","openAvgPrice"),x=this.safeString(e,"keepMarginRate"),b=a.Y.stringMul(y,v);void 0===i&&(i=a.Y.stringDiv(b,m));let S=this.parseNumber(a.Y.stringDiv(v,g));void 0===S&&(S=this.safeNumber(e,"closeTotalPos"));let w=this.safeString(e,"markPrice"),P=a.Y.stringMul(v,w),T=a.Y.stringDiv(i,P),M=this.parseNumber(this.omitZero(this.safeString(e,"liquidationPrice"))),E="0.9994";if(void 0===M&&"isolated"===c&&a.Y.stringGt(v,"0")){let e=a.Y.stringDiv(h,v),t=x;"short"===u&&(e=a.Y.stringNeg(e),t=a.Y.stringNeg(t));let r=a.Y.stringSub("1",t),i=a.Y.stringSub(y,e);"long"===u?r=a.Y.stringMul(r,E):i=a.Y.stringMul(i,E),M=this.parseNumber(a.Y.stringDiv(i,r))}let O=a.Y.stringMul(P,"0.0006"),k=a.Y.stringAdd(a.Y.stringMul(x,P),O),C=a.Y.stringMul(a.Y.stringDiv(l,i,4),"100");return this.safePosition({info:e,id:this.safeString(e,"orderId"),symbol:n,notional:this.parseNumber(P),marginMode:c,liquidationPrice:M,entryPrice:this.parseNumber(y),unrealizedPnl:this.parseNumber(l),realizedPnl:this.safeNumber(e,"pnl"),percentage:this.parseNumber(C),contracts:S,contractSize:f,markPrice:this.parseNumber(w),lastPrice:this.safeNumber(e,"closeAvgPrice"),side:u,hedged:s,timestamp:d,datetime:this.iso8601(d),lastUpdateTimestamp:this.safeInteger(e,"utime"),maintenanceMargin:this.parseNumber(k),maintenanceMarginPercentage:this.parseNumber(x),collateral:this.parseNumber(r),initialMargin:this.parseNumber(i),initialMarginPercentage:this.parseNumber(T),leverage:this.parseNumber(m),marginRatio:this.safeNumber(e,"marginRatio"),stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchFundingRateHistory(e,t,r,i={}){let a,o;if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let n=!1;if([n,i]=this.handleOptionAndParams(i,"fetchFundingRateHistory","paginate"),n)return await this.fetchPaginatedCallIncremental("fetchFundingRateHistory",e,t,r,i,"pageNo",100);if(this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);a=this.market(t)}else a=this.market(e);[o,i]=this.handleProductTypeAndParams(a,i);let d={symbol:a.id,productType:o};void 0!==r&&(d.pageSize=r);let c=await this.publicMixGetV2MixMarketHistoryFundRate(this.extend(d,i)),l=this.safeValue(c,"data",[]),h=[];for(let e=0;e<l.length;e++){let t=l[e],r=this.safeString(t,"symbol"),i=this.safeSymbol(r,a),s=this.safeInteger(t,"fundingTime");h.push({info:t,symbol:i,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:s,datetime:this.iso8601(s)})}let p=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(p,a.symbol,t,r)}async fetchFundingRate(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);if(!r.swap)throw new s.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");[i,t]=this.handleProductTypeAndParams(r,t);let a={symbol:r.id,productType:i},o=await this.publicMixGetV2MixMarketCurrentFundRate(this.extend(a,t)),n=this.safeValue(o,"data",[]);return this.parseFundingRate(n[0],r)}async fetchFundingRates(e,t={}){let r,i;if(await this.loadMarkets(),void 0!==e){let t=this.safeValue(e,0);if(this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);r=this.market(e)}else r=this.market(t)}let s={};[i,t]=this.handleProductTypeAndParams(r,t),s.productType=i;let a=await this.publicMixGetV2MixMarketTickers(this.extend(s,t));e=this.marketSymbols(e);let o=this.safeList(a,"data",[]);return this.parseFundingRates(o,e)}parseFundingRate(e,t){let r;let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,void 0,"swap"),a=this.safeInteger(e,"nextFundingTime"),o=this.safeString(e,"ratePeriod"),n=this.safeInteger(e,"ts"),d=this.safeNumber(e,"markPrice"),c=this.safeNumber(e,"indexPrice");return void 0!==o&&(r=o+"h"),{info:e,symbol:s,markPrice:d,indexPrice:c,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:n,datetime:this.iso8601(n),fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:a,fundingDatetime:this.iso8601(a),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:r}}async fetchFundingHistory(e,t,r,i={}){let a,o;if(await this.loadMarkets(),void 0===e)throw new s.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");let n=!1;if([n,i]=this.handleOptionAndParams(i,"fetchFundingHistory","paginate"),n)return await this.fetchPaginatedCallCursor("fetchFundingHistory",e,t,r,i,"endId","idLessThan");if(this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);a=this.market(t)}else a=this.market(e);if(!a.swap)throw new s.BadSymbol(this.id+" fetchFundingHistory() supports swap contracts only");[o,i]=this.handleProductTypeAndParams(a,i);let d={symbol:a.id,marginCoin:a.settleId,businessType:"contract_settle_fee",productType:o};[d,i]=this.handleUntilOption("endTime",d,i),void 0!==t&&(d.startTime=t),void 0!==r&&(d.limit=r);let c=await this.privateMixGetV2MixAccountBill(this.extend(d,i)),l=this.safeValue(c,"data",{}),h=this.safeValue(l,"bills",[]);return this.parseFundingHistories(h,a,t,r)}parseFundingHistory(e,t){let r=this.safeString(e,"symbol"),i=this.safeString(e,"coin"),s=this.safeInteger(e,"cTime");return{info:e,symbol:this.safeSymbol(r,t,void 0,"swap"),timestamp:s,datetime:this.iso8601(s),code:this.safeCurrencyCode(i),amount:this.safeNumber(e,"amount"),id:this.safeString(e,"billId")}}parseFundingHistories(e,t,r,i){let s=[];for(let r=0;r<e.length;r++){let i=e[r];"contract_settle_fee"===this.safeString(i,"businessType")&&s.push(this.parseFundingHistory(i,t))}let a=this.sortBy(s,"timestamp");return this.filterBySinceLimit(a,r,i)}async modifyMarginHelper(e,t,r,i={}){let s,a;await this.loadMarkets();let o=this.safeString(i,"holdSide");if(this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);s=this.market(t)}else s=this.market(e);[a,i]=this.handleProductTypeAndParams(s,i);let n={symbol:s.id,marginCoin:s.settleId,amount:this.amountToPrecision(e,t),holdSide:o,productType:a};i=this.omit(i,"holdSide");let d=await this.privateMixPostV2MixAccountSetMargin(this.extend(n,i));return this.extend(this.parseMarginModification(d,s),{amount:this.parseNumber(t),type:r})}parseMarginModification(e,t){let r=this.safeString(e,"code");return{info:e,symbol:t.symbol,type:void 0,marginMode:"isolated",amount:void 0,total:void 0,code:t.settle,status:"00000"===r?"ok":"failed",timestamp:void 0,datetime:void 0}}async reduceMargin(e,t,r={}){if(t>0)throw new s.BadRequest(this.id+" reduceMargin() amount parameter must be a negative value");if(void 0===this.safeString(r,"holdSide"))throw new s.ArgumentsRequired(this.id+" reduceMargin() requires a holdSide parameter, either long or short");return await this.modifyMarginHelper(e,t,"reduce",r)}async addMargin(e,t,r={}){if(void 0===this.safeString(r,"holdSide"))throw new s.ArgumentsRequired(this.id+" addMargin() requires a holdSide parameter, either long or short");return await this.modifyMarginHelper(e,t,"add",r)}async fetchLeverage(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);[i,t]=this.handleProductTypeAndParams(r,t);let s={symbol:r.id,marginCoin:r.settleId,productType:i},a=await this.privateMixGetV2MixAccountAccount(this.extend(s,t)),o=this.safeDict(a,"data",{});return this.parseLeverage(o,r)}parseLeverage(e,t){return{info:e,symbol:t.symbol,marginMode:"isolated",longLeverage:this.safeInteger(e,"isolatedLongLever"),shortLeverage:this.safeInteger(e,"isolatedShortLever")}}async setLeverage(e,t,r={}){let i,a;if(void 0===t)throw new s.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);i=this.market(e)}else i=this.market(t);[a,r]=this.handleProductTypeAndParams(i,r);let o={symbol:i.id,marginCoin:i.settleId,leverage:this.numberToString(e),productType:a};return await this.privateMixPostV2MixAccountSetLeverage(this.extend(o,r))}async setMarginMode(e,t,r={}){let i,a;if(void 0===t)throw new s.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("cross"===(e=e.toLowerCase())&&(e="crossed"),"isolated"!==e&&"crossed"!==e)throw new s.ArgumentsRequired(this.id+" setMarginMode() marginMode must be either isolated or crossed (cross)");if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);i=this.market(e)}else i=this.market(t);[a,r]=this.handleProductTypeAndParams(i,r);let o={symbol:i.id,marginCoin:i.settleId,marginMode:e,productType:a};return await this.privateMixPostV2MixAccountSetMarginMode(this.extend(o,r))}async setPositionMode(e,t,r={}){let i,s;if(await this.loadMarkets(),void 0!==t){if(this.safeBool(this.options,"sandboxMode",!1)){let e=this.convertSymbolForSandbox(t);i=this.market(e)}else i=this.market(t)}return[s,r]=this.handleProductTypeAndParams(i,r),await this.privateMixPostV2MixAccountSetPositionMode(this.extend({posMode:e?"hedge_mode":"one_way_mode",productType:s},r))}async fetchOpenInterest(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);if(!r.contract)throw new s.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");[i,t]=this.handleProductTypeAndParams(r,t);let a={symbol:r.id,productType:i},o=await this.publicMixGetV2MixMarketOpenInterest(this.extend(a,t)),n=this.safeDict(o,"data",{});return this.parseOpenInterest(n,r)}parseOpenInterest(e,t){let r=this.safeValue(e,"openInterestList",[]),i=this.safeInteger(e,"ts"),s=this.safeString(r[0],"symbol");return this.safeOpenInterest({symbol:this.safeSymbol(s,t,void 0,"contract"),openInterestAmount:this.safeNumber(r[0],"size"),openInterestValue:void 0,timestamp:i,datetime:this.iso8601(i),info:e},t)}async fetchTransfers(e,t,r,i={}){let a;if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchTransfers() requires a code argument");await this.loadMarkets(),[a,i]=this.handleMarketTypeAndParams("fetchTransfers",void 0,i);let o=this.safeString(i,"fromAccount",a);i=this.omit(i,"fromAccount");let n=this.safeValue(this.options,"accountsByType",{});a=this.safeString(n,o);let d=this.currency(e),c={coin:d.id,fromType:a};void 0!==t&&(c.startTime=t),void 0!==r&&(c.limit=r),[c,i]=this.handleUntilOption("endTime",c,i);let l=await this.privateSpotGetV2SpotAccountTransferRecords(this.extend(c,i)),h=this.safeList(l,"data",[]);return this.parseTransfers(h,d,t,r)}async transfer(e,t,r,i,s={}){let a;await this.loadMarkets();let o=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),d={fromType:this.safeString(n,r),toType:this.safeString(n,i),amount:t,coin:o.id},c=this.safeString(s,"symbol");s=this.omit(s,"symbol"),void 0!==c&&(a=this.market(c),d.symbol=a.id);let l=await this.privateSpotPostV2SpotWalletTransfer(this.extend(d,s)),h=this.safeValue(l,"data",{});return h.ts=this.safeInteger(l,"requestTime"),this.parseTransfer(h,o)}parseTransfer(e,t){let r=this.safeInteger(e,"ts"),i=this.safeStringLower(e,"status"),s=this.safeString(e,"coin"),a=this.safeString(e,"fromType"),o=this.safeValue(this.options,"accountsById",{}),n=this.safeString(o,a,a),d=this.safeString(e,"toType"),c=this.safeString(o,d,d);return{info:e,id:this.safeString(e,"transferId"),timestamp:r,datetime:this.iso8601(r),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"size"),fromAccount:n,toAccount:c,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return this.safeString({successful:"ok"},e,e)}parseDepositWithdrawFee(e,t){let r=this.safeValue(e,"chains",[]),i=r.length,s={info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}};for(let e=0;e<i;e++){let a=r[e],o=this.safeString(a,"chain"),n=this.safeString(t,"code"),d=this.networkIdToCode(o,n);s.networks[d]={deposit:{fee:void 0,percentage:void 0},withdraw:{fee:this.safeNumber(a,"withdrawFee"),percentage:!1}},1===i&&(s.withdraw.fee=this.safeNumber(a,"withdrawFee"),s.withdraw.percentage=!1)}return s}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let r=await this.publicSpotGetV2SpotPublicCoins(t),i=this.safeList(r,"data",[]);return this.parseDepositWithdrawFees(i,e,"coin")}async borrowCrossMargin(e,t,r={}){await this.loadMarkets();let i=this.currency(e),s={coin:i.id,borrowAmount:this.currencyToPrecision(e,t)},a=await this.privateMarginPostV2MarginCrossedAccountBorrow(this.extend(s,r)),o=this.safeValue(a,"data",{});return this.parseMarginLoan(o,i)}async borrowIsolatedMargin(e,t,r,i={}){await this.loadMarkets();let s=this.currency(t),a=this.market(e),o={coin:s.id,borrowAmount:this.currencyToPrecision(t,r),symbol:a.id},n=await this.privateMarginPostV2MarginIsolatedAccountBorrow(this.extend(o,i)),d=this.safeValue(n,"data",{});return this.parseMarginLoan(d,s,a)}async repayIsolatedMargin(e,t,r,i={}){await this.loadMarkets();let s=this.currency(t),a=this.market(e),o={coin:s.id,repayAmount:this.currencyToPrecision(t,r),symbol:a.id},n=await this.privateMarginPostV2MarginIsolatedAccountRepay(this.extend(o,i)),d=this.safeValue(n,"data",{});return this.parseMarginLoan(d,s,a)}async repayCrossMargin(e,t,r={}){await this.loadMarkets();let i=this.currency(e),s={coin:i.id,repayAmount:this.currencyToPrecision(e,t)},a=await this.privateMarginPostV2MarginCrossedAccountRepay(this.extend(s,r)),o=this.safeValue(a,"data",{});return this.parseMarginLoan(o,i)}parseMarginLoan(e,t,r){let i;let s=this.safeString(e,"coin"),a=this.safeString(e,"symbol");return void 0!==a&&(i=this.safeSymbol(a,r,void 0,"spot")),{id:this.safeString2(e,"loanId","repayId"),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber2(e,"borrowAmount","repayAmount"),symbol:i,timestamp:void 0,datetime:void 0,info:e}}async fetchMyLiquidations(e,t,r,i={}){let a,o,n,d;await this.loadMarkets();let c=!1;if([c,i]=this.handleOptionAndParams(i,"fetchMyLiquidations","paginate"),c)return await this.fetchPaginatedCallCursor("fetchMyLiquidations",e,t,r,i,"minId","idLessThan");if(void 0!==e&&(a=this.market(e)),[o,i]=this.handleMarketTypeAndParams("fetchMyLiquidations",a,i),"spot"!==o)throw new s.NotSupported(this.id+" fetchMyLiquidations() supports spot margin markets only");let l={};if([l,i]=this.handleUntilOption("endTime",l,i),void 0!==t?l.startTime=t:l.startTime=this.milliseconds()-7776e6,void 0!==r&&(l.limit=r),[d,i]=this.handleMarginModeAndParams("fetchMyLiquidations",i,"cross"),"isolated"===d){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchMyLiquidations() requires a symbol argument");l.symbol=a.id,n=await this.privateMarginGetV2MarginIsolatedLiquidationHistory(this.extend(l,i))}else"cross"===d&&(n=await this.privateMarginGetV2MarginCrossedLiquidationHistory(this.extend(l,i)));let h=this.safeValue(n,"data",{}),p=this.safeList(h,"resultList",[]);return this.parseLiquidations(p,a,t,r)}parseLiquidation(e,t){let r=this.safeString(e,"symbol"),i=this.safeInteger(e,"liqEndTime"),s=this.safeString2(e,"LiqFee","liqFee"),o=this.safeString(e,"totalDebt"),n=a.Y.stringAdd(s,o);return this.safeLiquidation({info:e,symbol:this.safeSymbol(r,t),contracts:void 0,contractSize:void 0,price:void 0,baseValue:void 0,quoteValue:this.parseNumber(n),timestamp:i,datetime:this.iso8601(i)})}async fetchIsolatedBorrowRate(e,t={}){await this.loadMarkets();let r=this.market(e),i={symbol:r.id},s=await this.privateMarginGetV2MarginIsolatedInterestRateAndLimit(this.extend(i,t)),a=this.safeInteger(s,"requestTime"),o=this.safeValue(s,"data",[]),n=this.safeValue(o,0,{});return n.timestamp=a,this.parseIsolatedBorrowRate(n,r)}parseIsolatedBorrowRate(e,t){let r=this.safeString(e,"symbol"),i=this.safeSymbol(r,t,void 0,"spot"),s=this.safeString(e,"baseCoin"),a=this.safeString(e,"quoteCoin"),o=this.safeInteger(e,"timestamp");return{symbol:i,base:this.safeCurrencyCode(s),baseRate:this.safeNumber(e,"baseDailyInterestRate"),quote:this.safeCurrencyCode(a),quoteRate:this.safeNumber(e,"quoteDailyInterestRate"),period:864e5,timestamp:o,datetime:this.iso8601(o),info:e}}async fetchCrossBorrowRate(e,t={}){await this.loadMarkets();let r=this.currency(e),i={coin:r.id},s=await this.privateMarginGetV2MarginCrossedInterestRateAndLimit(this.extend(i,t)),a=this.safeInteger(s,"requestTime"),o=this.safeValue(s,"data",[]),n=this.safeValue(o,0,{});return n.timestamp=a,this.parseBorrowRate(n,r)}parseBorrowRate(e,t){let r=this.safeString(e,"coin"),i=this.safeInteger(e,"timestamp");return{currency:this.safeCurrencyCode(r,t),rate:this.safeNumber(e,"dailyInterestRate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchBorrowInterest(e,t,r,i,a={}){let o,n,d,c;await this.loadMarkets();let l=!1;if([l,a]=this.handleOptionAndParams(a,"fetchBorrowInterest","paginate"),l)return await this.fetchPaginatedCallCursor("fetchBorrowInterest",t,r,i,a,"minId","idLessThan");void 0!==t&&(o=this.market(t));let h={};if(void 0!==e&&(n=this.currency(e),h.coin=n.id),void 0!==r?h.startTime=r:h.startTime=this.milliseconds()-7776e6,void 0!==i&&(h.limit=i),[c,a]=this.handleMarginModeAndParams("fetchBorrowInterest",a,"cross"),"isolated"===c){if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchBorrowInterest() requires a symbol argument");h.symbol=o.id,d=await this.privateMarginGetV2MarginIsolatedInterestHistory(this.extend(h,a))}else"cross"===c&&(d=await this.privateMarginGetV2MarginCrossedInterestHistory(this.extend(h,a)));let p=this.safeValue(d,"data",{}),u=this.safeValue(p,"resultList",[]),m=this.parseBorrowInterests(u,o);return this.filterByCurrencySinceLimit(m,e,r,i)}parseBorrowInterest(e,t){let r=this.safeString(e,"symbol");t=this.safeMarket(r,t);let i=void 0!==r?"isolated":"cross",s=this.safeInteger(e,"cTime");return{info:e,symbol:this.safeString(t,"symbol"),currency:this.safeCurrencyCode(this.safeString(e,"interestCoin")),interest:this.safeNumber(e,"interestAmount"),interestRate:this.safeNumber(e,"dailyInterestRate"),amountBorrowed:void 0,marginMode:i,timestamp:s,datetime:this.iso8601(s)}}async closePosition(e,t,r={}){let i,s;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);i=this.market(t)}else i=this.market(e);[s,r]=this.handleProductTypeAndParams(i,r);let a={symbol:i.id,productType:s};void 0!==t&&(a.holdSide=t);let o=await this.privateMixPostV2MixOrderClosePositions(this.extend(a,r)),n=this.safeValue(o,"data",{}),d=this.safeList(n,"successList",[]);return this.parseOrder(d[0],i)}async closeAllPositions(e={}){let t;await this.loadMarkets(),[t,e]=this.handleProductTypeAndParams(void 0,e);let r=await this.privateMixPostV2MixOrderClosePositions(this.extend({productType:t},e)),i=this.safeValue(r,"data",{}),s=this.safeList(i,"successList",[]);return this.parsePositions(s,void 0,e)}async fetchMarginMode(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);[i,t]=this.handleProductTypeAndParams(r,t);let s={symbol:r.id,marginCoin:r.settleId,productType:i},a=await this.privateMixGetV2MixAccountAccount(this.extend(s,t)),o=this.safeDict(a,"data",{});return this.parseMarginMode(o,r)}parseMarginMode(e,t){let r=this.safeString(e,"marginMode");return r="crossed"===r?"cross":r,{info:e,symbol:t.symbol,marginMode:r}}async fetchPositionsHistory(e,t,r,i={}){await this.loadMarkets();let s=this.safeInteger(i,"until");i=this.omit(i,"until");let a={};if(void 0!==e&&e.length>0){let t=this.market(e[0]);a.symbol=t.id}void 0!==t&&(a.startTime=t),void 0!==r&&(a.limit=r),void 0!==s&&(a.endTime=s);let o=await this.privateMixGetV2MixPositionHistoryPosition(this.extend(a,i)),n=this.safeDict(o,"data"),d=this.safeList(n,"list"),c=this.parsePositions(d,e,i);return this.filterBySinceLimit(c,t,r)}async fetchConvertQuote(e,t,r,i={}){await this.loadMarkets();let s={fromCoin:e,toCoin:t,fromCoinSize:this.numberToString(r)},a=await this.privateConvertGetV2ConvertQuotedPrice(this.extend(s,i)),o=this.safeDict(a,"data",{}),n=this.safeString(o,"fromCoin",e),d=this.currency(n),c=this.safeString(o,"toCoin",t),l=this.currency(c);return this.parseConversion(o,d,l)}async createConvertTrade(e,t,r,i,a={}){await this.loadMarkets();let o=this.safeString2(a,"price","cnvtPrice");if(void 0===o)throw new s.ArgumentsRequired(this.id+" createConvertTrade() requires a price parameter");let n=this.safeString2(a,"toAmount","toCoinSize");if(void 0===n)throw new s.ArgumentsRequired(this.id+" createConvertTrade() requires a toAmount parameter");a=this.omit(a,["price","toAmount"]);let d={traceId:e,fromCoin:t,toCoin:r,fromCoinSize:this.numberToString(i),toCoinSize:n,cnvtPrice:o},c=await this.privateConvertPostV2ConvertTrade(this.extend(d,a)),l=this.safeDict(c,"data",{}),h=this.safeString(l,"toCoin",r),p=this.currency(h);return this.parseConversion(l,void 0,p)}async fetchConvertTradeHistory(e,t,r,i={}){await this.loadMarkets();let s={},a=this.milliseconds();void 0!==t?s.startTime=t:s.startTime=a-864e5;let o=this.safeString2(i,"endTime","until");void 0!==o?s.endTime=o:s.endTime=a,void 0!==r&&(s.limit=r),i=this.omit(i,"until");let n=await this.privateConvertGetV2ConvertConvertRecord(this.extend(s,i)),d=this.safeDict(n,"data",{}),c=this.safeList(d,"dataList",[]);return this.parseConversions(c,e,"fromCoin","toCoin",t,r)}parseConversion(e,t,r){let i=this.safeInteger(e,"ts"),s=this.safeString(e,"fromCoin"),a=this.safeCurrencyCode(s,t),o=this.safeString(e,"toCoin"),n=this.safeCurrencyCode(o,r);return{info:e,timestamp:i,datetime:this.iso8601(i),id:this.safeString2(e,"id","traceId"),fromCurrency:a,fromAmount:this.safeNumber(e,"fromCoinSize"),toCurrency:n,toAmount:this.safeNumber(e,"toCoinSize"),price:this.safeNumber(e,"cnvtPrice"),fee:this.safeNumber(e,"fee")}}async fetchConvertCurrencies(e={}){await this.loadMarkets();let t=await this.privateConvertGetV2ConvertCurrencies(e),r={},i=this.safeList(t,"data",[]);for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"coin"),a=this.safeCurrencyCode(s);r[a]={info:t,id:s,code:a,networks:void 0,type:void 0,name:void 0,active:void 0,deposit:void 0,withdraw:this.safeNumber(t,"available"),fee:void 0,precision:void 0,limits:{amount:{min:this.safeNumber(t,"minAmount"),max:this.safeNumber(t,"maxAmount")},withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}},created:void 0}}return r}async fetchFundingInterval(e,t={}){let r,i;if(await this.loadMarkets(),this.safeBool(this.options,"sandboxMode",!1)){let t=this.convertSymbolForSandbox(e);r=this.market(t)}else r=this.market(e);[i,t]=this.handleProductTypeAndParams(r,t);let s={symbol:r.id,productType:i},a=await this.publicMixGetV2MixMarketFundingTime(this.extend(s,t)),o=this.safeList(a,"data",[]),n=this.safeDict(o,0,{});return this.parseFundingRate(n,r)}async fetchLongShortRatioHistory(e,t,r,i,s={}){let a;await this.loadMarkets();let o=this.market(e),n={symbol:o.id};void 0!==t&&(n.period=t),a=o.swap||o.future?await this.publicMixGetV2MixMarketAccountLongShort(this.extend(n,s)):await this.publicMarginGetV2MarginMarketLongShortRatio(this.extend(n,s));let d=this.safeList(a,"data",[]);return this.parseLongShortRatioHistory(d,o)}parseLongShortRatio(e,t){let r=this.safeString(e,"symbol"),i=this.safeIntegerOmitZero(e,"ts");return{info:e,symbol:this.safeSymbol(r,t,void 0,"contract"),timestamp:i,datetime:this.iso8601(i),timeframe:void 0,longShortRatio:this.safeNumber2(e,"longShortRatio","longShortAccountRatio")}}handleErrors(e,t,r,i,a,o,n,d,c){if(!n)return;let l=this.safeString2(n,"err_msg","msg"),h=this.id+" "+o,p=void 0!==l&&""!==l&&"success"!==l;p&&(this.throwExactlyMatchedException(this.exceptions.exact,l,h),this.throwBroadlyMatchedException(this.exceptions.broad,l,h));let u=this.safeString2(n,"code","err_code"),m=void 0!==u&&"00000"!==u;if(m&&this.throwExactlyMatchedException(this.exceptions.exact,u,h),m||p)throw new s.ExchangeError(h)}nonce(){return this.milliseconds()-this.options.timeDifference}sign(e,t=[],r="GET",i={},s,a){let o="private"===t[0],d=t[1],c="/api/"+this.implodeParams(e,i),l=this.implodeHostname(this.urls.api[d])+c,h=this.omit(i,this.extractParams(e));if(!o&&"GET"===r&&Object.keys(h).length>0&&(l=l+"?"+this.urlencode(h)),o){this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+r+c;if("POST"===r)t+=a=this.json(i);else if(Object.keys(i).length){let e="?"+this.urlencode(this.keysort(i));e.indexOf("%24")>-1&&(e=e.replace("%24","$")),l+=e,t+=e}let o=this.hmac(this.encode(t),this.encode(this.secret),n.s,"base64"),d=this.safeString(this.options,"broker");s={"ACCESS-KEY":this.apiKey,"ACCESS-SIGN":o,"ACCESS-TIMESTAMP":e,"ACCESS-PASSPHRASE":this.password,"X-CHANNEL-API-CODE":d},"POST"===r&&(s["Content-Type"]="application/json")}return{url:l,method:r,body:a,headers:s}}}}}]);