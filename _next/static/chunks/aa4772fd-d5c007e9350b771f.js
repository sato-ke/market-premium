"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[535],{8191:(e,t,i)=>{i.d(t,{A:()=>d});var r=i(1120),s=i(8119),a=i(6077),o=i(3675),n=i(5432);class d extends r.A{describe(){return this.deepExtend(super.describe(),{id:"kucoin",name:"KuCoin",countries:["SC"],rateLimit:10,version:"v2",certified:!0,pro:!0,comment:"Platform 2.0",quoteJsonNumbers:!1,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,borrowCrossMargin:!0,borrowIsolatedMargin:!0,cancelAllOrders:!0,cancelOrder:!0,closeAllPositions:!1,closePosition:!1,createDepositAddress:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!0,createMarketSellOrderWithCost:!0,createOrder:!0,createOrders:!0,createPostOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRateHistories:!0,fetchBorrowRateHistory:!0,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositWithdrawFee:!0,fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL3OrderBook:!0,fetchLedger:!0,fetchLeverageTiers:!1,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMarkPrice:!0,fetchMarkPrices:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrdersByStatus:!0,fetchOrderTrades:!0,fetchPositionHistory:!1,fetchPositionMode:!1,fetchPositionsHistory:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactionFee:!0,fetchTransfers:!1,fetchWithdrawals:!0,repayCrossMargin:!0,repayIsolatedMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg",referral:"https://www.kucoin.com/ucenter/signup?rcode=E5wkqe",api:{public:"https://api.kucoin.com",private:"https://api.kucoin.com",futuresPrivate:"https://api-futures.kucoin.com",futuresPublic:"https://api-futures.kucoin.com",webExchange:"https://kucoin.com/_api",broker:"https://api-broker.kucoin.com",earn:"https://api.kucoin.com"},www:"https://www.kucoin.com",doc:["https://docs.kucoin.com"]},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{public:{get:{currencies:4.5,"currencies/{currency}":4.5,symbols:6,"market/orderbook/level1":3,"market/allTickers":22.5,"market/stats":22.5,markets:4.5,"market/orderbook/level{level}_{limit}":6,"market/orderbook/level2_20":3,"market/orderbook/level2_100":6,"market/histories":4.5,"market/candles":4.5,prices:4.5,timestamp:4.5,status:4.5,"mark-price/{symbol}/current":3,"mark-price/all-symbols":3,"margin/config":25,announcements:20},post:{"bullet-public":15}},private:{get:{"user-info":30,accounts:7.5,"accounts/{accountId}":7.5,"accounts/ledgers":3,"hf/accounts/ledgers":2,"hf/margin/account/ledgers":2,"transaction-history":3,"sub/user":30,"sub-accounts/{subUserId}":22.5,"sub-accounts":30,"sub/api-key":30,"margin/account":40,"margin/accounts":15,"isolated/accounts":15,"deposit-addresses":7.5,deposits:7.5,"hist-deposits":7.5,withdrawals:30,"hist-withdrawals":30,"withdrawals/quotas":30,"accounts/transferable":30,"transfer-list":30,"base-fee":3,"trade-fees":3,"market/orderbook/level{level}":3,"market/orderbook/level2":3,"market/orderbook/level3":3,"hf/accounts/opened":2,"hf/orders/active":2,"hf/orders/active/symbols":2,"hf/margin/order/active/symbols":2,"hf/orders/done":2,"hf/orders/{orderId}":2,"hf/orders/client-order/{clientOid}":2,"hf/orders/dead-cancel-all/query":2,"hf/fills":2,orders:2,"limit/orders":3,"orders/{orderId}":2,"order/client-order/{clientOid}":3,fills:10,"limit/fills":20,"stop-order":8,"stop-order/{orderId}":3,"stop-order/queryOrderByClientOid":3,"oco/order/{orderId}":2,"oco/order/details/{orderId}":2,"oco/client-order/{clientOid}":2,"oco/orders":2,"hf/margin/orders/active":4,"hf/margin/orders/done":10,"hf/margin/orders/{orderId}":4,"hf/margin/orders/client-order/{clientOid}":5,"hf/margin/fills":5,"etf/info":25,"margin/currencies":20,"risk/limit/strategy":20,"isolated/symbols":20,"margin/symbols":5,"isolated/account/{symbol}":50,"margin/borrow":15,"margin/repay":15,"margin/interest":20,"project/list":10,"project/marketInterestRate":7.5,"redeem/orders":10,"purchase/orders":10,"broker/api/rebase/download":3,"migrate/user/account/status":3,"affiliate/inviter/statistics":30},post:{"sub/user/created":22.5,"sub/api-key":30,"sub/api-key/update":45,"deposit-addresses":30,withdrawals:7.5,"accounts/universal-transfer":6,"accounts/sub-transfer":45,"accounts/inner-transfer":15,"transfer-out":30,"transfer-in":30,"hf/orders":1,"hf/orders/test":1,"hf/orders/sync":1,"hf/orders/multi":1,"hf/orders/multi/sync":1,"hf/orders/alter":3,"hf/orders/dead-cancel-all":2,orders:2,"orders/test":2,"orders/multi":3,"stop-order":2,"oco/order":2,"hf/margin/order":5,"hf/margin/order/test":5,"margin/order":5,"margin/order/test":5,"margin/borrow":15,"margin/repay":10,purchase:15,redeem:15,"lend/purchase/update":10,"bullet-private":10,"position/update-user-leverage":5,"deposit-address/create":20},delete:{"sub/api-key":45,"withdrawals/{withdrawalId}":30,"hf/orders/{orderId}":1,"hf/orders/sync/{orderId}":1,"hf/orders/client-order/{clientOid}":1,"hf/orders/sync/client-order/{clientOid}":1,"hf/orders/cancel/{orderId}":2,"hf/orders":2,"hf/orders/cancelAll":30,"orders/{orderId}":3,"order/client-order/{clientOid}":5,orders:20,"stop-order/{orderId}":3,"stop-order/cancelOrderByClientOid":5,"stop-order/cancel":3,"oco/order/{orderId}":3,"oco/client-order/{clientOid}":3,"oco/orders":3,"hf/margin/orders/{orderId}":5,"hf/margin/orders/client-order/{clientOid}":5,"hf/margin/orders":10}},futuresPublic:{get:{"contracts/active":4.5,"contracts/{symbol}":4.5,ticker:3,"level2/snapshot":4.5,"level2/depth20":7.5,"level2/depth100":15,"trade/history":7.5,"kline/query":4.5,"interest/query":7.5,"index/query":3,"mark-price/{symbol}/current":4.5,"premium/query":4.5,"trade-statistics":4.5,"funding-rate/{symbol}/current":3,"contract/funding-rates":7.5,timestamp:3,status:6,"level2/message/query":1.3953},post:{"bullet-public":15}},futuresPrivate:{get:{"transaction-history":3,"account-overview":7.5,"account-overview-all":9,"transfer-list":30,orders:3,stopOrders:9,recentDoneOrders:7.5,"orders/{orderId}":7.5,"orders/byClientOid":7.5,fills:7.5,recentFills:4.5,openOrderStatistics:15,position:3,positions:3,"margin/maxWithdrawMargin":15,"contracts/risk-limit/{symbol}":7.5,"funding-history":7.5},post:{"transfer-out":30,"transfer-in":30,orders:3,"orders/test":3,"orders/multi":4.5,"position/margin/auto-deposit-status":6,"margin/withdrawMargin":15,"position/margin/deposit-margin":6,"position/risk-limit-level/change":6,"bullet-private":15},delete:{"orders/{orderId}":1.5,"orders/client-order/{clientOid}":1.5,orders:45,stopOrders:22.5}},webExchange:{get:{"currency/currency/chain-info":1}},broker:{get:{"broker/nd/info":2,"broker/nd/account":2,"broker/nd/account/apikey":2,"broker/nd/rebase/download":3,"asset/ndbroker/deposit/list":1,"broker/nd/transfer/detail":1,"broker/nd/deposit/detail":1,"broker/nd/withdraw/detail":1},post:{"broker/nd/transfer":1,"broker/nd/account":3,"broker/nd/account/apikey":3,"broker/nd/account/update-apikey":3},delete:{"broker/nd/account/apikey":3}},earn:{get:{"otc-loan/loan":1,"otc-loan/accounts":1,"earn/redeem-preview":7.5,"earn/saving/products":7.5,"earn/hold-assets":7.5,"earn/promotion/products":7.5,"earn/kcs-staking/products":7.5,"earn/staking/products":7.5,"earn/eth-staking/products":7.5},post:{"earn/orders":7.5},delete:{"earn/orders":7.5}}},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week","1M":"1month"},precisionMode:o.kb,exceptions:{exact:{"The order does not exist.":s.OrderNotFound,"order not exist":s.OrderNotFound,"order not exist.":s.OrderNotFound,order_not_exist:s.OrderNotFound,order_not_exist_or_not_allow_to_cancel:s.InvalidOrder,"Order size below the minimum requirement.":s.InvalidOrder,"The withdrawal amount is below the minimum requirement.":s.ExchangeError,"Unsuccessful! Exceeded the max. funds out-transfer limit":s.InsufficientFunds,"The amount increment is invalid.":s.BadRequest,"The quantity is below the minimum requirement.":s.InvalidOrder,400:s.BadRequest,401:s.AuthenticationError,403:s.NotSupported,404:s.NotSupported,405:s.NotSupported,415:s.NotSupported,429:s.RateLimitExceeded,500:s.ExchangeNotAvailable,503:s.ExchangeNotAvailable,101030:s.PermissionDenied,103e3:s.InvalidOrder,130101:s.BadRequest,130102:s.ExchangeError,130103:s.OrderNotFound,130104:s.ExchangeError,130105:s.InsufficientFunds,130106:s.NotSupported,130107:s.ExchangeError,130108:s.OrderNotFound,130201:s.PermissionDenied,130202:s.ExchangeError,130203:s.InsufficientFunds,130204:s.BadRequest,130301:s.InsufficientFunds,130302:s.PermissionDenied,130303:s.NotSupported,130304:s.NotSupported,130305:s.NotSupported,130306:s.NotSupported,130307:s.NotSupported,130308:s.InvalidOrder,130309:s.InvalidOrder,130310:s.ExchangeError,130311:s.InvalidOrder,130312:s.InvalidOrder,130313:s.InvalidOrder,130314:s.InvalidOrder,130315:s.NotSupported,126e3:s.ExchangeError,126001:s.NotSupported,126002:s.ExchangeError,126003:s.InvalidOrder,126004:s.ExchangeError,126005:s.PermissionDenied,126006:s.ExchangeError,126007:s.ExchangeError,126009:s.ExchangeError,126010:s.ExchangeError,126011:s.ExchangeError,126013:s.InsufficientFunds,126015:s.ExchangeError,126021:s.NotSupported,126022:s.InvalidOrder,126027:s.InvalidOrder,126028:s.InvalidOrder,126029:s.InvalidOrder,126030:s.InvalidOrder,126033:s.InvalidOrder,126034:s.InvalidOrder,126036:s.InvalidOrder,126037:s.ExchangeError,126038:s.ExchangeError,126039:s.ExchangeError,126041:s.ExchangeError,126042:s.ExchangeError,126043:s.OrderNotFound,126044:s.InvalidOrder,126045:s.NotSupported,126046:s.NotSupported,126047:s.PermissionDenied,126048:s.PermissionDenied,135005:s.ExchangeError,135018:s.ExchangeError,200004:s.InsufficientFunds,210014:s.InvalidOrder,210021:s.InsufficientFunds,230003:s.InsufficientFunds,26e4:s.InvalidAddress,260100:s.InsufficientFunds,3e5:s.InvalidOrder,4e5:s.BadSymbol,400001:s.AuthenticationError,400002:s.InvalidNonce,400003:s.AuthenticationError,400004:s.AuthenticationError,400005:s.AuthenticationError,400006:s.AuthenticationError,400007:s.AuthenticationError,400008:s.NotSupported,400100:s.InsufficientFunds,400200:s.InvalidOrder,400330:s.InvalidOrder,400350:s.InvalidOrder,400370:s.InvalidOrder,400400:s.BadRequest,400401:s.AuthenticationError,400500:s.InvalidOrder,400600:s.BadSymbol,400760:s.InvalidOrder,401e3:s.BadRequest,408e3:s.BadRequest,411100:s.AccountSuspended,415e3:s.BadRequest,400303:s.PermissionDenied,5e5:s.ExchangeNotAvailable,260220:s.InvalidAddress,600100:s.InsufficientFunds,600101:s.InvalidOrder,900014:s.BadRequest},broad:{"Exceeded the access frequency":s.RateLimitExceeded,"require more permission":s.PermissionDenied}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("50"),this.parseNumber("0.001")],[this.parseNumber("200"),this.parseNumber("0.0009")],[this.parseNumber("500"),this.parseNumber("0.0008")],[this.parseNumber("1000"),this.parseNumber("0.0007")],[this.parseNumber("2000"),this.parseNumber("0.0007")],[this.parseNumber("4000"),this.parseNumber("0.0006")],[this.parseNumber("8000"),this.parseNumber("0.0005")],[this.parseNumber("15000"),this.parseNumber("0.00045")],[this.parseNumber("25000"),this.parseNumber("0.0004")],[this.parseNumber("40000"),this.parseNumber("0.00035")],[this.parseNumber("60000"),this.parseNumber("0.0003")],[this.parseNumber("80000"),this.parseNumber("0.00025")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("50"),this.parseNumber("0.0009")],[this.parseNumber("200"),this.parseNumber("0.0007")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0003")],[this.parseNumber("2000"),this.parseNumber("0")],[this.parseNumber("4000"),this.parseNumber("0")],[this.parseNumber("8000"),this.parseNumber("0")],[this.parseNumber("15000"),this.parseNumber("-0.00005")],[this.parseNumber("25000"),this.parseNumber("-0.00005")],[this.parseNumber("40000"),this.parseNumber("-0.00005")],[this.parseNumber("60000"),this.parseNumber("-0.00005")],[this.parseNumber("80000"),this.parseNumber("-0.00005")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{BIFI:"BIFIF",VAI:"VAIOT",WAX:"WAXP",ALT:"APTOSLAUNCHTOKEN",KALT:"ALT",FUD:"FTX Users' Debt"},options:{hf:void 0,version:"v1",symbolSeparator:"-",fetchMyTradesMethod:"private_get_fills",timeDifference:0,adjustForTimeDifference:!1,fetchCurrencies:{webApiEnable:!0,webApiRetries:1,webApiMuteFailure:!0},fetchMarkets:{fetchTickersFees:!0},withdraw:{includeFee:!1},versions:{public:{GET:{currencies:"v3","currencies/{currency}":"v3",symbols:"v2","mark-price/all-symbols":"v3",announcements:"v3"}},private:{GET:{"user-info":"v2","hf/margin/account/ledgers":"v3","sub/user":"v2","sub-accounts":"v2","margin/accounts":"v3","isolated/accounts":"v3","deposit-addresses":"v1","market/orderbook/level2":"v3","market/orderbook/level3":"v3","market/orderbook/level{level}":"v3","oco/order/{orderId}":"v3","oco/order/details/{orderId}":"v3","oco/client-order/{clientOid}":"v3","oco/orders":"v3","hf/margin/orders/active":"v3","hf/margin/order/active/symbols":"v3","hf/margin/orders/done":"v3","hf/margin/orders/{orderId}":"v3","hf/margin/orders/client-order/{clientOid}":"v3","hf/margin/fills":"v3","etf/info":"v3","margin/currencies":"v3","margin/borrow":"v3","margin/repay":"v3","margin/interest":"v3","project/list":"v3","project/marketInterestRate":"v3","redeem/orders":"v3","purchase/orders":"v3","migrate/user/account/status":"v3","margin/symbols":"v3","affiliate/inviter/statistics":"v2","asset/ndbroker/deposit/list":"v1"},POST:{"sub/user/created":"v2","accounts/universal-transfer":"v3","accounts/sub-transfer":"v2","accounts/inner-transfer":"v2","transfer-out":"v3","deposit-address/create":"v3","oco/order":"v3","hf/margin/order":"v3","hf/margin/order/test":"v3","margin/borrow":"v3","margin/repay":"v3",purchase:"v3",redeem:"v3","lend/purchase/update":"v3","position/update-user-leverage":"v3",withdrawals:"v3"},DELETE:{"hf/margin/orders/{orderId}":"v3","hf/margin/orders/client-order/{clientOid}":"v3","hf/margin/orders":"v3","oco/order/{orderId}":"v3","oco/client-order/{clientOid}":"v3","oco/orders":"v3"}},futuresPrivate:{POST:{"transfer-out":"v3"}}},partner:{spot:{id:"ccxt",key:"9e58cc35-5b5e-4133-92ec-166e3f077cb8"},future:{id:"ccxtfutures",key:"1b327198-f30c-4f14-a0ac-918871282f15"}},accountsByType:{spot:"trade",margin:"margin",cross:"margin",isolated:"isolated",main:"main",funding:"main",future:"contract",swap:"contract",mining:"pool",hf:"trade_hf"},networks:{BRC20:"btc",BTCNATIVESEGWIT:"bech32",ERC20:"eth",TRC20:"trx",HRC20:"heco",MATIC:"matic",KCC:"kcc",SOL:"sol",ALGO:"algo",EOS:"eos",BEP20:"bsc",BEP2:"bnb",ARBONE:"arbitrum",AVAXX:"avax",AVAXC:"avaxc",TLOS:"tlos",CFX:"cfx",ACA:"aca",OP:"optimism",ONT:"ont",GLMR:"glmr",CSPR:"cspr",KLAY:"klay",XRD:"xrd",RVN:"rvn",NEAR:"near",APT:"aptos",ETHW:"ethw",TON:"ton",BCH:"bch",BSV:"bchsv",BCHA:"bchabc",OSMO:"osmo",NANO:"nano",XLM:"xlm",VET:"vet",IOST:"iost",ZIL:"zil",XRP:"xrp",TOMO:"tomo",XMR:"xmr",COTI:"coti",XTZ:"xtz",ADA:"ada",WAX:"waxp",THETA:"theta",ONE:"one",IOTEX:"iotx",NULS:"nuls",KSM:"ksm",LTC:"ltc",WAVES:"waves",DOT:"dot",STEEM:"steem",QTUM:"qtum",DOGE:"doge",FIL:"fil",XYM:"xym",FLUX:"flux",ATOM:"atom",XDC:"xdc",KDA:"kda",ICP:"icp",CELO:"celo",LSK:"lsk",VSYS:"vsys",KAR:"kar",XCH:"xch",FLOW:"flow",BAND:"band",EGLD:"egld",HBAR:"hbar",XPR:"xpr",AR:"ar",FTM:"ftm",KAVA:"kava",KMA:"kma",XEC:"xec",IOTA:"iota",HNT:"hnt",ASTR:"astr",PDEX:"pdex",METIS:"metis",ZEC:"zec",POKT:"pokt",OASYS:"oas",OASIS:"oasis",ETC:"etc",AKT:"akt",FSN:"fsn",SCRT:"scrt",CFG:"cfg",ICX:"icx",KMD:"kmd",NEM:"NEM",STX:"stx",DGB:"dgb",DCR:"dcr",CKB:"ckb",ELA:"ela",HYDRA:"hydra",BTM:"btm",KARDIA:"kai",SXP:"sxp",NEBL:"nebl",ZEN:"zen",SDN:"sdn",LTO:"lto",WEMIX:"wemix",EVER:"ever",BNC:"bnc",BNCDOT:"bncdot",AION:"aion",GRIN:"grin",LOKI:"loki",QKC:"qkc",TT:"TT",PIVX:"pivx",SERO:"sero",METER:"meter",STATEMINE:"statemine",DVPN:"dvpn",XPRT:"xprt",MOVR:"movr",ERGO:"ergo",ABBC:"abbc",DIVI:"divi",PURA:"pura",DFI:"dfi",NEON3:"neon3",DOCK:"dock",TRUE:"true",CS:"cs",ORAI:"orai",BASE:"base"},marginModes:{cross:"MARGIN_TRADE",isolated:"MARGIN_ISOLATED_TRADE",spot:"TRADE"}},features:{spot:{sandbox:!1,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!0},hedged:!1,trailing:!1,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!0,iceberg:!0},createOrders:{max:5},fetchMyTrades:{marginMode:!0,limit:void 0,daysBack:void 0,untilDays:7},fetchOrder:{marginMode:!1,trigger:!0,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:500,trigger:!0,trailing:!1},fetchOrders:void 0,fetchClosedOrders:{marginMode:!0,limit:500,daysBack:void 0,daysBackCanceled:void 0,untilDays:7,trigger:!0,trailing:!1},fetchOHLCV:{limit:1500}},swap:{linear:void 0,inverse:void 0},future:{linear:void 0,inverse:void 0}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){let t=await this.publicGetTimestamp(e);return this.safeInteger(t,"data")}async fetchStatus(e={}){let t=await this.publicGetStatus(e),i=this.safeDict(t,"data",{});return{status:"open"===this.safeString(i,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){let t;[t,e]=this.handleOptionAndParams(e,"fetchMarkets","fetchTickersFees",!0);let i=[];i.push(this.publicGetSymbols(e));let r=this.checkRequiredCredentials(!1),s=r&&this.safeBool(e,"marginables",!0);s&&(i.push(this.privateGetMarginSymbols(e)),i.push(this.privateGetIsolatedSymbols(e))),t&&i.push(this.publicGetMarketAllTickers(e)),r&&i.push(this.loadMigrationStatus());let o=await Promise.all(i),n=this.safeList(o[0],"data"),d=s?this.safeDict(o[1],"data",{}):{},h=this.safeList(d,"items",[]),c=this.indexBy(h,"symbol"),l=s?o[2]:{},f=this.safeList(l,"data",[]),u=this.indexBy(f,"symbol"),p=this.safeDict(o,s?3:1,{}),m=this.safeList(this.safeDict(p,"data",{}),"ticker",[]),g=this.indexBy(m,"symbol"),v=[];for(let e=0;e<n.length;e++){let t=n[e],i=this.safeString(t,"symbol"),[r,s]=i.split("-"),o=this.safeCurrencyCode(r),d=this.safeCurrencyCode(s),h=this.safeDict(g,i,{}),l=this.safeString(h,"makerFeeRate"),f=this.safeString(h,"takerFeeRate"),p=this.safeString(h,"makerCoefficient"),m=this.safeString(h,"takerCoefficient"),y=i in c,w=i in u,b=this.safeBool(t,"isMarginEnabled",!1)||y||w;v.push({id:i,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:r,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:b,marginModes:{cross:y,isolated:w},swap:!1,future:!1,option:!1,active:this.safeBool(t,"enableTrading"),contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(a.Y.stringMul(f,m)),maker:this.parseNumber(a.Y.stringMul(l,p)),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"baseIncrement"),price:this.safeNumber(t,"priceIncrement")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"baseMinSize"),max:this.safeNumber(t,"baseMaxSize")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"quoteMinSize"),max:this.safeNumber(t,"quoteMaxSize")}},created:void 0,info:t})}return this.options.adjustForTimeDifference&&await this.loadTimeDifference(),v}async loadMigrationStatus(e=!1){if(!("hf"in this.options)||void 0===this.options.hf||e){let e=await this.privateGetHfAccountsOpened();this.options.hf=this.safeBool(e,"data")}}handleHfAndParams(e={}){let t;let i=this.safeBool(this.options,"hf",!1);return void 0!==i&&(t=!!i),[this.safeBool(e,"hf",t),e=this.omit(e,"hf")]}async fetchCurrencies(e={}){let t=[];t.push(this.publicGetCurrencies(e)),t.push(this.fetchWebEndpoint("fetchCurrencies","webExchangeGetCurrencyCurrencyChainInfo",!0));let i=await Promise.all(t),r=this.safeDict(i,0,{}),s=this.safeList(r,"data",[]),a=this.safeDict(i,1,{}),o=this.safeList(a,"data",[]),n=this.groupBy(o,"currency"),d={};for(let e=0;e<s.length;e++){let t,i;let r=s[e],a=this.safeString(r,"currency"),o=this.safeString(r,"fullName"),h=this.safeCurrencyCode(a),c={},l=this.safeList(r,"chains",[]),f=this.indexBy(this.safeList(n,a,[]),"chain"),u=this.safeString(r,"precision"),p=this.parseNumber(this.parsePrecision(u)),m=l.length;m||(t=!1,i=!1);for(let e=0;e<m;e++){let r=l[e],s=this.safeString(r,"chainId"),a=this.networkIdToCode(s,h),o=this.safeBool(r,"isWithdrawEnabled",!1);t=void 0===t?o:t||o;let n=this.safeBool(r,"isDepositEnabled",!1);i=void 0===i?n:i||n;let d=this.safeDict(f,s,{});c[a]={info:r,id:s,name:this.safeString(r,"chainName"),code:a,active:o&&n,fee:this.safeNumber(r,"withdrawalMinFee"),deposit:n,withdraw:o,precision:this.parseNumber(this.parsePrecision(this.safeString(d,"walletPrecision"))),limits:{withdraw:{min:this.safeNumber(r,"withdrawalMinSize"),max:void 0},deposit:{min:this.safeNumber(r,"depositMinSize"),max:void 0}}}}let g="2"===u&&0===m;d[h]={id:a,name:o,code:h,type:g?"fiat":"crypto",precision:p,info:r,active:i||t,deposit:i,withdraw:t,fee:void 0,limits:this.limits,networks:c}}return d}async fetchAccounts(e={}){let t=await this.privateGetAccounts(e),i=this.safeList(t,"data",[]),r=[];for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"id"),a=this.safeString(t,"currency"),o=this.safeCurrencyCode(a),n=this.safeString(t,"type");r.push({id:s,type:n,currency:o,code:o,info:t})}return r}async fetchTransactionFee(e,t={}){let i;await this.loadMarkets();let r={currency:this.currency(e).id};[i,t]=this.handleNetworkCodeAndParams(t),void 0!==i&&(r.chain=this.networkCodeToId(i).toLowerCase());let s=await this.privateGetWithdrawalsQuotas(this.extend(r,t)),a=this.safeDict(s,"data",{}),o={};return o[e]=this.safeNumber(a,"withdrawMinFee"),{info:s,withdraw:o,deposit:{}}}async fetchDepositWithdrawFee(e,t={}){let i;await this.loadMarkets();let r=this.currency(e),s={currency:r.id};[i,t]=this.handleNetworkCodeAndParams(t),void 0!==i&&(s.chain=this.networkCodeToId(i).toLowerCase());let a=await this.privateGetWithdrawalsQuotas(this.extend(s,t)),o=this.safeDict(a,"data");return this.parseDepositWithdrawFee(o,r)}parseDepositWithdrawFee(e,t){let i=this.safeNumber(e,"withdrawMinFee"),r={info:e,withdraw:{fee:i,percentage:!1},deposit:{fee:void 0,percentage:void 0},networks:{}},s=this.safeString(e,"chain"),a=this.networkIdToCode(s,this.safeString(t,"code"));return r.networks[a]={withdraw:i,deposit:{fee:void 0,percentage:void 0}},r}isFuturesMethod(e,t){let i=this.safeString2(this.options,e,"defaultType","trade"),r=this.safeString(t,"type",i),a=this.safeDict(this.options,"accountsByType"),o=this.safeString(a,r);if(void 0===o){let e=Object.keys(a);throw new s.ExchangeError(this.id+" isFuturesMethod() type must be one of "+e.join(", "))}return t=this.omit(t,"type"),"contract"===o||"future"===o||"futures"===o}parseTicker(e,t){let i=this.safeString(e,"changeRate");void 0!==i&&(i=a.Y.stringMul(i,"100"));let r=this.safeString2(e,"last","lastTradedPrice");r=this.safeString(e,"price",r);let s=this.safeString(e,"symbol"),o=(t=this.safeMarket(s,t,"-")).symbol,n=this.safeString(e,"vol"),d=this.safeString(e,"volValue"),h=this.safeIntegerN(e,["time","datetime","timePoint"]);return this.safeTicker({symbol:o,timestamp:h,datetime:this.iso8601(h),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString2(e,"buy","bestBid"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString2(e,"sell","bestAsk"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:this.safeString(e,"open"),close:r,last:r,previousClose:void 0,change:this.safeString(e,"changePrice"),percentage:i,average:this.safeString(e,"averagePrice"),baseVolume:n,quoteVolume:d,markPrice:this.safeString(e,"value"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetMarketAllTickers(t),r=this.safeDict(i,"data",{}),s=this.safeList(r,"ticker",[]),a=this.safeInteger(r,"time"),o={};for(let e=0;e<s.length;e++){s[e].time=a;let t=this.parseTicker(s[e]),i=this.safeString(t,"symbol");void 0!==i&&(o[i]=t)}return this.filterByArrayTickers(o,"symbol",e)}async fetchMarkPrices(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=await this.publicGetMarkPriceAllSymbols(t),r=this.safeList(i,"data",[]);return this.parseTickers(r)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),r={symbol:i.id},s=await this.publicGetMarketStats(this.extend(r,t)),a=this.safeDict(s,"data",{});return this.parseTicker(a,i)}async fetchMarkPrice(e,t={}){await this.loadMarkets();let i=this.market(e),r={symbol:i.id},s=await this.publicGetMarkPriceSymbolCurrent(this.extend(r,t)),a=this.safeDict(s,"data",{});return this.parseTicker(a,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i,r,s={}){await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchOHLCV","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,r,t,s,1500);let o=this.market(e),n={symbol:o.id,type:this.safeString(this.timeframes,t,t)},d=1e3*this.parseTimeframe(t),h=this.milliseconds();void 0!==i?(n.startAt=this.parseToInt(Math.floor(i/1e3)),void 0===r&&(r=this.safeInteger(this.options,"fetchOHLCVLimit",1500)),h=this.sum(i,r*d)):void 0!==r&&(i=h-r*d,n.startAt=this.parseToInt(Math.floor(i/1e3))),n.endAt=this.parseToInt(Math.floor(h/1e3));let c=await this.publicGetMarketCandles(this.extend(n,s)),l=this.safeList(c,"data",[]);return this.parseOHLCVs(l,o,t,i,r)}async createDepositAddress(e,t={}){let i;await this.loadMarkets();let r=this.currency(e),s={currency:r.id};[i,t]=this.handleNetworkCodeAndParams(t),void 0!==i&&(s.chain=this.networkCodeToId(i));let a=await this.privatePostDepositAddressCreate(this.extend(s,t)),o=this.safeDict(a,"data",{});return this.parseDepositAddress(o,r)}async fetchDepositAddress(e,t={}){let i;await this.loadMarkets();let r=this.currency(e),a={currency:r.id};[i,t]=this.handleNetworkCodeAndParams(t),void 0!==i&&(a.chain=this.networkCodeToId(i).toLowerCase());let o=this.options.versions.private.GET["deposit-addresses"];this.options.versions.private.GET["deposit-addresses"]="v1";let n=await this.privateGetDepositAddresses(this.extend(a,t));this.options.versions.private.GET["deposit-addresses"]=o;let d=this.safeValue(n,"data");if(void 0===d)throw new s.ExchangeError(this.id+" fetchDepositAddress() returned an empty response, you might try to run createDepositAddress() first and try again");return this.parseDepositAddress(d,r)}parseDepositAddress(e,t){let i,r=this.safeString(e,"address");return void 0!==r&&(r=r.replace("bitcoincash:","")),void 0!==t&&"NIM"!==(i=this.safeCurrencyCode(t.id))&&this.checkAddress(r),{info:e,currency:i,network:this.networkIdToCode(this.safeString(e,"chainId")),address:r,tag:this.safeString(e,"memo")}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();let i=this.currency(e),r={currency:i.id},s=this.options.versions.private.GET["deposit-addresses"];this.options.versions.private.GET["deposit-addresses"]="v2";let a=await this.privateGetDepositAddresses(this.extend(r,t));this.options.versions.private.GET["deposit-addresses"]=s;let o=this.safeList(a,"data",[]),n=this.parseDepositAddresses(o,[i.code],!1,{currency:i.code});return this.indexBy(n,"network")}async fetchOrderBook(e,t,i={}){let r;await this.loadMarkets();let a=this.market(e),o=this.safeInteger(i,"level",2),n={symbol:a.id};if(this.checkRequiredCredentials(!1)&&void 0===t)r=await this.privateGetMarketOrderbookLevel2(this.extend(n,i));else{if(2===o){if(n.level=o,void 0!==t){if(20===t||100===t)n.limit=t;else throw new s.ExchangeError(this.id+" fetchOrderBook() limit argument must be 20 or 100")}n.limit=t||100}r=await this.publicGetMarketOrderbookLevelLevelLimit(this.extend(n,i))}let d=this.safeDict(r,"data",{}),h=this.safeInteger(d,"time"),c=this.parseOrderBook(d,a.symbol,h,"bids","asks",o-2,o-1);return c.nonce=this.safeInteger(d,"sequence"),c}handleTriggerPrices(e){let t=this.safeValue2(e,"triggerPrice","stopPrice"),i=this.safeValue(e,"stopLossPrice"),r=this.safeValue(e,"takeProfitPrice"),a=void 0!==r;if(void 0!==i&&a||t&&i||t&&a)throw new s.ExchangeError(this.id+" createOrder() - you should use either triggerPrice or stopLossPrice or takeProfitPrice");return[t,i,r]}async createOrder(e,t,i,r,s,a={}){let o,n;await this.loadMarkets();let d=this.market(e),h=this.safeBool(a,"test",!1);a=this.omit(a,"test"),[o,a]=this.handleHfAndParams(a);let c=!1;[c,a]=this.handleOptionAndParams(a,"createOrder","sync",!1);let[l,f,u]=this.handleTriggerPrices(a),p=this.safeString(a,"tradeType"),m=this.handleMarginModeAndParams("createOrder",a),g=this.safeString(m,0),v="MARGIN_TRADE"===p||void 0!==g,y=this.createOrderRequest(e,t,i,r,s,a);n=h?v?await this.privatePostMarginOrderTest(y):o?await this.privatePostHfOrdersTest(y):await this.privatePostOrdersTest(y):l||f||u?await this.privatePostStopOrder(y):v?await this.privatePostMarginOrder(y):c?await this.privatePostHfOrdersSync(y):o?await this.privatePostHfOrders(y):await this.privatePostOrders(y);let w=this.safeDict(n,"data",{});return this.parseOrder(w,d)}async createMarketOrderWithCost(e,t,i,r={}){return await this.loadMarkets(),await this.createOrder(e,"market",t,0,void 0,this.extend({cost:i},r))}async createMarketBuyOrderWithCost(e,t,i={}){return await this.loadMarkets(),await this.createMarketOrderWithCost(e,"buy",t,i)}async createMarketSellOrderWithCost(e,t,i={}){return await this.loadMarkets(),await this.createMarketOrderWithCost(e,"sell",t,i)}async createOrders(e,t={}){let i,r,a;await this.loadMarkets();let o=[];for(let t=0;t<e.length;t++){let r=e[t],a=this.safeString(r,"symbol");if(void 0===i)i=a;else if(i!==a)throw new s.BadRequest(this.id+" createOrders() requires all orders to have the same symbol");let n=this.safeString(r,"type");if("limit"!==n)throw new s.BadRequest(this.id+" createOrders() only supports limit orders");let d=this.safeString(r,"side"),h=this.safeValue(r,"amount"),c=this.safeValue(r,"price"),l=this.safeValue(r,"params",{}),f=this.createOrderRequest(a,n,d,h,c,l);o.push(f)}let n={symbol:this.market(i).id,orderList:o};[r,t]=this.handleHfAndParams(t);let d=!1;[d,t]=this.handleOptionAndParams(t,"createOrders","sync",!1),a=d?await this.privatePostHfOrdersMultiSync(this.extend(n,t)):r?await this.privatePostHfOrdersMulti(this.extend(n,t)):await this.privatePostOrdersMulti(this.extend(n,t));let h=this.safeDict(a,"data",{});return h=this.safeList(h,"data",[]),this.parseOrders(h)}marketOrderAmountToPrecision(e,t){let i=this.market(e),r=this.decimalToPrecision(t,o.R3,i.info.quoteIncrement,this.precisionMode,this.paddingMode);if("0"===r)throw new s.InvalidOrder(this.id+" amount of "+i.symbol+" must be greater than minimum amount precision of "+this.numberToString(i.precision.amount));return r}createOrderRequest(e,t,i,r,a,o={}){let n,d,h,c;let l=this.market(e),f=this.safeString2(o,"clientOid","clientOrderId",this.uuid());o=this.omit(o,["clientOid","clientOrderId"]);let u={clientOid:f,side:i,symbol:l.id,type:t},p=this.safeNumber2(o,"cost","funds");[h,o]=this.handleMarginModeAndParams("createOrder",o),"market"===t?void 0!==p?(o=this.omit(o,["cost","funds"]),d=this.marketOrderAmountToPrecision(e,p),u.funds=d):(n=this.amountToPrecision(e,r),u.size=this.amountToPrecision(e,r)):(n=this.amountToPrecision(e,r),u.size=n,u.price=this.priceToPrecision(e,a));let m=this.safeString(o,"tradeType"),[g,v,y]=this.handleTriggerPrices(o),w=g||v||y;if(o=this.omit(o,["stopLossPrice","takeProfitPrice","triggerPrice","stopPrice"]),w){if(g?u.stopPrice=this.priceToPrecision(e,g):(v||y)&&(v?(u.stop="buy"===i?"entry":"loss",u.stopPrice=this.priceToPrecision(e,v)):(u.stop="buy"===i?"loss":"entry",u.stopPrice=this.priceToPrecision(e,y))),"isolated"===h)throw new s.BadRequest(this.id+" createOrder does not support isolated margin for stop orders");"cross"===h&&(u.tradeType=this.options.marginModes[h])}else("MARGIN_TRADE"===m||void 0!==h)&&"isolated"===h&&(u.marginModel="isolated");return[c,o]=this.handlePostOnly("market"===t,!1,o),c&&(u.postOnly=!0),this.extend(u,o)}async editOrder(e,t,i,r,s,a,o={}){await this.loadMarkets();let n=this.market(t),d={symbol:n.id},h=this.safeString2(o,"clientOid","clientOrderId");void 0!==h?d.clientOid=h:d.orderId=e,void 0!==s&&(d.newSize=this.amountToPrecision(t,s)),void 0!==a&&(d.newPrice=this.priceToPrecision(t,a));let c=await this.privatePostHfOrdersAlter(this.extend(d,o)),l=this.safeDict(c,"data",{});return this.parseOrder(l,n)}async cancelOrder(e,t,i={}){let r,a;await this.loadMarkets();let o={},n=this.safeString2(i,"clientOid","clientOrderId"),d=this.safeBool2(i,"stop","trigger",!1);[r,i]=this.handleHfAndParams(i);let h=!1;if([h,i]=this.handleOptionAndParams(i,"cancelOrder","sync",!1),r||h){if(void 0===t)throw new s.ArgumentsRequired(this.id+" cancelOrder() requires a symbol parameter for hf orders");let e=this.market(t);o.symbol=e.id}if(i=this.omit(i,["clientOid","clientOrderId","stop","trigger"]),void 0!==n)return o.clientOid=n,a=d?await this.privateDeleteStopOrderCancelOrderByClientOid(this.extend(o,i)):h?await this.privateDeleteHfOrdersSyncClientOrderClientOid(this.extend(o,i)):r?await this.privateDeleteHfOrdersClientOrderClientOid(this.extend(o,i)):await this.privateDeleteOrderClientOrderClientOid(this.extend(o,i)),a=this.safeDict(a,"data"),this.parseOrder(a);{if(o.orderId=e,d)a=await this.privateDeleteStopOrderOrderId(this.extend(o,i));else if(h)a=await this.privateDeleteHfOrdersSyncOrderId(this.extend(o,i));else{if(r)return a=await this.privateDeleteHfOrdersOrderId(this.extend(o,i)),a=this.safeDict(a,"data"),this.parseOrder(a);a=await this.privateDeleteOrdersOrderId(this.extend(o,i))}let t=this.safeDict(a,"data"),s=this.safeList(t,"cancelledOrderIds",[]),n=this.safeString(s,0);return this.safeOrder({info:t,id:n})}}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let r={},a=this.safeBool(t,"stop",!1);[i,t]=this.handleHfAndParams(t),t=this.omit(t,"stop");let[o,n]=this.handleMarginModeAndParams("cancelAllOrders",t);if(void 0!==e&&(r.symbol=this.marketId(e)),void 0!==o&&(r.tradeType=this.options.marginModes[o],"isolated"===o&&a))throw new s.BadRequest(this.id+" cancelAllOrders does not support isolated margin for stop orders");return a?await this.privateDeleteStopOrderCancel(this.extend(r,n)):i?void 0===e?await this.privateDeleteHfOrdersCancelAll(this.extend(r,n)):await this.privateDeleteHfOrders(this.extend(r,n)):await this.privateDeleteOrders(this.extend(r,n))}async fetchOrdersByStatus(e,t,i,r,a={}){let o,n,d;await this.loadMarkets();let h=e.toLowerCase(),c=this.safeInteger(a,"until"),l=this.safeBool2(a,"stop","trigger",!1);if([o,a]=this.handleHfAndParams(a),o&&void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOrdersByStatus() requires a symbol parameter for hf orders");a=this.omit(a,["stop","trigger","till","until"]);let[f,u]=this.handleMarginModeAndParams("fetchOrdersByStatus",a);"open"===h?h="active":"closed"===h&&(h="done");let p={status:h};void 0!==t&&(n=this.market(t),p.symbol=n.id),void 0!==i&&(p.startAt=i),void 0!==r&&(p.pageSize=r),c&&(p.endAt=c),p.tradeType=this.safeString(this.options.marginModes,f,"TRADE"),l?d=await this.privateGetStopOrder(this.extend(p,u)):o?"active"===h?d=await this.privateGetHfOrdersActive(this.extend(p,u)):"done"===h&&(d=await this.privateGetHfOrdersDone(this.extend(p,u))):d=await this.privateGetOrders(this.extend(p,u));let m=this.safeList(d,"data");if(void 0!==m)return this.parseOrders(m,n,i,r);let g=this.safeDict(d,"data",{}),v=this.safeList(g,"items",[]);return this.parseOrders(v,n,i,r)}async fetchClosedOrders(e,t,i,r={}){await this.loadMarkets();let s=!1;return([s,r]=this.handleOptionAndParams(r,"fetchClosedOrders","paginate"),s)?await this.fetchPaginatedCallDynamic("fetchClosedOrders",e,t,i,r):await this.fetchOrdersByStatus("done",e,t,i,r)}async fetchOpenOrders(e,t,i,r={}){await this.loadMarkets();let s=!1;return([s,r]=this.handleOptionAndParams(r,"fetchOpenOrders","paginate"),s)?await this.fetchPaginatedCallDynamic("fetchOpenOrders",e,t,i,r):await this.fetchOrdersByStatus("active",e,t,i,r)}async fetchOrder(e,t,i={}){let r,a,o;await this.loadMarkets();let n={},d=this.safeString2(i,"clientOid","clientOrderId"),h=this.safeBool2(i,"stop","trigger",!1);if([r,i]=this.handleHfAndParams(i),void 0!==t&&(a=this.market(t)),r){if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOrder() requires a symbol parameter for hf orders");n.symbol=a.id}if(i=this.omit(i,["stop","clientOid","clientOrderId","trigger"]),void 0!==d)n.clientOid=d,h?(void 0!==t&&(n.symbol=a.id),o=await this.privateGetStopOrderQueryOrderByClientOid(this.extend(n,i))):o=r?await this.privateGetHfOrdersClientOrderClientOid(this.extend(n,i)):await this.privateGetOrderClientOrderClientOid(this.extend(n,i));else{if(void 0===e)throw new s.InvalidOrder(this.id+" fetchOrder() requires an order id");n.orderId=e,o=h?await this.privateGetStopOrderOrderId(this.extend(n,i)):r?await this.privateGetHfOrdersOrderId(this.extend(n,i)):await this.privateGetOrdersOrderId(this.extend(n,i))}let c=this.safeDict(o,"data",{});return Array.isArray(c)&&(c=this.safeValue(c,0)),this.parseOrder(c,a)}parseOrder(e,t){let i;let r=this.safeString(e,"symbol"),s=this.safeInteger(e,"createdAt"),a=this.safeString(e,"feeCurrency"),o=this.safeBool(e,"cancelExist",!1),n=this.safeString(e,"stop"),d=this.safeBool(e,"stopTriggered",!1),h=this.safeBool2(e,"isActive","active"),c=this.safeString(e,"status");return void 0!==h&&(i=!0===h?"open":"closed"),void 0===n||("NEW"===c?i="open":h||d||(i="cancelled")),o&&(i="canceled"),"fail"===c&&(i="rejected"),this.safeOrder({info:e,id:this.safeStringN(e,["id","orderId","newOrderId","cancelledOrderId"]),clientOrderId:this.safeString(e,"clientOid"),symbol:this.safeSymbol(r,t,"-"),type:this.safeString(e,"type"),timeInForce:this.safeString(e,"timeInForce"),postOnly:this.safeBool(e,"postOnly"),side:this.safeString(e,"side"),amount:this.safeString(e,"size"),price:this.safeString(e,"price"),triggerPrice:this.safeNumber(e,"stopPrice"),cost:this.safeString(e,"dealFunds"),filled:this.safeString(e,"dealSize"),remaining:void 0,timestamp:s,datetime:this.iso8601(s),fee:{currency:this.safeCurrencyCode(a),cost:this.safeNumber(e,"fee")},status:i,lastTradeTimestamp:void 0,average:this.safeString(e,"avgDealPrice"),trades:void 0},t)}async fetchOrderTrades(e,t,i,r,s={}){return await this.fetchMyTrades(t,i,r,this.extend({orderId:e},s))}async fetchMyTrades(e,t,i,r={}){let a,o,n,d;await this.loadMarkets();let h=!1;if([h,r]=this.handleOptionAndParams(r,"fetchMyTrades","paginate"),h)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,r);let c={};if([a,r]=this.handleHfAndParams(r),a&&void 0===e)throw new s.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol parameter for hf orders");void 0!==e&&(o=this.market(e),c.symbol=o.id),void 0!==i&&(c.pageSize=i);let l=this.options.fetchMyTradesMethod,f=!1;if([c,r]=this.handleUntilOption("endAt",c,r),a)void 0!==t&&(c.startAt=t),n=await this.privateGetHfFills(this.extend(c,r));else if("private_get_fills"===l)void 0!==t&&(c.startAt=t),n=await this.privateGetFills(this.extend(c,r));else if("private_get_limit_fills"===l)f=!0,n=await this.privateGetLimitFills(this.extend(c,r));else throw new s.ExchangeError(this.id+" fetchMyTradesMethod() invalid method");let u=this.safeDict(n,"data",{});return d=f?u:this.safeList(u,"items",[]),this.parseTrades(d,o,t,i)}async fetchTrades(e,t,i,r={}){await this.loadMarkets();let s=this.market(e),a={symbol:s.id},o=await this.publicGetMarketHistories(this.extend(a,r)),n=this.safeList(o,"data",[]);return this.parseTrades(n,s,t,i)}parseTrade(e,t){let i;let r=this.safeString(e,"symbol");t=this.safeMarket(r,t,"-");let s=this.safeString2(e,"tradeId","id"),a=this.safeString(e,"orderId"),o=this.safeString(e,"liquidity"),n=this.safeInteger(e,"time");void 0!==n?n=this.parseToInt(n/1e6):(n=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==n&&(n*=1e3));let d=this.safeString2(e,"price","dealPrice"),h=this.safeString2(e,"size","amount"),c=this.safeString(e,"side"),l=this.safeString(e,"fee");if(void 0!==l){let r=this.safeString(e,"feeCurrency"),s=this.safeCurrencyCode(r);void 0===s&&(s="sell"===c?t.quote:t.base),i={cost:l,currency:s,rate:this.safeString(e,"feeRate")}}let f=this.safeString(e,"type");"match"===f&&(f=void 0);let u=this.safeString2(e,"funds","dealValue");return this.safeTrade({info:e,id:s,order:a,timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:f,takerOrMaker:o,side:c,price:d,amount:h,cost:u,fee:i},t)}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),r={symbols:i.id},s=await this.privateGetTradeFees(this.extend(r,t)),a=this.safeList(s,"data",[]),o=this.safeDict(a,0),n=this.safeString(o,"symbol");return{info:s,symbol:this.safeSymbol(n,i),maker:this.safeNumber(o,"makerFeeRate"),taker:this.safeNumber(o,"takerFeeRate"),percentage:!0,tierBased:!0}}async withdraw(e,t,i,r,s={}){let a,o;[r,s]=this.handleWithdrawTagAndParams(r,s),await this.loadMarkets(),this.checkAddress(i);let n=this.currency(e),d={currency:n.id,toAddress:i,withdrawType:"ADDRESS"};void 0!==r&&(d.memo=r),[a,s]=this.handleNetworkCodeAndParams(s),void 0!==a&&(d.chain=this.networkCodeToId(a).toLowerCase()),d.amount=parseFloat(this.currencyToPrecision(e,t,a)),[o,s]=this.handleOptionAndParams(s,"withdraw","includeFee",!1),o&&(d.feeDeductType="INTERNAL");let h=await this.privatePostWithdrawals(this.extend(d,s)),c=this.safeDict(h,"data",{});return this.parseTransaction(c,n)}parseTransactionStatus(e){return this.safeString({SUCCESS:"ok",PROCESSING:"pending",WALLET_PROCESSING:"pending",FAILURE:"failed"},e,e)}parseTransaction(e,t){let i;let r=this.safeString(e,"currency"),s=this.safeCurrencyCode(r,t),o=this.safeString(e,"address"),n=this.safeString(e,"amount"),d=this.safeString(e,"walletTxId");if(void 0!==d){let e=d.split("@");e.length>1&&void 0===o&&e[1].length>1&&(o=e[1]),d=e[0]}let h=void 0===d?"withdrawal":"deposit",c=this.safeString(e,"status"),l=this.safeString(e,"fee");if(void 0!==l){let e;void 0!==n&&(e=a.Y.stringDiv(l,n)),i={cost:this.parseNumber(l),rate:this.parseNumber(e),currency:s}}let f=this.safeInteger2(e,"createdAt","createAt"),u=this.safeInteger(e,"updatedAt");"createdAt"in e||(h="address"in e?"withdrawal":"deposit",void 0!==f&&(f*=1e3),void 0===u||(u*=1e3));let p=this.safeBool(e,"isInner"),m=this.safeString(e,"memo");return{info:e,id:this.safeString2(e,"id","withdrawalId"),timestamp:f,datetime:this.iso8601(f),network:this.networkIdToCode(this.safeString(e,"chain")),address:o,addressTo:o,addressFrom:void 0,tag:m,tagTo:m,tagFrom:void 0,currency:s,amount:this.parseNumber(n),txid:d,type:h,status:this.parseTransactionStatus(c),comment:this.safeString(e,"remark"),internal:p,fee:i,updated:u}}async fetchDeposits(e,t,i,r={}){let s,a;await this.loadMarkets();let o=!1;if([o,r]=this.handleOptionAndParams(r,"fetchDeposits","paginate"),o)return await this.fetchPaginatedCallDynamic("fetchDeposits",e,t,i,r);let n={};void 0!==e&&(s=this.currency(e),n.currency=s.id),void 0!==i&&(n.pageSize=i),[n,r]=this.handleUntilOption("endAt",n,r),void 0!==t&&t<1550448e6?(n.startAt=this.parseToInt(t/1e3),a=await this.privateGetHistDeposits(this.extend(n,r))):(void 0!==t&&(n.startAt=t),a=await this.privateGetDeposits(this.extend(n,r)));let d=this.safeDict(a,"data",{}),h=this.safeList(d,"items",[]);return this.parseTransactions(h,s,t,i,{type:"deposit"})}async fetchWithdrawals(e,t,i,r={}){let s,a;await this.loadMarkets();let o=!1;if([o,r]=this.handleOptionAndParams(r,"fetchWithdrawals","paginate"),o)return await this.fetchPaginatedCallDynamic("fetchWithdrawals",e,t,i,r);let n={};void 0!==e&&(s=this.currency(e),n.currency=s.id),void 0!==i&&(n.pageSize=i),[n,r]=this.handleUntilOption("endAt",n,r),void 0!==t&&t<1550448e6?(n.startAt=this.parseToInt(t/1e3),a=await this.privateGetHistWithdrawals(this.extend(n,r))):(void 0!==t&&(n.startAt=t),a=await this.privateGetWithdrawals(this.extend(n,r)));let d=this.safeDict(a,"data",{}),h=this.safeList(d,"items",[]);return this.parseTransactions(h,s,t,i,{type:"withdrawal"})}parseBalanceHelper(e){let t=this.account();t.used=this.safeString2(e,"holdBalance","hold"),t.free=this.safeString2(e,"availableBalance","available"),t.total=this.safeString2(e,"totalBalance","total");let i=this.safeString(e,"liability"),r=this.safeString(e,"interest");return t.debt=a.Y.stringAdd(i,r),t}async fetchBalance(e={}){let t,i,r,s;await this.loadMarkets();let a=this.safeString(e,"code");void 0!==a&&(t=this.currency(a));let o=this.safeString2(this.options,"fetchBalance","defaultType","spot"),n=this.safeString(e,"type",o),d=this.safeDict(this.options,"accountsByType"),h=this.safeString(d,n,n);e=this.omit(e,"type"),[i,e]=this.handleHfAndParams(e),i&&"main"!==h&&(h="trade_hf");let[c,l]=this.handleMarginModeAndParams("fetchBalance",e),f={},u="isolated"===c||"isolated"===h,p="cross"===c||"margin"===h;u?(void 0!==t&&(f.balanceCurrency=t.id),r=await this.privateGetIsolatedAccounts(this.extend(f,l))):p?r=await this.privateGetMarginAccount(this.extend(f,l)):(void 0!==t&&(f.currency=t.id),f.type=h,r=await this.privateGetAccounts(this.extend(f,l)));let m={info:r,timestamp:void 0,datetime:void 0};if(u){s=this.safeDict(r,"data",{});let e=this.safeValue(s,"assets",s);for(let t=0;t<e.length;t++){let i=e[t],r=this.safeString(i,"symbol"),s=this.safeSymbol(r,void 0,"_"),a=this.safeDict(i,"baseAsset",{}),o=this.safeDict(i,"quoteAsset",{}),n=this.safeCurrencyCode(this.safeString(a,"currency")),d=this.safeCurrencyCode(this.safeString(o,"currency")),h={};h[n]=this.parseBalanceHelper(a),h[d]=this.parseBalanceHelper(o),m[s]=this.safeBalance(h)}}else if(p){s=this.safeDict(r,"data",{});let e=this.safeList(s,"accounts",[]);for(let t=0;t<e.length;t++){let i=e[t],r=this.safeString(i,"currency");m[this.safeCurrencyCode(r)]=this.parseBalanceHelper(i)}}else{s=this.safeList(r,"data",[]);for(let e=0;e<s.length;e++){let t=s[e];if(this.safeString(t,"type")===h){let e=this.safeString(t,"currency"),i=this.safeCurrencyCode(e),r=this.account();r.total=this.safeString(t,"balance"),r.free=this.safeString(t,"available"),r.used=this.safeString(t,"holds"),m[i]=r}}}return u?m:this.safeBalance(m)}async transfer(e,t,i,r,a={}){await this.loadMarkets();let o=this.currency(e),n=this.currencyToPrecision(e,t),d=this.convertTypeToAccount(i),h=this.convertTypeToAccount(r),c=this.inArray(d,this.ids),l=this.inArray(h,this.ids);if("contract"===d){if("main"!==h)throw new s.ExchangeError(this.id+" transfer() only supports transferring from futures account to main account");let e={currency:o.id,amount:n};"bizNo"in a||(e.bizNo=this.uuid22());let t=await this.futuresPrivatePostTransferOut(this.extend(e,a)),i=this.safeDict(t,"data");return this.parseTransfer(i,o)}{let e={currency:o.id,amount:n};(c||l)&&(this.inArray(d,this.ids)&&(e.fromTag=d,d="isolated"),this.inArray(h,this.ids)&&(e.toTag=h,h="isolated")),e.from=d,e.to=h,"clientOid"in a||(e.clientOid=this.uuid());let t=await this.privatePostAccountsInnerTransfer(this.extend(e,a)),i=this.safeDict(t,"data");return this.parseTransfer(i,o)}}parseTransfer(e,t){let i=this.safeInteger(e,"createdAt"),r=this.safeString(e,"currency"),s=this.safeString(e,"status"),a=this.safeStringLower(e,"payAccountType"),o=this.safeStringLower(e,"recAccountType"),n=this.safeDict(this.options,"accountsByType"),d=this.safeString(n,a,a),h=this.safeString(n,o,o);return{id:this.safeString2(e,"applyId","orderId"),currency:this.safeCurrencyCode(r,t),timestamp:i,datetime:this.iso8601(i),amount:this.safeNumber(e,"amount"),fromAccount:d,toAccount:h,status:this.parseTransferStatus(s),info:e}}parseTransferStatus(e){return this.safeString({PROCESSING:"pending"},e,e)}parseLedgerEntryType(e){return this.safeString({"Assets Transferred in After Upgrading":"transfer",Deposit:"transaction",Withdrawal:"transaction",Transfer:"transfer",Trade_Exchange:"trade","KuCoin Bonus":"bonus","Referral Bonus":"referral",Rewards:"bonus","Airdrop/Fork":"airdrop","Other rewards":"bonus","Fee Rebate":"rebate","Buy Crypto":"trade","Sell Crypto":"sell","Public Offering Purchase":"trade","Refunded Fees":"fee","KCS Pay Fees":"fee","Margin Trade":"trade",Loans:"Loans","Instant Exchange":"trade","Sub-account transfer":"transfer","Liquidation Fees":"fee"},e,e)}parseLedgerEntry(e,t){let i,r;let s=this.safeString(e,"id"),a=this.safeString(e,"currency"),o=this.safeCurrencyCode(a,t);t=this.safeCurrency(a,t);let n=this.safeNumber(e,"amount"),d=this.safeString(e,"bizType"),h=this.parseLedgerEntryType(d),c=this.safeString(e,"direction"),l=this.safeInteger(e,"createdAt"),f=this.iso8601(l),u=this.safeString(e,"accountType"),p=this.safeString(e,"context");if(void 0!==p&&""!==p)try{let e=JSON.parse(p),t=this.safeString(e,"orderId"),r=this.safeString(e,"tradeId");i=void 0!==r?r:t}catch(e){i=p}let m=this.safeString(e,"fee");return"0"!==m&&(r={cost:this.parseNumber(m),currency:o}),this.safeLedgerEntry({info:e,id:s,direction:c,account:u,referenceId:i,referenceAccount:u,type:h,currency:o,amount:n,timestamp:l,datetime:f,before:void 0,after:void 0,status:void 0,fee:r},t)}async fetchLedger(e,t,i,r={}){let s,a,o,n;await this.loadMarkets(),await this.loadAccounts();let d=!1;if([d,r]=this.handleOptionAndParams(r,"fetchLedger","paginate"),[s,r]=this.handleHfAndParams(r),d)return await this.fetchPaginatedCallDynamic("fetchLedger",e,t,i,r);let h={};void 0!==t&&(h.startAt=t),void 0!==e&&(a=this.currency(e),h.currency=a.id),[h,r]=this.handleUntilOption("endAt",h,r),[o,r]=this.handleMarginModeAndParams("fetchLedger",r),n=s?void 0!==o?await this.privateGetHfMarginAccountLedgers(this.extend(h,r)):await this.privateGetHfAccountsLedgers(this.extend(h,r)):await this.privateGetAccountsLedgers(this.extend(h,r));let c=this.safeList(n,"data");if(void 0!==c)return this.parseLedger(c,a,t,i);let l=this.safeDict(n,"data"),f=this.safeList(l,"items",[]);return this.parseLedger(f,a,t,i)}calculateRateLimiterCost(e,t,i,r,s={}){let a=this.safeDict(this.options,"versions",{}),o=this.safeDict(a,e,{}),n=this.safeDict(o,t,{}),d=this.safeString(n,i,this.options.version),h=this.safeString(r,"version",d);return"v3"===h&&"v3"in s?s.v3:"v2"===h&&"v2"in s?s.v2:"v1"===h&&"v1"in s?s.v1:this.safeValue(s,"cost",1)}parseBorrowRate(e,t){let i=this.safeString2(e,"createdAt","timestamp"),r=this.parseToInt(i.slice(0,13)),s=this.safeString(e,"currency");return{currency:this.safeCurrencyCode(s,t),rate:this.safeNumber2(e,"dailyIntRate","dayRatio"),period:864e5,timestamp:r,datetime:this.iso8601(r),info:e}}async fetchBorrowInterest(e,t,i,r,s={}){let a,o,n,d;await this.loadMarkets(),[a,s]=this.handleMarginModeAndParams("fetchBorrowInterest",s,"cross");let h={};void 0!==e&&(o=this.currency(e),"isolated"===a?h.balanceCurrency=o.id:h.quoteCurrency=o.id),void 0!==t&&(n=this.market(t)),d="isolated"===a?await this.privateGetIsolatedAccounts(this.extend(h,s)):await this.privateGetMarginAccounts(this.extend(h,s));let c=this.safeDict(d,"data",{}),l="isolated"===a?this.safeList(c,"assets",[]):this.safeList(c,"accounts",[]),f=this.parseBorrowInterests(l,n),u=this.filterByCurrencySinceLimit(f,e,i,r);return this.filterBySymbolSinceLimit(u,t,i,r)}parseBorrowInterest(e,t){let i,r,s;let a=this.safeString(e,"symbol"),o=void 0===a?"cross":"isolated";t=this.safeMarket(a,t);let n=this.safeString(t,"symbol"),d=this.safeInteger(e,"createdAt"),h=this.safeDict(e,"baseAsset",{});return"isolated"===o?(i=this.safeNumber(h,"liability"),r=this.safeNumber(h,"interest"),s=this.safeString(h,"currency")):(i=this.safeNumber(e,"liability"),r=this.safeNumber(e,"accruedInterest"),s=this.safeString(e,"currency")),{info:e,symbol:n,currency:this.safeCurrencyCode(s),interest:r,interestRate:this.safeNumber(e,"dailyIntRate"),amountBorrowed:i,marginMode:o,timestamp:d,datetime:this.iso8601(d)}}async fetchBorrowRateHistories(e,t,i,r={}){await this.loadMarkets();let s=this.handleMarginModeAndParams("fetchBorrowRateHistories",r),a={isIsolated:"isolated"===this.safeString(s,0,"cross")};void 0!==t&&(a.startTime=t),[a,r]=this.handleUntilOption("endTime",a,r),void 0!==i&&(a.pageSize=i);let o=await this.privateGetMarginInterest(this.extend(a,r)),n=this.safeDict(o,"data"),d=this.safeList(n,"items",[]);return this.parseBorrowRateHistories(d,e,t,i)}async fetchBorrowRateHistory(e,t,i,r={}){await this.loadMarkets();let s=this.handleMarginModeAndParams("fetchBorrowRateHistories",r),a={isIsolated:"isolated"===this.safeString(s,0,"cross"),currency:this.currency(e).id};void 0!==t&&(a.startTime=t),[a,r]=this.handleUntilOption("endTime",a,r),void 0!==i&&(a.pageSize=i);let o=await this.privateGetMarginInterest(this.extend(a,r)),n=this.safeDict(o,"data"),d=this.safeList(n,"items",[]);return this.parseBorrowRateHistory(d,e,t,i)}parseBorrowRateHistories(e,t,i,r){let s={};for(let i=0;i<e.length;i++){let r=e[i],a=this.safeCurrencyCode(this.safeString(r,"currency"));if(void 0===t||this.inArray(a,t)){a in s||(s[a]=[]);let e=this.parseBorrowRate(r);s[a].push(e)}}let a=Object.keys(s);for(let e=0;e<a.length;e++){let t=a[e];s[t]=this.filterByCurrencySinceLimit(s[t],t,i,r)}return s}async borrowCrossMargin(e,t,i={}){await this.loadMarkets();let r=this.currency(e),s={currency:r.id,size:this.currencyToPrecision(e,t),timeInForce:"FOK"},a=await this.privatePostMarginBorrow(this.extend(s,i)),o=this.safeDict(a,"data",{});return this.parseMarginLoan(o,r)}async borrowIsolatedMargin(e,t,i,r={}){await this.loadMarkets();let s=this.market(e),a=this.currency(t),o={currency:a.id,size:this.currencyToPrecision(t,i),symbol:s.id,timeInForce:"FOK",isIsolated:!0},n=await this.privatePostMarginBorrow(this.extend(o,r)),d=this.safeDict(n,"data",{});return this.parseMarginLoan(d,a)}async repayCrossMargin(e,t,i={}){await this.loadMarkets();let r=this.currency(e),s={currency:r.id,size:this.currencyToPrecision(e,t)},a=await this.privatePostMarginRepay(this.extend(s,i)),o=this.safeDict(a,"data",{});return this.parseMarginLoan(o,r)}async repayIsolatedMargin(e,t,i,r={}){await this.loadMarkets();let s=this.market(e),a=this.currency(t),o={currency:a.id,size:this.currencyToPrecision(t,i),symbol:s.id,isIsolated:!0},n=await this.privatePostMarginRepay(this.extend(o,r)),d=this.safeDict(n,"data",{});return this.parseMarginLoan(d,a)}parseMarginLoan(e,t){let i=this.milliseconds(),r=this.safeString(e,"currency");return{id:this.safeString(e,"orderNo"),currency:this.safeCurrencyCode(r,t),amount:this.safeNumber(e,"actualSize"),symbol:void 0,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetCurrencies(t),r=this.safeList(i,"data",[]);return this.parseDepositWithdrawFees(r,e,"currency")}async setLeverage(e,t,i={}){let r,a,o;if(await this.loadMarkets(),[a,i]=this.handleMarketTypeAndParams("setLeverage",void 0,i),(void 0!==t||"spot"!==a)&&(r=this.market(t)).contract)throw new s.NotSupported(this.id+" setLeverage currently supports only spot margin");if([o,i]=this.handleMarginModeAndParams("setLeverage",i),void 0===o)throw new s.ArgumentsRequired(this.id+" setLeverage requires a marginMode parameter");let n={};if("isolated"===o&&void 0===t)throw new s.ArgumentsRequired(this.id+" setLeverage requires a symbol parameter for isolated margin");return void 0!==t&&(n.symbol=r.id),n.leverage=e.toString(),n.isIsolated="isolated"===o,await this.privatePostPositionUpdateUserLeverage(this.extend(n,i))}sign(e,t="public",i="GET",r={},s,a){let o=this.safeDict(this.options,"versions",{}),d=this.safeDict(o,t,{}),h=this.safeDict(d,i,{}),c=this.safeString(h,e,this.options.version),l=this.safeString(r,"version",c);r=this.omit(r,"version");let f="/api/"+l+"/"+this.implodeParams(e,r);"webExchange"===t&&(f="/"+this.implodeParams(e,r)),"earn"===t&&(f="/api/v1/"+this.implodeParams(e,r));let u=this.omit(r,this.extractParams(e)),p="";s=void 0!==s?s:{};let m=this.urls.api[t];this.isEmpty(u)||(("GET"===i||"DELETE"===i)&&"orders/multi-cancel"!==e?f+="?"+this.rawencode(u):(p=a=this.json(u),s["Content-Type"]="application/json")),m+=f;let g="futuresPrivate"===t,v="private"===t,y="broker"===t,w="earn"===t;if(v||g||y||w){this.checkRequiredCredentials();let e=this.nonce().toString();if(s=this.extend({"KC-API-KEY-VERSION":"2","KC-API-KEY":this.apiKey,"KC-API-TIMESTAMP":e},s),"2"===this.safeString(s,"KC-API-KEY-VERSION")){let e=this.hmac(this.encode(this.password),this.encode(this.secret),n.s,"base64");s["KC-API-PASSPHRASE"]=e}else s["KC-API-PASSPHRASE"]=this.password;let t=e+i+f+p,r=this.hmac(this.encode(t),this.encode(this.secret),n.s,"base64");s["KC-API-SIGN"]=r;let a=this.safeDict(this.options,"partner",{});a=g?this.safeValue(a,"future",a):this.safeValue(a,"spot",a);let o=this.safeString(a,"id"),d=this.safeString2(a,"secret","key");if(void 0!==o&&void 0!==d){let t=e+o+this.apiKey,i=this.hmac(this.encode(t),this.encode(d),n.s,"base64");s["KC-API-PARTNER-SIGN"]=i,s["KC-API-PARTNER"]=o,s["KC-API-PARTNER-VERIFY"]="true"}if(y){let e=this.safeString(a,"name");void 0!==e&&(s["KC-BROKER-NAME"]=e)}}return{url:m,method:i,body:a,headers:s}}handleErrors(e,t,i,r,a,o,n,d,h){if(!n){this.throwBroadlyMatchedException(this.exceptions.broad,o,o);return}let c=this.safeString(n,"code"),l=this.safeString2(n,"msg","data",""),f=this.id+" "+o;if(this.throwExactlyMatchedException(this.exceptions.exact,l,f),this.throwExactlyMatchedException(this.exceptions.exact,c,f),this.throwBroadlyMatchedException(this.exceptions.broad,o,f),"200000"!==c&&"200"!==c)throw new s.ExchangeError(f)}}}}]);