"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[426],{1889:(e,t,i)=>{i.d(t,{A:()=>d});var s=i(3406),r=i(6077),a=i(3675),n=i(8119),o=i(1701);class d extends s.A{describe(){return this.deepExtend(super.describe(),{id:"gate",name:"Gate.io",countries:["KR"],rateLimit:50,version:"v4",certified:!0,pro:!0,urls:{logo:"https://github.com/user-attachments/assets/64f988c5-07b6-4652-b5c1-679a6bf67c85",doc:"https://www.gate.io/docs/developers/apiv4/en/",www:"https://gate.io/",api:{public:{wallet:"https://api.gateio.ws/api/v4",futures:"https://api.gateio.ws/api/v4",margin:"https://api.gateio.ws/api/v4",delivery:"https://api.gateio.ws/api/v4",spot:"https://api.gateio.ws/api/v4",options:"https://api.gateio.ws/api/v4",sub_accounts:"https://api.gateio.ws/api/v4",earn:"https://api.gateio.ws/api/v4"},private:{withdrawals:"https://api.gateio.ws/api/v4",wallet:"https://api.gateio.ws/api/v4",futures:"https://api.gateio.ws/api/v4",margin:"https://api.gateio.ws/api/v4",delivery:"https://api.gateio.ws/api/v4",spot:"https://api.gateio.ws/api/v4",options:"https://api.gateio.ws/api/v4",subAccounts:"https://api.gateio.ws/api/v4",unified:"https://api.gateio.ws/api/v4",rebate:"https://api.gateio.ws/api/v4",earn:"https://api.gateio.ws/api/v4",account:"https://api.gateio.ws/api/v4",loan:"https://api.gateio.ws/api/v4"}},test:{public:{futures:"https://fx-api-testnet.gateio.ws/api/v4",delivery:"https://fx-api-testnet.gateio.ws/api/v4",options:"https://fx-api-testnet.gateio.ws/api/v4"},private:{futures:"https://fx-api-testnet.gateio.ws/api/v4",delivery:"https://fx-api-testnet.gateio.ws/api/v4",options:"https://fx-api-testnet.gateio.ws/api/v4"}},referral:{url:"https://www.gate.io/signup/2436035",discount:.2}},has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!0,addMargin:!0,borrowCrossMargin:!0,borrowIsolatedMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,cancelOrdersForSymbols:!0,createMarketBuyOrderWithCost:!0,createMarketOrder:!0,createMarketOrderWithCost:!1,createMarketSellOrderWithCost:!1,createOrder:!0,createOrders:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopLossOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,createTakeProfitOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchGreeks:!0,fetchIndexOHLCV:!0,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLedger:!0,fetchLeverage:!0,fetchLeverages:!0,fetchLeverageTiers:!0,fetchLiquidations:!0,fetchMarginAdjustmentHistory:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyLiquidations:!0,fetchMySettlementHistory:!0,fetchMyTrades:!0,fetchNetworkDepositAddress:!0,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!0,fetchOpenOrders:!0,fetchOption:!0,fetchOptionChain:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!0,fetchPositionHistory:"emulated",fetchPositionMode:!1,fetchPositions:!0,fetchPositionsHistory:!0,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:!0,fetchUnderlyingAssets:!0,fetchVolatilityHistory:!1,fetchWithdrawals:!0,reduceMargin:!0,repayCrossMargin:!0,repayIsolatedMargin:!0,sandbox:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},api:{public:{wallet:{get:{currency_chains:1}},spot:{get:{currencies:1,"currencies/{currency}":1,currency_pairs:1,"currency_pairs/{currency_pair}":1,tickers:1,order_book:1,trades:1,candlesticks:1,time:1}},margin:{get:{currency_pairs:1,"currency_pairs/{currency_pair}":1,funding_book:1,"cross/currencies":1,"cross/currencies/{currency}":1,"uni/currency_pairs":1,"uni/currency_pairs/{currency_pair}":1}},flash_swap:{get:{currencies:1}},futures:{get:{"{settle}/contracts":1,"{settle}/contracts/{contract}":1,"{settle}/order_book":1,"{settle}/trades":1,"{settle}/candlesticks":1,"{settle}/premium_index":1,"{settle}/tickers":1,"{settle}/funding_rate":1,"{settle}/insurance":1,"{settle}/contract_stats":1,"{settle}/index_constituents/{index}":1,"{settle}/liq_orders":1,"{settle}/risk_limit_tiers":1}},delivery:{get:{"{settle}/contracts":1,"{settle}/contracts/{contract}":1,"{settle}/order_book":1,"{settle}/trades":1,"{settle}/candlesticks":1,"{settle}/tickers":1,"{settle}/insurance":1}},options:{get:{underlyings:1,expirations:1,contracts:1,"contracts/{contract}":1,settlements:1,"settlements/{contract}":1,order_book:1,tickers:1,"underlying/tickers/{underlying}":1,candlesticks:1,"underlying/candlesticks":1,trades:1}},earn:{get:{"uni/currencies":1,"uni/currencies/{currency}":1}}},private:{withdrawals:{post:{withdrawals:20,push:1},delete:{"withdrawals/{withdrawal_id}":1}},wallet:{get:{deposit_address:1,withdrawals:1,deposits:1,sub_account_transfers:1,order_status:1,withdraw_status:1,sub_account_balances:2.5,sub_account_margin_balances:2.5,sub_account_futures_balances:2.5,sub_account_cross_margin_balances:2.5,saved_address:1,fee:1,total_balance:2.5,small_balance:1,small_balance_history:1,push:1},post:{transfers:2.5,sub_account_transfers:2.5,sub_account_to_sub_account:2.5,small_balance:1}},subAccounts:{get:{sub_accounts:2.5,"sub_accounts/{user_id}":2.5,"sub_accounts/{user_id}/keys":2.5,"sub_accounts/{user_id}/keys/{key}":2.5},post:{sub_accounts:2.5,"sub_accounts/{user_id}/keys":2.5,"sub_accounts/{user_id}/lock":2.5,"sub_accounts/{user_id}/unlock":2.5},put:{"sub_accounts/{user_id}/keys/{key}":2.5},delete:{"sub_accounts/{user_id}/keys/{key}":2.5}},unified:{get:{accounts:20/15,account_mode:20/15,borrowable:20/15,transferable:20/15,loans:20/15,loan_records:20/15,interest_records:20/15,estimate_rate:20/15,currency_discount_tiers:20/15,risk_units:20/15,unified_mode:20/15,loan_margin_tiers:20/15,"leverage/user_currency_config":20/15,"leverage/user_currency_setting":20/15},post:{account_mode:20/15,loans:200/15,portfolio_calculator:20/15,"leverage/user_currency_setting":20/15},put:{unified_mode:20/15}},spot:{get:{fee:1,batch_fee:1,accounts:1,account_book:1,open_orders:1,orders:1,"orders/{order_id}":1,my_trades:1,price_orders:1,"price_orders/{order_id}":1},post:{batch_orders:.4,cross_liquidate_orders:1,orders:.4,cancel_batch_orders:20/75,countdown_cancel_all:20/75,amend_batch_orders:.4,price_orders:.4},delete:{orders:20/75,"orders/{order_id}":20/75,price_orders:20/75,"price_orders/{order_id}":20/75},patch:{"orders/{order_id}":.4}},margin:{get:{accounts:20/15,account_book:20/15,funding_accounts:20/15,auto_repay:20/15,transferable:20/15,loans:20/15,"loans/{loan_id}":20/15,"loans/{loan_id}/repayment":20/15,loan_records:20/15,"loan_records/{loan_record_id}":20/15,borrowable:20/15,"cross/accounts":20/15,"cross/account_book":20/15,"cross/loans":20/15,"cross/loans/{loan_id}":20/15,"cross/repayments":20/15,"cross/interest_records":20/15,"cross/transferable":20/15,"cross/estimate_rate":20/15,"cross/borrowable":20/15,"uni/estimate_rate":20/15,"uni/loans":20/15,"uni/loan_records":20/15,"uni/interest_records":20/15,"uni/borrowable":20/15},post:{auto_repay:20/15,loans:20/15,merged_loans:20/15,"loans/{loan_id}/repayment":20/15,"cross/loans":20/15,"cross/repayments":20/15,"uni/loans":20/15},patch:{"loans/{loan_id}":20/15,"loan_records/{loan_record_id}":20/15},delete:{"loans/{loan_id}":20/15}},flash_swap:{get:{currencies:1,currency_pairs:1,orders:1,"orders/{order_id}":1},post:{orders:1,"orders/preview":1}},futures:{get:{"{settle}/accounts":1,"{settle}/account_book":1,"{settle}/positions":1,"{settle}/positions/{contract}":1,"{settle}/dual_comp/positions/{contract}":1,"{settle}/orders":1,"{settle}/orders_timerange":1,"{settle}/orders/{order_id}":1,"{settle}/my_trades":1,"{settle}/my_trades_timerange":1,"{settle}/position_close":1,"{settle}/liquidates":1,"{settle}/auto_deleverages":1,"{settle}/fee":1,"{settle}/risk_limit_tiers":1,"{settle}/price_orders":1,"{settle}/price_orders/{order_id}":1},post:{"{settle}/positions/{contract}/margin":1,"{settle}/positions/{contract}/leverage":1,"{settle}/positions/{contract}/risk_limit":1,"{settle}/dual_mode":1,"{settle}/dual_comp/positions/{contract}/margin":1,"{settle}/dual_comp/positions/{contract}/leverage":1,"{settle}/dual_comp/positions/{contract}/risk_limit":1,"{settle}/orders":.4,"{settle}/batch_orders":.4,"{settle}/countdown_cancel_all":.4,"{settle}/batch_cancel_orders":.4,"{settle}/price_orders":.4},put:{"{settle}/orders/{order_id}":1},delete:{"{settle}/orders":20/75,"{settle}/orders/{order_id}":20/75,"{settle}/price_orders":20/75,"{settle}/price_orders/{order_id}":20/75}},delivery:{get:{"{settle}/accounts":20/15,"{settle}/account_book":20/15,"{settle}/positions":20/15,"{settle}/positions/{contract}":20/15,"{settle}/orders":20/15,"{settle}/orders/{order_id}":20/15,"{settle}/my_trades":20/15,"{settle}/position_close":20/15,"{settle}/liquidates":20/15,"{settle}/settlements":20/15,"{settle}/price_orders":20/15,"{settle}/price_orders/{order_id}":20/15},post:{"{settle}/positions/{contract}/margin":20/15,"{settle}/positions/{contract}/leverage":20/15,"{settle}/positions/{contract}/risk_limit":20/15,"{settle}/orders":20/15,"{settle}/price_orders":20/15},delete:{"{settle}/orders":20/15,"{settle}/orders/{order_id}":20/15,"{settle}/price_orders":20/15,"{settle}/price_orders/{order_id}":20/15}},options:{get:{my_settlements:20/15,accounts:20/15,account_book:20/15,positions:20/15,"positions/{contract}":20/15,position_close:20/15,orders:20/15,"orders/{order_id}":20/15,my_trades:20/15,mmp:20/15},post:{orders:20/15,countdown_cancel_all:20/15,mmp:20/15,"mmp/reset":20/15},delete:{orders:20/15,"orders/{order_id}":20/15}},earn:{get:{"uni/currencies":20/15,"uni/currencies/{currency}":20/15,"uni/lends":20/15,"uni/lend_records":20/15,"uni/interests/{currency}":20/15,"uni/interest_records":20/15,"uni/interest_status/{currency}":20/15},post:{"uni/lends":20/15},put:{"uni/interest_reinvest":20/15},patch:{"uni/lends":20/15}},loan:{get:{"collateral/orders":20/15,"collateral/orders/{order_id}":20/15,"collateral/repay_records":20/15,"collateral/collaterals":20/15,"collateral/total_amount":20/15,"collateral/ltv":20/15,"collateral/currencies":20/15,"multi_collateral/orders":20/15,"multi_collateral/orders/{order_id}":20/15,"multi_collateral/repay":20/15,"multi_collateral/mortgage":20/15,"multi_collateral/currency_quota":20/15,"multi_collateral/currencies":20/15,"multi_collateral/ltv":20/15,"multi_collateral/fixed_rate":20/15,"multi_collateral/current_rate":20/15},post:{"collateral/orders":20/15,"collateral/repay":20/15,"collateral/collaterals":20/15,"multi_collateral/orders":20/15,"multi_collateral/repay":20/15,"multi_collateral/mortgage":20/15}},account:{get:{detail:20/15,rate_limit:20/15,stp_groups:20/15,"stp_groups/{stp_id}/users":20/15,"stp_groups/debit_fee":20/15},post:{stp_groups:20/15,"stp_groups/{stp_id}/users":20/15},delete:{"stp_groups/{stp_id}/users":20/15}},rebate:{get:{"agency/transaction_history":20/15,"agency/commission_history":20/15}}}},timeframes:{"10s":"10s","1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","8h":"8h","1d":"1d","7d":"7d","1w":"7d"},commonCurrencies:{ORT:"XREATORS",ASS:"ASSF","88MPH":"MPH",AXIS:"AXISDEFI",BIFI:"BITCOINFILE",BOX:"DEFIBOX",BYN:"BEYONDFI",EGG:"GOOSEFINANCE",GTC:"GAMECOM",GTC_HT:"GAMECOM_HT",GTC_BSC:"GAMECOM_BSC",HIT:"HITCHAIN",MM:"MILLION",MPH:"MORPHER",POINT:"GATEPOINT",RAI:"RAIREFLEXINDEX",RED:"RedLang",SBTC:"SUPERBITCOIN",TNC:"TRINITYNETWORKCREDIT",VAI:"VAIOT",TRAC:"TRACO"},requiredCredentials:{apiKey:!0,secret:!0},headers:{"X-Gate-Channel-Id":"ccxt"},options:{timeDifference:0,adjustForTimeDifference:!1,sandboxMode:!1,unifiedAccount:void 0,createOrder:{expiration:86400},createMarketBuyOrderRequiresPrice:!0,networks:{LINEA:"LINEAETH",KON:"KONET",AVAXC:"AVAX_C",BEP20:"BSC",EOS:"EOS",ERC20:"ETH",GATECHAIN:"GTEVM",HRC20:"HT",KUSAMA:"KSMSM",NEAR:"NEAR",OKC:"OKT",OPTIMISM:"OPETH",POLKADOT:"DOTSM",TRC20:"TRX",LUNA:"LUNC",BASE:"BASEEVM",BRC20:"BTCBRC"},timeInForce:{GTC:"gtc",IOC:"ioc",PO:"poc",POC:"poc",FOK:"fok"},accountsByType:{funding:"spot",spot:"spot",margin:"margin",cross_margin:"cross_margin",cross:"cross_margin",isolated:"margin",swap:"futures",future:"delivery",futures:"futures",delivery:"delivery",option:"options",options:"options"},swap:{fetchMarkets:{settlementCurrencies:["usdt","btc"]}},future:{fetchMarkets:{settlementCurrencies:["usdt"]}}},features:{default:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerDirection:!0,triggerPriceType:void 0,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,trailing:!1,iceberg:!0,selfTradePrevention:!0,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!0},createOrders:{max:40},fetchMyTrades:{marginMode:!0,limit:1e3,daysBack:void 0,untilDays:30},fetchOrder:{marginMode:!1,trigger:!0,trailing:!1},fetchOpenOrders:{marginMode:!0,trigger:!0,trailing:!1,limit:100},fetchOrders:void 0,fetchClosedOrders:{marginMode:!0,trigger:!0,trailing:!1,limit:100,untilDays:30,daysBack:void 0,daysBackCanceled:void 0},fetchOHLCV:{limit:1e3}},spot:{extends:"default"},forDerivatives:{extends:"spot",createOrder:{marginMode:!1,triggerPriceType:{last:!0,mark:!0,index:!0}},createOrders:{max:10},fetchMyTrades:{marginMode:!1,untilDays:void 0},fetchOpenOrders:{marginMode:!1},fetchClosedOrders:{marginMode:!1,untilDays:void 0,limit:1e3},fetchOHLCV:{limit:1999}},swap:{linear:{extends:"forDerivatives"},inverse:{extends:"forDerivatives"}},future:{linear:{extends:"forDerivatives"},inverse:{extends:"forDerivatives"}}},precisionMode:a.kb,fees:{trading:{tierBased:!0,feeSide:"get",percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("1.5"),this.parseNumber("0.00185")],[this.parseNumber("3"),this.parseNumber("0.00175")],[this.parseNumber("6"),this.parseNumber("0.00165")],[this.parseNumber("12.5"),this.parseNumber("0.00155")],[this.parseNumber("25"),this.parseNumber("0.00145")],[this.parseNumber("75"),this.parseNumber("0.00135")],[this.parseNumber("200"),this.parseNumber("0.00125")],[this.parseNumber("500"),this.parseNumber("0.00115")],[this.parseNumber("1250"),this.parseNumber("0.00105")],[this.parseNumber("2500"),this.parseNumber("0.00095")],[this.parseNumber("3000"),this.parseNumber("0.00085")],[this.parseNumber("6000"),this.parseNumber("0.00075")],[this.parseNumber("11000"),this.parseNumber("0.00065")],[this.parseNumber("20000"),this.parseNumber("0.00055")],[this.parseNumber("40000"),this.parseNumber("0.00055")],[this.parseNumber("75000"),this.parseNumber("0.00055")]],taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("1.5"),this.parseNumber("0.00195")],[this.parseNumber("3"),this.parseNumber("0.00185")],[this.parseNumber("6"),this.parseNumber("0.00175")],[this.parseNumber("12.5"),this.parseNumber("0.00165")],[this.parseNumber("25"),this.parseNumber("0.00155")],[this.parseNumber("75"),this.parseNumber("0.00145")],[this.parseNumber("200"),this.parseNumber("0.00135")],[this.parseNumber("500"),this.parseNumber("0.00125")],[this.parseNumber("1250"),this.parseNumber("0.00115")],[this.parseNumber("2500"),this.parseNumber("0.00105")],[this.parseNumber("3000"),this.parseNumber("0.00095")],[this.parseNumber("6000"),this.parseNumber("0.00085")],[this.parseNumber("11000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")],[this.parseNumber("40000"),this.parseNumber("0.00065")],[this.parseNumber("75000"),this.parseNumber("0.00065")]]}},swap:{tierBased:!0,feeSide:"base",percentage:!0,maker:this.parseNumber("0.0"),taker:this.parseNumber("0.0005"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.0000")],[this.parseNumber("1.5"),this.parseNumber("-0.00005")],[this.parseNumber("3"),this.parseNumber("-0.00005")],[this.parseNumber("6"),this.parseNumber("-0.00005")],[this.parseNumber("12.5"),this.parseNumber("-0.00005")],[this.parseNumber("25"),this.parseNumber("-0.00005")],[this.parseNumber("75"),this.parseNumber("-0.00005")],[this.parseNumber("200"),this.parseNumber("-0.00005")],[this.parseNumber("500"),this.parseNumber("-0.00005")],[this.parseNumber("1250"),this.parseNumber("-0.00005")],[this.parseNumber("2500"),this.parseNumber("-0.00005")],[this.parseNumber("3000"),this.parseNumber("-0.00008")],[this.parseNumber("6000"),this.parseNumber("-0.01000")],[this.parseNumber("11000"),this.parseNumber("-0.01002")],[this.parseNumber("20000"),this.parseNumber("-0.01005")],[this.parseNumber("40000"),this.parseNumber("-0.02000")],[this.parseNumber("75000"),this.parseNumber("-0.02005")]],taker:[[this.parseNumber("0"),this.parseNumber("0.00050")],[this.parseNumber("1.5"),this.parseNumber("0.00048")],[this.parseNumber("3"),this.parseNumber("0.00046")],[this.parseNumber("6"),this.parseNumber("0.00044")],[this.parseNumber("12.5"),this.parseNumber("0.00042")],[this.parseNumber("25"),this.parseNumber("0.00040")],[this.parseNumber("75"),this.parseNumber("0.00038")],[this.parseNumber("200"),this.parseNumber("0.00036")],[this.parseNumber("500"),this.parseNumber("0.00034")],[this.parseNumber("1250"),this.parseNumber("0.00032")],[this.parseNumber("2500"),this.parseNumber("0.00030")],[this.parseNumber("3000"),this.parseNumber("0.00030")],[this.parseNumber("6000"),this.parseNumber("0.00030")],[this.parseNumber("11000"),this.parseNumber("0.00030")],[this.parseNumber("20000"),this.parseNumber("0.00030")],[this.parseNumber("40000"),this.parseNumber("0.00030")],[this.parseNumber("75000"),this.parseNumber("0.00030")]]}}},exceptions:{exact:{INVALID_PARAM_VALUE:n.BadRequest,INVALID_PROTOCOL:n.BadRequest,INVALID_ARGUMENT:n.BadRequest,INVALID_REQUEST_BODY:n.BadRequest,MISSING_REQUIRED_PARAM:n.ArgumentsRequired,BAD_REQUEST:n.BadRequest,INVALID_CONTENT_TYPE:n.BadRequest,NOT_ACCEPTABLE:n.BadRequest,METHOD_NOT_ALLOWED:n.BadRequest,NOT_FOUND:n.ExchangeError,AUTHENTICATION_FAILED:n.AuthenticationError,INVALID_CREDENTIALS:n.AuthenticationError,INVALID_KEY:n.AuthenticationError,IP_FORBIDDEN:n.AuthenticationError,READ_ONLY:n.PermissionDenied,INVALID_SIGNATURE:n.AuthenticationError,MISSING_REQUIRED_HEADER:n.AuthenticationError,REQUEST_EXPIRED:n.AuthenticationError,ACCOUNT_LOCKED:n.AccountSuspended,FORBIDDEN:n.PermissionDenied,SUB_ACCOUNT_NOT_FOUND:n.ExchangeError,SUB_ACCOUNT_LOCKED:n.AccountSuspended,MARGIN_BALANCE_EXCEPTION:n.ExchangeError,MARGIN_TRANSFER_FAILED:n.ExchangeError,TOO_MUCH_FUTURES_AVAILABLE:n.ExchangeError,FUTURES_BALANCE_NOT_ENOUGH:n.InsufficientFunds,ACCOUNT_EXCEPTION:n.ExchangeError,SUB_ACCOUNT_TRANSFER_FAILED:n.ExchangeError,ADDRESS_NOT_USED:n.ExchangeError,TOO_FAST:n.RateLimitExceeded,WITHDRAWAL_OVER_LIMIT:n.ExchangeError,API_WITHDRAW_DISABLED:n.ExchangeNotAvailable,INVALID_WITHDRAW_ID:n.ExchangeError,INVALID_WITHDRAW_CANCEL_STATUS:n.ExchangeError,INVALID_PRECISION:n.InvalidOrder,INVALID_CURRENCY:n.BadSymbol,INVALID_CURRENCY_PAIR:n.BadSymbol,POC_FILL_IMMEDIATELY:n.OrderImmediatelyFillable,ORDER_NOT_FOUND:n.OrderNotFound,CLIENT_ID_NOT_FOUND:n.OrderNotFound,ORDER_CLOSED:n.InvalidOrder,ORDER_CANCELLED:n.InvalidOrder,QUANTITY_NOT_ENOUGH:n.InvalidOrder,BALANCE_NOT_ENOUGH:n.InsufficientFunds,MARGIN_NOT_SUPPORTED:n.InvalidOrder,MARGIN_BALANCE_NOT_ENOUGH:n.InsufficientFunds,AMOUNT_TOO_LITTLE:n.InvalidOrder,AMOUNT_TOO_MUCH:n.InvalidOrder,REPEATED_CREATION:n.InvalidOrder,LOAN_NOT_FOUND:n.OrderNotFound,LOAN_RECORD_NOT_FOUND:n.OrderNotFound,NO_MATCHED_LOAN:n.ExchangeError,NOT_MERGEABLE:n.ExchangeError,NO_CHANGE:n.ExchangeError,REPAY_TOO_MUCH:n.ExchangeError,TOO_MANY_CURRENCY_PAIRS:n.InvalidOrder,TOO_MANY_ORDERS:n.InvalidOrder,TOO_MANY_REQUESTS:n.RateLimitExceeded,MIXED_ACCOUNT_TYPE:n.InvalidOrder,AUTO_BORROW_TOO_MUCH:n.ExchangeError,TRADE_RESTRICTED:n.InsufficientFunds,USER_NOT_FOUND:n.AccountNotEnabled,CONTRACT_NO_COUNTER:n.ExchangeError,CONTRACT_NOT_FOUND:n.BadSymbol,RISK_LIMIT_EXCEEDED:n.ExchangeError,INSUFFICIENT_AVAILABLE:n.InsufficientFunds,LIQUIDATE_IMMEDIATELY:n.InvalidOrder,LEVERAGE_TOO_HIGH:n.InvalidOrder,LEVERAGE_TOO_LOW:n.InvalidOrder,ORDER_NOT_OWNED:n.ExchangeError,ORDER_FINISHED:n.ExchangeError,POSITION_CROSS_MARGIN:n.ExchangeError,POSITION_IN_LIQUIDATION:n.ExchangeError,POSITION_IN_CLOSE:n.ExchangeError,POSITION_EMPTY:n.InvalidOrder,REMOVE_TOO_MUCH:n.ExchangeError,RISK_LIMIT_NOT_MULTIPLE:n.ExchangeError,RISK_LIMIT_TOO_HIGH:n.ExchangeError,RISK_LIMIT_TOO_lOW:n.ExchangeError,PRICE_TOO_DEVIATED:n.InvalidOrder,SIZE_TOO_LARGE:n.InvalidOrder,SIZE_TOO_SMALL:n.InvalidOrder,PRICE_OVER_LIQUIDATION:n.InvalidOrder,PRICE_OVER_BANKRUPT:n.InvalidOrder,ORDER_POC_IMMEDIATE:n.OrderImmediatelyFillable,INCREASE_POSITION:n.InvalidOrder,CONTRACT_IN_DELISTING:n.ExchangeError,INTERNAL:n.ExchangeNotAvailable,SERVER_ERROR:n.ExchangeNotAvailable,TOO_BUSY:n.ExchangeNotAvailable,CROSS_ACCOUNT_NOT_FOUND:n.ExchangeError,RISK_LIMIT_TOO_LOW:n.BadRequest,AUTO_TRIGGER_PRICE_LESS_LAST:n.InvalidOrder,AUTO_TRIGGER_PRICE_GREATE_LAST:n.InvalidOrder,POSITION_HOLDING:n.BadRequest,USER_LOAN_EXCEEDED:n.BadRequest},broad:{}}})}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}async loadUnifiedStatus(e={}){if(void 0===this.safeBool(this.options,"unifiedAccount"))try{let t=await this.privateAccountGetDetail(e),i=this.safeDict(t,"key",{});this.options.unifiedAccount=2===this.safeInteger(i,"mode")}catch(e){this.options.unifiedAccount=!1}return this.options.unifiedAccount}async upgradeUnifiedTradeAccount(e={}){return await this.privateUnifiedPutUnifiedMode(e)}async fetchTime(e={}){let t=await this.publicSpotGetTime(e);return this.safeInteger(t,"server_time")}createExpiredOptionMarket(e){let t;let i="USDT",s=e.split("-"),r=e.split("/"),a=e.split("_"),n=this.safeString(s,1);e.indexOf("/")>-1?t=this.safeString(r,0):(t=this.safeString(a,0),n=n.slice(2,8));let o=this.safeString(s,2),d=this.safeString(s,3),h=this.convertExpireDate(n),l=this.parse8601(h);return{id:t+"_"+i+"-20"+n+"-"+o+"-"+d,symbol:t+"/"+i+":"+i+"-"+n+"-"+o+"-"+d,base:t,quote:i,settle:i,baseId:t,quoteId:i,settleId:i,active:!1,type:"option",linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!0,margin:!1,contract:!0,contractSize:this.parseNumber("1"),expiry:l,expiryDatetime:h,optionType:"C"===d?"call":"put",strike:this.parseNumber(o),precision:{amount:this.parseNumber("1"),price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0}}safeMarket(e,t,i,s){return void 0!==e&&(e.indexOf("-C")>-1||e.indexOf("-P")>-1)&&!(e in this.markets_by_id)?this.createExpiredOptionMarket(e):super.safeMarket(e,t,i,s)}async fetchMarkets(e={}){this.options.adjustForTimeDifference&&await this.loadTimeDifference();let t=this.safeBool(this.options,"sandboxMode",!1),i=[this.fetchContractMarkets(e),this.fetchOptionMarkets(e)];if(!t){let t=[this.fetchSpotMarkets(e)];i=this.arrayConcat(i,t)}let s=await Promise.all(i),r=this.safeValue(s,0,[]),a=this.safeValue(s,1,[]),n=this.safeValue(s,2,[]),o=this.arrayConcat(r,a);return this.arrayConcat(o,n)}async fetchSpotMarkets(e={}){let t=this.publicMarginGetCurrencyPairs(e),i=this.publicSpotGetCurrencyPairs(e),[s,a]=await Promise.all([t,i]),n=this.indexBy(s,"id"),o=[];for(let e=0;e<a.length;e++){let t=a[e],i=this.safeString(t,"id"),s=this.safeValue(n,i),d=this.deepExtend(s,t),[h,l]=i.split("_"),c=this.safeCurrencyCode(h),u=this.safeCurrencyCode(l),p=this.safeString(d,"fee"),f=this.safeString(d,"maker_fee_rate",p),m=this.parseNumber(this.parsePrecision(this.safeString(d,"amount_precision"))),g=this.safeString(d,"trade_status"),_=void 0!==this.safeNumber(d,"leverage");o.push({id:i,symbol:c+"/"+u,base:c,quote:u,settle:void 0,baseId:h,quoteId:l,settleId:void 0,type:"spot",spot:!0,margin:_,swap:!1,future:!1,option:!1,active:"tradable"===g,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(r.Y.stringDiv(p,"100")),maker:this.parseNumber(r.Y.stringDiv(f,"100")),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:m,price:this.parseNumber(this.parsePrecision(this.safeString(d,"precision")))},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(d,"leverage",1)},amount:{min:this.safeNumber(t,"min_base_amount",m),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(d,"min_quote_amount"),max:_?this.safeNumber(d,"max_quote_amount"):void 0}},created:void 0,info:d})}return o}async fetchContractMarkets(e={}){let t=[],i=this.getSettlementCurrencies("swap","fetchMarkets"),s=this.getSettlementCurrencies("future","fetchMarkets");for(let s=0;s<i.length;s++){let r=i[s],a={settle:r},n=await this.publicFuturesGetSettleContracts(this.extend(a,e));for(let e=0;e<n.length;e++){let i=this.parseContractMarket(n[e],r);t.push(i)}}for(let i=0;i<s.length;i++){let r=s[i],a={settle:r},n=await this.publicDeliveryGetSettleContracts(this.extend(a,e));for(let e=0;e<n.length;e++){let i=this.parseContractMarket(n[e],r);t.push(i)}}return t}parseContractMarket(e,t){let i=this.safeString(e,"name"),s=i.split("_"),a=this.safeString(s,0),n=this.safeString(s,1),o=this.safeString(s,2),d=this.safeCurrencyCode(a),h=this.safeCurrencyCode(n),l=this.safeCurrencyCode(t),c=this.safeTimestamp(e,"expire_time"),u="",p="swap";void 0!==o?(u=d+"/"+h+":"+l+"-"+this.yymmdd(c,""),p="future"):u=d+"/"+h+":"+l;let f=this.safeString(e,"order_price_deviate"),m=this.safeString(e,"mark_price"),g=r.Y.stringSub("1",f),_=r.Y.stringAdd("1",f),y=r.Y.stringMul(g,m),v=r.Y.stringMul(_,m),w=this.safeString(e,"taker_fee_rate"),b=this.safeString(e,"maker_fee_rate",w),S=h===l;return{id:i,symbol:u,base:d,quote:h,settle:l,baseId:a,quoteId:n,settleId:t,type:p,spot:!1,margin:!1,swap:"swap"===p,future:"future"===p,option:"option"===p,active:!0,contract:!0,linear:S,inverse:!S,taker:this.parseNumber(r.Y.stringDiv(w,"100")),maker:this.parseNumber(r.Y.stringDiv(b,"100")),contractSize:this.safeNumber(e,"quanto_multiplier"),expiry:c,expiryDatetime:this.iso8601(c),strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1"),price:this.safeNumber(e,"order_price_round")},limits:{leverage:{min:this.safeNumber(e,"leverage_min"),max:this.safeNumber(e,"leverage_max")},amount:{min:this.safeNumber(e,"order_size_min"),max:this.safeNumber(e,"order_size_max")},price:{min:this.parseNumber(y),max:this.parseNumber(v)},cost:{min:void 0,max:void 0}},created:void 0,info:e}}async fetchOptionMarkets(e={}){let t=[],i=await this.fetchOptionUnderlyings();for(let s=0;s<i.length;s++){let a=i[s],n=this.extend({},e);n.underlying=a;let o=await this.publicOptionsGetContracts(n);for(let e=0;e<o.length;e++){let i=o[e],s=this.safeString(i,"name"),n=a.split("_"),d=this.safeString(n,0),h=this.safeString(n,1),l=this.safeCurrencyCode(d),c=this.safeCurrencyCode(h),u=l+"/"+c,p=this.safeTimestamp(i,"expiration_time"),f=this.safeString(i,"strike_price"),m=this.safeValue(i,"is_call"),g=m?"C":"P",_=m?"call":"put";u=u+":"+c+"-"+this.yymmdd(p)+"-"+f+"-"+g;let y=this.safeString(i,"order_price_deviate"),v=this.safeString(i,"mark_price"),w=r.Y.stringSub("1",y),b=r.Y.stringAdd("1",y),S=r.Y.stringMul(w,v),O=r.Y.stringMul(b,v),N=this.safeString(i,"taker_fee_rate"),k=this.safeString(i,"maker_fee_rate",N);t.push({id:s,symbol:u,base:l,quote:c,settle:c,baseId:d,quoteId:h,settleId:h,type:"option",spot:!1,margin:!1,swap:!1,future:!1,option:!0,active:!0,contract:!0,linear:!0,inverse:!1,taker:this.parseNumber(r.Y.stringDiv(N,"100")),maker:this.parseNumber(r.Y.stringDiv(k,"100")),contractSize:this.parseNumber("1"),expiry:p,expiryDatetime:this.iso8601(p),strike:f,optionType:_,precision:{amount:this.parseNumber("1"),price:this.safeNumber(i,"order_price_round")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,"order_size_min"),max:this.safeNumber(i,"order_size_max")},price:{min:this.parseNumber(S),max:this.parseNumber(O)},cost:{min:void 0,max:void 0}},created:this.safeTimestamp(i,"create_time"),info:i})}}return t}async fetchOptionUnderlyings(){let e=await this.publicOptionsGetUnderlyings(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=this.safeString(s,"name");void 0!==r&&t.push(r)}return t}prepareRequest(e,t,i={}){let s={};if(void 0!==e)e.contract?(s.contract=e.id,e.option||(s.settle=e.settleId)):s.currency_pair=e.id;else{let e="swap"===t;if(e||"future"===t){let t=this.safeStringLower(i,"settle",e?"usdt":"btc");i=this.omit(i,"settle"),s.settle=t}}return[s,i]}spotOrderPrepareRequest(e,t=!1,i={}){let[s,r]=this.getMarginMode(t,i),a={};if(!t){if(void 0===e)throw new n.ArgumentsRequired(this.id+" spotOrderPrepareRequest() requires a market argument for non-trigger orders");a.account=s,a.currency_pair=e.id}return[a,r]}multiOrderSpotPrepareRequest(e,t=!1,i={}){let[s,r]=this.getMarginMode(t,i),a={account:s};return void 0!==e&&(t?a.market=e.id:a.currency_pair=e.id),[a,r]}getMarginMode(e,t){let i=this.safeStringLower2(this.options,"defaultMarginMode","marginMode","spot"),s=this.safeStringLower2(t,"marginMode","account",i);if(t=this.omit(t,["marginMode","account"]),"cross"===s?s="cross_margin":"isolated"===s?s="margin":""===s&&(s="spot"),e&&("spot"===s&&(s="normal"),"cross_margin"===s))throw new n.BadRequest(this.id+" getMarginMode() does not support trigger orders for cross margin");let r=!1;return[r,t]=this.handleOptionAndParams(t,"getMarginMode","unifiedAccount"),r&&(s="unified"),[s,t]}getSettlementCurrencies(e,t){let i=this.safeValue(this.options,e,{}),s=this.safeValue(i,t,{});return this.safeValue(s,"settlementCurrencies","swap"===e?["usdt"]:["btc"])}async fetchCurrencies(e={}){if(void 0!==this.safeValue(this.urls,"apiBackup"))return;this.checkRequiredCredentials(!1)&&await this.loadUnifiedStatus();let t=await this.publicSpotGetCurrencies(e),i={};for(let e=0;e<t.length;e++){let s;let r=t[e],a=this.safeString(r,"currency"),n=this.safeStringLower(r,"currency"),o=a.split("_")[0],d=this.safeCurrencyCode(o),h=this.safeString(r,"chain");void 0!==h&&(s=this.networkIdToCode(h,d));let l=this.safeValue(r,"delisted"),c=this.safeBool(r,"withdraw_disabled",!1),u=this.safeBool(r,"deposit_disabled",!1),p=this.safeBool(r,"trade_disabled",!1),f=!c,m=!u,g=!p,_=!l&&g&&f&&m;void 0===this.safeValue(i,d)&&(i[d]={id:d.toLowerCase(),code:d,info:void 0,name:void 0,active:_,deposit:m,withdraw:f,fee:void 0,fees:[],precision:this.parseNumber("1e-4"),limits:this.limits,networks:{}});let y=this.safeValue(i[d],"deposit");y=m||y;let v=this.safeValue(i[d],"withdraw");v=f||v;let w=this.safeValue(i[d],"networks",{});void 0!==s&&(w[s]={info:r,id:h,network:s,currencyId:a,lowerCaseCurrencyId:n,deposit:m,withdraw:f,active:_,fee:void 0,precision:this.parseNumber("1e-4"),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}}}),i[d].networks=w;let b=this.safeValue(i[d],"info",[]);b.push(r),i[d].info=b,i[d].active=y&&v,i[d].deposit=y,i[d].withdraw=v}return i}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.swap)throw new n.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");let[s,r]=this.prepareRequest(i,void 0,t),a=await this.publicFuturesGetSettleContractsContract(this.extend(s,r));return this.parseFundingRate(a)}async fetchFundingRates(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let[i,s]=this.prepareRequest(void 0,"swap",t),r=await this.publicFuturesGetSettleContracts(this.extend(i,s));return this.parseFundingRates(r,e)}parseFundingRate(e,t){let i=this.safeString(e,"name"),s=this.safeSymbol(i,t,"_","swap"),a=this.safeNumber(e,"mark_price"),n=this.safeNumber(e,"index_price"),o=this.safeNumber(e,"interest_rate"),d=this.safeNumber(e,"funding_rate"),h=this.safeTimestamp(e,"funding_next_apply"),l=this.safeNumber(e,"funding_rate_indicative"),c=r.Y.stringMul("1000",this.safeString(e,"funding_interval"));return{info:e,symbol:s,markPrice:a,indexPrice:n,interestRate:o,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:d,fundingTimestamp:h,fundingDatetime:this.iso8601(h),nextFundingRate:l,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:this.parseFundingInterval(c)}}parseFundingInterval(e){return this.safeString({36e5:"1h",144e5:"4h",288e5:"8h",576e5:"16h",864e5:"24h"},e,e)}async fetchNetworkDepositAddress(e,t={}){await this.loadMarkets();let i={currency:this.currency(e).id},s=await this.privateWalletGetDepositAddress(this.extend(i,t)),r=this.safeValue(s,"multichain_addresses"),a=this.safeString(s,"currency");e=this.safeCurrencyCode(a);let n={};for(let t=0;t<r.length;t++){let i=r[t];if(this.safeInteger(i,"obtain_failed"))continue;let s=this.safeString(i,"chain"),a=this.safeString(i,"address"),o=this.safeString(i,"payment_id");n[s]={info:i,code:e,currency:e,address:a,tag:o}}return n}async fetchDepositAddress(e,t={}){let i,s,r;await this.loadMarkets();let a=this.currency(e),o=this.safeStringUpper(t,"network");t=this.omit(t,"network");let d={currency:a.id},h=await this.privateWalletGetDepositAddress(this.extend(d,t)),l=this.safeString(h,"currency");e=this.safeCurrencyCode(l);let c=this.networkCodeToId(o,e);if(void 0!==c){let t=this.safeValue(h,"multichain_addresses");for(let a=0;a<t.length;a++){let n=t[a];if(c===this.safeString(n,"chain")){if(this.safeInteger(n,"obtain_failed"))break;r=this.safeString(n,"address"),s=this.safeString(n,"payment_id"),i=this.networkIdToCode(c,e);break}}}else{let e=this.safeString(h,"address");if(void 0!==e){if(e.indexOf("New address is being generated for you, please wait")>=0)throw new n.BadResponse(this.id+" New address is being generated for you, please wait a few seconds and try again to get the address.");if(e.indexOf(" ")>=0){let t=e.split(" ");r=t[0],s=t[1]}else r=e}}return this.checkAddress(r),{info:h,currency:e,network:i,address:r,tag:s}}async fetchTradingFee(e,t={}){await this.loadMarkets();let i=this.market(e),s={currency_pair:i.id},r=await this.privateWalletGetFee(this.extend(s,t));return this.parseTradingFee(r,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateWalletGetFee(e);return this.parseTradingFees(t)}parseTradingFees(e){let t={};for(let i=0;i<this.symbols.length;i++){let s=this.symbols[i],r=this.market(s);t[s]=this.parseTradingFee(e,r)}return t}parseTradingFee(e,t){let i=this.safeValue(e,"gt_discount"),s=this.safeValue(t,"contract");return{info:e,symbol:this.safeString(t,"symbol"),maker:this.safeNumber(e,s?"futures_maker_fee":i?"gt_maker_fee":"maker_fee"),taker:this.safeNumber(e,s?"futures_taker_fee":i?"gt_taker_fee":"taker_fee"),percentage:void 0,tierBased:void 0}}async fetchTransactionFees(e,t={}){await this.loadMarkets();let i=await this.privateWalletGetWithdrawStatus(t),s={},r={};for(let t=0;t<i.length;t++){r={};let a=i[t],n=this.safeString(a,"currency"),o=this.safeCurrencyCode(n);if(void 0!==e&&!this.inArray(o,e))continue;let d=this.safeValue(a,"withdraw_fix_on_chains");if(void 0===d)r=this.safeNumber(a,"withdraw_fix");else{let e=Object.keys(d);for(let t=0;t<e.length;t++){let i=e[t];r[i]=this.parseNumber(d[i])}}s[o]={withdraw:r,deposit:void 0,info:a}}return s}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.privateWalletGetWithdrawStatus(t);return this.parseDepositWithdrawFees(i,e,"currency")}parseDepositWithdrawFee(e,t){let i=this.safeValue(e,"withdraw_fix_on_chains"),s={info:e,withdraw:{fee:this.safeNumber(e,"withdraw_fix"),percentage:!1},deposit:{fee:this.safeNumber(e,"deposit"),percentage:!1},networks:{}};if(void 0!==i){let t=Object.keys(i);for(let r=0;r<t.length;r++){let a=t[r],n=this.networkIdToCode(a,this.safeString(e,"currency"));s.networks[n]={withdraw:{fee:this.parseNumber(i[a]),percentage:!1},deposit:{fee:void 0,percentage:void 0}}}}return s}async fetchFundingHistory(e,t,i,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(e=(r=this.market(e)).symbol);let[o,d]=this.handleMarketTypeAndParams("fetchFundingHistory",r,s),[h,l]=this.prepareRequest(r,o,d);if(h.type="fund",void 0!==t&&(h.from=this.parseToInt(t/1e3)),void 0!==i&&(h.limit=i),"swap"===o)a=await this.privateFuturesGetSettleAccountBook(this.extend(h,l));else if("future"===o)a=await this.privateDeliveryGetSettleAccountBook(this.extend(h,l));else throw new n.NotSupported(this.id+" fetchFundingHistory() only support swap & future market type");return this.parseFundingHistories(a,e,t,i)}parseFundingHistories(e,t,i,s){let r=[];for(let t=0;t<e.length;t++){let i=e[t],s=this.parseFundingHistory(i);r.push(s)}let a=this.sortBy(r,"timestamp");return this.filterBySymbolSinceLimit(a,t,i,s)}parseFundingHistory(e,t){let i=this.safeTimestamp(e,"time"),s=this.safeString(e,"text");return t=this.safeMarket(s,t,"_","swap"),{info:e,symbol:this.safeString(t,"symbol"),code:this.safeString(t,"settle"),timestamp:i,datetime:this.iso8601(i),id:void 0,amount:this.safeNumber(e,"change")}}async fetchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),[a,o]=this.prepareRequest(r,r.type,i);if(void 0!==t&&(a.limit=t),a.with_id=!0,r.spot||r.margin)s=await this.publicSpotGetOrderBook(this.extend(a,o));else if(r.swap)s=await this.publicFuturesGetSettleOrderBook(this.extend(a,o));else if(r.future)s=await this.publicDeliveryGetSettleOrderBook(this.extend(a,o));else if(r.option)s=await this.publicOptionsGetOrderBook(this.extend(a,o));else throw new n.NotSupported(this.id+" fetchOrderBook() not support this market type");let d=this.safeInteger(s,"current");r.spot||(d*=1e3);let h=r.spot?0:"p",l=r.spot?1:"s",c=this.safeInteger(s,"id"),u=this.parseOrderBook(s,e,d,"bids","asks",h,l);return u.nonce=c,u}async fetchTicker(e,t={}){let i,s;await this.loadMarkets();let r=this.market(e),[a,o]=this.prepareRequest(r,void 0,t);if(r.spot||r.margin)i=await this.publicSpotGetTickers(this.extend(a,o));else if(r.swap)i=await this.publicFuturesGetSettleTickers(this.extend(a,o));else if(r.future)i=await this.publicDeliveryGetSettleTickers(this.extend(a,o));else if(r.option){let e=r.id.split("-");a.underlying=this.safeString(e,0),i=await this.publicOptionsGetTickers(this.extend(a,o))}else throw new n.NotSupported(this.id+" fetchTicker() not support this market type");if(r.option)for(let e=0;e<i.length;e++){let t=i[e];if(t.name===r.id){s=t;break}}else s=this.safeValue(i,0);return this.parseTicker(s,r)}parseTicker(e,t){let i=this.safeStringN(e,["currency_pair","contract","name"]),s="mark_price"in e?"contract":"spot",r=this.safeSymbol(i,t,"_",s),a=this.safeString2(e,"last","last_price"),n=this.safeStringN(e,["lowest_ask","a","ask1_price"]),o=this.safeStringN(e,["highest_bid","b","bid1_price"]),d=this.safeString(e,"high_24h"),h=this.safeString(e,"low_24h"),l=this.safeString2(e,"B","bid1_size"),c=this.safeString2(e,"A","ask1_size"),u=this.safeInteger(e,"t"),p=this.safeString2(e,"base_volume","volume_24h_base");"nan"===p&&(p="0");let f=this.safeString2(e,"quote_volume","volume_24h_quote");"nan"===f&&(f="0");let m=this.safeString(e,"change_percentage");return this.safeTicker({symbol:r,timestamp:u,datetime:this.iso8601(u),high:d,low:h,bid:o,bidVolume:l,ask:n,askVolume:c,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:m,average:void 0,baseVolume:p,quoteVolume:f,markPrice:this.safeString(e,"mark_price"),indexPrice:this.safeString(e,"index_price"),info:e},t)}async fetchTickers(e,t={}){let i,s;await this.loadMarkets(),e=this.marketSymbols(e);let r=this.safeString(e,0);void 0!==r&&(i=this.market(r));let[a,o]=this.handleMarketTypeAndParams("fetchTickers",i,t),[d,h]=this.prepareRequest(void 0,a,o);if(d.timezone="utc0","spot"===a||"margin"===a)s=await this.publicSpotGetTickers(this.extend(d,h));else if("swap"===a)s=await this.publicFuturesGetSettleTickers(this.extend(d,h));else if("future"===a)s=await this.publicDeliveryGetSettleTickers(this.extend(d,h));else if("option"===a){this.checkRequiredArgument("fetchTickers",e,"symbols");let t=i.id.split("-");d.underlying=this.safeString(t,0),s=await this.publicOptionsGetTickers(this.extend(d,h))}else throw new n.NotSupported(this.id+' fetchTickers() not support this market type, provide symbols or set params["defaultType"] to one from spot/margin/swap/future/option');return this.parseTickers(s,e)}parseBalanceHelper(e){let t=this.account();return t.used=this.safeString2(e,"freeze","locked"),t.free=this.safeString(e,"available"),t.total=this.safeString(e,"total"),"borrowed"in e&&(t.debt=this.safeString(e,"borrowed")),t}async fetchBalance(e={}){let t;await this.loadMarkets(),await this.loadUnifiedStatus();let i=this.safeString(e,"symbol");e=this.omit(e,"symbol");let s=!1;[s,e]=this.handleOptionAndParams(e,"fetchBalance","unifiedAccount");let[r,a]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),[o,d]=this.prepareRequest(void 0,r,a),[h,l]=this.getMarginMode(!1,d);if(void 0!==i){let e=this.market(i);o.currency_pair=e.id}if(s)t=await this.privateUnifiedGetAccounts(this.extend(o,e));else if("spot"===r){if("spot"===h)t=await this.privateSpotGetAccounts(this.extend(o,l));else if("margin"===h)t=await this.privateMarginGetAccounts(this.extend(o,l));else if("cross_margin"===h)t=await this.privateMarginGetCrossAccounts(this.extend(o,l));else throw new n.NotSupported(this.id+" fetchBalance() not support this marginMode")}else if("funding"===r)t=await this.privateMarginGetFundingAccounts(this.extend(o,l));else if("swap"===r)t=await this.privateFuturesGetSettleAccounts(this.extend(o,l));else if("future"===r)t=await this.privateDeliveryGetSettleAccounts(this.extend(o,l));else if("option"===r)t=await this.privateOptionsGetAccounts(this.extend(o,l));else throw new n.NotSupported(this.id+" fetchBalance() not support this market type");("swap"===r||"future"===r||"option"===r)&&(t=[t]);let c={info:t},u="margin"===h,p=t;if("balances"in p){let e=[],t=this.safeValue(p,"balances",[]),i=Object.keys(t);for(let s=0;s<i.length;s++){let r=i[s],a=t[r];a.currency=r,e.push(a)}p=e}for(let e=0;e<p.length;e++){let t=p[e];if(u){let e=this.safeString(t,"currency_pair"),i=this.safeSymbol(e,void 0,"_","margin"),s=this.safeValue(t,"base",{}),r=this.safeValue(t,"quote",{}),a=this.safeCurrencyCode(this.safeString(s,"currency")),n=this.safeCurrencyCode(this.safeString(r,"currency")),o={};o[a]=this.parseBalanceHelper(s),o[n]=this.parseBalanceHelper(r),c[i]=this.safeBalance(o)}else c[this.safeCurrencyCode(this.safeString(t,"currency"))]=this.parseBalanceHelper(t)}return u?c:this.safeBalance(c)}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o=!1;if([o,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),o)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,1e3);if(n.option)return await this.fetchOptionOHLCV(e,t,i,s,r);let d=this.safeString(r,"price"),h={};[h,r]=this.prepareRequest(n,void 0,r),h.interval=this.safeString(this.timeframes,t,t);let l=n.contract?1999:1e3;s=void 0===s?l:Math.min(s,l);let c=this.safeInteger(r,"until");if(void 0!==c&&(c=this.parseToInt(c/1e3),r=this.omit(r,"until")),void 0!==i){let e=this.parseTimeframe(t);h.from=this.parseToInt(i/1e3);let r=(s-1)*e,a=Math.min(this.sum(h.from,r),this.seconds());void 0!==c?h.to=Math.min(a,c):h.to=a}else void 0!==c&&(h.to=c),h.limit=s;return n.contract?(("mark"===d||"index"===d)&&(h.contract=d+"_"+n.id,r=this.omit(r,"price")),n.future?a=await this.publicDeliveryGetSettleCandlesticks(this.extend(h,r)):n.swap&&(a=await this.publicFuturesGetSettleCandlesticks(this.extend(h,r)))):a=await this.publicSpotGetCandlesticks(this.extend(h,r)),this.parseOHLCVs(a,n,t,i,s)}async fetchOptionOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),n={};[n,r]=this.prepareRequest(a,void 0,r),n.interval=this.safeString(this.timeframes,t,t);let o=await this.publicOptionsGetCandlesticks(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}async fetchFundingRateHistory(e,t,i,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","paginate"),r)return await this.fetchPaginatedCallDeterministic("fetchFundingRateHistory",e,t,i,"8h",s);let a=this.market(e);if(!a.swap)throw new n.BadSymbol(this.id+" fetchFundingRateHistory() supports swap contracts only");let o={};[o,s]=this.prepareRequest(a,void 0,s),void 0!==i&&(o.limit=i),void 0!==t&&(o.from=this.parseToInt(t/1e3));let d=this.safeInteger(s,"until");void 0!==d&&(s=this.omit(s,"until"),o.to=this.parseToInt(d/1e3));let h=await this.publicFuturesGetSettleFundingRate(this.extend(o,s)),l=[];for(let t=0;t<h.length;t++){let i=h[t],s=this.safeTimestamp(i,"t");l.push({info:i,symbol:e,fundingRate:this.safeNumber(i,"r"),timestamp:s,datetime:this.iso8601(s)})}let c=this.sortBy(l,"timestamp");return this.filterBySymbolSinceLimit(c,a.symbol,t,i)}parseOHLCV(e,t){return Array.isArray(e)?[this.safeTimestamp(e,0),this.safeNumber(e,5),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,6)]:[this.safeTimestamp(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchTrades",e,t,i,s);let o=this.market(e),[d,h]=this.prepareRequest(o,void 0,s),l=this.safeInteger2(s,"to","until");if(void 0!==l&&(s=this.omit(s,["until"]),d.to=this.parseToInt(l/1e3)),void 0!==i&&(d.limit=Math.min(i,1e3)),void 0!==t&&o.contract&&(d.from=this.parseToInt(t/1e3)),"spot"===o.type||"margin"===o.type)r=await this.publicSpotGetTrades(this.extend(d,h));else if(o.swap)r=await this.publicFuturesGetSettleTrades(this.extend(d,h));else if(o.future)r=await this.publicDeliveryGetSettleTrades(this.extend(d,h));else if("option"===o.type)r=await this.publicOptionsGetTrades(this.extend(d,h));else throw new n.NotSupported(this.id+" fetchTrades() not support this market type.");return this.parseTrades(r,o,t,i)}async fetchOrderTrades(e,t,i,s,r={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");return await this.loadMarkets(),await this.fetchMyTrades(t,i,s,{order_id:e})}async fetchMyTrades(e,t,i,s={}){let r,a,o;await this.loadMarkets(),await this.loadUnifiedStatus();let d=!1;if([d,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),d)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,s);let h={},l=void 0!==e?this.market(e):void 0,c=this.safeInteger(s,"until");if(s=this.omit(s,["until"]),[r,s]=this.handleMarketTypeAndParams("fetchMyTrades",l,s),"swap"===r||"future"===r||"option"===r?([h,s]=this.prepareRequest(l,r,s),"option"===r&&(s=this.omit(s,"order_id"))):(void 0!==l&&(h.currency_pair=l.id),[a,s]=this.getMarginMode(!1,s),h.account=a),void 0!==i&&(h.limit=i),void 0!==t&&(h.from=this.parseToInt(t/1e3)),void 0!==c&&(h.to=this.parseToInt(c/1e3)),"spot"===r||"margin"===r)o=await this.privateSpotGetMyTrades(this.extend(h,s));else if("swap"===r)o=await this.privateFuturesGetSettleMyTradesTimerange(this.extend(h,s));else if("future"===r)o=await this.privateDeliveryGetSettleMyTrades(this.extend(h,s));else if("option"===r)o=await this.privateOptionsGetMyTrades(this.extend(h,s));else throw new n.NotSupported(this.id+" fetchMyTrades() not support this market type.");return this.parseTrades(o,l,t,i)}parseTrade(e,t){let i=this.safeString2(e,"id","trade_id"),s=this.safeTimestamp2(e,"time","create_time");s=this.safeInteger(e,"create_time_ms",s);let a=this.safeString2(e,"currency_pair","contract"),n="contract"in e?"contract":"spot";t=this.safeMarket(a,t,"_",n);let o=this.safeString2(e,"amount","size"),d=this.safeString(e,"price"),h=r.Y.stringLt(o,"0")?"sell":"buy";o=r.Y.stringAbs(o);let l=this.safeString2(e,"side","type",h),c=this.safeString(e,"order_id"),u=this.safeString(e,"fee"),p=this.omitZero(this.safeString(e,"gt_fee")),f=this.omitZero(this.safeString(e,"point_fee")),m=[];if(void 0!==u){let i=this.safeString(e,"fee_currency"),s=this.safeCurrencyCode(i);void 0===s&&(s=this.safeString(t,"settle")),m.push({cost:u,currency:s})}void 0!==p&&m.push({cost:p,currency:"GT"}),void 0!==f&&m.push({cost:f,currency:"GatePoint"});let g=this.safeString(e,"role");return this.safeTrade({info:e,id:i,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:c,type:void 0,side:l,takerOrMaker:g,price:d,amount:o,cost:void 0,fee:void 0,fees:m},t)}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchDeposits","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchDeposits",e,t,i,s);let n={};if(void 0!==e&&(r=this.currency(e),n.currency=r.id),void 0!==i&&(n.limit=i),void 0!==t){let e=this.parseToInt(t/1e3);n.from=e,n.to=this.sum(e,2592e3)}[n,s]=this.handleUntilOption("to",n,s);let o=await this.privateWalletGetDeposits(this.extend(n,s));return this.parseTransactions(o,r)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchWithdrawals","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchWithdrawals",e,t,i,s);let n={};if(void 0!==e&&(r=this.currency(e),n.currency=r.id),void 0!==i&&(n.limit=i),void 0!==t){let e=this.parseToInt(t/1e3);n.from=e,n.to=this.sum(e,2592e3)}[n,s]=this.handleUntilOption("to",n,s);let o=await this.privateWalletGetWithdrawals(this.extend(n,s));return this.parseTransactions(o,r)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),n={currency:a.id,address:i,amount:this.currencyToPrecision(e,t)};void 0!==s&&(n.memo=s);let o=this.safeValue(this.options,"networks",{}),d=this.safeStringUpper(r,"network");void 0!==(d=this.safeStringLower(o,d,d))?(n.chain=d,r=this.omit(r,"network")):n.chain=a.id;let h=await this.privateWithdrawalsPostWithdrawals(this.extend(n,r));return this.parseTransaction(h,a)}parseTransactionStatus(e){return this.safeString({PEND:"pending",REQUEST:"pending",DMOVE:"pending",MANUAL:"pending",VERIFY:"pending",PROCES:"pending",EXTPEND:"pending",SPLITPEND:"pending",CANCEL:"canceled",FAIL:"failed",INVALID:"failed",DONE:"ok",BCODE:"ok"},e,e)}parseTransactionType(e){return this.safeString({d:"deposit",w:"withdrawal"},e,e)}parseTransaction(e,t){let i;let s=this.safeString(e,"id"),a=this.safeString(e,"amount");void 0!==s&&("b"===s[0]?(i=r.Y.stringGt(a,"0")?"deposit":"withdrawal",a=r.Y.stringAbs(a)):i=this.parseTransactionType(s[0]));let n=this.safeString2(e,"fee","fee_amount");"withdrawal"===i&&(a=r.Y.stringSub(a,n));let o=this.safeStringUpper(e,"chain"),d=this.safeString(e,"currency"),h=this.safeCurrencyCode(d),l=this.safeString(e,"txid"),c=this.safeString(e,"status"),u=this.parseTransactionStatus(c),p=this.safeString(e,"address"),f=this.safeString(e,"memo"),m=this.safeTimestamp(e,"timestamp");return{info:e,id:s,txid:l,currency:h,amount:this.parseNumber(a),network:this.networkIdToCode(o),address:p,addressTo:void 0,addressFrom:void 0,tag:f,tagTo:void 0,tagFrom:void 0,status:u,type:i,timestamp:m,datetime:this.iso8601(m),updated:void 0,internal:void 0,comment:void 0,fee:{currency:h,cost:this.parseNumber(n)}}}async createOrder(e,t,i,s,r,a={}){let n;await this.loadMarkets(),await this.loadUnifiedStatus();let o=this.market(e),d=this.safeValue(a,"trigger"),h=this.safeValue2(a,"triggerPrice","stopPrice"),l=this.safeValue(a,"stopLossPrice",h),c=this.safeValue(a,"takeProfitPrice"),u=!(void 0!==l||void 0!==c)&&void 0===d,p=this.createOrderRequest(e,t,i,s,r,a);return n=o.spot||o.margin?u?await this.privateSpotPostOrders(p):await this.privateSpotPostPriceOrders(p):o.swap?u?await this.privateFuturesPostSettleOrders(p):await this.privateFuturesPostSettlePriceOrders(p):o.future?u?await this.privateDeliveryPostSettleOrders(p):await this.privateDeliveryPostSettlePriceOrders(p):await this.privateOptionsPostOrders(p),this.parseOrder(n,o)}createOrdersRequest(e,t={}){let i=[],s=[],r=e.length;if(0===r)throw new n.BadRequest(this.id+" createOrders() requires at least one order");if(r>10)throw new n.BadRequest(this.id+" createOrders() accepts a maximum of 10 orders at a time");for(let r=0;r<e.length;r++){let a=e[r],o=this.safeString(a,"symbol");s.push(o);let d=this.safeString(a,"type"),h=this.safeString(a,"side"),l=this.safeValue(a,"amount"),c=this.safeValue(a,"price"),u=this.safeValue(a,"params",{}),p=this.extend(u,t);if(void 0!==this.safeValueN(u,["triggerPrice","stopPrice","takeProfitPrice","stopLossPrice"]))throw new n.NotSupported(this.id+" createOrders() does not support advanced order properties (stopPrice, takeProfitPrice, stopLossPrice)");p.textIsRequired=!0;let f=this.createOrderRequest(o,d,h,l,c,p);i.push(f)}let a=this.marketSymbols(s,void 0,!1,!0,!0),o=this.market(a[0]);if(o.future||o.option)throw new n.NotSupported(this.id+" createOrders() does not support futures or options markets");return i}async createOrders(e,t={}){let i;await this.loadMarkets(),await this.loadUnifiedStatus();let s=this.createOrdersRequest(e,t),r=e[0],a=this.market(r.symbol);return a.spot?i=await this.privateSpotPostBatchOrders(s):a.swap&&(i=await this.privateFuturesPostSettleBatchOrders(s)),this.parseOrders(i)}createOrderRequest(e,t,i,s,a,o={}){let d,h;let l=this.market(e),c=l.contract,u=this.safeValue(o,"trigger"),p=this.safeValue2(o,"triggerPrice","stopPrice"),f=this.safeValue(o,"stopLossPrice",p),m=this.safeValue(o,"takeProfitPrice"),g=void 0!==f,_=void 0!==m;if(g&&_)throw new n.ExchangeError(this.id+" createOrder() stopLossPrice and takeProfitPrice cannot both be defined");let y=this.safeValue(o,"reduceOnly"),v=this.safeStringLowerN(o,["timeInForce","tif","time_in_force"]);[d,o]=this.handlePostOnly("market"===t,"poc"===v,o);let w=this.handleTimeInForce(o);d&&(w="poc"),o=this.omit(o,["stopPrice","triggerPrice","stopLossPrice","takeProfitPrice","reduceOnly","timeInForce","postOnly"]);let b="limit"===t,S="market"===t;if(b&&void 0===a)throw new n.ArgumentsRequired(this.id+" createOrder () requires a price argument for "+t+" orders");if(S){if("poc"===w||"gtc"===w)throw new n.ExchangeError(this.id+' createOrder () timeInForce for market order can only be "FOK" or "IOC"');if(void 0===w){let e=this.safeString(this.options,"defaultTimeInForce","IOC");w=this.safeString(this.options.timeInForce,e,"ioc")}c&&(a=0)}if(c){if(this.safeValue(o,"close"))s=0;else{let t=this.amountToPrecision(e,s);s=parseInt("sell"===i?r.Y.stringNeg(t):t)}}if(g||_||void 0!==u){if(l.option)throw new n.NotSupported(this.id+" createOrder() conditional option orders are not supported");if(c){if(h={initial:{contract:l.id,size:s},settle:l.settleId},"market"===t?h.initial.price="0":h.initial.price=0===a?"0":this.priceToPrecision(e,a),void 0===u){let t,s;g?(t="buy"===i?1:2,s=this.priceToPrecision(e,f)):_&&(t="buy"===i?2:1,s=this.priceToPrecision(e,m));let r=this.safeInteger(o,"price_type",0);if(r<0||r>2)throw new n.BadRequest(this.id+" createOrder () price_type should be 0 latest deal price, 1 mark price, 2 index price");o=this.omit(o,["price_type"]),h.trigger={price_type:r,price:this.priceToPrecision(e,s),rule:t}}void 0!==y&&(h.initial.reduce_only=y),void 0!==w&&(h.initial.tif=w)}else{let r;let n=this.safeValue(this.options,"createOrder",{});if([r,o]=this.getMarginMode(!0,o),void 0===w&&(w="gtc"),h={put:{type:t,side:i,price:this.priceToPrecision(e,a),amount:this.amountToPrecision(e,s),account:r,time_in_force:w},market:l.id},void 0===u){let t,s;let r=this.safeInteger(n,"expiration"),a=this.safeInteger(o,"expiration",r);g?(t="buy"===i?">=":"<=",s=this.priceToPrecision(e,f)):_&&(t="buy"===i?"<=":">=",s=this.priceToPrecision(e,m)),h.trigger={price:this.priceToPrecision(e,s),rule:t,expiration:a}}}}else{if(c)h={contract:l.id,size:s},l.option||(h.settle=l.settleId),S?h.price="0":h.price=0===a?"0":this.priceToPrecision(e,a),void 0!==y&&(h.reduce_only=y),void 0!==w&&(h.tif=w);else{let d;if([d,o]=this.getMarginMode(!1,o),h={currency_pair:l.id,type:t,account:d,side:i},S&&"buy"===i){let t;let i=!0;[i,o]=this.handleOptionAndParams(o,"createOrder","createMarketBuyOrderRequiresPrice",!0);let d=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0!==d)t=this.costToPrecision(e,d);else if(i){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate the total cost to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend (quote quantity) in the amount argument");{let i=this.numberToString(s),n=this.numberToString(a),o=r.Y.stringMul(i,n);t=this.costToPrecision(e,o)}}else t=this.costToPrecision(e,s);h.amount=t}else h.amount=this.amountToPrecision(e,s);b&&(h.price=this.priceToPrecision(e,a)),void 0!==w&&(h.time_in_force=w)}let d=this.safeString2(o,"text","clientOrderId"),u=this.safeBool(o,"textIsRequired",!1);if(void 0!==d){if(d.length>28)throw new n.BadRequest(this.id+" createOrder () clientOrderId or text param must be up to 28 characters");o=this.omit(o,["text","clientOrderId","textIsRequired"]),"t"!==d[0]&&(d="t-"+d),h.text=d}else u&&(h.text="t-"+this.uuid16())}return this.extend(h,o)}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),await this.loadUnifiedStatus(),!this.market(e).spot)throw new n.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return i.createMarketBuyOrderRequiresPrice=!1,await this.createOrder(e,"market","buy",t,void 0,i)}editOrderRequest(e,t,i,s,a,o,d={}){let h;let l=this.market(t);[h,d]=this.handleMarketTypeAndParams("editOrder",l,d);let c=this.convertTypeToAccount(h),u=!1;if([u,d]=this.handleOptionAndParams(d,"editOrder","unifiedAccount"),u&&(c="unified"),"spot"===c&&"limit"!==i)throw new n.InvalidOrder(this.id+" editOrder() does not support "+i+" orders for "+h+" markets");let p={order_id:e.toString(),currency_pair:l.id,account:c};return void 0!==a&&(l.spot?p.amount=this.amountToPrecision(t,a):"sell"===s?p.size=this.parseToNumeric(r.Y.stringNeg(this.amountToPrecision(t,a))):p.size=this.parseToNumeric(this.amountToPrecision(t,a))),void 0!==o&&(p.price=this.priceToPrecision(t,o)),l.spot||(p.settle=l.settleId),this.extend(p,d)}async editOrder(e,t,i,s,r,a,n={}){let o;await this.loadMarkets(),await this.loadUnifiedStatus();let d=this.market(t),h=this.editOrderRequest(e,t,i,s,r,a,n);return o=d.spot?await this.privateSpotPatchOrdersOrderId(h):await this.privateFuturesPutSettleOrdersOrderId(h),this.parseOrder(o,d)}parseOrderStatus(e){return this.safeString({open:"open",_new:"open",filled:"closed",cancelled:"canceled",liquidated:"closed",ioc:"canceled",failed:"canceled",expired:"canceled",finished:"closed",finish:"closed",succeeded:"closed"},e,e)}parseOrder(e,t){if(!this.safeBool(e,"succeeded",!0))return this.safeOrder({clientOrderId:this.safeString(e,"text"),info:e,status:"rejected",id:this.safeString(e,"id")});let i=this.safeValue2(e,"put","initial",{}),s=this.safeValue(e,"trigger",{}),a=this.safeString(i,"contract"),n=this.safeString(i,"type"),o=this.safeStringUpper2(i,"time_in_force","tif"),d=this.safeString2(i,"amount","size"),h=this.safeString(i,"side"),l=this.safeString(i,"price");a=this.safeString(e,"contract",a),n=this.safeString(e,"type",n),"POC"===(o=this.safeStringUpper2(e,"time_in_force","tif",o))&&(o="PO");let c="PO"===o;d=this.safeString2(e,"amount","size",d),h=this.safeString(e,"side",h),l=this.safeString(e,"price",l);let u=this.safeString(e,"left"),p=this.safeString(e,"filled_total"),f=this.safeNumber(s,"price"),m=this.safeNumber2(e,"avg_deal_price","fill_price");f&&(u=d,p="0"),a&&(n=r.Y.stringEquals(l,"0")&&"IOC"===o?"market":"limit",h=r.Y.stringGt(d,"0")?"buy":"sell");let g=this.safeStringN(e,["finish_as","status","open"]),_=this.safeInteger(e,"create_time_ms");void 0===_&&(_=this.safeTimestamp2(e,"create_time","ctime"));let y=this.safeInteger(e,"update_time_ms");void 0===y&&(y=this.safeTimestamp2(e,"update_time","finish_time"));let v="contract";("currency_pair"in e||"market"in e)&&(v="spot");let w=this.safeString2(e,"currency_pair","market",a),b=this.safeSymbol(w,t,"_",v),S=[],O=this.safeString(e,"gt_fee");void 0!==O&&S.push({currency:"GT",cost:O});let N=this.safeString(e,"fee");void 0!==N&&S.push({currency:this.safeCurrencyCode(this.safeString(e,"fee_currency")),cost:N});let k=this.safeString(e,"rebated_fee");void 0!==k&&S.push({currency:this.safeCurrencyCode(this.safeString(e,"rebated_fee_currency")),cost:r.Y.stringNeg(k)});let T=S.length>1,I=this.parseOrderStatus(g),M=r.Y.stringAbs(u);if("spot"===this.safeString(e,"account")){let t=this.safeString(e,"avg_deal_price");m=this.parseNumber(t),"market"===n&&"buy"===h&&(M=r.Y.stringDiv(u,t),l=void 0,p=d,d=r.Y.stringDiv(d,t))}return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:this.safeString(e,"text"),timestamp:_,datetime:this.iso8601(_),lastTradeTimestamp:y,status:I,symbol:b,type:n,timeInForce:o,postOnly:c,reduceOnly:this.safeValue(e,"is_reduce_only"),side:h,price:l,triggerPrice:f,average:m,amount:r.Y.stringAbs(d),cost:r.Y.stringAbs(p),filled:void 0,remaining:M,fee:T?void 0:this.safeValue(S,0),fees:T?S:[],trades:void 0,info:e},t)}fetchOrderRequest(e,t,i={}){let s=void 0===t?void 0:this.market(t),r=this.safeBoolN(i,["trigger","is_stop_order","stop"],!1);i=this.omit(i,["is_stop_order","stop","trigger"]);let a=this.safeString2(i,"text","clientOrderId"),n=e;void 0!==a&&(i=this.omit(i,["text","clientOrderId"]),"t"!==a[0]&&(a="t-"+a),n=a);let[o,d]=this.handleMarketTypeAndParams("fetchOrder",s,i),[h,l]="swap"===o||"future"===o||"option"===o?this.prepareRequest(s,o,d):this.spotOrderPrepareRequest(s,r,d);return h.order_id=n.toString(),[h,l]}async fetchOrder(e,t,i={}){let s;await this.loadMarkets(),await this.loadUnifiedStatus();let r=void 0===t?void 0:this.market(t),a=this.handleMarketTypeAndParams("fetchOrder",r,i),o=this.safeString(a,0),d=this.safeBoolN(i,["trigger","is_stop_order","stop"],!1),[h,l]=this.fetchOrderRequest(e,t,i);if("spot"===o||"margin"===o)s=d?await this.privateSpotGetPriceOrdersOrderId(this.extend(h,l)):await this.privateSpotGetOrdersOrderId(this.extend(h,l));else if("swap"===o)s=d?await this.privateFuturesGetSettlePriceOrdersOrderId(this.extend(h,l)):await this.privateFuturesGetSettleOrdersOrderId(this.extend(h,l));else if("future"===o)s=d?await this.privateDeliveryGetSettlePriceOrdersOrderId(this.extend(h,l)):await this.privateDeliveryGetSettleOrdersOrderId(this.extend(h,l));else if("option"===o)s=await this.privateOptionsGetOrdersOrderId(this.extend(h,l));else throw new n.NotSupported(this.id+" fetchOrder() not support this market type");return this.parseOrder(s,r)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersByStatus("open",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){let r;await this.loadMarkets(),await this.loadUnifiedStatus();let a=this.safeInteger(s,"until");void 0!==e&&(e=(r=this.market(e)).symbol);let n=this.handleMarketTypeAndParams("fetchClosedOrders",r,s),o=this.safeString(n,0),d=!1;if([d,s]=this.handleOptionAndParams(s,"fetchClosedOrders","historical",!1),!d&&(void 0===t&&void 0===a||"swap"!==o))return await this.fetchOrdersByStatus("finished",e,t,i,s);s=this.omit(s,"type");let h={};[h,s]=this.prepareRequest(r,o,s),void 0!==t&&(h.from=this.parseToInt(t/1e3)),void 0!==a&&(s=this.omit(s,"until"),h.to=this.parseToInt(a/1e3)),void 0!==i&&(h.limit=i);let l=await this.privateFuturesGetSettleOrdersTimerange(this.extend(h,s));return this.parseOrders(l,r,t,i)}prepareOrdersByStatusRequest(e,t,i,s,r={}){let a,n,o;void 0!==t&&(t=(a=this.market(t)).symbol),[n,r]=this.handleParamBool2(r,"trigger","stop"),[o,r]=this.handleMarketTypeAndParams("fetchOrdersByStatus",a,r);let d="spot"===o||"margin"===o,h={};if([h,r]=d?this.multiOrderSpotPrepareRequest(a,n,r):this.prepareRequest(a,o,r),d&&n&&(h=this.omit(h,"account")),"closed"===e&&(e="finished"),h.status=e,void 0!==s&&(h.limit=s),d){void 0!==i&&(h.from=this.parseToInt(i/1e3));let e=this.safeInteger(r,"until");void 0!==e&&(r=this.omit(r,"until"),h.to=this.parseToInt(e/1e3))}let[l,c]=this.handleParamString2(r,"lastId","last_id");return void 0!==l&&(h.last_id=l),[h,c]}async fetchOrdersByStatus(e,t,i,s,r={}){let a,o;await this.loadMarkets(),await this.loadUnifiedStatus(),void 0!==t&&(t=(a=this.market(t)).symbol);let d=this.safeBool2(r,"trigger","stop"),h=this.handleMarketTypeAndParams("fetchOrdersByStatus",a,r),l=this.safeString(h,0),[c,u]=this.prepareOrdersByStatusRequest(e,t,i,s,r),p="spot"===l||"margin"===l,f="open"===e;if(p)o=d?await this.privateSpotGetPriceOrders(this.extend(c,u)):f?await this.privateSpotGetOpenOrders(this.extend(c,u)):await this.privateSpotGetOrders(this.extend(c,u));else if("swap"===l)o=d?await this.privateFuturesGetSettlePriceOrders(this.extend(c,u)):await this.privateFuturesGetSettleOrders(this.extend(c,u));else if("future"===l)o=d?await this.privateDeliveryGetSettlePriceOrders(this.extend(c,u)):await this.privateDeliveryGetSettleOrders(this.extend(c,u));else if("option"===l)o=await this.privateOptionsGetOrders(this.extend(c,u));else throw new n.NotSupported(this.id+" fetchOrders() not support this market type");let m=o;if(p&&f&&!d){m=[];for(let e=0;e<o.length;e++){let t=this.safeValue(o[e],"orders");m=this.arrayConcat(m,t)}}let g=this.parseOrders(m,a,i,s);return this.filterBySymbolSinceLimit(g,t,i,s)}async cancelOrder(e,t,i={}){let s;await this.loadMarkets(),await this.loadUnifiedStatus();let r=void 0===t?void 0:this.market(t),a=this.safeBoolN(i,["is_stop_order","stop","trigger"],!1);i=this.omit(i,["is_stop_order","stop","trigger"]);let[o,d]=this.handleMarketTypeAndParams("cancelOrder",r,i),[h,l]="spot"===o||"margin"===o?this.spotOrderPrepareRequest(r,a,d):this.prepareRequest(r,o,d);if(h.order_id=e,"spot"===o||"margin"===o)s=a?await this.privateSpotDeletePriceOrdersOrderId(this.extend(h,l)):await this.privateSpotDeleteOrdersOrderId(this.extend(h,l));else if("swap"===o)s=a?await this.privateFuturesDeleteSettlePriceOrdersOrderId(this.extend(h,l)):await this.privateFuturesDeleteSettleOrdersOrderId(this.extend(h,l));else if("future"===o)s=a?await this.privateDeliveryDeleteSettlePriceOrdersOrderId(this.extend(h,l)):await this.privateDeliveryDeleteSettleOrdersOrderId(this.extend(h,l));else if("option"===o)s=await this.privateOptionsDeleteOrdersOrderId(this.extend(h,l));else throw new n.NotSupported(this.id+" cancelOrder() not support this market type");return this.parseOrder(s,r)}async cancelOrders(e,t,i={}){let s,r;await this.loadMarkets(),await this.loadUnifiedStatus(),void 0!==t&&(s=this.market(t));let a=void 0===s?"usdt":s.settle,o=this.safeStringLower(i,"settle",a);[r,i]=this.handleMarketTypeAndParams("cancelOrders",s,i);let d="spot"===r;if(d&&void 0===t)throw new n.ArgumentsRequired(this.id+" cancelOrders requires a symbol argument for spot markets");if(d){let s=[];for(let i=0;i<e.length;i++){let r={id:e[i],symbol:t};s.push(r)}return await this.cancelOrdersForSymbols(s,i)}let h=[{settle:o}];for(let t=0;t<e.length;t++)h.push(e[t]);let l=await this.privateFuturesPostSettleBatchCancelOrders(h);return this.parseOrders(l)}async cancelOrdersForSymbols(e,t={}){await this.loadMarkets(),await this.loadUnifiedStatus();let i=[];for(let t=0;t<e.length;t++){let s=e[t],r=this.safeString(s,"symbol"),a=this.market(r);if(!a.spot)throw new n.NotSupported(this.id+" cancelOrdersForSymbols() supports only spot markets");let o={id:this.safeString(s,"id"),currency_pair:a.id};i.push(o)}let s=await this.privateSpotPostCancelBatchOrders(i);return this.parseOrders(s)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets(),await this.loadUnifiedStatus();let s=void 0===e?void 0:this.market(e),r=this.safeBool2(t,"stop","trigger");t=this.omit(t,["stop","trigger"]);let[a,o]=this.handleMarketTypeAndParams("cancelAllOrders",s,t),[d,h]="spot"===a?this.multiOrderSpotPrepareRequest(s,r,o):this.prepareRequest(s,a,o);if("spot"===a||"margin"===a)i=r?await this.privateSpotDeletePriceOrders(this.extend(d,h)):await this.privateSpotDeleteOrders(this.extend(d,h));else if("swap"===a)i=r?await this.privateFuturesDeleteSettlePriceOrders(this.extend(d,h)):await this.privateFuturesDeleteSettleOrders(this.extend(d,h));else if("future"===a)i=r?await this.privateDeliveryDeleteSettlePriceOrders(this.extend(d,h)):await this.privateDeliveryDeleteSettleOrders(this.extend(d,h));else if("option"===a)i=await this.privateOptionsDeleteOrders(this.extend(d,h));else throw new n.NotSupported(this.id+" cancelAllOrders() not support this market type");return this.parseOrders(i,s)}async transfer(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e),o=this.convertTypeToAccount(i),d=this.convertTypeToAccount(s),h=this.currencyToPrecision(e,t),l={currency:a.id,amount:h};if(o in this.options.accountsByType?l.from=o:(l.from="margin",l.currency_pair=o),d in this.options.accountsByType?l.to=d:(l.to="margin",l.currency_pair=d),"margin"===o||"margin"===d){let e=this.safeString2(r,"symbol","currency_pair");if(void 0===e)throw new n.ArgumentsRequired(this.id+' transfer requires params["symbol"] for isolated margin transfers');let t=this.market(e);l.currency_pair=t.id,r=this.omit(r,"symbol")}("futures"===d||"delivery"===d||"futures"===o||"delivery"===o)&&(l.settle=a.id);let c=await this.privateWalletPostTransfers(this.extend(l,r));return this.parseTransfer(c,a)}parseTransfer(e,t){return{id:this.safeString(e,"tx_id"),timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0,info:e}}async setLeverage(e,t,i={}){let s;if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<0||e>100)throw new n.BadRequest(this.id+" setLeverage() leverage should be between 1 and 100");await this.loadMarkets();let r=this.market(t),[a,o]=this.prepareRequest(r,void 0,i),d=this.safeString2(this.options,"marginMode","defaultMarginMode"),h=this.safeString(o,"cross_leverage_limit"),l=this.safeString(o,"marginMode",d),c=this.numberToString(e);if(void 0!==h&&(l="cross",c=h),"cross"===l||"cross_margin"===l?(a.cross_leverage_limit=c,a.leverage="0"):a.leverage=c,r.swap)s=await this.privateFuturesPostSettlePositionsContractLeverage(this.extend(a,o));else if(r.future)s=await this.privateDeliveryPostSettlePositionsContractLeverage(this.extend(a,o));else throw new n.NotSupported(this.id+" setLeverage() not support this market type");return s}parsePosition(e,t){let i,s;let a=this.safeString(e,"contract");t=this.safeMarket(a,t,"_","contract");let n=this.safeString2(e,"size","accum_size"),o=this.safeString(e,"side");void 0===o&&(r.Y.stringGt(n,"0")?o="long":r.Y.stringLt(n,"0")&&(o="short"));let d=this.safeString(e,"maintenance_rate"),h=this.safeString(e,"value"),l=this.safeString(e,"leverage");void 0!==l&&(i="0"===l?"cross":"isolated");let c=this.safeString(e,"pnl_fee");void 0===c&&(c=r.Y.stringMul("0.00075",h),s=r.Y.stringAdd(r.Y.stringDiv(h,l),c));let u=this.safeTimestamp2(e,"open_time","first_open_time");return 0===u&&(u=void 0),this.safePosition({info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:u,datetime:this.iso8601(u),lastUpdateTimestamp:this.safeTimestamp2(e,"update_time","time"),initialMargin:this.parseNumber(s),initialMarginPercentage:this.parseNumber(r.Y.stringDiv(s,h)),maintenanceMargin:this.parseNumber(r.Y.stringMul(d,h)),maintenanceMarginPercentage:this.parseNumber(d),entryPrice:this.safeNumber(e,"entry_price"),notional:this.parseNumber(h),leverage:this.safeNumber(e,"leverage"),unrealizedPnl:this.safeNumber(e,"unrealised_pnl"),realizedPnl:this.safeNumber2(e,"realised_pnl","pnl"),contracts:this.parseNumber(r.Y.stringAbs(n)),contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liq_price"),markPrice:this.safeNumber(e,"mark_price"),lastPrice:void 0,collateral:this.safeNumber(e,"margin"),marginMode:i,side:o,percentage:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchPosition(e,t={}){let i;await this.loadMarkets();let s=this.market(e);if(!s.contract)throw new n.BadRequest(this.id+" fetchPosition() supports contract markets only");let r={};[r,t]=this.prepareRequest(s,s.type,t);let a=this.extend(r,t);return s.swap?i=await this.privateFuturesGetSettlePositionsContract(a):s.future?i=await this.privateDeliveryGetSettlePositionsContract(a):"option"===s.type&&(i=await this.privateOptionsGetPositionsContract(a)),this.parsePosition(i,s)}async fetchPositions(e,t={}){let i,s,r;await this.loadMarkets(),void 0!==(e=this.marketSymbols(e,void 0,!0,!0,!0))&&e.length>0&&(i=this.market(e[0]));let a={};if([s,t]=this.handleMarketTypeAndParams("fetchPositions",i,t),(void 0===s||"spot"===s)&&(s="swap"),"option"===s){if(void 0!==e){let e=i.id.split("-");a.underlying=this.safeString(e,0)}}else[a,t]=this.prepareRequest(void 0,s,t);return"swap"===s?r=await this.privateFuturesGetSettlePositions(this.extend(a,t)):"future"===s?r=await this.privateDeliveryGetSettlePositions(this.extend(a,t)):"option"===s&&(r=await this.privateOptionsGetPositions(this.extend(a,t))),this.parsePositions(r,e)}async fetchLeverageTiers(e,t={}){let i;await this.loadMarkets();let[s,r]=this.handleMarketTypeAndParams("fetchLeverageTiers",void 0,t),[a,o]=this.prepareRequest(void 0,s,r);if("future"!==s&&"swap"!==s)throw new n.BadRequest(this.id+" fetchLeverageTiers only supports swap and future");if("swap"===s)i=await this.publicFuturesGetSettleContracts(this.extend(a,o));else if("future"===s)i=await this.publicDeliveryGetSettleContracts(this.extend(a,o));else throw new n.NotSupported(this.id+" fetchLeverageTiers() not support this market type");return this.parseLeverageTiers(i,e,"name")}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();let i=this.market(e),[s,r]=this.handleMarketTypeAndParams("fetchMarketLeverageTiers",i,t),[a,o]=this.prepareRequest(i,s,r);if("future"!==s&&"swap"!==s)throw new n.BadRequest(this.id+" fetchMarketLeverageTiers only supports swap and future");let d=await this.privateFuturesGetSettleRiskLimitTiers(this.extend(a,o));return this.parseMarketLeverageTiers(d,i)}parseEmulatedLeverageTiers(e,t){let i=this.safeString(e,"name"),s=this.safeString(e,"maintenance_rate"),a=this.safeString(e,"leverage_max"),n=this.safeString(e,"risk_limit_step"),o=this.safeString(e,"risk_limit_max"),d=r.Y.stringDiv("1",a),h=s,l=d,c="0",u=[];for(;r.Y.stringLt(c,o);){let a=r.Y.stringAdd(c,n);u.push({tier:this.parseNumber(r.Y.stringDiv(a,n)),symbol:this.safeSymbol(i,t,void 0,"contract"),currency:this.safeString(t,"settle"),minNotional:this.parseNumber(c),maxNotional:this.parseNumber(a),maintenanceMarginRate:this.parseNumber(h),maxLeverage:this.parseNumber(r.Y.stringDiv("1",l)),info:e}),h=r.Y.stringAdd(h,s),l=r.Y.stringAdd(l,d),c=a}return u}parseMarketLeverageTiers(e,t){if(!Array.isArray(e))return this.parseEmulatedLeverageTiers(e,t);let i=0,s=[];for(let r=0;r<e.length;r++){let a=e[r],n=this.safeNumber(a,"risk_limit");s.push({tier:this.sum(r,1),symbol:t.symbol,currency:t.base,minNotional:i,maxNotional:n,maintenanceMarginRate:this.safeNumber(a,"maintenance_rate"),maxLeverage:this.safeNumber(a,"leverage_max"),info:a}),i=n}return s}async repayIsolatedMargin(e,t,i,s={}){await this.loadMarkets();let r=this.currency(t),a={currency:r.id.toUpperCase(),amount:this.currencyToPrecision(t,i)},n=this.market(e);a.currency_pair=n.id,a.type="repay";let o=await this.privateMarginPostUniLoans(this.extend(a,s));return this.parseMarginLoan(o,r)}async repayCrossMargin(e,t,i={}){let s;await this.loadMarkets(),await this.loadUnifiedStatus();let r=this.currency(e),a={currency:r.id.toUpperCase(),amount:this.currencyToPrecision(e,t)},n=!1;return[n,i]=this.handleOptionAndParams(i,"repayCrossMargin","unifiedAccount"),n?(a.type="repay",s=await this.privateUnifiedPostLoans(this.extend(a,i))):(s=await this.privateMarginPostCrossRepayments(this.extend(a,i)),s=this.safeDict(s,0)),this.parseMarginLoan(s,r)}async borrowIsolatedMargin(e,t,i,s={}){let r;await this.loadMarkets();let a=this.currency(t),n={currency:a.id.toUpperCase(),amount:this.currencyToPrecision(t,i)},o=this.market(e);return n.currency_pair=o.id,n.type="borrow",r=await this.privateMarginPostUniLoans(this.extend(n,s)),this.parseMarginLoan(r,a)}async borrowCrossMargin(e,t,i={}){let s;await this.loadMarkets(),await this.loadUnifiedStatus();let r=this.currency(e),a={currency:r.id.toUpperCase(),amount:this.currencyToPrecision(e,t)},n=!1;return[n,i]=this.handleOptionAndParams(i,"borrowCrossMargin","unifiedAccount"),n?(a.type="borrow",s=await this.privateUnifiedPostLoans(this.extend(a,i))):s=await this.privateMarginPostCrossLoans(this.extend(a,i)),this.parseMarginLoan(s,r)}parseMarginLoan(e,t){let i=this.safeString2(this.options,"defaultMarginMode","marginMode","cross"),s=this.safeInteger(e,"create_time");"isolated"===i&&(s=this.safeTimestamp(e,"create_time"));let r=this.safeString(e,"currency"),a=this.safeString(e,"currency_pair");return{id:this.safeInteger(e,"id"),currency:this.safeCurrencyCode(r,t),amount:this.safeNumber(e,"amount"),symbol:this.safeSymbol(a,void 0,"_","margin"),timestamp:s,datetime:this.iso8601(s),info:e}}async fetchBorrowInterest(e,t,i,s,r={}){let a,n,o,d;await this.loadMarkets(),await this.loadUnifiedStatus();let h=!1;[h,r]=this.handleOptionAndParams(r,"fetchBorrowInterest","unifiedAccount");let l={};[l,r]=this.handleUntilOption("to",l,r),void 0!==e&&(a=this.currency(e),l.currency=a.id),void 0!==t&&(n=this.market(t)),void 0!==i&&(l.from=i),void 0!==s&&(l.limit=s),[d,r]=this.handleMarginModeAndParams("fetchBorrowInterest",r,"cross"),h?o=await this.privateUnifiedGetInterestRecords(this.extend(l,r)):"isolated"===d?(void 0!==n&&(l.currency_pair=n.id),o=await this.privateMarginGetUniInterestRecords(this.extend(l,r))):"cross"===d&&(o=await this.privateMarginGetCrossInterestRecords(this.extend(l,r)));let c=this.parseBorrowInterests(o,n);return this.filterByCurrencySinceLimit(c,e,i,s)}parseBorrowInterest(e,t){let i=this.safeString(e,"currency_pair");t=this.safeMarket(i,t);let s=void 0!==i?"isolated":"cross",r=this.safeInteger(e,"create_time");return{info:e,symbol:this.safeString(t,"symbol"),currency:this.safeCurrencyCode(this.safeString(e,"currency")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"actual_rate"),amountBorrowed:void 0,marginMode:s,timestamp:r,datetime:this.iso8601(r)}}nonce(){return this.milliseconds()-this.options.timeDifference}sign(e,t=[],i="GET",s={},r,a){let d=t[0],h=t[1],l=this.omit(s,this.extractParams(e));if(e.indexOf("settle")>-1&&e.endsWith("batch_cancel_orders")){let t=this.safeDict(s,0);e=this.implodeParams(e,t);let i=[],r=s;for(let e=1;e<r.length;e++)i.push(s[e]);s=i,l=i}else if(Array.isArray(s)){let t=this.safeValue(s,0,{});e=this.implodeParams(e,t)}else e=this.implodeParams(e,s);let c=""===e?"":"/"+e,u="/"+h+c;("subAccounts"===h||"withdrawals"===h)&&(u=c);let p=this.urls.api[d][h];if(void 0===p)throw new n.NotSupported(this.id+" does not have a testnet for the "+h+" market type.");if(p+=u,"public"===d)Object.keys(l).length&&(p+="?"+this.urlencode(l));else{this.checkRequiredCredentials();let t="",s=!1;if(("futures"===h||"delivery"===h)&&"POST"===i){let t=e.split("/"),i=this.safeString(t,1,"");s=i.indexOf("dual")>=0||i.indexOf("positions")>=0}if("GET"===i||"DELETE"===i||s||"PATCH"===i)Object.keys(l).length&&(p+="?"+(t=this.urlencode(l))),"PATCH"===i&&(a=this.json(l));else{let e=this.safeValue(l,"query",{});Object.keys(e).length&&(p+="?"+(t=this.urlencode(e))),l=this.omit(l,"query"),a=this.json(l)}let n=void 0===a?"":a,d=this.hash(this.encode(n),o.Zf),c=this.nonce(),f=this.parseToInt(c/1e3).toString(),m="/api/"+this.version+u,g=[i.toUpperCase(),m,t,d,f].join("\n"),_=this.hmac(this.encode(g),this.encode(this.secret),o.Zf);r={KEY:this.apiKey,Timestamp:f,SIGN:_,"Content-Type":"application/json"}}return{url:p,method:i,body:a,headers:r}}async modifyMarginHelper(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),[a,o]=this.prepareRequest(r,void 0,i);if(a.change=this.numberToString(t),r.swap)s=await this.privateFuturesPostSettlePositionsContractMargin(this.extend(a,o));else if(r.future)s=await this.privateDeliveryPostSettlePositionsContractMargin(this.extend(a,o));else throw new n.NotSupported(this.id+" modifyMarginHelper() not support this market type");return this.parseMarginModification(s,r)}parseMarginModification(e,t){let i=this.safeString(e,"contract");t=this.safeMarket(i,t,"_","contract");let s=this.safeNumber(e,"margin");return{info:e,symbol:t.symbol,type:void 0,marginMode:"isolated",amount:void 0,total:s,code:this.safeValue(t,"quote"),status:"ok",timestamp:void 0,datetime:void 0}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,-t,i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,i)}async fetchOpenInterestHistory(e,t="5m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOpenInterestHistory","paginate",!1),a)return await this.fetchPaginatedCallDeterministic("fetchOpenInterestHistory",e,i,s,t,r,100);let o=this.market(e);if(!o.swap)throw new n.BadRequest(this.id+" fetchOpenInterest() supports swap markets only");let d={contract:o.id,settle:o.settleId,interval:this.safeString(this.timeframes,t,t)};void 0!==s&&(d.limit=s),void 0!==i&&(d.from=i);let h=await this.publicFuturesGetSettleContractStats(this.extend(d,r));return this.parseOpenInterestsHistory(h,o,i,s)}parseOpenInterest(e,t){let i=this.safeTimestamp(e,"time");return{symbol:this.safeString(t,"symbol"),openInterestAmount:this.safeNumber(e,"open_interest"),openInterestValue:this.safeNumber(e,"open_interest_usd"),timestamp:i,datetime:this.iso8601(i),info:e}}async fetchSettlementHistory(e,t,i,s={}){let r;if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchSettlementHistory() requires a symbol argument");await this.loadMarkets();let a=this.market(e);if([r,s]=this.handleMarketTypeAndParams("fetchSettlementHistory",a,s),"option"!==r)throw new n.NotSupported(this.id+" fetchSettlementHistory() supports option markets only");let o=a.id.split("-"),d={underlying:this.safeString(o,0)};void 0!==t&&(d.from=t),void 0!==i&&(d.limit=i);let h=await this.publicOptionsGetSettlements(this.extend(d,s)),l=this.parseSettlements(h,a),c=this.sortBy(l,"timestamp");return this.filterBySymbolSinceLimit(c,e,t,i)}async fetchMySettlementHistory(e,t,i,s={}){let r;if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMySettlementHistory() requires a symbol argument");await this.loadMarkets();let a=this.market(e);if([r,s]=this.handleMarketTypeAndParams("fetchMySettlementHistory",a,s),"option"!==r)throw new n.NotSupported(this.id+" fetchMySettlementHistory() supports option markets only");let o=a.id,d=o.split("-"),h={underlying:this.safeString(d,0),contract:o};void 0!==t&&(h.from=t),void 0!==i&&(h.limit=i);let l=await this.privateOptionsGetMySettlements(this.extend(h,s)),c=this.safeValue(l,"result",{}),u=this.safeValue(c,"list",[]),p=this.parseSettlements(u,a),f=this.sortBy(p,"timestamp");return this.filterBySymbolSinceLimit(f,a.symbol,t,i)}parseSettlement(e,t){let i=this.safeTimestamp(e,"time"),s=this.safeString(e,"contract");return{info:e,symbol:this.safeSymbol(s,t),price:this.safeNumber(e,"settle_price"),timestamp:i,datetime:this.iso8601(i)}}parseSettlements(e,t){let i=[];for(let s=0;s<e.length;s++)i.push(this.parseSettlement(e[s],t));return i}async fetchLedger(e,t,i,s={}){let r,a,n;await this.loadMarkets();let o=!1;if([o,s]=this.handleOptionAndParams(s,"fetchLedger","paginate"),o)return await this.fetchPaginatedCallDynamic("fetchLedger",e,t,i,s);let d={};if([r,s]=this.handleMarketTypeAndParams("fetchLedger",void 0,s),("spot"===r||"margin"===r)&&void 0!==e&&(a=this.currency(e),d.currency=a.id),"swap"===r||"future"===r){let e=this.safeStringLower(s,"settle","swap"===r?"usdt":"btc");s=this.omit(s,"settle"),d.settle=e}return void 0!==t&&(d.from=t),void 0!==i&&(d.limit=i),[d,s]=this.handleUntilOption("to",d,s),"spot"===r?n=await this.privateSpotGetAccountBook(this.extend(d,s)):"margin"===r?n=await this.privateMarginGetAccountBook(this.extend(d,s)):"swap"===r?n=await this.privateFuturesGetSettleAccountBook(this.extend(d,s)):"future"===r?n=await this.privateDeliveryGetSettleAccountBook(this.extend(d,s)):"option"===r&&(n=await this.privateOptionsGetAccountBook(this.extend(d,s))),this.parseLedger(n,a,t,i)}parseLedgerEntry(e,t){let i,s;let a=this.safeString(e,"change");r.Y.stringLt(a,"0")?(i="out",a=r.Y.stringAbs(a)):i="in";let n=this.safeString(e,"currency");t=this.safeCurrency(n,t);let o=this.safeString(e,"type"),d=this.safeString(e,"time");s=d.length>10?parseInt(d):1e3*parseInt(d);let h=this.safeString(e,"balance"),l=this.safeString(e,"change"),c=this.parseNumber(r.Y.stringSub(h,l));return this.safeLedgerEntry({info:e,id:this.safeString(e,"id"),direction:i,account:void 0,referenceAccount:void 0,referenceId:void 0,type:this.parseLedgerEntryType(o),currency:this.safeCurrencyCode(n,t),amount:this.parseNumber(a),timestamp:s,datetime:this.iso8601(s),before:c,after:this.safeNumber(e,"balance"),status:void 0,fee:void 0},t)}parseLedgerEntryType(e){return this.safeString({deposit:"deposit",withdraw:"withdrawal",sub_account_transfer:"transfer",margin_in:"transfer",margin_out:"transfer",margin_funding_in:"transfer",margin_funding_out:"transfer",cross_margin_in:"transfer",cross_margin_out:"transfer",copy_trading_in:"transfer",copy_trading_out:"transfer",quant_in:"transfer",quant_out:"transfer",futures_in:"transfer",futures_out:"transfer",delivery_in:"transfer",delivery_out:"transfer",new_order:"trade",order_fill:"trade",referral_fee:"rebate",order_fee:"fee",interest:"interest",lend:"loan",redeem:"loan",profit:"interest",flash_swap_buy:"trade",flash_swap_sell:"trade",unknown:"unknown",set:"settlement",prem:"trade",point_refr:"rebate",point_fee:"fee",point_dnw:"deposit/withdraw",fund:"fee",refr:"rebate",fee:"fee",pnl:"trade",dnw:"deposit/withdraw"},e,e)}async setPositionMode(e,t,i={}){let s=void 0!==t?this.market(t):void 0,[r,a]=this.prepareRequest(s,"swap",i);return r.dual_mode=e,await this.privateFuturesPostSettleDualMode(this.extend(r,a))}async fetchUnderlyingAssets(e={}){let t;if(await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchUnderlyingAssets",void 0,e),(void 0===t||"spot"===t)&&(t="option"),"option"!==t)throw new n.NotSupported(this.id+" fetchUnderlyingAssets() supports option markets only");let i=await this.publicOptionsGetUnderlyings(e),s=[];for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"name");void 0!==r&&s.push(r)}return s}async fetchLiquidations(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);if(!r.swap)throw new n.NotSupported(this.id+" fetchLiquidations() supports swap markets only");let a={settle:r.settleId,contract:r.id};void 0!==t&&(a.from=t),void 0!==i&&(a.limit=i),[a,s]=this.handleUntilOption("to",a,s);let o=await this.publicFuturesGetSettleLiqOrders(this.extend(a,s));return this.parseLiquidations(o,r,t,i)}async fetchMyLiquidations(e,t,i,s={}){let r;if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchMyLiquidations() requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={contract:a.id};if(a.swap||a.future)void 0!==i&&(o.limit=i),o.settle=a.settleId;else if(a.option){let e=a.id.split("-");o.underlying=this.safeString(e,0)}if(a.swap)r=await this.privateFuturesGetSettleLiquidates(this.extend(o,s));else if(a.future)r=await this.privateDeliveryGetSettleLiquidates(this.extend(o,s));else if(a.option)r=await this.privateOptionsGetPositionClose(this.extend(o,s));else throw new n.NotSupported(this.id+" fetchMyLiquidations() does not support "+a.type+" orders");return this.parseLiquidations(r,a,t,i)}parseLiquidation(e,t){let i=this.safeString(e,"contract"),s=this.safeTimestamp(e,"time"),a=this.safeString2(e,"size","settle_size"),n=this.safeString(e,"left","0"),o=r.Y.stringAbs(r.Y.stringSub(a,n)),d=this.safeString(t,"contractSize"),h=this.safeString2(e,"liq_price","fill_price"),l=r.Y.stringMul(o,d),c=this.safeString(e,"pnl");return void 0===c&&(c=r.Y.stringMul(l,h)),this.safeLiquidation({info:e,symbol:this.safeSymbol(i,t),contracts:this.parseNumber(o),contractSize:this.parseNumber(d),price:this.parseNumber(h),baseValue:this.parseNumber(l),quoteValue:this.parseNumber(r.Y.stringAbs(c)),timestamp:s,datetime:this.iso8601(s)})}async fetchGreeks(e,t={}){await this.loadMarkets();let i=this.market(e),s={underlying:i.info.underlying},r=await this.publicOptionsGetTickers(this.extend(s,t)),a=i.id;for(let e=0;e<r.length;e++){let t=r[e];if(this.safeString(t,"name")===a)return this.parseGreeks(t,i)}}parseGreeks(e,t){let i=this.safeString(e,"name");return{symbol:this.safeSymbol(i,t),timestamp:void 0,datetime:void 0,delta:this.safeNumber(e,"delta"),gamma:this.safeNumber(e,"gamma"),theta:this.safeNumber(e,"theta"),vega:this.safeNumber(e,"vega"),rho:void 0,bidSize:this.safeNumber(e,"bid1_size"),askSize:this.safeNumber(e,"ask1_size"),bidImpliedVolatility:this.safeNumber(e,"bid_iv"),askImpliedVolatility:this.safeNumber(e,"ask_iv"),markImpliedVolatility:this.safeNumber(e,"mark_iv"),bidPrice:this.safeNumber(e,"bid1_price"),askPrice:this.safeNumber(e,"ask1_price"),markPrice:this.safeNumber(e,"mark_price"),lastPrice:this.safeNumber(e,"last_price"),underlyingPrice:this.parseNumber(t.info.underlying_price),info:e}}async closePosition(e,t,i={}){return i=this.extend({close:!0},i),void 0===t&&(t=""),await this.createOrder(e,"market",t,0,void 0,i)}async fetchLeverage(e,t={}){let i,s;await this.loadMarkets(),void 0!==e&&(i=this.market(e));let r={},a=this.safeBool(t,"unified");if(t=this.omit(t,"unified"),i.spot)r.currency_pair=i.id,s=a?await this.publicMarginGetUniCurrencyPairsCurrencyPair(this.extend(r,t)):await this.publicMarginGetCurrencyPairsCurrencyPair(this.extend(r,t));else if(a)s=await this.privateUnifiedGetAccounts(this.extend(r,t));else throw new n.NotSupported(this.id+" fetchLeverage() does not support "+i.type+" markets");return this.parseLeverage(s,i)}async fetchLeverages(e,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e);let s=this.safeBool(t,"unified");t=this.omit(t,"unified");let r="id";return s?(r="currency_pair",i=await this.publicMarginGetUniCurrencyPairs(t)):i=await this.publicMarginGetCurrencyPairs(t),this.parseLeverages(i,e,r,"spot")}parseLeverage(e,t){let i=this.safeString2(e,"currency_pair","id"),s=this.safeInteger(e,"leverage");return{info:e,symbol:this.safeSymbol(i,t,"_","spot"),marginMode:void 0,longLeverage:s,shortLeverage:s}}async fetchOption(e,t={}){await this.loadMarkets();let i=this.market(e),s={contract:i.id},r=await this.publicOptionsGetContractsContract(this.extend(s,t));return this.parseOption(r,void 0,i)}async fetchOptionChain(e,t={}){await this.loadMarkets();let i={underlying:this.currency(e).code+"_USDT"},s=await this.publicOptionsGetContracts(this.extend(i,t));return this.parseOptionChain(s,void 0,"name")}parseOption(e,t,i){let s=this.safeString(e,"name");i=this.safeMarket(s,i);let r=this.safeTimestamp(e,"create_time");return{info:e,currency:void 0,symbol:i.symbol,timestamp:r,datetime:this.iso8601(r),impliedVolatility:void 0,openInterest:void 0,bidPrice:this.safeNumber(e,"bid1_price"),askPrice:this.safeNumber(e,"ask1_price"),midPrice:void 0,markPrice:this.safeNumber(e,"mark_price"),lastPrice:this.safeNumber(e,"last_price"),underlyingPrice:this.safeNumber(e,"underlying_price"),change:void 0,percentage:void 0,baseVolume:void 0,quoteVolume:void 0}}async fetchPositionsHistory(e,t,i,s={}){let r,a,o;await this.loadMarkets(),void 0!==e&&1===e.length&&(r=this.market(e[0])),[a,s]=this.handleMarketTypeAndParams("fetchPositionsHistory",r,s,"swap");let d=this.safeInteger(s,"until");s=this.omit(s,"until");let h={};if([h,s]=this.prepareRequest(r,a,s),void 0!==i&&(h.limit=i),void 0!==t&&(h.from=this.parseToInt(t/1e3)),void 0!==d&&(h.to=this.parseToInt(d/1e3)),"swap"===a)o=await this.privateFuturesGetSettlePositionClose(this.extend(h,s));else if("future"===a)o=await this.privateDeliveryGetSettlePositionClose(this.extend(h,s));else throw new n.NotSupported(this.id+" fetchPositionsHistory() does not support markets of type "+a);return this.parsePositions(o,e,s)}handleErrors(e,t,i,s,r,a,o,d,h){if(void 0===o)return;let l=this.safeString(o,"label");if(void 0!==l){let e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),new n.ExchangeError(e)}}}}}]);