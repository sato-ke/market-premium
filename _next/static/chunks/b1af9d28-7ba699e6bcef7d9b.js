"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[28],{587:(e,t,i)=>{i.d(t,{A:()=>l});var r=i(5437),s=i(8119),a=i(6077),n=i(3675),o=i(5432),d=i(2982),h=i(8715),c=i(74);class l extends r.A{describe(){return this.deepExtend(super.describe(),{id:"binance",name:"Binance",countries:["JP","MT"],rateLimit:50,certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!0,addMargin:!0,borrowCrossMargin:!0,borrowIsolatedMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!1,createConvertTrade:!0,createDepositAddress:!1,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!0,createMarketSellOrder:!0,createMarketSellOrderWithCost:!0,createOrder:!0,createOrders:!0,createOrderWithTakeProfitAndStopLoss:!1,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopLossOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,createTakeProfitOrder:!0,createTrailingPercentOrder:!0,createTriggerOrder:!0,editOrder:!0,fetchAccounts:void 0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowInterest:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!0,fetchCanceledAndClosedOrders:"emulated",fetchCanceledOrders:"emulated",fetchClosedOrder:!1,fetchClosedOrders:"emulated",fetchConvertCurrencies:!0,fetchConvertQuote:!0,fetchConvertTrade:!0,fetchConvertTradeHistory:!0,fetchCrossBorrowRate:!0,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositsWithdrawals:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingInterval:"emulated",fetchFundingIntervals:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchGreeks:!0,fetchIndexOHLCV:!0,fetchIsolatedBorrowRate:"emulated",fetchIsolatedBorrowRates:!0,fetchL3OrderBook:!1,fetchLastPrices:!0,fetchLedger:!0,fetchLedgerEntry:!0,fetchLeverage:"emulated",fetchLeverages:!0,fetchLeverageTiers:!0,fetchLiquidations:!1,fetchLongShortRatio:!1,fetchLongShortRatioHistory:!0,fetchMarginAdjustmentHistory:!0,fetchMarginMode:!0,fetchMarginModes:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMarkPrice:!0,fetchMarkPrices:!0,fetchMyLiquidations:!0,fetchMySettlementHistory:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOption:!0,fetchOptionChain:!1,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionHistory:!1,fetchPositionMode:!0,fetchPositions:!0,fetchPositionsHistory:!1,fetchPositionsRisk:!0,fetchPremiumIndexOHLCV:!0,fetchSettlementHistory:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTradingLimits:"emulated",fetchTransactionFee:"emulated",fetchTransactionFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!0,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!1,fetchWithdrawAddresses:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!0,repayCrossMargin:!0,repayIsolatedMargin:!0,sandbox:!0,setLeverage:!0,setMargin:!1,setMarginMode:!0,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},timeframes:{"1s":"1s","1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://github.com/user-attachments/assets/e9419b93-ccb0-46aa-9bff-c883f096274b",test:{dapiPublic:"https://testnet.binancefuture.com/dapi/v1",dapiPrivate:"https://testnet.binancefuture.com/dapi/v1",dapiPrivateV2:"https://testnet.binancefuture.com/dapi/v2",fapiPublic:"https://testnet.binancefuture.com/fapi/v1",fapiPublicV2:"https://testnet.binancefuture.com/fapi/v2",fapiPublicV3:"https://testnet.binancefuture.com/fapi/v3",fapiPrivate:"https://testnet.binancefuture.com/fapi/v1",fapiPrivateV2:"https://testnet.binancefuture.com/fapi/v2",fapiPrivateV3:"https://testnet.binancefuture.com/fapi/v3",public:"https://testnet.binance.vision/api/v3",private:"https://testnet.binance.vision/api/v3",v1:"https://testnet.binance.vision/api/v1"},api:{sapi:"https://api.binance.com/sapi/v1",sapiV2:"https://api.binance.com/sapi/v2",sapiV3:"https://api.binance.com/sapi/v3",sapiV4:"https://api.binance.com/sapi/v4",dapiPublic:"https://dapi.binance.com/dapi/v1",dapiPrivate:"https://dapi.binance.com/dapi/v1",eapiPublic:"https://eapi.binance.com/eapi/v1",eapiPrivate:"https://eapi.binance.com/eapi/v1",dapiPrivateV2:"https://dapi.binance.com/dapi/v2",dapiData:"https://dapi.binance.com/futures/data",fapiPublic:"https://fapi.binance.com/fapi/v1",fapiPublicV2:"https://fapi.binance.com/fapi/v2",fapiPublicV3:"https://fapi.binance.com/fapi/v3",fapiPrivate:"https://fapi.binance.com/fapi/v1",fapiPrivateV2:"https://fapi.binance.com/fapi/v2",fapiPrivateV3:"https://fapi.binance.com/fapi/v3",fapiData:"https://fapi.binance.com/futures/data",public:"https://api.binance.com/api/v3",private:"https://api.binance.com/api/v3",v1:"https://api.binance.com/api/v1",papi:"https://papi.binance.com/papi/v1",papiV2:"https://papi.binance.com/papi/v2"},www:"https://www.binance.com",referral:{url:"https://accounts.binance.com/en/register?ref=D7YA7CLY",discount:.1},doc:["https://developers.binance.com/en"],api_management:"https://www.binance.com/en/usercenter/settings/api-management",fees:"https://www.binance.com/en/fee/schedule"},api:{sapi:{get:{"copyTrading/futures/userStatus":2,"copyTrading/futures/leadSymbol":2,"system/status":.1,accountSnapshot:240,"account/info":.1,"margin/asset":1,"margin/pair":1,"margin/allAssets":.1,"margin/allPairs":.1,"margin/priceIndex":1,"spot/delist-schedule":10,"asset/assetDividend":1,"asset/dribblet":.1,"asset/transfer":.1,"asset/assetDetail":.1,"asset/tradeFee":.1,"asset/ledger-transfer/cloud-mining/queryByPage":4.0002,"asset/convert-transfer/queryByPage":.033335,"asset/wallet/balance":6,"asset/custody/transfer-history":6,"margin/borrow-repay":1,"margin/loan":1,"margin/repay":1,"margin/account":1,"margin/transfer":.1,"margin/interestHistory":.1,"margin/forceLiquidationRec":.1,"margin/order":1,"margin/openOrders":1,"margin/allOrders":20,"margin/myTrades":1,"margin/maxBorrowable":5,"margin/maxTransferable":5,"margin/tradeCoeff":1,"margin/isolated/transfer":.1,"margin/isolated/account":1,"margin/isolated/pair":1,"margin/isolated/allPairs":1,"margin/isolated/accountLimit":.1,"margin/interestRateHistory":.1,"margin/orderList":1,"margin/allOrderList":20,"margin/openOrderList":1,"margin/crossMarginData":{cost:.1,noCoin:.5},"margin/isolatedMarginData":{cost:.1,noCoin:1},"margin/isolatedMarginTier":.1,"margin/rateLimit/order":2,"margin/dribblet":.1,"margin/dust":20.001,"margin/crossMarginCollateralRatio":10,"margin/exchange-small-liability":.6667,"margin/exchange-small-liability-history":.6667,"margin/next-hourly-interest-rate":.6667,"margin/capital-flow":10,"margin/delist-schedule":10,"margin/available-inventory":.3334,"margin/leverageBracket":.1,"loan/vip/loanable/data":40,"loan/vip/collateral/data":40,"loan/vip/request/data":2.6668,"loan/vip/request/interestRate":2.6668,"loan/income":40.002,"loan/ongoing/orders":40,"loan/ltv/adjustment/history":40,"loan/borrow/history":40,"loan/repay/history":40,"loan/loanable/data":40,"loan/collateral/data":40,"loan/repay/collateral/rate":600,"loan/flexible/ongoing/orders":30,"loan/flexible/borrow/history":40,"loan/flexible/repay/history":40,"loan/flexible/ltv/adjustment/history":40,"loan/vip/ongoing/orders":40,"loan/vip/repay/history":40,"loan/vip/collateral/account":600,"fiat/orders":600.03,"fiat/payments":.1,"futures/transfer":1,"futures/histDataLink":.1,"rebate/taxQuery":80.004,"capital/config/getall":1,"capital/deposit/address":1,"capital/deposit/address/list":1,"capital/deposit/hisrec":.1,"capital/deposit/subAddress":.1,"capital/deposit/subHisrec":.1,"capital/withdraw/history":2,"capital/withdraw/address/list":10,"capital/contract/convertible-coins":4.0002,"convert/tradeFlow":20.001,"convert/exchangeInfo":50,"convert/assetInfo":10,"convert/orderStatus":.6667,"convert/limit/queryOpenOrders":20.001,"account/status":.1,"account/apiTradingStatus":.1,"account/apiRestrictions/ipRestriction":.1,bnbBurn:.1,"sub-account/futures/account":1,"sub-account/futures/accountSummary":.1,"sub-account/futures/positionRisk":1,"sub-account/futures/internalTransfer":.1,"sub-account/list":.1,"sub-account/margin/account":1,"sub-account/margin/accountSummary":1,"sub-account/spotSummary":.1,"sub-account/status":1,"sub-account/sub/transfer/history":.1,"sub-account/transfer/subUserHistory":.1,"sub-account/universalTransfer":.1,"sub-account/apiRestrictions/ipRestriction/thirdPartyList":1,"sub-account/transaction-statistics":.40002,"sub-account/subAccountApi/ipRestriction":20.001,"managed-subaccount/asset":.1,"managed-subaccount/accountSnapshot":240,"managed-subaccount/queryTransLogForInvestor":.1,"managed-subaccount/queryTransLogForTradeParent":.40002,"managed-subaccount/fetch-future-asset":.40002,"managed-subaccount/marginAsset":.1,"managed-subaccount/info":.40002,"managed-subaccount/deposit/address":.006667,"managed-subaccount/query-trans-log":.40002,"lending/daily/product/list":.1,"lending/daily/userLeftQuota":.1,"lending/daily/userRedemptionQuota":.1,"lending/daily/token/position":.1,"lending/union/account":.1,"lending/union/purchaseRecord":.1,"lending/union/redemptionRecord":.1,"lending/union/interestHistory":.1,"lending/project/list":.1,"lending/project/position/list":.1,"eth-staking/eth/history/stakingHistory":15,"eth-staking/eth/history/redemptionHistory":15,"eth-staking/eth/history/rewardsHistory":15,"eth-staking/eth/quota":15,"eth-staking/eth/history/rateHistory":15,"eth-staking/account":15,"eth-staking/wbeth/history/wrapHistory":15,"eth-staking/wbeth/history/unwrapHistory":15,"eth-staking/eth/history/wbethRewardsHistory":15,"sol-staking/sol/history/stakingHistory":15,"sol-staking/sol/history/redemptionHistory":15,"sol-staking/sol/history/bnsolRewardsHistory":15,"sol-staking/sol/history/rateHistory":15,"sol-staking/account":15,"sol-staking/sol/quota":15,"mining/pub/algoList":.1,"mining/pub/coinList":.1,"mining/worker/detail":.5,"mining/worker/list":.5,"mining/payment/list":.5,"mining/statistics/user/status":.5,"mining/statistics/user/list":.5,"mining/payment/uid":.5,"bswap/pools":.1,"bswap/liquidity":{cost:.1,noPoolId:1},"bswap/liquidityOps":20.001,"bswap/quote":1.00005,"bswap/swap":20.001,"bswap/poolConfigure":1.00005,"bswap/addLiquidityPreview":1.00005,"bswap/removeLiquidityPreview":1.00005,"bswap/unclaimedRewards":6.667,"bswap/claimedHistory":6.667,"blvt/tokenInfo":.1,"blvt/subscribe/record":.1,"blvt/redeem/record":.1,"blvt/userLimit":.1,"apiReferral/ifNewUser":1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/rebate/recentRecord":1,"apiReferral/rebate/historicalRecord":1,"apiReferral/kickback/recentRecord":1,"apiReferral/kickback/historicalRecord":1,"broker/subAccountApi":1,"broker/subAccount":1,"broker/subAccountApi/commission/futures":1,"broker/subAccountApi/commission/coinFutures":1,"broker/info":1,"broker/transfer":1,"broker/transfer/futures":1,"broker/rebate/recentRecord":1,"broker/rebate/historicalRecord":1,"broker/subAccount/bnbBurn/status":1,"broker/subAccount/depositHist":1,"broker/subAccount/spotSummary":1,"broker/subAccount/marginSummary":1,"broker/subAccount/futuresSummary":1,"broker/rebate/futures/recentRecord":1,"broker/subAccountApi/ipRestriction":1,"broker/universalTransfer":1,"account/apiRestrictions":.1,"c2c/orderMatch/listUserOrderHistory":.1,"nft/history/transactions":20.001,"nft/history/deposit":20.001,"nft/history/withdraw":20.001,"nft/user/getAsset":20.001,"pay/transactions":20.001,"giftcard/verify":.1,"giftcard/cryptography/rsa-public-key":.1,"giftcard/buyCode/token-limit":.1,"algo/spot/openOrders":.1,"algo/spot/historicalOrders":.1,"algo/spot/subOrders":.1,"algo/futures/openOrders":.1,"algo/futures/historicalOrders":.1,"algo/futures/subOrders":.1,"portfolio/account":.1,"portfolio/collateralRate":5,"portfolio/pmLoan":3.3335,"portfolio/interest-history":.6667,"portfolio/asset-index-price":.1,"portfolio/repay-futures-switch":3,"portfolio/margin-asset-leverage":5,"portfolio/balance":2,"staking/productList":.1,"staking/position":.1,"staking/stakingRecord":.1,"staking/personalLeftQuota":.1,"lending/auto-invest/target-asset/list":.1,"lending/auto-invest/target-asset/roi/list":.1,"lending/auto-invest/all/asset":.1,"lending/auto-invest/source-asset/list":.1,"lending/auto-invest/plan/list":.1,"lending/auto-invest/plan/id":.1,"lending/auto-invest/history/list":.1,"lending/auto-invest/index/info":.1,"lending/auto-invest/index/user-summary":.1,"lending/auto-invest/one-off/status":.1,"lending/auto-invest/redeem/history":.1,"lending/auto-invest/rebalance/history":.1,"simple-earn/flexible/list":15,"simple-earn/locked/list":15,"simple-earn/flexible/personalLeftQuota":15,"simple-earn/locked/personalLeftQuota":15,"simple-earn/flexible/subscriptionPreview":15,"simple-earn/locked/subscriptionPreview":15,"simple-earn/flexible/history/rateHistory":15,"simple-earn/flexible/position":15,"simple-earn/locked/position":15,"simple-earn/account":15,"simple-earn/flexible/history/subscriptionRecord":15,"simple-earn/locked/history/subscriptionRecord":15,"simple-earn/flexible/history/redemptionRecord":15,"simple-earn/locked/history/redemptionRecord":15,"simple-earn/flexible/history/rewardsRecord":15,"simple-earn/locked/history/rewardsRecord":15,"simple-earn/flexible/history/collateralRecord":.1,"dci/product/list":.1,"dci/product/positions":.1,"dci/product/accounts":.1},post:{"asset/dust":.06667,"asset/dust-btc":.1,"asset/transfer":6.0003,"asset/get-funding-asset":.1,"asset/convert-transfer":.033335,"account/disableFastWithdrawSwitch":.1,"account/enableFastWithdrawSwitch":.1,"capital/withdraw/apply":4.0002,"capital/contract/convertible-coins":4.0002,"capital/deposit/credit-apply":.1,"margin/borrow-repay":20.001,"margin/transfer":4.0002,"margin/loan":20.001,"margin/repay":20.001,"margin/order":.040002,"margin/order/oco":.040002,"margin/dust":20.001,"margin/exchange-small-liability":20.001,"margin/isolated/transfer":4.0002,"margin/isolated/account":2.0001,"margin/max-leverage":300,bnbBurn:.1,"sub-account/virtualSubAccount":.1,"sub-account/margin/transfer":4.0002,"sub-account/margin/enable":.1,"sub-account/futures/enable":.1,"sub-account/futures/transfer":.1,"sub-account/futures/internalTransfer":.1,"sub-account/transfer/subToSub":.1,"sub-account/transfer/subToMaster":.1,"sub-account/universalTransfer":.1,"sub-account/options/enable":.1,"managed-subaccount/deposit":.1,"managed-subaccount/withdraw":.1,userDataStream:.1,"userDataStream/isolated":.1,"futures/transfer":.1,"lending/customizedFixed/purchase":.1,"lending/daily/purchase":.1,"lending/daily/redeem":.1,"bswap/liquidityAdd":60,"bswap/liquidityRemove":60,"bswap/swap":60,"bswap/claimRewards":6.667,"blvt/subscribe":.1,"blvt/redeem":.1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/rebate/historicalRecord":1,"apiReferral/kickback/historicalRecord":1,"broker/subAccount":1,"broker/subAccount/margin":1,"broker/subAccount/futures":1,"broker/subAccountApi":1,"broker/subAccountApi/permission":1,"broker/subAccountApi/commission":1,"broker/subAccountApi/commission/futures":1,"broker/subAccountApi/commission/coinFutures":1,"broker/transfer":1,"broker/transfer/futures":1,"broker/rebate/historicalRecord":1,"broker/subAccount/bnbBurn/spot":1,"broker/subAccount/bnbBurn/marginInterest":1,"broker/subAccount/blvt":1,"broker/subAccountApi/ipRestriction":1,"broker/subAccountApi/ipRestriction/ipList":1,"broker/universalTransfer":1,"broker/subAccountApi/permission/universalTransfer":1,"broker/subAccountApi/permission/vanillaOptions":1,"giftcard/createCode":.1,"giftcard/redeemCode":.1,"giftcard/buyCode":.1,"algo/spot/newOrderTwap":20.001,"algo/futures/newOrderVp":20.001,"algo/futures/newOrderTwap":20.001,"staking/purchase":.1,"staking/redeem":.1,"staking/setAutoStaking":.1,"eth-staking/eth/stake":15,"eth-staking/eth/redeem":15,"eth-staking/wbeth/wrap":15,"sol-staking/sol/stake":15,"sol-staking/sol/redeem":15,"mining/hash-transfer/config":.5,"mining/hash-transfer/config/cancel":.5,"portfolio/repay":20.001,"loan/vip/renew":40.002,"loan/vip/borrow":40.002,"loan/borrow":40.002,"loan/repay":40.002,"loan/adjust/ltv":40.002,"loan/customize/margin_call":40.002,"loan/flexible/repay":40.002,"loan/flexible/adjust/ltv":40.002,"loan/vip/repay":40.002,"convert/getQuote":1.3334,"convert/acceptQuote":3.3335,"convert/limit/placeOrder":3.3335,"convert/limit/cancelOrder":1.3334,"portfolio/auto-collection":150,"portfolio/asset-collection":6,"portfolio/bnb-transfer":150,"portfolio/repay-futures-switch":150,"portfolio/repay-futures-negative-balance":150,"portfolio/mint":20,"portfolio/redeem":20,"lending/auto-invest/plan/add":.1,"lending/auto-invest/plan/edit":.1,"lending/auto-invest/plan/edit-status":.1,"lending/auto-invest/one-off":.1,"lending/auto-invest/redeem":.1,"simple-earn/flexible/subscribe":.1,"simple-earn/locked/subscribe":.1,"simple-earn/flexible/redeem":.1,"simple-earn/locked/redeem":.1,"simple-earn/flexible/setAutoSubscribe":15,"simple-earn/locked/setAutoSubscribe":15,"simple-earn/locked/setRedeemOption":5,"dci/product/subscribe":.1,"dci/product/auto_compound/edit":.1},put:{userDataStream:.1,"userDataStream/isolated":.1},delete:{"margin/openOrders":.1,"margin/order":.006667,"margin/orderList":.006667,"margin/isolated/account":2.0001,userDataStream:.1,"userDataStream/isolated":.1,"broker/subAccountApi":1,"broker/subAccountApi/ipRestriction/ipList":1,"algo/spot/order":.1,"algo/futures/order":.1,"sub-account/subAccountApi/ipRestriction/ipList":20.001}},sapiV2:{get:{"eth-staking/account":15,"sub-account/futures/account":.1,"sub-account/futures/accountSummary":1,"sub-account/futures/positionRisk":.1,"loan/flexible/ongoing/orders":30,"loan/flexible/borrow/history":40,"loan/flexible/repay/history":40,"loan/flexible/ltv/adjustment/history":40,"loan/flexible/loanable/data":40,"loan/flexible/collateral/data":40,"portfolio/account":2},post:{"eth-staking/eth/stake":15,"sub-account/subAccountApi/ipRestriction":20.001,"loan/flexible/borrow":40.002,"loan/flexible/repay":40.002,"loan/flexible/adjust/ltv":40.002}},sapiV3:{get:{"sub-account/assets":.40002},post:{"asset/getUserAsset":.5}},sapiV4:{get:{"sub-account/assets":.40002}},dapiPublic:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:2,byLimit:[[50,2],[100,5],[500,10],[1e3,20]]},trades:5,historicalTrades:20,aggTrades:20,premiumIndex:10,fundingRate:1,klines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},continuousKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},indexPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},markPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},premiumIndexKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:2,noSymbol:5},constituents:2,openInterest:1,fundingInfo:1}},dapiData:{get:{"delivery-price":1,openInterestHist:1,topLongShortAccountRatio:1,topLongShortPositionRatio:1,globalLongShortAccountRatio:1,takerBuySellVol:1,basis:1}},dapiPrivate:{get:{"positionSide/dual":30,orderAmendment:1,order:1,openOrder:1,openOrders:{cost:1,noSymbol:5},allOrders:{cost:20,noSymbol:40},balance:1,account:5,"positionMargin/history":1,positionRisk:1,userTrades:{cost:20,noSymbol:40},income:20,leverageBracket:1,forceOrders:{cost:20,noSymbol:50},adlQuantile:5,commissionRate:20,"income/asyn":5,"income/asyn/id":5,"trade/asyn":.5,"trade/asyn/id":.5,"order/asyn":.5,"order/asyn/id":.5,pmExchangeInfo:.5,pmAccountInfo:.5},post:{"positionSide/dual":1,order:4,batchOrders:5,countdownCancelAll:10,leverage:1,marginType:1,positionMargin:1,listenKey:1},put:{listenKey:1,order:1,batchOrders:5},delete:{order:1,allOpenOrders:1,batchOrders:5,listenKey:1}},dapiPrivateV2:{get:{leverageBracket:1}},fapiPublic:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:2,byLimit:[[50,2],[100,5],[500,10],[1e3,20]]},trades:5,historicalTrades:20,aggTrades:20,klines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},continuousKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},markPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},indexPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},premiumIndexKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},fundingRate:1,fundingInfo:1,premiumIndex:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},openInterest:1,indexInfo:1,assetIndex:{cost:1,noSymbol:10},constituents:2,apiTradingStatus:{cost:1,noSymbol:10},lvtKlines:1,"convert/exchangeInfo":4}},fapiData:{get:{"delivery-price":1,openInterestHist:1,topLongShortAccountRatio:1,topLongShortPositionRatio:1,globalLongShortAccountRatio:1,takerlongshortRatio:1,basis:1}},fapiPrivate:{get:{forceOrders:{cost:20,noSymbol:50},allOrders:5,openOrder:1,openOrders:{cost:1,noSymbol:40},order:1,account:5,balance:5,leverageBracket:1,"positionMargin/history":1,positionRisk:5,"positionSide/dual":30,userTrades:5,income:30,commissionRate:20,"rateLimit/order":1,apiTradingStatus:1,multiAssetsMargin:30,"apiReferral/ifNewUser":1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/traderNum":1,"apiReferral/overview":1,"apiReferral/tradeVol":1,"apiReferral/rebateVol":1,"apiReferral/traderSummary":1,adlQuantile:5,pmAccountInfo:5,orderAmendment:1,"income/asyn":1e3,"income/asyn/id":10,"order/asyn":1e3,"order/asyn/id":10,"trade/asyn":1e3,"trade/asyn/id":10,feeBurn:1,symbolConfig:5,accountConfig:5,"convert/orderStatus":5},post:{batchOrders:5,"positionSide/dual":1,positionMargin:1,marginType:1,order:4,leverage:1,listenKey:1,countdownCancelAll:10,multiAssetsMargin:1,"apiReferral/customization":1,"apiReferral/userCustomization":1,feeBurn:1,"convert/getQuote":200,"convert/acceptQuote":20},put:{listenKey:1,order:1,batchOrders:5},delete:{batchOrders:1,order:1,allOpenOrders:1,listenKey:1}},fapiPublicV2:{get:{"ticker/price":0}},fapiPrivateV2:{get:{account:1,balance:1,positionRisk:1}},fapiPublicV3:{get:{}},fapiPrivateV3:{get:{account:1,balance:1,positionRisk:1}},eapiPublic:{get:{ping:1,time:1,exchangeInfo:1,index:1,ticker:5,mark:5,depth:1,klines:1,trades:5,historicalTrades:20,exerciseHistory:3,openInterest:3}},eapiPrivate:{get:{account:3,position:5,openOrders:{cost:1,noSymbol:40},historyOrders:3,userTrades:5,exerciseRecord:5,bill:1,"income/asyn":5,"income/asyn/id":5,marginAccount:3,mmp:1,countdownCancelAll:1,order:1,"block/order/orders":5,"block/order/execute":5,"block/user-trades":5,blockTrades:5},post:{order:1,batchOrders:5,listenKey:1,mmpSet:1,mmpReset:1,countdownCancelAll:1,countdownCancelAllHeartBeat:10,"block/order/create":5,"block/order/execute":5},put:{listenKey:1,"block/order/create":5},delete:{order:1,batchOrders:1,allOpenOrders:1,allOpenOrdersByUnderlying:1,listenKey:1,"block/order/create":5}},public:{get:{ping:.2,time:.2,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10],[5e3,50]]},trades:2,aggTrades:.4,historicalTrades:2,klines:.4,uiKlines:.4,"ticker/24hr":{cost:.4,noSymbol:16},ticker:{cost:.4,noSymbol:16},"ticker/tradingDay":.8,"ticker/price":{cost:.4,noSymbol:.8},"ticker/bookTicker":{cost:.4,noSymbol:.8},exchangeInfo:4,avgPrice:.4},put:{userDataStream:.4},post:{userDataStream:.4},delete:{userDataStream:.4}},private:{get:{allOrderList:4,openOrderList:1.2,orderList:.8,order:.8,openOrders:{cost:1.2,noSymbol:16},allOrders:4,account:4,myTrades:4,"rateLimit/order":8,myPreventedMatches:4,myAllocations:4,"account/commission":4},post:{"order/oco":.2,"orderList/oco":.2,"orderList/oto":.2,"orderList/otoco":.2,"sor/order":.2,"sor/order/test":.2,order:.2,"order/cancelReplace":.2,"order/test":.2},delete:{openOrders:.2,orderList:.2,order:.2}},papi:{get:{ping:.2,"um/order":1,"um/openOrder":1,"um/openOrders":{cost:1,noSymbol:40},"um/allOrders":5,"cm/order":1,"cm/openOrder":1,"cm/openOrders":{cost:1,noSymbol:40},"cm/allOrders":20,"um/conditional/openOrder":1,"um/conditional/openOrders":{cost:1,noSymbol:40},"um/conditional/orderHistory":1,"um/conditional/allOrders":{cost:1,noSymbol:40},"cm/conditional/openOrder":1,"cm/conditional/openOrders":{cost:1,noSymbol:40},"cm/conditional/orderHistory":1,"cm/conditional/allOrders":40,"margin/order":10,"margin/openOrders":5,"margin/allOrders":100,"margin/orderList":5,"margin/allOrderList":100,"margin/openOrderList":5,"margin/myTrades":5,balance:4,account:4,"margin/maxBorrowable":1,"margin/maxWithdraw":1,"um/positionRisk":1,"cm/positionRisk":.2,"um/positionSide/dual":6,"cm/positionSide/dual":6,"um/userTrades":5,"cm/userTrades":20,"um/leverageBracket":.2,"cm/leverageBracket":.2,"margin/forceOrders":1,"um/forceOrders":{cost:20,noSymbol:50},"cm/forceOrders":{cost:20,noSymbol:50},"um/apiTradingStatus":{cost:.2,noSymbol:2},"um/commissionRate":4,"cm/commissionRate":4,"margin/marginLoan":2,"margin/repayLoan":2,"margin/marginInterestHistory":.2,"portfolio/interest-history":10,"um/income":6,"cm/income":6,"um/account":1,"cm/account":1,"repay-futures-switch":6,"um/adlQuantile":5,"cm/adlQuantile":5,"um/trade/asyn":300,"um/trade/asyn/id":2,"um/order/asyn":300,"um/order/asyn/id":2,"um/income/asyn":300,"um/income/asyn/id":2,"um/orderAmendment":1,"cm/orderAmendment":1,"um/feeBurn":30,"um/accountConfig":1,"um/symbolConfig":1,"cm/accountConfig":1,"cm/symbolConfig":1,"rateLimit/order":1},post:{"um/order":1,"um/conditional/order":1,"cm/order":1,"cm/conditional/order":1,"margin/order":1,marginLoan:100,repayLoan:100,"margin/order/oco":1,"um/leverage":.2,"cm/leverage":.2,"um/positionSide/dual":.2,"cm/positionSide/dual":.2,"auto-collection":150,"bnb-transfer":150,"repay-futures-switch":150,"repay-futures-negative-balance":150,listenKey:.2,"asset-collection":6,"margin/repay-debt":3e3,"um/feeBurn":1},put:{listenKey:.2,"um/order":1,"cm/order":1},delete:{"um/order":1,"um/conditional/order":1,"um/allOpenOrders":1,"um/conditional/allOpenOrders":1,"cm/order":1,"cm/conditional/order":1,"cm/allOpenOrders":1,"cm/conditional/allOpenOrders":1,"margin/order":2,"margin/allOpenOrders":5,"margin/orderList":2,listenKey:.2}},papiV2:{get:{"um/account":1}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")},linear:{trading:{feeSide:"quote",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000500"),maker:this.parseNumber("0.000200"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000400")],[this.parseNumber("250"),this.parseNumber("0.000400")],[this.parseNumber("2500"),this.parseNumber("0.000350")],[this.parseNumber("7500"),this.parseNumber("0.000320")],[this.parseNumber("22500"),this.parseNumber("0.000300")],[this.parseNumber("50000"),this.parseNumber("0.000270")],[this.parseNumber("100000"),this.parseNumber("0.000250")],[this.parseNumber("200000"),this.parseNumber("0.000220")],[this.parseNumber("400000"),this.parseNumber("0.000200")],[this.parseNumber("750000"),this.parseNumber("0.000170")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000200")],[this.parseNumber("250"),this.parseNumber("0.000160")],[this.parseNumber("2500"),this.parseNumber("0.000140")],[this.parseNumber("7500"),this.parseNumber("0.000120")],[this.parseNumber("22500"),this.parseNumber("0.000100")],[this.parseNumber("50000"),this.parseNumber("0.000080")],[this.parseNumber("100000"),this.parseNumber("0.000060")],[this.parseNumber("200000"),this.parseNumber("0.000040")],[this.parseNumber("400000"),this.parseNumber("0.000020")],[this.parseNumber("750000"),this.parseNumber("0")]]}}},inverse:{trading:{feeSide:"base",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000500"),maker:this.parseNumber("0.000100"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000500")],[this.parseNumber("250"),this.parseNumber("0.000450")],[this.parseNumber("2500"),this.parseNumber("0.000400")],[this.parseNumber("7500"),this.parseNumber("0.000300")],[this.parseNumber("22500"),this.parseNumber("0.000250")],[this.parseNumber("50000"),this.parseNumber("0.000240")],[this.parseNumber("100000"),this.parseNumber("0.000240")],[this.parseNumber("200000"),this.parseNumber("0.000240")],[this.parseNumber("400000"),this.parseNumber("0.000240")],[this.parseNumber("750000"),this.parseNumber("0.000240")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000100")],[this.parseNumber("250"),this.parseNumber("0.000080")],[this.parseNumber("2500"),this.parseNumber("0.000050")],[this.parseNumber("7500"),this.parseNumber("0.0000030")],[this.parseNumber("22500"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.000050")],[this.parseNumber("100000"),this.parseNumber("-0.000060")],[this.parseNumber("200000"),this.parseNumber("-0.000070")],[this.parseNumber("400000"),this.parseNumber("-0.000080")],[this.parseNumber("750000"),this.parseNumber("-0.000090")]]}}},option:{}},currencies:{BNFCR:this.safeCurrencyStructure({id:"BNFCR",code:"BNFCR",precision:this.parseNumber("0.001")})},commonCurrencies:{BCC:"BCC",YOYO:"YOYOW"},precisionMode:n.kb,options:{sandboxMode:!1,fetchMargins:!0,fetchMarkets:["spot","linear","inverse"],fetchCurrencies:!0,defaultTimeInForce:"GTC",defaultType:"spot",defaultSubType:void 0,hasAlreadyAuthenticatedSuccessfully:!1,warnOnFetchOpenOrdersWithoutSymbol:!0,throwMarginModeAlreadySet:!1,fetchPositions:"positionRisk",recvWindow:1e4,timeDifference:0,adjustForTimeDifference:!1,newOrderRespType:{market:"FULL",limit:"FULL"},quoteOrderQty:!0,broker:{spot:"x-R4BD3S82",margin:"x-R4BD3S82",future:"x-xcKtGhcu",delivery:"x-xcKtGhcu",swap:"x-xcKtGhcu",option:"x-xcKtGhcu"},accountsByType:{main:"MAIN",spot:"MAIN",funding:"FUNDING",margin:"MARGIN",cross:"MARGIN",future:"UMFUTURE",delivery:"CMFUTURE",linear:"UMFUTURE",swap:"UMFUTURE",inverse:"CMFUTURE",option:"OPTION"},accountsById:{MAIN:"spot",FUNDING:"funding",MARGIN:"margin",UMFUTURE:"linear",CMFUTURE:"inverse",OPTION:"option"},networks:{ERC20:"ETH",TRC20:"TRX",BEP2:"BNB",BEP20:"BSC",OMNI:"OMNI",EOS:"EOS",SPL:"SOL"},reverseNetworks:{"tronscan.org":"TRC20","etherscan.io":"ERC20","bscscan.com":"BSC","explorer.binance.org":"BEP2","bithomp.com":"XRP","bloks.io":"EOS","stellar.expert":"XLM","blockchair.com/bitcoin":"BTC","blockchair.com/bitcoin-cash":"BCH","blockchair.com/ecash":"XEC","explorer.litecoin.net":"LTC","explorer.avax.network":"AVAX","solscan.io":"SOL","polkadot.subscan.io":"DOT","dashboard.internetcomputer.org":"ICP","explorer.chiliz.com":"CHZ","cardanoscan.io":"ADA","mainnet.theoan.com":"AION","algoexplorer.io":"ALGO","explorer.ambrosus.com":"AMB","viewblock.io/zilliqa":"ZIL","viewblock.io/arweave":"AR","explorer.ark.io":"ARK","atomscan.com":"ATOM","www.mintscan.io":"CTK","explorer.bitcoindiamond.org":"BCD","btgexplorer.com":"BTG","bts.ai":"BTS","explorer.celo.org":"CELO","explorer.nervos.org":"CKB","cerebro.cortexlabs.ai":"CTXC","chainz.cryptoid.info":"VIA","explorer.dcrdata.org":"DCR","digiexplorer.info":"DGB","dock.subscan.io":"DOCK","dogechain.info":"DOGE","explorer.elrond.com":"EGLD","blockscout.com":"ETC","explore-fetchhub.fetch.ai":"FET","filfox.info":"FIL","fio.bloks.io":"FIO","explorer.firo.org":"FIRO","neoscan.io":"NEO","ftmscan.com":"FTM","explorer.gochain.io":"GO","block.gxb.io":"GXS","hash-hash.info":"HBAR","www.hiveblockexplorer.com":"HIVE","explorer.helium.com":"HNT","tracker.icon.foundation":"ICX","www.iostabc.com":"IOST","explorer.iota.org":"IOTA","iotexscan.io":"IOTX","irishub.iobscan.io":"IRIS","kava.mintscan.io":"KAVA","scope.klaytn.com":"KLAY","kmdexplorer.io":"KMD","kusama.subscan.io":"KSM","explorer.lto.network":"LTO","polygonscan.com":"POLYGON","explorer.ont.io":"ONT","minaexplorer.com":"MINA","nanolooker.com":"NANO","explorer.nebulas.io":"NAS","explorer.nbs.plus":"NBS","explorer.nebl.io":"NEBL","nulscan.io":"NULS","nxscan.com":"NXS","explorer.harmony.one":"ONE","explorer.poa.network":"POA","qtum.info":"QTUM","explorer.rsk.co":"RSK","www.oasisscan.com":"ROSE","ravencoin.network":"RVN","sc.tokenview.com":"SC","secretnodes.com":"SCRT","explorer.skycoin.com":"SKY","steemscan.com":"STEEM","explorer.stacks.co":"STX","www.thetascan.io":"THETA","scan.tomochain.com":"TOMO","explore.vechain.org":"VET","explorer.vite.net":"VITE","www.wanscan.org":"WAN","wavesexplorer.com":"WAVES","wax.eosx.io":"WAXP","waltonchain.pro":"WTC","chain.nem.ninja":"XEM","verge-blockchain.info":"XVG","explorer.yoyow.org":"YOYOW","explorer.zcha.in":"ZEC","explorer.zensystem.io":"ZEN"},networksById:{"tronscan.org":"TRC20","etherscan.io":"ERC20","bscscan.com":"BSC","explorer.binance.org":"BEP2","bithomp.com":"XRP","bloks.io":"EOS","stellar.expert":"XLM","blockchair.com/bitcoin":"BTC","blockchair.com/bitcoin-cash":"BCH","blockchair.com/ecash":"XEC","explorer.litecoin.net":"LTC","explorer.avax.network":"AVAX","solscan.io":"SOL","polkadot.subscan.io":"DOT","dashboard.internetcomputer.org":"ICP","explorer.chiliz.com":"CHZ","cardanoscan.io":"ADA","mainnet.theoan.com":"AION","algoexplorer.io":"ALGO","explorer.ambrosus.com":"AMB","viewblock.io/zilliqa":"ZIL","viewblock.io/arweave":"AR","explorer.ark.io":"ARK","atomscan.com":"ATOM","www.mintscan.io":"CTK","explorer.bitcoindiamond.org":"BCD","btgexplorer.com":"BTG","bts.ai":"BTS","explorer.celo.org":"CELO","explorer.nervos.org":"CKB","cerebro.cortexlabs.ai":"CTXC","chainz.cryptoid.info":"VIA","explorer.dcrdata.org":"DCR","digiexplorer.info":"DGB","dock.subscan.io":"DOCK","dogechain.info":"DOGE","explorer.elrond.com":"EGLD","blockscout.com":"ETC","explore-fetchhub.fetch.ai":"FET","filfox.info":"FIL","fio.bloks.io":"FIO","explorer.firo.org":"FIRO","neoscan.io":"NEO","ftmscan.com":"FTM","explorer.gochain.io":"GO","block.gxb.io":"GXS","hash-hash.info":"HBAR","www.hiveblockexplorer.com":"HIVE","explorer.helium.com":"HNT","tracker.icon.foundation":"ICX","www.iostabc.com":"IOST","explorer.iota.org":"IOTA","iotexscan.io":"IOTX","irishub.iobscan.io":"IRIS","kava.mintscan.io":"KAVA","scope.klaytn.com":"KLAY","kmdexplorer.io":"KMD","kusama.subscan.io":"KSM","explorer.lto.network":"LTO","polygonscan.com":"POLYGON","explorer.ont.io":"ONT","minaexplorer.com":"MINA","nanolooker.com":"NANO","explorer.nebulas.io":"NAS","explorer.nbs.plus":"NBS","explorer.nebl.io":"NEBL","nulscan.io":"NULS","nxscan.com":"NXS","explorer.harmony.one":"ONE","explorer.poa.network":"POA","qtum.info":"QTUM","explorer.rsk.co":"RSK","www.oasisscan.com":"ROSE","ravencoin.network":"RVN","sc.tokenview.com":"SC","secretnodes.com":"SCRT","explorer.skycoin.com":"SKY","steemscan.com":"STEEM","explorer.stacks.co":"STX","www.thetascan.io":"THETA","scan.tomochain.com":"TOMO","explore.vechain.org":"VET","explorer.vite.net":"VITE","www.wanscan.org":"WAN","wavesexplorer.com":"WAVES","wax.eosx.io":"WAXP","waltonchain.pro":"WTC","chain.nem.ninja":"XEM","verge-blockchain.info":"XVG","explorer.yoyow.org":"YOYOW","explorer.zcha.in":"ZEC","explorer.zensystem.io":"ZEN"},impliedNetworks:{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}},legalMoney:{MXN:!0,UGX:!0,SEK:!0,CHF:!0,VND:!0,AED:!0,DKK:!0,KZT:!0,HUF:!0,PEN:!0,PHP:!0,USD:!0,TRY:!0,EUR:!0,NGN:!0,PLN:!0,BRL:!0,ZAR:!0,KES:!0,ARS:!0,RUB:!0,AUD:!0,NOK:!0,CZK:!0,GBP:!0,UAH:!0,GHS:!0,HKD:!0,CAD:!0,INR:!0,JPY:!0,NZD:!0},legalMoneyCurrenciesById:{BUSD:"USD"}},features:{spot:{sandbox:!0,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!1,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!0,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!0,selfTradePrevention:!0,trailing:!0,iceberg:!0},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:1e3,daysBack:void 0,untilDays:1},fetchOrder:{marginMode:!0,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!0,limit:1e3,daysBack:void 0,untilDays:1e4,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!0,limit:1e3,daysBack:void 0,daysBackCanceled:void 0,untilDays:1e4,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:{mark:!0,last:!0,index:!1},stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!0},hedged:!0,selfTradePrevention:!0,trailing:!0,iceberg:!1,leverage:!1,marketBuyRequiresPrice:!1,marketBuyByCost:!0},createOrders:{max:5},fetchMyTrades:{marginMode:!1,daysBack:void 0,limit:1e3,untilDays:7},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!0,limit:500,trigger:!1,trailing:!1},fetchOrders:{marginMode:!0,limit:1e3,daysBack:90,untilDays:7,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!0,limit:1e3,daysBack:90,daysBackCanceled:3,untilDays:7,trigger:!1,trailing:!1},fetchOHLCV:{limit:1500}},swap:{linear:{extends:"default"},inverse:{extends:"default"}},future:{linear:{extends:"default"},inverse:{extends:"default"}}},exceptions:{spot:{exact:{"-1004":s.OperationFailed,"-1008":s.OperationFailed,"-1099":s.AuthenticationError,"-1108":s.BadRequest,"-1131":s.BadRequest,"-1134":s.BadRequest,"-1135":s.BadRequest,"-1145":s.BadRequest,"-1151":s.BadSymbol,"-2008":s.AuthenticationError,"-2016":s.OperationRejected,"-2021":s.BadResponse,"-2022":s.BadResponse,"-2026":s.InvalidOrder,"-3000":s.OperationFailed,"-3001":s.AuthenticationError,"-3002":s.BadSymbol,"-3003":s.BadRequest,"-3004":s.OperationRejected,"-3005":s.BadRequest,"-3006":s.BadRequest,"-3007":s.OperationFailed,"-3008":s.BadRequest,"-3009":s.OperationRejected,"-3010":s.BadRequest,"-3011":s.BadRequest,"-3012":s.OperationRejected,"-3013":s.BadRequest,"-3014":s.AccountSuspended,"-3015":s.BadRequest,"-3016":s.BadRequest,"-3017":s.OperationRejected,"-3018":s.AccountSuspended,"-3019":s.AccountSuspended,"-3020":s.BadRequest,"-3021":s.BadRequest,"-3022":s.AccountSuspended,"-3023":s.OperationRejected,"-3024":s.OperationRejected,"-3025":s.BadRequest,"-3026":s.BadRequest,"-3027":s.BadSymbol,"-3028":s.BadSymbol,"-3029":s.OperationFailed,"-3036":s.AccountSuspended,"-3037":s.OperationFailed,"-3038":s.BadRequest,"-3041":s.InsufficientFunds,"-3042":s.BadRequest,"-3043":s.PermissionDenied,"-3044":s.OperationFailed,"-3045":s.OperationRejected,"-3999":s.PermissionDenied,"-4000":s.ExchangeError,"-4001":s.BadRequest,"-4002":s.BadRequest,"-4003":s.BadRequest,"-4004":s.AuthenticationError,"-4005":s.RateLimitExceeded,"-4006":s.BadRequest,"-4007":s.PermissionDenied,"-4008":s.PermissionDenied,"-4009":s.ExchangeError,"-4010":s.PermissionDenied,"-4011":s.BadRequest,"-4012":s.PermissionDenied,"-4013":s.AuthenticationError,"-4014":s.OperationRejected,"-4015":s.PermissionDenied,"-4016":s.PermissionDenied,"-4017":s.PermissionDenied,"-4018":s.BadSymbol,"-4019":s.BadRequest,"-4020":s.ExchangeError,"-4021":s.BadRequest,"-4022":s.BadRequest,"-4023":s.OperationRejected,"-4024":s.InsufficientFunds,"-4025":s.InsufficientFunds,"-4026":s.InsufficientFunds,"-4027":s.OperationFailed,"-4028":s.BadRequest,"-4029":s.BadRequest,"-4030":s.BadResponse,"-4031":s.OperationFailed,"-4032":s.OperationRejected,"-4033":s.BadRequest,"-4034":s.OperationRejected,"-4035":s.PermissionDenied,"-4036":s.PermissionDenied,"-4037":s.OperationFailed,"-4038":s.OperationFailed,"-4039":s.PermissionDenied,"-4040":s.OperationRejected,"-4041":s.OperationFailed,"-4042":s.OperationRejected,"-4043":s.OperationRejected,"-4044":s.PermissionDenied,"-4045":s.OperationFailed,"-4046":s.AuthenticationError,"-4047":s.BadRequest,"-4048":s.ExchangeError,"-4049":s.ExchangeError,"-4050":s.ExchangeError,"-4051":s.ExchangeError,"-4052":s.ExchangeError,"-4053":s.ExchangeError,"-4054":s.ExchangeError,"-4055":s.ExchangeError,"-4056":s.ExchangeError,"-4057":s.ExchangeError,"-4058":s.ExchangeError,"-4059":s.ExchangeError,"-4060":s.OperationFailed,"-4061":s.ExchangeError,"-4062":s.ExchangeError,"-4063":s.ExchangeError,"-4064":s.ExchangeError,"-4065":s.ExchangeError,"-4066":s.ExchangeError,"-4067":s.ExchangeError,"-4068":s.ExchangeError,"-4069":s.ExchangeError,"-4070":s.ExchangeError,"-4071":s.ExchangeError,"-4072":s.ExchangeError,"-4073":s.ExchangeError,"-4074":s.ExchangeError,"-4075":s.ExchangeError,"-4076":s.ExchangeError,"-4077":s.ExchangeError,"-4078":s.ExchangeError,"-4079":s.ExchangeError,"-4080":s.ExchangeError,"-4081":s.ExchangeError,"-4082":s.ExchangeError,"-4083":s.ExchangeError,"-4084":s.ExchangeError,"-4085":s.ExchangeError,"-4086":s.ExchangeError,"-4087":s.ExchangeError,"-4088":s.ExchangeError,"-4089":s.ExchangeError,"-4091":s.ExchangeError,"-4092":s.ExchangeError,"-4093":s.ExchangeError,"-4094":s.ExchangeError,"-4095":s.ExchangeError,"-4096":s.ExchangeError,"-4097":s.ExchangeError,"-4098":s.ExchangeError,"-4099":s.ExchangeError,"-4101":s.ExchangeError,"-4102":s.ExchangeError,"-4103":s.ExchangeError,"-4104":s.ExchangeError,"-4105":s.ExchangeError,"-4106":s.ExchangeError,"-4107":s.ExchangeError,"-4108":s.ExchangeError,"-4109":s.ExchangeError,"-4110":s.ExchangeError,"-4112":s.ExchangeError,"-4113":s.ExchangeError,"-4114":s.ExchangeError,"-4115":s.ExchangeError,"-4116":s.ExchangeError,"-4117":s.ExchangeError,"-4118":s.ExchangeError,"-4119":s.ExchangeError,"-4120":s.ExchangeError,"-4121":s.ExchangeError,"-4122":s.ExchangeError,"-4123":s.ExchangeError,"-4124":s.ExchangeError,"-4125":s.ExchangeError,"-4126":s.ExchangeError,"-4127":s.ExchangeError,"-4128":s.ExchangeError,"-4129":s.ExchangeError,"-4130":s.ExchangeError,"-4131":s.ExchangeError,"-4132":s.ExchangeError,"-4133":s.ExchangeError,"-4134":s.ExchangeError,"-4135":s.ExchangeError,"-4136":s.ExchangeError,"-4137":s.ExchangeError,"-4138":s.ExchangeError,"-4139":s.ExchangeError,"-4141":s.ExchangeError,"-4142":s.ExchangeError,"-4143":s.ExchangeError,"-4144":s.ExchangeError,"-4145":s.ExchangeError,"-4146":s.ExchangeError,"-4147":s.ExchangeError,"-4148":s.ExchangeError,"-4149":s.ExchangeError,"-4150":s.ExchangeError,"-5001":s.BadRequest,"-5002":s.InsufficientFunds,"-5003":s.InsufficientFunds,"-5004":s.OperationRejected,"-5005":s.OperationRejected,"-5006":s.OperationRejected,"-5007":s.BadRequest,"-5008":s.OperationRejected,"-5009":s.BadSymbol,"-5010":s.OperationFailed,"-5011":s.BadRequest,"-5012":s.OperationFailed,"-5013":s.InsufficientFunds,"-5021":s.BadRequest,"-5022":s.BadRequest,"-6001":s.BadSymbol,"-6003":s.PermissionDenied,"-6004":s.BadRequest,"-6005":s.BadRequest,"-6006":s.BadRequest,"-6007":s.OperationRejected,"-6008":s.OperationRejected,"-6009":s.RateLimitExceeded,"-6011":s.OperationRejected,"-6012":s.InsufficientFunds,"-6013":s.BadResponse,"-6014":s.OperationRejected,"-6015":s.BadRequest,"-6016":s.BadRequest,"-6017":s.PermissionDenied,"-6018":s.InsufficientFunds,"-6019":s.OperationRejected,"-6020":s.BadRequest,"-7001":s.BadRequest,"-7002":s.BadRequest,"-10001":s.OperationFailed,"-10002":s.BadRequest,"-10005":s.BadResponse,"-10007":s.BadRequest,"-10008":s.BadRequest,"-10009":s.BadRequest,"-10010":s.BadRequest,"-10011":s.InsufficientFunds,"-10012":s.BadRequest,"-10013":s.InsufficientFunds,"-10015":s.OperationFailed,"-10016":s.OperationFailed,"-10017":s.OperationRejected,"-10018":s.BadRequest,"-10019":s.BadRequest,"-10020":s.BadRequest,"-10021":s.InvalidOrder,"-10022":s.BadRequest,"-10023":s.OperationFailed,"-10024":s.BadRequest,"-10025":s.OperationFailed,"-10026":s.BadRequest,"-10028":s.BadRequest,"-10029":s.OperationRejected,"-10030":s.OperationRejected,"-10031":s.OperationRejected,"-10032":s.OperationFailed,"-10034":s.OperationRejected,"-10039":s.OperationRejected,"-10040":s.OperationRejected,"-10041":s.OperationFailed,"-10042":s.BadSymbol,"-10043":s.OperationRejected,"-10044":s.OperationRejected,"-10045":s.OperationRejected,"-10046":s.OperationRejected,"-10047":s.PermissionDenied,"-11008":s.OperationRejected,"-12014":s.RateLimitExceeded,"-13000":s.OperationRejected,"-13001":s.OperationRejected,"-13002":s.OperationRejected,"-13003":s.PermissionDenied,"-13004":s.OperationRejected,"-13005":s.OperationRejected,"-13006":s.OperationRejected,"-13007":s.PermissionDenied,"-18002":s.OperationRejected,"-18003":s.OperationRejected,"-18004":s.OperationRejected,"-18005":s.PermissionDenied,"-18006":s.OperationRejected,"-18007":s.OperationRejected,"-21001":s.BadRequest,"-21002":s.BadRequest,"-21003":s.BadResponse,"-21004":s.OperationRejected,"-21005":s.InsufficientFunds,"-21006":s.OperationFailed,"-21007":s.OperationFailed,"-32603":s.BadRequest,400002:s.BadRequest,0x5f5e4eb:s.AuthenticationError,0xbebd13f:s.AuthenticationError}},linear:{exact:{"-1005":s.PermissionDenied,"-1008":s.OperationFailed,"-1011":s.PermissionDenied,"-1023":s.BadRequest,"-1099":s.AuthenticationError,"-1109":s.PermissionDenied,"-1110":s.BadRequest,"-1113":s.BadRequest,"-1122":s.BadRequest,"-1126":s.BadSymbol,"-1136":s.BadRequest,"-2012":s.OperationFailed,"-2016":s.OperationRejected,"-2017":s.PermissionDenied,"-2018":s.InsufficientFunds,"-2019":s.InsufficientFunds,"-2020":s.OperationFailed,"-2021":s.OrderImmediatelyFillable,"-2022":s.InvalidOrder,"-2023":s.OperationFailed,"-2024":s.InsufficientFunds,"-2025":s.OperationRejected,"-2026":s.InvalidOrder,"-2027":s.OperationRejected,"-2028":s.OperationRejected,"-4063":s.BadRequest,"-4064":s.BadRequest,"-4065":s.BadRequest,"-4066":s.BadRequest,"-4069":s.BadRequest,"-4070":s.BadRequest,"-4071":s.BadRequest,"-4072":s.OperationRejected,"-4073":s.BadRequest,"-4074":s.OperationRejected,"-4075":s.BadRequest,"-4076":s.OperationRejected,"-4077":s.OperationRejected,"-4078":s.OperationFailed,"-4079":s.BadRequest,"-4080":s.PermissionDenied,"-4081":s.BadRequest,"-4085":s.BadRequest,"-4087":s.PermissionDenied,"-4088":s.PermissionDenied,"-4114":s.BadRequest,"-4115":s.BadRequest,"-4116":s.InvalidOrder,"-4117":s.OperationRejected,"-4118":s.OperationRejected,"-4131":s.OperationRejected,"-4140":s.BadRequest,"-4141":s.OperationRejected,"-4144":s.BadSymbol,"-4164":s.InvalidOrder,"-4136":s.InvalidOrder,"-4165":s.BadRequest,"-4167":s.BadRequest,"-4168":s.BadRequest,"-4169":s.OperationRejected,"-4170":s.OperationRejected,"-4171":s.OperationRejected,"-4172":s.OperationRejected,"-4183":s.BadRequest,"-4184":s.BadRequest,"-4192":s.PermissionDenied,"-4202":s.PermissionDenied,"-4203":s.PermissionDenied,"-4205":s.PermissionDenied,"-4206":s.PermissionDenied,"-4208":s.OperationRejected,"-4209":s.OperationRejected,"-4210":s.BadRequest,"-4211":s.BadRequest,"-4400":s.PermissionDenied,"-4401":s.PermissionDenied,"-4402":s.PermissionDenied,"-4403":s.PermissionDenied,"-5021":s.OrderNotFillable,"-5022":s.OrderNotFillable,"-5024":s.OperationRejected,"-5025":s.OperationRejected,"-5026":s.OperationRejected,"-5027":s.OperationRejected,"-5028":s.BadRequest,"-5037":s.BadRequest,"-5038":s.BadRequest,"-5039":s.BadRequest,"-5040":s.BadRequest,"-5041":s.OperationFailed}},inverse:{exact:{"-1005":s.PermissionDenied,"-1011":s.PermissionDenied,"-1023":s.BadRequest,"-1109":s.AuthenticationError,"-1110":s.BadSymbol,"-1113":s.BadRequest,"-1128":s.BadRequest,"-1136":s.BadRequest,"-2016":s.OperationRejected,"-2018":s.InsufficientFunds,"-2019":s.InsufficientFunds,"-2020":s.OperationFailed,"-2021":s.OrderImmediatelyFillable,"-2022":s.InvalidOrder,"-2023":s.OperationFailed,"-2024":s.BadRequest,"-2025":s.OperationRejected,"-2026":s.InvalidOrder,"-2027":s.OperationRejected,"-2028":s.OperationRejected,"-4086":s.BadRequest,"-4087":s.BadSymbol,"-4088":s.BadRequest,"-4089":s.PermissionDenied,"-4090":s.PermissionDenied,"-4110":s.BadRequest,"-4111":s.BadRequest,"-4112":s.OperationRejected,"-4113":s.OperationRejected,"-4150":s.OperationRejected,"-4151":s.BadRequest,"-4152":s.BadRequest,"-4154":s.BadRequest,"-4155":s.BadRequest,"-4178":s.BadRequest,"-4188":s.BadRequest,"-4192":s.PermissionDenied,"-4194":s.PermissionDenied,"-4195":s.PermissionDenied,"-4196":s.BadRequest,"-4197":s.OperationRejected,"-4198":s.OperationRejected,"-4199":s.BadRequest,"-4200":s.PermissionDenied,"-4201":s.PermissionDenied,"-4202":s.OperationRejected}},option:{exact:{"-1003":s.ExchangeError,"-1004":s.ExchangeError,"-1006":s.ExchangeError,"-1007":s.ExchangeError,"-1008":s.RateLimitExceeded,"-1010":s.ExchangeError,"-1013":s.ExchangeError,"-1108":s.ExchangeError,"-1112":s.ExchangeError,"-1114":s.ExchangeError,"-1128":s.BadSymbol,"-1129":s.BadSymbol,"-1131":s.BadRequest,"-2011":s.ExchangeError,"-2018":s.InsufficientFunds,"-2027":s.InsufficientFunds,"-3029":s.OperationFailed,"-4006":s.ExchangeError,"-4007":s.ExchangeError,"-4008":s.ExchangeError,"-4009":s.ExchangeError,"-4010":s.ExchangeError,"-4011":s.ExchangeError,"-4012":s.ExchangeError,"-4014":s.ExchangeError,"-4015":s.ExchangeError,"-4016":s.ExchangeError,"-4017":s.ExchangeError,"-4018":s.ExchangeError,"-4019":s.ExchangeError,"-4020":s.ExchangeError,"-4021":s.ExchangeError,"-4022":s.ExchangeError,"-4023":s.ExchangeError,"-4024":s.ExchangeError,"-4025":s.ExchangeError,"-4026":s.ExchangeError,"-4027":s.ExchangeError,"-4028":s.ExchangeError,"-4031":s.ExchangeError,"-4032":s.ExchangeError,"-4033":s.ExchangeError,"-4034":s.ExchangeError,"-4035":s.ExchangeError,"-4036":s.ExchangeError,"-4037":s.ExchangeError,"-4038":s.ExchangeError,"-4039":s.ExchangeError,"-4040":s.ExchangeError,"-4041":s.ExchangeError,"-4042":s.ExchangeError,"-4043":s.ExchangeError,"-4044":s.ExchangeError,"-4045":s.ExchangeError,"-4046":s.ExchangeError,"-4047":s.ExchangeError,"-4048":s.ExchangeError,"-4049":s.ExchangeError,"-4050":s.ExchangeError,"-4051":s.ExchangeError,"-4052":s.ExchangeError,"-4053":s.ExchangeError,"-4054":s.ExchangeError,"-4056":s.ExchangeError,"-4057":s.ExchangeError,"-4058":s.ExchangeError,"-4059":s.ExchangeError,"-4060":s.ExchangeError,"-4061":s.ExchangeError,"-4062":s.ExchangeError,"-4063":s.ExchangeError,"-4064":s.ExchangeError,"-4065":s.ExchangeError,"-4066":s.ExchangeError,"-4067":s.ExchangeError,"-4068":s.ExchangeError,"-4069":s.ExchangeError,"-4070":s.ExchangeError,"-4071":s.ExchangeError,"-4072":s.ExchangeError,"-4073":s.ExchangeError,"-4074":s.ExchangeError,"-4075":s.ExchangeError,"-4076":s.ExchangeError,"-4077":s.ExchangeError,"-4078":s.ExchangeError,"-4079":s.ExchangeError,"-4080":s.ExchangeError,"-4081":s.ExchangeError,"-4082":s.ExchangeError,"-4083":s.ExchangeError,"-4084":s.ExchangeError,"-4085":s.ExchangeError,"-4086":s.ExchangeError,"-4087":s.ExchangeError,"-4088":s.ExchangeError,"-4089":s.ExchangeError,"-4091":s.ExchangeError,"-4092":s.ExchangeError,"-4093":s.ExchangeError,"-4094":s.ExchangeError,"-4095":s.ExchangeError,"-4096":s.ExchangeError,"-4097":s.ExchangeError,"-4098":s.ExchangeError,"-4099":s.ExchangeError,"-4101":s.ExchangeError,"-4102":s.ExchangeError,"-4103":s.ExchangeError,"-4104":s.ExchangeError,"-4105":s.ExchangeError,"-4106":s.ExchangeError,"-4107":s.ExchangeError,"-4108":s.ExchangeError,"-4109":s.ExchangeError,"-4110":s.ExchangeError,"-4112":s.ExchangeError,"-4113":s.ExchangeError,"-4114":s.ExchangeError,"-4115":s.ExchangeError,"-4116":s.ExchangeError,"-4117":s.ExchangeError,"-4118":s.ExchangeError,"-4119":s.ExchangeError,"-4120":s.ExchangeError,"-4121":s.ExchangeError,"-4122":s.ExchangeError,"-4123":s.ExchangeError,"-4124":s.ExchangeError,"-4125":s.ExchangeError,"-4126":s.ExchangeError,"-4127":s.ExchangeError,"-4128":s.ExchangeError,"-4129":s.ExchangeError,"-4130":s.ExchangeError,"-4131":s.ExchangeError,"-4132":s.ExchangeError,"-4133":s.ExchangeError,"-4134":s.ExchangeError,"-4135":s.ExchangeError,"-4136":s.ExchangeError,"-4137":s.ExchangeError,"-4138":s.ExchangeError,"-4139":s.ExchangeError,"-4141":s.ExchangeError,"-4142":s.ExchangeError,"-4143":s.ExchangeError,"-4144":s.ExchangeError,"-4145":s.ExchangeError,"-4146":s.ExchangeError,"-4147":s.ExchangeError,"-4148":s.ExchangeError,"-4149":s.ExchangeError,"-4150":s.ExchangeError,"-20121":s.ExchangeError,"-20124":s.ExchangeError,"-20130":s.ExchangeError,"-20132":s.ExchangeError,"-20194":s.ExchangeError,"-20195":s.ExchangeError,"-20196":s.ExchangeError,"-20198":s.ExchangeError,"-20204":s.ExchangeError}},portfolioMargin:{exact:{"-1000":s.OperationFailed,"-1001":s.ExchangeError,"-1002":s.PermissionDenied,"-1003":s.RateLimitExceeded,"-1004":s.BadRequest,"-1005":s.PermissionDenied,"-1006":s.BadResponse,"-1007":s.BadResponse,"-1008":s.OperationFailed,"-1010":s.ExchangeError,"-1011":s.PermissionDenied,"-1013":s.ExchangeError,"-1014":s.InvalidOrder,"-1015":s.InvalidOrder,"-1016":s.NotSupported,"-1020":s.NotSupported,"-1021":s.BadRequest,"-1022":s.BadRequest,"-1023":s.BadRequest,"-1099":s.OperationFailed,"-1100":s.BadRequest,"-1101":s.BadRequest,"-1102":s.BadRequest,"-1103":s.BadRequest,"-1104":s.BadRequest,"-1105":s.BadRequest,"-1106":s.BadRequest,"-1108":s.BadRequest,"-1109":s.BadRequest,"-1110":s.BadSymbol,"-1111":s.BadRequest,"-1112":s.BadRequest,"-1113":s.BadRequest,"-1114":s.BadRequest,"-1115":s.BadRequest,"-1116":s.BadRequest,"-1117":s.BadRequest,"-1118":s.BadRequest,"-1119":s.BadRequest,"-1120":s.BadRequest,"-1121":s.BadSymbol,"-1125":s.BadRequest,"-1127":s.BadRequest,"-1128":s.BadRequest,"-1130":s.BadRequest,"-1131":s.BadRequest,"-1134":s.BadRequest,"-1136":s.BadRequest,"-1145":s.BadRequest,"-1151":s.BadRequest,"-2010":s.InvalidOrder,"-2011":s.OperationRejected,"-2013":s.OrderNotFound,"-2014":s.OperationRejected,"-2015":s.OperationRejected,"-2016":s.OperationFailed,"-2018":s.OperationFailed,"-2019":s.OperationFailed,"-2020":s.OrderNotFillable,"-2021":s.OrderImmediatelyFillable,"-2022":s.InvalidOrder,"-2023":s.OperationFailed,"-2024":s.OperationRejected,"-2025":s.OperationRejected,"-2026":s.InvalidOrder,"-2027":s.OperationRejected,"-2028":s.OperationRejected,"-4000":s.BadRequest,"-4001":s.BadRequest,"-4002":s.BadRequest,"-4003":s.BadRequest,"-4004":s.BadRequest,"-4005":s.BadRequest,"-4006":s.BadRequest,"-4007":s.BadRequest,"-4008":s.BadRequest,"-4009":s.BadRequest,"-4010":s.BadRequest,"-4011":s.BadRequest,"-4012":s.BadRequest,"-4013":s.BadRequest,"-4014":s.BadRequest,"-4015":s.BadRequest,"-4016":s.BadRequest,"-4017":s.BadRequest,"-4018":s.BadRequest,"-4019":s.BadRequest,"-4020":s.BadRequest,"-4021":s.BadRequest,"-4022":s.BadRequest,"-4023":s.BadRequest,"-4024":s.BadRequest,"-4025":s.BadRequest,"-4026":s.BadRequest,"-4027":s.BadRequest,"-4028":s.BadRequest,"-4029":s.BadRequest,"-4030":s.BadRequest,"-4031":s.BadRequest,"-4032":s.BadRequest,"-4033":s.BadRequest,"-4044":s.BadRequest,"-4045":s.BadRequest,"-4046":s.BadRequest,"-4047":s.BadRequest,"-4048":s.BadRequest,"-4049":s.BadRequest,"-4050":s.BadRequest,"-4051":s.BadRequest,"-4052":s.BadRequest,"-4053":s.BadRequest,"-4054":s.BadRequest,"-4055":s.BadRequest,"-4056":s.PermissionDenied,"-4057":s.PermissionDenied,"-4058":s.BadRequest,"-4059":s.BadRequest,"-4060":s.BadRequest,"-4061":s.InvalidOrder,"-4062":s.BadRequest,"-4063":s.BadRequest,"-4064":s.BadRequest,"-4065":s.BadRequest,"-4066":s.BadRequest,"-4067":s.BadRequest,"-4068":s.BadRequest,"-4069":s.BadRequest,"-4070":s.BadRequest,"-4071":s.BadRequest,"-4072":s.OperationRejected,"-4073":s.BadRequest,"-4074":s.BadRequest,"-4075":s.BadRequest,"-4076":s.OperationRejected,"-4077":s.OperationRejected,"-4078":s.OperationFailed,"-4079":s.BadRequest,"-4080":s.PermissionDenied,"-4081":s.BadRequest,"-4082":s.BadRequest,"-4083":s.BadRequest,"-4084":s.NotSupported,"-4085":s.BadRequest,"-4086":s.BadRequest,"-4087":s.PermissionDenied,"-4088":s.PermissionDenied,"-4104":s.BadRequest,"-4114":s.BadRequest,"-4115":s.BadRequest,"-4118":s.OperationRejected,"-4131":s.OperationRejected,"-4135":s.BadRequest,"-4137":s.BadRequest,"-4138":s.BadRequest,"-4139":s.BadRequest,"-4140":s.OrderImmediatelyFillable,"-4141":s.BadRequest,"-4142":s.OrderImmediatelyFillable,"-4144":s.BadSymbol,"-4161":s.OperationRejected,"-4164":s.InvalidOrder,"-4165":s.BadRequest,"-4183":s.InvalidOrder,"-4184":s.InvalidOrder,"-4408":s.InvalidOrder,"-5021":s.OrderNotFillable,"-5022":s.OrderNotFillable,"-5028":s.OperationFailed,"-5041":s.RateLimitExceeded}},exact:{"-1000":s.OperationFailed,"-1001":s.OperationFailed,"-1002":s.AuthenticationError,"-1003":s.RateLimitExceeded,"-1004":s.OperationRejected,"-1006":s.OperationFailed,"-1007":s.RequestTimeout,"-1010":s.OperationFailed,"-1013":s.BadRequest,"-1014":s.InvalidOrder,"-1015":s.RateLimitExceeded,"-1016":s.BadRequest,"-1020":s.BadRequest,"-1021":s.InvalidNonce,"-1022":s.AuthenticationError,"-1100":s.BadRequest,"-1101":s.BadRequest,"-1102":s.BadRequest,"-1103":s.BadRequest,"-1104":s.BadRequest,"-1105":s.BadRequest,"-1106":s.BadRequest,"-1108":s.BadSymbol,"-1111":s.BadRequest,"-1112":s.OperationFailed,"-1114":s.BadRequest,"-1115":s.BadRequest,"-1116":s.BadRequest,"-1117":s.BadRequest,"-1118":s.BadRequest,"-1119":s.BadRequest,"-1120":s.BadRequest,"-1121":s.BadSymbol,"-1125":s.AuthenticationError,"-1127":s.BadRequest,"-1128":s.BadRequest,"-1130":s.BadRequest,"-2010":s.InvalidOrder,"-2011":s.OrderNotFound,"-2013":s.OrderNotFound,"-2014":s.AuthenticationError,"-2015":s.AuthenticationError,"-4000":s.InvalidOrder,"-4001":s.BadRequest,"-4002":s.BadRequest,"-4003":s.BadRequest,"-4004":s.BadRequest,"-4005":s.BadRequest,"-4006":s.BadRequest,"-4007":s.BadRequest,"-4008":s.BadRequest,"-4009":s.BadRequest,"-4010":s.BadRequest,"-4011":s.BadRequest,"-4012":s.BadRequest,"-4013":s.BadRequest,"-4014":s.BadRequest,"-4015":s.BadRequest,"-4016":s.BadRequest,"-4017":s.BadRequest,"-4018":s.BadRequest,"-4019":s.OperationRejected,"-4020":s.BadRequest,"-4021":s.BadRequest,"-4022":s.BadRequest,"-4023":s.BadRequest,"-4024":s.BadRequest,"-4025":s.BadRequest,"-4026":s.BadRequest,"-4027":s.BadRequest,"-4028":s.BadRequest,"-4029":s.BadRequest,"-4030":s.BadRequest,"-4031":s.BadRequest,"-4032":s.OperationRejected,"-4033":s.BadRequest,"-4044":s.BadRequest,"-4045":s.OperationRejected,"-4046":s.OperationRejected,"-4047":s.OperationRejected,"-4048":s.OperationRejected,"-4049":s.BadRequest,"-4050":s.InsufficientFunds,"-4051":s.InsufficientFunds,"-4052":s.OperationRejected,"-4053":s.BadRequest,"-4054":s.OperationRejected,"-4055":s.BadRequest,"-4056":s.AuthenticationError,"-4057":s.AuthenticationError,"-4058":s.BadRequest,"-4059":s.OperationRejected,"-4060":s.BadRequest,"-4061":s.OperationRejected,"-4062":s.BadRequest,"-4067":s.OperationRejected,"-4068":s.OperationRejected,"-4082":s.BadRequest,"-4083":s.OperationRejected,"-4084":s.BadRequest,"-4086":s.BadRequest,"-4104":s.BadRequest,"-4135":s.BadRequest,"-4137":s.BadRequest,"-4138":s.BadRequest,"-4139":s.BadRequest,"-4142":s.OrderImmediatelyFillable,"-20121":s.BadSymbol,"-20124":s.BadRequest,"-20130":s.BadRequest,"-20132":s.BadRequest,"-20194":s.BadRequest,"-20195":s.BadRequest,"-20196":s.BadRequest,"-20198":s.OperationRejected,"-20204":s.BadRequest,"System is under maintenance.":s.OnMaintenance,"System abnormality":s.OperationFailed,"You are not authorized to execute this request.":s.PermissionDenied,"API key does not exist":s.AuthenticationError,"Order would trigger immediately.":s.OrderImmediatelyFillable,"Stop price would trigger immediately.":s.OrderImmediatelyFillable,"Order would immediately match and take.":s.OrderImmediatelyFillable,"Account has insufficient balance for requested action.":s.InsufficientFunds,"Rest API trading is not enabled.":s.PermissionDenied,"This account may not place or cancel orders.":s.PermissionDenied,"You don't have permission.":s.PermissionDenied,"Market is closed.":s.MarketClosed,"Too many requests. Please try again later.":s.RateLimitExceeded,"This action is disabled on this account.":s.AccountSuspended,"Limit orders require GTC for this phase.":s.BadRequest,"This order type is not possible in this trading phase.":s.BadRequest,"This type of sub-account exceeds the maximum number limit":s.OperationRejected,"This symbol is restricted for this account.":s.PermissionDenied,"This symbol is not permitted for this account.":s.PermissionDenied},broad:{"has no operation privilege":s.PermissionDenied,MAX_POSITION:s.BadRequest}}})}isInverse(e,t){return void 0===t?"delivery"===e:"inverse"===t}isLinear(e,t){return void 0===t?"future"===e||"swap"===e:"linear"===t}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}createExpiredOptionMarket(e){let t;let i="USDT",r=e.split("-"),s=e.split("/");t=e.indexOf("/")>-1?this.safeString(s,0):this.safeString(r,0);let a=this.safeString(r,1),n=this.safeInteger(r,2),o=this.safeString(r,2),d=this.safeString(r,3),h=this.convertExpireDate(a);return{id:t+"-"+a+"-"+o+"-"+d,symbol:t+"/"+i+":"+i+"-"+a+"-"+o+"-"+d,base:t,quote:i,baseId:t,quoteId:i,active:void 0,type:"option",linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!0,margin:!1,contract:!0,contractSize:void 0,expiry:this.parse8601(h),expiryDatetime:h,optionType:"C"===d?"call":"put",strike:n,settle:i,settleId:i,precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0}}market(e){if(void 0===this.markets)throw new s.ExchangeError(this.id+" markets not loaded");let t=this.safeString(this.options,"defaultType"),i=this.safeString(this.options,"defaultSubType"),r="future"===t,a="delivery"===t;if("string"==typeof e){if(e in this.markets){let t=this.markets[e];if(!r&&!a||!t.spot)return t;{let i=e+":"+(r?t.quote:t.base);if(i in this.markets)return this.markets[i]}}else if(e in this.markets_by_id){let s=this.markets_by_id[e];r?t="linear":a?t="inverse":void 0===t&&(t=i);for(let e=0;e<s.length;e++){let i=s[e];if(i[t])return i}return s[0]}else if(e.indexOf("/")>-1&&0>e.indexOf(":")){let[t,i]=e.split("/"),r=e+":"+("USD"===i?t:i);if(r in this.markets)return this.markets[r]}else if(e.indexOf("-C")>-1||e.indexOf("-P")>-1)return this.createExpiredOptionMarket(e)}throw new s.BadSymbol(this.id+" does not have market symbol "+e)}safeMarket(e,t,i,r){return void 0!==e&&(e.indexOf("-C")>-1||e.indexOf("-P")>-1)&&!(e in this.markets_by_id)?this.createExpiredOptionMarket(e):super.safeMarket(e,t,i,r)}costToPrecision(e,t){return this.decimalToPrecision(t,n.R3,this.markets[e].precision.quote,this.precisionMode,this.paddingMode)}currencyToPrecision(e,t,i){return void 0!==this.safeValue(this.currencies[e],"precision")?this.decimalToPrecision(t,n.R3,this.currencies[e].precision,this.precisionMode,this.paddingMode):this.numberToString(t)}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){let t,i;let r=this.safeString2(this.options,"fetchTime","defaultType","spot"),s=this.safeString(e,"type",r),a=this.omit(e,"type");return[t,e]=this.handleSubTypeAndParams("fetchTime",void 0,e),i=this.isLinear(s,t)?await this.fapiPublicGetTime(a):this.isInverse(s,t)?await this.dapiPublicGetTime(a):await this.publicGetTime(a),this.safeInteger(i,"serverTime")}async fetchCurrencies(e={}){let t;if(!this.safeBool(this.options,"fetchCurrencies")||!this.checkRequiredCredentials(!1)||void 0!==this.safeValue(this.urls,"apiBackup"))return;let i=[this.sapiGetCapitalConfigGetall(e)],r=this.safeBool(this.options,"fetchMargins",!1);r&&i.push(this.sapiGetMarginAllPairs(e));let s=await Promise.all(i),n=s[0];if(r){let e=s[1];t=this.indexBy(e,"assetName")}let o={};for(let e=0;e<n.length;e++){let i,r;let s=n[e],d=this.safeString(s,"coin"),h=this.safeString(s,"name"),c=this.safeCurrencyCode(d),l=!0,p=!0,u=this.safeList(s,"networkList",[]),m={},f={};for(let e=0;e<u.length;e++){let t=u[e],s=this.safeString(t,"network"),n=this.networkIdToCode(s),o=this.safeNumber(t,"withdrawFee"),d=this.safeBool(t,"depositEnable"),h=this.safeBool(t,"withdrawEnable");p=p||d,l=l||h,m[s]=o,(this.safeBool(t,"isDefault")||void 0===r)&&(r=o);let c=this.safeString(t,"withdrawIntegerMultiple");a.Y.stringEq(c,"0")||(i=void 0===i?c:a.Y.stringMin(i,c)),f[n]={info:t,id:s,network:n,active:d&&h,deposit:d,withdraw:h,fee:o,precision:this.parseNumber(c),limits:{withdraw:{min:this.safeNumber(t,"withdrawMin"),max:this.safeNumber(t,"withdrawMax")},deposit:{min:this.safeNumber(t,"depositDust"),max:void 0}}}}let g=this.safeBool(s,"trading"),y=l&&p&&g,b=this.safeDict(t,d,{});o[c]={id:d,name:h,code:c,precision:this.parseNumber(i),info:s,active:y,deposit:p,withdraw:l,networks:f,fee:r,fees:m,limits:this.limits,margin:this.safeBool(b,"isBorrowable")}}return o}async fetchMarkets(e={}){let t=[],i=this.safeList(this.options,"fetchMarkets",["spot","linear","inverse"]),r=this.safeBool(this.options,"sandboxMode",!1),a=[];for(let e=0;e<i.length;e++){let t=i[e];"option"===t&&r||a.push(t)}let n=this.safeBool(this.options,"fetchMargins",!1);for(let i=0;i<a.length;i++){let o=a[i];if("spot"===o)t.push(this.publicGetExchangeInfo(e)),n&&this.checkRequiredCredentials(!1)&&!r&&(t.push(this.sapiGetMarginAllPairs(e)),t.push(this.sapiGetMarginIsolatedAllPairs(e)));else if("linear"===o)t.push(this.fapiPublicGetExchangeInfo(e));else if("inverse"===o)t.push(this.dapiPublicGetExchangeInfo(e));else if("option"===o)t.push(this.eapiPublicGetExchangeInfo(e));else throw new s.ExchangeError(this.id+' fetchMarkets() this.options fetchMarkets "'+o+'" is not a supported market type')}let o=await Promise.all(t),d=[];this.options.crossMarginPairsData=[],this.options.isolatedMarginPairsData=[];for(let e=0;e<o.length;e++){let t=this.safeValue(o,e);if(n&&Array.isArray(t)){let e=Object.keys(this.indexBy(t,"symbol"));0===this.options.crossMarginPairsData.length?this.options.crossMarginPairsData=e:this.options.isolatedMarginPairsData=e}else{let e=this.safeList2(t,"symbols","optionSymbols",[]);d=this.arrayConcat(d,e)}}this.options.adjustForTimeDifference&&await this.loadTimeDifference();let h=[];for(let e=0;e<d.length;e++)h.push(this.parseMarket(d[e]));return h}parseMarket(e){let t,i,r,s,a,n,o,d=!1,h=!1,c=!1,l=this.safeString(e,"underlying"),p=this.safeString(e,"symbol"),u=p.split("-"),m=this.safeString(u,0),f=this.safeStringLower(e,"symbol"),g=this.safeString(e,"baseAsset",m),y=this.safeString(e,"quoteAsset"),b=this.safeCurrencyCode(g),v=this.safeCurrencyCode(y),w=this.safeString(e,"contractType"),O="contractType"in e,R=this.safeInteger2(e,"deliveryDate","expiryDate"),S=this.safeString(e,"marginAsset");"PERPETUAL"===w||41334048e5===R?(R=void 0,d=!0):void 0!==l?(O=!0,c=!0,S=void 0===S?"USDT":S):void 0!==R&&(h=!0);let E=this.safeCurrencyCode(S),x=!O,P=this.safeList(e,"filters",[]),k=this.indexBy(P,"filterType"),T=this.safeString2(e,"status","contractStatus"),B=this.fees,M=b+"/"+v;if(O){d?M=M+":"+E:h?M=M+":"+E+"-"+this.yymmdd(R):c&&(s=this.numberToString(this.parseToNumeric(this.safeString(e,"strikePrice"))),M=M+":"+E+"-"+this.yymmdd(R)+"-"+s+"-"+this.safeString(u,3)),t=this.safeNumber2(e,"contractSize","unit",this.parseNumber("1")),i=E===v,r=E===b;let a=i?"linear":"inverse";B=this.safeDict(this.fees,a,{})}let A="TRADING"===T;if(x){let t=this.safeList(e,"permissions",[]);for(let e=0;e<t.length;e++)if("TRD_GRP_003"===t[e]){A=!1;break}}let I=this.safeBool(e,"isMarginTradingAllowed",!1);x?a={cross:this.inArray(p,this.options.crossMarginPairsData),isolated:this.inArray(p,this.options.isolatedMarginPairsData)}:(i||r)&&(a={cross:!0,isolated:!0}),x?n="spot":d?n="swap":h?n="future":c&&(n="option",A=void 0),void 0!==s&&(o=this.parseToNumeric(s));let q={id:p,lowercaseId:f,symbol:M,base:b,quote:v,settle:E,baseId:g,quoteId:y,settleId:S,type:n,spot:x,margin:x&&I,marginModes:a,swap:d,future:h,option:c,active:A,contract:O,linear:i,inverse:r,taker:B.trading.taker,maker:B.trading.maker,contractSize:t,expiry:R,expiryDatetime:this.iso8601(R),strike:o,optionType:this.safeStringLower(e,"side"),precision:{amount:this.parseNumber(this.parsePrecision(this.safeString2(e,"quantityPrecision","quantityScale"))),price:this.parseNumber(this.parsePrecision(this.safeString2(e,"pricePrecision","priceScale"))),base:this.parseNumber(this.parsePrecision(this.safeString(e,"baseAssetPrecision"))),quote:this.parseNumber(this.parsePrecision(this.safeString(e,"quotePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:e,created:this.safeInteger(e,"onboardDate")};if("PRICE_FILTER"in k){let e=this.safeDict(k,"PRICE_FILTER",{});q.limits.price={min:this.safeNumber(e,"minPrice"),max:this.safeNumber(e,"maxPrice")},q.precision.price=this.safeNumber(e,"tickSize")}if("LOT_SIZE"in k){let e=this.safeDict(k,"LOT_SIZE",{});q.precision.amount=this.safeNumber(e,"stepSize"),q.limits.amount={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MARKET_LOT_SIZE"in k){let e=this.safeDict(k,"MARKET_LOT_SIZE",{});q.limits.market={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in k||"NOTIONAL"in k){let e=this.safeDict2(k,"MIN_NOTIONAL","NOTIONAL",{});q.limits.cost.min=this.safeNumber2(e,"minNotional","notional"),q.limits.cost.max=this.safeNumber(e,"maxNotional")}return q}parseBalanceHelper(e){let t=this.account();t.used=this.safeString(e,"locked"),t.free=this.safeString(e,"free");let i=this.safeString(e,"interest"),r=this.safeString(e,"borrowed");return t.debt=a.Y.stringAdd(r,i),t}parseBalanceCustom(e,t,i,r=!1){let s;let n={info:e},o="isolated"===i,d="margin"===t||"cross"===i;if(r)for(let i=0;i<e.length;i++){let r=e[i],s=this.account(),o=this.safeString(r,"asset"),h=this.safeCurrencyCode(o);if("linear"===t)s.free=this.safeString(r,"umWalletBalance"),s.used=this.safeString(r,"umUnrealizedPNL");else if("inverse"===t)s.free=this.safeString(r,"cmWalletBalance"),s.used=this.safeString(r,"cmUnrealizedPNL");else if(d){let e=this.safeString(r,"crossMarginBorrowed"),t=this.safeString(r,"crossMarginInterest");s.debt=a.Y.stringAdd(e,t),s.free=this.safeString(r,"crossMarginFree"),s.used=this.safeString(r,"crossMarginLocked"),s.total=this.safeString(r,"crossMarginAsset")}else{let e=this.safeString(r,"umUnrealizedPNL"),t=this.safeString(r,"cmUnrealizedPNL"),i=a.Y.stringAdd(e,t),n=this.safeString(r,"totalWalletBalance");s.total=a.Y.stringAdd(i,n)}n[h]=s}else if(!o&&("spot"===t||d)){s=this.safeInteger(e,"updateTime");let t=this.safeList2(e,"balances","userAssets",[]);for(let e=0;e<t.length;e++){let i=t[e],r=this.safeString(i,"asset"),s=this.safeCurrencyCode(r),o=this.account();if(o.free=this.safeString(i,"free"),o.used=this.safeString(i,"locked"),d){let e=this.safeString(i,"borrowed"),t=this.safeString(i,"interest");o.debt=a.Y.stringAdd(e,t)}n[s]=o}}else if(o){let t=this.safeList(e,"assets");for(let e=0;e<t.length;e++){let i=t[e],r=this.safeString(i,"symbol"),s=this.safeSymbol(r,void 0,void 0,"spot"),a=this.safeDict(i,"baseAsset",{}),o=this.safeDict(i,"quoteAsset",{}),d=this.safeCurrencyCode(this.safeString(a,"asset")),h=this.safeCurrencyCode(this.safeString(o,"asset")),c={};c[d]=this.parseBalanceHelper(a),c[h]=this.parseBalanceHelper(o),n[s]=this.safeBalance(c)}}else if("savings"===t){let t=this.safeList(e,"positionAmountVos",[]);for(let e=0;e<t.length;e++){let i=t[e],r=this.safeString(i,"asset"),s=this.safeCurrencyCode(r),a=this.account(),o=this.safeString(i,"amount");a.total=o,a.used=o,n[s]=a}}else if("funding"===t)for(let t=0;t<e.length;t++){let i=e[t],r=this.account(),s=this.safeString(i,"asset"),o=this.safeCurrencyCode(s);r.free=this.safeString(i,"free");let d=this.safeString(i,"freeze"),h=this.safeString(i,"withdrawing"),c=this.safeString(i,"locked");r.used=a.Y.stringAdd(d,a.Y.stringAdd(c,h)),n[o]=r}else{let t=e;Array.isArray(e)||(t=this.safeList(e,"assets",[]));for(let e=0;e<t.length;e++){let i=t[e],r=this.safeString(i,"asset"),s=this.safeCurrencyCode(r),a=this.account();a.free=this.safeString(i,"availableBalance"),a.used=this.safeString(i,"initialMargin"),a.total=this.safeString2(i,"marginBalance","balance"),n[s]=a}}return n.timestamp=s,n.datetime=this.iso8601(s),o?n:this.safeBalance(n)}async fetchBalance(e={}){let t,i,r,s,a;await this.loadMarkets();let n=this.safeString2(this.options,"fetchBalance","defaultType","spot"),o=this.safeString(e,"type",n);[t,e]=this.handleSubTypeAndParams("fetchBalance",void 0,e),[i,e]=this.handleOptionAndParams2(e,"fetchBalance","papi","portfolioMargin",!1),[r,s]=this.handleMarginModeAndParams("fetchBalance",e),s=this.omit(s,"type");let d={};if(i||"papi"===o)this.isLinear(o,t)?o="linear":this.isInverse(o,t)&&(o="inverse"),i=!0,a=await this.papiGetBalance(this.extend(d,s));else if(this.isLinear(o,t)){let t;o="linear",[t,e]=this.handleOptionAndParams(e,"fetchBalance","useV2",!1),e=this.extend(d,s),a=t?await this.fapiPrivateV2GetAccount(e):await this.fapiPrivateV3GetAccount(e)}else if(this.isInverse(o,t))o="inverse",a=await this.dapiPrivateGetAccount(this.extend(d,s));else if("isolated"===r){let t=this.safeList(e,"symbols");if(s=this.omit(s,"symbols"),void 0!==t){let e="";if(Array.isArray(t)){e=this.marketId(t[0]);for(let i=1;i<t.length;i++){let r=t[i];e+=","+this.marketId(r)}}else e=t;d.symbols=e}a=await this.sapiGetMarginIsolatedAccount(this.extend(d,s))}else a="margin"===o||"cross"===r?await this.sapiGetMarginAccount(this.extend(d,s)):"savings"===o?await this.sapiGetLendingUnionAccount(this.extend(d,s)):"funding"===o?await this.sapiPostAssetGetFundingAsset(this.extend(d,s)):await this.privateGetAccount(this.extend(d,s));return this.parseBalanceCustom(a,o,r,i)}async fetchOrderBook(e,t,i={}){let r;await this.loadMarkets();let s=this.market(e),a={symbol:s.id};void 0!==t&&(a.limit=t),r=s.option?await this.eapiPublicGetDepth(this.extend(a,i)):s.linear?await this.fapiPublicGetDepth(this.extend(a,i)):s.inverse?await this.dapiPublicGetDepth(this.extend(a,i)):await this.publicGetDepth(this.extend(a,i));let n=this.safeInteger(r,"T"),o=this.parseOrderBook(r,e,n);return o.nonce=this.safeInteger2(r,"lastUpdateId","u"),o}parseTicker(e,t){let i,r,s;let n=this.safeInteger2(e,"closeTime","time");"time"in e&&(i="contract"),void 0===i&&(i="bidQty"in e?"spot":"contract");let o=this.safeString(e,"symbol"),d=this.safeSymbol(o,t,void 0,i),h=this.safeString(e,"lastPrice"),c=this.safeString(e,"weightedAvgPrice");return"baseVolume"in e?(r=this.safeString(e,"baseVolume"),s=a.Y.stringMul(r,c)):(r=this.safeString(e,"volume"),s=this.safeString2(e,"quoteVolume","amount")),this.safeTicker({symbol:d,timestamp:n,datetime:this.iso8601(n),high:this.safeString2(e,"highPrice","high"),low:this.safeString2(e,"lowPrice","low"),bid:this.safeString(e,"bidPrice"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString(e,"askPrice"),askVolume:this.safeString(e,"askQty"),vwap:c,open:this.safeString2(e,"openPrice","open"),close:h,last:h,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:r,quoteVolume:s,markPrice:this.safeString(e,"markPrice"),indexPrice:this.safeString(e,"indexPrice"),info:e},t)}async fetchStatus(e={}){let t=await this.sapiGetSystemStatus(e),i=this.safeString(t,"status");return{status:this.safeString({0:"ok",1:"maintenance"},i,i),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTicker(e,t={}){let i;await this.loadMarkets();let r=this.market(e),s={symbol:r.id};if(r.option)i=await this.eapiPublicGetTicker(this.extend(s,t));else if(r.linear)i=await this.fapiPublicGetTicker24hr(this.extend(s,t));else if(r.inverse)i=await this.dapiPublicGetTicker24hr(this.extend(s,t));else{let e=this.safeBool(t,"rolling",!1);t=this.omit(t,"rolling"),i=e?await this.publicGetTicker(this.extend(s,t)):await this.publicGetTicker24hr(this.extend(s,t))}if(Array.isArray(i)){let e=this.safeDict(i,0,{});return this.parseTicker(e,r)}return this.parseTicker(i,r)}async fetchBidsAsks(e,t={}){let i,r,a;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0,!0,!0);let n=this.getMarketFromSymbols(e);if([i,t]=this.handleMarketTypeAndParams("fetchBidsAsks",n,t),[r,t]=this.handleSubTypeAndParams("fetchBidsAsks",n,t),this.isLinear(i,r))a=await this.fapiPublicGetTickerBookTicker(t);else if(this.isInverse(i,r))a=await this.dapiPublicGetTickerBookTicker(t);else if("spot"===i){let i={};void 0!==e&&(i.symbols=this.json(this.marketIds(e))),a=await this.publicGetTickerBookTicker(this.extend(i,t))}else throw new s.NotSupported(this.id+" fetchBidsAsks() does not support "+i+" markets yet");return this.parseTickers(a,e)}async fetchLastPrices(e,t={}){let i,r,a;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0,!0,!0);let n=this.getMarketFromSymbols(e);if([i,t]=this.handleMarketTypeAndParams("fetchLastPrices",n,t),[r,t]=this.handleSubTypeAndParams("fetchLastPrices",n,t),this.isLinear(i,r))a=await this.fapiPublicV2GetTickerPrice(t);else if(this.isInverse(i,r))a=await this.dapiPublicGetTickerPrice(t);else if("spot"===i)a=await this.publicGetTickerPrice(t);else throw new s.NotSupported(this.id+" fetchLastPrices() does not support "+i+" markets yet");return this.parseLastPrices(a,e)}parseLastPrice(e,t){let i=this.safeInteger(e,"time"),r=this.safeString(e,"symbol");t=this.safeMarket(r,t,void 0,void 0===i?"spot":"swap");let s=this.safeNumber(e,"price");return{symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),price:s,side:void 0,info:e}}async fetchTickers(e,t={}){let i,r,a;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0,!0,!0);let n=this.getMarketFromSymbols(e);if([i,t]=this.handleMarketTypeAndParams("fetchTickers",n,t),[r,t]=this.handleSubTypeAndParams("fetchTickers",n,t),this.isLinear(i,r))a=await this.fapiPublicGetTicker24hr(t);else if(this.isInverse(i,r))a=await this.dapiPublicGetTicker24hr(t);else if("spot"===i){let i={};void 0!==e&&(i.symbols=this.json(this.marketIds(e))),a=await this.publicGetTicker24hr(this.extend(i,t))}else if("option"===i)a=await this.eapiPublicGetTicker(t);else throw new s.NotSupported(this.id+" fetchTickers() does not support "+i+" markets yet");return this.parseTickers(a,e)}async fetchMarkPrice(e,t={}){let i,r,a;await this.loadMarkets();let n=this.market(e);[i,t]=this.handleMarketTypeAndParams("fetchMarkPrice",n,t,"swap"),[r,t]=this.handleSubTypeAndParams("fetchMarkPrice",n,t,"linear");let o={symbol:n.id};if(this.isLinear(i,r))a=await this.fapiPublicGetPremiumIndex(this.extend(o,t));else if(this.isInverse(i,r))a=await this.dapiPublicGetPremiumIndex(this.extend(o,t));else throw new s.NotSupported(this.id+" fetchMarkPrice() does not support "+i+" markets yet");return Array.isArray(a)?this.parseTicker(this.safeDict(a,0,{}),n):this.parseTicker(a,n)}async fetchMarkPrices(e,t={}){let i,r,a;await this.loadMarkets(),e=this.marketSymbols(e,void 0,!0,!0,!0);let n=this.getMarketFromSymbols(e);if([i,t]=this.handleMarketTypeAndParams("fetchMarkPrices",n,t,"swap"),[r,t]=this.handleSubTypeAndParams("fetchMarkPrices",n,t,"linear"),this.isLinear(i,r))a=await this.fapiPublicGetPremiumIndex(t);else if(this.isInverse(i,r))a=await this.dapiPublicGetPremiumIndex(t);else throw new s.NotSupported(this.id+" fetchMarkPrices() does not support "+i+" markets yet");return this.parseTickers(a,e)}parseOHLCV(e,t){let i=this.safeBool(t,"inverse");return[this.safeInteger2(e,0,"openTime"),this.safeNumber2(e,1,"open"),this.safeNumber2(e,2,"high"),this.safeNumber2(e,3,"low"),this.safeNumber2(e,4,"close"),this.safeNumber2(e,i?7:5,"volume")]}async fetchOHLCV(e,t="1m",i,r,s={}){let a;await this.loadMarkets();let n=!1;if([n,s]=this.handleOptionAndParams(s,"fetchOHLCV","paginate",!1),n)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,r,t,s,1e3);let o=this.market(e),d=this.safeString(s,"price"),h=this.safeInteger(s,"until");s=this.omit(s,["price","until"]),void 0!==i&&void 0!==h&&void 0===r&&(r=1500),r=void 0===r?500:Math.min(r,1500);let c={interval:this.safeString(this.timeframes,t,t),limit:r},l=o.id;if("index"===d){let e=l.split("_"),t=this.safeString(e,0);c.pair=t}else c.symbol=l;if(void 0!==i&&(c.startTime=i,o.inverse&&i>0)){let e=this.parseTimeframe(t),s=this.sum(i,r*e*1e3-1),a=this.milliseconds();c.endTime=Math.min(a,s)}return void 0!==h&&(c.endTime=h),a=o.option?await this.eapiPublicGetKlines(this.extend(c,s)):"mark"===d?o.inverse?await this.dapiPublicGetMarkPriceKlines(this.extend(c,s)):await this.fapiPublicGetMarkPriceKlines(this.extend(c,s)):"index"===d?o.inverse?await this.dapiPublicGetIndexPriceKlines(this.extend(c,s)):await this.fapiPublicGetIndexPriceKlines(this.extend(c,s)):"premiumIndex"===d?o.inverse?await this.dapiPublicGetPremiumIndexKlines(this.extend(c,s)):await this.fapiPublicGetPremiumIndexKlines(this.extend(c,s)):o.linear?await this.fapiPublicGetKlines(this.extend(c,s)):o.inverse?await this.dapiPublicGetKlines(this.extend(c,s)):await this.publicGetKlines(this.extend(c,s)),this.parseOHLCVs(a,o,t,i,r)}parseTrade(e,t){let i,r,s;if("isDustTrade"in e)return this.parseDustTrade(e,t);let n=this.safeInteger2(e,"T","time"),o=this.safeString2(e,"q","qty");o=this.safeString(e,"quantity",o);let d=this.safeString(e,"symbol"),h="isIsolated"in e||"M"in e||"orderListId"in e||"isMaker"in e,c=(t=this.safeMarket(d,t,void 0,h?"spot":"contract")).symbol,l=this.safeBool2(e,"m","isBuyerMaker");if(void 0!==l?i=l?"sell":"buy":"side"in e?i=this.safeStringLower(e,"side"):"isBuyer"in e&&(i=e.isBuyer?"buy":"sell"),"commission"in e&&(s={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))}),"isMaker"in e&&(r=e.isMaker?"maker":"taker"),"maker"in e&&(r=e.maker?"maker":"taker"),"optionSide"in e||t.option){let t=this.safeCurrencyCode(this.safeString(e,"quoteAsset","USDT"));r=this.safeStringLower(e,"liquidity"),"fee"in e&&(s={cost:this.safeString(e,"fee"),currency:t}),"buy"!==i&&"sell"!==i&&(i="1"===i?"buy":"sell"),"optionSide"in e&&"buy"!==i&&(o=a.Y.stringMul("-1",o))}return this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:c,id:this.safeStringN(e,["t","a","tradeId","id"]),order:this.safeString(e,"orderId"),type:this.safeStringLower(e,"type"),side:i,takerOrMaker:r,price:this.safeString2(e,"p","price"),amount:o,cost:this.safeString2(e,"quoteQty","baseQty"),fee:s},t)}async fetchTrades(e,t,i,r={}){let s;await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchTrades","paginate"),a)return await this.fetchPaginatedCallDynamic("fetchTrades",e,t,i,r);let n=this.market(e),o={symbol:n.id};if(!n.option){void 0!==t&&(o.startTime=t,o.endTime=this.sum(t,36e5));let e=this.safeInteger(r,"until");void 0!==e&&(o.endTime=e)}if(void 0!==i){let e=n.swap||n.future;o.limit=e?Math.min(i,1e3):i}let d=this.safeString(this.options,"fetchTradesMethod");return d=this.safeString2(r,"fetchTradesMethod","method",d),r=this.omit(r,["until","fetchTradesMethod"]),s=n.option||"eapiPublicGetTrades"===d?await this.eapiPublicGetTrades(this.extend(o,r)):n.linear||"fapiPublicGetAggTrades"===d?await this.fapiPublicGetAggTrades(this.extend(o,r)):n.inverse||"dapiPublicGetAggTrades"===d?await this.dapiPublicGetAggTrades(this.extend(o,r)):await this.publicGetAggTrades(this.extend(o,r)),this.parseTrades(s,n,t,i)}async editSpotOrder(e,t,i,r,a,n,o={}){await this.loadMarkets();let d=this.market(t);if(!d.spot)throw new s.NotSupported(this.id+" editSpotOrder() does not support "+d.type+" orders");let h=this.editSpotOrderRequest(e,t,i,r,a,n,o),c=await this.privatePostOrderCancelReplace(h),l=this.safeDict(c,"newOrderResponse");return this.parseOrder(l,d)}editSpotOrderRequest(e,t,i,r,o,d,h={}){let c=this.market(t),l=this.safeStringN(h,["newClientOrderId","clientOrderId","origClientOrderId"]),p={symbol:c.id,side:r.toUpperCase()},u=i.toUpperCase(),m=u;this.isPostOnly("MARKET"===u,"LIMIT_MAKER"===u,h)&&(m="LIMIT_MAKER"),p.type=m;let f=this.safeNumber2(h,"stopPrice","triggerPrice");void 0!==f&&("MARKET"===m?m="STOP_LOSS":"LIMIT"===m&&(m="STOP_LOSS_LIMIT"));let g=this.safeList(c.info,"orderTypes");if(!this.inArray(m,g)){if(u!==m)throw new s.InvalidOrder(this.id+" triggerPrice parameter is not allowed for "+t+" "+i+" orders");throw new s.InvalidOrder(this.id+" "+i+" is not a valid order type for the "+t+" market")}if(void 0===l){let e=this.safeDict(this.options,"broker");if(void 0!==e){let t=this.safeString(e,"spot");void 0!==t&&(p.newClientOrderId=t+this.uuid22())}}else p.newClientOrderId=l;p.newOrderRespType=this.safeValue(this.options.newOrderRespType,i,"RESULT");let y=!1,b=!1,v=!1,w=!1;if("MARKET"===m){if(this.safeBool(this.options,"quoteOrderQty",!0)){let e=this.safeValue2(h,"quoteOrderQty","cost"),t=c.precision.price;if(void 0!==e)p.quoteOrderQty=this.decimalToPrecision(e,n.R3,t,this.precisionMode);else if(void 0!==d){let e=this.numberToString(o),i=this.numberToString(d),r=a.Y.stringMul(e,i);p.quoteOrderQty=this.decimalToPrecision(r,n.R3,t,this.precisionMode)}else w=!0}else w=!0}else"LIMIT"===m?(b=!0,y=!0,w=!0):"STOP_LOSS"===m||"TAKE_PROFIT"===m?(v=!0,w=!0):"STOP_LOSS_LIMIT"===m||"TAKE_PROFIT_LIMIT"===m?(w=!0,v=!0,b=!0,y=!0):"LIMIT_MAKER"===m&&(b=!0,w=!0);if(w&&(p.quantity=this.amountToPrecision(t,o)),b){if(void 0===d)throw new s.InvalidOrder(this.id+" editOrder() requires a price argument for a "+i+" order");p.price=this.priceToPrecision(t,d)}if(y&&void 0===this.safeString(h,"timeInForce")&&(p.timeInForce=this.options.defaultTimeInForce),v){if(void 0===f)throw new s.InvalidOrder(this.id+" editOrder() requires a triggerPrice extra param for a "+i+" order");p.stopPrice=this.priceToPrecision(t,f)}return p.cancelReplaceMode="STOP_ON_FAILURE",void 0===this.safeString2(h,"cancelNewClientOrderId","cancelOrigClientOrderId")&&(p.cancelOrderId=e),"PO"===this.safeString(h,"timeInForce")&&(h=this.omit(h,["timeInForce"])),h=this.omit(h,["quoteOrderQty","cost","stopPrice","newClientOrderId","clientOrderId","postOnly"]),this.extend(p,h)}editContractOrderRequest(e,t,i,r,a,n,o={}){let d=this.market(t);if(!d.contract)throw new s.NotSupported(this.id+" editContractOrder() does not support "+d.type+" orders");let h={symbol:d.id,side:r.toUpperCase(),orderId:e,quantity:this.amountToPrecision(t,a)},c=this.safeStringN(o,["newClientOrderId","clientOrderId","origClientOrderId"]);return void 0!==n&&(h.price=this.priceToPrecision(t,n)),void 0!==c&&(h.origClientOrderId=c),o=this.omit(o,["clientOrderId","newClientOrderId"]),h}async editContractOrder(e,t,i,r,a,n,o={}){let d,h;await this.loadMarkets();let c=this.market(t);if([d,o]=this.handleOptionAndParams2(o,"editContractOrder","papi","portfolioMargin",!1),(c.linear||d)&&void 0===n)throw new s.ArgumentsRequired(this.id+" editOrder() requires a price argument for portfolio margin and linear orders");let l=this.editContractOrderRequest(e,t,i,r,a,n,o);return c.linear?h=d?await this.papiPutUmOrder(this.extend(l,o)):await this.fapiPrivatePutOrder(this.extend(l,o)):c.inverse&&(h=d?await this.papiPutCmOrder(this.extend(l,o)):await this.dapiPrivatePutOrder(this.extend(l,o))),this.parseOrder(h,c)}async editOrder(e,t,i,r,a,n,o={}){await this.loadMarkets();let d=this.market(t);if(d.option)throw new s.NotSupported(this.id+" editOrder() does not support "+d.type+" orders");return d.spot?await this.editSpotOrder(e,t,i,r,a,n,o):await this.editContractOrder(e,t,i,r,a,n,o)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",ACCEPTED:"open",FILLED:"closed",CANCELED:"canceled",CANCELLED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired",EXPIRED_IN_MATCH:"expired"},e,e)}parseOrder(e,t){let i,r;if(void 0!==this.safeString(e,"code"))return this.safeOrder({info:e,status:"rejected"},t);let s=this.parseOrderStatus(this.safeString2(e,"status","strategyStatus")),n=this.safeString(e,"symbol"),o="positionSide"in e||"cumQuote"in e,d=this.safeSymbol(n,t,void 0,o?"contract":"spot"),h=this.safeString(e,"executedQty","0"),c=this.safeIntegerN(e,["time","createTime","workingTime","transactTime","updateTime"]);if("transactTime"in e||"updateTime"in e){let t=this.safeInteger2(e,"updateTime","transactTime");"open"===s?a.Y.stringGt(h,"0")&&(i=t):"closed"===s&&(i=t)}let l=this.safeInteger2(e,"transactTime","updateTime"),p=this.safeString(e,"avgPrice"),u=this.safeString(e,"price"),m=this.safeString2(e,"origQty","quantity"),f=this.safeString2(e,"cummulativeQuoteQty","cumQuote");f=this.safeString(e,"cumBase",f);let g=this.safeStringLower(e,"type"),y=this.safeStringLower(e,"side"),b=this.safeList(e,"fills",[]),v=this.safeString(e,"timeInForce");"GTX"===v&&(v="PO");let w="limit_maker"===g||"PO"===v;"limit_maker"===g&&(g="limit");let O=this.safeString(e,"stopPrice"),R=this.parseNumber(this.omitZero(O)),S=this.safeNumber(e,"fee");return void 0!==S&&(r={currency:this.safeString(e,"quoteAsset"),cost:S,rate:void 0}),this.safeOrder({info:e,id:this.safeString2(e,"strategyId","orderId"),clientOrderId:this.safeString2(e,"clientOrderId","newClientStrategyId"),timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:i,lastUpdateTimestamp:l,symbol:d,type:g,timeInForce:v,postOnly:w,reduceOnly:this.safeBool(e,"reduceOnly"),side:y,price:u,triggerPrice:R,amount:m,cost:f,average:p,filled:h,remaining:void 0,status:s,fee:r,trades:b},t)}async createOrders(e,t={}){let i;await this.loadMarkets();let r=[],a=[];for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(i,"symbol");a.push(s);let n=this.safeString(i,"type"),o=this.safeString(i,"side"),d=this.safeValue(i,"amount"),h=this.safeValue(i,"price"),c=this.safeDict(i,"params",{}),l=this.createOrderRequest(s,n,o,d,h,c);r.push(l)}a=this.marketSymbols(a,void 0,!1,!0,!0);let n=this.market(a[0]);if(n.spot)throw new s.NotSupported(this.id+" createOrders() does not support "+n.type+" orders");let o={batchOrders:r};return o=this.extend(o,t),i=n.linear?await this.fapiPrivatePostBatchOrders(o):n.option?await this.eapiPrivatePostBatchOrders(o):await this.dapiPrivatePostBatchOrders(o),this.parseOrders(i)}async createOrder(e,t,i,r,s,a={}){let n,o,d;await this.loadMarkets();let h=this.market(e),c=this.safeString(a,"type",h.type);[n,a]=this.handleMarginModeAndParams("createOrder",a),[o,a]=this.handleOptionAndParams2(a,"createOrder","papi","portfolioMargin",!1);let l=this.safeString2(a,"triggerPrice","stopPrice"),p=this.safeString(a,"stopLossPrice"),u=this.safeString(a,"takeProfitPrice"),m=this.safeString2(a,"trailingPercent","callbackRate"),f=void 0!==l||void 0!==m||void 0!==p||void 0!==u,g=this.safeBool2(a,"sor","SOR",!1),y=this.safeBool(a,"test",!1);a=this.omit(a,["sor","SOR","test"]),o&&(a.portfolioMargin=o);let b=this.createOrderRequest(e,t,i,r,s,a);return d=h.option?await this.eapiPrivatePostOrder(b):g?y?await this.privatePostSorOrderTest(b):await this.privatePostSorOrder(b):h.linear?o?f?await this.papiPostUmConditionalOrder(b):await this.papiPostUmOrder(b):await this.fapiPrivatePostOrder(b):h.inverse?o?f?await this.papiPostCmConditionalOrder(b):await this.papiPostCmOrder(b):await this.dapiPrivatePostOrder(b):"margin"===c||void 0!==n||o?o?await this.papiPostMarginOrder(b):await this.sapiPostMarginOrder(b):y?await this.privatePostOrderTest(b):await this.privatePostOrder(b),this.parseOrder(d,h)}createOrderRequest(e,t,i,r,o,d={}){let h,c,l,p;let u=this.market(e),m=this.safeString(d,"type",u.type),f=this.safeString2(d,"newClientOrderId","clientOrderId"),g=t.toUpperCase(),y="MARKET"===g,b="LIMIT"===g,v={symbol:u.id,side:i.toUpperCase()};[h,d]=this.handleOptionAndParams2(d,"createOrder","papi","portfolioMargin",!1),[c,d]=this.handleMarginModeAndParams("createOrder",d);let w=this.safeBool(d,"reduceOnly",!1);w&&("margin"===m||!u.contract&&void 0!==c)&&(d=this.omit(d,"reduceOnly"),v.sideEffectType="AUTO_REPAY");let O=this.safeString2(d,"triggerPrice","stopPrice"),R=this.safeString(d,"stopLossPrice",O),S=this.safeString(d,"takeProfitPrice"),E=this.safeString(d,"trailingDelta"),x=this.safeString2(d,"trailingTriggerPrice","activationPrice"),P=this.safeStringN(d,["trailingPercent","callbackRate","trailingDelta"]),k=this.safeString(d,"priceMatch"),T=void 0!==P,B=void 0!==R||void 0!==E,M=void 0!==S,A=void 0!==O,I=h&&(A||T||B||M),q=t.toUpperCase();if(T){if(u.swap)q="TRAILING_STOP_MARKET",v.callbackRate=P,void 0!==x&&(v.activationPrice=this.priceToPrecision(e,x));else{if(y)throw new s.InvalidOrder(this.id+" trailingPercent orders are not supported for "+e+" "+t+" orders");let i=this.safeString(d,"stopLossOrTakeProfit");if(d=this.omit(d,"stopLossOrTakeProfit"),"stopLoss"!==i&&"takeProfit"!==i)throw new s.InvalidOrder(this.id+e+" trailingPercent orders require a stopLossOrTakeProfit parameter of either stopLoss or takeProfit");"stopLoss"===i?q="STOP_LOSS_LIMIT":"takeProfit"===i&&(q="TAKE_PROFIT_LIMIT"),void 0!==x&&(l=this.priceToPrecision(e,x));let r=a.Y.stringMul(P,"100");v.trailingDelta=r}}else B?(l=R,y?q=u.contract?"STOP_MARKET":"STOP_LOSS":b&&(q=u.contract?"STOP":"STOP_LOSS_LIMIT")):M&&(l=S,y?q=u.contract?"TAKE_PROFIT_MARKET":"TAKE_PROFIT":b&&(q=u.contract?"TAKE_PROFIT":"TAKE_PROFIT_LIMIT"));if(u.option){if("market"===t)throw new s.InvalidOrder(this.id+" "+t+" is not a valid order type for the "+e+" market")}else{let i=this.safeList(u.info,"orderTypes");if(!this.inArray(q,i)){if(g!==q)throw new s.InvalidOrder(this.id+" triggerPrice parameter is not allowed for "+e+" "+t+" orders");throw new s.InvalidOrder(this.id+" "+t+" is not a valid order type for the "+e+" market")}}let N=I?"newClientStrategyId":"newClientOrderId";if(void 0===f){let e=this.safeDict(this.options,"broker",{}),t=u.contract?"x-xcKtGhcu":"x-R4BD3S82",i=this.safeString(e,m,t);v[N]=i+this.uuid22()}else v[N]=f;h?(p=this.isPostOnly(y,"LIMIT_MAKER"===g,d))&&(u.contract?v.timeInForce="GTX":q="LIMIT_MAKER"):(p=this.isPostOnly(y,"LIMIT_MAKER"===g,d),(u.spot||"margin"===m)&&(p&&(q="LIMIT_MAKER"),"isolated"===c&&(v.isIsolated=!0))),"spot"!==m&&"margin"!==m||h?v.newOrderRespType="RESULT":v.newOrderRespType=this.safeString(this.options.newOrderRespType,t,"FULL"),v[I?"strategyType":"type"]=q;let C=this.safeBool(d,"closePosition",!1),L=!1,D=!1,F=!1,G=!1;if("MARKET"===q){if(u.spot){if(this.safeBool(this.options,"quoteOrderQty",!0)){let e=this.safeString2(d,"quoteOrderQty","cost"),t=u.precision.price;if(void 0!==e)v.quoteOrderQty=this.decimalToPrecision(e,n.R3,t,this.precisionMode);else if(void 0!==o){let e=this.numberToString(r),i=this.numberToString(o),s=a.Y.stringMul(e,i);v.quoteOrderQty=this.decimalToPrecision(s,n.R3,t,this.precisionMode)}else G=!0}else G=!0}else G=!0}else if("LIMIT"===q)D=!0,L=!0,G=!0;else if("STOP_LOSS"===q||"TAKE_PROFIT"===q)F=!0,G=!0,(u.linear||u.inverse)&&(D=!0);else if("STOP_LOSS_LIMIT"===q||"TAKE_PROFIT_LIMIT"===q)G=!0,F=!0,D=!0,L=!0;else if("LIMIT_MAKER"===q)D=!0,G=!0;else if("STOP"===q)G=!0,F=!0,D=!0;else if("STOP_MARKET"===q||"TAKE_PROFIT_MARKET"===q)C||(G=!0),F=!0;else if("TRAILING_STOP_MARKET"===q&&(C||(G=!0),void 0===P))throw new s.InvalidOrder(this.id+" createOrder() requires a trailingPercent param for a "+t+" order");if(G&&(h?v.quantity=this.parseToNumeric(r):void 0!==this.safeString(u.precision,"amount")?v.quantity=this.amountToPrecision(e,r):v.quantity=this.parseToNumeric(r)),D&&!(void 0!==k)){if(void 0===o)throw new s.InvalidOrder(this.id+" createOrder() requires a price argument for a "+t+" order");void 0!==this.safeString(u.precision,"price")?v.price=this.priceToPrecision(e,o):v.price=this.parseToNumeric(o)}if(F){if(u.contract){if(void 0===l)throw new s.InvalidOrder(this.id+" createOrder() requires a triggerPrice extra param for a "+t+" order")}else if(void 0===E&&void 0===l&&void 0===P)throw new s.InvalidOrder(this.id+" createOrder() requires a triggerPrice, trailingDelta or trailingPercent param for a "+t+" order");void 0!==l&&(v.stopPrice=this.priceToPrecision(e,l))}L&&void 0===this.safeString(d,"timeInForce")&&void 0===this.safeString(v,"timeInForce")&&(v.timeInForce=this.options.defaultTimeInForce),!h&&u.contract&&p&&(v.timeInForce="GTX"),"PO"===this.safeString(d,"timeInForce")&&(d=this.omit(d,"timeInForce"));let U=this.safeBool(d,"hedged",!1);u.spot||u.option||!U||(w&&(d=this.omit(d,"reduceOnly"),i="buy"===i?"sell":"buy"),v.positionSide="buy"===i?"LONG":"SHORT");let j=this.omit(d,["type","newClientOrderId","clientOrderId","postOnly","stopLossPrice","takeProfitPrice","stopPrice","triggerPrice","trailingTriggerPrice","trailingPercent","quoteOrderQty","cost","test","hedged"]);return this.extend(v,j)}async createMarketOrderWithCost(e,t,i,r={}){if(await this.loadMarkets(),!this.market(e).spot)throw new s.NotSupported(this.id+" createMarketOrderWithCost() supports spot orders only");return await this.createOrder(e,"market",t,0,void 0,this.extend({cost:i},r))}async createMarketBuyOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new s.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return await this.createOrder(e,"market","buy",0,void 0,this.extend({cost:t},i))}async createMarketSellOrderWithCost(e,t,i={}){if(await this.loadMarkets(),!this.market(e).spot)throw new s.NotSupported(this.id+" createMarketSellOrderWithCost() supports spot orders only");return i.quoteOrderQty=t,await this.createOrder(e,"market","sell",t,void 0,i)}async fetchOrder(e,t,i={}){let r,a,n;if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let o=this.market(t),d=this.safeString2(this.options,"fetchOrder","defaultType","spot"),h=this.safeString(i,"type",d);[r,i]=this.handleMarginModeAndParams("fetchOrder",i),[a,i]=this.handleOptionAndParams2(i,"fetchOrder","papi","portfolioMargin",!1);let c={symbol:o.id},l=this.safeString2(i,"origClientOrderId","clientOrderId");return void 0!==l?o.option?c.clientOrderId=l:c.origClientOrderId=l:c.orderId=e,i=this.omit(i,["type","clientOrderId","origClientOrderId"]),o.option?n=await this.eapiPrivateGetOrder(this.extend(c,i)):o.linear?n=a?await this.papiGetUmOrder(this.extend(c,i)):await this.fapiPrivateGetOrder(this.extend(c,i)):o.inverse?n=a?await this.papiGetCmOrder(this.extend(c,i)):await this.dapiPrivateGetOrder(this.extend(c,i)):"margin"===h||void 0!==r||a?a?n=await this.papiGetMarginOrder(this.extend(c,i)):("isolated"===r&&(c.isIsolated=!0),n=await this.sapiGetMarginOrder(this.extend(c,i))):n=await this.privateGetOrder(this.extend(c,i)),this.parseOrder(n,o)}async fetchOrders(e,t,i,r={}){let a,n,o;if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let d=!1;if([d,r]=this.handleOptionAndParams(r,"fetchOrders","paginate"),d)return await this.fetchPaginatedCallDynamic("fetchOrders",e,t,i,r);let h=this.market(e),c=this.safeString2(this.options,"fetchOrders","defaultType",h.type),l=this.safeString(r,"type",c);[a,r]=this.handleMarginModeAndParams("fetchOrders",r),[n,r]=this.handleOptionAndParams2(r,"fetchOrders","papi","portfolioMargin",!1);let p=this.safeBoolN(r,["stop","trigger","conditional"]);r=this.omit(r,["stop","trigger","conditional","type"]);let u={symbol:h.id};return[u,r]=this.handleUntilOption("endTime",u,r),void 0!==t&&(u.startTime=t),void 0!==i&&(u.limit=i),h.option?o=await this.eapiPrivateGetHistoryOrders(this.extend(u,r)):h.linear?o=n?p?await this.papiGetUmConditionalAllOrders(this.extend(u,r)):await this.papiGetUmAllOrders(this.extend(u,r)):await this.fapiPrivateGetAllOrders(this.extend(u,r)):h.inverse?o=n?p?await this.papiGetCmConditionalAllOrders(this.extend(u,r)):await this.papiGetCmAllOrders(this.extend(u,r)):await this.dapiPrivateGetAllOrders(this.extend(u,r)):n?o=await this.papiGetMarginAllOrders(this.extend(u,r)):"margin"===l||void 0!==a?("isolated"===a&&(u.isIsolated=!0),o=await this.sapiGetMarginAllOrders(this.extend(u,r))):o=await this.privateGetAllOrders(this.extend(u,r)),this.parseOrders(o,h,t,i)}async fetchOpenOrders(e,t,i,r={}){let a,n,o,d,h,c;await this.loadMarkets();let l={};[o,r]=this.handleMarginModeAndParams("fetchOpenOrders",r),[d,r]=this.handleOptionAndParams2(r,"fetchOpenOrders","papi","portfolioMargin",!1);let p=this.safeBoolN(r,["stop","trigger","conditional"]);if(void 0!==e){a=this.market(e),l.symbol=a.id;let t=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot"),i="type"in a?a.type:t;n=this.safeString(r,"type",i)}else if(this.options.warnOnFetchOpenOrdersWithoutSymbol)throw new s.ExchangeError(this.id+" fetchOpenOrders() WARNING: fetching open orders without specifying a symbol has stricter rate limits (10 times more for spot, 40 times more for other markets) compared to requesting with symbol argument. To acknowledge this warning, set "+this.id+'.options["warnOnFetchOpenOrdersWithoutSymbol"] = false to suppress this warning message.');else{let e=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot");n=this.safeString(r,"type",e)}if([h,r]=this.handleSubTypeAndParams("fetchOpenOrders",a,r),r=this.omit(r,["type","stop","trigger","conditional"]),"option"===n)void 0!==t&&(l.startTime=t),void 0!==i&&(l.limit=i),c=await this.eapiPrivateGetOpenOrders(this.extend(l,r));else if(this.isLinear(n,h))c=d?p?await this.papiGetUmConditionalOpenOrders(this.extend(l,r)):await this.papiGetUmOpenOrders(this.extend(l,r)):await this.fapiPrivateGetOpenOrders(this.extend(l,r));else if(this.isInverse(n,h))c=d?p?await this.papiGetCmConditionalOpenOrders(this.extend(l,r)):await this.papiGetCmOpenOrders(this.extend(l,r)):await this.dapiPrivateGetOpenOrders(this.extend(l,r));else if("margin"===n||void 0!==o||d){if(d)c=await this.papiGetMarginOpenOrders(this.extend(l,r));else{if("isolated"===o&&(l.isIsolated=!0,void 0===e))throw new s.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument for isolated markets");c=await this.sapiGetMarginOpenOrders(this.extend(l,r))}}else c=await this.privateGetOpenOrders(this.extend(l,r));return this.parseOrders(c,a,t,i)}async fetchOpenOrder(e,t,i={}){let r,a;if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOpenOrder() requires a symbol argument");await this.loadMarkets();let n=this.market(t),o={symbol:n.id};[r,i]=this.handleOptionAndParams2(i,"fetchOpenOrder","papi","portfolioMargin",!1);let d=this.safeBoolN(i,["stop","trigger","conditional"]);if(i=this.omit(i,["stop","trigger","conditional"]),o[r&&d?"strategyId":"orderId"]=e,n.linear)a=r?d?await this.papiGetUmConditionalOpenOrder(this.extend(o,i)):await this.papiGetUmOpenOrder(this.extend(o,i)):await this.fapiPrivateGetOpenOrder(this.extend(o,i));else if(n.inverse)a=r?d?await this.papiGetCmConditionalOpenOrder(this.extend(o,i)):await this.papiGetCmOpenOrder(this.extend(o,i)):await this.dapiPrivateGetOpenOrder(this.extend(o,i));else{if(n.option)throw new s.NotSupported(this.id+" fetchOpenOrder() does not support option markets");if(n.spot)throw new s.NotSupported(this.id+" fetchOpenOrder() does not support spot markets")}return this.parseOrder(a,n)}async fetchClosedOrders(e,t,i,r={}){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");let a=await this.fetchOrders(e,t,void 0,r),n=this.filterBy(a,"status","closed");return this.filterBySinceLimit(n,t,i)}async fetchCanceledOrders(e,t,i,r={}){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchCanceledOrders() requires a symbol argument");let a=await this.fetchOrders(e,t,void 0,r),n=this.filterBy(a,"status","canceled");return this.filterBySinceLimit(n,t,i)}async fetchCanceledAndClosedOrders(e,t,i,r={}){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchCanceledAndClosedOrders() requires a symbol argument");let a=await this.fetchOrders(e,t,void 0,r),n=this.filterBy(a,"status","canceled"),o=this.filterBy(a,"status","closed"),d=this.arrayConcat(n,o),h=this.sortBy(d,"timestamp");return this.filterBySinceLimit(h,t,i)}async cancelOrder(e,t,i={}){let r,a,n;if(void 0===t)throw new s.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let o=this.market(t),d=this.safeString2(this.options,"cancelOrder","defaultType","spot"),h=this.safeString(i,"type",d);[r,i]=this.handleMarginModeAndParams("cancelOrder",i),[a,i]=this.handleOptionAndParams2(i,"cancelOrder","papi","portfolioMargin",!1);let c=this.safeBoolN(i,["stop","trigger","conditional"]),l={symbol:o.id},p=this.safeStringN(i,["origClientOrderId","clientOrderId","newClientStrategyId"]);return void 0!==p?o.option?l.clientOrderId=p:a&&c?l.newClientStrategyId=p:l.origClientOrderId=p:a&&c?l.strategyId=e:l.orderId=e,i=this.omit(i,["type","origClientOrderId","clientOrderId","newClientStrategyId","stop","trigger","conditional"]),o.option?n=await this.eapiPrivateDeleteOrder(this.extend(l,i)):o.linear?n=a?c?await this.papiDeleteUmConditionalOrder(this.extend(l,i)):await this.papiDeleteUmOrder(this.extend(l,i)):await this.fapiPrivateDeleteOrder(this.extend(l,i)):o.inverse?n=a?c?await this.papiDeleteCmConditionalOrder(this.extend(l,i)):await this.papiDeleteCmOrder(this.extend(l,i)):await this.dapiPrivateDeleteOrder(this.extend(l,i)):"margin"===h||void 0!==r||a?a?n=await this.papiDeleteMarginOrder(this.extend(l,i)):("isolated"===r&&(l.isIsolated=!0),n=await this.sapiDeleteMarginOrder(this.extend(l,i))):n=await this.privateDeleteOrder(this.extend(l,i)),this.parseOrder(n,o)}async cancelAllOrders(e,t={}){let i,r,a;if(void 0===e)throw new s.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();let n=this.market(e),o={symbol:n.id};[i,t]=this.handleOptionAndParams2(t,"cancelAllOrders","papi","portfolioMargin",!1);let d=this.safeBoolN(t,["stop","trigger","conditional"]),h=this.safeString(t,"type",n.type);return t=this.omit(t,["type","stop","trigger","conditional"]),[r,t]=this.handleMarginModeAndParams("cancelAllOrders",t),(n.option?a=await this.eapiPrivateDeleteAllOpenOrders(this.extend(o,t)):n.linear?a=i?d?await this.papiDeleteUmConditionalAllOpenOrders(this.extend(o,t)):await this.papiDeleteUmAllOpenOrders(this.extend(o,t)):await this.fapiPrivateDeleteAllOpenOrders(this.extend(o,t)):n.inverse?a=i?d?await this.papiDeleteCmConditionalAllOpenOrders(this.extend(o,t)):await this.papiDeleteCmAllOpenOrders(this.extend(o,t)):await this.dapiPrivateDeleteAllOpenOrders(this.extend(o,t)):"margin"===h||void 0!==r||i?i?a=await this.papiDeleteMarginAllOpenOrders(this.extend(o,t)):("isolated"===r&&(o.isIsolated=!0),a=await this.sapiDeleteMarginOpenOrders(this.extend(o,t))):a=await this.privateDeleteOpenOrders(this.extend(o,t)),Array.isArray(a))?this.parseOrders(a,n):[this.safeOrder({info:a})]}async cancelOrders(e,t,i={}){let r;if(void 0===t)throw new s.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();let a=this.market(t);if(!a.contract)throw new s.BadRequest(this.id+" cancelOrders is only supported for swap markets.");let n={symbol:a.id,orderidlist:e};return a.linear?r=await this.fapiPrivateDeleteBatchOrders(this.extend(n,i)):a.inverse&&(r=await this.dapiPrivateDeleteBatchOrders(this.extend(n,i))),this.parseOrders(r,a)}async fetchOrderTrades(e,t,i,r,a={}){if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();let n=this.market(t),o=this.safeString(a,"type",n.type);if(a=this.omit(a,"type"),"spot"!==o)throw new s.NotSupported(this.id+" fetchOrderTrades() supports spot markets only");return await this.fetchMyTrades(t,i,r,this.extend({orderId:e},a))}async fetchMyTrades(e,t,i,r={}){let a,n,o,d;await this.loadMarkets();let h=!1;if([h,r]=this.handleOptionAndParams(r,"fetchMyTrades","paginate"),h)return await this.fetchPaginatedCallDynamic("fetchMyTrades",e,t,i,r);let c={};void 0!==e&&(a=this.market(e),c.symbol=a.id),[n,r]=this.handleMarketTypeAndParams("fetchMyTrades",a,r);let l=this.safeInteger2(r,"until","endTime");if(void 0!==t){c.startTime=t;let e=this.milliseconds();e-t>=6048e5&&void 0===l&&a.linear&&(l=Math.min(l=this.sum(t,6048e5),e))}if(void 0!==l&&(c.endTime=l,r=this.omit(r,["endTime","until"])),void 0!==i&&(("option"===n||a.contract)&&(i=Math.min(i,1e3)),c.limit=i),"option"===n)d=await this.eapiPrivateGetUserTrades(this.extend(c,r));else{let t;if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");[o,r]=this.handleMarginModeAndParams("fetchMyTrades",r),[t,r]=this.handleOptionAndParams2(r,"fetchMyTrades","papi","portfolioMargin",!1),"spot"===n||"margin"===n?t?d=await this.papiGetMarginMyTrades(this.extend(c,r)):"margin"===n||void 0!==o?("isolated"===o&&(c.isIsolated=!0),d=await this.sapiGetMarginMyTrades(this.extend(c,r))):d=await this.privateGetMyTrades(this.extend(c,r)):a.linear?d=t?await this.papiGetUmUserTrades(this.extend(c,r)):await this.fapiPrivateGetUserTrades(this.extend(c,r)):a.inverse&&(d=t?await this.papiGetCmUserTrades(this.extend(c,r)):await this.dapiPrivateGetUserTrades(this.extend(c,r)))}return this.parseTrades(d,a,t,i)}async fetchMyDustTrades(e,t,i,r={}){await this.loadMarkets();let s={};void 0!==t&&(s.startTime=t,s.endTime=this.sum(t,7776e6));let a=this.safeStringUpper(r,"type");r=this.omit(r,"type"),void 0!==a&&(s.accountType=a);let n=await this.sapiGetAssetDribblet(this.extend(s,r)),o=this.safeList(n,"userAssetDribblets",[]),d=this.safeInteger(n,"total",0),h=[];for(let e=0;e<d;e++){let t=this.safeList(o[e],"userAssetDribbletDetails",[]);for(let e=0;e<t.length;e++)t[e].isDustTrade=!0,h.push(t[e])}let c=this.parseTrades(h,void 0,t,i);return this.filterBySinceLimit(c,t,i)}parseDustTrade(e,t){let i,r,s,n,o;let d=this.safeString(e,"transId"),h=this.safeInteger(e,"operateTime"),c=this.safeString(e,"fromAsset"),l=this.safeCurrencyCode(c),p=this.currency("BNB").code,u=p+"/"+l,m=!1;u in this.markets&&(m=!0);let f=this.safeString(e,"serviceChargeAmount"),g={currency:p,cost:this.parseNumber(f)};m?(i=u,r=this.safeString(e,"transferedAmount"),s=this.safeString(e,"amount"),n="buy"):(i=l+"/"+p,r=this.safeString(e,"amount"),s=this.safeString(e,"transferedAmount"),n="sell"),void 0!==s&&r&&(o=a.Y.stringDiv(s,r));let y=this.parseNumber(r),b=this.parseNumber(o),v=this.parseNumber(s);return{id:void 0,timestamp:h,datetime:this.iso8601(h),symbol:i,order:d,type:void 0,takerOrMaker:void 0,side:n,amount:y,price:b,cost:v,fee:g,info:e}}async fetchDeposits(e,t,i,r={}){let s,a;await this.loadMarkets();let n=!1;if([n,r]=this.handleOptionAndParams(r,"fetchDeposits","paginate"),n)return await this.fetchPaginatedCallDynamic("fetchDeposits",e,t,i,r);let o={},d=this.safeDict(this.options,"legalMoney",{}),h=this.safeBool(r,"fiat",!1);r=this.omit(r,"fiatOnly");let c=this.safeInteger(r,"until");if(r=this.omit(r,"until"),h||e in d){void 0!==e&&(s=this.currency(e)),o.transactionType=0,void 0!==t&&(o.beginTime=t),void 0!==c&&(o.endTime=c);let i=await this.sapiGetFiatOrders(this.extend(o,r));a=this.safeList(i,"data",[])}else{if(void 0!==e&&(s=this.currency(e),o.coin=s.id),void 0!==t){o.startTime=t;let e=this.sum(t,7776e6);void 0!==c&&(e=Math.min(e,c)),o.endTime=e}void 0!==i&&(o.limit=i),a=await this.sapiGetCapitalDepositHisrec(this.extend(o,r))}for(let e=0;e<a.length;e++)a[e].type="deposit";return this.parseTransactions(a,s,t,i)}async fetchWithdrawals(e,t,i,r={}){let s,a;await this.loadMarkets();let n=!1;if([n,r]=this.handleOptionAndParams(r,"fetchWithdrawals","paginate"),n)return await this.fetchPaginatedCallDynamic("fetchWithdrawals",e,t,i,r);let o=this.safeDict(this.options,"legalMoney",{}),d=this.safeBool(r,"fiat",!1);r=this.omit(r,"fiatOnly");let h={},c=this.safeInteger(r,"until");if(void 0!==c&&(r=this.omit(r,"until"),h.endTime=c),d||e in o){void 0!==e&&(a=this.currency(e)),h.transactionType=1,void 0!==t&&(h.beginTime=t);let i=await this.sapiGetFiatOrders(this.extend(h,r));s=this.safeList(i,"data",[])}else void 0!==e&&(a=this.currency(e),h.coin=a.id),void 0!==t&&(h.startTime=t,h.endTime=this.sum(t,7776e6)),void 0!==i&&(h.limit=i),s=await this.sapiGetCapitalWithdrawHistory(this.extend(h,r));for(let e=0;e<s.length;e++)s[e].type="withdrawal";return this.parseTransactions(s,a,t,i)}parseTransactionStatusByType(e,t){if(void 0===t)return e;let i=this.safeDict({deposit:{0:"pending",1:"ok",6:"ok",Processing:"pending",Failed:"failed",Successful:"ok",Refunding:"canceled",Refunded:"canceled","Refund Failed":"failed"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",6:"ok",Processing:"pending",Failed:"failed",Successful:"ok",Refunding:"canceled",Refunded:"canceled","Refund Failed":"failed"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t){let i,r,s;let a=this.safeString2(e,"id","orderNo"),n=this.safeString(e,"address"),o=this.safeString(e,"addressTag");void 0!==o&&o.length<1&&(o=void 0);let d=this.safeString(e,"txId");void 0!==d&&d.indexOf("Internal transfer ")>=0&&(d=d.slice(18));let h=this.safeString2(e,"coin","fiatCurrency"),c=this.safeCurrencyCode(h,t);void 0===(i=this.safeInteger2(e,"insertTime","createTime"))&&(i=this.parse8601(this.safeString(e,"applyTime")));let l=this.safeInteger2(e,"successTime","updateTime"),p=this.safeString(e,"type");if(void 0===p){let t=this.safeString(e,"transactionType");void 0!==t&&(p="0"===t?"deposit":"withdrawal");let i=this.safeDict(this.options,"legalMoneyCurrenciesById");c=this.safeString(i,c,c)}let u=this.parseTransactionStatusByType(this.safeString(e,"status"),p),m=this.safeNumber(e,"amount"),f=this.safeNumber2(e,"transactionFee","totalFee");void 0!==f&&(r={currency:c,cost:f});let g=this.safeInteger(e,"transferType");void 0!==g&&(s=!!g);let y=this.safeString(e,"network");return{info:e,id:a,txid:d,timestamp:i,datetime:this.iso8601(i),network:y,address:n,addressTo:n,addressFrom:void 0,tag:o,tagTo:o,tagFrom:void 0,type:p,amount:m,currency:c,status:u,updated:l,internal:s,comment:void 0,fee:r}}parseTransferStatus(e){return this.safeString({CONFIRMED:"ok"},e,e)}parseTransfer(e,t){let i,r;let s=this.safeString2(e,"tranId","transactionId"),a=this.safeString2(e,"asset","currency"),n=this.safeCurrencyCode(a,t),o=this.safeNumber(e,"amount"),d=this.safeString(e,"type"),h=this.safeDict(this.options,"accountsById",{});if(void 0!==d){let e=d.split("_");i=this.safeValue(e,0),r=this.safeValue(e,1),i=this.safeString(h,i,i),r=this.safeString(h,r,r)}if(void 0!==this.safeInteger(e,"walletType")){let t=this.safeDict(e,"payerInfo",{}),s=this.safeDict(e,"receiverInfo",{});i=this.safeString(t,"accountId"),r=this.safeString(s,"accountId")}let c=this.safeInteger2(e,"timestamp","transactionTime"),l=this.parseTransferStatus(this.safeString(e,"status"));return{info:e,id:s,timestamp:c,datetime:this.iso8601(c),currency:n,amount:o,fromAccount:i,toAccount:r,status:l}}parseIncome(e,t){let i=this.safeString(e,"symbol"),r=this.safeString(e,"asset"),s=this.safeInteger(e,"time");return{info:e,symbol:this.safeSymbol(i,t,void 0,"swap"),code:this.safeCurrencyCode(r),timestamp:s,datetime:this.iso8601(s),id:this.safeString(e,"tranId"),amount:this.safeNumber(e,"income")}}async transfer(e,t,i,r,a={}){await this.loadMarkets();let n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t)};if(o.type=this.safeString(a,"type"),a=this.omit(a,"type"),void 0===o.type){let e,t;let n=this.safeString(a,"symbol");void 0!==n&&(e=this.market(n),a=this.omit(a,"symbol"));let d=this.convertTypeToAccount(i).toUpperCase(),h=this.convertTypeToAccount(r).toUpperCase();if(void 0!==e&&(t=e.id),"ISOLATED"===d&&void 0===n)throw new s.ArgumentsRequired(this.id+' transfer () requires params["symbol"] when fromAccount is '+i);if("ISOLATED"===h&&void 0===n)throw new s.ArgumentsRequired(this.id+' transfer () requires params["symbol"] when toAccount is '+r);let c=this.safeDict(this.options,"accountsById",{}),l=!(d in c),p=!(h in c);if(l&&void 0===e&&(t=d),p&&void 0===e&&(t=h),l||p){let e="UMFUTURE"===d||"CMFUTURE"===d,a="UMFUTURE"===h||"CMFUTURE"===h,n="MAIN"===d,c="MAIN"===h,u="FUNDING"===d||"FUNDING"===h,m="OPTION"===d||"OPTION"===h;if((l||p)&&(e||a||u||m))throw new s.BadRequest(this.id+" transfer () does not allow transfers between "+i+" and "+r);c&&l?(d="ISOLATED_MARGIN",o.fromSymbol=t):n&&p?(h="ISOLATED_MARGIN",o.toSymbol=t):l&&p?(o.fromSymbol=d,o.toSymbol=h,d="ISOLATEDMARGIN",h="ISOLATEDMARGIN"):(l&&(o.fromSymbol=t,d="ISOLATEDMARGIN"),p&&(o.toSymbol=t,h="ISOLATEDMARGIN")),o.type=d+"_"+h}else o.type=d+"_"+h}let d=await this.sapiPostAssetTransfer(this.extend(o,a));return this.parseTransfer(d,n)}async fetchTransfers(e,t,i,r={}){let a,n;await this.loadMarkets();let o=this.safeBool(r,"internal");r=this.omit(r,"internal");let d=!1;if([d,r]=this.handleOptionAndParams(r,"fetchTransfers","paginate"),d&&!o)return await this.fetchPaginatedCallDynamic("fetchTransfers",e,t,i,r);void 0!==e&&(a=this.currency(e));let h={},c="limit";if(!o){let e=this.safeString2(this.options,"fetchTransfers","defaultType","spot"),t=this.safeString(r,"fromAccount",e),i=this.safeString(r,"toAccount","future"===t?"spot":"future"),a=this.safeString(r,"type"),n=this.safeDict(this.options,"accountsByType",{}),o=this.safeString(n,t),d=this.safeString(n,i);if(void 0===a){if(void 0===o){let e=Object.keys(n);throw new s.ExchangeError(this.id+" fromAccount parameter must be one of "+e.join(", "))}if(void 0===d){let e=Object.keys(n);throw new s.ExchangeError(this.id+" toAccount parameter must be one of "+e.join(", "))}a=o+"_"+d}h.type=a,c="size"}void 0!==i&&(h[c]=i),void 0!==t&&(h.startTime=t);let l=this.safeInteger(r,"until");void 0!==l&&(r=this.omit(r,"until"),h.endTime=l),n=o?await this.sapiGetPayTransactions(this.extend(h,r)):await this.sapiGetAssetTransfer(this.extend(h,r));let p=this.safeList2(n,"rows","data",[]);return this.parseTransfers(p,a,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),r={coin:i.id},s=this.safeDict(this.options,"networks",{}),a=this.safeStringUpper(t,"network");void 0!==(a=this.safeString(s,a,a))&&(r.network=a,t=this.omit(t,"network"));let n=await this.sapiGetCapitalDepositAddress(this.extend(r,t));return this.parseDepositAddress(n,i)}parseDepositAddress(e,t){let i;let r=this.safeDict(e,"info",{}),s=this.safeString(r,"url"),a=this.safeString(e,"address"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t);if(void 0!==s){let e=this.safeDict(this.options,"reverseNetworks",{}),t=s.split("/"),r=this.safeString(t,2);if("blockchair.com"===r||"viewblock.io"===r){let e=this.safeString(t,3);void 0!==e&&(r=r+"/"+e)}i=this.safeString(e,r);let a=this.safeDict(this.options,"impliedNetworks",{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}});if(o in a){let e=this.safeDict(a,o,{});i=this.safeString(e,i,i)}}let d=this.safeString(e,"tag","");return 0===d.length&&(d=void 0),this.checkAddress(a),{info:e,currency:o,network:i,address:a,tag:d}}async fetchTransactionFees(e,t={}){await this.loadMarkets();let i=await this.sapiGetCapitalConfigGetall(t),r={};for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"coin"),a=this.safeCurrencyCode(s),n=this.safeList(t,"networkList",[]);r[a]={};for(let e=0;e<n.length;e++){let t=n[e],i=this.safeString(t,"network"),s=this.safeCurrencyCode(i),o=this.safeNumber(t,"withdrawFee");r[a][s]=o}}return{withdraw:r,deposit:{},info:i}}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.sapiGetCapitalConfigGetall(t);return this.parseDepositWithdrawFees(i,e,"coin")}parseDepositWithdrawFee(e,t){let i=this.safeList(e,"networkList",[]),r=this.depositWithdrawFee(e);for(let e=0;e<i.length;e++){let t=i[e],s=this.safeString(t,"network"),a=this.networkIdToCode(s),n=this.safeNumber(t,"withdrawFee");!0===this.safeBool(t,"isDefault")&&(r.withdraw={fee:n,percentage:void 0}),r.networks[a]={withdraw:{fee:n,percentage:void 0},deposit:{fee:void 0,percentage:void 0}}}return r}async withdraw(e,t,i,r,s={}){[r,s]=this.handleWithdrawTagAndParams(r,s),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),n={coin:a.id,address:i,amount:this.currencyToPrecision(e,t)};void 0!==r&&(n.addressTag=r);let o=this.safeDict(this.options,"networks",{}),d=this.safeStringUpper(s,"network");void 0!==(d=this.safeString(o,d,d))&&(n.network=d,s=this.omit(s,"network"));let h=await this.sapiPostCapitalWithdrawApply(this.extend(n,s));return this.parseTransaction(h,a)}parseTradingFee(e,t){let i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i,t,void 0,"spot"),maker:this.safeNumber2(e,"makerCommission","makerCommissionRate"),taker:this.safeNumber2(e,"takerCommission","takerCommissionRate"),percentage:void 0,tierBased:void 0}}async fetchTradingFee(e,t={}){let i,r;await this.loadMarkets();let s=this.market(e),a=s.type;[i,t]=this.handleSubTypeAndParams("fetchTradingFee",s,t),[r,t]=this.handleOptionAndParams2(t,"fetchTradingFee","papi","portfolioMargin",!1);let n=this.isLinear(a,i),o=this.isInverse(a,i),d={symbol:s.id},h=n?r?await this.papiGetUmCommissionRate(this.extend(d,t)):await this.fapiPrivateGetCommissionRate(this.extend(d,t)):o?r?await this.papiGetCmCommissionRate(this.extend(d,t)):await this.dapiPrivateGetCommissionRate(this.extend(d,t)):await this.sapiGetAssetTradeFee(this.extend(d,t));return Array.isArray(h)&&(h=this.safeDict(h,0,{})),this.parseTradingFee(h,s)}async fetchTradingFees(e={}){let t,i,r;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchTradingFees",void 0,e),[i,e]=this.handleSubTypeAndParams("fetchTradingFees",void 0,e,"linear");let s="spot"===t||"margin"===t,a=this.isLinear(t,i),n=this.isInverse(t,i);if(s?r=await this.sapiGetAssetTradeFee(e):a?r=await this.fapiPrivateGetAccountConfig(e):n&&(r=await this.dapiPrivateGetAccount(e)),s){let e={};for(let t=0;t<r.length;t++){let i=this.parseTradingFee(r[t]);e[i.symbol]=i}return e}if(a){let e=Object.keys(this.markets),t={},i=this.safeInteger(r,"feeTier"),s=this.fees.linear.trading.tiers,a=s.maker[i][1],n=s.taker[i][1];for(let r=0;r<e.length;r++){let s=e[r];this.markets[s].linear&&(t[s]={info:{feeTier:i},symbol:s,maker:a,taker:n})}return t}if(n){let e=Object.keys(this.markets),t={},i=this.safeInteger(r,"feeTier"),s=this.fees.inverse.trading.tiers,a=s.maker[i][1],n=s.taker[i][1];for(let r=0;r<e.length;r++){let s=e[r];this.markets[s].inverse&&(t[s]={info:{feeTier:i},symbol:s,maker:a,taker:n})}return t}}async futuresTransfer(e,t,i,r={}){if(i<1||i>4)throw new s.ArgumentsRequired(this.id+" type must be between 1 and 4");await this.loadMarkets();let a=this.currency(e),n={asset:a.id,amount:t,type:i},o=await this.sapiPostFuturesTransfer(this.extend(n,r));return this.parseTransfer(o,a)}async fetchFundingRate(e,t={}){let i;await this.loadMarkets();let r=this.market(e),a={symbol:r.id};if(r.linear)i=await this.fapiPublicGetPremiumIndex(this.extend(a,t));else if(r.inverse)i=await this.dapiPublicGetPremiumIndex(this.extend(a,t));else throw new s.NotSupported(this.id+" fetchFundingRate() supports linear and inverse contracts only");return r.inverse&&(i=i[0]),this.parseFundingRate(i,r)}async fetchFundingRateHistory(e,t,i,r={}){let a,n,o;await this.loadMarkets();let d={},h=!1;if([h,r]=this.handleOptionAndParams(r,"fetchFundingRateHistory","paginate"),h)return await this.fetchPaginatedCallDeterministic("fetchFundingRateHistory",e,t,i,"8h",r);let c=this.safeString2(this.options,"fetchFundingRateHistory","defaultType","future"),l=this.safeString(r,"type",c);void 0!==e&&(e=(a=this.market(e)).symbol,d.symbol=a.id),[n,r]=this.handleSubTypeAndParams("fetchFundingRateHistory",a,r,"linear"),r=this.omit(r,"type"),void 0!==t&&(d.startTime=t);let p=this.safeInteger(r,"until"),u=this.safeInteger(r,"endTime",p);if(r=this.omit(r,["endTime","until"]),void 0!==u&&(d.endTime=u),void 0!==i&&(d.limit=i),this.isLinear(l,n))o=await this.fapiPublicGetFundingRate(this.extend(d,r));else if(this.isInverse(l,n))o=await this.dapiPublicGetFundingRate(this.extend(d,r));else throw new s.NotSupported(this.id+" fetchFundingRateHistory() is not supported for "+l+" markets");return this.parseFundingRateHistories(o,a,t,i)}parseFundingRateHistory(e,t){let i=this.safeInteger(e,"fundingTime");return{info:e,symbol:this.safeSymbol(this.safeString(e,"symbol"),void 0,void 0,"swap"),fundingRate:this.safeNumber(e,"fundingRate"),timestamp:i,datetime:this.iso8601(i)}}async fetchFundingRates(e,t={}){let i,r;await this.loadMarkets(),e=this.marketSymbols(e);let a=this.safeString2(this.options,"fetchFundingRates","defaultType","future"),n=this.safeString(t,"type",a);[i,t]=this.handleSubTypeAndParams("fetchFundingRates",void 0,t,"linear");let o=this.omit(t,"type");if(this.isLinear(n,i))r=await this.fapiPublicGetPremiumIndex(o);else if(this.isInverse(n,i))r=await this.dapiPublicGetPremiumIndex(o);else throw new s.NotSupported(this.id+" fetchFundingRates() supports linear and inverse contracts only");return this.parseFundingRates(r,e)}parseFundingRate(e,t){let i;let r=this.safeInteger(e,"time"),s=this.safeString(e,"symbol"),a=this.safeSymbol(s,t,void 0,"contract"),n=this.safeNumber(e,"markPrice"),o=this.safeNumber(e,"indexPrice"),d=this.safeNumber(e,"interestRate"),h=this.safeNumber(e,"estimatedSettlePrice"),c=this.safeNumber(e,"lastFundingRate"),l=this.safeInteger(e,"nextFundingTime"),p=this.safeString(e,"fundingIntervalHours");return void 0!==p&&(i=p+"h"),{info:e,symbol:a,markPrice:n,indexPrice:o,interestRate:d,estimatedSettlePrice:h,timestamp:r,datetime:this.iso8601(r),fundingRate:c,fundingTimestamp:l,fundingDatetime:this.iso8601(l),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:i}}parseAccountPositions(e,t=!1){let i=this.safeList(e,"positions"),r=this.safeList(e,"assets",[]),s={};for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"asset"),n=this.safeCurrencyCode(i),o=this.safeString(t,"crossWalletBalance"),d=this.safeString(t,"crossUnPnl");s[n]={crossMargin:a.Y.stringAdd(o,d),crossWalletBalance:o}}let n=[];for(let e=0;e<i.length;e++){let r=i[e],a=this.safeString(r,"symbol"),o=this.safeMarket(a,void 0,void 0,"contract"),d=o.linear?o.quote:o.base,h=this.safeString(r,"maintMargin"),c="0"!==h&&"0.00000000"!==h;if((!t||c)&&d in s){let e=this.parseAccountPosition(this.extend(r,{crossMargin:s[d].crossMargin,crossWalletBalance:s[d].crossWalletBalance}),o);n.push(e)}}return n}parseAccountPosition(e,t){let i,r,s,n,o,d,h,c,l,p;let u=this.safeString(e,"symbol");t=this.safeMarket(u,t,void 0,"contract");let m=this.safeString(t,"symbol"),f=this.safeString(e,"leverage"),g=void 0!==f?parseInt(f):void 0,y=this.safeString(e,"initialMargin"),b=this.parseNumber(y);void 0===f||(i=a.Y.stringDiv("1",f,8),this.isRoundNumber(1e3%g)||(i=a.Y.stringDiv(a.Y.stringAdd(i,"1e-8"),"1",8)));let v="notional"in e,w=this.safeString(e,"maintMargin"),O=this.parseNumber(w),R=this.safeString(e,"entryPrice"),S=this.parseNumber(R),E=this.safeString2(e,"notional","notionalValue"),x=a.Y.stringAbs(E),P=this.parseNumber(x),k=this.safeString(e,"positionAmt"),T=a.Y.stringAbs(k);if(void 0===k){let e=a.Y.stringMul(a.Y.stringMul(f,y),R),i=this.safeString(t,"contractSize");k=a.Y.stringDiv(e,i),T=a.Y.stringDiv(a.Y.stringAdd(k,"0.5"),"1",0)}let B=this.parseNumber(T),M=this.safeDict(this.options,"leverageBrackets",{}),A=this.safeList(M,m,[]);for(let e=0;e<A.length;e++){let t=A[e];if(a.Y.stringLt(x,t[0]))break;r=t[1]}let I=this.parseNumber(r),q=this.safeString(e,"unrealizedProfit"),N=this.parseNumber(q),C=this.safeInteger(e,"updateTime");0===C&&(C=void 0);let L=this.safeBool(e,"isolated");if(void 0===L){let t=this.safeString(e,"isolatedMargin");L=!a.Y.stringEq(t,"0")}L?(s="isolated",o=this.safeString(e,"isolatedWallet"),n=a.Y.stringAdd(o,q)):(s="cross",o=this.safeString(e,"crossWalletBalance"),n=this.safeString(e,"crossMargin"));let D=this.parseNumber(n),F=this.safeValue(t,"contractSize"),G=this.numberToString(F);if(a.Y.stringEquals(E,"0"))S=void 0;else{if(h=a.Y.stringLt(E,"0")?"short":"long",d=this.parseNumber(a.Y.stringDiv(a.Y.stringAdd(a.Y.stringDiv(w,n),"5e-5"),"1",4)),c=this.parseNumber(a.Y.stringMul(a.Y.stringDiv(q,y,4),"100")),v){let e;let t=R;"short"===h?e=a.Y.stringAdd("1",r):(e=a.Y.stringAdd("-1",r),t=a.Y.stringMul("-1",t));let i=a.Y.stringDiv(o,a.Y.stringMul(T,e)),s=a.Y.stringDiv(t,e);l=a.Y.stringAdd(i,s)}else{let e;let t=R;"short"===h?e=a.Y.stringSub("1",r):(e=a.Y.stringSub("-1",r),t=a.Y.stringMul("-1",t));let i=a.Y.stringMul(T,G),s=a.Y.stringMul(i,e),n=a.Y.stringSub(a.Y.stringMul(a.Y.stringDiv("1",t),i),o);l=a.Y.stringDiv(s,n)}let e=this.precisionFromString(this.safeString(t.precision,"price")),i=(e+1).toString(),s=new a.Y("5e-"+i).toString(),u=a.Y.stringAdd(s,l),m=a.Y.stringDiv(u,"1",e);"-"===m[0]&&(m=void 0),p=this.parseNumber(m)}let U=this.safeString(e,"positionSide");return{info:e,id:void 0,symbol:m,timestamp:C,datetime:this.iso8601(C),initialMargin:b,initialMarginPercentage:this.parseNumber(i),maintenanceMargin:O,maintenanceMarginPercentage:I,entryPrice:S,notional:P,leverage:this.parseNumber(f),unrealizedPnl:N,contracts:B,contractSize:F,marginRatio:d,liquidationPrice:p,markPrice:void 0,collateral:D,marginMode:s,side:h,hedged:"BOTH"!==U,percentage:c}}parsePositionRisk(e,t){let i,r,s,n,o,d,h;let c=this.safeString(e,"symbol");t=this.safeMarket(c,t,void 0,"contract");let l=this.safeString(t,"symbol"),p=this.safeString(e,"isolatedMargin"),u=this.safeDict(this.options,"leverageBrackets",{}),m=this.safeList(u,l,[]),f=this.safeString2(e,"notional","notionalValue"),g=a.Y.stringAbs(f);for(let e=0;e<m.length;e++){let t=m[e];if(a.Y.stringLt(g,t[0]))break;i=t[1]}let y=this.parseNumber(g),b=a.Y.stringAbs(this.safeString(e,"positionAmt")),v=this.parseNumber(b),w=this.safeString(e,"unRealizedProfit"),O=this.parseNumber(w),R=this.omitZero(this.safeString(e,"liquidationPrice")),S=this.parseNumber(R),E=this.safeString(e,"marginType");void 0===E&&void 0!==p&&(E=a.Y.stringEq(p,"0")?"cross":"isolated"),a.Y.stringGt(f,"0")?s="long":a.Y.stringLt(f,"0")&&(s="short");let x=this.safeString(e,"entryPrice"),P=this.parseNumber(x),k=this.safeValue(t,"contractSize"),T=this.numberToString(k),B="notional"in e;if("cross"===E){let e=this.safeDict(t,"precision",{}),n=this.safeString(e,"base"),o=this.safeString2(e,"quote","price");if(!(void 0===n&&void 0===o)){if(B){let t;let n=x;"short"===s?(t=a.Y.stringAdd("1",i),n=a.Y.stringMul("-1",n)):t=a.Y.stringAdd("-1",i);let o=a.Y.stringMul(R,t),d=a.Y.stringAdd(o,n),h=this.precisionFromString(this.safeString2(e,"quote","price"));void 0!==h&&(r=a.Y.stringDiv(a.Y.stringMul(d,b),"1",h))}else{let t;let n=x;"short"===s?t=a.Y.stringSub("1",i):(t=a.Y.stringSub("-1",i),n=a.Y.stringMul("-1",n));let o=a.Y.stringMul(b,T),d=a.Y.stringSub(a.Y.stringDiv("1",n),a.Y.stringDiv(t,R)),h=this.precisionFromString(this.safeString(e,"base"));void 0!==h&&(r=a.Y.stringDiv(a.Y.stringMul(o,d),"1",h))}}}else r=this.safeString(e,"isolatedMargin");r=void 0===r?"0":r;let M=this.parseNumber(r),A=this.parseNumber(this.omitZero(this.safeString(e,"markPrice"))),I=this.safeInteger(e,"updateTime");0===I&&(I=void 0);let q=this.parseNumber(i),N=a.Y.stringMul(i,g);void 0===N&&(N=this.safeString(e,"maintMargin"));let C=this.parseNumber(N),L=this.safeString(e,"leverage");if(void 0!==L){let e=parseInt(L),t=this.isRoundNumber(1e3%e);o=a.Y.stringDiv("1",L,8),t||(o=a.Y.stringAdd(o,"1e-8"));let i=a.Y.stringMul(g,o);n=a.Y.stringDiv(i,"1",8)}else{n=this.safeString(e,"initialMargin");let t=a.Y.stringMul(n,"1");o=a.Y.stringDiv(t,g,8)}a.Y.stringEquals(r,"0")||(d=this.parseNumber(a.Y.stringDiv(a.Y.stringAdd(a.Y.stringDiv(N,r),"5e-5"),"1",4)),h=this.parseNumber(a.Y.stringMul(a.Y.stringDiv(w,n,4),"100")));let D=this.safeString(e,"positionSide");return{info:e,id:void 0,symbol:l,contracts:v,contractSize:k,unrealizedPnl:O,leverage:this.parseNumber(L),liquidationPrice:S,collateral:M,notional:y,markPrice:A,entryPrice:P,timestamp:I,initialMargin:this.parseNumber(n),initialMarginPercentage:this.parseNumber(o),maintenanceMargin:C,maintenanceMarginPercentage:q,marginRatio:d,datetime:this.iso8601(I),marginMode:E,marginType:E,side:s,hedged:"BOTH"!==D,percentage:h,stopLossPrice:void 0,takeProfitPrice:void 0}}async loadLeverageBrackets(e=!1,t={}){if(await this.loadMarkets(),void 0===this.safeDict(this.options,"leverageBrackets")||e){let e,i,r;let a=this.safeString(this.options,"defaultType","future"),n=this.safeString(t,"type",a),o=this.omit(t,"type");if([e,t]=this.handleSubTypeAndParams("loadLeverageBrackets",void 0,t,"linear"),[i,t]=this.handleOptionAndParams2(t,"loadLeverageBrackets","papi","portfolioMargin",!1),this.isLinear(n,e))r=i?await this.papiGetUmLeverageBracket(o):await this.fapiPrivateGetLeverageBracket(o);else if(this.isInverse(n,e))r=i?await this.papiGetCmLeverageBracket(o):await this.dapiPrivateV2GetLeverageBracket(o);else throw new s.NotSupported(this.id+" loadLeverageBrackets() supports linear and inverse contracts only");this.options.leverageBrackets={};for(let e=0;e<r.length;e++){let t=r[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i,void 0,void 0,"contract"),a=this.safeList(t,"brackets",[]),n=[];for(let e=0;e<a.length;e++){let t=a[e],i=this.safeString2(t,"notionalFloor","qtyFloor"),r=this.safeString(t,"maintMarginRatio");n.push([i,r])}this.options.leverageBrackets[s]=n}}return this.options.leverageBrackets}async fetchLeverageTiers(e,t={}){let i,r,a,n;if(await this.loadMarkets(),[i,t]=this.handleMarketTypeAndParams("fetchLeverageTiers",void 0,t),[r,t]=this.handleSubTypeAndParams("fetchLeverageTiers",void 0,t,"linear"),[a,t]=this.handleOptionAndParams2(t,"fetchLeverageTiers","papi","portfolioMargin",!1),this.isLinear(i,r))n=a?await this.papiGetUmLeverageBracket(t):await this.fapiPrivateGetLeverageBracket(t);else if(this.isInverse(i,r))n=a?await this.papiGetCmLeverageBracket(t):await this.dapiPrivateV2GetLeverageBracket(t);else throw new s.NotSupported(this.id+" fetchLeverageTiers() supports linear and inverse contracts only");return this.parseLeverageTiers(n,e,"symbol")}parseMarketLeverageTiers(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"contract");let r=this.safeList(e,"brackets",[]),s=[];for(let e=0;e<r.length;e++){let a=r[e];s.push({tier:this.safeNumber(a,"bracket"),symbol:this.safeSymbol(i,t),currency:t.quote,minNotional:this.safeNumber2(a,"notionalFloor","qtyFloor"),maxNotional:this.safeNumber2(a,"notionalCap","qtyCap"),maintenanceMarginRate:this.safeNumber(a,"maintMarginRatio"),maxLeverage:this.safeNumber(a,"initialLeverage"),info:a})}return s}async fetchPosition(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.option)throw new s.NotSupported(this.id+" fetchPosition() supports option markets only");let r={symbol:i.id},a=await this.eapiPrivateGetPosition(this.extend(r,t));return this.parsePosition(a[0],i)}async fetchOptionPositions(e,t={}){let i;await this.loadMarkets();let r={};if(void 0!==(e=this.marketSymbols(e))){let t;if(Array.isArray(e)){if(e.length>1)throw new s.BadRequest(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");t=e[0]}else t=e;i=this.market(t),r.symbol=i.id}let a=await this.eapiPrivateGetPosition(this.extend(r,t)),n=[];for(let e=0;e<a.length;e++)n.push(this.parsePosition(a[e],i));return this.filterByArrayPositions(n,"symbol",e,!1)}parsePosition(e,t){let i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t)).symbol,s=this.safeStringLower(e,"side"),n=this.safeString(e,"quantity");"long"!==s&&(n=a.Y.stringMul("-1",n));let o=this.safeInteger(e,"time");return this.safePosition({info:e,id:void 0,symbol:r,entryPrice:this.safeNumber(e,"entryPrice"),markPrice:this.safeNumber(e,"markPrice"),notional:this.safeNumber(e,"markValue"),collateral:this.safeNumber(e,"positionCost"),unrealizedPnl:this.safeNumber(e,"unrealizedPNL"),side:s,contracts:this.parseNumber(n),contractSize:void 0,timestamp:o,datetime:this.iso8601(o),hedged:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:void 0,liquidationPrice:void 0,marginRatio:void 0,marginMode:void 0,percentage:void 0})}async fetchPositions(e,t={}){let i;if([i,t]=this.handleOptionAndParams(t,"fetchPositions","method"),void 0===i&&(i=void 0===this.safeDict(this.options,"fetchPositions")?this.safeString(this.options,"fetchPositions","positionRisk"):"positionRisk"),"positionRisk"===i)return await this.fetchPositionsRisk(e,t);if("account"===i)return await this.fetchAccountPositions(e,t);if("option"===i)return await this.fetchOptionPositions(e,t);throw new s.NotSupported(this.id+'.options["fetchPositions"]["method"] or params["method"] = "'+i+'" is invalid, please choose between "account", "positionRisk" and "option"')}async fetchAccountPositions(e,t={}){let i,r,a,n;if(void 0!==e&&!Array.isArray(e))throw new s.ArgumentsRequired(this.id+" fetchPositions() requires an array argument for symbols");await this.loadMarkets(),await this.loadLeverageBrackets(!1,t);let o=this.safeString(this.options,"defaultType","future"),d=this.safeString(t,"type",o);if(t=this.omit(t,"type"),[i,t]=this.handleSubTypeAndParams("fetchAccountPositions",void 0,t,"linear"),[r,t]=this.handleOptionAndParams2(t,"fetchAccountPositions","papi","portfolioMargin",!1),this.isLinear(d,i)){if(r)a=await this.papiGetUmAccount(t);else{let e;[e,t]=this.handleOptionAndParams(t,"fetchAccountPositions","useV2",!1),a=e?await this.fapiPrivateV2GetAccount(t):await this.fapiPrivateV3GetAccount(t)}}else if(this.isInverse(d,i))a=r?await this.papiGetCmAccount(t):await this.dapiPrivateGetAccount(t);else throw new s.NotSupported(this.id+" fetchPositions() supports linear and inverse contracts only");[n,t]=this.handleOptionAndParams(t,"fetchAccountPositions","filterClosed",!1);let h=this.parseAccountPositions(a,n);return e=this.marketSymbols(e),this.filterByArrayPositions(h,"symbol",e,!1)}async fetchPositionsRisk(e,t={}){let i,r,n;if(void 0!==e&&!Array.isArray(e))throw new s.ArgumentsRequired(this.id+" fetchPositionsRisk() requires an array argument for symbols");await this.loadMarkets(),await this.loadLeverageBrackets(!1,t);let o={},d="future";d=this.safeString(this.options,"defaultType",d);let h=this.safeString(t,"type",d);if([i,t]=this.handleSubTypeAndParams("fetchPositionsRisk",void 0,t,"linear"),[r,t]=this.handleOptionAndParams2(t,"fetchPositionsRisk","papi","portfolioMargin",!1),t=this.omit(t,"type"),this.isLinear(h,i)){if(r)n=await this.papiGetUmPositionRisk(this.extend(o,t));else{let e;[e,t]=this.handleOptionAndParams(t,"fetchPositionsRisk","useV2",!1),t=this.extend(o,t),n=e?await this.fapiPrivateV2GetPositionRisk(t):await this.fapiPrivateV3GetPositionRisk(t)}}else if(this.isInverse(h,i))n=r?await this.papiGetCmPositionRisk(this.extend(o,t)):await this.dapiPrivateGetPositionRisk(this.extend(o,t));else throw new s.NotSupported(this.id+" fetchPositionsRisk() supports linear and inverse contracts only");let c=[];for(let e=0;e<n.length;e++){let t=n[e],i=this.safeString(t,"entryPrice");a.Y.stringGt(i,"0")&&c.push(this.parsePositionRisk(n[e]))}return e=this.marketSymbols(e),this.filterByArrayPositions(c,"symbol",e,!1)}async fetchFundingHistory(e,t,i,r={}){let a,n,o,d;await this.loadMarkets();let h={incomeType:"FUNDING_FEE"};if(void 0!==e&&(a=this.market(e),h.symbol=a.id,!a.swap))throw new s.NotSupported(this.id+" fetchFundingHistory() supports swap contracts only");[n,r]=this.handleSubTypeAndParams("fetchFundingHistory",a,r,"linear"),[o,r]=this.handleOptionAndParams2(r,"fetchFundingHistory","papi","portfolioMargin",!1),[h,r]=this.handleUntilOption("endTime",h,r),void 0!==t&&(h.startTime=t),void 0!==i&&(h.limit=i);let c=this.safeString2(this.options,"fetchFundingHistory","defaultType","future"),l=this.safeString(r,"type",c);if(r=this.omit(r,"type"),this.isLinear(l,n))d=o?await this.papiGetUmIncome(this.extend(h,r)):await this.fapiPrivateGetIncome(this.extend(h,r));else if(this.isInverse(l,n))d=o?await this.papiGetCmIncome(this.extend(h,r)):await this.dapiPrivateGetIncome(this.extend(h,r));else throw new s.NotSupported(this.id+" fetchFundingHistory() supports linear and inverse contracts only");return this.parseIncomes(d,a,t,i)}async setLeverage(e,t,i={}){let r,a;if(void 0===t)throw new s.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new s.BadRequest(this.id+" leverage should be between 1 and 125");await this.loadMarkets();let n=this.market(t),o={symbol:n.id,leverage:e};if([r,i]=this.handleOptionAndParams2(i,"setLeverage","papi","portfolioMargin",!1),n.linear)a=r?await this.papiPostUmLeverage(this.extend(o,i)):await this.fapiPrivatePostLeverage(this.extend(o,i));else if(n.inverse)a=r?await this.papiPostCmLeverage(this.extend(o,i)):await this.dapiPrivatePostLeverage(this.extend(o,i));else throw new s.NotSupported(this.id+" setLeverage() supports linear and inverse contracts only");return a}async setMarginMode(e,t,i={}){let r;if(void 0===t)throw new s.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("CROSS"===(e=e.toUpperCase())&&(e="CROSSED"),"ISOLATED"!==e&&"CROSSED"!==e)throw new s.BadRequest(this.id+" marginMode must be either isolated or cross");await this.loadMarkets();let a=this.market(t),n={symbol:a.id,marginType:e};try{if(a.linear)r=await this.fapiPrivatePostMarginType(this.extend(n,i));else if(a.inverse)r=await this.dapiPrivatePostMarginType(this.extend(n,i));else throw new s.NotSupported(this.id+" setMarginMode() supports linear and inverse contracts only")}catch(e){if(e instanceof s.MarginModeAlreadySet){if(this.safeBool(this.options,"throwMarginModeAlreadySet",!1))throw e;r={code:-4046,msg:"No need to change margin type."}}else throw e}return r}async setPositionMode(e,t,i={}){let r,a,n;let o=this.safeString(this.options,"defaultType","future"),d=this.safeString(i,"type",o);i=this.omit(i,["type"]),[r,i]=this.handleSubTypeAndParams("setPositionMode",void 0,i),[a,i]=this.handleOptionAndParams2(i,"setPositionMode","papi","portfolioMargin",!1);let h={dualSidePosition:e?"true":"false"};if(this.isInverse(d,r))n=a?await this.papiPostCmPositionSideDual(this.extend(h,i)):await this.dapiPrivatePostPositionSideDual(this.extend(h,i));else if(this.isLinear(d,r))n=a?await this.papiPostUmPositionSideDual(this.extend(h,i)):await this.fapiPrivatePostPositionSideDual(this.extend(h,i));else throw new s.BadRequest(this.id+" setPositionMode() supports linear and inverse contracts only");return n}async fetchLeverages(e,t={}){let i,r,a,n;if(await this.loadMarkets(),await this.loadLeverageBrackets(!1,t),[i,t]=this.handleMarketTypeAndParams("fetchLeverages",void 0,t),[r,t]=this.handleSubTypeAndParams("fetchLeverages",void 0,t,"linear"),[a,t]=this.handleOptionAndParams2(t,"fetchLeverages","papi","portfolioMargin",!1),this.isLinear(i,r))n=a?await this.papiGetUmAccount(t):await this.fapiPrivateGetSymbolConfig(t);else if(this.isInverse(i,r))n=a?await this.papiGetCmAccount(t):await this.dapiPrivateGetAccount(t);else throw new s.NotSupported(this.id+" fetchLeverages() supports linear and inverse contracts only");let o=this.safeList(n,"positions",[]);return Array.isArray(n)&&(o=n),this.parseLeverages(o,e,"symbol")}parseLeverage(e,t){let i,r,s;let a=this.safeString(e,"symbol"),n=this.safeBool(e,"isolated");void 0!==n&&(i=n?"isolated":"cross");let o=this.safeStringLower(e,"marginType");void 0!==o&&(i="crossed"===o?"cross":"isolated");let d=this.safeStringLower(e,"positionSide"),h=this.safeInteger(e,"leverage");return void 0===d||"both"===d?(r=h,s=h):"long"===d?r=h:"short"===d&&(s=h),{info:e,symbol:this.safeSymbol(a,t),marginMode:i,longLeverage:r,shortLeverage:s}}async fetchSettlementHistory(e,t,i,r={}){let a;await this.loadMarkets();let n=void 0===e?void 0:this.market(e);if([a,r]=this.handleMarketTypeAndParams("fetchSettlementHistory",n,r),"option"!==a)throw new s.NotSupported(this.id+" fetchSettlementHistory() supports option markets only");let o={};void 0!==e&&(e=n.symbol,o.underlying=n.baseId+n.quoteId),void 0!==t&&(o.startTime=t),void 0!==i&&(o.limit=i);let d=await this.eapiPublicGetExerciseHistory(this.extend(o,r)),h=this.parseSettlements(d,n),c=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(c,e,t,i)}async fetchMySettlementHistory(e,t,i,r={}){let a;await this.loadMarkets();let n=void 0===e?void 0:this.market(e);if([a,r]=this.handleMarketTypeAndParams("fetchMySettlementHistory",n,r),"option"!==a)throw new s.NotSupported(this.id+" fetchMySettlementHistory() supports option markets only");let o={};void 0!==e&&(o.symbol=n.id),void 0!==t&&(o.startTime=t),void 0!==i&&(o.limit=i);let d=await this.eapiPrivateGetExerciseRecord(this.extend(o,r)),h=this.parseSettlements(d,n),c=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(c,n.symbol,t,i)}parseSettlement(e,t){let i=this.safeInteger2(e,"expiryDate","createDate"),r=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(r,t),price:this.safeNumber2(e,"realStrikePrice","exercisePrice"),timestamp:i,datetime:this.iso8601(i)}}parseSettlements(e,t){let i=[];for(let r=0;r<e.length;r++)i.push(this.parseSettlement(e[r],t));return i}async fetchLedgerEntry(e,t,i={}){let r;if(await this.loadMarkets(),[r,i]=this.handleMarketTypeAndParams("fetchLedgerEntry",void 0,i),"option"!==r)throw new s.BadRequest(this.id+" fetchLedgerEntry() can only be used for type option");this.checkRequiredArgument("fetchLedgerEntry",t,"code");let a=this.currency(t),n={recordId:e,currency:a.id},o=await this.eapiPrivateGetBill(this.extend(n,i)),d=this.safeDict(o,0,o);return this.parseLedgerEntry(d,a)}async fetchLedger(e,t,i,r={}){let a,n,o,d,h;await this.loadMarkets();let c=!1;if([c,r]=this.handleOptionAndParams(r,"fetchLedger","paginate"),c)return await this.fetchPaginatedCallDynamic("fetchLedger",e,t,i,r,void 0,!1);void 0!==e&&(o=this.currency(e));let l={};[a,r]=this.handleMarketTypeAndParams("fetchLedger",void 0,r),[n,r]=this.handleSubTypeAndParams("fetchLedger",void 0,r),void 0!==t&&(l.startTime=t),void 0!==i&&(l.limit=i);let p=this.safeInteger(r,"until");if(void 0!==p&&(r=this.omit(r,"until"),l.endTime=p),[d,r]=this.handleOptionAndParams2(r,"fetchLedger","papi","portfolioMargin",!1),"option"===a)this.checkRequiredArgument("fetchLedger",e,"code"),l.currency=o.id,h=await this.eapiPrivateGetBill(this.extend(l,r));else if(this.isLinear(a,n))h=d?await this.papiGetUmIncome(this.extend(l,r)):await this.fapiPrivateGetIncome(this.extend(l,r));else if(this.isInverse(a,n))h=d?await this.papiGetCmIncome(this.extend(l,r)):await this.dapiPrivateGetIncome(this.extend(l,r));else throw new s.NotSupported(this.id+" fetchLedger() supports contract wallets only");return this.parseLedger(h,o,t,i)}parseLedgerEntry(e,t){let i,r=this.safeString2(e,"amount","income");a.Y.stringLe(r,"0")?(i="out",r=a.Y.stringMul("-1",r)):i="in";let s=this.safeString(e,"asset"),n=this.safeCurrencyCode(s,t);t=this.safeCurrency(s,t);let o=this.safeInteger2(e,"createDate","time"),d=this.safeString2(e,"type","incomeType");return this.safeLedgerEntry({info:e,id:this.safeString2(e,"id","tranId"),direction:i,account:void 0,referenceAccount:void 0,referenceId:this.safeString(e,"tradeId"),type:this.parseLedgerEntryType(d),currency:n,amount:this.parseNumber(r),timestamp:o,datetime:this.iso8601(o),before:void 0,after:void 0,status:void 0,fee:void 0},t)}parseLedgerEntryType(e){return this.safeString({FEE:"fee",FUNDING_FEE:"fee",OPTIONS_PREMIUM_FEE:"fee",POSITION_LIMIT_INCREASE_FEE:"fee",CONTRACT:"trade",REALIZED_PNL:"trade",TRANSFER:"transfer",CROSS_COLLATERAL_TRANSFER:"transfer",INTERNAL_TRANSFER:"transfer",COIN_SWAP_DEPOSIT:"deposit",COIN_SWAP_WITHDRAW:"withdrawal",OPTIONS_SETTLE_PROFIT:"settlement",DELIVERED_SETTELMENT:"settlement",WELCOME_BONUS:"cashback",CONTEST_REWARD:"cashback",COMMISSION_REBATE:"rebate",API_REBATE:"rebate",REFERRAL_KICKBACK:"referral",COMMISSION:"commission"},e,e)}sign(e,t="public",i="GET",r={},a,n){if(!(t in this.urls.api))throw new s.NotSupported(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");let l=this.urls.api[t];if(l+="/"+e,"historicalTrades"===e){if(this.apiKey)a={"X-MBX-APIKEY":this.apiKey};else throw new s.AuthenticationError(this.id+" historicalTrades endpoint requires `apiKey` credential")}if("userDataStream"===e||"listenKey"===e){if(this.apiKey)a={"X-MBX-APIKEY":this.apiKey,"Content-Type":"application/x-www-form-urlencoded"},"GET"!==i&&(n=this.urlencode(r));else throw new s.AuthenticationError(this.id+" userDataStream endpoint requires `apiKey` credential")}else if("private"===t||"eapiPrivate"===t||"sapi"===t&&"system/status"!==e||"sapiV2"===t||"sapiV3"===t||"sapiV4"===t||"dapiPrivate"===t||"dapiPrivateV2"===t||"fapiPrivate"===t||"fapiPrivateV2"===t||"fapiPrivateV3"===t||"papi"===t&&"ping"!==e||"papiV2"===t){let s,p;if(this.checkRequiredCredentials(),"POST"===i&&("order"===e||"sor/order"===e)&&void 0===this.safeString(r,"newClientOrderId")){let e=t.indexOf("sapi")>-1||"private"===t,i=this.safeDict(this.options,"broker",{}),s=this.safeString(i,e?"spot":"future",e?"x-R4BD3S82":"x-xcKtGhcu");r.newClientOrderId=s+this.uuid22()}if("batchOrders"===e&&"POST"===i){let e=this.safeValue(r,"batchOrders"),t=this.json(e);r.batchOrders=t}let u=this.safeInteger(this.options,"recvWindow"),m=this.extend({timestamp:this.nonce()},r);void 0!==u&&(m.recvWindow=u);let f=this.safeInteger(r,"recvWindow");if(void 0!==f&&(m.recvWindow=f),"sapi"===t&&"asset/dust"===e)s=this.urlencodeWithArrayRepeat(m);else if("batchOrders"===e||e.indexOf("sub-account")>=0||"capital/withdraw/apply"===e||e.indexOf("staking")>=0||e.indexOf("simple-earn")>=0){if("DELETE"===i&&"batchOrders"===e){let e=this.safeList(m,"orderidlist",[]),t=this.safeList(m,"origclientorderidlist",[]);m=this.omit(m,["orderidlist","origclientorderidlist"]),s=this.rawencode(m);let i=e.length,r=t.length;i>0&&(s=s+"&orderidlist=%5B"+e.join("%2C")+"%5D"),r>0&&(s=s+"&origclientorderidlist=%5B"+t.join("%2C")+"%5D")}else s=this.rawencode(m)}else s=this.urlencode(m);p=this.secret.indexOf("PRIVATE KEY")>-1?this.secret.length>120?this.encodeURIComponent((0,d.n)(s,this.secret,o.s)):this.encodeURIComponent((0,h.q4)(this.encode(s),this.secret,c.ev)):this.hmac(this.encode(s),this.encode(this.secret),o.s),s+="&signature="+p,a={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i?l+="?"+s:(n=s,a["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(r).length&&(l+="?"+this.urlencode(r));return{url:l,method:i,body:n,headers:a}}getExceptionsByUrl(e,t){let i;let r=void 0!==this.hostname?this.hostname:"binance.com";if(e.startsWith("https://api."+r+"/")||e.startsWith("https://testnet.binance.vision")?i="spot":e.startsWith("https://dapi."+r+"/")||e.startsWith("https://testnet.binancefuture.com/dapi")?i="inverse":e.startsWith("https://fapi."+r+"/")||e.startsWith("https://testnet.binancefuture.com/fapi")?i="linear":e.startsWith("https://eapi."+r+"/")?i="option":e.startsWith("https://papi."+r+"/")&&(i="portfolioMargin"),void 0!==i){let e=this.safeDict(this.exceptions,i,{});return this.safeDict(e,t,{})}return{}}handleErrors(e,t,i,r,n,o,d,h,c){if(418===e||429===e)throw new s.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+o);if(e>=400){if(o.indexOf("Price * QTY is zero or less")>=0)throw new s.InvalidOrder(this.id+" order cost = amount * price is zero or less "+o);if(o.indexOf("LOT_SIZE")>=0)throw new s.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+o);if(o.indexOf("PRICE_FILTER")>=0)throw new s.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid value in general, use this.priceToPrecision (symbol, amount) "+o)}if(void 0===d)return;let l=this.safeBool(d,"success",!0);if(!l){let e;let t=this.safeString(d,"msg");if(void 0!==t){try{e=JSON.parse(t)}catch(t){e=void 0}void 0!==e&&(d=e)}}let p=this.safeString(d,"msg");void 0!==p&&(this.throwExactlyMatchedException(this.getExceptionsByUrl(i,"exact"),p,this.id+" "+p),this.throwExactlyMatchedException(this.exceptions.exact,p,this.id+" "+p),this.throwBroadlyMatchedException(this.getExceptionsByUrl(i,"broad"),p,this.id+" "+p),this.throwBroadlyMatchedException(this.exceptions.broad,p,this.id+" "+p));let u=this.safeString(d,"code");if(void 0!==u){if("200"===u||a.Y.stringEquals(u,"0"))return;if("-2015"===u&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new s.DDoSProtection(this.id+" "+o);let e=this.id+" "+o;if("No need to change margin type."===p)throw new s.MarginModeAlreadySet(e);throw this.throwExactlyMatchedException(this.getExceptionsByUrl(i,"exact"),u,e),this.throwExactlyMatchedException(this.exceptions.exact,u,e),new s.ExchangeError(e)}if(!l)throw new s.ExchangeError(this.id+" "+o);if(Array.isArray(d)&&1===d.length){let e=d[0],t=this.safeString(e,"code");void 0!==t&&(this.throwExactlyMatchedException(this.getExceptionsByUrl(i,"exact"),t,this.id+" "+o),this.throwExactlyMatchedException(this.exceptions.exact,t,this.id+" "+o))}}calculateRateLimiterCost(e,t,i,r,s={}){if("noCoin"in s&&!("coin"in r))return s.noCoin;if("noSymbol"in s&&!("symbol"in r))return s.noSymbol;if("noPoolId"in s&&!("poolId"in r))return s.noPoolId;if("byLimit"in s&&"limit"in r){let e=r.limit,t=s.byLimit;for(let i=0;i<t.length;i++){let r=t[i];if(e<=r[0])return r[1]}}return this.safeValue(s,"cost",1)}async request(e,t="public",i="GET",r={},s,a,n={}){let o=await this.fetch2(e,t,i,r,s,a,n);return"private"===t&&(this.options.hasAlreadyAuthenticatedSuccessfully=!0),o}async modifyMarginHelper(e,t,i,r={}){let a,n,o=this.safeString(this.options,"defaultType","future");"spot"===o&&(o="future");let d=this.safeString(r,"type",o);if("margin"===d||"spot"===d)throw new s.NotSupported(this.id+" add / reduce margin only supported with type future or delivery");await this.loadMarkets();let h=this.market(e);t=this.amountToPrecision(e,t);let c={type:i,symbol:h.id,amount:t};return h.linear?(n=h.quote,a=await this.fapiPrivatePostPositionMargin(this.extend(c,r))):(n=h.base,a=await this.dapiPrivatePostPositionMargin(this.extend(c,r))),this.extend(this.parseMarginModification(a,h),{code:n})}parseMarginModification(e,t){let i=this.safeInteger(e,"type"),r=this.safeString(e,"code"),s=this.safeString(e,"symbol"),a=this.safeInteger(e,"time");return{info:e,symbol:(t=this.safeMarket(s,t,void 0,"swap")).symbol,type:1===i?"add":"reduce",marginMode:"isolated",amount:this.safeNumber(e,"amount"),code:this.safeString(e,"asset"),total:void 0,status:"200"===r||void 0===r?"ok":"failed",timestamp:a,datetime:this.iso8601(a)}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,2,i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,1,i)}async fetchCrossBorrowRate(e,t={}){await this.loadMarkets();let i={asset:this.currency(e).id},r=await this.sapiGetMarginInterestRateHistory(this.extend(i,t)),s=this.safeDict(r,0);return this.parseBorrowRate(s)}async fetchIsolatedBorrowRate(e,t={}){let i=await this.fetchIsolatedBorrowRates(this.extend({symbol:e},t));return this.safeDict(i,e)}async fetchIsolatedBorrowRates(e={}){await this.loadMarkets();let t={},i=this.safeString(e,"symbol");if(e=this.omit(e,"symbol"),void 0!==i){let e=this.market(i);t.symbol=e.id}let r=await this.sapiGetMarginIsolatedMarginData(this.extend(t,e));return this.parseIsolatedBorrowRates(r)}async fetchBorrowRateHistory(e,t,i,r={}){if(await this.loadMarkets(),void 0===i)i=93;else if(i>93)throw new s.BadRequest(this.id+" fetchBorrowRateHistory() limit parameter cannot exceed 92");let a={asset:this.currency(e).id,limit:i};if(void 0!==t){a.startTime=t;let e=this.sum(t,864e5*i)-1,r=this.milliseconds();a.endTime=Math.min(e,r)}let n=await this.sapiGetMarginInterestRateHistory(this.extend(a,r));return this.parseBorrowRateHistory(n,e,t,i)}parseBorrowRate(e,t){let i=this.safeInteger(e,"timestamp"),r=this.safeString(e,"asset");return{currency:this.safeCurrencyCode(r,t),rate:this.safeNumber(e,"dailyInterestRate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:e}}parseIsolatedBorrowRate(e,t){let i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"spot");let r=this.safeList(e,"data"),s=this.safeDict(r,0),a=this.safeDict(r,1);return{info:e,symbol:this.safeString(t,"symbol"),base:this.safeString(s,"coin"),baseRate:this.safeNumber(s,"dailyInterest"),quote:this.safeString(a,"coin"),quoteRate:this.safeNumber(a,"dailyInterest"),period:864e5,timestamp:void 0,datetime:void 0}}async createGiftCode(e,t,i={}){await this.loadMarkets();let r={token:this.currency(e).id,amount:t},s=await this.sapiPostGiftcardCreateCode(this.extend(r,i)),a=this.safeDict(s,"data"),n=this.safeString(a,"code");return{info:s,id:this.safeString(a,"referenceNo"),code:n,currency:e,amount:t}}async redeemGiftCode(e,t={}){return await this.sapiPostGiftcardRedeemCode(this.extend({code:e},t))}async verifyGiftCode(e,t={}){return await this.sapiGetGiftcardVerify(this.extend({referenceNo:e},t))}async fetchBorrowInterest(e,t,i,r,s={}){let a,n,o;await this.loadMarkets(),[a,s]=this.handleOptionAndParams2(s,"fetchBorrowInterest","papi","portfolioMargin",!1);let d={};if(void 0!==e){let t=this.currency(e);d.asset=t.id}void 0!==i&&(d.startTime=i),void 0!==r&&(d.size=r),[d,s]=this.handleUntilOption("endTime",d,s),a?o=await this.papiGetMarginMarginInterestHistory(this.extend(d,s)):(void 0!==t&&(n=this.market(t),d.isolatedSymbol=n.id),o=await this.sapiGetMarginInterestHistory(this.extend(d,s)));let h=this.safeList(o,"rows"),c=this.parseBorrowInterests(h,n);return this.filterByCurrencySinceLimit(c,e,i,r)}parseBorrowInterest(e,t){let i=this.safeString(e,"isolatedSymbol"),r=this.safeInteger(e,"interestAccuredTime");return{info:e,symbol:i,currency:this.safeCurrencyCode(this.safeString(e,"asset")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"interestRate"),amountBorrowed:this.safeNumber(e,"principal"),marginMode:void 0===i?"cross":"isolated",timestamp:r,datetime:this.iso8601(r)}}async repayCrossMargin(e,t,i={}){let r,s;await this.loadMarkets();let a=this.currency(e),n={asset:a.id,amount:this.currencyToPrecision(e,t)};if([s,i]=this.handleOptionAndParams2(i,"repayCrossMargin","papi","portfolioMargin",!1),s){let e;[e,i]=this.handleOptionAndParams2(i,"repayCrossMargin","repayCrossMarginMethod","method"),r="papiPostMarginRepayDebt"===e?await this.papiPostMarginRepayDebt(this.extend(n,i)):await this.papiPostRepayLoan(this.extend(n,i))}else n.isIsolated="FALSE",n.type="REPAY",r=await this.sapiPostMarginBorrowRepay(this.extend(n,i));return this.parseMarginLoan(r,a)}async repayIsolatedMargin(e,t,i,r={}){await this.loadMarkets();let s=this.currency(t),a=this.market(e),n={asset:s.id,amount:this.currencyToPrecision(t,i),symbol:a.id,isIsolated:"TRUE",type:"REPAY"},o=await this.sapiPostMarginBorrowRepay(this.extend(n,r));return this.parseMarginLoan(o,s)}async borrowCrossMargin(e,t,i={}){let r,s;await this.loadMarkets();let a=this.currency(e),n={asset:a.id,amount:this.currencyToPrecision(e,t)};return[s,i]=this.handleOptionAndParams2(i,"borrowCrossMargin","papi","portfolioMargin",!1),s?r=await this.papiPostMarginLoan(this.extend(n,i)):(n.isIsolated="FALSE",n.type="BORROW",r=await this.sapiPostMarginBorrowRepay(this.extend(n,i))),this.parseMarginLoan(r,a)}async borrowIsolatedMargin(e,t,i,r={}){await this.loadMarkets();let s=this.currency(t),a=this.market(e),n={asset:s.id,amount:this.currencyToPrecision(t,i),symbol:a.id,isIsolated:"TRUE",type:"BORROW"},o=await this.sapiPostMarginBorrowRepay(this.extend(n,r));return this.parseMarginLoan(o,s)}parseMarginLoan(e,t){let i=this.safeString(e,"asset"),r=this.safeInteger(e,"updateTime");return{id:this.safeInteger(e,"tranId"),currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amount"),symbol:void 0,timestamp:r,datetime:this.iso8601(r),info:e}}async fetchOpenInterestHistory(e,t="5m",i,r,a={}){let n;if("1m"===t)throw new s.BadRequest(this.id+"fetchOpenInterestHistory cannot use the 1m timeframe");await this.loadMarkets();let o=!1;if([o,a]=this.handleOptionAndParams(a,"fetchOpenInterestHistory","paginate",!1),o)return await this.fetchPaginatedCallDeterministic("fetchOpenInterestHistory",e,i,r,t,a,500);let d=this.market(e),h={period:this.safeString(this.timeframes,t,t)};void 0!==r&&(h.limit=r),h[d.linear?"symbol":"pair"]=d.id,d.inverse&&(h.contractType=this.safeString(a,"contractType","CURRENT_QUARTER")),void 0!==i&&(h.startTime=i);let c=this.safeInteger(a,"until"),l=this.safeInteger(a,"endTime",c);if(a=this.omit(a,["endTime","until"]),l)h.endTime=l;else if(i){void 0===r&&(r=30);let e=this.parseTimeframe(t);h.endTime=this.sum(i,e*r*1e3)}return n=d.inverse?await this.dapiDataGetOpenInterestHist(this.extend(h,a)):await this.fapiDataGetOpenInterestHist(this.extend(h,a)),this.parseOpenInterestsHistory(n,d,i,r)}async fetchOpenInterest(e,t={}){let i;await this.loadMarkets();let r=this.market(e),a={};if(r.option){if(a.underlyingAsset=r.baseId,void 0===r.expiry)throw new s.NotSupported(this.id+" fetchOpenInterest does not support "+e);a.expiration=this.yymmdd(r.expiry)}else a.symbol=r.id;if(i=r.option?await this.eapiPublicGetOpenInterest(this.extend(a,t)):r.inverse?await this.dapiPublicGetOpenInterest(this.extend(a,t)):await this.fapiPublicGetOpenInterest(this.extend(a,t)),!r.option)return this.parseOpenInterest(i,r);{e=r.symbol;let t=this.parseOpenInterestsHistory(i,r);for(let i=0;i<t.length;i++){let r=t[i];if(r.symbol===e)return r}}}parseOpenInterest(e,t){let i=this.safeInteger2(e,"timestamp","time"),r=this.safeString(e,"symbol"),s=this.safeNumber2(e,"sumOpenInterest","openInterest"),a=this.safeNumber2(e,"sumOpenInterestValue","sumOpenInterestUsd");return this.safeOpenInterest({symbol:this.safeSymbol(r,t,void 0,"contract"),baseVolume:t.inverse?void 0:s,quoteVolume:a,openInterestAmount:s,openInterestValue:a,timestamp:i,datetime:this.iso8601(i),info:e},t)}async fetchMyLiquidations(e,t,i,r={}){let a,n,o,d,h;await this.loadMarkets();let c=!1;if([c,r]=this.handleOptionAndParams(r,"fetchMyLiquidations","paginate"),c)return await this.fetchPaginatedCallIncremental("fetchMyLiquidations",e,t,i,r,"current",100);void 0!==e&&(a=this.market(e)),[n,r]=this.handleMarketTypeAndParams("fetchMyLiquidations",a,r),[o,r]=this.handleSubTypeAndParams("fetchMyLiquidations",a,r,"linear"),[d,r]=this.handleOptionAndParams2(r,"fetchMyLiquidations","papi","portfolioMargin",!1);let l={};if("spot"!==n&&(l.autoCloseType="LIQUIDATION"),void 0!==a){let e=a.spot?"isolatedSymbol":"symbol";d||(l[e]=a.id)}if(void 0!==t&&(l.startTime=t),void 0!==i&&("spot"===n?l.size=i:l.limit=i),[l,r]=this.handleUntilOption("endTime",l,r),"spot"===n)h=d?await this.papiGetMarginForceOrders(this.extend(l,r)):await this.sapiGetMarginForceLiquidationRec(this.extend(l,r));else if("linear"===o)h=d?await this.papiGetUmForceOrders(this.extend(l,r)):await this.fapiPrivateGetForceOrders(this.extend(l,r));else if("inverse"===o)h=d?await this.papiGetCmForceOrders(this.extend(l,r)):await this.dapiPrivateGetForceOrders(this.extend(l,r));else throw new s.NotSupported(this.id+" fetchMyLiquidations() does not support "+a.type+" markets");let p=this.safeList(h,"rows",h);return this.parseLiquidations(p,a,t,i)}parseLiquidation(e,t){let i=this.safeString(e,"symbol"),r=this.safeInteger2(e,"updatedTime","updateTime");return this.safeLiquidation({info:e,symbol:this.safeSymbol(i,t),contracts:this.safeNumber(e,"executedQty"),contractSize:this.safeNumber(t,"contractSize"),price:this.safeNumber(e,"avgPrice"),baseValue:this.safeNumber(e,"cumBase"),quoteValue:this.safeNumber(e,"cumQuote"),timestamp:r,datetime:this.iso8601(r)})}async fetchGreeks(e,t={}){await this.loadMarkets();let i=this.market(e),r={symbol:i.id},s=await this.eapiPublicGetMark(this.extend(r,t));return this.parseGreeks(s[0],i)}parseGreeks(e,t){let i=this.safeString(e,"symbol");return{symbol:this.safeSymbol(i,t),timestamp:void 0,datetime:void 0,delta:this.safeNumber(e,"delta"),gamma:this.safeNumber(e,"gamma"),theta:this.safeNumber(e,"theta"),vega:this.safeNumber(e,"vega"),rho:void 0,bidSize:void 0,askSize:void 0,bidImpliedVolatility:this.safeNumber(e,"bidIV"),askImpliedVolatility:this.safeNumber(e,"askIV"),markImpliedVolatility:this.safeNumber(e,"markIV"),bidPrice:void 0,askPrice:void 0,markPrice:this.safeNumber(e,"markPrice"),lastPrice:void 0,underlyingPrice:void 0,info:e}}async fetchTradingLimits(e,t={}){let i=await this.fetchMarkets(),r={};for(let t=0;t<i.length;t++){let s=i[t],a=s.symbol;(void 0===e||this.inArray(a,e))&&(r[a]=s.limits.amount)}return r}async fetchPositionMode(e,t={}){let i,r,a;if(void 0!==e&&(i=this.market(e)),[r,t]=this.handleSubTypeAndParams("fetchPositionMode",i,t),"linear"===r)a=await this.fapiPrivateGetPositionSideDual(t);else if("inverse"===r)a=await this.dapiPrivateGetPositionSideDual(t);else throw new s.BadRequest(this.id+' fetchPositionMode requires either a symbol argument or params["subType"]');let n=this.safeBool(a,"dualSidePosition");return{info:a,hedged:n}}async fetchMarginModes(e,t={}){let i,r,a;if(await this.loadMarkets(),void 0!==e&&(e=this.marketSymbols(e),i=this.market(e[0])),[r,t]=this.handleSubTypeAndParams("fetchMarginMode",i,t),"linear"===r)a=await this.fapiPrivateGetSymbolConfig(t);else if("inverse"===r)a=await this.dapiPrivateGetAccount(t);else throw new s.BadRequest(this.id+" fetchMarginModes () supports linear and inverse subTypes only");let n=this.safeList(a,"positions",[]);return Array.isArray(a)&&(n=a),this.parseMarginModes(n,e,"symbol","swap")}async fetchMarginMode(e,t={}){let i,r;await this.loadMarkets();let a=this.market(e);if([i,t]=this.handleSubTypeAndParams("fetchMarginMode",a,t),"linear"===i){let e={symbol:a.id};r=await this.fapiPrivateGetSymbolConfig(this.extend(e,t))}else if("inverse"===i)return(await this.fetchMarginModes([e],t))[e];else throw new s.BadRequest(this.id+" fetchMarginMode () supports linear and inverse subTypes only");return this.parseMarginMode(r[0],a)}parseMarginMode(e,t){let i;let r=this.safeString(e,"symbol");t=this.safeMarket(r,t);let s=this.safeBool(e,"isolated");void 0!==s&&(i=s?"isolated":"cross");let a=this.safeStringLower(e,"marginType");return void 0!==a&&(i="crossed"===a?"cross":"isolated"),{info:e,symbol:t.symbol,marginMode:i}}async fetchOption(e,t={}){await this.loadMarkets();let i=this.market(e),r={symbol:i.id},s=await this.eapiPublicGetTicker(this.extend(r,t)),a=this.safeDict(s,0,{});return this.parseOption(a,void 0,i)}parseOption(e,t,i){let r=this.safeString(e,"symbol");return{info:e,currency:void 0,symbol:(i=this.safeMarket(r,i)).symbol,timestamp:void 0,datetime:void 0,impliedVolatility:void 0,openInterest:void 0,bidPrice:this.safeNumber(e,"bidPrice"),askPrice:this.safeNumber(e,"askPrice"),midPrice:void 0,markPrice:void 0,lastPrice:this.safeNumber(e,"lastPrice"),underlyingPrice:this.safeNumber(e,"exercisePrice"),change:this.safeNumber(e,"priceChange"),percentage:this.safeNumber(e,"priceChangePercent"),baseVolume:this.safeNumber(e,"volume"),quoteVolume:void 0}}async fetchMarginAdjustmentHistory(e,t,i,r,a={}){let n;if(await this.loadMarkets(),void 0===e)throw new s.ArgumentsRequired(this.id+" fetchMarginAdjustmentHistory () requires a symbol argument");let o=this.market(e),d=this.safeInteger(a,"until");a=this.omit(a,"until");let h={symbol:o.id};if(void 0!==t&&(h.type="add"===t?1:2),void 0!==i&&(h.startTime=i),void 0!==r&&(h.limit=r),void 0!==d&&(h.endTime=d),o.linear)n=await this.fapiPrivateGetPositionMarginHistory(this.extend(h,a));else if(o.inverse)n=await this.dapiPrivateGetPositionMarginHistory(this.extend(h,a));else throw new s.BadRequest(this.id+"fetchMarginAdjustmentHistory () is not supported for markets of type "+o.type);let c=this.parseMarginModifications(n);return this.filterBySymbolSinceLimit(c,e,i,r)}async fetchConvertCurrencies(e={}){await this.loadMarkets();let t=await this.sapiGetConvertAssetInfo(e),i={};for(let e=0;e<t.length;e++){let r=t[e],s=this.safeString(r,"asset"),a=this.safeCurrencyCode(s);i[a]={info:r,id:s,code:a,networks:void 0,type:void 0,name:void 0,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(r,"fraction"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}},created:void 0}}return i}async fetchConvertQuote(e,t,i,r={}){if(void 0===i)throw new s.ArgumentsRequired(this.id+" fetchConvertQuote() requires an amount argument");await this.loadMarkets();let a=await this.sapiPostConvertGetQuote(this.extend({fromAsset:e,toAsset:t,fromAmount:i},r)),n=this.currency(e),o=this.currency(t);return this.parseConversion(a,n,o)}async createConvertTrade(e,t,i,r,a={}){let n;await this.loadMarkets();let o={};if("BUSD"===t||"BUSD"===i){if(void 0===r)throw new s.ArgumentsRequired(this.id+" createConvertTrade() requires an amount argument");o.clientTranId=e,o.asset=t,o.targetAsset=i,o.amount=r,n=await this.sapiPostAssetConvertTransfer(this.extend(o,a))}else o.quoteId=e,n=await this.sapiPostConvertAcceptQuote(this.extend(o,a));let d=this.currency(t),h=this.currency(i);return this.parseConversion(n,d,h)}async fetchConvertTrade(e,t,i={}){let r,s,a;await this.loadMarkets();let n={};if("BUSD"===t){let s=this.milliseconds();if(void 0!==t){let e=this.currency(t);n.asset=e.id}n.tranId=e,n.startTime=s-864e5,n.endTime=s,r=await this.sapiGetAssetConvertTransferQueryByPage(this.extend(n,i))}else n.orderId=e,r=await this.sapiGetConvertOrderStatus(this.extend(n,i));let o=r;if("BUSD"===t){let e=this.safeList(r,"rows",[]);o=this.safeDict(e,0,{})}let d=this.safeString2(o,"deductedAsset","fromAsset"),h=this.safeString2(o,"targetAsset","toAsset");return void 0!==d&&(s=this.currency(d)),void 0!==h&&(a=this.currency(h)),this.parseConversion(o,s,a)}async fetchConvertTradeHistory(e,t,i,r={}){let a,n,o,d;await this.loadMarkets();let h={},c=this.milliseconds();void 0!==t?h.startTime=t:h.startTime=c-2592e6;let l=this.safeInteger2(r,"endTime","until");if(void 0!==l?h.endTime=l:h.endTime=c,r=this.omit(r,"until"),"BUSD"===e){let t=this.currency(e);h.asset=t.id,void 0!==i&&(h.size=i),o="deductedAsset",d="targetAsset",n="rows",a=await this.sapiGetAssetConvertTransferQueryByPage(this.extend(h,r))}else{if(h.endTime-h.startTime>2592e6)throw new s.BadRequest(this.id+" fetchConvertTradeHistory () the max interval between startTime and endTime is 30 days.");void 0!==i&&(h.limit=i),o="fromAsset",d="toAsset",n="list",a=await this.sapiGetConvertTradeFlow(this.extend(h,r))}let p=this.safeList(a,n,[]);return this.parseConversions(p,e,o,d,t,i)}parseConversion(e,t,i){let r=this.safeIntegerN(e,["time","validTimestamp","createTime"]),s=this.safeString2(e,"deductedAsset","fromAsset"),a=this.safeCurrencyCode(s,t),n=this.safeString2(e,"targetAsset","toAsset"),o=this.safeCurrencyCode(n,i);return{info:e,timestamp:r,datetime:this.iso8601(r),id:this.safeStringN(e,["tranId","orderId","quoteId"]),fromCurrency:a,fromAmount:this.safeNumber2(e,"deductedAmount","fromAmount"),toCurrency:o,toAmount:this.safeNumber2(e,"targetAmount","toAmount"),price:void 0,fee:void 0}}async fetchFundingIntervals(e,t={}){let i,r,a;await this.loadMarkets(),void 0!==e&&(e=this.marketSymbols(e),i=this.market(e[0]));let n="swap";if([r,t]=this.handleSubTypeAndParams("fetchFundingIntervals",i,t,"linear"),this.isLinear(n,r))a=await this.fapiPublicGetFundingInfo(t);else if(this.isInverse(n,r))a=await this.dapiPublicGetFundingInfo(t);else throw new s.NotSupported(this.id+" fetchFundingIntervals() supports linear and inverse swap contracts only");return this.parseFundingRates(a,e)}async fetchLongShortRatioHistory(e,t,i,r,a={}){let n,o;await this.loadMarkets();let d=this.market(e);void 0===t&&(t="1d");let h={period:t};if([h,a]=this.handleUntilOption("endTime",h,a),void 0!==i&&(h.startTime=i),void 0!==r&&(h.limit=r),[n,a]=this.handleSubTypeAndParams("fetchLongShortRatioHistory",d,a),"linear"===n)h.symbol=d.id,o=await this.fapiDataGetGlobalLongShortAccountRatio(this.extend(h,a));else if("inverse"===n)h.pair=d.info.pair,o=await this.dapiDataGetGlobalLongShortAccountRatio(this.extend(h,a));else throw new s.BadRequest(this.id+" fetchLongShortRatioHistory() supports linear and inverse subTypes only");return this.parseLongShortRatioHistory(o,d)}parseLongShortRatio(e,t){let i=this.safeString(e,"symbol"),r=this.safeIntegerOmitZero(e,"timestamp");return{info:e,symbol:this.safeSymbol(i,t,void 0,"contract"),timestamp:r,datetime:this.iso8601(r),timeframe:void 0,longShortRatio:this.safeNumber(e,"longShortRatio")}}}}}]);