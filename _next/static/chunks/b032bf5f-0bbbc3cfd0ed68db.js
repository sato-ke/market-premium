"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[347],{3807:(e,t,i)=>{i.d(t,{A:()=>c});var s=i(9122),r=i(3675),a=i(8119),n=i(6077),o=i(5432),d=i(9378);class c extends s.A{describe(){return this.deepExtend(super.describe(),{id:"deribit",name:"Deribit",countries:["NL"],version:"v2",userAgent:void 0,rateLimit:50,pro:!0,has:{CORS:!0,spot:!1,margin:!1,swap:!0,future:!0,option:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,createTrailingAmountOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFees:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchGreeks:!0,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverageTiers:!1,fetchLiquidations:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyLiquidations:!0,fetchMySettlementHistory:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOption:!0,fetchOptionChain:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!0,fetchUnderlyingAssets:!1,fetchVolatilityHistory:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,sandbox:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1","3m":"3","5m":"5","10m":"10","15m":"15","30m":"30","1h":"60","2h":"120","3h":"180","6h":"360","12h":"720","1d":"1D"},urls:{test:{rest:"https://test.deribit.com"},logo:"https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg",api:{rest:"https://www.deribit.com"},www:"https://www.deribit.com",doc:["https://docs.deribit.com/v2","https://github.com/deribit"],fees:"https://www.deribit.com/pages/information/fees",referral:{url:"https://www.deribit.com/reg-1189.4038",discount:.1}},api:{public:{get:{auth:1,exchange_token:1,fork_token:1,set_heartbeat:1,disable_heartbeat:1,get_time:1,hello:1,status:1,test:1,subscribe:1,unsubscribe:1,unsubscribe_all:1,get_announcements:1,get_book_summary_by_currency:1,get_book_summary_by_instrument:1,get_contract_size:1,get_currencies:1,get_delivery_prices:1,get_funding_chart_data:1,get_funding_rate_history:1,get_funding_rate_value:1,get_historical_volatility:1,get_index:1,get_index_price:1,get_index_price_names:1,get_instrument:1,get_instruments:1,get_last_settlements_by_currency:1,get_last_settlements_by_instrument:1,get_last_trades_by_currency:1,get_last_trades_by_currency_and_time:1,get_last_trades_by_instrument:1,get_last_trades_by_instrument_and_time:1,get_mark_price_history:1,get_order_book:1,get_trade_volumes:1,get_tradingview_chart_data:1,get_volatility_index_data:1,ticker:1}},private:{get:{logout:1,enable_cancel_on_disconnect:1,disable_cancel_on_disconnect:1,get_cancel_on_disconnect:1,subscribe:1,unsubscribe:1,unsubscribe_all:1,change_api_key_name:1,change_scope_in_api_key:1,change_subaccount_name:1,create_api_key:1,create_subaccount:1,disable_api_key:1,disable_tfa_for_subaccount:1,enable_affiliate_program:1,enable_api_key:1,get_access_log:1,get_account_summary:1,get_account_summaries:1,get_affiliate_program_info:1,get_email_language:1,get_new_announcements:1,get_portfolio_margins:1,get_position:1,get_positions:1,get_subaccounts:1,get_subaccounts_details:1,get_transaction_log:1,list_api_keys:1,remove_api_key:1,remove_subaccount:1,reset_api_key:1,set_announcement_as_read:1,set_api_key_as_default:1,set_email_for_subaccount:1,set_email_language:1,set_password_for_subaccount:1,toggle_notifications_from_subaccount:1,toggle_subaccount_login:1,execute_block_trade:4,get_block_trade:1,get_last_block_trades_by_currency:1,invalidate_block_trade_signature:1,verify_block_trade:4,buy:4,sell:4,edit:4,edit_by_label:4,cancel:4,cancel_all:4,cancel_all_by_currency:4,cancel_all_by_instrument:4,cancel_by_label:4,close_position:4,get_margins:1,get_mmp_config:1,get_open_orders_by_currency:1,get_open_orders_by_instrument:1,get_order_history_by_currency:1,get_order_history_by_instrument:1,get_order_margin_by_ids:1,get_order_state:1,get_stop_order_history:1,get_trigger_order_history:1,get_user_trades_by_currency:1,get_user_trades_by_currency_and_time:1,get_user_trades_by_instrument:1,get_user_trades_by_instrument_and_time:1,get_user_trades_by_order:1,reset_mmp:1,set_mmp_config:1,get_settlement_history_by_instrument:1,get_settlement_history_by_currency:1,cancel_transfer_by_id:1,cancel_withdrawal:1,create_deposit_address:1,get_current_deposit_address:1,get_deposits:1,get_transfers:1,get_withdrawals:1,submit_transfer_to_subaccount:1,submit_transfer_to_user:1,withdraw:1}}},exceptions:{9999:a.PermissionDenied,1e4:a.AuthenticationError,10001:a.ExchangeError,10002:a.InvalidOrder,10003:a.InvalidOrder,10004:a.OrderNotFound,10005:a.InvalidOrder,10006:a.InvalidOrder,10007:a.InvalidOrder,10008:a.InvalidOrder,10009:a.InsufficientFunds,10010:a.OrderNotFound,10011:a.InvalidOrder,10012:a.InvalidOrder,10013:a.PermissionDenied,10014:a.PermissionDenied,10015:a.PermissionDenied,10016:a.PermissionDenied,10017:a.PermissionDenied,10018:a.PermissionDenied,10019:a.PermissionDenied,10020:a.ExchangeError,10021:a.InvalidOrder,10022:a.InvalidOrder,10023:a.InvalidOrder,10024:a.InvalidOrder,10025:a.InvalidOrder,10026:a.InvalidOrder,10027:a.InvalidOrder,10028:a.DDoSProtection,10029:a.OrderNotFound,10030:a.ExchangeError,10031:a.ExchangeError,10032:a.InvalidOrder,10033:a.NotSupported,10034:a.InvalidOrder,10035:a.InvalidOrder,10036:a.InvalidOrder,10040:a.ExchangeNotAvailable,10041:a.OnMaintenance,10043:a.InvalidOrder,10044:a.InvalidOrder,10045:a.InvalidOrder,10046:a.InvalidOrder,10047:a.DDoSProtection,10048:a.ExchangeError,11008:a.InvalidOrder,11029:a.BadRequest,11030:a.ExchangeError,11031:a.ExchangeError,11035:a.DDoSProtection,11036:a.InvalidOrder,11037:a.BadRequest,11038:a.InvalidOrder,11039:a.InvalidOrder,11041:a.InvalidOrder,11042:a.PermissionDenied,11043:a.BadRequest,11044:a.InvalidOrder,11045:a.BadRequest,11046:a.BadRequest,11047:a.BadRequest,11048:a.ExchangeError,11049:a.BadRequest,11050:a.BadRequest,11051:a.OnMaintenance,11052:a.ExchangeError,11053:a.ExchangeError,11090:a.InvalidAddress,11091:a.InvalidAddress,11092:a.InvalidAddress,11093:a.DDoSProtection,11094:a.ExchangeError,11095:a.ExchangeError,11096:a.ExchangeError,12e3:a.AuthenticationError,12001:a.DDoSProtection,12002:a.ExchangeError,12998:a.AuthenticationError,12003:a.AuthenticationError,12004:a.AuthenticationError,12005:a.AuthenticationError,12100:a.ExchangeError,12999:a.AuthenticationError,13e3:a.AuthenticationError,13001:a.AuthenticationError,13002:a.PermissionDenied,13003:a.AuthenticationError,13004:a.AuthenticationError,13005:a.AuthenticationError,13006:a.AuthenticationError,13007:a.AuthenticationError,13008:a.ExchangeError,13009:a.AuthenticationError,13010:a.BadRequest,13011:a.BadRequest,13012:a.PermissionDenied,13013:a.BadRequest,13014:a.BadRequest,13015:a.BadRequest,13016:a.BadRequest,13017:a.ExchangeError,13018:a.ExchangeError,13019:a.ExchangeError,13020:a.ExchangeError,13021:a.PermissionDenied,13025:a.ExchangeError,"-32602":a.BadRequest,"-32601":a.BadRequest,"-32700":a.BadRequest,"-32000":a.BadRequest,11054:a.InvalidOrder},precisionMode:r.kb,options:{code:"BTC",fetchBalance:{code:"BTC"},fetchPositions:{code:"BTC"},transfer:{method:"privateGetSubmitTransferToSubaccount"}}})}createExpiredOptionMarket(e){let t,i,s,r="USD",a=e.split("-"),n=e.split("/");e.indexOf("/")>-1?(i=this.safeString(n,0),s=this.safeString(a,1),e.indexOf("USDC")>-1&&(i+="_USDC")):(i=this.safeString(a,0),s=this.convertMarketIdExpireDate(this.safeString(a,1))),e.indexOf("USDC")>-1?(r="USDC",t="USDC"):t=i;let o=i;if(i.indexOf("_")>-1){let e=i.split("_");o=this.safeString(e,0)}let d=this.safeString(a,2),c=this.safeString(a,3),h=this.convertExpireDate(s),u=this.parse8601(h);return{id:i+"-"+this.convertExpireDateToMarketIdDate(s)+"-"+d+"-"+c,symbol:o+"/"+r+":"+t+"-"+s+"-"+d+"-"+c,base:i,quote:r,settle:t,baseId:i,quoteId:r,settleId:t,active:!1,type:"option",linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!0,margin:!1,contract:!0,contractSize:void 0,expiry:u,expiryDatetime:h,optionType:"C"===c?"call":"put",strike:this.parseNumber(d),precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0}}safeMarket(e,t,i,s){return void 0!==e&&(e.endsWith("-C")||e.endsWith("-P"))&&!(e in this.markets_by_id)?this.createExpiredOptionMarket(e):super.safeMarket(e,t,i,s)}async fetchTime(e={}){let t=await this.publicGetGetTime(e);return this.safeInteger(t,"result")}async fetchCurrencies(e={}){let t=await this.publicGetGetCurrencies(e),i=this.safeValue(t,"result",{}),s={};for(let e=0;e<i.length;e++){let t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(t,"currency_long");s[a]={info:t,code:a,id:r,name:n,active:void 0,deposit:void 0,withdraw:void 0,fee:this.safeNumber(t,"withdrawal_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"fee_precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}},networks:void 0}}return s}codeFromOptions(e,t={}){let i=this.safeValue(this.options,"code","BTC"),s=this.safeValue(this.options,e,{}),r=this.safeValue(s,"code",i);return this.safeValue(t,"code",r)}async fetchStatus(e={}){let t=await this.publicGetStatus(e),i=this.safeValue(t,"result");return{status:"false"===this.safeString(i,"locked")?"ok":"maintenance",updated:this.safeIntegerProduct(t,"usIn",.001,this.milliseconds()),eta:void 0,url:void 0,info:t}}async fetchAccounts(e={}){await this.loadMarkets();let t=await this.privateGetGetSubaccounts(e),i=this.safeValue(t,"result",[]);return this.parseAccounts(i)}parseAccount(e,t){return{info:e,id:this.safeString(e,"id"),type:this.safeString(e,"type"),code:this.safeCurrencyCode(void 0,t)}}async fetchMarkets(e={}){let t;let i=[],s=[],r={};if([t,e]=this.handleOptionAndParams(e,"fetchMarkets","fetchAllMarkets",!0),t){let t=await this.publicGetGetInstruments(e);i.push(t)}else{let t=await this.publicGetGetCurrencies(e),s=this.safeValue(t,"result",[]);for(let t=0;t<s.length;t++){let r={currency:this.safeString(s[t],"currency")},a=await this.publicGetGetInstruments(this.extend(r,e));i.push(a)}}for(let e=0;e<i.length;e++){let t=this.safeValue(i[e],"result",[]);for(let e=0;e<t.length;e++){let i,a,n,o;let d=t[e],c=this.safeString(d,"kind"),h="spot"===c,u=this.safeString(d,"instrument_name"),l=this.safeString(d,"base_currency"),m=this.safeString(d,"counter_currency"),f=this.safeString(d,"settlement_currency"),p=this.safeCurrencyCode(l),_=this.safeCurrencyCode(m),g=this.safeCurrencyCode(f),y="perpetual"===this.safeValue(d,"settlement_period"),v=!y&&c.indexOf("future")>=0,b=c.indexOf("option")>=0,k=c.indexOf("combo")>=0,w=this.safeInteger(d,"expiration_timestamp"),S=u,O="swap";if(v?O="future":b?O="option":h&&(O="spot"),h)S=p+"/"+_;else if(!k){if(S=p+"/"+_+":"+g,(b||v)&&(S=S+"-"+this.yymmdd(w,""),b)){i=this.safeNumber(d,"strike");let e="call"===(a=this.safeString(d,"option_type"))?"C":"P";S=S+"-"+this.numberToString(i)+"-"+e}n=_!==g,o=g===_}if(this.safeValue(r,S))continue;r[S]=!0;let x=this.safeNumber(d,"min_trade_amount"),T=this.safeNumber(d,"tick_size");s.push({id:u,symbol:S,base:p,quote:_,settle:g,baseId:l,quoteId:m,settleId:f,type:O,spot:h,margin:!1,swap:y,future:v,option:b,active:this.safeValue(d,"is_active"),contract:!h,linear:o,inverse:n,taker:this.safeNumber(d,"taker_commission"),maker:this.safeNumber(d,"maker_commission"),contractSize:this.safeNumber(d,"contract_size"),expiry:w,expiryDatetime:this.iso8601(w),strike:i,optionType:a,precision:{amount:x,price:T},limits:{leverage:{min:void 0,max:void 0},amount:{min:x,max:void 0},price:{min:T,max:void 0},cost:{min:void 0,max:void 0}},created:this.safeInteger(d,"creation_timestamp"),info:d})}}return s}parseBalance(e){let t={info:e},i=[];i="summaries"in e?this.safeList(e,"summaries"):[e];for(let e=0;e<i.length;e++){let s=i[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available_funds"),n.used=this.safeString(s,"maintenance_margin"),n.total=this.safeString(s,"equity"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){let t;await this.loadMarkets();let i=this.safeString(e,"code");e=this.omit(e,"code");let s={};void 0!==i&&(s.currency=this.currencyId(i)),t=void 0===i?await this.privateGetGetAccountSummaries(e):await this.privateGetGetAccountSummary(this.extend(s,e));let r=this.safeDict(t,"result",{});return this.parseBalance(r)}async createDepositAddress(e,t={}){await this.loadMarkets();let i={currency:this.currency(e).id},s=await this.privateGetCreateDepositAddress(this.extend(i,t)),r=this.safeValue(s,"result",{}),a=this.safeString(r,"address");return this.checkAddress(a),{currency:e,address:a,tag:void 0,info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={currency:this.currency(e).id},s=await this.privateGetGetCurrentDepositAddress(this.extend(i,t)),r=this.safeValue(s,"result",{}),a=this.safeString(r,"address");return this.checkAddress(a),{info:s,currency:e,network:void 0,address:a,tag:void 0}}parseTicker(e,t){let i=this.safeInteger2(e,"timestamp","creation_timestamp"),s=this.safeString(e,"instrument_name"),r=this.safeSymbol(s,t),a=this.safeString2(e,"last_price","last"),n=this.safeValue(e,"stats",e);return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString2(n,"high","max_price"),low:this.safeString2(n,"low","min_price"),bid:this.safeString2(e,"best_bid_price","bid_price"),bidVolume:this.safeString(e,"best_bid_amount"),ask:this.safeString2(e,"best_ask_price","ask_price"),askVolume:this.safeString(e,"best_ask_amount"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(n,"volume"),markPrice:this.safeString(e,"mark_price"),indexPrice:this.safeString(e,"index_price"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={instrument_name:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeDict(r,"result");return this.parseTicker(a,i)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);let i=this.safeString2(t,"code","currency");if(t=this.omit(t,["code"]),void 0===i)throw new a.ArgumentsRequired(this.id+" fetchTickers requires a currency/code (eg: BTC/ETH/USDT) parameter to fetch tickers for");let s={currency:this.currency(i).id},r=await this.publicGetGetBookSummaryByCurrency(this.extend(s,t)),n=this.safeList(r,"result",[]),o={};for(let e=0;e<n.length;e++){let t=this.parseTicker(n[e]);o[t.symbol]=t}return this.filterByArrayTickers(o,"symbol",e)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=!1;if([a,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",e,i,s,t,r,5e3);let n=this.market(e),o={instrument_name:n.id,resolution:this.safeString(this.timeframes,t,t)},d=this.parseTimeframe(t),c=this.milliseconds();void 0===i?(void 0===s&&(s=1e3),o.start_timestamp=c-(s-1)*d*1e3,o.end_timestamp=c):(i=Math.max(i-1,0),o.start_timestamp=i,void 0===s?o.end_timestamp=c:o.end_timestamp=this.sum(i,s*d*1e3));let h=this.safeInteger(r,"until");void 0!==h&&(r=this.omit(r,"until"),o.end_timestamp=h);let u=await this.publicGetGetTradingviewChartData(this.extend(o,r)),l=this.safeValue(u,"result",{}),m=this.convertTradingViewToOHLCV(l,"ticks","open","high","low","close","volume",!0);return this.parseOHLCVs(m,n,t,i,s)}parseTrade(e,t){let i,s;let r=this.safeString(e,"trade_id"),a=this.safeString(e,"instrument_name"),o=this.safeSymbol(a,t),d=this.safeInteger(e,"timestamp"),c=this.safeString(e,"direction"),h=this.safeString(e,"price");t=this.safeMarket(a,t);let u=this.safeString(e,"amount"),l=n.Y.stringMul(u,h);t.inverse&&(l=n.Y.stringDiv(u,h));let m=this.safeString(e,"liquidity");void 0!==m&&(i="M"===m?"maker":"taker");let f=this.safeString(e,"fee");if(void 0!==f){let t=this.safeString(e,"fee_currency");s={cost:f,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:r,info:e,timestamp:d,datetime:this.iso8601(d),symbol:o,order:this.safeString(e,"order_id"),type:this.safeString(e,"order_type"),side:c,takerOrMaker:i,price:h,amount:u,cost:l,fee:s},t)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n={instrument_name:a.id,include_old:!0};void 0!==t&&(n.start_timestamp=t),void 0!==i&&(n.count=Math.min(i,1e3));let o=this.safeInteger2(s,"until","end_timestamp");void 0!==o&&(s=this.omit(s,["until"]),n.end_timestamp=o),r=void 0!==t||"end_timestamp"in n?await this.publicGetGetLastTradesByInstrumentAndTime(this.extend(n,s)):await this.publicGetGetLastTradesByInstrument(this.extend(n,s));let d=this.safeValue(r,"result",{}),c=this.safeList(d,"trades",[]);return this.parseTrades(c,a,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=this.codeFromOptions("fetchTradingFees",e),i={currency:this.currency(t).id,extended:!0},s=await this.privateGetGetAccountSummary(this.extend(i,e)),r=this.safeValue(s,"result",{}),a=this.safeValue(r,"fees",[]),n={},o={},d={};for(let e=0;e<a.length;e++){let t=a[e],i=this.safeString(t,"instrument_type");"future"===i?o={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")}:"perpetual"===i?n={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")}:"option"===i&&(d={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")})}let c={};for(let e=0;e<this.symbols.length;e++){let t=this.symbols[e],i=this.market(t),s={info:i,symbol:t,percentage:!0,tierBased:!0,maker:i.maker,taker:i.taker};i.swap?s=this.extend(s,n):i.future?s=this.extend(s,o):i.option&&(s=this.extend(s,d)),c[t]=s}return c}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={instrument_name:s.id};void 0!==t&&(r.depth=t);let a=await this.publicGetGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"result",{}),o=this.safeInteger(n,"timestamp"),d=this.safeInteger(n,"change_id"),c=this.parseOrderBook(n,s.symbol,o);return c.nonce=d,c}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed",rejected:"rejected",untriggered:"open"},e,e)}parseTimeInForce(e){return this.safeString({good_til_cancelled:"GTC",fill_or_kill:"FOK",immediate_or_cancel:"IOC"},e,e)}parseOrderType(e){return this.safeString({stop_limit:"limit",take_limit:"limit",stop_market:"market",take_market:"market"},e,e)}parseOrder(e,t){let i,s;let r=this.safeString(e,"instrument_name");t=this.safeMarket(r,t);let a=this.safeInteger(e,"creation_timestamp"),o=this.safeInteger(e,"last_update_timestamp"),d=this.safeString(e,"order_id"),c=this.safeString(e,"price");"market_price"===c&&(c=void 0);let h=this.safeString(e,"average_price"),u=this.safeString(e,"filled_amount"),l=this.safeString(e,"amount"),m=n.Y.stringMul(u,h);this.safeBool(t,"inverse")&&"0"!==h&&(m=n.Y.stringDiv(l,h)),void 0!==u&&n.Y.stringGt(u,"0")&&(i=o);let f=this.parseOrderStatus(this.safeString(e,"order_state")),p=this.safeStringLower(e,"direction"),_=this.safeString(e,"commission");void 0!==_&&(s={cost:_=n.Y.stringAbs(_),currency:t.base});let g=this.safeString(e,"order_type"),y=this.parseOrderType(g),v=this.safeValue(e,"trades"),b=this.parseTimeInForce(this.safeString(e,"time_in_force")),k=this.safeValue(e,"post_only");return this.safeOrder({info:e,id:d,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:i,symbol:t.symbol,type:y,timeInForce:b,postOnly:k,side:p,price:c,triggerPrice:this.safeValue(e,"stop_price"),amount:l,cost:m,average:h,filled:u,remaining:void 0,status:f,fee:s,trades:v},t)}async fetchOrder(e,t,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));let r=await this.privateGetGetOrderState(this.extend({order_id:e},i)),a=this.safeDict(r,"result");return this.parseOrder(a,s)}async createOrder(e,t,i,s,r,n={}){let o;await this.loadMarkets();let d=this.market(e),c={instrument_name:d.id,amount:this.amountToPrecision(e,s),type:t},h=this.safeString(n,"trigger","last_price"),u=this.safeStringUpper(n,"timeInForce"),l=this.safeValue2(n,"reduceOnly","reduce_only"),m=this.safeValue(n,"stopLossPrice"),f=this.safeValue(n,"takeProfitPrice"),p=this.safeString2(n,"trailingAmount","trigger_offset"),_=void 0!==p,g="stop_limit"===t,y="stop_market"===t,v="take_limit"===t,b="take_market"===t,k=g||y||void 0!==m,w=v||b||void 0!==f;if(k&&w)throw new a.InvalidOrder(this.id+" createOrder () only allows one of stopLossPrice or takeProfitPrice to be specified");let S="market"===t||y||b,O=this.safeValue(n,"post_only"),x=this.isPostOnly(S,O,n);"limit"===t||g||v?(c.type="limit",c.price=this.priceToPrecision(e,r)):c.type="market",_?(c.trigger=h,c.type="trailing_stop",c.trigger_offset=this.parseToNumeric(p)):(k||w)&&(c.trigger_price=this.priceToPrecision(e,void 0!==m?m:f),c.trigger=h,k?S?c.type="stop_market":c.type="stop_limit":S?c.type="take_market":c.type="take_limit"),l&&(c.reduce_only=!0),x&&(c.post_only=!0,c.reject_post_only=!0),void 0!==u&&("GTC"===u&&(c.time_in_force="good_til_cancelled"),"IOC"===u&&(c.time_in_force="immediate_or_cancel"),"FOK"===u&&(c.time_in_force="fill_or_kill")),n=this.omit(n,["timeInForce","stopLossPrice","takeProfitPrice","postOnly","reduceOnly","trailingAmount"]),o="Buy"===this.capitalize(i)?await this.privateGetBuy(this.extend(c,n)):await this.privateGetSell(this.extend(c,n));let T=this.safeValue(o,"result",{}),G=this.safeValue(T,"order"),I=this.safeValue(T,"trades",[]);return G.trades=I,this.parseOrder(G,d)}async editOrder(e,t,i,s,r,n,o={}){if(void 0===r)throw new a.ArgumentsRequired(this.id+" editOrder() requires an amount argument");await this.loadMarkets();let d={order_id:e,amount:this.amountToPrecision(t,r)};void 0!==n&&(d.price=this.priceToPrecision(t,n));let c=this.safeString2(o,"trailingAmount","trigger_offset");void 0!==c&&(d.trigger_offset=this.parseToNumeric(c),o=this.omit(o,"trigger_offset"));let h=await this.privateGetEdit(this.extend(d,o)),u=this.safeValue(h,"result",{}),l=this.safeValue(u,"order"),m=this.safeValue(u,"trades",[]);return l.trades=m,this.parseOrder(l)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetCancel(this.extend({order_id:e},i)),r=this.safeDict(s,"result",{});return this.parseOrder(r)}async cancelAllOrders(e,t={}){let i;await this.loadMarkets();let s={};if(void 0===e)i=await this.privateGetCancelAll(this.extend(s,t));else{let r=this.market(e);s.instrument_name=r.id,i=await this.privateGetCancelAllByInstrument(this.extend(s,t))}return[this.safeOrder({info:i})]}async fetchOpenOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n={};if(void 0===e){let e=this.codeFromOptions("fetchOpenOrders",s),t=this.currency(e);n.currency=t.id,a=await this.privateGetGetOpenOrdersByCurrency(this.extend(n,s))}else r=this.market(e),n.instrument_name=r.id,a=await this.privateGetGetOpenOrdersByInstrument(this.extend(n,s));let o=this.safeList(a,"result",[]);return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r,a;await this.loadMarkets();let n={};if(void 0===e){let e=this.codeFromOptions("fetchClosedOrders",s),t=this.currency(e);n.currency=t.id,a=await this.privateGetGetOrderHistoryByCurrency(this.extend(n,s))}else r=this.market(e),n.instrument_name=r.id,a=await this.privateGetGetOrderHistoryByInstrument(this.extend(n,s));let o=this.safeList(a,"result",[]);return this.parseOrders(o,r,t,i)}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=await this.privateGetGetUserTradesByOrder(this.extend({order_id:e},r)),n=this.safeList(a,"result",[]);return this.parseTrades(n,void 0,i,s)}async fetchMyTrades(e,t,i,s={}){let r,a;await this.loadMarkets();let n={include_old:!0};if(void 0!==i&&(n.count=i),void 0===e){let e=this.codeFromOptions("fetchMyTrades",s),i=this.currency(e);n.currency=i.id,void 0===t?a=await this.privateGetGetUserTradesByCurrency(this.extend(n,s)):(n.start_timestamp=t,a=await this.privateGetGetUserTradesByCurrencyAndTime(this.extend(n,s)))}else r=this.market(e),n.instrument_name=r.id,void 0===t?a=await this.privateGetGetUserTradesByInstrument(this.extend(n,s)):(n.start_timestamp=t,a=await this.privateGetGetUserTradesByInstrumentAndTime(this.extend(n,s)));let o=this.safeValue(a,"result",{}),d=this.safeList(o,"trades",[]);return this.parseTrades(d,r,t,i)}async fetchDeposits(e,t,i,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();let r=this.currency(e),n={currency:r.id};void 0!==i&&(n.count=i);let o=await this.privateGetGetDeposits(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeList(d,"data",[]);return this.parseTransactions(c,r,t,i,s)}async fetchWithdrawals(e,t,i,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();let r=this.currency(e),n={currency:r.id};void 0!==i&&(n.count=i);let o=await this.privateGetGetWithdrawals(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeList(d,"data",[]);return this.parseTransactions(c,r,t,i,s)}parseTransactionStatus(e){return this.safeString({completed:"ok",unconfirmed:"pending"},e,e)}parseTransaction(e,t){let i;let s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s,t),a=this.safeInteger2(e,"created_timestamp","received_timestamp"),n=this.safeInteger(e,"updated_timestamp"),o=this.parseTransactionStatus(this.safeString(e,"state")),d=this.safeString(e,"address"),c=this.safeNumber(e,"fee"),h="deposit";return void 0!==c&&(h="withdrawal",i={cost:c,currency:r}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"transaction_id"),timestamp:a,datetime:this.iso8601(a),address:d,addressTo:d,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:h,amount:this.safeNumber(e,"amount"),currency:r,status:o,updated:n,network:void 0,internal:void 0,comment:void 0,fee:i}}parsePosition(e,t){let i=this.safeString(e,"instrument_name");t=this.safeMarket(i,t);let s=this.safeString(e,"direction");s="buy"===s?"long":"short";let r=this.safeString(e,"floating_profit_loss"),a=this.safeString(e,"initial_margin"),o=this.safeString(e,"size_currency"),d=this.safeString(e,"maintenance_margin"),c=this.milliseconds();return this.safePosition({info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:c,datetime:this.iso8601(c),lastUpdateTimestamp:void 0,initialMargin:this.parseNumber(a),initialMarginPercentage:this.parseNumber(n.Y.stringMul(n.Y.stringDiv(a,o),"100")),maintenanceMargin:this.parseNumber(d),maintenanceMarginPercentage:this.parseNumber(n.Y.stringMul(n.Y.stringDiv(d,o),"100")),entryPrice:this.safeNumber(e,"average_price"),notional:this.parseNumber(o),leverage:this.safeInteger(e,"leverage"),unrealizedPnl:this.parseNumber(r),contracts:void 0,contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"estimated_liquidation_price"),markPrice:this.safeNumber(e,"mark_price"),lastPrice:void 0,collateral:void 0,marginMode:void 0,side:s,percentage:void 0,hedged:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchPosition(e,t={}){await this.loadMarkets();let i={instrument_name:this.market(e).id},s=await this.privateGetGetPosition(this.extend(i,t)),r=this.safeDict(s,"result");return this.parsePosition(r)}async fetchPositions(e,t={}){let i;await this.loadMarkets();let s=this.safeString(t,"kind");if(void 0===e)i=this.codeFromOptions("fetchPositions",t);else if("string"==typeof e)i=e,e=void 0;else if(Array.isArray(e)){if(1!==e.length)throw new a.BadRequest(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");let t=this.market(e[0]),r=t.settle;i=void 0!==r?r:t.base,s=t.info.kind}let r={currency:this.currency(i).id};void 0!==s&&(r.kind=s);let n=await this.privateGetGetPositions(this.extend(r,t)),o=this.safeList(n,"result");return this.parsePositions(o,e)}async fetchVolatilityHistory(e,t={}){await this.loadMarkets();let i={currency:this.currency(e).id},s=await this.publicGetGetHistoricalVolatility(this.extend(i,t));return this.parseVolatilityHistory(s)}parseVolatilityHistory(e){let t=this.safeValue(e,"result",[]),i=[];for(let e=0;e<t.length;e++){let s=this.safeInteger(t[e],0),r=this.safeNumber(t[e],1);i.push({info:r,timestamp:s,datetime:this.iso8601(s),volatility:r})}return i}async fetchTransfers(e,t,i,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchTransfers() requires a currency code argument");await this.loadMarkets();let r=this.currency(e),n={currency:r.id};void 0!==i&&(n.count=i);let o=await this.privateGetGetTransfers(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeList(d,"data",[]);return this.parseTransfers(c,r,t,i,s)}async transfer(e,t,i,s,r={}){let a;await this.loadMarkets();let n=this.currency(e),o={amount:t,currency:n.id,destination:s},d=this.safeString(r,"method");if(r=this.omit(r,"method"),void 0===d){let e=this.safeValue(this.options,"transfer",{});d=this.safeString(e,"method","privateGetSubmitTransferToSubaccount")}a="privateGetSubmitTransferToUser"===d?await this.privateGetSubmitTransferToUser(this.extend(o,r)):await this.privateGetSubmitTransferToSubaccount(this.extend(o,r));let c=this.safeDict(a,"result",{});return this.parseTransfer(c,n)}parseTransfer(e,t){let i=this.safeTimestamp(e,"created_timestamp"),s=this.safeString(e,"state"),r=this.safeString(e,"other_side"),a=this.safeString(e,"direction"),n=this.safeString(e,"currency");return{info:e,id:this.safeString(e,"id"),status:this.parseTransferStatus(s),amount:this.safeNumber(e,"amount"),currency:this.safeCurrencyCode(n,t),fromAccount:"payment"!==a?r:void 0,toAccount:"payment"===a?r:void 0,timestamp:i,datetime:this.iso8601(i)}}parseTransferStatus(e){return this.safeString({prepared:"pending",confirmed:"ok",cancelled:"cancelled",waiting_for_admin:"pending"},e,e)}async withdraw(e,t,i,s,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),n={currency:a.id,address:i,amount:t};void 0!==this.twofa&&(n.tfa=(0,d.O)(this.twofa));let o=await this.privateGetWithdraw(this.extend(n,r));return this.parseTransaction(o,a)}parseDepositWithdrawFee(e,t){return{info:e,withdraw:{fee:this.safeNumber(e,"withdrawal_fee"),percentage:!1},deposit:{fee:void 0,percentage:void 0},networks:{}}}async fetchDepositWithdrawFees(e,t={}){await this.loadMarkets();let i=await this.publicGetGetCurrencies(t),s=this.safeList(i,"result",[]);return this.parseDepositWithdrawFees(s,e,"currency")}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.milliseconds(),r={instrument_name:i.id,start_timestamp:s-288e5,end_timestamp:s},a=await this.publicGetGetFundingRateValue(this.extend(r,t));return this.parseFundingRate(a,i)}async fetchFundingRateHistory(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","paginate"),a)return await this.fetchPaginatedCallDeterministic("fetchFundingRateHistory",e,t,i,"8h",s,720);let n=this.milliseconds();void 0===t&&(t=n-2592e6);let o={instrument_name:r.id,start_timestamp:t-1,end_timestamp:n},d=await this.publicGetGetFundingRateHistory(this.extend(o,s)),c=[],h=this.safeValue(d,"result",[]);for(let e=0;e<h.length;e++){let t=h[e],i=this.parseFundingRate(t,r);c.push(i)}return this.filterBySymbolSinceLimit(c,e,t,i)}parseFundingRate(e,t){let i=this.safeInteger(e,"timestamp"),s=this.iso8601(i),r=this.safeNumber2(e,"result","interest_8h");return{info:e,symbol:this.safeSymbol(void 0,t),markPrice:void 0,indexPrice:this.safeNumber(e,"index_price"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:i,datetime:s,fundingRate:r,fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:"8h"}}async fetchLiquidations(e,t,i,s={}){await this.loadMarkets();let r=!1;if([r,s]=this.handleOptionAndParams(s,"fetchLiquidations","paginate"),r)return await this.fetchPaginatedCallCursor("fetchLiquidations",e,t,i,s,"continuation","continuation",void 0);let n=this.market(e);if(n.spot)throw new a.NotSupported(this.id+" fetchLiquidations() does not support "+n.type+" markets");let o={instrument_name:n.id,type:"bankruptcy"};void 0!==t&&(o.search_start_timestamp=t),void 0!==i&&(o.count=i);let d=await this.publicGetGetLastSettlementsByInstrument(this.extend(o,s)),c=this.safeValue(d,"result",{}),h=this.safeString(c,"continuation"),u=this.safeValue(c,"settlements",[]),l=this.addPaginationCursorToResult(h,u);return this.parseLiquidations(l,n,t,i)}addPaginationCursorToResult(e,t){if(void 0!==e){let i=t.length;if(i>0){let s=t[0],r=t[i-1];s.continuation=e,r.continuation=e,t[0]=s,t[i-1]=r}}return t}async fetchMyLiquidations(e,t,i,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchMyLiquidations() requires a symbol argument");await this.loadMarkets();let r=this.market(e);if(r.spot)throw new a.NotSupported(this.id+" fetchMyLiquidations() does not support "+r.type+" markets");let n={instrument_name:r.id,type:"bankruptcy"};void 0!==t&&(n.search_start_timestamp=t),void 0!==i&&(n.count=i);let o=await this.privateGetGetSettlementHistoryByInstrument(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeList(d,"settlements",[]);return this.parseLiquidations(c,r,t,i)}parseLiquidation(e,t){let i=this.safeInteger(e,"timestamp");return this.safeLiquidation({info:e,symbol:this.safeSymbol(void 0,t),contracts:void 0,contractSize:this.safeNumber(t,"contractSize"),price:void 0,baseValue:this.safeNumber(e,"session_bankrupcy"),quoteValue:void 0,timestamp:i,datetime:this.iso8601(i)})}async fetchGreeks(e,t={}){await this.loadMarkets();let i=this.market(e),s={instrument_name:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parseGreeks(a,i)}parseGreeks(e,t){let i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"instrument_name"),r=this.safeSymbol(s,t),a=this.safeValue(e,"greeks",{});return{symbol:r,timestamp:i,datetime:this.iso8601(i),delta:this.safeNumber(a,"delta"),gamma:this.safeNumber(a,"gamma"),theta:this.safeNumber(a,"theta"),vega:this.safeNumber(a,"vega"),rho:this.safeNumber(a,"rho"),bidSize:this.safeNumber(e,"best_bid_amount"),askSize:this.safeNumber(e,"best_ask_amount"),bidImpliedVolatility:this.safeNumber(e,"bid_iv"),askImpliedVolatility:this.safeNumber(e,"ask_iv"),markImpliedVolatility:this.safeNumber(e,"mark_iv"),bidPrice:this.safeNumber(e,"best_bid_price"),askPrice:this.safeNumber(e,"best_ask_price"),markPrice:this.safeNumber(e,"mark_price"),lastPrice:this.safeNumber(e,"last_price"),underlyingPrice:this.safeNumber(e,"underlying_price"),info:e}}async fetchOption(e,t={}){await this.loadMarkets();let i=this.market(e),s={instrument_name:i.id},r=await this.publicGetGetBookSummaryByInstrument(this.extend(s,t)),a=this.safeList(r,"result",[]),n=this.safeDict(a,0,{});return this.parseOption(n,void 0,i)}async fetchOptionChain(e,t={}){await this.loadMarkets();let i={currency:this.currency(e).id,kind:"option"},s=await this.publicGetGetBookSummaryByCurrency(this.extend(i,t)),r=this.safeList(s,"result",[]);return this.parseOptionChain(r,"base_currency","instrument_name")}parseOption(e,t,i){let s=this.safeString(e,"instrument_name");i=this.safeMarket(s,i);let r=this.safeString(e,"base_currency"),a=this.safeCurrencyCode(r,t),n=this.safeInteger(e,"timestamp");return{info:e,currency:a,symbol:i.symbol,timestamp:n,datetime:this.iso8601(n),impliedVolatility:void 0,openInterest:this.safeNumber(e,"open_interest"),bidPrice:this.safeNumber(e,"bid_price"),askPrice:this.safeNumber(e,"ask_price"),midPrice:this.safeNumber(e,"mid_price"),markPrice:this.safeNumber(e,"mark_price"),lastPrice:this.safeNumber(e,"last"),underlyingPrice:this.safeNumber(e,"underlying_price"),change:void 0,percentage:this.safeNumber(e,"price_change"),baseVolume:this.safeNumber(e,"volume"),quoteVolume:this.safeNumber(e,"volume_usd")}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let n="/api/"+this.version+"/"+t+"/"+e;if("public"===t&&Object.keys(s).length&&(n+="?"+this.urlencode(s)),"private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.milliseconds().toString();Object.keys(s).length&&(n+="?"+this.urlencode(s));let a=i+"\n"+n+"\n\n",d=this.hmac(this.encode(t+"\n"+e+"\n"+a),this.encode(this.secret),o.s);r={Authorization:"deri-hmac-sha256 id="+this.apiKey+",ts="+t+",sig="+d+",nonce="+e}}return{url:this.urls.api.rest+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,n,o,d,c){if(!o)return;let h=this.safeValue(o,"error");if(void 0!==h){let e=this.safeString(h,"code"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new a.ExchangeError(t)}}}}}]);