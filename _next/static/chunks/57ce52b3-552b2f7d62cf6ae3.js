"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[447],{2748:(t,e,s)=>{s.d(e,{A:()=>c});var i=s(587),a=s(6077),r=s(8119),h=s(4587),n=s(5432),o=s(2982),l=s(8715),d=s(74);class c extends i.A{describe(){let t=super.describe();return this.deepExtend(t,this.describeData())}describeData(){return{has:{ws:!0,watchBalance:!0,watchLiquidations:!0,watchLiquidationsForSymbols:!0,watchMyLiquidations:!0,watchMyLiquidationsForSymbols:!0,watchBidsAsks:!0,watchMyTrades:!0,watchOHLCV:!0,watchOHLCVForSymbols:!0,watchOrderBook:!0,watchOrderBookForSymbols:!0,watchOrders:!0,watchOrdersForSymbols:!0,watchPositions:!0,watchTicker:!0,watchTickers:!0,watchMarkPrices:!0,watchMarkPrice:!0,watchTrades:!0,watchTradesForSymbols:!0,createOrderWs:!0,editOrderWs:!0,cancelOrderWs:!0,cancelOrdersWs:!1,cancelAllOrdersWs:!0,fetchBalanceWs:!0,fetchDepositsWs:!1,fetchMarketsWs:!1,fetchMyTradesWs:!0,fetchOHLCVWs:!0,fetchOrderBookWs:!0,fetchOpenOrdersWs:!0,fetchOrderWs:!0,fetchOrdersWs:!0,fetchPositionWs:!0,fetchPositionForSymbolWs:!0,fetchPositionsWs:!0,fetchTickerWs:!0,fetchTradesWs:!0,fetchTradingFeesWs:!1,fetchWithdrawalsWs:!1},urls:{test:{ws:{spot:"wss://testnet.binance.vision/ws",margin:"wss://testnet.binance.vision/ws",future:"wss://fstream.binancefuture.com/ws",delivery:"wss://dstream.binancefuture.com/ws","ws-api":{spot:"wss://testnet.binance.vision/ws-api/v3",future:"wss://testnet.binancefuture.com/ws-fapi/v1"}}},api:{ws:{spot:"wss://stream.binance.com:9443/ws",margin:"wss://stream.binance.com:9443/ws",future:"wss://fstream.binance.com/ws",delivery:"wss://dstream.binance.com/ws","ws-api":{spot:"wss://ws-api.binance.com:443/ws-api/v3",future:"wss://ws-fapi.binance.com/ws-fapi/v1"},papi:"wss://fstream.binance.com/pm/ws"}},doc:"https://developers.binance.com/en"},streaming:{keepAlive:18e4},options:{returnRateLimits:!1,streamLimits:{spot:50,margin:50,future:50,delivery:50},subscriptionLimitByStream:{spot:200,margin:200,future:200,delivery:200},streamBySubscriptionsHash:this.createSafeDictionary(),streamIndex:-1,watchOrderBookRate:100,liquidationsLimit:1e3,myLiquidationsLimit:1e3,tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,requestId:this.createSafeDictionary(),watchOrderBookLimit:1e3,watchTrades:{name:"trade"},watchTicker:{name:"ticker"},watchTickers:{name:"ticker"},watchOHLCV:{name:"kline"},watchOrderBook:{maxRetries:3,checksum:!0},watchBalance:{fetchBalanceSnapshot:!1,awaitBalanceSnapshot:!0},watchLiquidationsForSymbols:{defaultType:"swap"},watchPositions:{fetchPositionsSnapshot:!0,awaitPositionsSnapshot:!0},wallet:"wb",listenKeyRefreshRate:12e5,ws:{cost:5},tickerChannelsMap:{"24hrTicker":"ticker","24hrMiniTicker":"miniTicker",markPriceUpdate:"markPrice","1hTicker":"ticker_1h","4hTicker":"ticker_4h","1dTicker":"ticker_1d",bookTicker:"bookTicker"}}}}requestId(t){let e=this.safeDict(this.options,"requestId",this.createSafeDictionary()),s=this.safeInteger(e,t,0),i=this.sum(s,1);return this.options.requestId[t]=i,i}stream(t,e,s=1){let i=this.safeDict(this.options,"streamBySubscriptionsHash",this.createSafeDictionary()),a=this.safeString(i,e);if(void 0===a){let i=this.safeInteger(this.options,"streamIndex",-1),h=this.safeValue(this.options,"streamLimits"),n=(i+=1)%this.safeInteger(h,t);this.options.streamIndex=i,a=this.numberToString(n),this.options.streamBySubscriptionsHash[e]=a,void 0===this.safeValue(this.options,"numSubscriptionsByStream")&&(this.options.numSubscriptionsByStream=this.createSafeDictionary());let o=this.safeInteger(this.options.numSubscriptionsByStream,a,0);if(o+s>this.safeInteger(this.options.subscriptionLimitByStream,t,200))throw new r.BadRequest(this.id+" reached the limit of subscriptions by stream. Increase the number of streams, or increase the stream limit or subscription limit by stream if the exchange allows.");this.options.numSubscriptionsByStream[a]=o+s}return a}async watchLiquidations(t,e,s,i={}){return await this.watchLiquidationsForSymbols([t],e,s,i)}async watchLiquidationsForSymbols(t,e,s,i={}){let a,h;await this.loadMarkets();let n=[],o=[],l="liquidations";if(t=this.marketSymbols(t,void 0,!0,!0),this.isEmpty(t))n.push("!forceOrder@arr"),o.push("liquidations");else{for(let e=0;e<t.length;e++){let s=this.market(t[e]);n.push(s.lowercaseId+"@forceOrder"),o.push("liquidations::"+t[e])}l+="::"+t.join(",")}let d=this.getMarketFromSymbols(t);if([a,i]=this.handleMarketTypeAndParams("watchLiquidationsForSymbols",d,i),"spot"===a)throw new r.BadRequest(this.id+"watchLiquidationsForSymbols is not supported for spot symbols");[h,i]=this.handleSubTypeAndParams("watchLiquidationsForSymbols",d,i),this.isLinear(a,h)?a="future":this.isInverse(a,h)&&(a="delivery");let c=n.length,m=this.urls.api.ws[a]+"/"+this.stream(a,l,c),u=this.requestId(m),p=await this.watchMultiple(m,o,this.extend({method:"SUBSCRIBE",params:n,id:u},i),n,{id:u});return this.newUpdates?p:this.filterBySymbolsSinceLimit(this.liquidations,t,e,s,!0)}handleLiquidation(t,e){let s=this.safeValue(e,"o",{}),i=this.safeString(s,"s"),a=this.safeMarket(i,void 0,"","contract"),r=a.symbol,n=this.parseWsLiquidation(s,a),o=this.safeValue(this.liquidations,r);if(void 0===o){let t=this.safeInteger(this.options,"liquidationsLimit",1e3);o=new h.I3(t)}o.append(n),this.liquidations[r]=o,t.resolve([n],"liquidations"),t.resolve([n],"liquidations::"+r)}parseWsLiquidation(t,e){let s=this.safeString(t,"s");e=this.safeMarket(s,e);let i=this.safeInteger(t,"T");return this.safeLiquidation({info:t,symbol:this.safeSymbol(s,e),contracts:this.safeNumber(t,"l"),contractSize:this.safeNumber(e,"contractSize"),price:this.safeNumber(t,"ap"),baseValue:void 0,quoteValue:void 0,timestamp:i,datetime:this.iso8601(i)})}async watchMyLiquidations(t,e,s,i={}){return this.watchMyLiquidationsForSymbols([t],e,s,i)}async watchMyLiquidationsForSymbols(t,e,s,i={}){let a,r;await this.loadMarkets(),t=this.marketSymbols(t,void 0,!0,!0,!0);let h=this.getMarketFromSymbols(t),n=["myLiquidations"];if(!this.isEmpty(t))for(let e=0;e<t.length;e++){let s=t[e];n.push("myLiquidations::"+s)}[a,i]=this.handleMarketTypeAndParams("watchMyLiquidationsForSymbols",h,i),[r,i]=this.handleSubTypeAndParams("watchMyLiquidationsForSymbols",h,i),this.isLinear(a,r)?a="future":this.isInverse(a,r)&&(a="delivery"),await this.authenticate(i);let o=this.urls.api.ws[a]+"/"+this.options[a].listenKey,l=await this.watchMultiple(o,n,void 0,[a]);return this.newUpdates?l:this.filterBySymbolsSinceLimit(this.liquidations,t,e,s)}handleMyLiquidation(t,e){if("LIQUIDATION"!==this.safeString(e,"o"))return;let s=this.safeString(e,"s"),i=this.safeMarket(s),a=this.safeSymbol(s),r=this.parseWsLiquidation(e,i),n=this.safeValue(this.myLiquidations,a);if(void 0===n){let t=this.safeInteger(this.options,"myLiquidationsLimit",1e3);n=new h.I3(t)}n.append(r),this.myLiquidations[a]=n,t.resolve([r],"myLiquidations"),t.resolve([r],"myLiquidations::"+a)}async watchOrderBook(t,e,s={}){return await this.watchOrderBookForSymbols([t],e,s)}async watchOrderBookForSymbols(t,e,s={}){await this.loadMarkets(),t=this.marketSymbols(t,void 0,!1,!0,!0);let i=this.market(t[0]),a=i.type;i.contract&&(a=i.linear?"future":"delivery");let h="depth",n="multipleOrderbook";if(void 0!==t){if(t.length>200)throw new r.BadRequest(this.id+" watchOrderBookForSymbols() accepts 200 symbols at most. To watch more symbols call watchOrderBookForSymbols() multiple times");n+="::"+t.join(",")}let o=this.safeString(this.options,"watchOrderBookRate","100"),l=[],d=[];for(let e=0;e<t.length;e++){let s=t[e],i=this.market(s);d.push("orderbook::"+s);let a=i.lowercaseId+"@"+h+"@"+o+"ms";l.push(a)}let c=d.length,m=this.urls.api.ws[a]+"/"+this.stream(a,n,c),u=this.requestId(m),p={id:u.toString(),name:h,symbols:t,method:this.handleOrderBookSubscription,limit:e,type:a,params:s};return(await this.watchMultiple(m,d,this.extend({method:"SUBSCRIBE",params:l,id:u},s),d,p)).limit()}async unWatchOrderBookForSymbols(t,e={}){await this.loadMarkets(),t=this.marketSymbols(t,void 0,!1,!0,!0);let s=this.market(t[0]),i=s.type;s.contract&&(i=s.linear?"future":"delivery");let a="multipleOrderbook";void 0!==t&&(a+="::"+t.join(","));let r=this.safeString(this.options,"watchOrderBookRate","100"),h=[],n=[],o=[];for(let e=0;e<t.length;e++){let s=t[e],i=this.market(s);n.push("orderbook::"+s),o.push("unsubscribe:orderbook:"+s);let a=i.lowercaseId+"@depth@"+r+"ms";h.push(a)}let l=n.length,d=this.urls.api.ws[i]+"/"+this.stream(i,a,l),c=this.requestId(d),m={unsubscribe:!0,id:c.toString(),symbols:t,subMessageHashes:n,messageHashes:o,topic:"orderbook"};return await this.watchMultiple(d,o,this.extend({method:"UNSUBSCRIBE",params:h,id:c},e),o,m)}async unWatchOrderBook(t,e={}){return await this.unWatchOrderBookForSymbols([t],e)}async fetchOrderBookWs(t,e,s={}){await this.loadMarkets();let i=this.market(t),a={symbol:i.id};void 0!==e&&(a.limit=e);let h=this.getMarketType("fetchOrderBookWs",i,s);if("future"!==h)throw new r.BadRequest(this.id+" fetchOrderBookWs only supports swap markets");let n=this.urls.api.ws["ws-api"][h],o=this.requestId(n).toString(),l=!1;[l,s]=this.handleOptionAndParams(s,"createOrderWs","returnRateLimits",!1),a.returnRateLimits=l,s=this.omit(s,"test");let d={id:o,method:"depth",params:this.signParams(this.extend(a,s))},c={method:this.handleFetchOrderBook},m=await this.watch(n,o,d,o,c);return m.symbol=i.symbol,m}handleFetchOrderBook(t,e){let s=this.safeString(e,"id"),i=this.safeDict(e,"result"),a=this.safeInteger(i,"T"),r=this.parseOrderBook(i,void 0,a);r.nonce=this.safeInteger2(i,"lastUpdateId","u"),t.resolve(r,s)}async fetchOrderBookSnapshot(t,e,s){let i=this.safeString(s,"symbol"),a="orderbook::"+i;try{let e=this.safeInteger(this.options,"watchOrderBookLimit",1e3),r=this.safeValue(s,"type"),h=this.safeInteger(s,"limit",e),n=this.safeValue(s,"params"),o=await this.fetchRestOrderBookSafe(i,h,n);if(void 0===this.safeValue(this.orderbooks,i))return;let l=this.orderbooks[i];l.reset(o);let d=l.cache;for(let e=0;e<d.length;e++){let s=d[e],i=this.safeInteger(s,"U"),a=this.safeInteger(s,"u"),h=this.safeInteger(s,"pu");if("future"===r){if(a<l.nonce)continue;(i<=l.nonce&&a>=l.nonce||h===l.nonce)&&this.handleOrderBookMessage(t,s,l)}else{if(a<=l.nonce)continue;i-1<=l.nonce&&a-1>=l.nonce&&this.handleOrderBookMessage(t,s,l)}}this.orderbooks[i]=l,t.resolve(l,a)}catch(e){delete t.subscriptions[a],t.reject(e,a)}}handleDelta(t,e){let s=this.safeFloat(e,0),i=this.safeFloat(e,1);t.store(s,i)}handleDeltas(t,e){for(let s=0;s<e.length;s++)this.handleDelta(t,e[s])}handleOrderBookMessage(t,e,s){let i=this.safeInteger(e,"u");this.handleDeltas(s.asks,this.safeValue(e,"a",[])),this.handleDeltas(s.bids,this.safeValue(e,"b",[])),s.nonce=i;let a=this.safeInteger(e,"E");return s.timestamp=a,s.datetime=this.iso8601(a),s}handleOrderBook(t,e){let s=t.url.indexOf("testnet")>0,i=t.url.indexOf("/stream.binance.")>0,a=this.safeString(e,"s"),h=this.safeMarket(a,void 0,void 0,s||i?"spot":"contract").symbol,n="orderbook::"+h;if(!(h in this.orderbooks))return;let o=this.orderbooks[h],l=this.safeInteger(o,"nonce");if(void 0===l)o.cache.push(e);else try{let s=this.safeInteger(e,"U"),i=this.safeInteger(e,"u"),a=this.safeInteger(e,"pu");if(void 0===a){if(i>o.nonce){let a=this.safeInteger(o,"timestamp");if(void 0===a?s-1<=o.nonce&&i-1>=o.nonce:s-1===o.nonce)this.handleOrderBookMessage(t,e,o),l<o.nonce&&t.resolve(o,n);else if(this.handleOption("watchOrderBook","checksum",!0))throw new r.ChecksumError(this.id+" "+this.orderbookChecksumMessage(h))}}else if(i>=o.nonce){if(s<=o.nonce||a===o.nonce)this.handleOrderBookMessage(t,e,o),l<=o.nonce&&t.resolve(o,n);else if(this.handleOption("watchOrderBook","checksum",!0))throw new r.ChecksumError(this.id+" "+this.orderbookChecksumMessage(h))}}catch(e){delete this.orderbooks[h],delete t.subscriptions[n],t.reject(e,n)}}handleOrderBookSubscription(t,e,s){let i=this.safeInteger(this.options,"watchOrderBookLimit",1e3),a=this.safeString(s,"symbol"),r=this.safeValue(s,"symbols",[a]),h=this.safeInteger(s,"limit",i);for(let i=0;i<r.length;i++){let a=r[i];a in this.orderbooks&&delete this.orderbooks[a],this.orderbooks[a]=this.orderBook({},h),s=this.extend(s,{symbol:a}),this.spawn(this.fetchOrderBookSnapshot,t,e,s)}}handleSubscriptionStatus(t,e){let s=this.safeString(e,"id"),i=this.indexBy(t.subscriptions,"id"),a=this.safeValue(i,s,{}),r=this.safeValue(a,"method");return void 0!==r&&r.call(this,t,e,a),this.safeBool(a,"unsubscribe",!1)&&this.handleUnSubscription(t,a),e}handleUnSubscription(t,e){let s=this.safeList(e,"messageHashes",[]),i=this.safeList(e,"subMessageHashes",[]);for(let e=0;e<s.length;e++){let a=s[e],r=i[e];this.cleanUnsubscription(t,r,a)}this.cleanCache(e)}async watchTradesForSymbols(t,e,s,i={}){let a;await this.loadMarkets();let h="multipleTrades";if(void 0!==(t=this.marketSymbols(t,void 0,!1,!0,!0))){if(t.length>200)throw new r.BadRequest(this.id+" watchTradesForSymbols() accepts 200 symbols at most. To watch more symbols call watchTradesForSymbols() multiple times");h+="::"+t.join(",")}[a,i]=this.handleOptionAndParams(i,"watchTradesForSymbols","name","trade"),i=this.omit(i,"callerMethodName");let n=this.market(t[0]),o=n.type;n.contract&&(o=n.linear?"future":"delivery");let l=[],d=[];for(let e=0;e<t.length;e++){let s=t[e],i=this.market(s);l.push("trade::"+s);let r=i.lowercaseId+"@"+a;d.push(r)}let c=this.omit(i,"type"),m=d.length,u=this.urls.api.ws[o]+"/"+this.stream(o,h,m),p=this.requestId(u),f=await this.watchMultiple(u,l,this.extend({method:"SUBSCRIBE",params:d,id:p},c),l,{id:p});if(this.newUpdates){let t=this.safeValue(f,0),e=this.safeString(t,"symbol");s=f.getLimit(e,s)}return this.filterBySinceLimit(f,e,s,"timestamp",!0)}async unWatchTradesForSymbols(t,e={}){let s;await this.loadMarkets();let i="multipleTrades";if(void 0!==(t=this.marketSymbols(t,void 0,!1,!0,!0))){if(t.length>200)throw new r.BadRequest(this.id+" watchTradesForSymbols() accepts 200 symbols at most. To watch more symbols call watchTradesForSymbols() multiple times");i+="::"+t.join(",")}[s,e]=this.handleOptionAndParams(e,"watchTradesForSymbols","name","trade"),e=this.omit(e,"callerMethodName");let a=this.market(t[0]),h=a.type;a.contract&&(h=a.linear?"future":"delivery");let n=[],o=[],l=[];for(let e=0;e<t.length;e++){let i=t[e],a=this.market(i);n.push("trade::"+i),l.push("unsubscribe:trade:"+i);let r=a.lowercaseId+"@"+s;o.push(r)}let d=this.omit(e,"type"),c=o.length,m=this.urls.api.ws[h]+"/"+this.stream(h,i,c),u=this.requestId(m),p={unsubscribe:!0,id:u.toString(),subMessageHashes:n,messageHashes:l,symbols:t,topic:"trades"};return await this.watchMultiple(m,l,this.extend({method:"UNSUBSCRIBE",params:o,id:u},d),l,p)}async unWatchTrades(t,e={}){return await this.loadMarkets(),await this.unWatchTradesForSymbols([t],e)}async watchTrades(t,e,s,i={}){return i.callerMethodName="watchTrades",await this.watchTradesForSymbols([t],e,s,i)}parseWsTrade(t,e){let s,i;let r="TRADE"===this.safeString(t,"x");if(!r)return this.parseTrade(t,e);let h=this.safeString2(t,"t","a"),n=this.safeInteger(t,"T"),o=this.safeString2(t,"L","p"),l=this.safeString(t,"q");r&&(l=this.safeString(t,"l",l));let d=this.safeString(t,"Y");void 0===d&&void 0!==o&&void 0!==l&&(d=a.Y.stringMul(o,l));let c=this.safeString(t,"s"),m="ps"in t?"contract":"spot",u=this.safeSymbol(c,void 0,void 0,m),p=this.safeStringLower(t,"S"),f=this.safeString(t,"i");"m"in t&&(void 0===p&&(p=t.m?"sell":"buy"),s=t.m?"maker":"taker");let w=this.safeString(t,"n");if(void 0!==w){let e=this.safeString(t,"N");i={cost:w,currency:this.safeCurrencyCode(e)}}let y=this.safeStringLower(t,"o");return this.safeTrade({info:t,timestamp:n,datetime:this.iso8601(n),symbol:u,id:h,order:f,type:y,takerOrMaker:s,side:p,price:o,amount:l,cost:d,fee:i})}handleTrade(t,e){let s=t.url.indexOf("wss://stream.binance.com")>-1||t.url.indexOf("/testnet.binance")>-1,i=this.safeString(e,"s"),a=this.safeMarket(i,void 0,void 0,s?"spot":"contract"),r=a.symbol,n="trade::"+r,o=this.parseWsTrade(e,a),l=this.safeValue(this.trades,r);if(void 0===l){let t=this.safeInteger(this.options,"tradesLimit",1e3);l=new h.I3(t)}l.append(o),this.trades[r]=l,t.resolve(l,n)}async watchOHLCV(t,e="1m",s,i,a={}){return await this.loadMarkets(),t=this.market(t).symbol,a.callerMethodName="watchOHLCV",(await this.watchOHLCVForSymbols([[t,e]],s,i,a))[t][e]}async watchOHLCVForSymbols(t,e,s,i={}){let r,h;await this.loadMarkets(),[r,i]=this.handleParamString2(i,"channel","name","kline");let n=this.getListFromObjectValues(t,0),o=this.marketSymbols(n,void 0,!1,!1,!0),l=this.market(o[0]),d=l.type;l.contract&&(d=l.linear?"future":"delivery");let c="spot"===d;[h,i]=this.handleParamString(i,"timezone",void 0);let m=void 0!==h&&("+08:00"===h||a.Y.stringEq(h,"8")),u=[],p=[];for(let e=0;e<t.length;e++){let s=t[e],i=s[0],a=s[1],h=this.safeString(this.timeframes,a,a),n=this.market(i),o=n.lowercaseId;"indexPriceKline"===r&&(o=o.replace("_perp",""));let l=m&&c?"@+08:00":"";u.push(o+"@"+r+"_"+h+l),p.push("ohlcv::"+n.symbol+"::"+a)}let f=this.urls.api.ws[d]+"/"+this.stream(d,"multipleOHLCV"),w=this.requestId(f);i=this.omit(i,"callerMethodName");let[y,k,g]=await this.watchMultiple(f,p,this.extend({method:"SUBSCRIBE",params:u,id:w},i),p,{id:w});this.newUpdates&&(s=g.getLimit(y,s));let b=this.filterBySinceLimit(g,e,s,0,!0);return this.createOHLCVObject(y,k,b)}async unWatchOHLCVForSymbols(t,e={}){let s,i;await this.loadMarkets(),[s,e]=this.handleParamString2(e,"channel","name","kline");let r=this.getListFromObjectValues(t,0),h=this.marketSymbols(r,void 0,!1,!1,!0),n=this.market(h[0]),o=n.type;n.contract&&(o=n.linear?"future":"delivery");let l="spot"===o;[i,e]=this.handleParamString(e,"timezone",void 0);let d=void 0!==i&&("+08:00"===i||a.Y.stringEq(i,"8")),c=[],m=[],u=[];for(let e=0;e<t.length;e++){let i=t[e],a=i[0],r=i[1],h=this.safeString(this.timeframes,r,r),n=this.market(a),o=n.lowercaseId;"indexPriceKline"===s&&(o=o.replace("_perp",""));let p=d&&l?"@+08:00":"";c.push(o+"@"+s+"_"+h+p),m.push("ohlcv::"+n.symbol+"::"+r),u.push("unsubscribe::ohlcv::"+n.symbol+"::"+r)}let p=this.urls.api.ws[o]+"/"+this.stream(o,"multipleOHLCV"),f=this.requestId(p),w={unsubscribe:!0,id:f.toString(),symbols:r,symbolsAndTimeframes:t,subMessageHashes:m,messageHashes:u,topic:"ohlcv"};return e=this.omit(e,"callerMethodName"),await this.watchMultiple(p,u,this.extend({method:"UNSUBSCRIBE",params:c,id:f},e),u,w)}async unWatchOHLCV(t,e="1m",s={}){return await this.loadMarkets(),t=this.market(t).symbol,s.callerMethodName="watchOHLCV",await this.unWatchOHLCVForSymbols([[t,e]],s)}handleOHLCV(t,e){let s=this.safeString(e,"e");s=this.safeString({indexPrice_kline:"indexPriceKline",markPrice_kline:"markPriceKline"},s,s);let i=this.safeValue(e,"k"),a=this.safeString2(i,"s","ps");"indexPriceKline"===s&&(a=this.safeString(e,"ps"));let r=this.safeString(i,"i"),n=this.findTimeframe(r),o=[this.safeInteger(i,"t"),this.safeFloat(i,"o"),this.safeFloat(i,"h"),this.safeFloat(i,"l"),this.safeFloat(i,"c"),this.safeFloat(i,"v")],l=t.url.indexOf("/stream")>-1||t.url.indexOf("/testnet.binance")>-1,d=this.safeSymbol(a,void 0,void 0,l?"spot":"contract"),c="ohlcv::"+d+"::"+n;this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let m=this.safeValue(this.ohlcvs[d],n);if(void 0===m){let t=this.safeInteger(this.options,"OHLCVLimit",1e3);m=new h.TG(t),this.ohlcvs[d][n]=m}m.append(o);let u=[d,n,m];t.resolve(u,c)}async fetchTickerWs(t,e={}){let s;await this.loadMarkets();let i=this.market(t),a={symbol:i.id},h=this.getMarketType("fetchTickerWs",i,e);if("future"!==h)throw new r.BadRequest(this.id+" fetchTickerWs only supports swap markets");let n=this.urls.api.ws["ws-api"][h],o=this.requestId(n).toString(),l={method:this.handleTickerWs},d=!1;[d,e]=this.handleOptionAndParams(e,"fetchTickerWs","returnRateLimits",!1),a.returnRateLimits=d,e=this.omit(e,"test"),[s,e]=this.handleOptionAndParams(e,"fetchTickerWs","method","ticker.book");let c={id:o,method:s,params:this.signParams(this.extend(a,e))};return await this.watch(n,o,c,o,l)}async fetchOHLCVWs(t,e="1m",s,i,a={}){await this.loadMarkets();let h=this.market(t),n=this.getMarketType("fetchOHLCVWs",h,a);if("spot"!==n&&"future"!==n)throw new r.BadRequest(this.id+" fetchOHLCVWs only supports spot or swap markets");let o=this.urls.api.ws["ws-api"][n],l=this.requestId(o).toString(),d=!1;[d,a]=this.handleOptionAndParams(a,"fetchOHLCVWs","returnRateLimits",!1);let c={symbol:this.marketId(t),returnRateLimits:d,interval:this.timeframes[e]},m=this.safeInteger(a,"until");a=this.omit(a,"until"),void 0!==s&&(c.startTime=s),void 0!==i&&(c.limit=i),void 0!==m&&(c.endTime=m);let u={id:l,method:"klines",params:this.extend(c,a)},p={method:this.handleFetchOHLCV};return await this.watch(o,l,u,l,p)}handleFetchOHLCV(t,e){let s=this.safeList(e,"result"),i=this.parseOHLCVs(s),a=this.safeString(e,"id");t.resolve(i,a)}async watchTicker(t,e={}){return await this.loadMarkets(),t=this.symbol(t),(await this.watchTickers([t],this.extend(e,{callerMethodName:"watchTicker"})))[t]}async watchMarkPrice(t,e={}){return await this.loadMarkets(),t=this.symbol(t),(await this.watchMarkPrices([t],this.extend(e,{callerMethodName:"watchMarkPrice"})))[t]}async watchMarkPrices(t,e={}){let s;[s,e]=this.handleOptionAndParams(e,"watchMarkPrices","name","markPrice");let i=await this.watchMultiTickerHelper("watchMarkPrices",s,t,e);return this.newUpdates?i:this.filterByArray(this.tickers,"symbol",t)}async watchTickers(t,e={}){let s;if([s,e]=this.handleOptionAndParams(e,"watchTickers","name","ticker"),"bookTicker"===s)throw new r.BadRequest(this.id+" deprecation notice - to subscribe for bids-asks, use watch_bids_asks() method instead");let i=await this.watchMultiTickerHelper("watchTickers",s,t,e);return this.newUpdates?i:this.filterByArray(this.tickers,"symbol",t)}async unWatchTickers(t,e={}){let s,i,a,h,n;if([s,e]=this.handleOptionAndParams(e,"watchTickers","name","ticker"),"bookTicker"===s)throw new r.BadRequest(this.id+" deprecation notice - to subscribe for bids-asks, use watch_bids_asks() method instead");await this.loadMarkets();let o="watchTickers",l=void 0!==(t=this.marketSymbols(t,void 0,!0,!1,!0));if(l&&(i=this.market(t[0])),[a,e]=this.handleMarketTypeAndParams(o,i,e),[h,e]=this.handleSubTypeAndParams(o,i,e),this.isLinear(a,h))n="future";else if(this.isInverse(a,h))n="delivery";else if("spot"===a)n=a;else throw new r.NotSupported(this.id+" "+o+"() does not support options markets");let d="bookTicker"===s,c=[],m=[],u=[];if(l)for(let e=0;e<t.length;e++){let i=t[e],a=this.market(i);c.push(a.lowercaseId+"@"+s),m.push(this.getMessageHash(s,a.symbol,d)),u.push("unsubscribe:ticker:"+i)}else{if(d){if("spot"===a)throw new r.ArgumentsRequired(this.id+" "+o+"() requires symbols for this channel for spot markets");c.push("!"+s)}else c.push("!"+s+"@arr");m.push(this.getMessageHash(s,void 0,d)),u.push("unsubscribe:ticker")}let p=s;l&&(p=s+"::"+t.join(","));let f=this.urls.api.ws[n]+"/"+this.stream(n,p),w=this.requestId(f),y={unsubscribe:!0,id:w.toString(),subMessageHashes:m,messageHashes:m,symbols:t,topic:"ticker"};return await this.watchMultiple(f,m,this.extend({method:"UNSUBSCRIBE",params:c,id:w},e),m,y)}async unWatchTicker(t,e={}){return await this.unWatchTickers([t],e)}async watchBidsAsks(t,e={}){await this.loadMarkets(),t=this.marketSymbols(t,void 0,!0,!1,!0);let s=await this.watchMultiTickerHelper("watchBidsAsks","bookTicker",t,e);return this.newUpdates?s:this.filterByArray(this.bidsasks,"symbol",t)}async watchMultiTickerHelper(t,e,s,i={}){let a,h,n,o;await this.loadMarkets(),s=this.marketSymbols(s,void 0,!0,!1,!0);let l="bookTicker"===e,d="markPrice"===e,c=this.safeBool(i,"use1sFreq",!0),m=void 0!==s;if(m&&(a=this.market(s[0])),[h,i]=this.handleMarketTypeAndParams(t,a,i,d?"swap":void 0),[n,i]=this.handleSubTypeAndParams(t,a,i),this.isLinear(h,n))o="future";else if(this.isInverse(h,n))o="delivery";else if("spot"===h)o=h;else throw new r.NotSupported(this.id+" "+t+"() does not support options markets");let u=[],p=[],f="";if(d&&(f=c?"@1s":""),m)for(let t=0;t<s.length;t++){let i=s[t],a=this.market(i);u.push(a.lowercaseId+"@"+e+f),p.push(this.getMessageHash(e,a.symbol,l))}else{if(l){if("spot"===h)throw new r.ArgumentsRequired(this.id+" "+t+"() requires symbols for this channel for spot markets");u.push("!"+e)}else d?u.push("!"+e+"@arr"+f):u.push("!"+e+"@arr");p.push(this.getMessageHash(e,void 0,l))}let w=e;m&&(w=e+"::"+s.join(","));let y=this.urls.api.ws[o]+"/"+this.stream(o,w),k=this.requestId(y),g=await this.watchMultiple(y,p,this.deepExtend({method:"SUBSCRIBE",params:u,id:k},i),u,{id:k});if(!m)return g;{let t={};return t[g.symbol]=g,t}}parseWsTicker(t,e){let s;let i=this.safeString2(t,"s","symbol"),a=this.safeSymbol(i,void 0,void 0,e),r=this.safeString(t,"e","bookTicker");if("24hrTicker"===r&&(r="ticker"),"markPriceUpdate"===r)return this.safeTicker({symbol:a,timestamp:this.safeInteger(t,"E"),datetime:this.iso8601(this.safeInteger(t,"E")),info:t,markPrice:this.safeString(t,"p"),indexPrice:this.safeString(t,"i")});s="bookTicker"===r?this.safeInteger2(t,"E","time"):this.safeIntegerN(t,["C","E","time"]);let h=this.safeMarket(i,void 0,void 0,e),n=this.safeString2(t,"c","price");return this.safeTicker({symbol:a,timestamp:s,datetime:this.iso8601(s),high:this.safeString(t,"h"),low:this.safeString(t,"l"),bid:this.safeString2(t,"b","bidPrice"),bidVolume:this.safeString2(t,"B","bidQty"),ask:this.safeString2(t,"a","askPrice"),askVolume:this.safeString2(t,"A","askQty"),vwap:this.safeString(t,"w"),open:this.safeString(t,"o"),close:n,last:n,previousClose:this.safeString(t,"x"),change:this.safeString(t,"p"),percentage:this.safeString(t,"P"),average:void 0,baseVolume:this.safeString(t,"v"),quoteVolume:this.safeString(t,"q"),info:t},h)}handleTickerWs(t,e){let s=this.safeString(e,"id"),i=this.safeValue(e,"result",{}),a=this.parseWsTicker(i,"future");t.resolve(a,s)}handleBidsAsks(t,e){this.handleTickersAndBidsAsks(t,e,"bidasks")}handleTickers(t,e){this.handleTickersAndBidsAsks(t,e,"tickers")}handleTickersAndBidsAsks(t,e,s){let i;let a=t.url.indexOf("/stream")>-1||t.url.indexOf("/testnet.binance")>-1?"spot":"contract",r="bidasks"===s,h=[],n=[],o={};Array.isArray(e)?n=e:n.push(e);for(let e=0;e<n.length;e++){let s=n[e],l=this.safeString(s,"e");if(r&&(l="bookTicker"),void 0===(i=this.safeString(this.options.tickerChannelsMap,l,l)))continue;let d=this.parseWsTicker(s,a),c=d.symbol;o[c]=d,r?this.bidsasks[c]=d:this.tickers[c]=d;let m=this.getMessageHash(i,c,r);h.push(m),t.resolve(d,m)}if(h.length>0){let e=this.getMessageHash(i,void 0,r);t.resolve(o,e)}}getMessageHash(t,e,s){let i=s?"bidask":"ticker";return void 0!==e?i+":"+t+"@"+e:i+"s:"+t}signParams(t={}){let e;this.checkRequiredCredentials();let s=this.extend({timestamp:this.nonce(),apiKey:this.apiKey},t),i=this.safeInteger(this.options,"recvWindow");void 0!==i&&(t.recvWindow=i);let a=this.safeInteger(t,"recvWindow");void 0!==a&&(t.recvWindow=a),s=this.keysort(s);let r=this.urlencode(s);return e=this.secret.indexOf("PRIVATE KEY")>-1?this.secret.length>120?(0,o.n)(r,this.secret,n.s):(0,l.q4)(this.encode(r),this.secret,d.ev):this.hmac(this.encode(r),this.encode(this.secret),n.s),s.signature=e,s}async authenticate(t={}){let e,s,i,a;let h=this.milliseconds();[e,t]=this.handleMarketTypeAndParams("authenticate",void 0,t),[s,t]=this.handleSubTypeAndParams("authenticate",void 0,t),[i,t]=this.handleOptionAndParams2(t,"authenticate","papi","portfolioMargin",!1),this.isLinear(e,s)?e="future":this.isInverse(e,s)&&(e="delivery"),[a,t]=this.handleMarginModeAndParams("authenticate",t);let n=this.safeString(t,"symbol");t=this.omit(t,"symbol");let o=this.safeValue(this.options,e,{}),l=this.safeInteger(o,"lastAuthenticatedTime",0),d=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);if(h-l>this.sum(d,1e4)){let s;if(i)s=await this.papiPostListenKey(t);else if("future"===e)s=await this.fapiPrivatePostListenKey(t);else if("delivery"===e)s=await this.dapiPrivatePostListenKey(t);else if("margin"===e&&("cross"===a||void 0===a))s=await this.sapiPostUserDataStream(t);else if("isolated"===a){if(void 0===n)throw new r.ArgumentsRequired(this.id+" authenticate() requires a symbol argument for isolated margin mode");let e=this.marketId(n);t=this.extend(t,{symbol:e}),s=await this.sapiPostUserDataStreamIsolated(t)}else s=await this.publicPostUserDataStream(t);this.options[e]=this.extend(o,{listenKey:this.safeString(s,"listenKey"),lastAuthenticatedTime:h}),this.delay(d,this.keepAliveListenKey,t)}}async keepAliveListenKey(t={}){let e,s=this.safeString2(this.options,"defaultType","authenticate","spot");s=this.safeString(t,"type",s),[e,t]=this.handleOptionAndParams2(t,"keepAliveListenKey","papi","portfolioMargin",!1);let i=this.handleSubTypeAndParams("keepAliveListenKey",void 0,t)[0];this.isLinear(s,i)?s="future":this.isInverse(s,i)&&(s="delivery");let a=this.safeValue(this.options,s,{}),r=this.safeString(a,"listenKey");if(void 0===r)return;let h={},n=this.safeString(t,"symbol");t=this.omit(t,["type","symbol"]);let o=this.milliseconds();try{e?await this.papiPutListenKey(this.extend(h,t)):"future"===s?await this.fapiPrivatePutListenKey(this.extend(h,t)):"delivery"===s?await this.dapiPrivatePutListenKey(this.extend(h,t)):(h.listenKey=r,"margin"===s?(h.symbol=n,await this.sapiPutUserDataStream(this.extend(h,t))):await this.publicPutUserDataStream(this.extend(h,t)))}catch(n){let t=s;e&&(t="papi");let i=this.urls.api.ws[t]+"/"+this.options[s].listenKey,r=this.client(i),h=Object.keys(r.futures);for(let t=0;t<h.length;t++){let e=h[t];r.reject(n,e)}this.options[s]=this.extend(a,{listenKey:void 0,lastAuthenticatedTime:0});return}this.options[s]=this.extend(a,{listenKey:r,lastAuthenticatedTime:o});let l=Object.values(this.clients),d=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);for(let e=0;e<l.length;e++){let i=Object.keys(l[e].subscriptions);for(let e=0;e<i.length;e++)if(i[e]===s){this.delay(d,this.keepAliveListenKey,t);return}}}setBalanceCache(t,e,s=!1){if(e in t.subscriptions)return;let i=this.safeValue(this.options,"watchBalance");if(this.safeBool(i,"fetchBalanceSnapshot",!1)){let i=e+":fetchBalanceSnapshot";i in t.futures||(t.future(i),this.spawn(this.loadBalanceSnapshot,t,i,e,s))}else this.balance[e]={}}async loadBalanceSnapshot(t,e,s,i){let a={type:s};i&&(a.portfolioMargin=!0);let r=await this.fetchBalance(a);this.balance[s]=this.extend(r,this.safeValue(this.balance,s,{})),t.futures[e].resolve(),t.resolve(this.balance[s],s+":balance")}async fetchBalanceWs(t={}){let e;await this.loadMarkets();let s=this.getMarketType("fetchBalanceWs",void 0,t);if("spot"!==s&&"future"!==s)throw new r.BadRequest(this.id+" fetchBalanceWs only supports spot or swap markets");let i=this.urls.api.ws["ws-api"][s],a=this.requestId(i).toString(),h=!1;[h,t]=this.handleOptionAndParams(t,"fetchBalanceWs","returnRateLimits",!1);let n={returnRateLimits:h};[e,t]=this.handleOptionAndParams(t,"fetchBalanceWs","method","account.status");let o={id:a,method:e,params:this.signParams(this.extend(n,t))},l={method:"account.status"===e?this.handleAccountStatusWs:this.handleBalanceWs};return await this.watch(i,a,o,a,l)}handleBalanceWs(t,e){let s;let i=this.safeString(e,"id");if(Array.isArray(e.result))s=this.safeList(e,"result",[]);else{let t=this.safeDict(e,"result",{});s=this.safeList(t,"assets",[])}let a=this.parseBalanceCustom(s);t.resolve(a,i)}handleAccountStatusWs(t,e){let s=this.safeString(e,"id"),i=this.safeDict(e,"result",{}),a=this.parseBalanceCustom(i);t.resolve(a,s)}async fetchPositionWs(t,e={}){return await this.fetchPositionsWs([t],e)}async fetchPositionsWs(t,e={}){let s;await this.loadMarkets(),t=this.marketSymbols(t,"swap",!0,!0,!0);let i=this.urls.api.ws["ws-api"].future,a=this.requestId(i).toString(),r={};void 0!==t&&1===t.length&&(r.symbol=this.marketId(t[0]));let h=!1;[h,e]=this.handleOptionAndParams(e,"fetchPositionsWs","returnRateLimits",!1),r.returnRateLimits=h,[s,e]=this.handleOptionAndParams(e,"fetchPositionsWs","method","account.position");let n={id:a,method:s,params:this.signParams(this.extend(r,e))},o={method:this.handlePositionsWs},l=await this.watch(i,a,n,a,o);return this.filterByArrayPositions(l,"symbol",t,!1)}handlePositionsWs(t,e){let s=this.safeString(e,"id"),i=this.safeList(e,"result",[]),a=[];for(let t=0;t<i.length;t++){let e=this.parsePositionRisk(i[t]),s=this.safeString(e,"entryPrice");"0"!==s&&"0.0"!==s&&"0.00000000"!==s&&a.push(e)}t.resolve(a,s)}async watchBalance(t={}){let e,s;await this.loadMarkets(),await this.authenticate(t);let i=this.safeString(this.options,"defaultType","spot"),a=this.safeString(t,"type",i);[e,t]=this.handleSubTypeAndParams("watchBalance",void 0,t),[s,t]=this.handleOptionAndParams2(t,"watchBalance","papi","portfolioMargin",!1),this.isLinear(a,e)?a="future":this.isInverse(a,e)&&(a="delivery");let r=a;s&&(r="papi");let h=this.urls.api.ws[r]+"/"+this.options[a].listenKey,n=this.client(h);this.setBalanceCache(n,a,s),this.setPositionsCache(n,a,void 0,s);let o=this.safeDict(this.options,"watchBalance"),l=this.safeBool(o,"fetchBalanceSnapshot",!1),d=this.safeBool(o,"awaitBalanceSnapshot",!0);l&&d&&await n.future(a+":fetchBalanceSnapshot");let c=a+":balance";return await this.watch(h,c,void 0,a)}handleBalance(t,e){let s=this.safeString(this.options,"wallet","wb"),i=Object.keys(t.subscriptions)[0];if(void 0===this.balance[i]&&(this.balance[i]={}),this.balance[i].info=e,"balanceUpdate"===this.safeString(e,"e")){let t=this.safeString(e,"a"),s=this.safeCurrencyCode(t),r=this.account(),h=this.safeString(e,"d");if(s in this.balance[i]){let t=this.balance[i][s].free;"string"!=typeof t&&(t=this.numberToString(t)),r.free=a.Y.stringAdd(t,h)}else r.free=h;this.balance[i][s]=r}else{e=this.safeDict(e,"a",e);let t=this.safeList(e,"B");for(let e=0;e<t.length;e++){let a=t[e],r=this.safeString(a,"a"),h=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(a,"f"),n.used=this.safeString(a,"l"),n.total=this.safeString(a,s),this.balance[i][h]=n}}let r=this.safeInteger(e,"E");this.balance[i].timestamp=r,this.balance[i].datetime=this.iso8601(r),this.balance[i]=this.safeBalance(this.balance[i]),t.resolve(this.balance[i],i+":balance")}getMarketType(t,e,s={}){let i,a;return[i,s]=this.handleMarketTypeAndParams(t,e,s),[a,s]=this.handleSubTypeAndParams(t,e,s),this.isLinear(i,a)?i="future":this.isInverse(i,a)&&(i="delivery"),i}async createOrderWs(t,e,s,i,a,h={}){await this.loadMarkets();let n=this.market(t),o=this.getMarketType("createOrderWs",n,h);if("spot"!==o&&"future"!==o)throw new r.BadRequest(this.id+" createOrderWs only supports spot or swap markets");let l=this.urls.api.ws["ws-api"][o],d=this.requestId(l).toString(),c=this.safeBool2(h,"sor","SOR",!1);h=this.omit(h,"sor","SOR");let m=this.createOrderRequest(t,e,s,i,a,h),u=!1;[u,h]=this.handleOptionAndParams(h,"createOrderWs","returnRateLimits",!1),m.returnRateLimits=u;let p=this.safeBool(h,"test",!1);h=this.omit(h,"test");let f={id:d,method:"order.place",params:this.signParams(this.extend(m,h))};p&&(c?f.method="sor.order.test":f.method="order.test");let w={method:this.handleOrderWs};return await this.watch(l,d,f,d,w)}handleOrderWs(t,e){let s=this.safeString(e,"id"),i=this.safeDict(e,"result",{}),a=this.parseOrder(i);t.resolve(a,s)}handleOrdersWs(t,e){let s=this.safeString(e,"id"),i=this.safeList(e,"result",[]),a=this.parseOrders(i);t.resolve(a,s)}async editOrderWs(t,e,s,i,a,h,n={}){let o;await this.loadMarkets();let l=this.market(e),d=this.getMarketType("editOrderWs",l,n);if("spot"!==d&&"future"!==d)throw new r.BadRequest(this.id+" editOrderWs only supports spot or swap markets");let c=this.urls.api.ws["ws-api"][d],m=this.requestId(c).toString();"spot"===d?o=this.editSpotOrderRequest(t,e,s,i,a,h,n):"future"===d&&(o=this.editContractOrderRequest(t,e,s,i,a,h,n));let u=!1;[u,n]=this.handleOptionAndParams(n,"editOrderWs","returnRateLimits",!1),o.returnRateLimits=u;let p={id:m,method:"future"===d?"order.modify":"order.cancelReplace",params:this.signParams(this.extend(o,n))},f={method:this.handleEditOrderWs};return await this.watch(c,m,p,m,f)}handleEditOrderWs(t,e){let s;let i=this.safeString(e,"id"),a=this.safeDict(e,"result",{}),r=this.safeDict(a,"newOrderResponse");s=void 0!==r?this.parseOrder(r):this.parseOrder(a),t.resolve(s,i)}async cancelOrderWs(t,e,s={}){if(await this.loadMarkets(),void 0===e)throw new r.BadRequest(this.id+" cancelOrderWs requires a symbol");let i=this.market(e),a=this.getMarketType("cancelOrderWs",i,s),h=this.urls.api.ws["ws-api"][a],n=this.requestId(h).toString(),o=!1;[o,s]=this.handleOptionAndParams(s,"cancelOrderWs","returnRateLimits",!1);let l={symbol:this.marketId(e),returnRateLimits:o},d=this.safeString2(s,"origClientOrderId","clientOrderId");void 0!==d?l.origClientOrderId=d:l.orderId=this.parseToInt(t),s=this.omit(s,["origClientOrderId","clientOrderId"]);let c={id:n,method:"order.cancel",params:this.signParams(this.extend(l,s))},m={method:this.handleOrderWs};return await this.watch(h,n,c,n,m)}async cancelAllOrdersWs(t,e={}){await this.loadMarkets();let s=this.market(t),i=this.getMarketType("cancelAllOrdersWs",s,e);if("spot"!==i&&"future"!==i)throw new r.BadRequest(this.id+" cancelAllOrdersWs only supports spot or swap markets");let a=this.urls.api.ws["ws-api"][i],h=this.requestId(a).toString(),n=!1;[n,e]=this.handleOptionAndParams(e,"cancelAllOrdersWs","returnRateLimits",!1);let o={symbol:this.marketId(t),returnRateLimits:n},l={id:h,method:"order.cancel",params:this.signParams(this.extend(o,e))},d={method:this.handleOrdersWs};return await this.watch(a,h,l,h,d)}async fetchOrderWs(t,e,s={}){if(await this.loadMarkets(),void 0===e)throw new r.BadRequest(this.id+" cancelOrderWs requires a symbol");let i=this.market(e),a=this.getMarketType("fetchOrderWs",i,s);if("spot"!==a&&"future"!==a)throw new r.BadRequest(this.id+" fetchOrderWs only supports spot or swap markets");let h=this.urls.api.ws["ws-api"][a],n=this.requestId(h).toString(),o=!1;[o,s]=this.handleOptionAndParams(s,"fetchOrderWs","returnRateLimits",!1);let l={symbol:this.marketId(e),returnRateLimits:o},d=this.safeString2(s,"origClientOrderId","clientOrderId");void 0!==d?l.origClientOrderId=d:l.orderId=this.parseToInt(t);let c={id:n,method:"order.status",params:this.signParams(this.extend(l,s))},m={method:this.handleOrderWs};return await this.watch(h,n,c,n,m)}async fetchOrdersWs(t,e,s,i={}){if(await this.loadMarkets(),void 0===t)throw new r.BadRequest(this.id+" fetchOrdersWs requires a symbol");let a=this.market(t),h=this.getMarketType("fetchOrdersWs",a,i);if("spot"!==h)throw new r.BadRequest(this.id+" fetchOrdersWs only supports spot markets");let n=this.urls.api.ws["ws-api"][h],o=this.requestId(n).toString(),l=!1;[l,i]=this.handleOptionAndParams(i,"fetchOrderWs","returnRateLimits",!1);let d={symbol:this.marketId(t),returnRateLimits:l},c={id:o,method:"allOrders",params:this.signParams(this.extend(d,i))},m={method:this.handleOrdersWs},u=await this.watch(n,o,c,o,m);return this.filterBySymbolSinceLimit(u,t,e,s)}async fetchClosedOrdersWs(t,e,s,i={}){let a=await this.fetchOrdersWs(t,e,s,i),r=[];for(let t=0;t<a.length;t++){let e=a[t];"closed"===e.status&&r.push(e)}return r}async fetchOpenOrdersWs(t,e,s,i={}){await this.loadMarkets();let a=this.market(t),h=this.getMarketType("fetchOpenOrdersWs",a,i);if("spot"!==h&&"future"!==h)throw new r.BadRequest(this.id+" fetchOpenOrdersWs only supports spot or swap markets");let n=this.urls.api.ws["ws-api"][h],o=this.requestId(n).toString(),l=!1;[l,i]=this.handleOptionAndParams(i,"fetchOrderWs","returnRateLimits",!1);let d={returnRateLimits:l};void 0!==t&&(d.symbol=this.marketId(t));let c={id:o,method:"openOrders.status",params:this.signParams(this.extend(d,i))},m={method:this.handleOrdersWs},u=await this.watch(n,o,c,o,m);return this.filterBySymbolSinceLimit(u,t,e,s)}async watchOrders(t,e,s,i={}){let a,r,h,n,o;await this.loadMarkets();let l="orders";void 0!==t&&(l+=":"+(t=(a=this.market(t)).symbol)),[r,i]=this.handleMarketTypeAndParams("watchOrders",a,i),[h,i]=this.handleSubTypeAndParams("watchOrders",a,i),this.isLinear(r,h)?r="future":this.isInverse(r,h)&&(r="delivery"),i=this.extend(i,{type:r,symbol:t}),await this.authenticate(i),[n,i]=this.handleMarginModeAndParams("watchOrders",i);let d=r;("margin"===r||"spot"===r&&void 0!==n)&&(d="spot"),[o,i]=this.handleOptionAndParams2(i,"watchOrders","papi","portfolioMargin",!1),o&&(d="papi");let c=this.urls.api.ws[d]+"/"+this.options[r].listenKey,m=this.client(c);this.setBalanceCache(m,r,o),this.setPositionsCache(m,r,void 0,o);let u=await this.watch(c,l,void 0,r);return this.newUpdates&&(s=u.getLimit(t,s)),this.filterBySymbolSinceLimit(u,t,e,s,!0)}parseWsOrder(t,e){let s,i;let r=this.safeString(t,"x"),h=this.safeString(t,"i"),n=this.safeString(t,"s"),o="ps"in t?"contract":"spot",l=this.safeSymbol(n,void 0,void 0,o),d=this.safeInteger(t,"O"),c=this.safeInteger(t,"T");"NEW"===r||"AMENDMENT"===r||"CANCELED"===r?void 0===d&&(d=c):"TRADE"===r&&(s=c);let m=this.safeString(t,"n");if(void 0!==m&&a.Y.stringGt(m,"0")){let e=this.safeString(t,"N");i={cost:m,currency:this.safeCurrencyCode(e)}}let u=this.safeString(t,"p"),p=this.safeString(t,"q"),f=this.safeStringLower(t,"S"),w=this.safeStringLower(t,"o"),y=this.safeString(t,"z"),k=this.safeString(t,"Z"),g=this.safeString(t,"ap"),b=this.safeString(t,"X"),S=this.parseOrderStatus(b),v=this.safeString(t,"C");(void 0===v||0===v.length)&&(v=this.safeString(t,"c"));let O=this.safeString2(t,"P","sp"),T=this.safeString(t,"f");return"GTX"===T&&(T="PO"),this.safeOrder({info:t,symbol:l,id:h,clientOrderId:v,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:s,lastUpdateTimestamp:c,type:w,timeInForce:T,postOnly:void 0,reduceOnly:this.safeBool(t,"R"),side:f,price:u,stopPrice:O,triggerPrice:O,amount:p,cost:k,average:g,filled:y,remaining:void 0,status:S,fee:i,trades:void 0})}handleOrderUpdate(t,e){"ORDER_TRADE_UPDATE"===this.safeString(e,"e")&&(e=this.safeDict(e,"o",e)),this.handleMyTrade(t,e),this.handleOrder(t,e),this.handleMyLiquidation(t,e)}async watchPositions(t,e,s,i={}){let a,r,h,n;await this.loadMarkets();let o="";t=this.marketSymbols(t),this.isEmpty(t)||(a=this.getMarketFromSymbols(t),o="::"+t.join(",")),[r,i]=this.handleMarketTypeAndParams("watchPositions",a,i),("spot"===r||"margin"===r)&&(r="future"),[h,i]=this.handleSubTypeAndParams("watchPositions",a,i),this.isLinear(r,h)?r="future":this.isInverse(r,h)&&(r="delivery");let l={};l.type=r,l.subType=h,await this.authenticate(this.extend(l,i)),o=r+":positions"+o,[n,i]=this.handleOptionAndParams2(i,"watchPositions","papi","portfolioMargin",!1);let d=r;n&&(d="papi");let c=this.urls.api.ws[d]+"/"+this.options[r].listenKey,m=this.client(c);this.setBalanceCache(m,r,n),this.setPositionsCache(m,r,t,n);let u=this.handleOption("watchPositions","fetchPositionsSnapshot",!0),p=this.handleOption("watchPositions","awaitPositionsSnapshot",!0),f=this.safeValue(this.positions,r);if(u&&p&&void 0===f){let i=await m.future(r+":fetchPositionsSnapshot");return this.filterBySymbolsSinceLimit(i,t,e,s,!0)}let w=await this.watch(c,o,void 0,r);return this.newUpdates?w:this.filterBySymbolsSinceLimit(f,t,e,s,!0)}setPositionsCache(t,e,s,i=!1){if("spot"!==e&&(void 0===this.positions&&(this.positions={}),!(e in this.positions))){if(this.handleOption("watchPositions","fetchPositionsSnapshot",!1)){let s=e+":fetchPositionsSnapshot";s in t.futures||(t.future(s),this.spawn(this.loadPositionsSnapshot,t,s,e,i))}else this.positions[e]=new h.Hk}}async loadPositionsSnapshot(t,e,s,i){let a={type:s};i&&(a.portfolioMargin=!0);let r=await this.fetchPositions(void 0,a);this.positions[s]=new h.Hk;let n=this.positions[s];for(let t=0;t<r.length;t++){let e=r[t];this.safeNumber(e,"contracts",0)>0&&n.append(e)}t.futures[e].resolve(n),t.resolve(n,s+":position")}handlePositions(t,e){let s=Object.keys(t.subscriptions)[0];void 0===this.positions&&(this.positions={}),s in this.positions||(this.positions[s]=new h.Hk);let i=this.positions[s],a=this.safeDict(e,"a",{}),r=this.safeList(a,"P",[]),n=[];for(let t=0;t<r.length;t++){let s=r[t],a=this.parseWsPosition(s),h=this.safeInteger(e,"E");a.timestamp=h,a.datetime=this.iso8601(h),n.push(a),i.append(a)}let o=this.findMessageHashes(t,s+":positions::");for(let e=0;e<o.length;e++){let s=o[e],i=s.split("::")[1].split(","),a=this.filterByArray(n,"symbol",i,!1);this.isEmpty(a)||t.resolve(a,s)}t.resolve(n,s+":positions")}parseWsPosition(t,e){let s=this.safeString(t,"s"),i=this.safeString(t,"pa"),r=a.Y.stringAbs(this.safeString(t,"pa")),h=this.safeStringLower(t,"ps"),n=!0;return"both"!==h||(n=!1,a.Y.stringEq(i,"0")||(h=a.Y.stringLt(i,"0")?"short":"long")),this.safePosition({info:t,id:void 0,symbol:this.safeSymbol(s,void 0,void 0,"contract"),notional:void 0,marginMode:this.safeString(t,"mt"),liquidationPrice:void 0,entryPrice:this.safeNumber(t,"ep"),unrealizedPnl:this.safeNumber(t,"up"),percentage:void 0,contracts:this.parseNumber(r),contractSize:void 0,markPrice:void 0,side:h,hedged:n,timestamp:void 0,datetime:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:void 0,marginRatio:void 0})}async fetchMyTradesWs(t,e,s,i={}){if(await this.loadMarkets(),void 0===t)throw new r.BadRequest(this.id+" fetchMyTradesWs requires a symbol");let a=this.market(t),h=this.getMarketType("fetchMyTradesWs",a,i);if("spot"!==h&&"future"!==h)throw new r.BadRequest(this.id+" fetchMyTradesWs does not support "+h+" markets");let n=this.urls.api.ws["ws-api"][h],o=this.requestId(n).toString(),l=!1;[l,i]=this.handleOptionAndParams(i,"fetchMyTradesWs","returnRateLimits",!1);let d={symbol:this.marketId(t),returnRateLimits:l};if(void 0!==e&&(d.startTime=e),void 0!==s&&(d.limit=s),void 0!==this.safeInteger(i,"fromId")&&void 0!==e)throw new r.BadRequest(this.id+"fetchMyTradesWs does not support fetching by both fromId and since parameters at the same time");let c={id:o,method:"myTrades",params:this.signParams(this.extend(d,i))},m={method:this.handleTradesWs},u=await this.watch(n,o,c,o,m);return this.filterBySymbolSinceLimit(u,t,e,s)}async fetchTradesWs(t,e,s,i={}){if(await this.loadMarkets(),void 0===t)throw new r.BadRequest(this.id+" fetchTradesWs () requires a symbol argument");let a=this.market(t),h=this.getMarketType("fetchTradesWs",a,i);if("spot"!==h&&"future"!==h)throw new r.BadRequest(this.id+" fetchTradesWs does not support "+h+" markets");let n=this.urls.api.ws["ws-api"][h],o=this.requestId(n).toString(),l=!1;[l,i]=this.handleOptionAndParams(i,"fetchTradesWs","returnRateLimits",!1);let d={symbol:this.marketId(t),returnRateLimits:l};void 0!==s&&(d.limit=s);let c={id:o,method:"trades.historical",params:this.extend(d,i)},m={method:this.handleTradesWs},u=await this.watch(n,o,c,o,m);return this.filterBySinceLimit(u,e,s)}handleTradesWs(t,e){let s=this.safeString(e,"id"),i=this.safeList(e,"result",[]),a=this.parseTrades(i);t.resolve(a,s)}async watchMyTrades(t,e,s,i={}){let a,r,h,n;await this.loadMarkets(),void 0!==t&&(t=(r=this.market(t)).symbol),[a,i]=this.handleMarketTypeAndParams("watchMyTrades",r,i),[h,i]=this.handleSubTypeAndParams("watchMyTrades",r,i),this.isLinear(a,h)?a="future":this.isInverse(a,h)&&(a="delivery");let o="myTrades";void 0!==t&&(o+=":"+(t=this.symbol(t)),i=this.extend(i,{type:r.type,symbol:t})),await this.authenticate(i);let l=a;"margin"===a&&(l="spot"),[n,i]=this.handleOptionAndParams2(i,"watchMyTrades","papi","portfolioMargin",!1),n&&(l="papi");let d=this.urls.api.ws[l]+"/"+this.options[a].listenKey,c=this.client(d);this.setBalanceCache(c,a,n),this.setPositionsCache(c,a,void 0,n);let m=await this.watch(d,o,void 0,a);return this.newUpdates&&(s=m.getLimit(t,s)),this.filterBySymbolSinceLimit(m,t,e,s,!0)}handleMyTrade(t,e){let s="myTrades";if("TRADE"===this.safeString(e,"x")){let i=this.parseWsTrade(e),a=this.safeString(i,"order"),r=this.safeDict(i,"fee",{});r=this.extend({},r);let n=this.safeString(i,"symbol");if(void 0!==a&&void 0!==r&&void 0!==n){let t=this.orders;if(void 0!==t){let e=this.safeValue(t.hashmap,n,{}),s=this.safeValue(e,a);if(void 0!==s){let t=this.safeValue(s,"fees"),e=this.safeValue(s,"fee");if(this.isEmpty(t)){if(void 0!==e){if(e.currency===r.currency){let t=this.sum(e.cost,r.cost);s.fee.cost=parseFloat(this.currencyToPrecision(r.currency,t))}else void 0===e.currency?s.fee=r:(s.fees=[e,r],s.fee=void 0)}else s.fee=r}else{let e=!0;for(let i=0;i<t.length;i++){let a=t[i];if(a.currency===r.currency){let t=this.sum(r.cost,a.cost);s.fees[i].cost=parseFloat(this.currencyToPrecision(r.currency,t)),e=!1;break}}e&&s.fees.push(r)}let a=this.safeList(s,"trades",[]);a.push(i),s.trades=a}}}if(void 0===this.myTrades){let t=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new h.Pt(t)}this.myTrades.append(i),t.resolve(this.myTrades,s),t.resolve(this.myTrades,s+":"+n)}}handleOrder(t,e){let s=this.parseWsOrder(e),i=this.safeString(s,"symbol"),a=this.safeString(s,"id");if(void 0!==i){if(void 0===this.orders){let t=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new h.Pt(t)}let e=this.orders,r=this.safeValue(e.hashmap,i,{}),n=this.safeValue(r,a);if(void 0!==n){let t=this.safeValue(n,"fee");void 0!==t&&(s.fee=t);let e=this.safeValue(n,"fees");void 0!==e&&(s.fees=e),s.trades=this.safeValue(n,"trades"),void 0===this.safeInteger(s,"timestamp")&&(s.timestamp=this.safeInteger(n,"timestamp"),s.datetime=this.safeString(n,"datetime"))}e.append(s),t.resolve(e,"orders"),t.resolve(e,"orders:"+i)}}handleAcountUpdate(t,e){this.handleBalance(t,e),this.handlePositions(t,e)}handleWsError(t,e){let s=this.safeString(e,"id"),i=!1,a=this.safeDict(e,"error",{}),r=this.safeInteger(a,"code"),h=this.safeString(a,"msg");try{this.handleErrors(r,h,t.url,void 0,void 0,this.json(a),a,void 0,void 0)}catch(a){i=!0,t.reject(a,s);let e=Object.keys(t.subscriptions);for(let i=0;i<e.length;i++){let r=e[i];s===this.safeString(t.subscriptions[r],"id")&&t.reject(a,r)}}i||t.reject(e,s);let n=this.safeString(a,"code");void 0!==n&&"5"===n[0]&&t.reset(e)}handleMessage(t,e){let s=this.safeString(e,"status");if(void 0!==this.safeValue(e,"error")||void 0!==s&&"200"!==s){this.handleWsError(t,e);return}let i=this.safeString(e,"id"),a=this.safeValue(t.subscriptions,i),r=this.safeValue(a,"method");if(void 0!==r){r.call(this,t,e);return}let h={depthUpdate:this.handleOrderBook,trade:this.handleTrade,aggTrade:this.handleTrade,kline:this.handleOHLCV,markPrice_kline:this.handleOHLCV,indexPrice_kline:this.handleOHLCV,"1hTicker@arr":this.handleTickers,"4hTicker@arr":this.handleTickers,"1dTicker@arr":this.handleTickers,"24hrTicker@arr":this.handleTickers,"24hrMiniTicker@arr":this.handleTickers,"1hTicker":this.handleTickers,"4hTicker":this.handleTickers,"1dTicker":this.handleTickers,"24hrTicker":this.handleTickers,"24hrMiniTicker":this.handleTickers,markPriceUpdate:this.handleTickers,"markPriceUpdate@arr":this.handleTickers,bookTicker:this.handleBidsAsks,outboundAccountPosition:this.handleBalance,balanceUpdate:this.handleBalance,ACCOUNT_UPDATE:this.handleAcountUpdate,executionReport:this.handleOrderUpdate,ORDER_TRADE_UPDATE:this.handleOrderUpdate,forceOrder:this.handleLiquidation},n=this.safeString(e,"e");if(Array.isArray(e)){let t=e[0];n=this.safeString(t,"e")+"@arr"}if(void 0===(r=this.safeValue(h,n))){if(void 0!==this.safeString(e,"id")){this.handleSubscriptionStatus(t,e);return}void 0===n&&"a"in e&&"b"in e&&this.handleBidsAsks(t,e)}else r.call(this,t,e)}}}}]);