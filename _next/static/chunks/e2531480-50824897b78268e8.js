"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[553],{9530:(t,e,i)=>{i.d(e,{A:()=>d});var s=i(4069),r=i(8119),a=i(6077),o=i(3675),n=i(5432),c=i(2982);class d extends s.A{describe(){return this.deepExtend(super.describe(),{id:"coinbase",name:"Coinbase Advanced",countries:["US"],pro:!0,certified:!0,rateLimit:34,version:"v2",userAgent:this.userAgents.chrome,headers:{"CB-VERSION":"2018-05-30"},has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,closeAllPositions:!1,closePosition:!0,createConvertTrade:!0,createDepositAddress:!0,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketBuyOrderWithCost:!0,createMarketOrderWithCost:!1,createMarketSellOrder:!0,createMarketSellOrderWithCost:!1,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,deposit:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchConvertQuote:!0,fetchConvertTrade:!0,fetchConvertTradeHistory:!1,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:"emulated",fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDepositMethodId:!0,fetchDepositMethodIds:!0,fetchDeposits:!0,fetchDepositsWithdrawals:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchL2OrderBook:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyBuys:!0,fetchMySells:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:"emulated",fetchTradingFees:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg",api:{rest:"https://api.coinbase.com"},www:"https://www.coinbase.com",doc:["https://developers.coinbase.com/api/v2","https://docs.cloud.coinbase.com/advanced-trade/docs/welcome"],fees:["https://support.coinbase.com/customer/portal/articles/2109597-buy-sell-bank-transfer-fees","https://www.coinbase.com/advanced-fees"],referral:"https://www.coinbase.com/join/58cbe25a355148797479dbd2"},requiredCredentials:{apiKey:!0,secret:!0},api:{v2:{public:{get:{currencies:10.6,"currencies/crypto":10.6,time:10.6,"exchange-rates":10.6,"users/{user_id}":10.6,"prices/{symbol}/buy":10.6,"prices/{symbol}/sell":10.6,"prices/{symbol}/spot":10.6}},private:{get:{accounts:10.6,"accounts/{account_id}":10.6,"accounts/{account_id}/addresses":10.6,"accounts/{account_id}/addresses/{address_id}":10.6,"accounts/{account_id}/addresses/{address_id}/transactions":10.6,"accounts/{account_id}/transactions":10.6,"accounts/{account_id}/transactions/{transaction_id}":10.6,"accounts/{account_id}/buys":10.6,"accounts/{account_id}/buys/{buy_id}":10.6,"accounts/{account_id}/sells":10.6,"accounts/{account_id}/sells/{sell_id}":10.6,"accounts/{account_id}/deposits":10.6,"accounts/{account_id}/deposits/{deposit_id}":10.6,"accounts/{account_id}/withdrawals":10.6,"accounts/{account_id}/withdrawals/{withdrawal_id}":10.6,"payment-methods":10.6,"payment-methods/{payment_method_id}":10.6,user:10.6,"user/auth":10.6},post:{accounts:10.6,"accounts/{account_id}/primary":10.6,"accounts/{account_id}/addresses":10.6,"accounts/{account_id}/transactions":10.6,"accounts/{account_id}/transactions/{transaction_id}/complete":10.6,"accounts/{account_id}/transactions/{transaction_id}/resend":10.6,"accounts/{account_id}/buys":10.6,"accounts/{account_id}/buys/{buy_id}/commit":10.6,"accounts/{account_id}/sells":10.6,"accounts/{account_id}/sells/{sell_id}/commit":10.6,"accounts/{account_id}/deposits":10.6,"accounts/{account_id}/deposits/{deposit_id}/commit":10.6,"accounts/{account_id}/withdrawals":10.6,"accounts/{account_id}/withdrawals/{withdrawal_id}/commit":10.6},put:{"accounts/{account_id}":10.6,user:10.6},delete:{"accounts/{id}":10.6,"accounts/{account_id}/transactions/{transaction_id}":10.6}}},v3:{public:{get:{"brokerage/time":3,"brokerage/market/product_book":3,"brokerage/market/products":3,"brokerage/market/products/{product_id}":3,"brokerage/market/products/{product_id}/candles":3,"brokerage/market/products/{product_id}/ticker":3}},private:{get:{"brokerage/accounts":1,"brokerage/accounts/{account_uuid}":1,"brokerage/orders/historical/batch":1,"brokerage/orders/historical/fills":1,"brokerage/orders/historical/{order_id}":1,"brokerage/products":3,"brokerage/products/{product_id}":3,"brokerage/products/{product_id}/candles":3,"brokerage/products/{product_id}/ticker":3,"brokerage/best_bid_ask":3,"brokerage/product_book":3,"brokerage/transaction_summary":3,"brokerage/portfolios":1,"brokerage/portfolios/{portfolio_uuid}":1,"brokerage/convert/trade/{trade_id}":1,"brokerage/cfm/balance_summary":1,"brokerage/cfm/positions":1,"brokerage/cfm/positions/{product_id}":1,"brokerage/cfm/sweeps":1,"brokerage/intx/portfolio/{portfolio_uuid}":1,"brokerage/intx/positions/{portfolio_uuid}":1,"brokerage/intx/positions/{portfolio_uuid}/{symbol}":1,"brokerage/payment_methods":1,"brokerage/payment_methods/{payment_method_id}":1},post:{"brokerage/orders":1,"brokerage/orders/batch_cancel":1,"brokerage/orders/edit":1,"brokerage/orders/edit_preview":1,"brokerage/orders/preview":1,"brokerage/portfolios":1,"brokerage/portfolios/move_funds":1,"brokerage/convert/quote":1,"brokerage/convert/trade/{trade_id}":1,"brokerage/cfm/sweeps/schedule":1,"brokerage/intx/allocate":1,"brokerage/orders/close_position":1},put:{"brokerage/portfolios/{portfolio_uuid}":1},delete:{"brokerage/portfolios/{portfolio_uuid}":1,"brokerage/cfm/sweeps":1}}}},fees:{trading:{taker:this.parseNumber("0.012"),maker:this.parseNumber("0.006"),tierBased:!0,percentage:!0,tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.006")],[this.parseNumber("10000"),this.parseNumber("0.004")],[this.parseNumber("50000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("15000000"),this.parseNumber("0.0016")],[this.parseNumber("75000000"),this.parseNumber("0.0012")],[this.parseNumber("250000000"),this.parseNumber("0.0008")],[this.parseNumber("400000000"),this.parseNumber("0.0005")]],maker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("10000"),this.parseNumber("0.0025")],[this.parseNumber("50000"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.001")],[this.parseNumber("1000000"),this.parseNumber("0.0008")],[this.parseNumber("15000000"),this.parseNumber("0.0006")],[this.parseNumber("75000000"),this.parseNumber("0.0003")],[this.parseNumber("250000000"),this.parseNumber("0.0")],[this.parseNumber("400000000"),this.parseNumber("0.0")]]}}},precisionMode:o.kb,exceptions:{exact:{two_factor_required:r.AuthenticationError,param_required:r.ExchangeError,validation_error:r.ExchangeError,invalid_request:r.ExchangeError,personal_details_required:r.AuthenticationError,identity_verification_required:r.AuthenticationError,jumio_verification_required:r.AuthenticationError,jumio_face_match_verification_required:r.AuthenticationError,unverified_email:r.AuthenticationError,authentication_error:r.AuthenticationError,invalid_authentication_method:r.AuthenticationError,invalid_token:r.AuthenticationError,revoked_token:r.AuthenticationError,expired_token:r.AuthenticationError,invalid_scope:r.AuthenticationError,not_found:r.ExchangeError,rate_limit_exceeded:r.RateLimitExceeded,internal_server_error:r.ExchangeError,UNSUPPORTED_ORDER_CONFIGURATION:r.BadRequest,INSUFFICIENT_FUND:r.BadRequest,PERMISSION_DENIED:r.PermissionDenied,INVALID_ARGUMENT:r.BadRequest},broad:{"request timestamp expired":r.InvalidNonce,"order with this orderID was not found":r.OrderNotFound}},timeframes:{"1m":"ONE_MINUTE","5m":"FIVE_MINUTE","15m":"FIFTEEN_MINUTE","30m":"THIRTY_MINUTE","1h":"ONE_HOUR","2h":"TWO_HOUR","6h":"SIX_HOUR","1d":"ONE_DAY"},commonCurrencies:{CGLD:"CELO"},options:{usePrivate:!1,brokerId:"ccxt",stablePairs:["BUSD-USD","CBETH-ETH","DAI-USD","GUSD-USD","GYEN-USD","PAX-USD","PAX-USDT","USDC-EUR","USDC-GBP","USDT-EUR","USDT-GBP","USDT-USD","USDT-USDC","WBTC-BTC"],fetchCurrencies:{expires:5e3},accounts:["wallet","fiat"],v3Accounts:["ACCOUNT_TYPE_CRYPTO","ACCOUNT_TYPE_FIAT"],networks:{ERC20:"ethereum",XLM:"stellar"},createMarketBuyOrderRequiresPrice:!0,advanced:!0,fetchMarkets:"fetchMarketsV3",timeDifference:0,adjustForTimeDifference:!1,fetchTicker:"fetchTickerV3",fetchTickers:"fetchTickersV3",fetchAccounts:"fetchAccountsV3",fetchBalance:"v2PrivateGetAccounts",fetchTime:"v2PublicGetTime",user_native_currency:"USD"},features:{default:{sandbox:!1,createOrder:{marginMode:!0,triggerPrice:!0,triggerPriceType:void 0,triggerDirection:!0,stopLossPrice:!0,takeProfitPrice:!0,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!0},hedged:!1,trailing:!1,leverage:!0,marketBuyByCost:!0,marketBuyRequiresPrice:!0,selfTradePrevention:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:3e3,daysBack:void 0,untilDays:1e4},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:void 0,daysBack:void 0,untilDays:1e4,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:void 0,daysBack:void 0,daysBackCanceled:void 0,untilDays:1e4,trigger:!1,trailing:!1},fetchOHLCV:{limit:350}},spot:{extends:"default"},swap:{linear:{extends:"default"},inverse:void 0},future:{linear:{extends:"default"},inverse:void 0}}})}async fetchTime(t={}){let e;let i=this.safeString(this.options,"fetchTime","v2PublicGetTime"),s=this.safeString(t,"method",i);return t=this.omit(t,"method"),"v2PublicGetTime"===s?(e=await this.v2PublicGetTime(t),e=this.safeDict(e,"data",{})):e=await this.v3PublicGetBrokerageTime(t),this.safeTimestamp2(e,"epoch","epochSeconds")}async fetchAccounts(t={}){return"fetchAccountsV3"===this.safeString(this.options,"fetchAccounts","fetchAccountsV3")?await this.fetchAccountsV3(t):await this.fetchAccountsV2(t)}async fetchAccountsV2(t={}){await this.loadMarkets();let e=!1;if([e,t]=this.handleOptionAndParams(t,"fetchAccounts","paginate"),e)return await this.fetchPaginatedCallCursor("fetchAccounts",void 0,void 0,void 0,t,"next_starting_after","starting_after",void 0,100);let i=await this.v2PrivateGetAccounts(this.extend({limit:100},t)),s=this.safeList(i,"data",[]),r=this.safeDict(i,"pagination",{}),a=this.safeString(r,"next_starting_after"),o=this.safeList(i,"data",[]),n=o.length-1,c=this.safeDict(o,n);return void 0!==a&&""!==a&&(c.next_starting_after=a,o[n]=c),this.parseAccounts(s,t)}async fetchAccountsV3(t={}){await this.loadMarkets();let e=!1;if([e,t]=this.handleOptionAndParams(t,"fetchAccounts","paginate"),e)return await this.fetchPaginatedCallCursor("fetchAccounts",void 0,void 0,void 0,t,"cursor","cursor",void 0,250);let i=await this.v3PrivateGetBrokerageAccounts(this.extend({limit:250},t)),s=this.safeList(i,"accounts",[]),r=s.length-1,a=this.safeDict(s,r),o=this.safeString(i,"cursor");return void 0!==o&&""!==o&&(a.cursor=o,s[r]=a),this.parseAccounts(s,t)}async fetchPortfolios(t={}){let e=await this.v3PrivateGetBrokeragePortfolios(t),i=this.safeList(e,"portfolios",[]),s=[];for(let t=0;t<i.length;t++){let e=i[t];s.push({id:this.safeString(e,"uuid"),type:this.safeString(e,"type"),code:void 0,info:e})}return s}parseAccount(t){let e=this.safeBool(t,"active"),i=this.safeString(t,"currency"),s=this.safeDict(t,"currency",{}),r=this.safeString(s,"code",i),a=this.safeString(t,"name"),o=this.safeString(t,"type"),n=a.split(" ");return{id:this.safeString2(t,"id","uuid"),type:void 0!==e?this.safeStringLower(n,1):o,code:this.safeCurrencyCode(r),info:t}}async createDepositAddress(t,e={}){let i=this.safeString(e,"account_id");if(e=this.omit(e,"account_id"),void 0===i){await this.loadAccounts();for(let e=0;e<this.accounts.length;e++){let s=this.accounts[e];if(s.code===t&&"wallet"===s.type){i=s.id;break}}}if(void 0===i)throw new r.ExchangeError(this.id+" createDepositAddress() could not find the account with matching currency code, specify an `account_id` extra param");let s={account_id:i},a=await this.v2PrivatePostAccountsAccountIdAddresses(this.extend(s,e)),o=this.safeDict(a,"data",{});return{currency:t,tag:this.safeString(o,"destination_tag"),address:this.safeString(o,"address"),info:a}}async fetchMySells(t,e,i,s={}){let r=this.prepareAccountRequest(i,s);await this.loadMarkets();let a=this.omit(s,["account_id","accountId"]),o=await this.v2PrivateGetAccountsAccountIdSells(this.extend(r,a));return this.parseTrades(o.data,void 0,e,i)}async fetchMyBuys(t,e,i,s={}){let r=this.prepareAccountRequest(i,s);await this.loadMarkets();let a=this.omit(s,["account_id","accountId"]),o=await this.v2PrivateGetAccountsAccountIdBuys(this.extend(r,a));return this.parseTrades(o.data,void 0,e,i)}async fetchTransactionsWithMethod(t,e,i,s,r={}){let a;[a,r]=await this.prepareAccountRequestWithCurrencyCode(e,s,r),await this.loadMarkets();let o=await this[t](this.extend(a,r));return this.parseTransactions(o.data,void 0,i,s)}async fetchWithdrawals(t,e,i,s={}){let r;if([r,s]=this.handleOptionAndParams(s,"fetchWithdrawals","currencyType"),"crypto"===r){let r=await this.fetchTransactionsWithMethod("v2PrivateGetAccountsAccountIdTransactions",t,e,i,s);return this.filterByArray(r,"type","withdrawal",!1)}return await this.fetchTransactionsWithMethod("v2PrivateGetAccountsAccountIdWithdrawals",t,e,i,s)}async fetchDeposits(t,e,i,s={}){let r;if([r,s]=this.handleOptionAndParams(s,"fetchWithdrawals","currencyType"),"crypto"===r){let r=await this.fetchTransactionsWithMethod("v2PrivateGetAccountsAccountIdTransactions",t,e,i,s);return this.filterByArray(r,"type","deposit",!1)}return await this.fetchTransactionsWithMethod("v2PrivateGetAccountsAccountIdDeposits",t,e,i,s)}async fetchDepositsWithdrawals(t,e,i,s={}){await this.loadMarkets();let r=await this.fetchTransactionsWithMethod("v2PrivateGetAccountsAccountIdTransactions",t,e,i,s);return this.filterByArray(r,"type",["deposit","withdrawal"],!1)}parseTransactionStatus(t){return this.safeString({created:"pending",completed:"ok",canceled:"canceled"},t,t)}parseTransaction(t,e){let i,s;let r=this.safeString(t,"type"),o=this.safeDict(t,"network",{});"send"===r?(i=this.safeDict(o,"transaction_amount"),s=this.safeDict(o,"transaction_fee",{})):(i=this.safeDict(t,"subtotal"),s=this.safeDict(t,"fee",{})),void 0===i&&(i=this.safeDict(t,"amount"));let n=this.safeString(i,"amount"),c=a.Y.stringAbs(n),d=this.parseTransactionStatus(this.safeString(t,"status"));void 0===d&&(d=this.safeBool(t,"committed")?"ok":"pending");let h=this.safeString(t,"id"),u=this.safeString(i,"currency"),f=this.safeString(s,"currency"),l=this.safeString(t,"created_at"),p=this.safeString(t,"resource");!this.inArray(p,["deposit","withdrawal"])&&(a.Y.stringGt(n,"0")?p="deposit":a.Y.stringLt(n,"0")&&(p="withdrawal"));let m=this.safeDict(t,"to"),g=this.safeString(m,"address"),_=this.safeString(o,"network_name");return{info:t,id:h,txid:this.safeString(o,"hash",h),timestamp:this.parse8601(l),datetime:l,network:this.networkIdToCode(_),address:g,addressTo:g,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:p,amount:this.parseNumber(c),currency:this.safeCurrencyCode(u,e),status:d,updated:this.parse8601(this.safeString(t,"updated_at")),fee:{cost:this.safeNumber(s,"amount"),currency:this.safeCurrencyCode(f)}}}parseTrade(t,e){let i,s,r,o;let n=this.safeDict(t,"total",{}),c=this.safeDict(t,"amount",{}),d=this.safeDict(t,"subtotal",{}),h=this.safeDict(t,"fee",{}),u=this.safeString(t,"product_id");if(void 0!==(e=this.safeMarket(u,e,"-")))i=e.symbol;else{let t=this.safeString(c,"currency"),e=this.safeString(n,"currency");void 0!==t&&void 0!==e&&(i=this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(e))}let f=this.safeBool(t,"size_in_quote"),l=this.safeString(t,"price"),p=this.safeString(t,"size");f&&(s=p,p=a.Y.stringDiv(p,l));let m=this.safeString(t,"commission"),g=this.safeString(c,"amount",p),_=this.safeString(d,"amount",s);o=void 0!==(r=void 0!==_&&void 0!==g?a.Y.stringDiv(_,g):l)&&void 0!==g?a.Y.stringMul(r,g):_;let v=this.safeString(h,"currency"),y=this.safeNumber(h,"amount",this.parseNumber(m));void 0===v&&void 0!==e&&void 0!==y&&(v=e.quote);let k=this.safeStringN(t,["created_at","trade_time","time"]),b=this.safeStringLower2(t,"resource","side"),w=this.safeStringLower(t,"liquidity_indicator");return this.safeTrade({info:t,id:this.safeString2(t,"id","trade_id"),order:this.safeString(t,"order_id"),timestamp:this.parse8601(k),datetime:k,symbol:i,type:void 0,side:"unknown_order_side"===b?void 0:b,takerOrMaker:"unknown_liquidity_indicator"===w?void 0:w,price:r,amount:g,cost:o,fee:{cost:y,currency:this.safeCurrencyCode(v)}})}async fetchMarkets(t={}){return(this.options.adjustForTimeDifference&&await this.loadTimeDifference(),"fetchMarketsV3"===this.safeString(this.options,"fetchMarkets","fetchMarketsV3"))?await this.fetchMarketsV3(t):await this.fetchMarketsV2(t)}async fetchMarketsV2(t={}){let e=await this.fetchCurrenciesFromCache(t),i=this.safeDict(e,"currencies",{}),s=this.safeDict(e,"exchangeRates",{}),r=this.safeList(i,"data",[]),a=this.indexBy(r,"id"),o=Object.keys(this.safeDict(this.safeDict(s,"data",{}),"rates",{})),n=[];for(let t=0;t<o.length;t++){let e=o[t],i=this.safeCurrencyCode(e);if("crypto"==(e in a?"fiat":"crypto"))for(let t=0;t<r.length;t++){let s=r[t],a=this.safeString(s,"id"),o=this.safeCurrencyCode(a);n.push({id:e+"-"+a,symbol:i+"/"+o,base:i,quote:o,settle:void 0,baseId:e,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"min_size"),max:void 0}},info:s})}}return n}async fetchMarketsV3(t={}){let e,i=!1;[i,t]=this.handleOptionAndParams(t,"fetchMarkets","usePrivate",!1);let s=[];i?s.push(this.v3PrivateGetBrokerageProducts(t)):s.push(this.v3PublicGetBrokerageMarketProducts(t)),this.checkRequiredCredentials(!1)&&s.push(this.v3PrivateGetBrokerageTransactionSummary(t));let r=[];try{r=[this.v3PublicGetBrokerageMarketProducts(this.extend(t,{product_type:"FUTURE"})),this.v3PublicGetBrokerageMarketProducts(this.extend(t,{product_type:"FUTURE",contract_expiry_type:"PERPETUAL"}))],this.checkRequiredCredentials(!1)&&(r.push(this.extend(t,{product_type:"FUTURE"})),r.push(this.extend(t,{product_type:"FUTURE",contract_expiry_type:"PERPETUAL"})))}catch(t){r=[]}let a=await Promise.all(s);try{e=await Promise.all(r)}catch(t){e=[]}let o=this.safeDict(a,0,{}),n=this.safeDict(a,1,{}),c=this.safeDict(e,0,{}),d=this.safeDict(e,1,{}),h=this.safeDict(e,2,{}),u=this.safeDict(e,3,{}),f=this.safeDict(n,"fee_tier",{}),l=this.safeDict(h,"fee_tier",{}),p=this.safeDict(u,"fee_tier",{}),m=this.safeList(o,"products",[]),g=[];for(let t=0;t<m.length;t++)g.push(this.parseSpotMarket(m[t],f));let _=this.safeList(c,"products",[]);for(let t=0;t<_.length;t++)g.push(this.parseContractMarket(_[t],l));let v=this.safeList(d,"products",[]);for(let t=0;t<v.length;t++)g.push(this.parseContractMarket(v[t],p));return g}parseSpotMarket(t,e){let i=this.safeString(t,"product_id"),s=this.safeString(t,"base_currency_id"),r=this.safeString(t,"quote_currency_id"),a=this.safeCurrencyCode(s),o=this.safeCurrencyCode(r),n=this.safeStringLower(t,"product_type"),c=this.safeBool(t,"trading_disabled"),d=this.safeList(this.options,"stablePairs",[]),h=this.safeNumber(this.fees.trading,"taker"),u=this.safeNumber(this.fees.trading,"maker"),f=this.inArray(i,d)?1e-5:this.safeNumber(e,"taker_fee_rate",h),l=this.inArray(i,d)?0:this.safeNumber(e,"maker_fee_rate",u);return this.safeMarketStructure({id:i,symbol:a+"/"+o,base:a,quote:o,settle:void 0,baseId:s,quoteId:r,settleId:void 0,type:n,spot:"spot"===n,margin:void 0,swap:!1,future:!1,option:!1,active:!c,contract:!1,linear:void 0,inverse:void 0,taker:f,maker:l,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"base_increment"),price:this.safeNumber2(t,"price_increment","quote_increment")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"base_min_size"),max:this.safeNumber(t,"base_max_size")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"quote_min_size"),max:this.safeNumber(t,"quote_max_size")}},created:void 0,info:t})}parseContractMarket(t,e){let i;let s=this.safeString(t,"product_id"),r=this.safeDict(t,"future_product_details",{}),a=this.safeString(r,"contract_expiry_type"),o=this.safeNumber(r,"contract_size"),n=this.safeString(r,"contract_expiry"),c=this.parse8601(n),d=this.iso8601(c),h="PERPETUAL"===a,u=this.safeString(r,"contract_root_unit"),f=this.safeString(t,"quote_currency_id"),l=this.safeCurrencyCode(u),p=this.safeCurrencyCode(f),m=this.safeBool(t,"is_disabled"),g=l+"/"+p;h?(i="swap",g=g+":"+p):(i="future",g=g+":"+p+"-"+this.yymmdd(c));let _=this.safeNumber(e,"taker_fee_rate"),v=this.safeNumber(e,"maker_fee_rate"),y=_||this.parseNumber("0.06"),k=v||this.parseNumber("0.04");return this.safeMarketStructure({id:s,symbol:g,base:l,quote:p,settle:p,baseId:u,quoteId:f,settleId:f,type:i,spot:!1,margin:!1,swap:h,future:!h,option:!1,active:!m,contract:!0,linear:!0,inverse:!1,taker:y,maker:k,contractSize:o,expiry:c,expiryDatetime:d,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"base_increment"),price:this.safeNumber2(t,"price_increment","quote_increment")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"base_min_size"),max:this.safeNumber(t,"base_max_size")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"quote_min_size"),max:this.safeNumber(t,"quote_max_size")}},created:void 0,info:t})}async fetchCurrenciesFromCache(t={}){let e=this.safeDict(this.options,"fetchCurrencies",{}),i=this.safeInteger(e,"timestamp"),s=this.safeInteger(e,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){let i=[this.v2PublicGetCurrencies(t),this.v2PublicGetCurrenciesCrypto(t)],s=await Promise.all(i),a=this.safeDict(s,0,{}),o=this.safeDict(s,1,{}),n=this.safeList(a,"data",[]),c=this.safeList(o,"data",[]),d=await this.v2PublicGetExchangeRates(t);this.options.fetchCurrencies=this.extend(e,{currencies:this.arrayConcat(n,c),exchangeRates:d,timestamp:r})}return this.safeDict(this.options,"fetchCurrencies",{})}async fetchCurrencies(t={}){let e=await this.fetchCurrenciesFromCache(t),i=this.safeList(e,"currencies",[]),s={},r={},a={};for(let t=0;t<i.length;t++){let e=i[t],o=this.safeString(e,"asset_id"),n=this.safeString2(e,"id","code"),c=this.safeCurrencyCode(n),d=this.safeString(e,"name");if(this.options.networks[c]=d.toLowerCase(),this.options.networksById[c]=d.toLowerCase(),s[c]={info:e,id:n,code:c,type:void 0!==o?"crypto":"fiat",name:this.safeString(e,"name"),active:!0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{amount:{min:this.safeNumber(e,"min_size"),max:void 0},withdraw:{min:void 0,max:void 0}}},void 0!==o){let t=d.toLowerCase();r[c]=t,a[t]=c}}return this.options.networks=this.extend(r,this.options.networks),this.options.networksById=this.extend(a,this.options.networksById),s}async fetchTickers(t,e={}){return"fetchTickersV3"===this.safeString(this.options,"fetchTickers","fetchTickersV3")?await this.fetchTickersV3(t,e):await this.fetchTickersV2(t,e)}async fetchTickersV2(t,e={}){await this.loadMarkets(),t=this.marketSymbols(t);let i=await this.v2PublicGetExchangeRates(this.extend({},e)),s=this.safeDict(i,"data",{}),r=this.safeDict(s,"rates",{}),a=this.safeString(s,"currency"),o={},n=Object.keys(r);for(let t=0;t<n.length;t++){let e=n[t],i=e+"-"+a,s=this.safeMarket(i,void 0,"-");o[s.symbol]=this.parseTicker(r[e],s)}return this.filterByArrayTickers(o,"symbol",t)}async fetchTickersV3(t,e={}){let i,s;await this.loadMarkets();let r={};void 0!==(t=this.marketSymbols(t))&&(r.product_ids=this.marketIds(t)),[i,e]=this.handleMarketTypeAndParams("fetchTickers",this.getMarketFromSymbols(t),e,"default"),void 0!==i&&"default"!==i&&(r.product_type="swap"===i?"FUTURE":"SPOT");let a=!1;[a,e]=this.handleOptionAndParams(e,"fetchTickers","usePrivate",!1),s=a?await this.v3PrivateGetBrokerageProducts(this.extend(r,e)):await this.v3PublicGetBrokerageMarketProducts(this.extend(r,e));let o=this.safeList(s,"products",[]),n={};for(let t=0;t<o.length;t++){let e=o[t],i=this.safeString(e,"product_id"),s=this.safeMarket(i,void 0,"-");n[s.symbol]=this.parseTicker(e,s)}return this.filterByArrayTickers(n,"symbol",t)}async fetchTicker(t,e={}){return"fetchTickerV3"===this.safeString(this.options,"fetchTicker","fetchTickerV3")?await this.fetchTickerV3(t,e):await this.fetchTickerV2(t,e)}async fetchTickerV2(t,e={}){await this.loadMarkets();let i=this.market(t),s=this.extend({symbol:i.id},e),r=await this.v2PublicGetPricesSymbolSpot(s),a=await this.v2PublicGetPricesSymbolBuy(s),o=await this.v2PublicGetPricesSymbolSell(s),n=this.safeDict(r,"data",{}),c=this.safeDict(a,"data",{}),d=this.safeDict(o,"data",{}),h={bid:this.safeNumber(d,"amount"),ask:this.safeNumber(c,"amount"),price:this.safeNumber(n,"amount")};return this.parseTicker(h,i)}async fetchTickerV3(t,e={}){let i;await this.loadMarkets();let s=this.market(t),r={product_id:s.id,limit:1},a=!1;[a,e]=this.handleOptionAndParams(e,"fetchTicker","usePrivate",!1),i=a?await this.v3PrivateGetBrokerageProductsProductIdTicker(this.extend(r,e)):await this.v3PublicGetBrokerageMarketProductsProductIdTicker(this.extend(r,e));let o=this.safeList(i,"trades",[]),n=this.parseTicker(o[0],s);return n.bid=this.safeNumber(i,"best_bid"),n.ask=this.safeNumber(i,"best_ask"),n}parseTicker(t,e){let i,s,r=this.safeNumber(t,"bid"),a=this.safeNumber(t,"ask");if("bids"in t){let e=this.safeList(t,"bids",[]),o=this.safeList(t,"asks",[]);r=this.safeNumber(e[0],"price"),i=this.safeNumber(e[0],"size"),a=this.safeNumber(o[0],"price"),s=this.safeNumber(o[0],"size")}let o=this.safeString(t,"product_id"),n=this.safeNumber(t,"price"),c=this.safeString(t,"time");return this.safeTicker({symbol:this.safeSymbol(o,e),timestamp:this.parse8601(c),datetime:c,bid:r,ask:a,last:n,high:void 0,low:void 0,bidVolume:i,askVolume:s,vwap:void 0,open:void 0,close:n,previousClose:void 0,change:void 0,percentage:this.safeNumber(t,"price_percentage_change_24h"),average:void 0,baseVolume:void 0,quoteVolume:void 0,info:t},e)}parseCustomBalance(t,e={}){let i=this.safeList2(t,"data","accounts",[]),s=this.safeList(e,"type",this.options.accounts),r=this.safeList(e,"type",this.options.v3Accounts),o={info:t};for(let t=0;t<i.length;t++){let e=i[t],n=this.safeString(e,"type");if(this.inArray(n,s)){let t=this.safeDict(e,"balance");if(void 0!==t){let e=this.safeString(t,"currency"),i=this.safeCurrencyCode(e),s=this.safeString(t,"amount"),r=this.safeDict(o,i);void 0===r?((r=this.account()).free=s,r.total=s):(r.free=a.Y.stringAdd(r.free,s),r.total=a.Y.stringAdd(r.total,s)),o[i]=r}}else if(this.inArray(n,r)){let t=this.safeDict(e,"available_balance"),i=this.safeDict(e,"hold");if(void 0!==t&&void 0!==i){let e=this.safeString(t,"currency"),s=this.safeCurrencyCode(e),r=this.safeString(i,"value"),n=this.safeString(t,"value"),c=a.Y.stringAdd(r,n),d=this.safeDict(o,s);void 0===d?((d=this.account()).free=n,d.used=r,d.total=c):(d.free=a.Y.stringAdd(d.free,n),d.used=a.Y.stringAdd(d.used,r),d.total=a.Y.stringAdd(d.total,c)),o[s]=d}}}return this.safeBalance(o)}async fetchBalance(t={}){let e,i;await this.loadMarkets();let s={},r=this.safeBool(t,"v3",!1);t=this.omit(t,["v3"]),[i,t]=this.handleMarketTypeAndParams("fetchBalance",void 0,t);let a=this.safeString(this.options,"fetchBalance","v3PrivateGetBrokerageAccounts");return"future"===i?e=await this.v3PrivateGetBrokerageCfmBalanceSummary(this.extend(s,t)):r||"v3PrivateGetBrokerageAccounts"===a?(s.limit=250,e=await this.v3PrivateGetBrokerageAccounts(this.extend(s,t))):(s.limit=250,e=await this.v2PrivateGetAccounts(this.extend(s,t))),t.type=i,this.parseCustomBalance(e,t)}async fetchLedger(t,e,i,s={}){let r,a;await this.loadMarkets();let o=!1;if([o,s]=this.handleOptionAndParams(s,"fetchLedger","paginate"),o)return await this.fetchPaginatedCallCursor("fetchLedger",t,e,i,s,"next_starting_after","starting_after",void 0,100);void 0!==t&&(r=this.currency(t)),[a,s]=await this.prepareAccountRequestWithCurrencyCode(t,i,s);let n=await this.v2PrivateGetAccountsAccountIdTransactions(this.extend(a,s)),c=this.parseLedger(n.data,r,e,i),d=c.length;if(0===d)return c;let h=d-1,u=this.safeDict(c,h),f=this.safeDict(n,"pagination",{}),l=this.safeString(f,"next_starting_after");return void 0!==l&&""!==l&&(u.info.next_starting_after=l,c[h]=u),c}parseLedgerEntryStatus(t){return this.safeString({completed:"ok"},t,t)}parseLedgerEntryType(t){return this.safeString({buy:"trade",sell:"trade",fiat_deposit:"transaction",fiat_withdrawal:"transaction",exchange_deposit:"transaction",exchange_withdrawal:"transaction",send:"transaction",pro_deposit:"transaction",pro_withdrawal:"transaction"},t,t)}parseLedgerEntry(t,e){let i,s,r;let o=this.safeDict(t,"amount",{}),n=this.safeString(o,"amount");a.Y.stringLt(n,"0")?(i="out",n=a.Y.stringNeg(n)):i="in";let c=this.safeString(o,"currency"),d=this.safeCurrencyCode(c,e);e=this.safeCurrency(c,e);let h=this.safeDict(t,"network",{}),u=this.safeDict(h,"transaction_fee");if(void 0!==u){let t=this.safeString(u,"currency"),i=this.safeCurrencyCode(t,e);s={cost:this.safeNumber(u,"amount"),currency:i}}let f=this.parse8601(this.safeString(t,"created_at")),l=this.safeString(t,"id"),p=this.parseLedgerEntryType(this.safeString(t,"type")),m=this.parseLedgerEntryStatus(this.safeString(t,"status")),g=this.safeString(t,"resource_path");if(void 0!==g){let t=g.split("/");t.length>3&&(r=t[3])}return this.safeLedgerEntry({info:t,id:l,timestamp:f,datetime:this.iso8601(f),direction:i,account:r,referenceId:void 0,referenceAccount:void 0,type:p,currency:d,amount:this.parseNumber(n),before:void 0,after:void 0,status:m,fee:s},e)}async findAccountId(t,e={}){await this.loadMarkets(),await this.loadAccounts(!1,e);for(let e=0;e<this.accounts.length;e++){let i=this.accounts[e];if(i.code===t)return i.id}}prepareAccountRequest(t,e={}){let i=this.safeString2(e,"account_id","accountId");if(void 0===i)throw new r.ArgumentsRequired(this.id+" prepareAccountRequest() method requires an account_id (or accountId) parameter");let s={account_id:i};return void 0!==t&&(s.limit=t),s}async prepareAccountRequestWithCurrencyCode(t,e,i={}){let s=this.safeString2(i,"account_id","accountId");if(i=this.omit(i,["account_id","accountId"]),void 0===s){if(void 0===t)throw new r.ArgumentsRequired(this.id+" prepareAccountRequestWithCurrencyCode() method requires an account_id (or accountId) parameter OR a currency code argument");if(void 0===(s=await this.findAccountId(t,i)))throw new r.ExchangeError(this.id+" prepareAccountRequestWithCurrencyCode() could not find account id for "+t)}let a={account_id:s};return void 0!==e&&(a.limit=e),[a,i]}async createMarketBuyOrderWithCost(t,e,i={}){if(await this.loadMarkets(),!this.market(t).spot)throw new r.NotSupported(this.id+" createMarketBuyOrderWithCost() supports spot orders only");return i.createMarketBuyOrderRequiresPrice=!1,await this.createOrder(t,"market","buy",e,void 0,i)}async createOrder(t,e,i,s,o,n={}){let c;await this.loadMarkets();let d=this.market(t),h={client_order_id:this.safeString(this.options,"brokerId","ccxt")+"-"+this.uuid(),product_id:d.id,side:i.toUpperCase()},u=this.safeNumberN(n,["stopPrice","stop_price","triggerPrice"]),f=this.safeNumber(n,"stopLossPrice"),l=this.safeNumber(n,"takeProfitPrice"),p=void 0!==u,m=void 0!==f,g=void 0!==l,_=this.safeString(n,"timeInForce"),v="PO"===_||this.safeBool2(n,"postOnly","post_only",!1),y=this.safeString(n,"end_time"),k=this.safeString(n,"stop_direction");if("limit"===e){if(p){if(void 0===k&&(k="buy"===i?"STOP_DIRECTION_STOP_DOWN":"STOP_DIRECTION_STOP_UP"),"GTD"===_||void 0!==y){if(void 0===y)throw new r.ExchangeError(this.id+" createOrder() requires an end_time parameter for a GTD order");h.order_configuration={stop_limit_stop_limit_gtd:{base_size:this.amountToPrecision(t,s),limit_price:this.priceToPrecision(t,o),stop_price:this.priceToPrecision(t,u),stop_direction:k,end_time:y}}}else h.order_configuration={stop_limit_stop_limit_gtc:{base_size:this.amountToPrecision(t,s),limit_price:this.priceToPrecision(t,o),stop_price:this.priceToPrecision(t,u),stop_direction:k}}}else if(m||g){let e;m?(void 0===k&&(k="buy"===i?"STOP_DIRECTION_STOP_UP":"STOP_DIRECTION_STOP_DOWN"),e=this.priceToPrecision(t,f)):(void 0===k&&(k="buy"===i?"STOP_DIRECTION_STOP_DOWN":"STOP_DIRECTION_STOP_UP"),e=this.priceToPrecision(t,l)),h.order_configuration={stop_limit_stop_limit_gtc:{base_size:this.amountToPrecision(t,s),limit_price:this.priceToPrecision(t,o),stop_price:e,stop_direction:k}}}else if("GTD"===_||void 0!==y){if(void 0===y)throw new r.ExchangeError(this.id+" createOrder() requires an end_time parameter for a GTD order");h.order_configuration={limit_limit_gtd:{base_size:this.amountToPrecision(t,s),limit_price:this.priceToPrecision(t,o),end_time:y,post_only:v}}}else"IOC"===_?h.order_configuration={sor_limit_ioc:{base_size:this.amountToPrecision(t,s),limit_price:this.priceToPrecision(t,o)}}:"FOK"===_?h.order_configuration={limit_limit_fok:{base_size:this.amountToPrecision(t,s),limit_price:this.priceToPrecision(t,o)}}:h.order_configuration={limit_limit_gtc:{base_size:this.amountToPrecision(t,s),limit_price:this.priceToPrecision(t,o),post_only:v}}}else{if(p||m||g)throw new r.NotSupported(this.id+" createOrder() only stop limit orders are supported");if(d.spot&&"buy"===i){let e;let i=!0;[i,n]=this.handleOptionAndParams(n,"createOrder","createMarketBuyOrderRequiresPrice",!0);let c=this.safeNumber(n,"cost");if(n=this.omit(n,"cost"),void 0!==c)e=this.costToPrecision(t,c);else if(i){if(void 0===o)throw new r.InvalidOrder(this.id+" createOrder() requires a price argument for market buy orders on spot markets to calculate the total amount to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option or param to false and pass the cost to spend in the amount argument");{let i=this.numberToString(s),r=this.numberToString(o),n=a.Y.stringMul(i,r);e=this.costToPrecision(t,n)}}else e=this.costToPrecision(t,s);h.order_configuration={market_market_ioc:{quote_size:e}}}else h.order_configuration={market_market_ioc:{base_size:this.amountToPrecision(t,s)}}}let b=this.safeString(n,"marginMode");if(void 0!==b&&("isolated"===b?h.margin_type="ISOLATED":"cross"===b&&(h.margin_type="CROSS")),n=this.omit(n,["timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","stopPrice","stop_price","stopDirection","stop_direction","clientOrderId","postOnly","post_only","end_time","marginMode"]),this.safeBool2(n,"preview","test",!1)?(n=this.omit(n,["preview","test"]),h=this.omit(h,"client_order_id"),c=await this.v3PrivatePostBrokerageOrdersPreview(this.extend(h,n))):c=await this.v3PrivatePostBrokerageOrders(this.extend(h,n)),!0!==this.safeBool(c,"success")){let t=this.safeDict(c,"error_response"),e=this.safeString(t,"error"),i=this.safeString(t,"message");if(void 0!==t)throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwBroadlyMatchedException(this.exceptions.broad,e,i),new r.ExchangeError(i)}let w=this.safeDict(c,"success_response",{});return this.parseOrder(w,d)}parseOrder(t,e){let i,s,r,a,o;let n=this.safeString(t,"product_id"),c=this.safeSymbol(n,e,"-");void 0!==c&&(e=this.safeMarket(c,e));let d=this.safeDict(t,"order_configuration",{}),h=this.safeDict(d,"limit_limit_gtc"),u=this.safeDict(d,"limit_limit_gtd"),f=this.safeDict(d,"sor_limit_ioc"),l=this.safeDict(d,"stop_limit_stop_limit_gtc"),p=this.safeDict(d,"stop_limit_stop_limit_gtd"),m=this.safeDict(d,"market_market_ioc"),g=void 0!==l||void 0!==p;if(void 0!==h||void 0!==u||void 0!==f){let t;t=void 0!==h?h:void 0!==u?u:f,i=this.safeString(t,"limit_price"),s=this.safeString(t,"base_size"),r=this.safeBool(t,"post_only")}else if(g){let t=void 0!==l?l:p;i=this.safeString(t,"limit_price"),s=this.safeString(t,"base_size"),r=this.safeBool(t,"post_only"),a=this.safeString(t,"stop_price")}else s=this.safeString(m,"base_size");let _=this.safeString(t,"created_time");return void 0!==this.safeString(t,"total_fees")&&void 0!==e&&(o=e.quote),this.safeOrder({info:t,id:this.safeString(t,"order_id"),clientOrderId:this.safeString(t,"client_order_id"),timestamp:this.parse8601(_),datetime:_,lastTradeTimestamp:void 0,symbol:c,type:this.parseOrderType(this.safeString(t,"order_type")),timeInForce:this.parseTimeInForce(this.safeString(t,"time_in_force")),postOnly:r,side:this.safeStringLower(t,"side"),price:i,triggerPrice:a,amount:s,filled:this.safeString(t,"filled_size"),remaining:void 0,cost:void 0,average:this.safeString(t,"average_filled_price"),status:this.parseOrderStatus(this.safeString(t,"status")),fee:{cost:this.safeString(t,"total_fees"),currency:o},trades:void 0},e)}parseOrderStatus(t){return this.safeString({OPEN:"open",FILLED:"closed",CANCELLED:"canceled",EXPIRED:"canceled",FAILED:"canceled",UNKNOWN_ORDER_STATUS:void 0},t,t)}parseOrderType(t){if("UNKNOWN_ORDER_TYPE"!==t)return this.safeString({MARKET:"market",LIMIT:"limit",STOP:"limit",STOP_LIMIT:"limit"},t,t)}parseTimeInForce(t){return this.safeString({GOOD_UNTIL_CANCELLED:"GTC",GOOD_UNTIL_DATE_TIME:"GTD",IMMEDIATE_OR_CANCEL:"IOC",FILL_OR_KILL:"FOK",UNKNOWN_TIME_IN_FORCE:void 0},t,t)}async cancelOrder(t,e,i={}){await this.loadMarkets();let s=await this.cancelOrders([t],e,i);return this.safeDict(s,0,{})}async cancelOrders(t,e,i={}){let s;await this.loadMarkets(),void 0!==e&&(s=this.market(e));let a=await this.v3PrivatePostBrokerageOrdersBatchCancel(this.extend({order_ids:t},i)),o=this.safeList(a,"results",[]);for(let t=0;t<o.length;t++)if(!0!==this.safeBool(o[t],"success"))throw new r.BadRequest(this.id+" cancelOrders() has failed, check your arguments and parameters");return this.parseOrders(o,s)}async editOrder(t,e,i,s,r,a,o={}){let n;await this.loadMarkets();let c=this.market(e),d={order_id:t};return void 0!==r&&(d.size=this.amountToPrecision(e,r)),void 0!==a&&(d.price=this.priceToPrecision(e,a)),this.safeBool2(o,"preview","test",!1)?(o=this.omit(o,["preview","test"]),n=await this.v3PrivatePostBrokerageOrdersEditPreview(this.extend(d,o))):n=await this.v3PrivatePostBrokerageOrdersEdit(this.extend(d,o)),this.parseOrder(n,c)}async fetchOrder(t,e,i={}){let s;await this.loadMarkets(),void 0!==e&&(s=this.market(e));let r=await this.v3PrivateGetBrokerageOrdersHistoricalOrderId(this.extend({order_id:t},i)),a=this.safeDict(r,"order",{});return this.parseOrder(a,s)}async fetchOrders(t,e,i=100,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchOrders","paginate"),a)return await this.fetchPaginatedCallCursor("fetchOrders",t,e,i,s,"cursor","cursor",void 0,1e3);void 0!==t&&(r=this.market(t));let o={};void 0!==r&&(o.product_id=r.id),void 0!==i&&(o.limit=i),void 0!==e&&(o.start_date=this.iso8601(e));let n=this.safeIntegerN(s,["until"]);void 0!==n&&(s=this.omit(s,["until"]),o.end_date=this.iso8601(n));let c=await this.v3PrivateGetBrokerageOrdersHistoricalBatch(this.extend(o,s)),d=this.safeList(c,"orders",[]),h=this.safeDict(d,0),u=this.safeString(c,"cursor");return void 0!==u&&""!==u&&(h.cursor=u,d[0]=h),this.parseOrders(d,r,e,i)}async fetchOrdersByStatus(t,e,i,s,r={}){let a;await this.loadMarkets(),void 0!==e&&(a=this.market(e));let o={order_status:t};void 0!==a&&(o.product_id=a.id),void 0===s&&(s=100),o.limit=s,void 0!==i&&(o.start_date=this.iso8601(i));let n=this.safeIntegerN(r,["until"]);void 0!==n&&(r=this.omit(r,["until"]),o.end_date=this.iso8601(n));let c=await this.v3PrivateGetBrokerageOrdersHistoricalBatch(this.extend(o,r)),d=this.safeList(c,"orders",[]),h=this.safeDict(d,0),u=this.safeString(c,"cursor");return void 0!==u&&""!==u&&(h.cursor=u,d[0]=h),this.parseOrders(d,a,i,s)}async fetchOpenOrders(t,e,i,s={}){await this.loadMarkets();let r=!1;return([r,s]=this.handleOptionAndParams(s,"fetchOpenOrders","paginate"),r)?await this.fetchPaginatedCallCursor("fetchOpenOrders",t,e,i,s,"cursor","cursor",void 0,100):await this.fetchOrdersByStatus("OPEN",t,e,i,s)}async fetchClosedOrders(t,e,i,s={}){await this.loadMarkets();let r=!1;return([r,s]=this.handleOptionAndParams(s,"fetchClosedOrders","paginate"),r)?await this.fetchPaginatedCallCursor("fetchClosedOrders",t,e,i,s,"cursor","cursor",void 0,100):await this.fetchOrdersByStatus("FILLED",t,e,i,s)}async fetchCanceledOrders(t,e,i,s={}){return await this.fetchOrdersByStatus("CANCELLED",t,e,i,s)}async fetchOHLCV(t,e="1m",i,s,r={}){let o,n;await this.loadMarkets(),s=void 0===s?300:Math.min(s,300);let c=!1;if([c,r]=this.handleOptionAndParams(r,"fetchOHLCV","paginate",!1),c)return await this.fetchPaginatedCallDeterministic("fetchOHLCV",t,i,s,e,r,299);let d=this.market(t),h={product_id:d.id,granularity:this.safeString(this.timeframes,e,e)},u=this.safeIntegerN(r,["until","end"]);r=this.omit(r,["until"]);let f=this.parseTimeframe(e),l=s*f;if(void 0!==i)o=this.numberToString(this.parseToInt(i/1e3));else{let t=this.seconds().toString();o=a.Y.stringSub(t,l.toString())}h.start=o,void 0!==u?h.end=this.numberToString(this.parseToInt(u/1e3)):h.end=a.Y.stringAdd(o,l.toString());let p=!1;[p,r]=this.handleOptionAndParams(r,"fetchOHLCV","usePrivate",!1),n=p?await this.v3PrivateGetBrokerageProductsProductIdCandles(this.extend(h,r)):await this.v3PublicGetBrokerageMarketProductsProductIdCandles(this.extend(h,r));let m=this.safeList(n,"candles",[]);return this.parseOHLCVs(m,d,e,i,s)}parseOHLCV(t,e){return[this.safeTimestamp(t,"start"),this.safeNumber(t,"open"),this.safeNumber(t,"high"),this.safeNumber(t,"low"),this.safeNumber(t,"close"),this.safeNumber(t,"volume")]}async fetchTrades(t,e,i,s={}){let a,o;await this.loadMarkets();let n=this.market(t),c={product_id:n.id};if(void 0!==e&&(c.start=this.numberToString(this.parseToInt(e/1e3))),void 0!==i&&(c.limit=Math.min(i,1e3)),[a,s]=this.handleOptionAndParams(s,"fetchTrades","until"),void 0!==a)c.end=this.numberToString(this.parseToInt(a/1e3));else if(void 0!==e)throw new r.ArgumentsRequired(this.id+" fetchTrades() requires a `until` parameter when you use `since` argument");let d=!1;[d,s]=this.handleOptionAndParams(s,"fetchTrades","usePrivate",!1),o=d?await this.v3PrivateGetBrokerageProductsProductIdTicker(this.extend(c,s)):await this.v3PublicGetBrokerageMarketProductsProductIdTicker(this.extend(c,s));let h=this.safeList(o,"trades",[]);return this.parseTrades(h,n,e,i)}async fetchMyTrades(t,e,i,s={}){let r;await this.loadMarkets();let a=!1;if([a,s]=this.handleOptionAndParams(s,"fetchMyTrades","paginate"),a)return await this.fetchPaginatedCallCursor("fetchMyTrades",t,e,i,s,"cursor","cursor",void 0,250);void 0!==t&&(r=this.market(t));let o={};void 0!==r&&(o.product_id=r.id),void 0!==i&&(o.limit=i),void 0!==e&&(o.start_sequence_timestamp=this.iso8601(e));let n=this.safeIntegerN(s,["until"]);void 0!==n&&(s=this.omit(s,["until"]),o.end_sequence_timestamp=this.iso8601(n));let c=await this.v3PrivateGetBrokerageOrdersHistoricalFills(this.extend(o,s)),d=this.safeList(c,"fills",[]),h=this.safeDict(d,0),u=this.safeString(c,"cursor");return void 0!==u&&""!==u&&(h.cursor=u,d[0]=h),this.parseTrades(d,r,e,i)}async fetchOrderBook(t,e,i={}){let s;await this.loadMarkets();let r={product_id:this.market(t).id};void 0!==e&&(r.limit=e);let a=!1;[a,i]=this.handleOptionAndParams(i,"fetchOrderBook","usePrivate",!1),s=a?await this.v3PrivateGetBrokerageProductBook(this.extend(r,i)):await this.v3PublicGetBrokerageMarketProductBook(this.extend(r,i));let o=this.safeDict(s,"pricebook",{}),n=this.safeString(o,"time"),c=this.parse8601(n);return this.parseOrderBook(o,t,c,"bids","asks","price","size")}async fetchBidsAsks(t,e={}){await this.loadMarkets();let i={};void 0!==(t=this.marketSymbols(t))&&(i.product_ids=this.marketIds(t));let s=await this.v3PrivateGetBrokerageBestBidAsk(this.extend(i,e)),r=this.safeList(s,"pricebooks",[]);return this.parseTickers(r,t)}async withdraw(t,e,i,s,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();let o=this.currency(t),n=this.safeString2(a,"account_id","accountId");if(a=this.omit(a,["account_id","accountId"]),void 0===n){if(void 0===t)throw new r.ArgumentsRequired(this.id+" withdraw() requires an account_id (or accountId) parameter OR a currency code argument");if(void 0===(n=await this.findAccountId(t,a)))throw new r.ExchangeError(this.id+" withdraw() could not find account id for "+t)}let c={account_id:n,type:"send",to:i,amount:e,currency:o.id};void 0!==s&&(c.destination_tag=s);let d=await this.v2PrivatePostAccountsAccountIdTransactions(this.extend(c,a)),h=this.safeDict(d,"data",{});return this.parseTransaction(h,o)}async fetchDepositAddressesByNetwork(t,e={}){let i;await this.loadMarkets();let s=this.currency(t);[i,e]=await this.prepareAccountRequestWithCurrencyCode(s.code);let r=await this.v2PrivateGetAccountsAccountIdAddresses(this.extend(i,e)),a=this.safeList(r,"data",[]),o=this.parseDepositAddresses(a,void 0,!1);return this.indexBy(o,"network")}parseDepositAddress(t,e){let i=this.safeString(t,"address");this.checkAddress(i);let s=this.safeString(t,"network"),r=this.safeCurrencyCode(void 0,e),a=this.safeString(t,"address_label").split(" "),o=this.safeString(a,0),n=this.safeDict(t,"address_info");return{info:t,currency:this.safeCurrencyCode(o,e),network:this.networkIdToCode(s,r),address:i,tag:this.safeString(n,"destination_tag")}}async deposit(t,e,i,s={}){await this.loadMarkets();let a=this.safeString2(s,"account_id","accountId");if(s=this.omit(s,["account_id","accountId"]),void 0===a){if(void 0===t)throw new r.ArgumentsRequired(this.id+" deposit() requires an account_id (or accountId) parameter OR a currency code argument");if(void 0===(a=await this.findAccountId(t,s)))throw new r.ExchangeError(this.id+" deposit() could not find account id for "+t)}let o={account_id:a,amount:this.numberToString(e),currency:t.toUpperCase(),payment_method:i},n=await this.v2PrivatePostAccountsAccountIdDeposits(this.extend(o,s)),c=this.safeDict(n,"data",{});return this.parseTransaction(c)}async fetchDeposit(t,e,i={}){await this.loadMarkets();let s=this.safeString2(i,"account_id","accountId");if(i=this.omit(i,["account_id","accountId"]),void 0===s){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposit() requires an account_id (or accountId) parameter OR a currency code argument");if(void 0===(s=await this.findAccountId(e,i)))throw new r.ExchangeError(this.id+" fetchDeposit() could not find account id for "+e)}let a={account_id:s,deposit_id:t},o=await this.v2PrivateGetAccountsAccountIdDepositsDepositId(this.extend(a,i)),n=this.safeDict(o,"data",{});return this.parseTransaction(n)}async fetchDepositMethodIds(t={}){await this.loadMarkets();let e=await this.v3PrivateGetBrokeragePaymentMethods(t),i=this.safeList(e,"payment_methods",[]);return this.parseDepositMethodIds(i)}async fetchDepositMethodId(t,e={}){await this.loadMarkets();let i=await this.v3PrivateGetBrokeragePaymentMethodsPaymentMethodId(this.extend({payment_method_id:t},e)),s=this.safeDict(i,"payment_method",{});return this.parseDepositMethodId(s)}parseDepositMethodIds(t,e={}){let i=[];for(let s=0;s<t.length;s++){let r=this.extend(this.parseDepositMethodId(t[s]),e);i.push(r)}return i}parseDepositMethodId(t){return{info:t,id:this.safeString(t,"id"),currency:this.safeString(t,"currency"),verified:this.safeBool(t,"verified"),tag:this.safeString(t,"name")}}async fetchConvertQuote(t,e,i,s={}){await this.loadMarkets();let r={from_account:t,to_account:e,amount:this.numberToString(i)},a=await this.v3PrivatePostBrokerageConvertQuote(this.extend(r,s)),o=this.safeDict(a,"trade",{});return this.parseConversion(o)}async createConvertTrade(t,e,i,s,r={}){await this.loadMarkets();let a=await this.v3PrivatePostBrokerageConvertTradeTradeId(this.extend({trade_id:t,from_account:e,to_account:i},r)),o=this.safeDict(a,"trade",{});return this.parseConversion(o)}async fetchConvertTrade(t,e,i={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchConvertTrade() requires a code argument");let s=this.safeString(i,"toCode");if(void 0===s)throw new r.ArgumentsRequired(this.id+" fetchConvertTrade() requires a toCode parameter");i=this.omit(i,"toCode");let a=await this.v3PrivateGetBrokerageConvertTradeTradeId(this.extend({trade_id:t,from_account:e,to_account:s},i)),o=this.safeDict(a,"trade",{});return this.parseConversion(o)}parseConversion(t,e,i){let s=this.safeString(t,"source_currency"),r=this.safeCurrencyCode(s,e),a=this.safeString(t,"target_currency"),o=this.safeCurrencyCode(a,i),n=this.safeDict(t,"user_entered_amount"),c=this.safeDict(t,"total_fee"),d=this.safeDict(c,"amount");return{info:t,timestamp:void 0,datetime:void 0,id:this.safeString(t,"id"),fromCurrency:r,fromAmount:this.safeNumber(n,"value"),toCurrency:o,toAmount:void 0,price:void 0,fee:this.safeNumber(d,"value")}}async closePosition(t,e,i={}){await this.loadMarkets();let s=this.market(t);if(!s.future)throw new r.NotSupported(this.id+" closePosition() only supported for futures markets");let a=this.safeString2(i,"client_order_id","clientOrderId");i=this.omit(i,"clientOrderId");let o={product_id:s.id};if(void 0===a)throw new r.ArgumentsRequired(this.id+" closePosition() requires a clientOrderId parameter");o.client_order_id=a;let n=await this.v3PrivatePostBrokerageOrdersClosePosition(this.extend(o,i)),c=this.safeDict(n,"success_response",{});return this.parseOrder(c)}async fetchPositions(t,e={}){let i,s,a;if(await this.loadMarkets(),void 0!==(t=this.marketSymbols(t))&&(i=this.market(t[0])),[s,e]=this.handleMarketTypeAndParams("fetchPositions",i,e),"future"===s)a=await this.v3PrivateGetBrokerageCfmPositions(e);else{let t;if([t,e]=this.handleOptionAndParams(e,"fetchPositions","portfolio"),void 0===t)throw new r.ArgumentsRequired(this.id+' fetchPositions() requires a "portfolio" value in params (eg: dbcb91e7-2bc9-515), or set as exchange.options["portfolio"]. You can get a list of portfolios with fetchPortfolios()');a=await this.v3PrivateGetBrokerageIntxPositionsPortfolioUuid(this.extend({portfolio_uuid:t},e))}let o=this.safeList(a,"positions",[]);return this.parsePositions(o,t)}async fetchPosition(t,e={}){let i;await this.loadMarkets();let s=this.market(t);if(s.future){let t=this.safeString(s,"product_id");if(void 0===t)throw new r.ArgumentsRequired(this.id+' fetchPosition() requires a "product_id" in params');i=await this.v3PrivateGetBrokerageCfmPositionsProductId(this.extend({product_id:t},e))}else{let t;if([t,e]=this.handleOptionAndParams(e,"fetchPositions","portfolio"),void 0===t)throw new r.ArgumentsRequired(this.id+' fetchPosition() requires a "portfolio" value in params (eg: dbcb91e7-2bc9-515), or set as exchange.options["portfolio"]. You can get a list of portfolios with fetchPortfolios()');let a={symbol:s.id,portfolio_uuid:t};i=await this.v3PrivateGetBrokerageIntxPositionsPortfolioUuidSymbol(this.extend(a,e))}let a=this.safeDict(i,"position",{});return this.parsePosition(a,s)}parsePosition(t,e){let i;let s=this.safeString(t,"symbol","");e=this.safeMarket(s,e);let r=this.safeString(t,"margin_type");void 0!==r&&(i="MARGIN_TYPE_CROSS"===r?"cross":"isolated");let a=this.safeDict(t,"position_notional",{}),o=this.safeString(t,"position_side"),n=this.safeDict(t,"unrealized_pnl",{}),c=this.safeDict(t,"liquidation_price",{}),d=this.safeNumber(c,"value"),h=this.safeDict(t,"vwap",{}),u=this.safeDict(t,"portfolio_summary",{});return this.safePosition({info:t,id:this.safeString(t,"product_id"),symbol:this.safeSymbol(s,e),notional:this.safeNumber(a,"value"),marginMode:i,liquidationPrice:d,entryPrice:this.safeNumber(h,"value"),unrealizedPnl:this.safeNumber(n,"value"),realizedPnl:void 0,percentage:void 0,contracts:this.safeNumber(t,"net_size"),contractSize:e.contractSize,markPrice:void 0,lastPrice:void 0,side:"POSITION_SIDE_LONG"===o?"long":"short",hedged:void 0,timestamp:void 0,datetime:void 0,lastUpdateTimestamp:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:this.safeNumber(u,"collateral"),initialMargin:void 0,initialMarginPercentage:void 0,leverage:this.safeNumber(t,"leverage"),marginRatio:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchTradingFees(t={}){let e;await this.loadMarkets(),[e,t]=this.handleMarketTypeAndParams("fetchTradingFees",void 0,t);let i="spot"===e,s=await this.v3PrivateGetBrokerageTransactionSummary(this.extend({product_type:i?"SPOT":"FUTURE"},t)),r=this.safeDict(s,"fee_tier",{}),a=this.safeNumber(r,"taker_fee_rate"),o=this.safeNumber(r,"maker_fee_rate"),n={};for(let t=0;t<this.symbols.length;t++){let e=this.symbols[t],r=this.market(e);(i&&r.spot||!i&&!r.spot)&&(n[e]={info:s,symbol:e,maker:a,taker:o,percentage:!0})}return n}createAuthToken(t,e,i){let s;if(void 0!==i){let t=(s=e+" "+i.replace("https://","")).indexOf("?");t>0&&(s=s.slice(0,t))}let r=this.randomBytes(16),a={aud:["retail_rest_api_proxy"],iss:"coinbase-cloud",nbf:t,exp:t+120,sub:this.apiKey,iat:t};return void 0!==s&&(a.uri=s),(0,c.a)(a,this.encode(this.secret),n.s,!1,{kid:this.apiKey,nonce:r,alg:"ES256"})}nonce(){return this.milliseconds()-this.options.timeDifference}sign(t,e=[],i="GET",s={},a,o){let c=e[0],d="private"===e[1],h="v3"===c,u="/"+(h?"api/v3":"v2")+"/"+this.implodeParams(t,s),f=this.omit(s,this.extractParams(t)),l=u;"GET"===i&&Object.keys(f).length&&(u+="?"+this.urlencodeWithArrayRepeat(f));let p=this.urls.api.rest+u;if(d){let t;let e=this.safeString(this.headers,"Authorization");if(void 0!==e)t=e;else if(this.token&&!this.checkRequiredCredentials(!1))t="Bearer "+this.token;else{this.checkRequiredCredentials();let e=this.seconds(),s="";if("GET"!==i?Object.keys(f).length&&(s=o=this.json(f)):!h&&Object.keys(f).length&&(s+="?"+this.urlencode(f)),this.apiKey.indexOf("organizations/")>=0||this.secret.startsWith("-----BEGIN")){if(this.apiKey.startsWith("-----BEGIN"))throw new r.ArgumentsRequired(this.id+" apiKey should contain the name (eg: organizations/3b910e93....) and not the public key");t="Bearer "+this.createAuthToken(e,i,p)}else{let t=this.nonce(),e=this.parseToInt(t/1e3).toString(),r=e+i+l+s,o=this.hmac(this.encode(r),this.encode(this.secret),n.s);a={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":o,"CB-ACCESS-TIMESTAMP":e,"Content-Type":"application/json"}}}void 0!==t&&(a={Authorization:t,"Content-Type":"application/json"},"GET"!==i&&Object.keys(f).length&&(o=this.json(f)))}return{url:p,method:i,body:o,headers:a}}handleErrors(t,e,i,s,a,o,n,c,d){if(void 0===n)return;let h=this.id+" "+o,u=this.safeString(n,"error");if(void 0!==u){let t=this.safeString(n,"error_description");throw this.throwExactlyMatchedException(this.exceptions.exact,u,h),this.throwBroadlyMatchedException(this.exceptions.broad,t,h),new r.ExchangeError(h)}let f=this.safeList(n,"errors");if(void 0!==f&&Array.isArray(f)&&f.length>0){u=this.safeString(f[0],"id");let t=this.safeString(f[0],"message");if(void 0!==u)throw this.throwExactlyMatchedException(this.exceptions.exact,u,h),this.throwBroadlyMatchedException(this.exceptions.broad,t,h),new r.ExchangeError(h)}let l=this.options.advanced;if(!("data"in n)&&!l)throw new r.ExchangeError(this.id+" failed due to a malformed response "+this.json(n))}}}}]);