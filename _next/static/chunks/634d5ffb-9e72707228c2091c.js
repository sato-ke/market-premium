"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[515],{4925:(e,t,i)=>{i.d(t,{A:()=>d});var s=i(9826),r=i(8119),a=i(6077),n=i(3675),o=i(5432);class d extends s.A{describe(){return this.deepExtend(super.describe(),{id:"phemex",name:"Phemex",countries:["CN"],rateLimit:120.5,version:"v1",certified:!1,pro:!0,hostname:"api.phemex.com",has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,closePosition:!1,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchClosedOrders:!0,fetchCrossBorrowRate:!1,fetchCrossBorrowRates:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistories:!1,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedBorrowRate:!1,fetchIsolatedBorrowRates:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!1,sandbox:!0,setLeverage:!0,setMargin:!0,setMarginMode:!0,setPositionMode:!0,transfer:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/85225056-221eb600-b3d7-11ea-930d-564d2690e3f6.jpg",test:{v1:"https://testnet-api.phemex.com/v1",v2:"https://testnet-api.phemex.com",public:"https://testnet-api.phemex.com/exchange/public",private:"https://testnet-api.phemex.com"},api:{v1:"https://{hostname}/v1",v2:"https://{hostname}",public:"https://{hostname}/exchange/public",private:"https://{hostname}"},www:"https://phemex.com",doc:"https://phemex-docs.github.io/#overview",fees:"https://phemex.com/fees-conditions",referral:{url:"https://phemex.com/register?referralCode=EDNVJ",discount:.1}},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","3h":"10800","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2592000","3M":"7776000","1Y":"31104000"},api:{public:{get:{"cfg/v2/products":5,"cfg/fundingRates":5,products:5,"nomics/trades":5,"md/kline":5,"md/v2/kline/list":5,"md/v2/kline":5,"md/v2/kline/last":5,"md/orderbook":5,"md/trade":5,"md/spot/ticker/24hr":5,"exchange/public/cfg/chain-settings":5}},v1:{get:{"md/fullbook":5,"md/orderbook":5,"md/trade":5,"md/ticker/24hr":5,"md/ticker/24hr/all":5,"md/spot/ticker/24hr":5,"md/spot/ticker/24hr/all":5,"exchange/public/products":5,"api-data/public/data/funding-rate-history":5}},v2:{get:{"public/products":5,"public/products-plus":5,"md/v2/orderbook":5,"md/v2/trade":5,"md/v2/ticker/24hr":5,"md/v2/ticker/24hr/all":5,"api-data/public/data/funding-rate-history":5}},private:{get:{"spot/orders/active":1,"spot/orders":1,"spot/wallets":5,"exchange/spot/order":5,"exchange/spot/order/trades":5,"exchange/order/v2/orderList":5,"exchange/order/v2/tradingList":5,"accounts/accountPositions":1,"g-accounts/accountPositions":1,"accounts/positions":25,"api-data/futures/funding-fees":5,"api-data/g-futures/funding-fees":5,"api-data/futures/orders":5,"api-data/g-futures/orders":5,"api-data/futures/orders/by-order-id":5,"api-data/g-futures/orders/by-order-id":5,"api-data/futures/trades":5,"api-data/g-futures/trades":5,"api-data/futures/trading-fees":5,"api-data/g-futures/trading-fees":5,"api-data/futures/v2/tradeAccountDetail":5,"g-orders/activeList":1,"orders/activeList":1,"exchange/order/list":5,"exchange/order":5,"exchange/order/trade":5,"phemex-user/users/children":5,"phemex-user/wallets/v2/depositAddress":5,"phemex-user/wallets/tradeAccountDetail":5,"phemex-deposit/wallets/api/depositAddress":5,"phemex-deposit/wallets/api/depositHist":5,"phemex-deposit/wallets/api/chainCfg":5,"phemex-withdraw/wallets/api/withdrawHist":5,"phemex-withdraw/wallets/api/asset/info":5,"phemex-user/order/closedPositionList":5,"exchange/margins/transfer":5,"exchange/wallets/confirm/withdraw":5,"exchange/wallets/withdrawList":5,"exchange/wallets/depositList":5,"exchange/wallets/v2/depositAddress":5,"api-data/spots/funds":5,"api-data/spots/orders":5,"api-data/spots/orders/by-order-id":5,"api-data/spots/pnls":5,"api-data/spots/trades":5,"api-data/spots/trades/by-order-id":5,"assets/convert":5,"assets/transfer":5,"assets/spots/sub-accounts/transfer":5,"assets/futures/sub-accounts/transfer":5,"assets/quote":5},post:{"spot/orders":1,orders:1,"g-orders":1,"positions/assign":5,"exchange/wallets/transferOut":5,"exchange/wallets/transferIn":5,"exchange/margins":5,"exchange/wallets/createWithdraw":5,"exchange/wallets/cancelWithdraw":5,"exchange/wallets/createWithdrawAddress":5,"assets/transfer":5,"assets/spots/sub-accounts/transfer":5,"assets/futures/sub-accounts/transfer":5,"assets/universal-transfer":5,"assets/convert":5,"phemex-withdraw/wallets/api/createWithdraw":5,"phemex-withdraw/wallets/api/cancelWithdraw":5},put:{"spot/orders/create":1,"spot/orders":1,"orders/replace":1,"g-orders/replace":1,"positions/leverage":5,"g-positions/leverage":5,"g-positions/switch-pos-mode-sync":5,"positions/riskLimit":5},delete:{"spot/orders":2,"spot/orders/all":2,"orders/cancel":1,orders:1,"orders/all":3,"g-orders/cancel":1,"g-orders":1,"g-orders/all":3}}},precisionMode:n.kb,fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},features:{default:{sandbox:!0,createOrder:{marginMode:!1,triggerPrice:!0,triggerPriceType:{mark:!0,last:!0,index:!0},triggerDirection:!1,stopLossPrice:!1,takeProfitPrice:!1,attachedStopLossTakeProfit:void 0,timeInForce:{IOC:!0,FOK:!0,PO:!0,GTD:!1},hedged:!1,leverage:!1,marketBuyByCost:!0,marketBuyRequiresPrice:!1,selfTradePrevention:!1,trailing:!1,iceberg:!1},createOrders:void 0,fetchMyTrades:{marginMode:!1,limit:200,daysBack:1e5,untilDays:2},fetchOrder:{marginMode:!1,trigger:!1,trailing:!1},fetchOpenOrders:{marginMode:!1,limit:void 0,trigger:!1,trailing:!1},fetchOrders:{marginMode:!1,limit:void 0,daysBack:void 0,untilDays:void 0,trigger:!1,trailing:!1},fetchClosedOrders:{marginMode:!1,limit:200,daysBack:1e5,daysBackCanceled:1e5,untilDays:2,trigger:!1,trailing:!1},fetchOHLCV:{limit:1e3}},spot:{extends:"default"},forDerivatives:{extends:"default",createOrder:{triggerDirection:!0,attachedStopLossTakeProfit:{triggerPriceType:{mark:!0,last:!0,index:!0},price:!0},hedged:!0},fetchOHLCV:{limit:2e3}},swap:{linear:{extends:"forDerivatives"},inverse:{extends:"forDerivatives"}},future:{linear:void 0,inverse:void 0}},requiredCredentials:{apiKey:!0,secret:!0},exceptions:{exact:{401:r.AuthenticationError,412:r.BadRequest,6001:r.BadRequest,19999:r.BadRequest,10001:r.DuplicateOrderId,10002:r.OrderNotFound,10003:r.CancelPending,10004:r.CancelPending,10005:r.CancelPending,11001:r.InsufficientFunds,11002:r.InvalidOrder,11003:r.InsufficientFunds,11004:r.InvalidOrder,11005:r.InsufficientFunds,11006:r.ExchangeError,11007:r.ExchangeError,11008:r.ExchangeError,11009:r.ExchangeError,11010:r.InsufficientFunds,11011:r.InvalidOrder,11012:r.InvalidOrder,11013:r.InvalidOrder,11014:r.InvalidOrder,11015:r.InvalidOrder,11016:r.BadRequest,11017:r.ExchangeError,11018:r.ExchangeError,11019:r.ExchangeError,11020:r.ExchangeError,11021:r.ExchangeError,11022:r.AccountSuspended,11023:r.ExchangeError,11024:r.ExchangeError,11025:r.BadRequest,11026:r.ExchangeError,11027:r.BadSymbol,11028:r.BadSymbol,11029:r.ExchangeError,11030:r.ExchangeError,11031:r.DDoSProtection,11032:r.DDoSProtection,11033:r.DuplicateOrderId,11034:r.InvalidOrder,11035:r.InvalidOrder,11036:r.InvalidOrder,11037:r.InvalidOrder,11038:r.InvalidOrder,11039:r.InvalidOrder,11040:r.InvalidOrder,11041:r.InvalidOrder,11042:r.InvalidOrder,11043:r.InvalidOrder,11044:r.InvalidOrder,11045:r.InvalidOrder,11046:r.InvalidOrder,11047:r.InvalidOrder,11048:r.InvalidOrder,11049:r.InvalidOrder,11050:r.InvalidOrder,11051:r.InvalidOrder,11052:r.InvalidOrder,11053:r.InvalidOrder,11054:r.InvalidOrder,11055:r.InvalidOrder,11056:r.InvalidOrder,11057:r.InvalidOrder,11058:r.InvalidOrder,11059:r.InvalidOrder,11060:r.InvalidOrder,11061:r.CancelPending,11062:r.InvalidOrder,11063:r.InvalidOrder,11064:r.InvalidOrder,11065:r.InvalidOrder,11066:r.InvalidOrder,11067:r.InvalidOrder,11068:r.InvalidOrder,11069:r.ExchangeError,11070:r.BadSymbol,11071:r.InvalidOrder,11072:r.InvalidOrder,11073:r.InvalidOrder,11074:r.InvalidOrder,11075:r.InvalidOrder,11076:r.InvalidOrder,11077:r.InvalidOrder,11078:r.InvalidOrder,11079:r.InvalidOrder,11080:r.InvalidOrder,11081:r.InvalidOrder,11082:r.InsufficientFunds,11083:r.InvalidOrder,11084:r.InvalidOrder,11085:r.DuplicateOrderId,11086:r.InvalidOrder,11087:r.InvalidOrder,11088:r.InvalidOrder,11089:r.InvalidOrder,11090:r.InvalidOrder,11091:r.InvalidOrder,11092:r.InvalidOrder,11093:r.InvalidOrder,11094:r.InvalidOrder,11095:r.InvalidOrder,11096:r.InvalidOrder,11097:r.BadRequest,11098:r.BadRequest,11099:r.ExchangeError,11100:r.InsufficientFunds,11101:r.InsufficientFunds,11102:r.BadRequest,11103:r.BadRequest,11104:r.BadRequest,11105:r.InsufficientFunds,11106:r.InsufficientFunds,11107:r.ExchangeError,11108:r.InvalidOrder,11109:r.InvalidOrder,11110:r.InvalidOrder,11111:r.InvalidOrder,11112:r.InvalidOrder,11113:r.BadRequest,11114:r.InvalidOrder,11115:r.InvalidOrder,11116:r.InvalidOrder,11117:r.InvalidOrder,11118:r.InvalidOrder,11119:r.InvalidOrder,11120:r.InvalidOrder,11121:r.InvalidOrder,11122:r.InvalidOrder,11123:r.InvalidOrder,11124:r.InvalidOrder,11125:r.InvalidOrder,11126:r.InvalidOrder,11128:r.InvalidOrder,11129:r.InvalidOrder,11130:r.InvalidOrder,11131:r.InvalidOrder,11132:r.InvalidOrder,11133:r.InvalidOrder,11134:r.InvalidOrder,3e4:r.BadRequest,30018:r.BadRequest,34003:r.PermissionDenied,35104:r.InsufficientFunds,39995:r.RateLimitExceeded,39996:r.PermissionDenied,39997:r.BadSymbol},broad:{"401 Insufficient privilege":r.PermissionDenied,"401 Request IP mismatch":r.PermissionDenied,"Failed to find api-key":r.AuthenticationError,"Missing required parameter":r.BadRequest,"API Signature verification failed":r.AuthenticationError,"Api key not found":r.AuthenticationError}},options:{brokerId:"CCXT123456","x-phemex-request-expiry":60,createOrderByQuoteRequiresPrice:!0,networks:{TRC20:"TRX",ERC20:"ETH",BEP20:"BNB"},defaultNetworks:{USDT:"ETH"},defaultSubType:"linear",accountsByType:{spot:"spot",swap:"future"},stableCoins:["BUSD","FEI","TUSD","USD","USDC","USDD","USDP","USDT"],transfer:{fillResponseFromRequest:!0},triggerPriceTypesMap:{last:"ByLastPrice",mark:"ByMarkPrice",index:"ByIndexPrice",ask:"ByAskPrice",bid:"ByBidPrice"}}})}parseSafeNumber(e){if(void 0===e)return e;let t=e.split(",");return t=(e=t.join("")).split(" "),this.safeNumber(t,0)}parseSwapMarket(e){let t;let i=this.safeString(e,"symbol"),s=this.safeString2(e,"baseCurrency","contractUnderlyingAssets"),r=this.safeString(e,"quoteCurrency"),a=this.safeString(e,"settleCurrency"),n=this.safeCurrencyCode(s);n=n.replace(" ","");let o=this.safeCurrencyCode(r),d=this.safeCurrencyCode(a),h=!1;a!==r&&(h=!0);let l=this.safeInteger(e,"priceScale"),c=this.safeInteger(e,"ratioScale"),u=this.safeInteger(e,"valueScale"),f=this.safeString(e,"minPriceEp"),p=this.safeString(e,"maxPriceEp"),m=this.safeString(e,"makerFeeRateEr"),g=this.safeString(e,"takerFeeRateEr"),v=this.safeString(e,"status"),S=this.safeString(e,"contractSize"," ");if("USDT"===d)t=this.parseNumber("1");else if(S.indexOf(" ")){let e=S.split(" ");t=this.parseNumber(e[0])}else t=this.parseNumber(S);return this.safeMarketStructure({id:i,symbol:n+"/"+o+":"+d,base:n,quote:o,settle:d,baseId:s,quoteId:r,settleId:a,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"Listed"===v,contract:!0,linear:!h,inverse:h,taker:this.parseNumber(this.fromEn(g,c)),maker:this.parseNumber(this.fromEn(m,c)),contractSize:t,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,priceScale:l,valueScale:u,ratioScale:c,precision:{amount:this.safeNumber2(e,"lotSize","qtyStepSize"),price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(e,"maxLeverage")},amount:{min:void 0,max:void 0},price:{min:this.parseNumber(this.fromEn(f,l)),max:this.parseNumber(this.fromEn(p,l))},cost:{min:void 0,max:this.parseNumber(this.safeString(e,"maxOrderQty"))}},created:void 0,info:e})}parseSpotMarket(e){let t=this.safeStringLower(e,"type"),i=this.safeString(e,"symbol"),s=this.safeString(e,"quoteCurrency"),r=this.safeString(e,"baseCurrency"),a=this.safeCurrencyCode(r),n=this.safeCurrencyCode(s),o=this.safeString(e,"status"),d=this.parseSafeNumber(this.safeString(e,"baseTickSize")),h=this.parseSafeNumber(this.safeString(e,"quoteTickSize"));return this.safeMarketStructure({id:i,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:r,quoteId:s,settleId:void 0,type:t,spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"Listed"===o,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(e,"defaultTakerFee"),maker:this.safeNumber(e,"defaultMakerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,priceScale:this.safeInteger(e,"priceScale"),valueScale:this.safeInteger(e,"valueScale"),ratioScale:this.safeInteger(e,"ratioScale"),precision:{amount:d,price:h},limits:{leverage:{min:void 0,max:void 0},amount:{min:d,max:this.parseSafeNumber(this.safeString(e,"maxBaseOrderSize"))},price:{min:h,max:void 0},cost:{min:this.parseSafeNumber(this.safeString(e,"minOrderValue")),max:this.parseSafeNumber(this.safeString(e,"maxOrderValue"))}},created:this.safeInteger(e,"listTime"),info:e})}async fetchMarkets(e={}){let t=await this.v2GetPublicProducts(e),i=await this.v1GetExchangePublicProducts(e),s=this.safeValue(i,"data",[]),r=this.safeValue(t,"data",{}),a=this.safeValue(r,"products",[]),n=this.safeValue(r,"perpProductsV2",[]);a=this.arrayConcat(a,n);let o=this.safeValue(r,"riskLimits",[]),d=this.safeValue(r,"riskLimitsV2",[]);o=this.arrayConcat(o,d);let h=this.safeValue(r,"currencies",[]),l=this.indexBy(o,"symbol"),c=this.indexBy(s,"symbol"),u=this.indexBy(h,"currency"),f=[];for(let e=0;e<a.length;e++){let t=a[e],i=this.safeStringLower(t,"type");if("perpetual"===i||"perpetualv2"===i){let e=this.safeString(t,"symbol"),i=this.safeValue(l,e,{});t=this.extend(t,i);let s=this.safeValue(c,e,{});t=this.extend(t,s),t=this.parseSwapMarket(t)}else{let e=this.safeString(t,"baseCurrency"),i=this.safeValue(u,e,{}),s=this.safeString(i,"valueScale","8");t=this.extend(t,{valueScale:s}),t=this.parseSpotMarket(t)}f.push(t)}return f}async fetchCurrencies(e={}){let t=await this.v2GetPublicProducts(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"currencies",[]),r={};for(let e=0;e<s.length;e++){let t,i,n;let o=s[e],d=this.safeString(o,"currency"),h=this.safeString(o,"name"),l=this.safeCurrencyCode(d),c=this.safeString(o,"status"),u=this.safeString(o,"valueScale"),f=parseInt(u),p=this.safeString(o,"minValueEv"),m=this.safeString(o,"maxValueEv");if(void 0!==f){let e=this.parsePrecision(u);n=this.parseNumber(e),t=this.parseNumber(a.Y.stringMul(p,e)),i=this.parseNumber(a.Y.stringMul(m,e))}r[l]={id:d,info:o,code:l,name:h,active:"Listed"===c,deposit:void 0,withdraw:void 0,fee:void 0,precision:n,limits:{amount:{min:t,max:i},withdraw:{min:void 0,max:void 0}},valueScale:f,networks:{}}}return r}customParseBidAsk(e,t=0,i=1,s){if(void 0===s)throw new r.ArgumentsRequired(this.id+" customParseBidAsk() requires a market argument");let a=this.safeString(e,i);return s.spot&&(a=this.fromEv(a,s)),[this.parseNumber(this.fromEp(this.safeString(e,t),s)),this.parseNumber(a)]}customParseOrderBook(e,t,i,s="bids",r="asks",a=0,n=1,o){let d={symbol:t,timestamp:i,datetime:this.iso8601(i),nonce:void 0},h=[s,r];for(let t=0;t<h.length;t++){let i=h[t],s=[],r=this.safeValue(e,i);for(let e=0;e<r.length;e++)s.push(this.customParseBidAsk(r[e],a,n,o));d[i]=s}return d[s]=this.sortBy(d[s],0,!0),d[r]=this.sortBy(d[r],0),d}async fetchOrderBook(e,t,i={}){let s;await this.loadMarkets();let r=this.market(e),a={symbol:r.id};s=r.linear&&"USDT"===r.settle?await this.v2GetMdV2Orderbook(this.extend(a,i)):void 0!==t&&t<=30?await this.v1GetMdOrderbook(this.extend(a,i)):await this.v1GetMdFullbook(this.extend(a,i));let n=this.safeValue(s,"result",{}),o=this.safeValue2(n,"book","orderbook_p",{}),d=this.safeIntegerProduct(n,"timestamp",1e-6),h=this.customParseOrderBook(o,e,d,"bids","asks",0,1,r);return h.nonce=this.safeInteger(n,"sequence"),h}toEn(e,t){let i=this.numberToString(e),s=new a.Y(i);s.decimals=s.decimals-t,s.reduce();let r=s.toString();return this.parseToInt(r)}toEv(e,t){return void 0===e||void 0===t?e:this.toEn(e,t.valueScale)}toEp(e,t){return void 0===e||void 0===t?e:this.toEn(e,t.priceScale)}fromEn(e,t){if(void 0===e)return;let i=new a.Y(e);return i.decimals=this.sum(i.decimals,t),i.reduce(),i.toString()}fromEp(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"priceScale"))}fromEv(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"valueScale"))}fromEr(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"ratioScale"))}parseOHLCV(e,t){let i;return i=void 0!==t&&t.spot?this.parseNumber(this.fromEv(this.safeString(e,7),t)):this.safeNumber(e,7),[this.safeTimestamp(e,0),this.parseNumber(this.fromEp(this.safeString(e,3),t)),this.parseNumber(this.fromEp(this.safeString(e,4),t)),this.parseNumber(this.fromEp(this.safeString(e,5),t)),this.parseNumber(this.fromEp(this.safeString(e,6),t)),i]}async fetchOHLCV(e,t="1m",i,s,r={}){let a;await this.loadMarkets();let n=this.market(e),o=s,d={symbol:n.id,resolution:this.safeString(this.timeframes,t,t)},h=this.safeInteger2(r,"until","to");r=this.omit(r,["until"]);let l=(n.linear||"USDT"===n.settle)&&(void 0!==i||void 0!==h),c=1e3;if(l&&(c=2e3),void 0===s&&(s=c),d.limit=Math.min(s,c),n.linear||"USDT"===n.settle){if(void 0!==h||void 0!==i){let e=this.parseTimeframe(t);if(void 0!==i?(i=Math.round(i/1e3),d.from=i):i=h/100-c*e,void 0!==h)d.to=Math.round(h/1e3);else{let t=i+c*e,s=this.seconds();t>s&&(t=s),d.to=t}a=await this.publicGetMdV2KlineList(this.extend(d,r))}else a=await this.publicGetMdV2KlineLast(this.extend(d,r))}else{if(void 0!==i){let e=1e3*this.parseTimeframe(t),r=this.milliseconds()-i;s=this.parseToInt(r/e)}a=await this.publicGetMdV2Kline(this.extend(d,r))}let u=this.safeValue(a,"data",{}),f=this.safeList(u,"rows",[]);return this.parseOHLCVs(f,n,t,i,o)}parseTicker(e,t){let i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeIntegerProduct(e,"timestamp",1e-6),a=this.fromEp(this.safeString2(e,"lastEp","closeRp"),t),n=this.fromEr(this.safeString2(e,"turnoverEv","turnoverRv"),t),o=this.safeString(e,"volume");void 0===o&&(o=this.fromEv(this.safeString2(e,"volumeEv","volumeRq"),t));let d=this.fromEp(this.safeString(e,"openEp"),t);return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.fromEp(this.safeString2(e,"highEp","highRp"),t),low:this.fromEp(this.safeString2(e,"lowEp","lowRp"),t),bid:this.fromEp(this.safeString(e,"bidEp"),t),bidVolume:void 0,ask:this.fromEp(this.safeString(e,"askEp"),t),askVolume:void 0,vwap:void 0,open:d,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){let i;await this.loadMarkets();let s=this.market(e),r={symbol:s.id};i=s.swap?s.inverse||"USD"===s.settle?await this.v1GetMdTicker24hr(this.extend(r,t)):await this.v2GetMdV2Ticker24hr(this.extend(r,t)):await this.v1GetMdSpotTicker24hr(this.extend(r,t));let a=this.safeDict(i,"result",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){let i,s,r,a;if(await this.loadMarkets(),void 0!==e){let t=this.safeValue(e,0);i=this.market(t)}[s,t]=this.handleMarketTypeAndParams("fetchTickers",i,t),[r,t]=this.handleSubTypeAndParams("fetchTickers",i,t);let n=this.omit(t,"type");a="spot"===s?await this.v1GetMdSpotTicker24hrAll(n):"inverse"===r||"USD"===this.safeString(i,"settle")?await this.v1GetMdTicker24hrAll(n):await this.v2GetMdV2Ticker24hrAll(n);let o=this.safeList(a,"result",[]);return this.parseTickers(o,e)}async fetchTrades(e,t,i,s={}){let r;await this.loadMarkets();let a=this.market(e),n={symbol:a.id};r=a.linear&&"USDT"===a.settle?await this.v2GetMdV2Trade(this.extend(n,s)):await this.v1GetMdTrade(this.extend(n,s));let o=this.safeValue(r,"result",{}),d=this.safeValue2(o,"trades","trades_p",[]);return this.parseTrades(d,a,t,i)}parseTrade(e,t){let i,s,r,a,n,o,d,h,l,c,u,f,p;let m=this.safeString(e,"symbol"),g=(t=this.safeMarket(m,t)).symbol;if(Array.isArray(e)){let o=e.length;r=this.safeIntegerProduct(e,0,1e-6),o>4&&(a=this.safeString(e,o-4)),n=this.safeStringLower(e,o-3),i=this.safeString(e,o-2),s=this.safeString(e,o-1),"number"==typeof e[o-2]&&(i=this.fromEp(i,t),s=this.fromEv(s,t))}else{if(void 0===(r=this.safeIntegerProduct(e,"transactTimeNs",1e-6))&&(r=this.safeInteger(e,"createdAt")),a=this.safeString2(e,"execId","execID"),f=this.safeString(e,"orderID"),"USDT"===t.settle){let t=this.safeStringLower(e,"side");"buy"===t||"sell"===t?n=t:void 0!==t&&(n="1"===t?"buy":"sell");let r=this.safeString(e,"ordType");if("1"===r?d="market":"2"===r&&(d="limit"),i=this.safeString(e,"execPriceRp"),s=this.safeString(e,"execQtyRq"),o=this.safeString(e,"execValueRv"),l=this.omitZero(this.safeString(e,"execFeeRv")),c=this.safeString(e,"feeRateRr"),void 0!==l){let t=this.safeString(e,"currency");u=this.safeCurrencyCode(t)}else{let t=this.omitZero(this.safeString(e,"ptFeeRv"));void 0!==t&&(l=t,u="PT")}}else if(n=this.safeStringLower(e,"side"),d=this.parseOrderType(this.safeString(e,"ordType")),"MakerFill"===this.safeString(e,"execStatus")&&(p="maker"),i=this.fromEp(this.safeString(e,"execPriceEp"),t),s=this.fromEv(this.safeString(e,"execBaseQtyEv"),t),s=this.safeString(e,"execQty",s),o=this.fromEr(this.safeString2(e,"execQuoteQtyEv","execValueEv"),t),void 0!==(l=this.fromEr(this.omitZero(this.safeString(e,"execFeeEv")),t))){if(c=this.fromEr(this.safeString(e,"feeRateEr"),t),t.spot)u=this.safeCurrencyCode(this.safeString(e,"feeCurrency"));else{let e=this.safeValue(t,"info");if(void 0!==e){let t=this.safeString(e,"settlementCurrency");u=this.safeCurrencyCode(t)}}}else void 0!==(l=this.safeString(e,"ptFeeRv"))&&(u="PT");h={cost:l,rate:c,currency:u}}return this.safeTrade({info:e,id:a,symbol:g,timestamp:r,datetime:this.iso8601(r),order:f,type:d,side:n,takerOrMaker:p,price:i,amount:s,cost:o,fee:h},t)}parseSpotBalance(e){let t;let i={info:e},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){let r=s[e],n=this.safeString(r,"currency"),o=this.safeCurrencyCode(n),d=this.safeValue(this.currencies,o,{}),h=this.safeInteger(d,"valueScale",8),l=this.account(),c=this.safeString(r,"balanceEv"),u=this.safeString(r,"lockedTradingBalanceEv"),f=this.safeString(r,"lockedWithdrawEv"),p=this.fromEn(c,h),m=this.fromEn(u,h),g=this.fromEn(f,h),v=a.Y.stringAdd(m,g),S=this.safeIntegerProduct(r,"lastUpdateTimeNs",1e-6);t=void 0===t?S:Math.max(t,S),l.total=p,l.used=v,i[o]=l}return i.timestamp=t,i.datetime=this.iso8601(t),this.safeBalance(i)}parseSwapBalance(e){let t={info:e},i=this.safeValue(e,"data",{}),s=this.safeValue(i,"account",{}),r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.currency(a),o=this.safeInteger(n,"valueScale",8),d=this.account(),h=this.safeString2(s,"accountBalanceEv","accountBalanceRv"),l=this.safeString2(s,"totalUsedBalanceEv","totalUsedBalanceRv"),c="USDT"!==a;return d.total=c?this.fromEn(h,o):h,d.used=c?this.fromEn(l,o):l,t[a]=d,this.safeBalance(t)}async fetchBalance(e={}){let t,i;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let s=this.safeString(e,"code");e=this.omit(e,["code"]);let a={};if("spot"!==t&&"swap"!==t)throw new r.BadRequest(this.id+" does not support "+t+" markets, only spot and swap");if("swap"===t){let n;if([n,e]=this.handleOptionAndParams(e,"fetchBalance","settle","USDT"),void 0!==s||void 0!==n){let t;t=void 0!==s?s:n;let r=this.currency(t);a.currency=r.id,i="USDT"===r.id?await this.privateGetGAccountsAccountPositions(this.extend(a,e)):await this.privateGetAccountsAccountPositions(this.extend(a,e))}else{if(void 0===this.safeString(e,"currency"))throw new r.ArgumentsRequired(this.id+" fetchBalance() requires a code parameter or a currency or settle parameter for "+t+" type");i=await this.privateGetSpotWallets(this.extend(a,e))}}else i=await this.privateGetSpotWallets(this.extend(a,e));return"swap"===t?this.parseSwapBalance(i):this.parseSpotBalance(i)}parseOrderStatus(e){return this.safeString({Created:"open",Untriggered:"open",Deactivated:"closed",Triggered:"open",Rejected:"rejected",New:"open",PartiallyFilled:"open",Filled:"closed",Canceled:"canceled",Suspended:"canceled",1:"open",2:"canceled",3:"closed",4:"canceled",5:"open",6:"open",7:"closed",8:"canceled"},e,e)}parseOrderType(e){return this.safeString({1:"market",2:"limit",3:"stop",4:"stopLimit",5:"market",6:"limit",7:"market",8:"market",9:"stopLimit",10:"market",Limit:"limit",Market:"market"},e,e)}parseTimeInForce(e){return this.safeString({GoodTillCancel:"GTC",PostOnly:"PO",ImmediateOrCancel:"IOC",FillOrKill:"FOK"},e,e)}parseSpotOrder(e,t){let i;let s=this.safeString(e,"orderID"),r=this.safeString(e,"clOrdID");void 0!==r&&r.length<1&&(r=void 0);let a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.fromEp(this.safeString(e,"priceEp"),t),d=this.fromEv(this.safeString(e,"baseQtyEv"),t),h=this.omitZero(this.fromEv(this.safeString(e,"leavesBaseQtyEv"),t)),l=this.fromEv(this.safeString2(e,"cumBaseQtyEv","cumBaseValueEv"),t),c=this.fromEr(this.safeString2(e,"cumQuoteValueEv","quoteQtyEv"),t),u=this.fromEp(this.safeString(e,"avgPriceEp"),t),f=this.parseOrderStatus(this.safeString(e,"ordStatus")),p=this.safeStringLower(e,"side"),m=this.parseOrderType(this.safeString(e,"ordType")),g=this.safeIntegerProduct2(e,"actionTimeNs","createTimeNs",1e-6),v=this.fromEv(this.safeString(e,"cumFeeEv"),t);void 0!==v&&(i={cost:v,currency:this.safeCurrencyCode(this.safeString(e,"feeCurrency"))});let S=this.parseTimeInForce(this.safeString(e,"timeInForce")),y=this.parseNumber(this.omitZero(this.fromEp(this.safeString(e,"stopPxEp"))));return this.safeOrder({info:e,id:s,clientOrderId:r,timestamp:g,datetime:this.iso8601(g),lastTradeTimestamp:void 0,symbol:n,type:m,timeInForce:S,postOnly:"PO"===S,side:p,price:o,triggerPrice:y,amount:d,cost:c,average:u,filled:l,remaining:h,status:f,fee:i,trades:void 0},t)}parseOrderSide(e){return this.safeString({1:"buy",2:"sell"},e,e)}parseSwapOrder(e,t){let i;let s=this.safeString2(e,"orderID","orderId"),r=this.safeString2(e,"clOrdID","clOrdId");void 0!==r&&r.length<1&&(r=void 0);let a=this.safeString(e,"symbol"),n=this.safeSymbol(a,t);t=this.safeMarket(a,t);let o=this.parseOrderStatus(this.safeString(e,"ordStatus")),d=this.parseOrderSide(this.safeStringLower(e,"side")),h=this.parseOrderType(this.safeString(e,"orderType")),l=this.safeString(e,"priceRp");void 0===l&&(l=this.fromEp(this.safeString(e,"priceEp"),t));let c=this.safeNumber2(e,"orderQty","orderQtyRq"),u=this.safeNumber2(e,"cumQty","cumQtyRq"),f=this.safeNumber2(e,"leavesQty","leavesQtyRq"),p=this.safeIntegerProduct(e,"actionTimeNs",1e-6);void 0===p&&(p=this.safeInteger(e,"createdAt"));let m=this.safeNumber2(e,"cumValue","cumValueRv"),g=this.safeIntegerProduct(e,"transactTimeNs",1e-6);0===g&&(g=void 0);let v=this.parseTimeInForce(this.safeString(e,"timeInForce")),S=this.omitZero(this.safeString2(e,"stopPx","stopPxRp")),y=this.safeValue(e,"reduceOnly");"ReduceOnly"===this.safeString(e,"execInst")&&(y=!0);let w=this.safeString(e,"takeProfitRp"),O=this.safeString(e,"stopLossRp"),b=this.omitZero(this.safeString(e,"execFeeRv")),k=this.omitZero(this.safeString(e,"ptFeeRv"));return void 0!==b?i={cost:b,currency:t.quote}:void 0!==k&&(i={cost:k,currency:"PT"}),this.safeOrder({info:e,id:s,clientOrderId:r,datetime:this.iso8601(p),timestamp:p,lastTradeTimestamp:g,symbol:n,type:h,timeInForce:v,postOnly:"PO"===v,reduceOnly:y,side:d,price:l,triggerPrice:S,takeProfitPrice:w,stopLossPrice:O,amount:c,filled:u,remaining:f,cost:m,average:void 0,status:o,fee:i,trades:void 0})}parseOrder(e,t){let i=this.safeBool(t,"swap",!1),s="closedPnl"in e||"closedPnlRv"in e||"totalPnlRv"in e;return i||s?this.parseSwapOrder(e,t):this.parseSpotOrder(e,t)}async createOrder(e,t,i,s,n,o={}){let d;await this.loadMarkets();let h=this.market(e),l=this.capitalize(i);t=this.capitalize(t);let c=this.safeBool(o,"reduceOnly"),u={symbol:h.id,side:l,ordType:t},f=this.safeString2(o,"clOrdID","clientOrderId"),p=this.safeValue(o,"stopLoss"),m=void 0!==p,g=this.safeValue(o,"takeProfit"),v=void 0!==g;if(void 0===f){let e=this.safeString(this.options,"brokerId","CCXT123456");void 0!==e&&(u.clOrdID=e+this.uuid16())}else u.clOrdID=f,o=this.omit(o,["clOrdID","clientOrderId"]);let S=this.safeStringN(o,["stopPx","stopPrice","triggerPrice"]);if(void 0!==S&&("USDT"===h.settle?u.stopPxRp=this.priceToPrecision(e,S):u.stopPxEp=this.toEp(S,h)),o=this.omit(o,["stopPx","stopPrice","stopLoss","takeProfit","triggerPrice"]),h.spot){let e=this.safeValue(o,"qtyType","ByBase");if(("Market"===t||"Stop"===t||"MarketIfTouched"===t)&&void 0!==n&&(e="ByQuote"),void 0!==S&&("Limit"===t?u.ordType="StopLimit":"Market"===t&&(u.ordType="Stop"),u.trigger="ByLastPrice"),u.qtyType=e,"ByQuote"===e){let t=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),this.options.createOrderByQuoteRequiresPrice){if(void 0!==n){let e=this.numberToString(s),i=this.numberToString(n),r=a.Y.stringMul(e,i);t=this.parseNumber(r)}else if(void 0===t)throw new r.ArgumentsRequired(this.id+" createOrder() "+e+" requires a price argument or a cost parameter")}t=void 0===t?s:t;let i=this.numberToString(t);u.quoteQtyEv=this.toEv(i,h)}else{let e=this.numberToString(s);u.baseQtyEv=this.toEv(e,h)}}else if(h.swap){let a=this.safeBool(o,"hedged",!1);o=this.omit(o,"hedged");let n=this.safeStringLower(o,"posSide");if(void 0===n&&(a?(c&&(i="buy"===i?"sell":"buy"),n="buy"===i?"Long":"Short"):n="Merged"),n=this.capitalize(n),u.posSide=n,"USDT"===h.settle?u.orderQtyRq=s:u.orderQty=this.parseToInt(s),void 0!==S){let e;let s=this.safeString(o,"triggerType","ByMarkPrice");if(u.triggerType=s,[e,o]=this.handleParamString(o,"triggerDirection"),void 0===e)throw new r.ArgumentsRequired(this.id+" createOrder() also requires a 'triggerDirection' parameter with either 'up' or 'down' value");"up"===e?"sell"===i?u.ordType="Market"===t?"MarketIfTouched":"LimitIfTouched":"buy"===i&&(u.ordType="Market"===t?"Stop":"StopLimit"):"down"===e&&("sell"===i?u.ordType="Market"===t?"Stop":"StopLimit":"buy"===i&&(u.ordType="Market"===t?"MarketIfTouched":"LimitIfTouched"))}if(m||v){if(m){let t=this.safeValue2(p,"triggerPrice","stopPrice");if(void 0===t)throw new r.InvalidOrder(this.id+' createOrder() requires a trigger price in params["stopLoss"]["triggerPrice"] for a stop loss order');"USDT"===h.settle?u.stopLossRp=this.priceToPrecision(e,t):u.stopLossEp=this.toEp(t,h);let i=this.safeString2(p,"triggerPriceType","slTrigger");void 0!==i&&(u.slTrigger=this.safeString(this.options.triggerPriceTypesMap,i,i));let s=this.safeString(p,"price");void 0!==s&&(u.slPxRp=this.priceToPrecision(e,s))}if(v){let t=this.safeValue2(g,"triggerPrice","stopPrice");if(void 0===t)throw new r.InvalidOrder(this.id+' createOrder() requires a trigger price in params["takeProfit"]["triggerPrice"] for a take profit order');"USDT"===h.settle?u.takeProfitRp=this.priceToPrecision(e,t):u.takeProfitEp=this.toEp(t,h);let i=this.safeString2(g,"triggerPriceType","tpTrigger");void 0!==i&&(u.tpTrigger=this.safeString(this.options.triggerPriceTypesMap,i,i));let s=this.safeString(g,"price");void 0!==s&&(u.tpPxRp=this.priceToPrecision(e,s))}}}if("Limit"===t||"StopLimit"===t||"LimitIfTouched"===t){if("USDT"===h.settle)u.priceRp=this.priceToPrecision(e,n);else{let e=this.numberToString(n);u.priceEp=this.toEp(e,h)}}let y=this.safeString(o,"takeProfitPrice");void 0!==y&&("USDT"===h.settle?u.takeProfitRp=this.priceToPrecision(e,y):u.takeProfitEp=this.toEp(y,h),o=this.omit(o,"takeProfitPrice"));let w=this.safeString(o,"stopLossPrice");void 0!==w&&("USDT"===h.settle?u.stopLossRp=this.priceToPrecision(e,w):u.stopLossEp=this.toEp(w,h),o=this.omit(o,"stopLossPrice")),o=this.omit(o,"reduceOnly"),d="USDT"===h.settle?await this.privatePostGOrders(this.extend(u,o)):h.contract?await this.privatePostOrders(this.extend(u,o)):await this.privatePostSpotOrders(this.extend(u,o));let O=this.safeDict(d,"data",{});return this.parseOrder(O,h)}async editOrder(e,t,i,s,r,a,n={}){let o;await this.loadMarkets();let d=this.market(t),h={symbol:d.id},l=this.safeString2(n,"clientOrderId","clOrdID");n=this.omit(n,["clientOrderId","clOrdID"]);let c="USDT"===d.settle;void 0!==l?h.clOrdID=l:h.orderID=e,void 0!==a&&(c?h.priceRp=this.priceToPrecision(d.symbol,a):h.priceEp=this.toEp(a,d));let u=this.safeString(n,"baseQtyEv");n=this.omit(n,["baseQtyEv"]),void 0!==u?h.baseQtyEV=u:void 0!==r&&(c?h.orderQtyRq=this.amountToPrecision(d.symbol,r):h.baseQtyEV=this.toEv(r,d));let f=this.safeStringN(n,["triggerPrice","stopPx","stopPrice"]);void 0!==f&&(c?h.stopPxRp=this.priceToPrecision(t,f):h.stopPxEp=this.toEp(f,d)),n=this.omit(n,["triggerPrice","stopPx","stopPrice"]),c?(void 0===this.safeString(n,"posSide")&&(h.posSide="Merged"),o=await this.privatePutGOrdersReplace(this.extend(h,n))):o=d.swap?await this.privatePutOrdersReplace(this.extend(h,n)):await this.privatePutSpotOrders(this.extend(h,n));let p=this.safeDict(o,"data",{});return this.parseOrder(p,d)}async cancelOrder(e,t,i={}){let s;if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let a=this.market(t),n={symbol:a.id},o=this.safeString2(i,"clientOrderId","clOrdID");i=this.omit(i,["clientOrderId","clOrdID"]),void 0!==o?n.clOrdID=o:n.orderID=e,"USDT"===a.settle?(void 0===this.safeString(i,"posSide")&&(n.posSide="Merged"),s=await this.privateDeleteGOrdersCancel(this.extend(n,i))):s=a.swap?await this.privateDeleteOrdersCancel(this.extend(n,i)):await this.privateDeleteSpotOrders(this.extend(n,i));let d=this.safeDict(s,"data",{});return this.parseOrder(d,a)}async cancelAllOrders(e,t={}){let i;if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();let s=this.market(e),a=this.safeValue2(t,"stop","trigger",!1);t=this.omit(t,["stop","trigger"]);let n={symbol:s.id};return a&&(n.untriggerred=a),i="USDT"===s.settle?await this.privateDeleteGOrdersAll(this.extend(n,t)):s.swap?await this.privateDeleteOrdersAll(this.extend(n,t)):await this.privateDeleteSpotOrdersAll(this.extend(n,t)),[this.safeOrder({info:i})]}async fetchOrder(e,t,i={}){let s;if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let a=this.market(t),n={symbol:a.id},o=this.safeString2(i,"clientOrderId","clOrdID");i=this.omit(i,["clientOrderId","clOrdID"]),void 0!==o?n.clOrdID=o:n.orderID=e,s="USDT"===a.settle?await this.privateGetApiDataGFuturesOrdersByOrderId(this.extend(n,i)):a.spot?await this.privateGetApiDataSpotsOrdersByOrderId(this.extend(n,i)):await this.privateGetExchangeOrder(this.extend(n,i));let d=this.safeValue(s,"data",{}),h=d;if(Array.isArray(d)){if(d.length<1){if(void 0!==o)throw new r.OrderNotFound(this.id+" fetchOrder() "+t+" order with clientOrderId "+o+" not found");throw new r.OrderNotFound(this.id+" fetchOrder() "+t+" order with id "+e+" not found")}h=this.safeDict(d,0,{})}else if(a.spot){let e=this.safeList(d,"rows",[]);h=this.safeDict(e,0,{})}return this.parseOrder(h,a)}async fetchOrders(e,t,i,s={}){let a;if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let n=this.market(e),o={symbol:n.id};void 0!==t&&(o.start=t),void 0!==i&&(o.limit=i),"USDT"===n.settle?(o.currency=n.settle,a=await this.privateGetExchangeOrderV2OrderList(this.extend(o,s))):a=n.swap?await this.privateGetExchangeOrderList(this.extend(o,s)):await this.privateGetApiDataSpotsOrders(this.extend(o,s));let d=this.safeValue(a,"data",{}),h=this.safeList(d,"rows",d);return this.parseOrders(h,n,t,i)}async fetchOpenOrders(e,t,i,s={}){let a;if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();let n=this.market(e),o={symbol:n.id};try{a="USDT"===n.settle?await this.privateGetGOrdersActiveList(this.extend(o,s)):n.swap?await this.privateGetOrdersActiveList(this.extend(o,s)):await this.privateGetSpotOrders(this.extend(o,s))}catch(e){if(e instanceof r.OrderNotFound)return[];throw e}let d=this.safeValue(a,"data",{});if(Array.isArray(d))return this.parseOrders(d,n,t,i);{let e=this.safeList(d,"rows",[]);return this.parseOrders(e,n,t,i)}}async fetchClosedOrders(e,t,i,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let n={};void 0!==r&&(n.symbol=r.id),void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i),void 0===e||"USDT"===this.safeString(r,"settle")?(n.currency=this.safeString(s,"settle","USDT"),a=await this.privateGetExchangeOrderV2OrderList(this.extend(n,s))):a=r.swap?await this.privateGetExchangeOrderList(this.extend(n,s)):await this.privateGetExchangeSpotOrder(this.extend(n,s));let o=this.safeValue(a,"data",{});if(Array.isArray(o))return this.parseOrders(o,r,t,i);{let e=this.safeList(o,"rows",[]);return this.parseOrders(e,r,t,i)}}async fetchMyTrades(e,t,i,s={}){let r,a,n;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let o={};void 0!==i&&(i=Math.min(200,i),o.limit=i);let d=void 0===e||"USDT"===this.safeString(r,"settle");return d?(o.currency="USDT",o.offset=0,void 0===i&&(o.limit=200)):o.symbol=r.id,void 0!==t&&(o.start=t),a=d?await this.privateGetExchangeOrderV2TradingList(this.extend(o,s)):r.swap?await this.privateGetExchangeOrderTrade(this.extend(o,s)):await this.privateGetExchangeSpotOrderTrades(this.extend(o,s)),d?n=this.safeValue(a,"data",[]):(n=this.safeValue(a,"data",{}),n=this.safeValue(n,"rows",[])),this.parseTrades(n,r,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s={currency:i.id},r=this.safeDict(this.options,"defaultNetworks"),a=this.safeStringUpper(r,e),n=this.safeDict(this.options,"networks",{}),o=this.safeStringUpper(t,"network",a);void 0===(o=this.safeString(n,o,o))?s.chainName=i.id:(s.chainName=o,t=this.omit(t,"network"));let d=await this.privateGetPhemexUserWalletsV2DepositAddress(this.extend(s,t)),h=this.safeValue(d,"data",{}),l=this.safeString(h,"address"),c=this.safeString(h,"tag");return this.checkAddress(l),{info:d,currency:e,network:void 0,address:l,tag:c}}async fetchDeposits(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a=await this.privateGetExchangeWalletsDepositList(s),n=this.safeList(a,"data",[]);return this.parseTransactions(n,r,t,i)}async fetchWithdrawals(e,t,i,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));let a=await this.privateGetExchangeWalletsWithdrawList(s),n=this.safeList(a,"data",[]);return this.parseTransactions(n,r,t,i)}parseTransactionStatus(e){return this.safeString({Success:"ok",Succeed:"ok",Rejected:"failed","Security check failed":"failed",SecurityCheckFailed:"failed",Expired:"failed","Address Risk":"failed","Security Checking":"pending",SecurityChecking:"pending","Pending Review":"pending","Pending Transfer":"pending",AmlCsApporve:"pending",New:"pending",Confirmed:"pending",Cancelled:"canceled"},e,e)}parseTransaction(e,t){let i;let s=this.safeString(e,"id"),r=this.safeString(e,"address"),a=void 0,n=this.safeString(e,"txHash"),o=this.safeString(e,"currency"),d=(t=this.safeCurrency(o,t)).code,h=this.safeString(e,"chainName"),l=this.safeIntegerN(e,["createdAt","submitedAt","submittedAt"]),c=this.safeStringLower(e,"type"),u=this.parseNumber(this.fromEn(this.safeString(e,"feeEv"),t.valueScale));void 0===u&&(u=this.safeNumber(e,"feeRv")),void 0!==u&&(c="withdrawal",i={cost:u,currency:d});let f=this.parseTransactionStatus(this.safeString(e,"status")),p=this.parseNumber(this.fromEn(this.safeString(e,"amountEv"),t.valueScale));return void 0===p&&(p=this.safeNumber(e,"amountRv")),{info:e,id:s,txid:n,timestamp:l,datetime:this.iso8601(l),network:this.networkIdToCode(h),address:r,addressTo:r,addressFrom:void 0,tag:a,tagTo:a,tagFrom:void 0,type:c,amount:p,currency:d,status:f,updated:void 0,comment:void 0,internal:void 0,fee:i}}async fetchPositions(e,t={}){let i,s,r,a;await this.loadMarkets(),e=this.marketSymbols(e);let n=this.safeString2(t,"currency","code","USD");t=this.omit(t,["currency","code"]);let o=this.safeString(e,0);void 0!==o?(s=(r=this.market(o)).settle,n=r.settle):[s,t]=this.handleOptionAndParams(t,"fetchPositions","settle",n),[i,t]=this.handleSubTypeAndParams("fetchPositions",r,t);let d="USDT"===s;d?n="USDT":"BTC"===s?n="BTC":void 0===n&&(n="linear"===i?"USD":"BTC");let h={currency:this.currency(n).id};if(d){let e;[e,t]=this.handleOptionAndParams(t,"fetchPositions","method","privateGetGAccountsAccountPositions"),a="privateGetGAccountsAccountPositions"===e?await this.privateGetGAccountsAccountPositions(this.extend(h,t)):await this.privateGetAccountsPositions(this.extend(h,t))}else a=await this.privateGetAccountsAccountPositions(this.extend(h,t));let l=this.safeValue(a,"data",{}),c=this.safeValue(l,"positions",[]),u=[];for(let e=0;e<c.length;e++){let t=c[e];u.push(this.parsePosition(t))}return this.filterByArrayPositions(u,"symbol",e,!1)}parsePosition(e,t){let i,s;let r=this.safeString(e,"symbol"),n=(t=this.safeMarket(r,t)).symbol,o=this.safeString2(e,"positionMargin","positionMarginRv"),d=this.safeString2(e,"value","valueRv"),h=this.safeString2(e,"maintMarginReq","maintMarginReqRr"),l=a.Y.stringMul(d,h),c=this.safeString2(e,"assignedPosBalance","assignedPosBalanceRv"),u=a.Y.stringDiv(c,d),f=this.safeNumber2(e,"liquidationPrice","liquidationPriceRp"),p=this.safeString2(e,"markPrice","markPriceRp"),m=this.safeString(e,"size"),g=this.safeValue(t,"contractSize"),v=this.numberToString(g),S=this.parseNumber(a.Y.stringAbs(this.safeString2(e,"leverage","leverageRr"))),y=this.safeString2(e,"avgEntryPrice","avgEntryPriceRp"),w=this.safeString(e,"side");void 0!==w&&(i="Buy"===w?"long":"short"),s="USD"===this.safeString(e,"currency")?"long"===i?a.Y.stringSub(p,y):a.Y.stringSub(y,p):"long"===i?a.Y.stringSub(a.Y.stringDiv("1",y),a.Y.stringDiv("1",p)):a.Y.stringSub(a.Y.stringDiv("1",p),a.Y.stringDiv("1",y));let O=a.Y.stringMul(a.Y.stringMul(s,m),v),b=a.Y.stringDiv(l,o),k=this.safeValue(e,"crossMargin");return this.safePosition({info:e,id:void 0,symbol:n,contracts:this.parseNumber(m),contractSize:g,unrealizedPnl:this.parseNumber(O),leverage:S,liquidationPrice:f,collateral:this.parseNumber(o),notional:this.parseNumber(d),markPrice:this.parseNumber(p),lastPrice:void 0,entryPrice:this.parseNumber(y),timestamp:void 0,lastUpdateTimestamp:void 0,initialMargin:this.parseNumber(c),initialMarginPercentage:this.parseNumber(u),maintenanceMargin:this.parseNumber(l),maintenanceMarginPercentage:this.parseNumber(h),marginRatio:this.parseNumber(b),datetime:void 0,marginMode:k?"cross":"isolated",side:i,hedged:!1,percentage:void 0,stopLossPrice:void 0,takeProfitPrice:void 0})}async fetchFundingHistory(e,t,i,s={}){let a;if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");await this.loadMarkets();let n=this.market(e),o={symbol:n.id};if(void 0!==i){if(i>200)throw new r.BadRequest(this.id+" fetchFundingHistory() limit argument cannot exceed 200");o.limit=i}a="USDT"===n.settle?await this.privateGetApiDataGFuturesFundingFees(this.extend(o,s)):await this.privateGetApiDataFuturesFundingFees(this.extend(o,s));let d=this.safeValue(a,"data",{}),h=this.safeValue(d,"rows",[]),l=[];for(let e=0;e<h.length;e++){let t=h[e],i=this.safeInteger(t,"createTime"),s=this.safeString2(t,"execFeeEv","execFeeRv"),r=this.safeCurrencyCode(this.safeString(t,"currency"));l.push({info:t,symbol:this.safeString(t,"symbol"),code:r,timestamp:i,datetime:this.iso8601(i),id:void 0,amount:this.parseFundingFeeToPrecision(s,n,r)})}return l}parseFundingFeeToPrecision(e,t,i){if(void 0===e||void 0===i)return e;if("USDT"!==t.settle){let t=this.safeCurrency(i),s=this.safeString(t.info,"valueScale"),r=this.parsePrecision(s);e=a.Y.stringMul(e,r)}return e}async fetchFundingRate(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");let s={symbol:i.id},a={};a=i.linear?await this.v2GetMdV2Ticker24hr(this.extend(s,t)):await this.v1GetMdTicker24hr(this.extend(s,t));let n=this.safeValue(a,"result",{});return this.parseFundingRate(n,i)}parseFundingRate(e,t){let i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeIntegerProduct(e,"timestamp",1e-6),a=this.fromEp(this.safeString(e,"markEp"),t),n=this.fromEp(this.safeString(e,"indexEp"),t),o=this.fromEr(this.safeString(e,"fundingRateEr"),t),d=this.fromEr(this.safeString(e,"predFundingRateEr"),t);return{info:e,symbol:s,markPrice:this.safeNumber(e,"markPriceRp",a),indexPrice:this.safeNumber(e,"indexPriceRp",n),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:r,datetime:this.iso8601(r),fundingRate:this.safeNumber(e,"fundingRateRr",o),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:this.safeNumber(e,"predFundingRateRr",d),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0,interval:void 0}}async setMargin(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={symbol:s.id,posBalanceEv:this.toEv(t,s)},a=await this.privatePostPositionsAssign(this.extend(r,i));return this.extend(this.parseMarginModification(a,s),{amount:t})}parseMarginStatus(e){return this.safeString({0:"ok"},e,e)}parseMarginModification(e,t){t=this.safeMarket(void 0,t);let i=this.safeValue(t,"inverse");return{info:e,symbol:this.safeSymbol(void 0,t),type:"set",marginMode:"isolated",amount:void 0,total:void 0,code:t[i?"base":"quote"],status:this.parseMarginStatus(this.safeString(e,"code")),timestamp:void 0,datetime:void 0}}async setMarginMode(e,t,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");await this.loadMarkets();let s=this.market(t);if(!s.swap||"USDT"===s.settle)throw new r.BadSymbol(this.id+" setMarginMode() supports swap (non USDT based) contracts only");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new r.BadRequest(this.id+" setMarginMode() marginMode argument should be isolated or cross");let a=this.safeInteger(i,"leverage");if("cross"===e&&(a=0),void 0===a)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a leverage parameter");let n={symbol:s.id,leverage:a};return await this.privatePutPositionsLeverage(this.extend(n,i))}async setPositionMode(e,t,i={}){this.checkRequiredArgument("setPositionMode",t,"symbol"),await this.loadMarkets();let s=this.market(t);if("USDT"!==s.settle)throw new r.BadSymbol(this.id+" setPositionMode() supports USDT settled markets only");let a={symbol:s.id};return e?a.targetPosMode="Hedged":a.targetPosMode="OneWay",await this.privatePutGPositionsSwitchPosModeSync(this.extend(a,i))}async fetchLeverageTiers(e,t={}){if(await this.loadMarkets(),void 0!==e){let t=this.safeValue(e,0);if("USD"!==this.market(t).settle)throw new r.BadSymbol(this.id+" fetchLeverageTiers() supports USD settled markets only")}let i=await this.publicGetCfgV2Products(t),s=this.safeValue(i,"data",{}),a=this.safeList(s,"riskLimits");return this.parseLeverageTiers(a,e,"symbol")}parseMarketLeverageTiers(e,t){let i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).info.riskLimits,r=[],a=0;for(let e=0;e<s.length;e++){let n=s[e],o=this.safeInteger(n,"limit");r.push({tier:this.sum(e,1),symbol:this.safeSymbol(i,t),currency:t.settle,minNotional:a,maxNotional:o,maintenanceMarginRate:this.safeString(n,"maintenanceMargin"),maxLeverage:void 0,info:n}),a=o}return r}sign(e,t="public",i="GET",s={},r,a){let n=this.omit(s,this.extractParams(e)),d="/"+this.implodeParams(e,s),h=d,l="";if(("GET"===i||"DELETE"===i||"PUT"===i||"/positions/assign"===h)&&Object.keys(n).length&&(h+="?"+(l=this.urlencodeWithArrayRepeat(n))),"private"===t){this.checkRequiredCredentials();let t=this.seconds(),n=this.safeInteger(this.options,"x-phemex-request-expiry",60),h=this.sum(t,n).toString();r={"x-phemex-access-token":this.apiKey,"x-phemex-request-expiry":h};let c="";if("POST"===i){if(("g-orders"===e||"spot/orders"===e||"orders"===e)&&void 0===this.safeString(s,"clOrdID")){let e=this.safeString(this.options,"brokerId","CCXT123456");s.clOrdID=e+this.uuid16()}a=c=this.json(s),r["Content-Type"]="application/json"}let u=d+l+h+c;r["x-phemex-request-signature"]=this.hmac(this.encode(u),this.encode(this.secret),o.s)}return{url:h=this.implodeHostname(this.urls.api[t])+h,method:i,body:a,headers:r}}async setLeverage(e,t,i={}){let s;if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<-100||e>100)throw new r.BadRequest(this.id+" setLeverage() leverage should be between -100 and 100");await this.loadMarkets();let a=this.safeBool(i,"hedged",!1),n=this.safeInteger(i,"longLeverageRr"),o=this.safeInteger(i,"shortLeverageRr"),d=this.market(t),h={symbol:d.id};return"USDT"===d.settle?(a||void 0!==n||void 0!==o?(h.longLeverageRr=void 0!==n?n:e,h.shortLeverageRr=void 0!==o?o:e):h.leverageRr=e,s=await this.privatePutGPositionsLeverage(this.extend(h,i))):(h.leverage=e,s=await this.privatePutPositionsLeverage(this.extend(h,i))),s}async transfer(e,t,i,s,r={}){let a,n;await this.loadMarkets();let o=this.currency(e),d=this.safeValue(this.options,"accountsByType",{}),h=this.safeString(d,i,i),l=this.safeString(d,s,s),c=this.toEv(t,o);if("spot"===h&&"future"===l?a=2:"future"===h&&"spot"===l&&(a=1),void 0!==a){let e={currency:o.id,moveOp:a,amountEv:c},t=await this.privatePostAssetsTransfer(this.extend(e,r)),i=this.safeValue(t,"data",{});n=this.parseTransfer(i,o)}else{let e={fromUserId:h,toUserId:l,amountEv:c,currency:o.id,bizType:this.safeString(r,"bizType","SPOT")},t=await this.privatePostAssetsUniversalTransfer(this.extend(e,r));n=this.parseTransfer(t)}let u=this.safeValue(this.options,"transfer",{});return this.safeBool(u,"fillResponseFromRequest",!0)&&(void 0===n.fromAccount&&(n.fromAccount=i),void 0===n.toAccount&&(n.toAccount=s),void 0===n.amount&&(n.amount=t),void 0===n.currency&&(n.currency=e)),n}async fetchTransfers(e,t,i,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchTransfers() requires a code argument");let a=this.currency(e),n={currency:a.id};void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i);let o=await this.privateGetAssetsTransfer(this.extend(n,s)),d=this.safeValue(o,"data",{}),h=this.safeList(d,"rows",[]);return this.parseTransfers(h,a,t,i)}parseTransfer(e,t){let i,s;let r=this.safeString(e,"linkKey"),a=this.safeString(e,"status"),n=this.safeString(e,"amountEv"),o=this.fromEv(n),d=this.safeString(e,"currency"),h=this.safeCurrencyCode(d,t),l=this.safeInteger(e,"side");1===l?(i="swap",s="spot"):2===l&&(i="spot",s="swap");let c=this.safeInteger(e,"createTime");return{info:e,id:r,timestamp:c,datetime:this.iso8601(c),currency:h,amount:o,fromAccount:i,toAccount:s,status:this.parseTransferStatus(a)}}parseTransferStatus(e){return this.safeString({3:"rejected",6:"canceled",10:"ok",11:"failed"},e,e)}async fetchFundingRateHistory(e,t,i,s={}){let a;if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();let n=this.market(e),o="USDT"===n.settle;if(!n.swap)throw new r.BadRequest(this.id+" fetchFundingRateHistory() supports swap contracts only");let d=!1;if([d,s]=this.handleOptionAndParams(s,"fetchFundingRateHistory","paginate"),d)return await this.fetchPaginatedCallDeterministic("fetchFundingRateHistory",e,t,i,"8h",s,100);let h={symbol:o?"."+n.id+"FR8H":"."+n.baseId+"FR8H"};void 0!==t&&(h.start=t),void 0!==i&&(h.limit=i),[h,s]=this.handleUntilOption("end",h,s),a=o?await this.v2GetApiDataPublicDataFundingRateHistory(this.extend(h,s)):await this.v1GetApiDataPublicDataFundingRateHistory(this.extend(h,s));let l=this.safeValue(a,"data",{}),c=this.safeValue(l,"rows"),u=[];for(let t=0;t<c.length;t++){let i=c[t],s=this.safeInteger(i,"fundingTime");u.push({info:i,symbol:e,fundingRate:this.safeNumber(i,"fundingRate"),timestamp:s,datetime:this.iso8601(s)})}let f=this.sortBy(u,"timestamp");return this.filterBySymbolSinceLimit(f,e,t,i)}async withdraw(e,t,i,s,a={}){let n,o;[s,a]=this.handleWithdrawTagAndParams(s,a),await this.loadMarkets(),this.checkAddress(i);let d=this.currency(e);[n,a]=this.handleNetworkCodeAndParams(a),void 0!==n&&(o=this.networkCodeToId(n));let h=this.safeValue(this.options,"stableCoins");if(void 0===o){if(this.inArray(e,h))throw new r.ArgumentsRequired(this.id+' withdraw () requires an extra argument params["network"]');o=d.id}let l={currency:d.id,address:i,amount:t,chainName:o.toUpperCase()};void 0!==s&&(l.addressTag=s);let c=await this.privatePostPhemexWithdrawWalletsApiCreateWithdraw(this.extend(l,a)),u=this.safeDict(c,"data",{});return this.parseTransaction(u,d)}async fetchOpenInterest(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.contract)throw new r.BadRequest(this.id+" fetchOpenInterest is only supported for contract markets.");let s={symbol:i.id},a=await this.v2GetMdV2Ticker24hr(this.extend(s,t)),n=this.safeDict(a,"result");return this.parseOpenInterest(n,i)}parseOpenInterest(e,t){let i=this.safeInteger(e,"timestamp")/1e6,s=this.safeString(e,"symbol");return this.safeOpenInterest({info:e,symbol:this.safeSymbol(s,t),baseVolume:this.safeString(e,"volumeRq"),quoteVolume:void 0,openInterestAmount:this.safeString(e,"openInterestRv"),openInterestValue:void 0,timestamp:i,datetime:this.iso8601(i)},t)}handleErrors(e,t,i,s,a,n,o,d,h){if(void 0===o)return;let l=this.safeValue(o,"error",o),c=this.safeString(l,"code"),u=this.safeString(l,"msg");if(void 0!==c&&"0"!==c){let e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,c,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e),new r.ExchangeError(e)}}}}}]);